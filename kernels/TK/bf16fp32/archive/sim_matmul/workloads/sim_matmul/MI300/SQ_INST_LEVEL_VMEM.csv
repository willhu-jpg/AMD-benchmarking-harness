Dispatch_ID,Kernel_Name,GPU_ID,queue-id,queue-index,pid,tid,Grid_Size,Workgroup_Size,LDS_Per_Workgroup,Scratch_Per_Workitem,Arch_VGPR,Accum_VGPR,SGPR,wave_size,sig,obj,SQ_INSTS_VMEM,SQ_INST_LEVEL_VMEM,SQ_ACCUM_PREV_HIRES,SQ_INSTS_VALU_CVT,SQ_INSTS_VMEM_WR,SQ_INSTS_VMEM_RD,SQ_INSTS_SALU,SQ_INSTS_VSKIPPED,TA_TA_BUSY_sum,TA_BUFFER_WAVEFRONTS_sum,TD_TD_BUSY_sum,TD_TC_STALL_sum,TCP_GATE_EN1_sum,TCP_GATE_EN2_sum,TCP_TD_TCP_STALL_CYCLES_sum,TCP_TCR_TCP_STALL_CYCLES_sum,TCC_CYCLE[0],TCC_RW_REQ[0],TCC_HIT[0],TCC_MISS[0],TCC_CYCLE[1],TCC_RW_REQ[1],TCC_HIT[1],TCC_MISS[1],TCC_CYCLE[2],TCC_RW_REQ[2],TCC_HIT[2],TCC_MISS[2],TCC_CYCLE[3],TCC_RW_REQ[3],TCC_HIT[3],TCC_MISS[3],TCC_CYCLE[4],TCC_RW_REQ[4],TCC_HIT[4],TCC_MISS[4],TCC_CYCLE[5],TCC_RW_REQ[5],TCC_HIT[5],TCC_MISS[5],TCC_CYCLE[6],TCC_RW_REQ[6],TCC_HIT[6],TCC_MISS[6],TCC_CYCLE[7],TCC_RW_REQ[7],TCC_HIT[7],TCC_MISS[7],TCC_CYCLE[8],TCC_RW_REQ[8],TCC_HIT[8],TCC_MISS[8],TCC_CYCLE[9],TCC_RW_REQ[9],TCC_HIT[9],TCC_MISS[9],TCC_CYCLE[10],TCC_RW_REQ[10],TCC_HIT[10],TCC_MISS[10],TCC_CYCLE[11],TCC_RW_REQ[11],TCC_HIT[11],TCC_MISS[11],TCC_CYCLE[12],TCC_RW_REQ[12],TCC_HIT[12],TCC_MISS[12],TCC_CYCLE[13],TCC_RW_REQ[13],TCC_HIT[13],TCC_MISS[13],TCC_CYCLE[14],TCC_RW_REQ[14],TCC_HIT[14],TCC_MISS[14],TCC_CYCLE[15],TCC_RW_REQ[15],TCC_HIT[15],TCC_MISS[15],CPC_CPC_STAT_BUSY,CPC_CPC_STAT_IDLE,CPF_CPF_STAT_BUSY,CPF_CPF_STAT_STALL,SPI_CSN_WINDOW_VALID,SPI_CSN_BUSY,GRBM_SPI_BUSY,DispatchNs,Start_Timestamp,End_Timestamp,CompleteNs
0,"void at::native::(anonymous namespace)::distribution_elementwise_grid_stride_kernel<float, 4, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}>(long, at::PhiloxCudaState, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}) [clone .kd]",2,0,0,2176,2176,622592,256,0,0,56,0,48,64,0x0,0x78c49c01bf80,1048576,4028066,322087052,1070080,1048576,0,5243392,0,24975882.0,0.0,38961824.0,36664034.0,50417954.0,41411998.0,34.0,0.0,1430674,131872,66316,65560,1430674,131712,66160,65552,1430674,131712,66160,65552,1430674,131712,66160,65552,1430674,131712,66160,65560,1430674,131392,65848,65576,1430674,131712,66160,65574,1430674,131712,66160,65552,1430674,131872,66316,65560,1430674,131712,66160,65552,1430674,131712,66160,65552,1430674,131712,66160,65552,1430674,131712,66160,65562,1430674,131392,65848,65575,1430674,131712,66160,65577,1430674,131712,66160,65552,921545,509129,1430674,1224,5715968,5253202,1319962,2071948103631430,2072010192658723,2072010192746893,2071948113139249
1,"void at::native::vectorized_elementwise_kernel<8, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul> >(int, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,1,2176,2176,8388608,256,0,0,20,4,32,64,0x0,0x788c79446d40,262144,16558651,1324649804,0,131072,131072,1835008,0,32661414.0,0.0,49568835.0,47127269.0,50991396.0,49595381.0,94071.0,43101132.0,1461694,197248,66160,131088,1461694,197328,66236,131092,1461694,197248,66160,131088,1461694,197008,65924,131084,1461694,196608,65536,131083,1461694,196928,65848,131103,1461694,196928,65848,131114,1461694,196928,65848,131103,1461694,197248,66160,131088,1461694,197328,66236,131092,1461694,197248,66160,131088,1461694,197008,65924,131084,1461694,196608,65536,131084,1461694,196928,65848,131107,1461694,196928,65848,131114,1461694,196928,65848,131098,1461694,0,1461694,78,5846776,5320060,1335936,2071948117791839,2072010198264591,2072010198356086,2071948118467077
2,"void at::native::(anonymous namespace)::distribution_elementwise_grid_stride_kernel<float, 4, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}>(long, at::PhiloxCudaState, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}) [clone .kd]",2,0,2,2176,2176,622592,256,0,0,56,0,48,64,0x0,0x78c49c01bf80,1048576,3882039,310428644,1070080,1048576,0,5243392,0,24421716.0,0.0,38778392.0,36456024.0,50330883.0,41303260.0,2.0,0.0,1920541,131712,66160,65552,1920541,131712,66160,65552,1920541,131872,66316,65556,1920541,131712,66160,65552,1920541,131712,66160,65556,1920541,131392,65848,65552,1920541,131712,66160,65560,1920541,131712,66160,65552,1920541,131712,66160,65552,1920541,131712,66160,65552,1920541,131872,66316,65556,1920541,131712,66160,65552,1920541,131712,66160,65556,1920541,131392,65848,65552,1920541,131712,66160,65560,1920541,131712,66160,65552,1411061,509480,1920541,1338,7682164,5250738,1318160,2071948118441950,2072010198356086,2072010198442294,2071948120248241
3,"void at::native::vectorized_elementwise_kernel<8, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul> >(int, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,3,2176,2176,8388608,256,0,0,20,4,32,64,0x0,0x788c79446d40,262144,16991538,1359294668,0,131072,131072,1835008,0,33621009.0,0.0,51402028.0,48956025.0,53268039.0,51432850.0,95860.0,44053352.0,2447594,197248,66160,131096,2447594,197248,66160,131088,2447594,197248,66160,131092,2447594,197088,66000,131088,2447594,196608,65536,131105,2447594,196928,65848,131128,2447594,196928,65848,131093,2447594,196928,65848,131080,2447594,197248,66160,131096,2447594,197248,66160,131088,2447594,197248,66160,131092,2447594,197088,66000,131088,2447594,196608,65536,131103,2447594,196928,65848,131129,2447594,196928,65848,131093,2447594,196928,65848,131080,2447594,0,2447594,0,9790376,5559986,1397618,2071948119048987,2072010198442294,2072010198529342,2071948121775509
4,__amd_rocclr_fillBufferAligned.kd,2,0,4,2176,2176,77824,256,0,0,12,4,48,64,0x0,0x78cc9d60ba00,25600,418094,33444632,0,25600,0,310784,0,1554687.0,0.0,2000276.0,1966963.0,4129920.0,2021723.0,0.0,1004338.0,1053501,25920,13112,12812,1053501,25920,13112,12808,1053501,25600,12800,12804,1053501,25680,12876,12804,1053501,26000,13188,12824,1053501,25840,13036,12804,1053501,26240,13424,12816,1053501,26240,13424,12828,1053501,25920,13112,12812,1053501,25920,13112,12808,1053501,25600,12800,12804,1053501,25680,12876,12804,1053501,26000,13188,12824,1053501,25840,13036,12804,1053501,26240,13424,12816,1053501,26240,13424,12828,1053501,0,1053501,0,4214004,377156,97300,2071948120302100,2072010198586066,2072010198596962,2071948123205834
5,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,5,2176,2176,303104,256,64000,0,128,352,112,64,0x0,0x788c78217980,13601792,99847333,7986030316,56832,265216,13336576,14252800,0,352944707.0,13601792.0,471799646.0,252787736.0,638977326.0,480207320.0,1176010.0,2582626.0,16940028,4658304,3693926,964382,16940028,4658288,3693718,964570,16940028,4658240,3693546,964694,16940028,4658240,3693506,964734,16940028,4658112,3693552,964592,16940028,4658096,3693573,964565,16940028,4658432,3693836,964624,16940028,4658256,3693770,964503,16940028,4658304,3693865,964443,16940028,4658288,3693745,964543,16940028,4658240,3693649,964591,16940028,4658240,3693667,964573,16940028,4658112,3693699,964445,16940028,4658096,3693533,964602,16940028,4658432,3693786,964679,16940028,4658256,3693472,964801,16940028,0,16940028,78,67760112,67204260,16804177,2071948208841924,2072010287445179,2072010288682128,2071948210944613
6,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,6,2176,2176,303104,256,64000,0,128,352,112,64,0x0,0x788c78217980,13601792,73764307,5899401936,56832,265216,13336576,14252800,0,318782819.0,13601792.0,422455618.0,203245035.0,626628379.0,431372979.0,1105988.0,6101235.0,17010864,4658304,3775601,882744,17010864,4658288,3775450,882856,17010864,4658240,3775627,882617,17010864,4658240,3775492,882752,17010864,4658112,3775384,882760,17010864,4658096,3775250,882903,17010864,4658272,3775597,882712,17010864,4658576,3775802,882794,17010864,4658304,3775619,882730,17010864,4658288,3775532,882777,17010864,4658240,3775574,882672,17010864,4658240,3775495,882749,17010864,4658112,3775459,882690,17010864,4658096,3775384,882775,17010864,4658272,3775659,882649,17010864,4658576,3775850,882743,17010864,0,17010864,8238,68043456,65902672,16478628,2071948209675837,2072010288682128,2072010290202575,2071948213377250
7,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,7,2176,2176,303104,256,64000,0,128,352,112,64,0x0,0x788c78217980,13601792,73960982,5915090956,56832,265216,13336576,14252800,0,318242061.0,13601792.0,420998165.0,201802844.0,627276432.0,429873059.0,1091385.0,7157995.0,16953418,4658304,3773798,884529,16953418,4658288,3773742,884546,16953418,4658240,3773962,884282,16953418,4658240,3773820,884421,16953418,4658112,3773573,884578,16953418,4658096,3773474,884698,16953418,4658272,3773851,884472,16953418,4658576,3774045,884552,16953418,4658304,3773953,884376,16953418,4658288,3773882,884406,16953418,4658240,3774038,884207,16953418,4658240,3773994,884248,16953418,4658112,3773683,884472,16953418,4658096,3773592,884572,16953418,4658272,3774054,884273,16953418,4658576,3774282,884314,16953418,0,16953418,10317,67813672,65972308,16496479,2071948210261243,2072010290202575,2072010292304603,2071948215629120
8,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,10,2176,2176,303104,256,64000,0,128,352,112,64,0x0,0x788c78217980,13601792,95889654,7669510336,56832,265216,13336576,14252800,0,348606624.0,13601792.0,472161914.0,252975822.0,647701097.0,481344470.0,1157945.0,8379753.0,17235586,4658304,3754700,903631,17235586,4658288,3754673,903633,17235586,4658240,3754387,903853,17235586,4658240,3754238,904006,17235586,4658272,3754603,903702,17235586,4658096,3754410,903716,17235586,4658272,3754473,903815,17235586,4658256,3754390,903885,17235586,4658304,3754515,903816,17235586,4658288,3754542,903765,17235586,4658240,3754344,903896,17235586,4658240,3754360,903884,17235586,4658272,3754782,903523,17235586,4658096,3754580,903545,17235586,4658272,3754477,903813,17235586,4658256,3754359,903916,17235586,0,17235586,77,68942344,68122562,17034000,2071948216416795,2072010292388007,2072010294188549,2071948218583339
9,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,14,2176,2176,303104,256,64000,0,128,352,112,64,0x0,0x788c78217980,13601792,83813555,6703266492,56832,265216,13336576,14252800,0,331812521.0,13601792.0,447338327.0,228128116.0,634259113.0,456276951.0,1125753.0,4134192.0,17283874,4658304,3758146,900166,17283874,4658288,3758123,900165,17283874,4658240,3758145,900095,17283874,4658240,3758095,900145,17283874,4658272,3758141,900167,17283874,4658096,3757961,900186,17283874,4658272,3758204,900097,17283874,4658256,3758147,900127,17283874,4658304,3758083,900230,17283874,4658288,3758055,900233,17283874,4658240,3758105,900135,17283874,4658240,3758006,900234,17283874,4658272,3758128,900182,17283874,4658096,3757919,900229,17283874,4658272,3758082,900218,17283874,4658256,3758045,900228,17283874,0,17283874,0,69135496,66707578,16679948,2071948219692549,2072010294241467,2072010295886459,2071948222176131
10,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,18,2176,2176,303104,256,64000,0,128,352,112,64,0x0,0x788c78217980,13601792,94182594,7532785804,56832,265216,13336576,14252800,0,350413369.0,13601792.0,465306548.0,246113426.0,650357934.0,474124818.0,1118737.0,6210271.0,17244385,4658304,3753927,904406,17244385,4658288,3754002,904305,17244385,4658240,3753830,904410,17244385,4658240,3753901,904343,17244385,4658112,3753722,904422,17244385,4658256,3753893,904393,17244385,4658272,3753759,904530,17244385,4658256,3753797,904477,17244385,4658304,3753969,904362,17244385,4658288,3754098,904209,17244385,4658240,3753862,904378,17244385,4658240,3753912,904332,17244385,4658112,3753838,904305,17244385,4658256,3754055,904230,17244385,4658272,3753999,904289,17244385,4658256,3754095,904180,17244385,0,17244385,77,68977540,68401533,17103332,2071948223035933,2072010295929042,2072010297498603,2071948225480888
11,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,22,2176,2176,303104,256,64000,0,128,352,112,64,0x0,0x788c78217980,13601792,83640180,6689359720,56832,265216,13336576,14252800,0,332163613.0,13601792.0,446649187.0,227429977.0,633206693.0,455494477.0,1148688.0,4470699.0,16804435,4658304,3744787,913525,16804435,4658288,3744836,913452,16804435,4658240,3745388,912852,16804435,4658240,3745456,912784,16804435,4658112,3744647,913499,16804435,4658256,3744771,913540,16804435,4658272,3745288,913014,16804435,4658256,3745452,912825,16804435,4658304,3744678,913635,16804435,4658288,3744695,913593,16804435,4658240,3745130,913110,16804435,4658240,3745271,912969,16804435,4658112,3744520,913630,16804435,4658256,3744653,913655,16804435,4658272,3745339,912963,16804435,4658256,3745418,912856,16804435,0,16804435,0,67217740,66596891,16652469,2071948226631239,2072010297541146,2072010299111508,2071948229153489
12,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,26,2176,2176,303104,256,64000,0,128,352,112,64,0x0,0x788c78217980,13601792,92220349,7375872304,56832,265216,13336576,14252800,0,348020097.0,13601792.0,461523851.0,242313618.0,649823429.0,470407440.0,1123630.0,5445412.0,17224480,4658304,3753296,905036,17224480,4658288,3753159,905150,17224480,4658240,3753444,904796,17224480,4658240,3753161,905083,17224480,4658112,3753233,904914,17224480,4658096,3752961,905167,17224480,4658432,3753612,904836,17224480,4658256,3753226,905048,17224480,4658304,3753339,904993,17224480,4658288,3753165,905142,17224480,4658240,3753425,904815,17224480,4658240,3753214,905030,17224480,4658112,3753201,904945,17224480,4658096,3753056,905070,17224480,4658432,3753623,904825,17224480,4658256,3753254,905020,17224480,0,17224480,77,68897920,68345826,17089314,2071948230038928,2072010299153690,2072010300689881,2071948232520437
13,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,30,2176,2176,303104,256,64000,0,128,352,112,64,0x0,0x788c78217980,13601792,82911962,6631054356,56832,265216,13336576,14252800,0,331158836.0,13601792.0,444450355.0,225218495.0,632383194.0,453252986.0,1167209.0,3973401.0,16789609,4658304,3741275,917037,16789609,4658288,3741444,916844,16789609,4658240,3740601,917639,16789609,4658240,3740747,917493,16789609,4658112,3740863,917286,16789609,4658096,3741029,917116,16789609,4658432,3740686,917776,16789609,4658256,3740604,917670,16789609,4658304,3741187,917126,16789609,4658288,3741364,916924,16789609,4658240,3740777,917463,16789609,4658240,3740924,917316,16789609,4658112,3741265,916887,16789609,4658096,3741470,916674,16789609,4658432,3740952,917509,16789609,4658256,3740893,917380,16789609,0,16789609,0,67158436,66510138,16630751,2071948233635135,2072010300731984,2072010302227595,2071948236187380
14,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,34,2176,2176,303104,256,64000,0,128,352,112,64,0x0,0x788c78217980,13601792,93002672,7438575852,56832,265216,13336576,14252800,0,348301584.0,13601792.0,461290669.0,242108219.0,648913824.0,470089471.0,1096725.0,5068446.0,17209947,4658304,3741974,916358,17209947,4658288,3742093,916213,17209947,4658240,3741157,917083,17209947,4658240,3741194,917050,17209947,4658112,3741792,916352,17209947,4658096,3741888,916238,17209947,4658272,3741111,917178,17209947,4658416,3741348,917088,17209947,4658304,3741891,916442,17209947,4658288,3742033,916272,17209947,4658240,3741027,917213,17209947,4658240,3741177,917067,17209947,4658112,3741880,916266,17209947,4658096,3741998,916130,17209947,4658272,3741237,917051,17209947,4658416,3741428,917004,17209947,0,17209947,77,68839788,68250305,17065590,2071948237065558,2072010302268816,2072010303751608,2071948239554349
15,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,38,2176,2176,303104,256,64000,0,128,352,112,64,0x0,0x788c78217980,13601792,81749768,6538411424,56832,265216,13336576,14252800,0,331651163.0,13601792.0,446131678.0,226901349.0,633331429.0,454952476.0,1191451.0,3310390.0,16803259,4658304,3744759,913553,16803259,4658288,3744841,913447,16803259,4658240,3743916,914324,16803259,4658240,3743931,914309,16803259,4658112,3744408,913741,16803259,4658096,3744450,913698,16803259,4658272,3743715,914587,16803259,4658416,3743867,914568,16803259,4658304,3744491,913822,16803259,4658288,3744562,913726,16803259,4658240,3743670,914570,16803259,4658240,3743669,914571,16803259,4658112,3744566,913581,16803259,4658096,3744580,913567,16803259,4658272,3743953,914349,16803259,4658416,3744086,914349,16803259,0,16803259,0,67213036,66609892,16655849,2071948240670188,2072010303793110,2072010305237205,2071948243203033
16,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,42,2176,2176,303104,256,64000,0,128,352,112,64,0x0,0x788c78217980,13601792,92508462,7398845480,56832,265216,13336576,14252800,0,347642939.0,13601792.0,461422428.0,242219880.0,649341792.0,470291133.0,1110181.0,5616991.0,17216542,4658464,3757571,900921,17216542,4658288,3757360,900949,17216542,4658240,3757090,901150,17216542,4658240,3756922,901322,17216542,4658112,3757081,901065,17216542,4658096,3757025,901103,17216542,4658272,3756929,901360,17216542,4658256,3756745,901530,17216542,4658464,3757284,901206,17216542,4658288,3757060,901246,17216542,4658240,3756935,901305,17216542,4658240,3756758,901486,17216542,4658112,3757172,900974,17216542,4658096,3757137,900992,17216542,4658272,3757100,901188,17216542,4658254,3756888,901382,17216542,0,17216542,77,68866168,68295242,17076782,2071948244072409,2072010305277584,2072010306719957,2071948246511736
17,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,46,2176,2176,303104,256,64000,0,128,352,112,64,0x0,0x788c78217980,13601792,82681958,6612883180,56832,265216,13336576,14252800,0,331983821.0,13601792.0,445984090.0,226754678.0,632830691.0,454820557.0,1179054.0,3688454.0,16790724,4658464,3747321,911151,16790724,4658288,3746986,911302,16790724,4658240,3747062,911178,16790724,4658240,3746926,911314,16790724,4658112,3746761,911385,16790724,4658096,3746612,911535,16790724,4658272,3746750,911550,16790724,4658256,3746575,911701,16790724,4658464,3747159,911314,16790724,4658288,3746811,911477,16790724,4658240,3746904,911336,16790724,4658240,3746619,911621,16790724,4658112,3746957,911188,16790724,4658096,3746787,911358,16790724,4658272,3747027,911275,16790724,4658256,3746901,911375,16790724,0,16790724,0,67162896,66557331,16642484,2071948247627276,2072010306760617,2072010308177312,2071948250177427
18,matmul_kernel.kd,2,0,49,2176,2176,1048576,256,16384,0,16,128,48,64,0x0,0x78c49c008600,17039360,366640004,29328976692,131072,262144,16777216,81838080,0,1194965020.0,0.0,1297249308.0,1021615377.0,1367774300.0,1303118283.0,2821383.0,628856.0,36165618,13060568,8227977,4832595,36165618,13060248,8227590,4832658,36165618,13060248,8227185,4833079,36165618,13060248,8226988,4833277,36165618,13060568,8228281,4832330,36165618,13060568,8227491,4833113,36165618,13060568,8226949,4833637,36165618,13060568,8226717,4833875,36165618,13060430,8226738,4833696,36165618,13060110,8226358,4833752,36165618,13060110,8225291,4834836,36165618,13060110,8225214,4834912,36165618,13060430,8226762,4833708,36165618,13060430,8225960,4834506,36165618,13060430,8226020,4834427,36165618,13060430,8225669,4834781,36165618,0,36165618,0,144662472,143921710,36055657,2071948556346678,2072010612362091,2072010615035804,2071948559994272
19,matmul_kernel.kd,2,0,50,2176,2176,1048576,256,16384,0,16,128,48,64,0x0,0x78c49c008600,17039360,119669999,9571433348,131072,262144,16777216,81838080,0,551071290.0,0.0,797324500.0,513192138.0,1012156935.0,830901366.0,3358207.0,96129.0,27104909,13042110,9010136,4032002,27104909,13041790,9009837,4031970,27104909,13041790,9010034,4031760,27104909,13041790,9010149,4031645,27104909,13042110,9009262,4032885,27104909,13042110,9009439,4032718,27104909,13042110,9009984,4032187,27104909,13042110,9010111,4032033,27104909,13042186,9009686,4032530,27104909,13041866,9009503,4032379,27104909,13041866,9010258,4031613,27104909,13041866,9009922,4031950,27104909,13042186,9009636,4032592,27104909,13042186,9009639,4032601,27104909,13042186,9009834,4032409,27104909,13042186,9009854,4032370,27104909,0,27104909,6890,108419636,106484612,26648905,2071948557492091,2072010615035804,2072010618185821,2071948563551151
20,matmul_kernel.kd,2,0,53,2176,2176,1048576,256,16384,0,16,128,48,64,0x0,0x78c49c008600,17039360,209681727,16772314040,131072,262144,16777216,81838080,0,785576235.0,0.0,982485834.0,703065237.0,1106772751.0,999320399.0,3122205.0,195287.0,29286436,13039570,8318098,4721476,29286436,13039250,8317857,4721393,29286436,13039250,8317556,4721711,29286436,13039250,8317678,4721589,29286436,13039570,8317707,4721912,29286436,13039570,8317773,4721835,29286436,13039570,8317695,4721897,29286436,13039570,8317790,4721804,29286436,13039684,8318966,4720723,29286436,13039364,8318681,4720683,29286436,13039364,8318455,4720926,29286436,13039364,8318376,4721004,29286436,13039684,8318917,4720818,29286436,13039684,8319065,4720659,29286436,13039684,8318556,4721148,29286436,13039684,8318695,4721010,29286436,0,29286436,0,117145744,116447228,29149784,2071948564486154,2072010618271708,2072010621154129,2071948568120698
21,matmul_kernel.kd,2,0,57,2176,2176,1048576,256,16384,0,16,128,48,64,0x0,0x78c49c008600,17039360,149168463,11931319608,131072,262144,16777216,81838080,0,629844172.0,0.0,869672260.0,587313088.0,1044469247.0,896532746.0,3266596.0,119822.0,27692836,13038616,8848458,4190180,27692836,13038296,8848006,4190307,27692836,13038296,8848055,4190241,27692836,13038296,8848068,4190233,27692836,13038616,8848386,4190261,27692836,13038616,8848394,4190244,27692836,13038616,8848740,4189915,27692836,13038616,8849048,4189603,27692836,13037810,8847256,4190576,27692836,13037490,8846696,4190811,27692836,13037490,8846541,4190949,27692836,13037490,8846570,4190924,27692836,13037810,8846807,4191034,27692836,13037810,8846955,4190881,27692836,13037810,8846389,4191459,27692836,13037810,8846480,4191364,27692836,0,27692836,77,110771344,109887638,27500947,2071948568922373,2072010621221068,2072010623919458,2071948572570929
22,matmul_kernel.kd,2,0,61,2176,2176,1048576,256,16384,0,16,128,48,64,0x0,0x78c49c008600,17039360,207207187,16574409976,131072,262144,16777216,81838080,0,781863032.0,0.0,994828875.0,714819746.0,1127960569.0,1013597857.0,3144355.0,269625.0,29850435,13039628,8361506,4678126,29850435,13039308,8361231,4678077,29850435,13039308,8361669,4677657,29850435,13039308,8361575,4677749,29850435,13039628,8361611,4678067,29850435,13039628,8361457,4678211,29850435,13039628,8361355,4678294,29850435,13039628,8361327,4678324,29850435,13040160,8362007,4678158,29850435,13039840,8361481,4678359,29850435,13039840,8361678,4678179,29850435,13039840,8361524,4678333,29850435,13040160,8361810,4678399,29850435,13040160,8361754,4678445,29850435,13040160,8361320,4678863,29850435,13040160,8361137,4679045,29850435,0,29850435,0,119401740,118674598,29710840,2071948573543547,2072010623978546,2072010626728852,2071948577325209
23,matmul_kernel.kd,2,0,65,2176,2176,1048576,256,16384,0,16,128,48,64,0x0,0x78c49c008600,17039360,153654174,12289953508,131072,262144,16777216,81838080,0,640715206.0,0.0,876316430.0,594665901.0,1035869473.0,900740074.0,3234200.0,115540.0,27457216,13037168,8782405,4254784,27457216,13036848,8782056,4254811,27457216,13036848,8781692,4255156,27457216,13036848,8781719,4255135,27457216,13037168,8782171,4255026,27457216,13037168,8782155,4255039,27457216,13037168,8782567,4254641,27457216,13037168,8782642,4254561,27457216,13037098,8782430,4254691,27457216,13036778,8782043,4254751,27457216,13036778,8782596,4254182,27457216,13036778,8782617,4254165,27457216,13037098,8782115,4255013,27457216,13037098,8782364,4254758,27457216,13037098,8782423,4254714,27457216,13037098,8782413,4254723,27457216,0,27457216,77,109828864,108980644,27266880,2071948578239981,2072010626785857,2072010629439300,2071948581836469
24,matmul_kernel.kd,2,0,69,2176,2176,1048576,256,16384,0,16,128,48,64,0x0,0x78c49c008600,17039360,153380434,12268112272,131072,262144,16777216,81838080,0,642306486.0,0.0,878869197.0,596806529.0,1049114137.0,904706084.0,3247739.0,142661.0,27830784,13039040,8768325,4270719,27830784,13038720,8768395,4270325,27830784,13038720,8768293,4270443,27830784,13038720,8768173,4270566,27830784,13039040,8768637,4270453,27830784,13039040,8768639,4270445,27830784,13039040,8768759,4270303,27830784,13039040,8768935,4270133,27830784,13037842,8767682,4270165,27830784,13037522,8767735,4269787,27830784,13037522,8766936,4270603,27830784,13037522,8766953,4270585,27830784,13037842,8767810,4270082,27830784,13037842,8767862,4270017,27830784,13037842,8768381,4269482,27830784,13037842,8768362,4269501,27830784,0,27830784,0,111323136,110374006,27634254,2071948582721558,2072010629493460,2072010632053886,2071948586461569
25,matmul_kernel.kd,2,0,73,2176,2176,1048576,256,16384,0,16,128,48,64,0x0,0x78c49c008600,17039360,148544148,11881259572,131072,262144,16777216,81838080,0,628889057.0,0.0,869196216.0,587141967.0,1046485099.0,895063053.0,3241350.0,322958.0,27746829,13038180,8770341,4267861,27746829,13037860,8770395,4267483,27746829,13037860,8770797,4267063,27746829,13037860,8770938,4266926,27746829,13038180,8770449,4267764,27746829,13038180,8770559,4267647,27746829,13038180,8769808,4268411,27746829,13038180,8769726,4268489,27746829,13037428,8769780,4267670,27746829,13037108,8769487,4267637,27746829,13037108,8769369,4267739,27746829,13037108,8769372,4267740,27746829,13037428,8770955,4266506,27746829,13037428,8770926,4266530,27746829,13037428,8770855,4266614,27746829,13037428,8770844,4266622,27746829,0,27746829,77,110987316,110099400,27565068,2071948587411564,2072010632107405,2072010634674200,2071948591187727
26,matmul_kernel.kd,2,0,77,2176,2176,1048576,256,16384,0,16,128,48,64,0x0,0x78c49c008600,17039360,148985978,11916841852,131072,262144,16777216,81838080,0,629794161.0,0.0,869561883.0,587166732.0,1045339692.0,896601909.0,3263373.0,92455.0,27711588,13037680,8845961,4191723,27711588,13037360,8845436,4191924,27711588,13037360,8845292,4192085,27711588,13037360,8845395,4191983,27711588,13037680,8846008,4191721,27711588,13037680,8845901,4191820,27711588,13037680,8844945,4192756,27711588,13037680,8844502,4193201,27711588,13038880,8847340,4191545,27711588,13038560,8846990,4191570,27711588,13038560,8845843,4192734,27711588,13038560,8845842,4192735,27711588,13038880,8846998,4191931,27711588,13038880,8847127,4191792,27711588,13038880,8847111,4191790,27711588,13038880,8847070,4191831,27711588,0,27711588,0,110846352,109978128,27525759,2071948591976233,2072010634725676,2072010637257900,2071948595681722
27,matmul_kernel.kd,2,0,81,2176,2176,1048576,256,16384,0,16,128,48,64,0x0,0x78c49c008600,17039360,150913633,12070882000,131072,262144,16777216,81838080,0,635097429.0,0.0,874641523.0,592482476.0,1046882047.0,900696275.0,3249171.0,65846.0,27735959,13037580,8791727,4245873,27735959,13037260,8791418,4245862,27735959,13037260,8791407,4245853,27735959,13037260,8791492,4245773,27735959,13037580,8791816,4245797,27735959,13037580,8791886,4245718,27735959,13037580,8792451,4245168,27735959,13037580,8792587,4245034,27735959,13037232,8791882,4245373,27735959,13036912,8791462,4245468,27735959,13036912,8792523,4244389,27735959,13036912,8792318,4244599,27735959,13037232,8791953,4245311,27735959,13037232,8792002,4245254,27735959,13037232,8792000,4245272,27735959,13037232,8791884,4245384,27735959,0,27735959,77,110943836,110140290,27562714,2071948596532380,2072010637310178,2072010639767491,2071948600370906
28,matmul_kernel.kd,2,0,85,2176,2176,1048576,256,16384,0,16,128,48,64,0x0,0x78c49c008600,17039360,151310946,12102778248,131072,262144,16777216,81838080,0,634834043.0,0.0,871330663.0,589517316.0,1034989618.0,896436144.0,3236462.0,152158.0,27436829,13038306,8794357,4243953,27436829,13037986,8793969,4244017,27436829,13037986,8794488,4243517,27436829,13037986,8794610,4243393,27436829,13038306,8794786,4243567,27436829,13038306,8794810,4243539,27436829,13038306,8794280,4244047,27436829,13038306,8794445,4243887,27436829,13037442,8794167,4243280,27436829,13037122,8793933,4243189,27436829,13037122,8793511,4243630,27436829,13037122,8793803,4243336,27436829,13037442,8793923,4243567,27436829,13037442,8793874,4243615,27436829,13037442,8793853,4243611,27436829,13037442,8793892,4243572,27436829,0,27436829,0,109747316,108888240,27261617,2071948601325618,2072010639818366,2072010642301678,2071948604968354
29,matmul_kernel.kd,2,0,89,2176,2176,1048576,256,16384,0,16,128,48,64,0x0,0x78c49c008600,17039360,147560228,11802408800,131072,262144,16777216,81838080,0,626127946.0,0.0,865603546.0,583132309.0,1043838619.0,892858393.0,3265641.0,125877.0,27677333,13038496,8846194,4192323,27677333,13038176,8845925,4192269,27677333,13038176,8846529,4191647,27677333,13038176,8846631,4191549,27677333,13038496,8846574,4191953,27677333,13038496,8846568,4191953,27677333,13038496,8846334,4192201,27677333,13038496,8846399,4192132,27677333,13038792,8845921,4192893,27677333,13038472,8845608,4192881,27677333,13038472,8846498,4191974,27677333,13038472,8846192,4192284,27677333,13038792,8846105,4192722,27677333,13038792,8846133,4192684,27677333,13038792,8846772,4192062,27677333,13038792,8846815,4192010,27677333,0,27677333,77,110709332,109821624,27484417,2071948605809668,2072010642353635,2072010644758311,2071948609638210
30,"void at::native::vectorized_elementwise_kernel<4, at::native::FillFunctor<float>, std::array<char*, 1ul> >(int, at::native::FillFunctor<float>, std::array<char*, 1ul>) [clone .kd]",2,0,92,2176,2176,16777216,256,0,0,8,0,16,64,0x0,0x788c79f2e140,262144,6841097,547293224,0,262144,0,2621440,0,28907756.0,0.0,29435724.0,29164874.0,30661306.0,29457079.0,0.0,17254967.0,917658,262144,131072,131072,917658,262464,131384,131080,917658,262144,131072,131088,917658,262224,131148,131092,917658,262144,131072,131088,917658,262144,131072,131090,917658,262144,131072,131072,917658,262144,131072,131076,917658,262144,131072,131072,917658,262464,131384,131080,917658,262144,131072,131088,917658,262224,131148,131092,917658,262144,131072,131088,917658,262144,131072,131091,917658,262144,131072,131072,917658,262144,131072,131076,917658,0,917658,0,3670632,3180214,797743,2071948615474790,2072010647970831,2072010648017259,2071948616335342
31,micro_tk(micro_globals) [clone .kd],2,0,93,2176,2176,1048576,256,32768,0,76,132,32,64,0x0,0x789497220580,219152384,200687620,16045387135,0,1048576,218103808,34504704,0,1490889556.0,0.0,1899544158.0,806696237.0,1962421551.0,1911588185.0,4976792.0,9849522.0,51731531,12856211,11209756,1646469,51731531,12856208,11209749,1646459,51731531,12854214,11207748,1646516,51731531,12854534,11208057,1646513,51731531,12860051,11213404,1646724,51731531,12859959,11213375,1646662,51731531,12860276,11213660,1646675,51731531,12860322,11213675,1646675,51731531,12856192,11209682,1646524,51731531,12856193,11209666,1646527,51731531,12854208,11207681,1646576,51731531,12854528,11207981,1646587,51731531,12860002,11213394,1646694,51731531,12859946,11213289,1646736,51731531,12860270,11213612,1646717,51731531,12860302,11213648,1646684,51731531,0,51731531,7759,206926124,206523412,51634100,2071948616683297,2072010648270954,2072010651775296,2071948621180788
32,micro_tk(micro_globals) [clone .kd],2,0,95,2176,2176,1048576,256,32768,0,76,132,32,64,0x0,0x789497220580,219152384,198762713,15892569200,0,1048576,218103808,34504704,0,1494338101.0,0.0,1870117577.0,777709649.0,1944265958.0,1881743782.0,4980384.0,11164154.0,51256107,12856912,11256608,1600308,51256107,12856900,11256576,1600324,51256107,12855124,11254863,1600301,51256107,12855124,11254885,1600275,51256107,12860828,11260375,1600514,51256107,12860748,11260322,1600482,51256107,12861080,11260639,1600474,51256107,12861080,11260662,1600447,51256107,12856975,11256766,1600214,51256107,12856978,11256740,1600238,51256107,12855174,11254950,1600261,51256107,12855174,11254951,1600253,51256107,12860894,11260539,1600417,51256107,12860814,11260481,1600388,51256107,12861150,11260782,1600397,51256107,12861150,11260770,1600411,51256107,0,51256107,75,205024428,204612306,51156730,2071948621882475,2072010651805300,2072010655432944,2071948626866355
33,micro_tk(micro_globals) [clone .kd],2,0,98,2176,2176,1048576,256,32768,0,76,132,32,64,0x0,0x789497220580,219152384,201420118,16105612754,0,1048576,218103808,34504704,0,1494406277.0,0.0,1898007647.0,805503080.0,1973444383.0,1909769004.0,4969360.0,11773435.0,52013248,12856698,11243840,1612862,52013248,12856697,11243809,1612888,52013248,12855164,11242294,1612908,52013248,12855164,11242275,1612922,52013248,12860758,11247748,1613070,52013248,12860868,11247847,1613080,52013248,12861558,11248570,1613015,52013248,12861478,11248425,1613083,52013248,12856683,11243672,1613016,52013248,12856693,11243737,1612956,52013248,12855140,11242185,1612994,52013248,12855140,11242210,1612962,52013248,12860751,11247648,1613161,52013248,12860856,11247788,1613126,52013248,12861552,11248426,1613158,52013248,12861476,11248371,1613137,52013248,0,52013248,0,208052992,207683680,51924528,2071948627753346,2072010655481015,2072010658999778,2071948632618110
34,micro_tk(micro_globals) [clone .kd],2,0,103,2176,2176,1048576,256,32768,0,76,132,32,64,0x0,0x789497220580,219152384,201792073,16135306621,0,1048576,218103808,34504704,0,1494251486.0,0.0,1899657193.0,807532334.0,1972128460.0,1911026412.0,4921389.0,12119209.0,51985263,12856590,11253115,1603479,51985263,12856588,11253092,1603496,51985263,12855054,11251659,1603430,51985263,12855054,11251667,1603419,51985263,12860594,11257043,1603610,51985263,12860602,11257060,1603601,51985263,12861377,11257767,1603640,51985263,12861125,11257542,1603616,51985263,12856584,11253328,1603261,51985263,12856579,11253336,1603243,51985263,12855038,11251843,1603231,51985263,12855038,11251853,1603218,51985263,12860578,11257261,1603371,51985263,12860581,11257277,1603360,51985263,12861346,11258019,1603359,51985263,12861096,11257803,1603326,51985263,0,51985263,75,207941052,207545178,51890140,2071948633576187,2072010659055500,2072010662533643,2071948638325349
35,micro_tk(micro_globals) [clone .kd],2,0,108,2176,2176,1048576,256,32768,0,76,132,32,64,0x0,0x789497220580,219152384,198538298,15874518154,0,1048576,218103808,34504704,0,1491564564.0,0.0,1863074083.0,770984881.0,1933302260.0,1874298382.0,4969765.0,12064902.0,50962889,12856686,11247413,1609277,50962889,12856686,11247387,1609299,50962889,12855252,11246022,1609265,50962889,12855252,11246014,1609266,50962889,12860906,11251529,1609433,50962889,12860828,11251438,1609447,50962889,12861455,11252029,1609456,50962889,12861612,11252157,1609486,50962889,12856745,11247441,1609309,50962889,12856743,11247448,1609295,50962889,12855258,11245968,1609326,50962889,12855258,11245995,1609295,50962889,12860878,11251446,1609490,50962889,12860794,11251370,1609481,50962889,12861408,11251963,1609474,50962889,12861570,11252118,1609483,50962889,0,50962889,77,203851556,203458240,50868008,2071948639232881,2072010662585480,2072010666045355,2071948644009414
36,micro_tk(micro_globals) [clone .kd],2,0,113,2176,2176,1048576,256,32768,0,76,132,32,64,0x0,0x789497220580,219152384,199253614,15930835791,0,1048576,218103808,34504704,0,1493719092.0,0.0,1890145206.0,797695502.0,1957043867.0,1901473928.0,5036312.0,8724530.0,51598836,12857195,10806531,2050668,51598836,12857092,10806484,2050608,51598836,12855150,10804658,2050527,51598836,12855150,10804663,2050517,51598836,12861244,10810407,2050894,51598836,12861167,10810423,2050798,51598836,12861835,10811001,2050864,51598836,12861828,10810942,2050915,51598836,12857204,10806432,2050777,51598836,12857151,10806404,2050747,51598836,12855150,10804470,2050716,51598836,12855150,10804494,2050685,51598836,12861157,10810368,2050848,51598836,12861057,10810218,2050901,51598836,12861864,10810918,2050976,51598836,12861858,10810966,2050922,51598836,0,51598836,0,206395344,205957220,51495582,2071948644960421,2072010666097072,2072010669558590,2071948649766878
37,micro_tk(micro_globals) [clone .kd],2,0,118,2176,2176,1048576,256,32768,0,76,132,32,64,0x0,0x789497220580,219152384,200078748,15997776338,0,1048576,218103808,34504704,0,1493670718.0,0.0,1877054010.0,784937470.0,1945850964.0,1888215706.0,4975556.0,12345900.0,51294166,12856854,11190871,1665987,51294166,12856874,11190917,1665957,51294166,12855032,11189108,1665959,51294166,12855032,11189136,1665927,51294166,12860608,11194437,1666224,51294166,12860768,11194650,1666178,51294166,12861133,11195014,1666148,51294166,12861059,11194977,1666112,51294166,12856904,11190912,1665997,51294166,12856908,11190934,1665974,51294166,12855014,11189108,1665941,51294166,12855014,11189114,1665935,51294166,12860650,11194616,1666090,51294166,12860813,11194738,1666132,51294166,12861207,11195171,1666067,51294166,12861116,11195103,1666038,51294166,0,51294166,0,205176664,204779156,51198093,2071948650704734,2072010669608824,2072010673037614,2071948655375221
38,micro_tk(micro_globals) [clone .kd],2,0,123,2176,2176,1048576,256,32768,0,76,132,32,64,0x0,0x789497220580,219152384,199840840,15978635841,0,1048576,218103808,34504704,0,1494816824.0,0.0,1897227567.0,805165033.0,1959862373.0,1908159577.0,5043752.0,7960974.0,51660706,12857105,10674058,2183051,51660706,12857112,10674107,2183005,51660706,12855108,10672254,2182890,51660706,12855108,10672237,2182897,51660706,12861281,10678168,2183171,51660706,12861395,10678409,2183045,51660706,12862214,10679154,2183091,51660706,12862228,10679050,2183211,51660706,12857158,10674132,2183031,51660706,12857162,10674103,2183059,51660706,12855104,10672137,2183003,51660706,12855104,10672157,2182980,51660706,12861301,10678245,2183117,51660706,12861396,10678222,2183231,51660706,12862219,10678922,2183328,51660706,12862251,10679020,2183259,51660706,0,51660706,75,206642824,206254000,51567284,2071948656239839,2072010673089050,2072010676520925,2071948661033127
39,micro_tk(micro_globals) [clone .kd],2,0,128,2176,2176,1048576,256,32768,0,76,132,32,64,0x0,0x789497220580,219152384,199533869,15953654635,0,1048576,218103808,34504704,0,1492936222.0,0.0,1876836381.0,784364642.0,1947983626.0,1888589490.0,4992190.0,11092514.0,51808183,12856879,11208773,1648110,51808183,12856804,11208667,1648137,51808183,12855064,11206997,1648102,51808183,12855064,11206931,1648164,51808183,12860604,11212434,1648233,51808183,12860604,11212386,1648275,51808183,12861260,11213077,1648212,51808183,12861249,11213003,1648280,51808183,12856914,11208850,1648069,51808183,12856830,11208766,1648064,51808183,12855080,11207116,1647998,51808183,12855080,11207090,1648022,51808183,12860698,11212543,1648219,51808183,12860700,11212544,1648213,51808183,12861389,11213222,1648196,51808183,12861346,11213119,1648256,51808183,0,51808183,77,207232732,205003636,51254259,2071948661991544,2072010676570434,2072010679999865,2071948666797891
40,micro_tk(micro_globals) [clone .kd],2,0,133,2176,2176,1048576,256,32768,0,76,132,32,64,0x0,0x789497220580,219152384,199421546,15944517008,0,1048576,218103808,34504704,0,1492847733.0,0.0,1884966335.0,792668021.0,1951346307.0,1896324751.0,5012525.0,10033534.0,51441302,12857114,11018678,1838440,51441302,12857024,11018580,1838444,51441302,12855250,11016933,1838351,51441302,12855250,11016928,1838350,51441302,12860909,11022391,1838576,51441302,12860914,11022428,1838544,51441302,12861862,11023368,1838525,51441302,12861833,11023255,1838609,51441302,12857110,11018825,1838290,51441302,12857033,11018671,1838362,51441302,12855250,11016994,1838292,51441302,12855250,11016966,1838312,51441302,12860979,11022621,1838416,51441302,12861006,11022519,1838540,51441302,12861907,11023497,1838441,51441302,12861900,11023436,1838495,51441302,0,51441302,0,205765208,205357606,51343257,2071948667780124,2072010680049457,2072010683466389,2071948672567042
41,micro_tk(micro_globals) [clone .kd],2,0,138,2176,2176,1048576,256,32768,0,76,132,32,64,0x0,0x789497220580,219152384,200140055,16003009793,0,1048576,218103808,34504704,0,1493123727.0,0.0,1881040743.0,788804621.0,1948494666.0,1892416870.0,4957790.0,11767955.0,51362816,12856713,11226112,1630605,51362816,12856886,11226279,1630607,51362816,12855290,11224761,1630568,51362816,12855210,11224660,1630580,51362816,12860776,11230057,1630777,51362816,12860775,11230082,1630751,51362816,12861685,11230972,1630742,51362816,12861659,11230950,1630739,51362816,12856731,11226186,1630550,51362816,12856904,11226307,1630597,51362816,12855292,11224834,1630496,51362816,12855212,11224700,1630542,51362816,12860787,11230143,1630706,51362816,12860784,11230084,1630755,51362816,12861671,11231019,1630683,51362816,12861628,11230944,1630718,51362816,0,51362816,0,205451264,205057430,51268345,2071948673548844,2072010683515061,2072010686937802,2071948678253271
42,micro_tk(micro_globals) [clone .kd],2,0,143,2176,2176,1048576,256,32768,0,76,132,32,64,0x0,0x789497220580,219152384,201962720,16148950282,0,1048576,218103808,34504704,0,1495590428.0,0.0,1901000930.0,808918866.0,1971678745.0,1912303489.0,4916276.0,11639276.0,51974430,12857104,11231352,1625756,51974430,12857090,11231337,1625753,51974430,12855418,11229765,1625691,51974430,12855338,11229671,1625699,51974430,12861178,11235315,1625919,51974430,12861195,11235354,1625898,51974430,12861814,11235907,1625936,51974430,12861824,11235891,1625966,51974430,12857029,11231397,1625637,51974430,12857034,11231399,1625635,51974430,12855426,11229868,1625593,51974430,12855346,11229772,1625607,51974430,12861176,11235484,1625752,51974430,12861213,11235527,1625738,51974430,12861824,11236114,1625740,51974430,12861827,11236110,1625746,51974430,0,51974430,75,207897720,207497838,51877658,2071948679132671,2072010686986193,2072010690388784,2071948684046096
43,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,147,2176,2176,67108864,512,0,0,12,4,32,64,0x0,0x788c1746ed00,2097152,22711068,1816583464,0,1048576,1048576,24117248,0,28892031.0,0.0,90279605.0,82826097.0,100577449.0,92572504.0,147664.0,1190.0,2745278,328320,131696,196657,2745278,328320,131696,196648,2745278,328320,131696,196653,2745278,328400,131772,196656,2745278,328480,131852,196641,2745278,328320,131696,196649,2745278,328640,132008,196643,2745278,328640,132008,196632,2745278,328320,131696,196654,2745278,328320,131696,196650,2745278,328320,131696,196653,2745278,328400,131772,196656,2745278,328480,131852,196639,2745278,328320,131696,196649,2745278,328640,132008,196643,2745278,328640,132008,196632,2745278,0,2745278,0,10981112,10539878,2640981,2071948695642013,2072010697152635,2072010697323488,2071948696595533
44,"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul> >(int, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul>) [clone .kd]",2,0,148,2176,2176,16777216,256,0,0,16,0,32,64,0x0,0x788c06a60e40,786432,60447559,4835708660,0,262144,524288,3932160,0,113874851.0,0.0,116399520.0,107164600.0,118043598.0,116417649.0,246075.0,104612310.0,3200548,524448,131224,393253,3200548,524608,131384,393246,3200548,524608,131384,393292,3200548,524608,131384,393287,3200548,524608,131384,393270,3200548,524608,131384,393269,3200548,524608,131384,393224,3200548,524288,131072,393225,3200548,524448,131224,393253,3200548,524608,131384,393247,3200548,524608,131384,393294,3200548,524608,131384,393292,3200548,524608,131384,393263,3200548,524608,131384,393269,3200548,524608,131384,393224,3200548,524288,131072,393225,3200548,0,3200548,0,12802192,12378364,3101065,2071948706081540,2072010703343278,2072010703535603,2071948707066206
45,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,149,2176,2176,16777216,256,0,0,12,4,32,64,0x0,0x788c7a3957c0,524288,24817795,1985331508,0,262144,262144,3145728,0,44824616.0,0.0,70178980.0,65368655.0,72035278.0,70197710.0,105243.0,57477245.0,2129213,393616,131460,262192,2129213,393536,131384,262176,2129213,393536,131384,262190,2129213,393536,131384,262170,2129213,393216,131072,262167,2129213,393216,131072,262167,2129213,393216,131072,262168,2129213,393216,131072,262165,2129213,393616,131460,262193,2129213,393536,131384,262176,2129213,393536,131384,262187,2129213,393536,131384,262171,2129213,393216,131072,262166,2129213,393216,131072,262168,2129213,393216,131072,262168,2129213,393216,131072,262164,2065886,63327,2129213,232,8516852,7531098,1890272,2071948709093093,2072010704887241,2072010705006457,2071948709869942
46,__amd_rocclr_fillBufferAligned.kd,2,0,150,2176,2176,256,256,0,0,12,4,48,64,0x0,0x78cc9d60ba00,2,21,1656,0,1,1,93,0,66.0,0.0,1579.0,1531.0,1024964.0,1682.0,0.0,0.0,622301,0,0,0,622301,1,0,1,622301,2,2,4,622301,0,0,0,622301,0,0,0,622301,0,0,0,622301,4,2,2,622301,4,2,6,622301,4,2,2,622301,5,2,3,622301,0,0,5,622301,1,0,1,622301,4,2,2,622301,2,1,1,622301,4,2,2,622301,4,2,6,622301,0,622301,0,2489204,43402,16402,2071948709846487,2072010705006457,2072010705010423,2071948711740368
47,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,151,2176,2176,155648,512,2560,48,28,4,80,64,0x0,0x788bf5e18380,267654,6446209,515681990,0,609,267045,1816295,0,19866831.0,4880.0,71491063.0,67117288.0,77927636.0,71599247.0,47085.0,102.0,4352963,132306,1168,131175,4352963,132538,1248,131312,4352963,132352,1248,131130,4352963,132138,1012,131126,4352963,132274,1166,131108,4352963,132353,1248,131105,4352963,132547,1401,131167,4352963,132146,1012,131155,4352963,132304,1168,131169,4352963,132536,1248,131310,4352963,132352,1248,131127,4352963,132136,1012,131124,4352963,132272,1164,131108,4352963,132352,1248,131104,4352963,132544,1400,131164,4352963,132144,1012,131151,2278745,2074218,4352963,1856,17411852,8101362,2045011,2071948712680188,2072010707646601,2072010707773429,2071948713829968
48,__amd_rocclr_copyBuffer.kd,2,0,152,2176,2176,512,512,0,0,16,0,32,64,0x0,0x78cc9d60ba80,8,92,7404,0,4,4,154,0,261.0,0.0,4187.0,4059.0,1043095.0,4433.0,0.0,0.0,978207,4,2,2,978207,4,2,2,978207,4,2,6,978207,4,2,2,978207,4,2,2,978207,5,2,3,978207,0,0,0,978207,2,2,5,978207,0,0,0,978207,0,0,0,978207,0,0,5,978207,0,0,0,978207,0,0,0,978207,0,0,0,978207,0,0,0,978207,0,0,4,978207,0,978207,0,3912828,45414,18338,2071948713677002,2072010707773429,2072010707777435,2071948715577061
49,__amd_rocclr_fillBufferAligned.kd,2,0,154,2176,2176,256,256,0,0,12,4,48,64,0x0,0x78cc9d60ba00,2,23,1820,0,1,1,93,0,66.0,0.0,1739.0,1693.0,1031060.0,1848.0,0.0,0.0,106406,0,0,5,106406,0,0,0,106406,0,0,4,106406,0,0,0,106406,0,0,0,106406,0,0,0,106406,4,2,2,106406,4,2,8,106406,4,2,7,106406,5,2,3,106406,0,0,5,106406,1,0,1,106406,4,2,2,106406,3,1,2,106406,6,4,2,106406,4,2,6,106406,0,106406,0,425624,43642,16644,2071948716469761,2072010707842651,2072010707844894,2071948717499343
50,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4>) [clone .kd]",2,0,155,2176,2176,155648,512,2560,48,28,4,80,64,0x0,0x788c78117880,267654,4845394,387619056,0,609,267045,743643,0,19874633.0,4880.0,53318430.0,48952423.0,58152255.0,53350895.0,50847.0,0.0,1613097,131745,621,131160,1613097,132216,936,131306,1613097,132193,1089,131116,1613097,132376,1248,131128,1613097,132032,936,131096,1613097,132032,936,131096,1613097,132064,936,131151,1613097,132304,1168,131154,1613097,131746,620,131161,1613097,132218,936,131311,1613097,132192,1088,131117,1613097,132378,1248,131130,1613097,132032,936,131096,1613097,132033,936,131097,1613097,132066,936,131151,1613097,132306,1168,131158,1613097,0,1613097,76,6452388,6073562,1532210,2071948720250141,2072010710136443,2072010710235589,2071948720935344
51,__amd_rocclr_copyBuffer.kd,2,0,156,2176,2176,512,512,0,0,16,0,32,64,0x0,0x78cc9d60ba80,8,98,7892,0,4,4,154,0,261.0,0.0,4447.0,4317.0,1045723.0,4739.0,0.0,0.0,582278,4,2,2,582278,4,2,2,582278,4,2,6,582278,4,2,2,582278,4,2,2,582278,5,2,3,582278,0,0,0,582278,0,0,5,582278,0,0,0,582278,0,0,0,582278,0,0,5,582278,2,2,0,582278,0,0,0,582278,0,0,0,582278,0,0,0,582278,0,0,4,582278,0,582278,0,2329112,45706,18631,2071948720833404,2072010710235589,2072010710239675,2071948722715697
52,"void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul> >(int, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul>) [clone .kd]",2,0,158,2176,2176,4194304,256,0,0,24,0,64,64,0x0,0x788bf5a314c0,524288,25894312,2071461304,0,262144,262144,10223616,0,32882481.0,0.0,34211319.0,29018085.0,36284639.0,34273735.0,460700.0,24545724.0,1036250,196928,33080,163874,1036250,197008,33156,163875,1036250,197328,33468,163868,1036250,196928,33080,163848,1036250,197248,33392,163856,1036250,197248,33392,163856,1036250,197248,33392,163892,1036250,197248,33392,163880,1036250,196928,33080,163875,1036250,197008,33156,163874,1036250,197328,33468,163868,1036250,196928,33080,163848,1036250,197248,33392,163856,1036250,197248,33392,163856,1036250,197248,33392,163895,1036250,197248,33392,163882,1036250,0,1036250,78,4145000,3771928,951334,2071948727324311,2072010714620913,2072010714681042,2071948727964107
53,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,159,2176,2176,67108864,512,0,0,12,4,32,64,0x0,0x788c1746e700,2097152,26531584,2122325328,0,1048576,1048576,26214400,0,38794702.0,0.0,103587555.0,96867842.0,111522985.0,105743256.0,183280.0,298362.0,3495417,557936,263000,294945,3495417,557496,262570,294926,3495417,557379,262459,294934,3495417,557378,262458,294953,3495417,558018,263082,294993,3495417,558098,263158,295000,3495417,558337,263393,294991,3495417,558337,263393,294981,3495417,557936,263000,294945,3495417,557496,262570,294926,3495417,557376,262456,294938,3495417,557378,262458,294950,3495417,558016,263080,294995,3495417,558096,263156,295000,3495417,558336,263392,294998,3495417,558336,263392,294979,3495417,0,3495417,3880,13981668,11692182,2929169,2071948727983066,2072010714701152,2072010714891513,2071948729659485
54,__amd_rocclr_fillBufferAligned.kd,2,0,160,2176,2176,256,256,0,0,12,4,48,64,0x0,0x78cc9d60ba00,2,27,2126,0,1,1,93,0,66.0,0.0,2047.0,1999.0,1034752.0,2162.0,0.0,0.0,1046165,0,0,1,1046165,0,0,0,1046165,1,0,5,1046165,2,2,0,1046165,0,0,4,1046165,0,0,0,1046165,4,2,2,1046165,4,2,6,1046165,4,2,2,1046165,4,2,2,1046165,0,0,5,1046165,1,0,1,1046165,4,2,5,1046165,3,1,2,1046165,4,2,2,1046165,4,2,6,1046165,0,1046165,0,4184660,44023,17547,2071948728573879,2072010714891513,2072010714895359,2071948731191300
55,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4> >(at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4>) [clone .kd]",2,0,161,2176,2176,155648,512,4608,80,36,4,80,64,0x0,0x788bd542e7c0,529798,20677905,1654193540,0,609,529189,743643,0,32215430.0,4880.0,119644386.0,111113755.0,125041570.0,119677059.0,95054.0,276167.0,5577433,263218,1012,262210,5577433,263378,1168,262210,5577433,263130,936,262213,5577433,263138,932,262231,5577433,263584,1404,262225,5577433,263577,1244,262374,5577433,263442,1248,262222,5577433,263603,1401,262219,5577433,263218,1012,262210,5577433,263378,1168,262210,5577433,263129,936,262210,5577433,263138,932,262228,5577433,263584,1404,262222,5577433,263577,1245,262379,5577433,263440,1248,262220,5577433,263600,1400,262219,3503341,2074092,5577433,1935,22309732,13062394,3283291,2071948732821190,2072010718852950,2072010719056692,2071948733766648
56,__amd_rocclr_copyBuffer.kd,2,0,162,2176,2176,512,512,0,0,16,0,32,64,0x0,0x78cc9d60ba80,16,181,14620,0,8,8,190,0,521.0,0.0,7771.0,7536.0,1077430.0,8209.0,0.0,0.0,533615,4,2,2,533615,4,2,2,533615,4,2,6,533615,4,2,2,533615,4,2,2,533615,5,2,3,533615,0,0,0,533615,0,0,5,533615,0,0,0,533615,0,0,0,533615,0,0,5,533615,0,0,0,533615,2,2,0,533615,0,0,0,533615,0,0,0,533615,0,0,4,533615,0,533615,0,2134460,49228,22196,2071948733510920,2072010719056692,2072010719062300,2071948735542284
57,"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul> >(int, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul>) [clone .kd]",2,0,164,2176,2176,16777216,256,0,0,16,0,32,64,0x0,0x788c06a60e40,786432,53770502,4301619336,0,262144,524288,3932160,0,100678792.0,0.0,103189212.0,93963016.0,104770550.0,103207151.0,236726.0,91677958.0,2849665,524368,131148,393283,2849665,524608,131384,393272,2849665,524608,131384,393264,2849665,524608,131384,393265,2849665,524608,131384,393246,2849665,524608,131384,393247,2849665,524688,131460,393252,2849665,524288,131072,393253,2849665,524368,131148,393274,2849665,524608,131384,393271,2849665,524608,131384,393270,2849665,524608,131384,393268,2849665,524608,131384,393243,2849665,524608,131384,393245,2849665,524688,131460,393253,2849665,524288,131072,393254,2849665,0,2849665,77,11398660,10981014,2754219,2071948736419100,2072010719120666,2072010719295685,2071948737584563
58,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,165,2176,2176,16777216,256,0,0,12,4,32,64,0x0,0x788c7a3957c0,524288,24429465,1954236796,0,262144,262144,3145728,0,44954905.0,0.0,69866503.0,65079652.0,71691118.0,69885298.0,93545.0,57214510.0,2586239,393536,131384,262168,2586239,393536,131384,262152,2586239,393536,131384,262156,2586239,393536,131384,262152,2586239,393216,131072,262169,2586239,393216,131072,262165,2586239,393296,131148,262176,2586239,393216,131072,262166,2586239,393536,131384,262168,2586239,393536,131384,262152,2586239,393536,131384,262156,2586239,393536,131384,262152,2586239,393216,131072,262168,2586239,393216,131072,262167,2586239,393296,131148,262178,2586239,393216,131072,262168,2586239,0,2586239,77,10344956,7498930,1883940,2071948737424256,2072010719295685,2072010719443944,2071948739413117
59,__amd_rocclr_fillBufferAligned.kd,2,0,166,2176,2176,256,256,0,0,12,4,48,64,0x0,0x78cc9d60ba00,2,26,2072,0,1,1,93,0,66.0,0.0,1995.0,1945.0,1033580.0,2098.0,0.0,0.0,575309,0,0,1,575309,0,0,0,575309,0,0,4,575309,0,0,0,575309,0,0,4,575309,0,0,0,575309,4,2,2,575309,4,2,6,575309,6,4,2,575309,5,2,3,575309,0,0,5,575309,1,0,1,575309,4,2,5,575309,2,1,1,575309,4,2,2,575309,5,2,7,575309,0,575309,0,2301236,43894,16898,2071948737991235,2072010719443944,2072010719448471,2071948740948497
60,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,167,2176,2176,155648,512,2560,48,28,4,80,64,0x0,0x788bf5e18380,267654,6568896,525478748,0,609,267045,1816295,0,19158639.0,4880.0,72606754.0,68233609.0,78492144.0,72710271.0,47357.0,1020.0,3460663,132484,1340,131159,3460663,132696,1404,131292,3460663,132432,1324,131127,3460663,131976,856,131120,3460663,132192,1088,131127,3460663,132352,1248,131130,3460663,132384,1249,131159,3460663,132144,1012,131157,3460663,132507,1361,131161,3460663,132698,1404,131294,3460663,132432,1324,131130,3460663,131978,856,131122,3460663,132194,1090,131126,3460663,132353,1248,131130,3460663,132386,1248,131165,3460663,132146,1012,131163,3460663,0,3460663,2669,13842652,8216030,2074149,2071948738540797,2072010719448471,2072010719580787,2071948742352654
61,__amd_rocclr_copyBuffer.kd,2,0,168,2176,2176,512,512,0,0,16,0,32,64,0x0,0x78cc9d60ba80,8,113,9068,0,4,4,154,0,261.0,0.0,5411.0,5284.0,1051078.0,5658.0,0.0,0.0,1022036,4,2,7,1022036,6,4,2,1022036,4,2,6,1022036,4,2,2,1022036,4,2,6,1022036,5,2,3,1022036,0,0,0,1022036,0,0,6,1022036,0,0,4,1022036,0,0,0,1022036,0,0,7,1022036,0,0,0,1022036,0,0,3,1022036,0,0,0,1022036,0,0,0,1022036,0,0,4,1022036,0,1022036,915,4088144,46300,19232,2071948739146944,2072010719580787,2072010719584913,2071948743881505
62,__amd_rocclr_fillBufferAligned.kd,2,0,170,2176,2176,256,256,0,0,12,4,48,64,0x0,0x78cc9d60ba00,2,21,1690,0,1,1,93,0,66.0,0.0,1615.0,1564.0,1027700.0,1717.0,0.0,0.0,106614,0,0,5,106614,0,0,0,106614,0,0,4,106614,1,0,1,106614,2,2,0,106614,0,0,0,106614,4,2,2,106614,4,2,8,106614,4,2,7,106614,5,2,3,106614,0,0,5,106614,1,0,1,106614,4,2,2,106614,2,1,1,106614,4,2,2,106614,4,2,6,106614,0,106614,77,426456,43306,16332,2071948744720936,2072010719611712,2072010719613675,2071948745859510
63,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4>) [clone .kd]",2,0,171,2176,2176,155648,512,2560,48,28,4,80,64,0x0,0x788c78117880,267654,4842970,387418172,0,609,267045,743643,0,19764157.0,4880.0,53245250.0,48876247.0,58364346.0,53277701.0,49937.0,148.0,2762782,131665,545,131138,2762782,132216,936,131280,2762782,132032,936,131101,2762782,132376,1248,131128,2762782,132193,1089,131127,2762782,132192,1092,131121,2762782,132144,1012,131167,2762782,132144,1012,131154,2762782,131666,544,131139,2762782,132218,936,131282,2762782,132032,936,131103,2762782,132378,1248,131130,2762782,132192,1088,131128,2762782,132193,1092,131128,2762782,132146,1012,131168,2762782,132146,1012,131155,2762782,0,2762782,844,11051128,6095848,1539424,2071948745842985,2072010719618122,2072010719715386,2071948747795112
64,__amd_rocclr_copyBuffer.kd,2,0,172,2176,2176,512,512,0,0,16,0,32,64,0x0,0x78cc9d60ba80,8,111,8804,0,4,4,154,0,261.0,0.0,5299.0,5170.0,1052608.0,5545.0,0.0,0.0,1082153,4,2,3,1082153,4,2,2,1082153,4,2,6,1082153,4,2,2,1082153,4,2,6,1082153,5,2,3,1082153,0,0,0,1082153,0,0,5,1082153,0,0,0,1082153,0,0,0,1082153,0,0,6,1082153,0,0,0,1082153,0,0,3,1082153,2,2,0,1082153,0,0,0,1082153,0,0,4,1082153,0,1082153,0,4328612,46470,19424,2071948746410645,2072010719715386,2072010719719472,2071948749127372
65,"void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul> >(int, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul>) [clone .kd]",2,0,174,2176,2176,4194304,256,0,0,24,0,64,64,0x0,0x788bf5a314c0,524288,26760321,2140783912,0,262144,262144,10223616,0,34167408.0,0.0,35477427.0,30296241.0,37973339.0,35543471.0,440166.0,26772093.0,1090298,196928,33080,163856,1090298,196928,33080,163848,1090298,197328,33468,163868,1090298,196928,33080,163852,1090298,197248,33392,163879,1090298,197248,33392,163879,1090298,197248,33392,163894,1090298,197328,33468,163903,1090298,196928,33080,163857,1090298,196928,33080,163848,1090298,197328,33468,163868,1090298,196928,33080,163852,1090298,197248,33392,163877,1090298,197248,33392,163880,1090298,197248,33392,163889,1090298,197328,33468,163895,1090298,0,1090298,0,4361192,3949642,997873,2071948749981985,2072010719749196,2072010719811688,2071948751124905
66,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,175,2176,2176,67108864,512,0,0,12,4,32,64,0x0,0x788c1746e700,2097152,26606752,2128160512,0,1048576,1048576,26214400,0,40429220.0,0.0,104187981.0,97438861.0,112507805.0,106338640.0,181229.0,5381.0,3303847,557936,263000,295073,3303847,557376,262456,294946,3303847,557376,262456,294947,3303847,557376,262456,294952,3303847,558016,263080,294936,3303847,558096,263156,294963,3303847,558336,263392,294983,3303847,558416,263468,295008,3303847,557936,263000,295069,3303847,557376,262456,294950,3303847,557376,262456,294956,3303847,557376,262456,294947,3303847,558016,263080,294937,3303847,558096,263156,294962,3303847,558336,263392,294983,3303847,558436,263487,295008,3303847,0,3303847,2889,13215388,11795644,2958147,2071948751101711,2072010719811688,2072010719999646,2071948752259503
67,__amd_rocclr_fillBufferAligned.kd,2,0,176,2176,2176,256,256,0,0,12,4,48,64,0x0,0x78cc9d60ba00,2,23,1832,0,1,1,93,0,66.0,0.0,1751.0,1702.0,1035240.0,1860.0,0.0,0.0,794497,0,0,1,794497,0,0,0,794497,0,0,4,794497,0,0,0,794497,0,0,4,794497,0,0,0,794497,4,2,2,794497,4,2,7,794497,5,2,3,794497,6,4,2,794497,0,0,6,794497,1,0,1,794497,4,2,5,794497,3,1,2,794497,4,2,2,794497,4,2,6,794497,0,794497,1103,3177988,44060,17062,2071948751667648,2072010719999646,2072010720004092,2071948753306191
68,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4> >(at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4>) [clone .kd]",2,0,177,2176,2176,155648,512,4608,80,36,4,80,64,0x0,0x788bd542e7c0,529798,20435745,1634813036,0,609,529189,743643,0,32557672.0,4880.0,118399902.0,109871252.0,122993014.0,118432306.0,95312.0,409066.0,4496546,263228,1022,262241,4496546,263589,1371,262239,4496546,263300,1102,262229,4496546,263228,1018,262230,4496546,263434,1258,262184,4496546,263507,1178,262347,4496546,263452,1258,262241,4496546,263452,1258,262238,4496546,263222,1016,262243,4496546,263582,1364,262241,4496546,263294,1096,262225,4496546,263222,1012,262229,4496546,263428,1252,262185,4496546,263501,1173,262345,4496546,263444,1252,262233,4496546,263444,1252,262237,4496546,0,4496546,3550,17986184,12900162,3239286,2071948752557944,2072010720004092,2072010720207473,2071948754733161
69,__amd_rocclr_copyBuffer.kd,2,0,178,2176,2176,512,512,0,0,16,0,32,64,0x0,0x78cc9d60ba80,16,180,14416,0,8,8,190,0,521.0,0.0,7999.0,7770.0,1084738.0,8527.0,0.0,0.0,965789,4,2,3,965789,4,2,2,965789,6,4,6,965789,4,2,2,965789,4,2,6,965789,5,2,3,965789,0,0,0,965789,0,0,5,965789,0,0,0,965789,0,0,0,965789,0,0,6,965789,0,0,0,965789,0,0,3,965789,0,0,0,965789,0,0,0,965789,0,0,4,965789,0,965789,0,3863156,50040,22997,2071948753615779,2072010720207473,2072010720212240,2071948756275922
