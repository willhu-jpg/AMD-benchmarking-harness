Dispatch_ID,Kernel_Name,GPU_ID,queue-id,queue-index,pid,tid,Grid_Size,Workgroup_Size,LDS_Per_Workgroup,Scratch_Per_Workitem,Arch_VGPR,Accum_VGPR,SGPR,wave_size,sig,obj,DispatchNs,Start_Timestamp,End_Timestamp,CompleteNs
0,"void at::native::(anonymous namespace)::distribution_elementwise_grid_stride_kernel<float, 4, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}>(long, at::PhiloxCudaState, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}) [clone .kd]",2,0,0,4904,4904,622592,256,0,0,56,0,48,64,0x0,0x798a5526bf80,2072010192567397,2072010192658723,2072010192746893,2072010192761865
1,"void at::native::vectorized_elementwise_kernel<8, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul> >(int, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,1,4904,4904,8388608,256,0,0,20,4,32,64,0x0,0x794a31246d40,2072010198244973,2072010198264591,2072010198356086,2072010198356678
2,"void at::native::(anonymous namespace)::distribution_elementwise_grid_stride_kernel<float, 4, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}>(long, at::PhiloxCudaState, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}) [clone .kd]",2,0,2,4904,4904,622592,256,0,0,56,0,48,64,0x0,0x798a5526bf80,2072010198342026,2072010198356086,2072010198442294,2072010198442425
3,"void at::native::vectorized_elementwise_kernel<8, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul> >(int, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,3,4904,4904,8388608,256,0,0,20,4,32,64,0x0,0x794a31246d40,2072010198396276,2072010198442294,2072010198529342,2072010198529453
4,__amd_rocclr_fillBufferAligned.kd,2,0,4,4904,4904,77824,256,0,0,12,4,48,64,0x0,0x798a55223a00,2072010198576383,2072010198586066,2072010198596962,2072010198597103
5,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,5,4904,4904,303104,256,64000,0,128,352,112,64,0x0,0x794a08017980,2072010287417018,2072010287445179,2072010288682128,2072010288687186
6,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,6,4904,4904,303104,256,64000,0,128,352,112,64,0x0,0x794a08017980,2072010287656462,2072010288682128,2072010290202575,2072010290203418
7,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,7,4904,4904,303104,256,64000,0,128,352,112,64,0x0,0x794a08017980,2072010287683952,2072010290202575,2072010292304603,2072010292305606
8,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,10,4904,4904,303104,256,64000,0,128,352,112,64,0x0,0x794a08017980,2072010292378494,2072010292388007,2072010294188549,2072010294189201
9,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,14,4904,4904,303104,256,64000,0,128,352,112,64,0x0,0x794a08017980,2072010294232195,2072010294241467,2072010295886459,2072010295887122
10,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,18,4904,4904,303104,256,64000,0,128,352,112,64,0x0,0x794a08017980,2072010295920421,2072010295929042,2072010297498603,2072010297499156
11,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,22,4904,4904,303104,256,64000,0,128,352,112,64,0x0,0x794a08017980,2072010297532054,2072010297541146,2072010299111508,2072010299111850
12,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,26,4904,4904,303104,256,64000,0,128,352,112,64,0x0,0x794a08017980,2072010299144919,2072010299153690,2072010300689881,2072010300690394
13,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,30,4904,4904,303104,256,64000,0,128,352,112,64,0x0,0x794a08017980,2072010300723072,2072010300731984,2072010302227595,2072010302228238
14,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,34,4904,4904,303104,256,64000,0,128,352,112,64,0x0,0x794a08017980,2072010302259865,2072010302268816,2072010303751608,2072010303752222
15,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,38,4904,4904,303104,256,64000,0,128,352,112,64,0x0,0x794a08017980,2072010303783658,2072010303793110,2072010305237205,2072010305237618
16,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,42,4904,4904,303104,256,64000,0,128,352,112,64,0x0,0x794a08017980,2072010305268484,2072010305277584,2072010306719957,2072010306720661
17,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,46,4904,4904,303104,256,64000,0,128,352,112,64,0x0,0x794a08017980,2072010306751977,2072010306760617,2072010308177312,2072010308177936
18,matmul_kernel.kd,2,0,49,4904,4904,1048576,256,16384,0,16,128,48,64,0x0,0x798a55208600,2072010612330994,2072010612362091,2072010615035804,2072010615041132
19,matmul_kernel.kd,2,0,50,4904,4904,1048576,256,16384,0,16,128,48,64,0x0,0x798a55208600,2072010612571500,2072010615035804,2072010618185821,2072010618186412
20,matmul_kernel.kd,2,0,53,4904,4904,1048576,256,16384,0,16,128,48,64,0x0,0x798a55208600,2072010618262465,2072010618271708,2072010621154129,2072010621154742
21,matmul_kernel.kd,2,0,57,4904,4904,1048576,256,16384,0,16,128,48,64,0x0,0x798a55208600,2072010621212056,2072010621221068,2072010623919458,2072010623920161
22,matmul_kernel.kd,2,0,61,4904,4904,1048576,256,16384,0,16,128,48,64,0x0,0x798a55208600,2072010623969294,2072010623978546,2072010626728852,2072010626729365
23,matmul_kernel.kd,2,0,65,4904,4904,1048576,256,16384,0,16,128,48,64,0x0,0x798a55208600,2072010626776995,2072010626785857,2072010629439300,2072010629439412
24,matmul_kernel.kd,2,0,69,4904,4904,1048576,256,16384,0,16,128,48,64,0x0,0x798a55208600,2072010629485029,2072010629493460,2072010632053886,2072010632054208
25,matmul_kernel.kd,2,0,73,4904,4904,1048576,256,16384,0,16,128,48,64,0x0,0x798a55208600,2072010632098364,2072010632107405,2072010634674200,2072010634674663
26,matmul_kernel.kd,2,0,77,4904,4904,1048576,256,16384,0,16,128,48,64,0x0,0x798a55208600,2072010634717086,2072010634725676,2072010637257900,2072010637258153
27,matmul_kernel.kd,2,0,81,4904,4904,1048576,256,16384,0,16,128,48,64,0x0,0x798a55208600,2072010637301557,2072010637310178,2072010639767491,2072010639767824
28,matmul_kernel.kd,2,0,85,4904,4904,1048576,256,16384,0,16,128,48,64,0x0,0x798a55208600,2072010639809436,2072010639818366,2072010642301678,2072010642301731
29,matmul_kernel.kd,2,0,89,4904,4904,1048576,256,16384,0,16,128,48,64,0x0,0x798a55208600,2072010642345135,2072010642353635,2072010644758311,2072010644758744
30,"void at::native::vectorized_elementwise_kernel<4, at::native::FillFunctor<float>, std::array<char*, 1ul> >(int, at::native::FillFunctor<float>, std::array<char*, 1ul>) [clone .kd]",2,0,92,4904,4904,16777216,256,0,0,8,0,16,64,0x0,0x794a31d2e140,2072010647956543,2072010647970831,2072010648017259,2072010648017643
31,micro_tk(micro_globals) [clone .kd],2,0,93,4904,4904,1048576,256,32768,0,76,132,32,64,0x0,0x794a45ca0580,2072010648259160,2072010648270954,2072010651775296,2072010651775189
32,micro_tk(micro_globals) [clone .kd],2,0,95,4904,4904,1048576,256,32768,0,76,132,32,64,0x0,0x794a45ca0580,2072010651797402,2072010651805300,2072010655432944,2072010655433098
33,micro_tk(micro_globals) [clone .kd],2,0,98,4904,4904,1048576,256,32768,0,76,132,32,64,0x0,0x794a45ca0580,2072010655472827,2072010655481015,2072010658999778,2072010659000002
34,micro_tk(micro_globals) [clone .kd],2,0,103,4904,4904,1048576,256,32768,0,76,132,32,64,0x0,0x794a45ca0580,2072010659047362,2072010659055500,2072010662533643,2072010662533817
35,micro_tk(micro_globals) [clone .kd],2,0,108,4904,4904,1048576,256,32768,0,76,132,32,64,0x0,0x794a45ca0580,2072010662577392,2072010662585480,2072010666045355,2072010666045610
36,micro_tk(micro_globals) [clone .kd],2,0,113,4904,4904,1048576,256,32768,0,76,132,32,64,0x0,0x794a45ca0580,2072010666087552,2072010666097072,2072010669558590,2072010669558915
37,micro_tk(micro_globals) [clone .kd],2,0,118,4904,4904,1048576,256,32768,0,76,132,32,64,0x0,0x794a45ca0580,2072010669600697,2072010669608824,2072010673037614,2072010673037799
38,micro_tk(micro_globals) [clone .kd],2,0,123,4904,4904,1048576,256,32768,0,76,132,32,64,0x0,0x794a45ca0580,2072010673080723,2072010673089050,2072010676520925,2072010676521090
39,micro_tk(micro_globals) [clone .kd],2,0,128,4904,4904,1048576,256,32768,0,76,132,32,64,0x0,0x794a45ca0580,2072010676561099,2072010676570434,2072010679999865,2072010680006804
40,micro_tk(micro_globals) [clone .kd],2,0,133,4904,4904,1048576,256,32768,0,76,132,32,64,0x0,0x794a45ca0580,2072010680041525,2072010680049457,2072010683466389,2072010683466750
41,micro_tk(micro_globals) [clone .kd],2,0,138,4904,4904,1048576,256,32768,0,76,132,32,64,0x0,0x794a45ca0580,2072010683507430,2072010683515061,2072010686937802,2072010686938113
42,micro_tk(micro_globals) [clone .kd],2,0,143,4904,4904,1048576,256,32768,0,76,132,32,64,0x0,0x794a45ca0580,2072010686978823,2072010686986193,2072010690388784,2072010690388895
43,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,147,4904,4904,67108864,512,0,0,12,4,32,64,0x0,0x7949cf06ed00,2072010697137815,2072010697152635,2072010697323488,2072010697323870
44,"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul> >(int, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul>) [clone .kd]",2,0,148,4904,4904,16777216,256,0,0,16,0,32,64,0x0,0x7949be660e40,2072010703329230,2072010703343278,2072010703535603,2072010703535966
45,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,149,4904,4904,16777216,256,0,0,12,4,32,64,0x0,0x794a321957c0,2072010704874565,2072010704887241,2072010705006457,2072010705006550
46,__amd_rocclr_fillBufferAligned.kd,2,0,150,4904,4904,256,256,0,0,12,4,48,64,0x0,0x798a55223a00,2072010704982224,2072010705006457,2072010705010423,2072010705011217
47,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,151,4904,4904,155648,512,2560,48,28,4,80,64,0x0,0x794a30218380,2072010707494379,2072010707646601,2072010707773429,2072010707773842
48,__amd_rocclr_copyBuffer.kd,2,0,152,4904,4904,512,512,0,0,16,0,32,64,0x0,0x798a55223a80,2072010707635497,2072010707773429,2072010707777435,2072010707778268
49,__amd_rocclr_fillBufferAligned.kd,2,0,154,4904,4904,256,256,0,0,12,4,48,64,0x0,0x798a55223a00,2072010707834942,2072010707842651,2072010707844894,2072010707845257
50,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4>) [clone .kd]",2,0,155,4904,4904,155648,512,2560,48,28,4,80,64,0x0,0x794a30117880,2072010710124418,2072010710136443,2072010710235589,2072010710235742
51,__amd_rocclr_copyBuffer.kd,2,0,156,4904,4904,512,512,0,0,16,0,32,64,0x0,0x798a55223a80,2072010710138358,2072010710235589,2072010710239675,2072010710240379
52,"void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul> >(int, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul>) [clone .kd]",2,0,158,4904,4904,4194304,256,0,0,24,0,64,64,0x0,0x7949ad8314c0,2072010714607166,2072010714620913,2072010714681042,2072010714681626
53,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,159,4904,4904,67108864,512,0,0,12,4,32,64,0x0,0x7949cf06e700,2072010714692001,2072010714701152,2072010714891513,2072010714891526
54,__amd_rocclr_fillBufferAligned.kd,2,0,160,4904,4904,256,256,0,0,12,4,48,64,0x0,0x798a55223a00,2072010714711400,2072010714891513,2072010714895359,2072010714895893
55,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4> >(at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4>) [clone .kd]",2,0,161,4904,4904,155648,512,4608,80,36,4,80,64,0x0,0x79498d22e7c0,2072010718699507,2072010718852950,2072010719056692,2072010719057016
56,__amd_rocclr_copyBuffer.kd,2,0,162,4904,4904,512,512,0,0,16,0,32,64,0x0,0x798a55223a80,2072010718780717,2072010719056692,2072010719062300,2072010719062374
57,"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul> >(int, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul>) [clone .kd]",2,0,164,4904,4904,16777216,256,0,0,16,0,32,64,0x0,0x7949be660e40,2072010719111867,2072010719120666,2072010719295685,2072010719296630
58,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,165,4904,4904,16777216,256,0,0,12,4,32,64,0x0,0x794a321957c0,2072010719133389,2072010719295685,2072010719443944,2072010719444038
59,__amd_rocclr_fillBufferAligned.kd,2,0,166,4904,4904,256,256,0,0,12,4,48,64,0x0,0x798a55223a00,2072010719151335,2072010719443944,2072010719448471,2072010719448885
60,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,167,4904,4904,155648,512,2560,48,28,4,80,64,0x0,0x794a30218380,2072010719160058,2072010719448471,2072010719580787,2072010719580931
61,__amd_rocclr_copyBuffer.kd,2,0,168,4904,4904,512,512,0,0,16,0,32,64,0x0,0x798a55223a80,2072010719169903,2072010719580787,2072010719584913,2072010719584746
62,__amd_rocclr_fillBufferAligned.kd,2,0,170,4904,4904,256,256,0,0,12,4,48,64,0x0,0x798a55223a00,2072010719603474,2072010719611712,2072010719613675,2072010719614080
63,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4>) [clone .kd]",2,0,171,4904,4904,155648,512,2560,48,28,4,80,64,0x0,0x794a30117880,2072010719610054,2072010719618122,2072010719715386,2072010719715460
64,__amd_rocclr_copyBuffer.kd,2,0,172,4904,4904,512,512,0,0,16,0,32,64,0x0,0x798a55223a80,2072010719617445,2072010719715386,2072010719719472,2072010719720297
65,"void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul> >(int, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul>) [clone .kd]",2,0,174,4904,4904,4194304,256,0,0,24,0,64,64,0x0,0x7949ad8314c0,2072010719740216,2072010719749196,2072010719811688,2072010719811772
66,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,175,4904,4904,67108864,512,0,0,12,4,32,64,0x0,0x7949cf06e700,2072010719790731,2072010719811688,2072010719999646,2072010720002925
67,__amd_rocclr_fillBufferAligned.kd,2,0,176,4904,4904,256,256,0,0,12,4,48,64,0x0,0x798a55223a00,2072010719799674,2072010719999646,2072010720004092,2072010720007982
68,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4> >(at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4>) [clone .kd]",2,0,177,4904,4904,155648,512,4608,80,36,4,80,64,0x0,0x79498d22e7c0,2072010719806464,2072010720004092,2072010720207473,2072010720207427
69,__amd_rocclr_copyBuffer.kd,2,0,178,4904,4904,512,512,0,0,16,0,32,64,0x0,0x798a55223a80,2072010719814236,2072010720207473,2072010720212240,2072010720212535
