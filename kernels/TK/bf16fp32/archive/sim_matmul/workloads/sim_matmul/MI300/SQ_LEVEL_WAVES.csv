Dispatch_ID,Kernel_Name,GPU_ID,queue-id,queue-index,pid,tid,Grid_Size,Workgroup_Size,LDS_Per_Workgroup,Scratch_Per_Workitem,Arch_VGPR,Accum_VGPR,SGPR,wave_size,sig,obj,SQ_CYCLES,SQ_WAVES,SQ_WAVE_CYCLES,SQ_BUSY_CYCLES,SQ_LEVEL_WAVES,SQ_ACCUM_PREV_HIRES,SQ_INSTS_VALU_INT32,SQ_INSTS_VALU_INT64,TA_ADDR_STALLED_BY_TC_CYCLES_sum,TA_TOTAL_WAVEFRONTS_sum,TCP_UTCL1_TRANSLATION_MISS_sum,TCP_UTCL1_TRANSLATION_HIT_sum,TCP_UTCL1_PERMISSION_MISS_sum,TCP_UTCL1_REQUEST_sum,TCC_TAG_STALL[0],TCC_BUBBLE[0],TCC_TOO_MANY_EA_WRREQS_STALL[0],TCC_TAG_STALL[1],TCC_BUBBLE[1],TCC_TOO_MANY_EA_WRREQS_STALL[1],TCC_TAG_STALL[2],TCC_BUBBLE[2],TCC_TOO_MANY_EA_WRREQS_STALL[2],TCC_TAG_STALL[3],TCC_BUBBLE[3],TCC_TOO_MANY_EA_WRREQS_STALL[3],TCC_TAG_STALL[4],TCC_BUBBLE[4],TCC_TOO_MANY_EA_WRREQS_STALL[4],TCC_TAG_STALL[5],TCC_BUBBLE[5],TCC_TOO_MANY_EA_WRREQS_STALL[5],TCC_TAG_STALL[6],TCC_BUBBLE[6],TCC_TOO_MANY_EA_WRREQS_STALL[6],TCC_TAG_STALL[7],TCC_BUBBLE[7],TCC_TOO_MANY_EA_WRREQS_STALL[7],TCC_TAG_STALL[8],TCC_BUBBLE[8],TCC_TOO_MANY_EA_WRREQS_STALL[8],TCC_TAG_STALL[9],TCC_BUBBLE[9],TCC_TOO_MANY_EA_WRREQS_STALL[9],TCC_TAG_STALL[10],TCC_BUBBLE[10],TCC_TOO_MANY_EA_WRREQS_STALL[10],TCC_TAG_STALL[11],TCC_BUBBLE[11],TCC_TOO_MANY_EA_WRREQS_STALL[11],TCC_TAG_STALL[12],TCC_BUBBLE[12],TCC_TOO_MANY_EA_WRREQS_STALL[12],TCC_TAG_STALL[13],TCC_BUBBLE[13],TCC_TOO_MANY_EA_WRREQS_STALL[13],TCC_TAG_STALL[14],TCC_BUBBLE[14],TCC_TOO_MANY_EA_WRREQS_STALL[14],TCC_TAG_STALL[15],TCC_BUBBLE[15],TCC_TOO_MANY_EA_WRREQS_STALL[15],TCC_CYCLE_sum,CPC_ME1_BUSY_FOR_PACKET_DECODE,CPC_CPC_UTCL2IU_STALL,SPI_RA_WAVE_SIMD_FULL_CSN,SPI_RA_VGPR_SIMD_FULL_CSN,GRBM_COUNT,GRBM_GUI_ACTIVE,DispatchNs,Start_Timestamp,End_Timestamp,CompleteNs
0,"void at::native::(anonymous namespace)::distribution_elementwise_grid_stride_kernel<float, 4, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}>(long, at::PhiloxCudaState, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}) [clone .kd]",2,0,0,2424,2424,622592,256,0,0,56,0,48,64,0x0,0x7840d001bf80,5716941,9728,246889013,5222007,0,987772068,7443456,9025536,35889.0,1048576.0,139717.0,2232260.0,0.0,4194304.0,2043,0,0,1119,0,0,1812,0,0,1754,0,0,2306,0,0,1841,0,0,2075,0,0,1852,0,0,1979,0,0,1053,0,0,1794,0,0,1751,0,0,2342,0,0,1750,0,0,2038,0,0,1859,0,0,22854080.0,790085,0,0,0,1428380,1428380,2071953818575113,2072010192658723,2072010192746893,2071953827913182
1,"void at::native::vectorized_elementwise_kernel<8, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul> >(int, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,1,2424,2424,8388608,256,0,0,20,4,32,64,0x0,0x7808ad046d40,6229597,131072,369299181,5664187,0,1480114640,2097152,0,3505718.0,262144.0,35462.0,2939806.0,0.0,4194304.0,319214,65536,0,448973,65536,0,168742,65536,0,244664,65536,0,250002,65536,0,237245,65536,0,164145,65536,0,189936,65536,0,277903,65536,0,472797,65536,0,170674,65536,0,262428,65536,0,265300,65536,0,215064,65536,0,168317,65536,0,182545,65536,0,24903424.0,158443,0,8048059,0,1556464,1556464,2071953832660181,2072010198264591,2072010198356086,2071953833258375
2,"void at::native::(anonymous namespace)::distribution_elementwise_grid_stride_kernel<float, 4, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}>(long, at::PhiloxCudaState, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}) [clone .kd]",2,0,2,2424,2424,622592,256,0,0,56,0,48,64,0x0,0x7840d001bf80,7099445,9728,247183661,5227861,0,988950280,7443456,9025536,1461.0,1048576.0,139810.0,2229637.0,0.0,4194304.0,5753,0,0,4668,0,0,5557,0,0,5479,0,0,5447,0,0,2681,0,0,5933,0,0,5815,0,0,5522,0,0,4596,0,0,5517,0,0,5426,0,0,5339,0,0,2857,0,0,5847,0,0,5744,0,0,28384144.0,1131687,0,0,0,1774009,1774009,2071953833241751,2072010198356086,2072010198442294,2071953834778383
3,"void at::native::vectorized_elementwise_kernel<8, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul> >(int, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,3,2424,2424,8388608,256,0,0,20,4,32,64,0x0,0x7808ad046d40,7852321,131072,357398208,5509056,0,1432508840,2097152,0,3093615.0,262144.0,35144.0,2951633.0,0.0,4194304.0,237236,65536,0,494003,65536,0,172943,65536,0,227012,65536,0,177790,65536,0,158927,65536,0,119708,65536,0,131865,65536,0,305815,65536,0,462000,65536,0,179897,65536,0,231953,65536,0,195210,65536,0,173285,65536,0,118136,65536,0,153482,65536,0,31396208.0,598521,0,7650859,0,1962263,1962263,2071953833761349,2072010198442294,2072010198529342,2071953836055502
4,__amd_rocclr_fillBufferAligned.kd,2,0,4,2424,2424,77824,256,0,0,12,4,48,64,0x0,0x7808c1a93a00,2680973,1216,3128855,339178,0,12546976,4864,79232,3.0,25600.0,3904.0,302879.0,0.0,409600.0,3870,0,0,4455,0,0,5120,0,0,5375,0,0,5281,0,0,4694,0,0,3408,0,0,4855,0,0,3347,0,0,3935,0,0,5609,0,0,5250,0,0,3792,0,0,4356,0,0,2681,0,0,2293,0,0,10710976.0,633469,0,0,0,669436,669436,2071953834823730,2072010198586066,2072010198596962,2071953837300933
5,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,5,2424,2424,303104,256,64000,0,128,352,112,64,0x0,0x780884017980,67894565,4736,620658004,67375044,0,2482735852,2424704,0,11650928.0,13601792.0,81581.0,215846696.0,0.0,216006656.0,26534,907420,0,32405,907104,0,31884,906851,0,32124,906520,0,31944,907311,0,29031,907050,0,30992,906987,0,36893,906702,0,27149,907094,0,34497,906752,0,28634,906711,0,35444,906429,0,30085,906953,0,29507,906802,0,34801,906690,0,35138,906384,0,271563952.0,4330376,0,0,402715969,16972747,16972747,2071953923438014,2072010287445179,2072010288682128,2071953925411812
6,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,6,2424,2424,303104,256,64000,0,128,352,112,64,0x0,0x780884017980,71997013,4736,607220263,65834195,0,2428984660,2424704,0,10779270.0,13601792.0,83388.0,215843218.0,0.0,216006656.0,713,819420,0,1357,819376,0,632,819350,0,1285,819369,0,1311,819330,0,1239,819277,0,1248,819330,0,1339,819307,0,769,819432,0,1372,819356,0,689,819428,0,1281,819431,0,1288,819281,0,1259,819219,0,1240,819257,0,1361,819177,0,287972560.0,5637061,0,0,393960322,17998285,17998285,2071953924204747,2072010288682128,2072010290202575,2071953927796158
7,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,7,2424,2424,303104,256,64000,0,128,352,112,64,0x0,0x780884017980,68335941,4736,608484689,66000919,0,2434042712,2424704,0,10975254.0,13601792.0,83487.0,215843051.0,0.0,216006656.0,762,820624,0,1422,820641,0,725,820498,0,1360,820560,0,1356,820463,0,1275,820517,0,1286,820411,0,1353,820477,0,791,820514,0,1363,820560,0,725,820450,0,1276,820483,0,1342,820531,0,1255,820559,0,1256,820437,0,1354,820480,0,273330416.0,4690442,0,0,394919244,17083151,17083151,2071953924694011,2072010290202575,2072010292304603,2071953929856945
8,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,10,2424,2424,303104,256,64000,0,128,352,112,64,0x0,0x780884017980,68884829,4736,630432436,68326059,0,2521833656,2424704,0,12819279.0,13601792.0,81593.0,215846692.0,0.0,216006656.0,94563,850095,0,60877,850033,0,59938,850040,0,60283,850064,0,115458,850337,0,115516,850144,0,79695,850106,0,116073,850054,0,74709,850500,0,76798,850281,0,75966,850195,0,77046,850115,0,61286,850152,0,60578,850007,0,82585,850114,0,81339,850048,0,275526432.0,4274320,0,0,412588815,17220402,17220402,2071953930532294,2072010292388007,2072010294188549,2071953932790763
9,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,14,2424,2424,303104,256,64000,0,128,352,112,64,0x0,0x780884017980,67002905,4736,612372047,66433053,0,2449591704,2424704,0,11289399.0,13601792.0,81585.0,215846715.0,0.0,216006656.0,22407,844178,0,27665,844146,0,26580,844225,0,28191,844100,0,29073,844288,0,25831,844187,0,28232,844186,0,30055,844086,0,16971,844374,0,20948,844273,0,20528,844232,0,22277,844119,0,17445,844228,0,16636,844189,0,21747,844362,0,20678,844250,0,268005680.0,4264091,0,0,397897347,16750355,16750355,2071953933663294,2072010294241467,2072010295886459,2071953936021451
10,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,18,2424,2424,303104,256,64000,0,128,352,112,64,0x0,0x780884017980,68941461,4736,630581091,68352825,0,2522427512,2424704,0,13418557.0,13601792.0,81593.0,215846695.0,0.0,216006656.0,22301,855562,0,27289,855599,0,28357,855601,0,31179,855639,0,28821,855777,0,25613,855729,0,50475,855554,0,54650,855580,0,24839,855775,0,32006,855812,0,50789,855604,0,54985,855725,0,34989,855746,0,34090,855746,0,33950,855598,0,36186,855749,0,275753232.0,4265755,0,0,413459498,17234577,17234577,2071953936854593,2072010295929042,2072010297498603,2071953939259979
11,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,22,2424,2424,303104,256,64000,0,128,352,112,64,0x0,0x780884017980,67184685,4736,613811359,66547537,0,2455349144,2424704,0,11928624.0,13601792.0,81585.0,215846714.0,0.0,216006656.0,20671,855707,0,26776,855511,0,25729,856106,0,28638,855833,0,26461,855704,0,25270,855508,0,27844,855973,0,31206,855699,0,26587,855752,0,31753,855560,0,27868,856062,0,33023,855718,0,28440,855791,0,28803,855526,0,29069,856167,0,32660,855937,0,268724608.0,4280971,0,0,398947442,16795288,16795288,2071953940181011,2072010297541146,2072010299111508,2071953942621750
12,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,26,2424,2424,303104,256,64000,0,128,352,112,64,0x0,0x780884017980,68947397,4736,630528673,68337726,0,2522217856,2424704,0,13748630.0,13601792.0,81587.0,215846698.0,0.0,216006656.0,17813,855207,0,25103,854798,0,22106,855366,0,25168,855136,0,40147,854961,0,39449,854547,0,39555,855354,0,42299,855031,0,35266,854975,0,38299,854662,0,57216,855461,0,58176,855144,0,17006,855179,0,16983,854841,0,35565,855488,0,20691,855228,0,275776656.0,4281226,0,0,412827345,17236041,17236041,2071953943391469,2072010299153690,2072010300689881,2071953945690849
13,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,30,2424,2424,303104,256,64000,0,128,352,112,64,0x0,0x780884017980,69008725,4736,630862780,68382650,0,2523555000,2424704,0,12880829.0,13601792.0,81583.0,215846717.0,0.0,216006656.0,36343,860094,0,41260,860041,0,41835,860269,0,64008,860161,0,84429,860187,0,38741,859995,0,42364,860267,0,44405,860133,0,33953,860125,0,39308,859926,0,61727,860164,0,64448,860016,0,42020,860096,0,41014,860013,0,40362,860131,0,42113,860091,0,276023360.0,4277039,0,0,413619628,17251460,17251460,2071953946467487,2072010300731984,2072010302227595,2071953948803582
14,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,34,2424,2424,303104,256,64000,0,128,352,112,64,0x0,0x780884017980,67057924,4736,612995572,66495915,0,2452086032,2424704,0,11720454.0,13601792.0,81588.0,215846695.0,0.0,216006656.0,14425,859095,0,20981,859119,0,16831,859028,0,19885,858947,0,17051,859120,0,14747,859127,0,19423,859021,0,22277,858962,0,8286,859200,0,16903,859168,0,12531,859113,0,18312,858950,0,13595,859243,0,14562,859196,0,13517,859121,0,19375,858991,0,268223136.0,4261546,0,0,398570592,16763946,16763946,2071953949539750,2072010302268816,2072010303751608,2071953951903665
15,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,38,2424,2424,303104,256,64000,0,128,352,112,64,0x0,0x780884017980,67061281,4736,613096627,66509788,0,2452490076,2424704,0,11657376.0,13601792.0,81581.0,215846722.0,0.0,216006656.0,15898,850107,0,18988,850046,0,19009,850107,0,21242,850048,0,19794,850028,0,19085,849940,0,18177,850027,0,22479,849952,0,17622,850242,0,20967,850154,0,18735,850190,0,22570,850102,0,19614,850284,0,19800,850129,0,19447,850248,0,20641,850124,0,268231792.0,4262198,0,0,398631108,16764487,16764487,2071953952651451,2072010303793110,2072010305237205,2071953955036448
16,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,42,2424,2424,303104,256,64000,0,128,352,112,64,0x0,0x780884017980,67292341,4736,614868465,66722521,0,2459577208,2424704,0,12427922.0,13601792.0,81587.0,215846703.0,0.0,216006656.0,26625,863797,0,30932,863337,0,29524,863877,0,32809,863578,0,29055,863929,0,25895,863464,0,29988,863931,0,31125,863598,0,23861,863992,0,30163,863591,0,26078,863944,0,29448,863661,0,26197,863876,0,24881,863479,0,29174,863935,0,30464,863645,0,269155520.0,4288656,0,0,399507572,16822220,16822220,2071953955964590,2072010305277584,2072010306719957,2071953958406051
17,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,46,2424,2424,303104,256,64000,0,128,352,112,64,0x0,0x780884017980,67254069,4736,614612593,66629791,0,2458554252,2424704,0,12234537.0,13601792.0,81583.0,215846711.0,0.0,216006656.0,26005,858337,0,30222,858451,0,29756,858610,0,32378,858814,0,28416,858380,0,27483,858579,0,26543,858540,0,31657,858681,0,26728,858270,0,31809,858435,0,26575,858551,0,32291,858735,0,26314,858267,0,25456,858392,0,27708,858462,0,32384,858723,0,269001712.0,4281853,0,0,399409785,16812607,16812607,2071953959284860,2072010306760617,2072010308177312,2071953961717567
18,matmul_kernel.kd,2,0,49,2424,2424,1048576,256,16384,0,16,128,48,64,0x0,0x7840d0008600,144401629,16384,3815476181,143649018,0,15262264176,13975552,16941056,135391085.0,17039360.0,229135.0,284983537.0,0.0,285212672.0,11419,4703701,0,49430,4703817,0,16304,4703232,0,33339,4703034,0,53470,4703296,0,456759,4703725,0,84879,4703181,0,114934,4703346,0,18110,4702918,0,71924,4703113,0,10081,4703673,0,29673,4703811,0,47904,4703964,0,440060,4704164,0,75766,4703298,0,111041,4703326,0,577592512.0,5025203,0,0,877376859,36099532,36099532,2071954268329622,2072010612362091,2072010615035804,2071954271652676
19,matmul_kernel.kd,2,0,50,2424,2424,1048576,256,16384,0,16,128,48,64,0x0,0x7840d0008600,108074477,16384,2753566157,106386969,0,11014623412,13975552,16941056,90182527.0,17039360.0,261116.0,284951556.0,0.0,285212672.0,16867,3833056,0,49271,3833069,0,41212,3832322,0,45837,3832281,0,31481,3831529,0,17517,3831587,0,31896,3831416,0,45249,3831350,0,16670,3832063,0,4670,3832164,0,75897,3832494,0,52102,3832570,0,72718,3833063,0,69769,3833471,0,2359,3832423,0,9332,3832449,0,432283536.0,5125944,0,0,664271453,27017721,27017721,2071954269130516,2072010615035804,2072010618185821,2071954275138360
20,matmul_kernel.kd,2,0,53,2424,2424,1048576,256,16384,0,16,128,48,64,0x0,0x7840d0008600,120862517,16384,3139251751,120044063,0,12557365888,13975552,16941056,128874836.0,17039360.0,251193.0,284961479.0,0.0,285212672.0,8848,4520110,0,27601,4519838,0,11610,4520031,0,22806,4519885,0,25096,4519996,0,194195,4519809,0,36647,4519955,0,38561,4520208,0,15186,4519146,0,45412,4519291,0,11697,4520365,0,35990,4520447,0,13812,4519748,0,110107,4519701,0,29559,4520232,0,38857,4520306,0,483436592.0,4914143,0,0,718011513,30214787,30214787,2071954275852446,2072010618271708,2072010621154129,2071954279175339
21,matmul_kernel.kd,2,0,57,2424,2424,1048576,256,16384,0,16,128,48,64,0x0,0x7840d0008600,109175621,16384,2806204148,108298848,0,11225175876,13975552,16941056,108535689.0,17039360.0,253658.0,284959014.0,0.0,285212672.0,204904,3939020,0,290587,3939042,0,267579,3939438,0,232809,3939366,0,195179,3938978,0,224723,3938829,0,316241,3939549,0,267267,3939825,0,196690,3939467,0,146060,3939177,0,257306,3939410,0,304505,3939201,0,191566,3939128,0,227788,3939012,0,206235,3939199,0,256263,3939250,0,436689248.0,4939229,0,0,670071935,27293078,27293078,2071954279933230,2072010621221068,2072010623919458,2071954283256184
22,matmul_kernel.kd,2,0,61,2424,2424,1048576,256,16384,0,16,128,48,64,0x0,0x7840d0008600,109185073,16384,2806894650,108248410,0,11227937524,13975552,16941056,107537186.0,17039360.0,253565.0,284959107.0,0.0,285212672.0,27013,3983747,0,46419,3983702,0,51977,3983879,0,61487,3983997,0,37051,3983737,0,34078,3983672,0,51442,3983914,0,71859,3983703,0,44244,3982915,0,65618,3982961,0,45728,3982027,0,63744,3982043,0,104690,3983555,0,119858,3983471,0,52577,3983269,0,62264,3983490,0,436725984.0,4951918,0,0,669865103,27295374,27295374,2071954284014014,2072010623978546,2072010626728852,2071954287331380
23,matmul_kernel.kd,2,0,65,2424,2424,1048576,256,16384,0,16,128,48,64,0x0,0x7840d0008600,109508269,16384,2815557351,108608098,0,11262588384,13975552,16941056,109223137.0,17039360.0,253474.0,284959198.0,0.0,285212672.0,7352,3989375,0,18596,3989621,0,28138,3990261,0,13800,3990467,0,65011,3990081,0,28154,3990104,0,63035,3989028,0,45698,3989051,0,59390,3989312,0,69651,3989349,0,63842,3988613,0,53046,3988652,0,61415,3989358,0,83729,3989455,0,63404,3990787,0,73541,3990843,0,438019472.0,4974133,0,0,672898626,27376217,27376217,2071954288048220,2072010626785857,2072010629439300,2071954291345275
24,matmul_kernel.kd,2,0,69,2424,2424,1048576,256,16384,0,16,128,48,64,0x0,0x7840d0008600,109578645,16384,2818291853,108685626,0,11273526484,13975552,16941056,110265298.0,17039360.0,253600.0,284959072.0,0.0,285212672.0,91658,4013283,0,157950,4013245,0,89236,4012682,0,95035,4012813,0,54929,4012402,0,81030,4012580,0,112154,4012390,0,104932,4012265,0,110596,4013656,0,114593,4013684,0,168271,4012322,0,176728,4012409,0,100599,4013342,0,99601,4013117,0,74891,4013574,0,89320,4013495,0,438300384.0,4971449,0,0,671838300,27393774,27393774,2071954292066331,2072010629493460,2072010632053886,2071954295337979
25,matmul_kernel.kd,2,0,73,2424,2424,1048576,256,16384,0,16,128,48,64,0x0,0x7840d0008600,109451189,16384,2814263962,108538214,0,11257414880,13975552,16941056,111456508.0,17039360.0,253529.0,284959143.0,0.0,285212672.0,202864,3996528,0,276650,3996171,0,213769,3996858,0,223697,3996573,0,219826,3997006,0,220992,3997030,0,236923,3997392,0,254510,3997495,0,144162,3997057,0,192554,3996899,0,107098,3996709,0,140697,3996872,0,107000,3996301,0,109856,3996286,0,125542,3996251,0,194150,3996310,0,437789680.0,4962978,0,0,672695191,27361855,27361855,2071954296066967,2072010632107405,2072010634674200,2071954299333667
26,matmul_kernel.kd,2,0,77,2424,2424,1048576,256,16384,0,16,128,48,64,0x0,0x7840d0008600,109433101,16384,2813166031,108492988,0,11253022836,13975552,16941056,109211304.0,17039360.0,253363.0,284959309.0,0.0,285212672.0,5460,4041107,0,74497,4041381,0,10181,4040933,0,50763,4040875,0,28795,4040495,0,30115,4040432,0,6756,4041059,0,58826,4041163,0,2789,4042265,0,70616,4042426,0,3475,4042184,0,71619,4042041,0,5191,4042378,0,65105,4042514,0,5021,4042470,0,14194,4042575,0,437718096.0,4964920,0,0,672761970,27357381,27357381,2071954300068604,2072010634725676,2072010637257900,2071954303337097
27,matmul_kernel.kd,2,0,81,2424,2424,1048576,256,16384,0,16,128,48,64,0x0,0x7840d0008600,109186477,16384,2806843052,108281910,0,11227731128,13975552,16941056,107974844.0,17039360.0,253584.0,284959088.0,0.0,285212672.0,26312,4008272,0,42357,4008337,0,13450,4008926,0,21652,4008816,0,49930,4006957,0,53337,4007160,0,13058,4008315,0,61685,4008231,0,26136,4007380,0,40404,4007326,0,31788,4007185,0,46927,4007398,0,12684,4007454,0,11806,4007263,0,27982,4007857,0,44429,4007848,0,436733376.0,4950385,0,0,671836631,27295836,27295836,2071954304018294,2072010637310178,2072010639767491,2071954307318565
28,matmul_kernel.kd,2,0,85,2424,2424,1048576,256,16384,0,16,128,48,64,0x0,0x7840d0008600,109335477,16384,2810997432,108425449,0,11244348812,13975552,16941056,107835561.0,17039360.0,253472.0,284959200.0,0.0,285212672.0,91178,4059108,0,102963,4059261,0,92377,4060192,0,95679,4060183,0,70128,4059787,0,73679,4060016,0,113862,4060031,0,125941,4060137,0,160099,4059957,0,171867,4059855,0,175318,4060481,0,183929,4060367,0,95492,4059819,0,118272,4060056,0,118852,4060337,0,121472,4060291,0,437328928.0,4938645,0,0,676581353,27333058,27333058,2071954307990368,2072010639818366,2072010642301678,2071954311303326
29,matmul_kernel.kd,2,0,89,2424,2424,1048576,256,16384,0,16,128,48,64,0x0,0x7840d0008600,109492861,16384,2814532873,108582897,0,11258490744,13975552,16941056,108748787.0,17039360.0,253485.0,284959187.0,0.0,285212672.0,72903,4052355,0,85358,4052131,0,122392,4052726,0,127208,4052434,0,120803,4052526,0,77871,4052541,0,120359,4053201,0,131370,4053200,0,76144,4052222,0,95583,4052418,0,76635,4052555,0,68384,4052581,0,78542,4052449,0,81063,4052698,0,99027,4052607,0,83583,4052465,0,437958944.0,4956728,0,0,674084186,27372434,27372434,2071954311987889,2072010642353635,2072010644758311,2071954315301358
30,"void at::native::vectorized_elementwise_kernel<4, at::native::FillFunctor<float>, std::array<char*, 1ul> >(int, at::native::FillFunctor<float>, std::array<char*, 1ul>) [clone .kd]",2,0,92,2424,2424,16777216,256,0,0,8,0,16,64,0x0,0x7808adb2e140,3595045,262144,206278313,3072068,0,830975716,0,0,44.0,262144.0,38783.0,3231594.0,0.0,4194304.0,213114,0,0,214773,0,0,205724,0,0,194087,0,0,153981,0,0,130884,0,0,153355,0,0,172751,0,0,219281,0,0,228532,0,0,206438,0,0,196481,0,0,145687,0,0,130476,0,0,151768,0,0,168192,0,0,14366960.0,128778,0,3496836,0,897935,897935,2071954319409013,2072010647970831,2072010648017259,2071954319963503
31,micro_tk(micro_globals) [clone .kd],2,0,93,2424,2424,1048576,256,32768,0,76,132,32,64,0x0,0x7808c1a20580,209361641,16384,3686108835,206657987,0,14744795524,786432,18071552,20794204.0,219152384.0,179021.0,272450739.0,0.0,272629760.0,86602,1456384,0,120777,1456338,0,81030,1456427,0,107045,1456395,0,58346,1456407,0,50491,1456397,0,67889,1456408,0,69887,1456383,0,85966,1456426,0,123129,1456428,0,83688,1456450,0,110568,1456449,0,54601,1456412,0,51264,1456421,0,69092,1456394,0,70550,1456386,0,837434816.0,7601227,0,0,1422219307,52339676,52339676,2071954320249325,2072010648270954,2072010651775296,2071954324617093
32,micro_tk(micro_globals) [clone .kd],2,0,95,2424,2424,1048576,256,32768,0,76,132,32,64,0x0,0x7808c1a20580,207742765,16384,3681038094,207318920,0,14724512168,786432,18071552,21689401.0,219152384.0,196292.0,272433468.0,0.0,272629760.0,130473,1509144,0,166779,1509185,0,123237,1509099,0,133931,1509123,0,96112,1509099,0,88799,1509127,0,92006,1509123,0,109328,1509142,0,122903,1509134,0,155533,1509161,0,117100,1509162,0,139119,1509173,0,81341,1509127,0,79707,1509122,0,90765,1509163,0,108150,1509166,0,830955712.0,7363962,0,0,1414539263,51934732,51934732,2071954325253975,2072010651805300,2072010655432944,2071954329754831
33,micro_tk(micro_globals) [clone .kd],2,0,98,2424,2424,1048576,256,32768,0,76,132,32,64,0x0,0x7808c1a20580,206882993,16384,3682791609,206484265,0,14731526740,786432,18071552,22308431.0,219152384.0,198184.0,272431576.0,0.0,272629760.0,125303,1471043,0,159692,1471042,0,110190,1471039,0,136383,1471000,0,80837,1471023,0,77849,1471040,0,93839,1471021,0,110754,1471012,0,124284,1471128,0,155821,1471129,0,113938,1471136,0,130926,1471124,0,77128,1471100,0,71574,1471082,0,90178,1471111,0,107385,1471131,0,827517952.0,6971704,0,0,1425248910,51719872,51719872,2071954330563377,2072010655481015,2072010658999778,2071954334987498
34,micro_tk(micro_globals) [clone .kd],2,0,103,2424,2424,1048576,256,32768,0,76,132,32,64,0x0,0x7808c1a20580,206699909,16384,3677528914,206284281,0,14710475564,786432,18071552,22401458.0,219152384.0,204388.0,272425372.0,0.0,272629760.0,135413,1531684,0,159873,1531710,0,126661,1531678,0,146099,1531692,0,97674,1531685,0,92310,1531708,0,119014,1531682,0,125688,1531695,0,136600,1531703,0,165868,1531696,0,129996,1531636,0,149139,1531629,0,96864,1531687,0,95422,1531699,0,117685,1531744,0,125581,1531727,0,826784528.0,7011890,0,0,1420773811,51674033,51674033,2071954335710087,2072010659055500,2072010662533643,2071954340130974
35,micro_tk(micro_globals) [clone .kd],2,0,108,2424,2424,1048576,256,32768,0,76,132,32,64,0x0,0x7808c1a20580,205362605,16384,3664556094,204870157,0,14658584016,786432,18071552,22283825.0,219152384.0,201385.0,272428375.0,0.0,272629760.0,107128,1816039,0,140340,1816063,0,113397,1815978,0,127014,1816024,0,81028,1815935,0,78448,1815966,0,89135,1816002,0,98846,1816078,0,109086,1816004,0,143865,1816001,0,109268,1816023,0,129447,1816038,0,78246,1816026,0,78098,1816050,0,89731,1816064,0,97914,1816066,0,821437392.0,6907102,0,0,1380769472,51339837,51339837,2071954340895334,2072010662585480,2072010666045355,2071954345378033
36,micro_tk(micro_globals) [clone .kd],2,0,113,2424,2424,1048576,256,32768,0,76,132,32,64,0x0,0x7808c1a20580,205207504,16384,3661293511,204773338,0,14645533648,786432,18071552,22605004.0,219152384.0,206358.0,272423402.0,0.0,272629760.0,105141,1914514,0,132669,1914530,0,101941,1914520,0,120902,1914490,0,83672,1914493,0,77771,1914480,0,90685,1914547,0,98970,1914559,0,110834,1914392,0,138049,1914397,0,101921,1914402,0,122072,1914407,0,83633,1914416,0,75509,1914420,0,91054,1914455,0,99005,1914469,0,820829632.0,6982778,0,0,1378118309,51301852,51301852,2071954346090957,2072010666097072,2072010669558590,2071954350579794
37,micro_tk(micro_globals) [clone .kd],2,0,118,2424,2424,1048576,256,32768,0,76,132,32,64,0x0,0x7808c1a20580,208505881,16384,3703953085,208082547,0,14816171996,786432,18071552,21863213.0,219152384.0,199137.0,272430623.0,0.0,272629760.0,121914,1520171,0,158968,1520212,0,117241,1520081,0,139657,1520113,0,83927,1520132,0,73547,1520162,0,96791,1520112,0,103369,1520141,0,122873,1520291,0,163708,1520283,0,116082,1520153,0,139088,1520180,0,85612,1520162,0,73684,1520200,0,95322,1520154,0,107203,1520173,0,834011216.0,7281556,0,0,1424204040,52125701,52125701,2071954351263285,2072010669608824,2072010673037614,2071954355697582
38,micro_tk(micro_globals) [clone .kd],2,0,123,2424,2424,1048576,256,32768,0,76,132,32,64,0x0,0x7808c1a20580,208771477,16384,3719757816,208362731,0,14879390692,786432,18071552,22685519.0,219152384.0,204571.0,272425189.0,0.0,272629760.0,116204,1816671,0,148521,1816700,0,121281,1816588,0,138445,1816620,0,97142,1816587,0,89255,1816643,0,106823,1816630,0,124270,1816663,0,116044,1816950,0,150420,1816967,0,120366,1816867,0,139143,1816850,0,94418,1817056,0,87571,1817097,0,104578,1816927,0,118375,1816926,0,835072000.0,7092237,0,0,1411627259,52192000,52192000,2071954356476134,2072010673089050,2072010676520925,2071954360863361
39,micro_tk(micro_globals) [clone .kd],2,0,128,2424,2424,1048576,256,32768,0,76,132,32,64,0x0,0x7808c1a20580,209225749,16384,3724611904,208809012,0,14898807820,786432,18071552,21631010.0,219152384.0,196355.0,272433405.0,0.0,272629760.0,135128,1507094,0,178074,1507128,0,126349,1507071,0,154676,1507105,0,98285,1507022,0,93556,1507046,0,111590,1507095,0,125650,1507110,0,138064,1507053,0,179304,1507072,0,134775,1507034,0,154581,1507053,0,93471,1507041,0,89571,1507041,0,107706,1507072,0,127572,1507063,0,836887808.0,7185187,0,0,1435728679,52305488,52305488,2071954361586109,2072010676570434,2072010679999865,2071954365996411
40,micro_tk(micro_globals) [clone .kd],2,0,133,2424,2424,1048576,256,32768,0,76,132,32,64,0x0,0x7808c1a20580,209782993,16384,3726850686,209357190,0,14907762272,786432,18071552,21787241.0,219152384.0,198603.0,272431157.0,0.0,272629760.0,127316,1623642,0,167333,1623665,0,126039,1623752,0,151476,1623737,0,93403,1623652,0,82554,1623643,0,103284,1623684,0,119034,1623669,0,132011,1623737,0,168909,1623768,0,127349,1623750,0,149417,1623756,0,91142,1623794,0,86967,1623790,0,108633,1623881,0,116190,1623861,0,839118384.0,7298971,0,0,1420071231,52444899,52444899,2071954366778608,2072010680049457,2072010683466389,2071954371238753
41,micro_tk(micro_globals) [clone .kd],2,0,138,2424,2424,1048576,256,32768,0,76,132,32,64,0x0,0x7808c1a20580,209703109,16384,3720296058,209281939,0,14881544248,786432,18071552,22063218.0,219152384.0,196611.0,272433149.0,0.0,272629760.0,121910,1583489,0,149002,1583532,0,119821,1583488,0,145920,1583509,0,77769,1583396,0,75756,1583409,0,88661,1583501,0,102209,1583534,0,120527,1583396,0,149348,1583399,0,122908,1583481,0,142152,1583462,0,79980,1583465,0,73062,1583440,0,87501,1583526,0,99528,1583502,0,838797584.0,7336104,0,0,1422009346,52424849,52424849,2071954371980069,2072010683515061,2072010686937802,2071954376498450
42,micro_tk(micro_globals) [clone .kd],2,0,143,2424,2424,1048576,256,32768,0,76,132,32,64,0x0,0x7808c1a20580,210944657,16384,3747260129,210513153,0,14989400316,786432,18071552,21760585.0,219152384.0,196944.0,272432816.0,0.0,272629760.0,135609,1537461,0,170415,1537493,0,132541,1537472,0,155827,1537484,0,99474,1537503,0,94288,1537503,0,109850,1537448,0,121861,1537428,0,140157,1537445,0,169272,1537462,0,133258,1537463,0,154694,1537471,0,105382,1537498,0,92801,1537505,0,112722,1537439,0,124350,1537424,0,843765424.0,7290901,0,0,1441639541,52735339,52735339,2071954377353435,2072010686986193,2072010690388784,2071954381790806
43,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,147,2424,2424,67108864,512,0,0,12,4,32,64,0x0,0x78084b06ed00,11440245,1048576,698085872,10975408,0,2817128292,5242880,2097152,524552.0,2097152.0,58250.0,7162765.0,0.0,8388608.0,1715,65536,0,1706,65536,0,1673,65536,0,1797,65536,0,1622,65536,0,1796,65536,0,704,65536,0,1453,65536,0,1646,65536,0,1707,65536,0,1703,65536,0,1769,65536,0,1534,65536,0,1722,65536,0,686,65536,0,1383,65536,0,45749264.0,116988,0,12659960,0,2859329,2859329,2071954389834841,2072010697152635,2072010697323488,2071954390504681
44,"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul> >(int, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul>) [clone .kd]",2,0,148,2424,2424,16777216,256,0,0,16,0,32,64,0x0,0x78083a660e40,12701489,262144,838465047,12240901,0,3359667764,0,0,230841.0,786432.0,111228.0,9677026.0,0.0,12582912.0,672155,262144,0,1426018,262144,0,585173,262144,0,815466,262144,0,853742,262144,0,939770,262144,0,829208,262144,0,894240,262144,0,621286,262144,0,1654577,262144,0,597013,262144,0,761415,262144,0,796131,262144,0,933678,262144,0,977181,262144,0,927815,262144,0,50792432.0,142538,0,22057138,0,3174527,3174527,2071954396969370,2072010703343278,2072010703535603,2071954397645490
45,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,149,2424,2424,16777216,256,0,0,12,4,32,64,0x0,0x7808add957c0,8070833,262144,516316780,7552320,0,2071107204,0,0,8683547.0,524288.0,57542.0,6076210.0,0.0,8388608.0,303919,131072,0,636866,131072,0,298345,131072,0,529802,131072,0,374030,131072,0,392447,131072,0,375222,131072,0,391928,131072,0,329396,131072,0,674932,131072,0,315602,131072,0,523267,131072,0,359000,131072,0,379176,131072,0,372049,131072,0,393646,131072,0,32271760.0,140554,0,10702849,0,2016985,2016985,2071954399146730,2072010704887241,2072010705006457,2071954399772776
46,__amd_rocclr_fillBufferAligned.kd,2,0,150,2424,2424,256,256,0,0,12,4,48,64,0x0,0x7808c1a93a00,3367837,4,2657,4069,0,10708,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,193,0,0,182,0,0,0,0,0,0,0,0,0,0,0,0,0,0,189,0,0,184,0,0,226,0,0,199,0,0,168,1,0,200,0,0,0,0,0,0,0,0,13457984.0,803613,0,0,0,841124,841124,2071954399745455,2072010705006457,2072010705010423,2071954401387393
47,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,151,2424,2424,155648,512,2560,48,28,4,80,64,0x0,0x780829a18380,17324585,2432,149456176,7963038,0,597880100,642500,267319,471913.0,267654.0,33073.0,3181193.0,304.0,4194996.0,2378,131074,0,2036,131074,0,2177,131072,0,1888,131074,0,2010,131072,0,1206,131072,0,1891,131074,0,1898,131074,0,2329,131072,0,2054,131072,0,2262,131072,0,1944,131072,0,2044,131072,0,1234,131072,0,1879,131072,0,1885,131072,0,69284464.0,2063411,0,0,0,4330279,4330279,2071954402958286,2072010707646601,2072010707773429,2071954403718020
48,__amd_rocclr_copyBuffer.kd,2,0,152,2424,2424,512,512,0,0,16,0,32,64,0x0,0x7808c1a93a80,2936369,8,4342,7209,0,17536,8,40,0.0,8.0,1.0,7.0,0.0,8.0,180,0,0,207,0,0,0,0,0,0,0,0,185,0,0,170,1,0,195,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11731808.0,695398,0,0,0,733238,733238,2071954403563662,2072010707773429,2072010707777435,2071954405284676
49,__amd_rocclr_fillBufferAligned.kd,2,0,154,2424,2424,256,256,0,0,12,4,48,64,0x0,0x7808c1a93a00,419321,4,2568,3793,0,10380,13,11,0.0,2.0,2.0,0.0,0.0,2.0,180,1,0,0,0,0,178,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,189,0,0,183,0,0,230,0,0,218,0,0,168,0,0,187,0,0,0,0,0,164,0,0,1663808.0,66004,0,0,0,103988,103988,2071954405887077,2072010707842651,2072010707844894,2071954406828729
50,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4>) [clone .kd]",2,0,155,2424,2424,155648,512,2560,48,28,4,80,64,0x0,0x78089cd17880,6398117,2432,111634545,5982396,0,446593328,642500,267319,699549.0,267654.0,33073.0,3015452.0,304.0,4194996.0,1788,131074,0,1981,131074,0,1703,131072,0,1030,131074,0,2062,131072,0,1537,131072,0,1697,131074,0,1903,131074,0,1785,131072,0,2041,131072,0,1734,131072,0,1053,131072,0,2106,131072,0,1605,131072,0,1742,131072,0,1986,131072,0,25579824.0,1566599,0,0,0,1598739,1598739,2071954409122791,2072010710136443,2072010710235589,2071954409703781
51,__amd_rocclr_copyBuffer.kd,2,0,156,2424,2424,512,512,0,0,16,0,32,64,0x0,0x7808c1a93a80,2168563,8,4377,7321,0,17740,8,40,0.0,8.0,1.0,7.0,0.0,8.0,180,0,0,195,0,0,0,0,0,0,0,0,189,0,0,174,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8671184.0,503494,0,0,0,541949,541949,2071954409604284,2072010710235589,2072010710239675,2071954411239922
52,"void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul> >(int, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul>) [clone .kd]",2,0,158,2424,2424,4194304,256,0,0,24,0,64,64,0x0,0x7808296314c0,4207009,65536,231533753,3779897,0,927580144,393216,65536,6404885.0,524288.0,24863.0,4889861.0,0.0,5242880.0,97587,131072,0,177764,131072,0,110421,131072,0,140014,131072,0,164290,131072,0,230076,131072,0,289411,131072,0,235397,131072,0,121505,131072,0,203131,131072,0,110412,131072,0,165476,131072,0,160056,131072,0,228311,131072,0,300014,131072,0,243611,131072,0,16814896.0,151276,0,4557251,0,1050931,1050931,2071954415870219,2072010714620913,2072010714681042,2071954416418951
53,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,159,2424,2424,67108864,512,0,0,12,4,32,64,0x0,0x78084b06e700,14781045,1048576,770743474,11641219,0,3106818348,5242880,2097152,120947.0,2097152.0,76227.0,18864973.0,0.0,20971520.0,13915,32768,0,15554,32768,0,13583,32768,0,14893,32768,0,10772,32768,0,10479,32768,0,11322,32768,0,10908,32768,0,12799,32768,0,14789,32768,0,11804,32768,0,12540,32768,0,12289,32768,0,11892,32768,0,12099,32768,0,11550,32768,0,59110512.0,750307,0,15648510,0,3694407,3694407,2071954416437338,2072010714701152,2072010714891513,2071954418018065
54,__amd_rocclr_fillBufferAligned.kd,2,0,160,2424,2424,256,256,0,0,12,4,48,64,0x0,0x7808c1a93a00,2669501,4,3010,4213,0,12124,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,194,0,0,182,0,0,0,0,0,0,0,0,0,0,0,0,0,0,189,0,0,183,0,0,214,0,0,202,0,0,169,0,0,220,0,0,0,0,0,165,1,0,10664208.0,629013,0,0,0,666513,666513,2071954416906071,2072010714891513,2072010714895359,2071954419337886
55,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4> >(at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4>) [clone .kd]",2,0,161,2424,2424,155648,512,4608,80,36,4,80,64,0x0,0x78080902e7c0,22474237,2432,246021114,13031260,0,984141512,642500,1354611,1309900.0,529798.0,33073.0,7059625.0,304.0,8389357.0,291965,262146,0,187214,262146,0,730334,262146,0,1061237,262146,0,452539,262144,0,621266,262144,0,701967,262146,0,397312,262146,0,324796,262146,0,244166,262146,0,612107,262145,0,1143718,262146,0,525286,262144,0,549829,262144,0,585130,262144,0,551884,262144,0,89884080.0,3350006,0,0,0,5617755,5617755,2071954421028126,2072010718852950,2072010719056692,2071954421854137
56,__amd_rocclr_copyBuffer.kd,2,0,162,2424,2424,512,512,0,0,16,0,32,64,0x0,0x7808c1a93a80,3807085,8,5959,11433,0,24028,8,40,0.0,16.0,1.0,15.0,0.0,16.0,181,0,0,0,0,0,0,0,0,0,0,0,190,0,0,174,1,0,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15214576.0,913021,0,0,0,950911,950911,2071954421596917,2072010719056692,2072010719062300,2071954423456076
57,"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul> >(int, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul>) [clone .kd]",2,0,164,2424,2424,16777216,256,0,0,16,0,32,64,0x0,0x78083a660e40,11224293,262144,733089844,10750881,0,2938169692,0,0,243279.0,786432.0,111690.0,9646635.0,0.0,12582912.0,416428,262144,0,1331020,262144,0,304320,262144,0,596553,262144,0,667161,262144,0,1208260,262144,0,712772,262144,0,775377,262144,0,428685,262144,0,1281663,262144,0,316566,262144,0,621697,262144,0,750396,262144,0,1276338,262144,0,649135,262144,0,737913,262144,0,44883568.0,142944,0,18386093,0,2805223,2805223,2071954424091616,2072010719120666,2072010719295685,2071954425129170
58,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,165,2424,2424,16777216,256,0,0,12,4,32,64,0x0,0x7808add957c0,11152937,262144,520163702,7580376,0,2086506684,0,0,7344594.0,524288.0,58624.0,6039778.0,0.0,8388608.0,507234,131072,0,639746,131072,0,343055,131072,0,493197,131072,0,360158,131072,0,329063,131072,0,360941,131072,0,402645,131072,0,541785,131072,0,630279,131072,0,344407,131072,0,527224,131072,0,349062,131072,0,322771,131072,0,386312,131072,0,387403,131072,0,44598480.0,794348,0,11432419,0,2787405,2787405,2071954424968683,2072010719295685,2072010719443944,2071954426727684
59,__amd_rocclr_fillBufferAligned.kd,2,0,166,2424,2424,256,256,0,0,12,4,48,64,0x0,0x7808c1a93a00,3958117,4,2983,4225,0,11980,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,194,1,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,188,0,0,183,0,0,226,0,0,198,0,0,168,0,0,200,0,0,0,0,0,165,0,0,15818592.0,951240,0,0,0,988662,988662,2071954425448082,2072010719443944,2072010719448471,2071954427995118
60,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,167,2424,2424,155648,512,2560,48,28,4,80,64,0x0,0x780829a18380,12999863,2432,152726189,8187467,0,610960120,642500,267319,485650.0,267654.0,33138.0,3150515.0,268.0,4194996.0,2658,131072,0,2674,131072,0,2710,131072,0,2672,131072,0,2233,131072,0,1270,131072,0,2040,131072,0,2072,131072,0,2520,131074,0,2576,131074,0,2783,131072,0,2653,131074,0,2233,131072,0,1170,131072,0,2117,131074,0,2103,131074,0,51988080.0,3172030,0,0,0,3249255,3249255,2071954425898748,2072010719448471,2072010719580787,2071954429121764
61,__amd_rocclr_copyBuffer.kd,2,0,168,2424,2424,512,512,0,0,16,0,32,64,0x0,0x7808c1a93a80,1740465,8,5234,8405,0,21168,8,40,0.0,8.0,2.0,6.0,0.0,8.0,181,0,0,212,0,0,0,0,0,0,0,0,189,0,0,174,1,0,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6948592.0,395799,0,0,0,434287,434287,2071954426977023,2072010719580787,2072010719584913,2071954430435356
62,__amd_rocclr_fillBufferAligned.kd,2,0,170,2424,2424,256,256,0,0,12,4,48,64,0x0,0x7808c1a93a00,414693,4,2989,4617,0,12004,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,193,0,0,182,0,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0,0,0,0,217,0,0,205,0,0,168,0,0,177,0,0,171,1,0,164,0,0,1645040.0,64189,0,0,0,102815,102815,2071954430993381,2072010719611712,2072010719613675,2071954432030845
63,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4>) [clone .kd]",2,0,171,2424,2424,155648,512,2560,48,28,4,80,64,0x0,0x78089cd17880,9005825,2432,113665235,6057704,0,454719032,642500,267319,692647.0,267654.0,33073.0,2989481.0,304.0,4194996.0,2036,131072,0,2117,131072,0,2281,131072,0,986,131072,0,2198,131072,0,1972,131072,0,1805,131072,0,2375,131072,0,1866,131074,0,2055,131074,0,2031,131072,0,988,131074,0,2274,131072,0,1894,131072,0,1571,131074,0,2243,131074,0,36008672.0,2192283,0,0,0,2250542,2250542,2071954432015052,2072010719618122,2072010719715386,2071954433578935
64,__amd_rocclr_copyBuffer.kd,2,0,172,2424,2424,512,512,0,0,16,0,32,64,0x0,0x7808c1a93a80,2953507,8,5047,8073,0,20300,8,40,0.0,8.0,2.0,6.0,0.0,8.0,0,0,0,211,0,0,0,0,0,0,0,0,188,0,0,173,1,0,198,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11812064.0,700172,0,0,0,738254,738254,2071954432472809,2072010719715386,2072010719719472,2071954434949451
65,"void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul> >(int, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul>) [clone .kd]",2,0,174,2424,2424,4194304,256,0,0,24,0,64,64,0x0,0x7808296314c0,4363889,65536,244181208,3897911,0,978169996,393216,65536,6596303.0,524288.0,24709.0,4901566.0,0.0,5242880.0,158140,131072,0,270606,131072,0,101940,131072,0,136848,131072,0,241957,131072,0,402295,131072,0,188686,131072,0,172649,131072,0,146793,131072,0,262747,131072,0,90309,131072,0,131023,131072,0,303410,131072,0,397330,131072,0,222081,131072,0,202913,131072,0,17441040.0,168414,0,4961644,0,1090065,1090065,2071954435464603,2072010719749196,2072010719811688,2071954436585851
66,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,175,2424,2424,67108864,512,0,0,12,4,32,64,0x0,0x78084b06e700,14492685,1048576,764637615,11575157,0,3082418360,5242880,2097152,135868.0,2097152.0,76722.0,18851552.0,0.0,20971520.0,15936,32768,0,17785,32768,0,14932,32768,0,15905,32768,0,13816,32768,0,13027,32768,0,12276,32768,0,12220,32768,0,14587,32768,0,16314,32768,0,14485,32768,0,14708,32768,0,14787,32768,0,14163,32768,0,13936,32768,0,13290,32768,0,57965152.0,705664,0,15675248,0,3622822,3622822,2071954436557319,2072010719811688,2072010719999646,2071954438138447
67,__amd_rocclr_fillBufferAligned.kd,2,0,176,2424,2424,256,256,0,0,12,4,48,64,0x0,0x7808c1a93a00,4038861,4,3194,4717,0,12840,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,195,0,0,183,0,0,0,0,0,171,1,0,0,0,0,0,0,0,190,0,0,184,0,0,238,0,0,203,0,0,169,0,0,205,0,0,0,0,0,165,0,0,16142160.0,971768,0,0,0,1008885,1008885,2071954437017630,2072010719999646,2072010720004092,2071954439491077
68,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4> >(at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4>) [clone .kd]",2,0,177,2424,2424,155648,512,4608,80,36,4,80,64,0x0,0x78080902e7c0,16739344,2432,248350799,13131477,0,993461508,642500,1354611,1956133.0,529798.0,33276.0,7054322.0,266.0,8389357.0,362863,262146,0,794547,262146,0,727075,262145,0,350670,262146,0,488636,262144,0,662462,262144,0,438134,262144,0,436902,262144,0,315236,262146,0,802844,262146,0,814401,262146,0,406781,262146,0,509097,262144,0,723353,262144,0,408222,262146,0,502135,262146,0,66956992.0,3940467,0,0,0,4184812,4184812,2071954437460815,2072010720004092,2072010720207473,2071954440622650
69,__amd_rocclr_copyBuffer.kd,2,0,178,2424,2424,512,512,0,0,16,0,32,64,0x0,0x7808c1a93a80,2281249,8,5979,11193,0,24036,8,40,0.0,16.0,2.0,14.0,0.0,16.0,180,0,0,211,0,0,0,0,0,0,0,0,188,0,0,173,1,0,198,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9110432.0,531527,0,0,0,569402,569402,2071954438394596,2072010720207473,2072010720212240,2071954441940860
