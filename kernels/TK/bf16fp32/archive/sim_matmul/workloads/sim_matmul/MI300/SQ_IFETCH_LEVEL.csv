Dispatch_ID,Kernel_Name,GPU_ID,queue-id,queue-index,pid,tid,Grid_Size,Workgroup_Size,LDS_Per_Workgroup,Scratch_Per_Workitem,Arch_VGPR,Accum_VGPR,SGPR,wave_size,sig,obj,SQ_WAVES,SQ_IFETCH,SQ_IFETCH_LEVEL,SQ_ACCUM_PREV_HIRES,SQ_INSTS_VALU_TRANS_F16,SQ_INSTS_VALU_ADD_F32,SQ_INSTS_VALU_MUL_F32,SQ_INSTS_VALU_FMA_F32,TA_BUFFER_ATOMIC_WAVEFRONTS_sum,TA_BUFFER_TOTAL_CYCLES_sum,TD_ATOMIC_WAVEFRONT_sum,TD_STORE_WAVEFRONT_sum,TCP_VOLATILE_sum,TCP_TOTAL_ACCESSES_sum,TCP_TOTAL_READ_sum,TCP_TOTAL_WRITE_sum,TCC_EA0_RDREQ[0],TCC_EA0_RDREQ_32B[0],TCC_EA0_WRREQ[0],TCC_EA0_WRREQ_64B[0],TCC_EA0_RDREQ[1],TCC_EA0_RDREQ_32B[1],TCC_EA0_WRREQ[1],TCC_EA0_WRREQ_64B[1],TCC_EA0_RDREQ[2],TCC_EA0_RDREQ_32B[2],TCC_EA0_WRREQ[2],TCC_EA0_WRREQ_64B[2],TCC_EA0_RDREQ[3],TCC_EA0_RDREQ_32B[3],TCC_EA0_WRREQ[3],TCC_EA0_WRREQ_64B[3],TCC_EA0_RDREQ[4],TCC_EA0_RDREQ_32B[4],TCC_EA0_WRREQ[4],TCC_EA0_WRREQ_64B[4],TCC_EA0_RDREQ[5],TCC_EA0_RDREQ_32B[5],TCC_EA0_WRREQ[5],TCC_EA0_WRREQ_64B[5],TCC_EA0_RDREQ[6],TCC_EA0_RDREQ_32B[6],TCC_EA0_WRREQ[6],TCC_EA0_WRREQ_64B[6],TCC_EA0_RDREQ[7],TCC_EA0_RDREQ_32B[7],TCC_EA0_WRREQ[7],TCC_EA0_WRREQ_64B[7],TCC_EA0_RDREQ[8],TCC_EA0_RDREQ_32B[8],TCC_EA0_WRREQ[8],TCC_EA0_WRREQ_64B[8],TCC_EA0_RDREQ[9],TCC_EA0_RDREQ_32B[9],TCC_EA0_WRREQ[9],TCC_EA0_WRREQ_64B[9],TCC_EA0_RDREQ[10],TCC_EA0_RDREQ_32B[10],TCC_EA0_WRREQ[10],TCC_EA0_WRREQ_64B[10],TCC_EA0_RDREQ[11],TCC_EA0_RDREQ_32B[11],TCC_EA0_WRREQ[11],TCC_EA0_WRREQ_64B[11],TCC_EA0_RDREQ[12],TCC_EA0_RDREQ_32B[12],TCC_EA0_WRREQ[12],TCC_EA0_WRREQ_64B[12],TCC_EA0_RDREQ[13],TCC_EA0_RDREQ_32B[13],TCC_EA0_WRREQ[13],TCC_EA0_WRREQ_64B[13],TCC_EA0_RDREQ[14],TCC_EA0_RDREQ_32B[14],TCC_EA0_WRREQ[14],TCC_EA0_WRREQ_64B[14],TCC_EA0_RDREQ[15],TCC_EA0_RDREQ_32B[15],TCC_EA0_WRREQ[15],TCC_EA0_WRREQ_64B[15],CPC_CPC_STAT_STALL,CPC_UTCL1_STALL_ON_TRANSLATION,CPF_CPF_STAT_IDLE,CPF_CPF_TCIU_IDLE,SPI_RA_REQ_NO_ALLOC,SPI_RA_REQ_NO_ALLOC_CSN,GRBM_COUNT,GRBM_GUI_ACTIVE,DispatchNs,Start_Timestamp,End_Timestamp,CompleteNs
0,"void at::native::(anonymous namespace)::distribution_elementwise_grid_stride_kernel<float, 4, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}>(long, at::PhiloxCudaState, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}) [clone .kd]",2,0,0,1432,1432,622592,256,0,0,56,0,48,64,0x0,0x7e0336d4bf80,9728,11696640,2540853,203361104,0,1050624,4210176,4200448,0.0,0.0,0.0,1048576.0,16777216.0,16777216.0,0.0,16777216.0,40,0,131072,131072,32,0,131072,131072,32,0,131072,131072,32,0,131072,131072,40,0,131072,131072,20,0,131072,131072,59,0,131072,131072,49,0,131072,131072,40,0,131072,131072,32,0,131072,131072,32,0,131072,131072,32,0,131072,131072,40,0,131072,131072,20,0,131072,131072,56,0,131072,131072,50,0,131072,131072,200776,9353,0,1384833,97,9825,1423174,1423174,2071930825244833,2072010192658723,2072010192746893,2071930835177841
1,"void at::native::vectorized_elementwise_kernel<8, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul> >(int, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,1,1432,1432,8388608,256,0,0,20,4,32,64,0x0,0x7dcb12c46d40,131072,2097152,506452,40484988,0,0,524288,0,0.0,0.0,0.0,131072.0,16777216.0,16777216.0,8388608.0,8388608.0,65552,0,131072,131072,65552,0,131072,131072,65561,0,131072,131072,65571,0,131072,131072,65568,0,131072,131072,65564,0,131072,131072,65591,0,131072,131072,65591,0,131072,131072,65552,0,131072,131072,65552,0,131072,131072,65564,0,131072,131072,65575,0,131072,131072,65568,0,131072,131072,65564,0,131072,131072,65591,0,131072,131072,65589,0,131072,131072,45947,957,0,1611403,1220630,978673,1631062,1631062,2071930839942296,2072010198264591,2072010198356086,2071930840654289
2,"void at::native::(anonymous namespace)::distribution_elementwise_grid_stride_kernel<float, 4, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}>(long, at::PhiloxCudaState, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}) [clone .kd]",2,0,2,1432,1432,622592,256,0,0,56,0,48,64,0x0,0x7e0336d4bf80,9728,11696640,2587068,206879092,0,1050624,4210176,4200448,0.0,0.0,0.0,1048576.0,16777216.0,16777216.0,0.0,16777216.0,40,0,131072,131072,32,0,131072,131072,32,0,131072,131072,32,0,131072,131072,32,0,131072,131072,16,0,131072,131072,48,0,131072,131072,32,0,131072,131072,40,0,131072,131072,32,0,131072,131072,32,0,131072,131072,32,0,131072,131072,32,0,131072,131072,16,0,131072,131072,48,0,131072,131072,32,0,131072,131072,259716,8851,0,1715715,97,9825,1753870,1753870,2071930840649252,2072010198356086,2072010198442294,2071930842456554
3,"void at::native::vectorized_elementwise_kernel<8, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul> >(int, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,3,1432,1432,8388608,256,0,0,20,4,32,64,0x0,0x7dcb12c46d40,131072,2097152,538497,43082316,0,0,524288,0,0.0,0.0,0.0,131072.0,16777216.0,16777216.0,8388608.0,8388608.0,65573,0,131072,131072,65576,0,131072,131072,65548,0,131072,131072,65552,0,131072,131072,65568,0,131072,131072,65564,0,131072,131072,65603,0,131072,131072,65601,0,131072,131072,65580,0,131072,131072,65576,0,131072,131072,65547,0,131072,131072,65552,0,131072,131072,65568,0,131072,131072,65564,0,131072,131072,65608,0,131072,131072,65599,0,131072,131072,138004,7428,0,1610588,753191,644033,1629955,1629955,2071930841265613,2072010198442294,2072010198529342,2071930844054216
4,__amd_rocclr_fillBufferAligned.kd,2,0,4,1432,1432,77824,256,0,0,12,4,48,64,0x0,0x7e033401ba00,1216,116992,85208,6823288,0,0,0,0,0.0,0.0,0.0,25600.0,1638400.0,1638400.0,0.0,1638400.0,40,0,25600,25600,36,0,25600,25600,4,0,25600,25600,16,0,25600,25600,4,0,25600,25600,0,0,25600,25600,41,0,25600,25600,23,0,25600,25600,40,0,25600,25600,36,0,25600,25600,4,0,25600,25600,16,0,25600,25600,4,0,25600,25600,0,0,25600,25600,40,0,25600,25600,23,0,25600,25600,217826,17209,0,1098550,49,1265,1122717,1122717,2071930842504805,2072010198586066,2072010198596962,2071930845547925
5,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,5,1432,1432,303104,256,64000,0,128,352,112,64,0x0,0x7dcae9c17980,4736,62952832,12655560,1012552948,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,880618,0,131072,131072,880393,0,131072,131072,880424,0,131072,131072,880191,0,131072,131072,880611,0,131072,131072,880448,0,131072,131072,880591,0,131072,131072,880330,0,131072,131072,880521,0,131072,131072,880371,0,131072,131072,880361,0,131072,131072,880167,0,131072,131072,880474,0,131072,131072,880244,0,131072,131072,880245,0,131072,131072,880115,0,131072,131072,941644,1653,0,16886894,12636006,26592,16946798,16946798,2071930931872765,2072010287445179,2072010288682128,2071930934037235
6,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,6,1432,1432,303104,256,64000,0,128,352,112,64,0x0,0x7dcae9c17980,4736,62952832,12669994,1013792160,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,818777,0,131072,131072,818906,0,131072,131072,818837,0,131072,131072,818851,0,131072,131072,818766,0,131072,131072,818878,0,131072,131072,818760,0,131072,131072,818811,0,131072,131072,818852,0,131072,131072,819021,0,131072,131072,818868,0,131072,131072,819038,0,131072,131072,818844,0,131072,131072,818931,0,131072,131072,818721,0,131072,131072,818834,0,131072,131072,1226218,3263,0,16644525,12322565,16336,17011817,17011817,2071930932781939,2072010288682128,2072010290202575,2071930936428080
7,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,7,1432,1432,303104,256,64000,0,128,352,112,64,0x0,0x7dcae9c17980,4736,62952832,12677603,1014166056,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,830086,0,131072,131072,830016,0,131072,131072,829981,0,131072,131072,830012,0,131072,131072,830013,0,131072,131072,830027,0,131072,131072,830205,0,131072,131072,830233,0,131072,131072,829928,0,131072,131072,829951,0,131072,131072,830105,0,131072,131072,830128,0,131072,131072,830133,0,131072,131072,830131,0,131072,131072,830120,0,131072,131072,830125,0,131072,131072,1233855,4958,0,16561005,12327703,22103,16930607,16930607,2071930933386763,2072010290202575,2072010292304603,2071930938713610
8,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,10,1432,1432,303104,256,64000,0,128,352,112,64,0x0,0x7dcae9c17980,4736,62952832,12725016,1018413104,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,850881,0,131072,131072,851017,0,131072,131072,850574,0,131072,131072,850677,0,131072,131072,850752,0,131072,131072,850895,0,131072,131072,850504,0,131072,131072,850611,0,131072,131072,850860,0,131072,131072,851035,0,131072,131072,850651,0,131072,131072,850742,0,131072,131072,850850,0,131072,131072,850968,0,131072,131072,850516,0,131072,131072,850665,0,131072,131072,942590,7037,0,17179321,12937062,18527,17239530,17239530,2071930939659879,2072010292388007,2072010294188549,2071930942121319
9,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,14,1432,1432,303104,256,64000,0,128,352,112,64,0x0,0x7dcae9c17980,4736,62952832,12725255,1018030820,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,849552,0,131072,131072,849614,0,131072,131072,849636,0,131072,131072,849618,0,131072,131072,849473,0,131072,131072,849552,0,131072,131072,849451,0,131072,131072,849360,0,131072,131072,849546,0,131072,131072,849613,0,131072,131072,849528,0,131072,131072,849537,0,131072,131072,849540,0,131072,131072,849684,0,131072,131072,849580,0,131072,131072,849614,0,131072,131072,946619,7746,0,16730272,12483286,19393,16800052,16800052,2071930943119485,2072010294241467,2072010295886459,2071930945736174
10,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,18,1432,1432,303104,256,64000,0,128,352,112,64,0x0,0x7dcae9c17980,4736,62952832,12685769,1014942808,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,851130,0,131072,131072,850814,0,131072,131072,851672,0,131072,131072,851868,0,131072,131072,851013,0,131072,131072,850739,0,131072,131072,851478,0,131072,131072,851680,0,131072,131072,851097,0,131072,131072,850811,0,131072,131072,851566,0,131072,131072,851715,0,131072,131072,851281,0,131072,131072,851002,0,131072,131072,851644,0,131072,131072,851859,0,131072,131072,941409,7541,0,17160132,12901777,19046,17202561,17202561,2071930946695373,2072010295929042,2072010297498603,2071930949277922
11,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,22,1432,1432,303104,256,64000,0,128,352,112,64,0x0,0x7dcae9c17980,4736,62952832,12750303,1019892664,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,839809,0,131072,131072,839731,0,131072,131072,839993,0,131072,131072,839927,0,131072,131072,839878,0,131072,131072,839797,0,131072,131072,840105,0,131072,131072,839986,0,131072,131072,839940,0,131072,131072,839904,0,131072,131072,840179,0,131072,131072,840066,0,131072,131072,839851,0,131072,131072,839817,0,131072,131072,840094,0,131072,131072,839935,0,131072,131072,940082,7566,0,16748807,12492147,18007,16793006,16793006,2071930950365970,2072010297541146,2072010299111508,2071930952995178
12,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,26,1432,1432,303104,256,64000,0,128,352,112,64,0x0,0x7dcae9c17980,4736,62952832,12691682,1015247672,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,855578,0,131072,131072,855792,0,131072,131072,855549,0,131072,131072,855895,0,131072,131072,855493,0,131072,131072,855619,0,131072,131072,855386,0,131072,131072,855726,0,131072,131072,855581,0,131072,131072,855723,0,131072,131072,855615,0,131072,131072,855893,0,131072,131072,855744,0,131072,131072,855854,0,131072,131072,855620,0,131072,131072,855909,0,131072,131072,945373,7654,0,17193597,12924539,18768,17235629,17235629,2071930953866647,2072010299153690,2072010300689881,2071930956481463
13,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,30,1432,1432,303104,256,64000,0,128,352,112,64,0x0,0x7dcae9c17980,4736,62952832,12711882,1017523892,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,846216,0,131072,131072,846138,0,131072,131072,846515,0,131072,131072,846539,0,131072,131072,846189,0,131072,131072,846110,0,131072,131072,846322,0,131072,131072,846245,0,131072,131072,846073,0,131072,131072,846041,0,131072,131072,846171,0,131072,131072,846173,0,131072,131072,846222,0,131072,131072,846237,0,131072,131072,846469,0,131072,131072,846449,0,131072,131072,935999,7736,0,16719859,12474527,22887,16762491,16762491,2071930957431889,2072010300731984,2072010302227595,2071930960095998
14,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,34,1432,1432,303104,256,64000,0,128,352,112,64,0x0,0x7dcae9c17980,4736,62952832,12730506,1018649000,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,839059,0,131072,131072,839235,0,131072,131072,839246,0,131072,131072,839355,0,131072,131072,839258,0,131072,131072,839406,0,131072,131072,839405,0,131072,131072,839466,0,131072,131072,839088,0,131072,131072,839261,0,131072,131072,839447,0,131072,131072,839521,0,131072,131072,839194,0,131072,131072,839386,0,131072,131072,839344,0,131072,131072,839454,0,131072,131072,1101603,7993,0,18067770,12922238,24960,18099187,18099187,2071930960951934,2072010302268816,2072010303751608,2071930963658185
15,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,38,1432,1432,303104,256,64000,0,128,352,112,64,0x0,0x7dcae9c17980,4736,62952832,12782918,1022181808,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,829546,0,131072,131072,829539,0,131072,131072,829587,0,131072,131072,829667,0,131072,131072,829795,0,131072,131072,829754,0,131072,131072,829727,0,131072,131072,829735,0,131072,131072,829771,0,131072,131072,829751,0,131072,131072,829753,0,131072,131072,829775,0,131072,131072,829573,0,131072,131072,829574,0,131072,131072,829627,0,131072,131072,829677,0,131072,131072,940628,7671,0,17197437,12943881,20638,17242173,17242173,2071930964710151,2072010303793110,2072010305237205,2071930967256757
16,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,42,1432,1432,303104,256,64000,0,128,352,112,64,0x0,0x7dcae9c17980,4736,62952832,12728472,1018457772,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,860803,0,131072,131072,860489,0,131072,131072,860112,0,131072,131072,859850,0,131072,131072,860772,0,131072,131072,860458,0,131072,131072,860251,0,131072,131072,860031,0,131072,131072,860866,0,131072,131072,860585,0,131072,131072,860312,0,131072,131072,860056,0,131072,131072,860888,0,131072,131072,860575,0,131072,131072,860222,0,131072,131072,859938,0,131072,131072,938274,7590,0,16751174,12499027,19042,16794183,16794183,2071930968394269,2072010305277584,2072010306719957,2071930971024889
17,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,46,1432,1432,303104,256,64000,0,128,352,112,64,0x0,0x7dcae9c17980,4736,62952832,12672690,1013980860,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,839661,0,131072,131072,840061,0,131072,131072,839913,0,131072,131072,840356,0,131072,131072,839518,0,131072,131072,839829,0,131072,131072,839572,0,131072,131072,840109,0,131072,131072,839716,0,131072,131072,840001,0,131072,131072,839653,0,131072,131072,840220,0,131072,131072,839659,0,131072,131072,840028,0,131072,131072,839926,0,131072,131072,840374,0,131072,131072,945800,7258,0,17137226,12861341,17413,17179287,17179287,2071930971828036,2072010306760617,2072010308177312,2071930974460780
18,matmul_kernel.kd,2,0,49,1432,1432,1048576,256,16384,0,16,128,48,64,0x0,0x7e0336d04600,16384,118734848,23782955,1902733840,0,0,65536,0,0.0,0.0,0.0,262144.0,1090519040.0,1090519040.0,1073741824.0,16777216.0,4697720,0,273881,267814,4697689,0,276041,268864,4698240,0,274619,268230,4698288,0,275062,268460,4697791,0,275866,268827,4698301,0,279023,270141,4699737,0,276569,269093,4699939,0,277456,269517,4698268,0,274686,268225,4698008,0,278071,269923,4699640,0,274419,268047,4699477,0,275897,268742,4699621,0,276662,269300,4699987,0,280661,271189,4699449,0,275746,268764,4699315,0,277071,269427,1111141,1653,0,36253597,30536072,3289689,36319729,36319729,2071931280321237,2072010612362091,2072010615035804,2071931283751059
19,matmul_kernel.kd,2,0,50,1432,1432,1048576,256,16384,0,16,128,48,64,0x0,0x7e0336d04600,16384,118734848,23770552,1901782696,0,0,65536,0,0.0,0.0,0.0,262144.0,1090519040.0,1090519040.0,1073741824.0,16777216.0,3836692,0,322994,292403,3836835,0,323236,292658,3838062,0,323085,292475,3837873,0,323144,292531,3838525,0,323225,292605,3838761,0,323179,292531,3837351,0,323334,292534,3837565,0,323423,292678,3837072,0,323308,292510,3837184,0,323351,292627,3836701,0,323442,292553,3836476,0,323508,292755,3836365,0,323116,292469,3836622,0,323069,292420,3836774,0,323152,292375,3836826,0,323211,292486,1369271,3153,0,26849297,21791941,878699,27194037,27194037,2071931281237182,2072010615035804,2072010618185821,2071931287294218
20,matmul_kernel.kd,2,0,53,1432,1432,1048576,256,16384,0,16,128,48,64,0x0,0x7e0336d04600,16384,118734848,23772747,1902195568,0,0,65536,0,0.0,0.0,0.0,262144.0,1090519040.0,1090519040.0,1073741824.0,16777216.0,4004796,0,314772,288986,4004546,0,315778,290373,4004889,0,315418,289987,4004959,0,315689,290506,4005176,0,315103,289299,4005009,0,315326,289323,4005561,0,315120,289360,4005373,0,315965,290529,4004849,0,314836,288986,4004746,0,315699,289924,4005335,0,314925,288899,4005131,0,315981,290265,4005077,0,315278,289292,4004973,0,315432,289390,4005219,0,314948,289270,4005052,0,315384,289872,1079065,9251,0,27309049,22233279,1078383,27359630,27359630,2071931288159248,2072010618271708,2072010621154129,2071931291600567
21,matmul_kernel.kd,2,0,57,1432,1432,1048576,256,16384,0,16,128,48,64,0x0,0x7e0336d04600,16384,118734848,23782431,1902519892,0,0,65536,0,0.0,0.0,0.0,262144.0,1090519040.0,1090519040.0,1073741824.0,16777216.0,4144699,0,304370,283442,4144813,0,305460,284572,4144014,0,305316,284282,4144212,0,305444,284682,4144475,0,305021,283994,4144538,0,305528,284243,4144083,0,305256,284080,4144096,0,305665,284720,4144606,0,305282,284298,4144657,0,306556,285791,4144489,0,305251,284239,4144557,0,306315,285383,4144519,0,305642,284433,4144630,0,305979,284536,4143531,0,305747,284235,4143507,0,306496,285237,1202258,9766,0,27674754,21887506,1231039,27712025,27712025,2071931292453648,2072010621221068,2072010623919458,2071931295880415
22,matmul_kernel.kd,2,0,61,1432,1432,1048576,256,16384,0,16,128,48,64,0x0,0x7e0336d04600,16384,118734848,23787456,1903131496,0,0,65536,0,0.0,0.0,0.0,262144.0,1090519040.0,1090519040.0,1073741824.0,16777216.0,4170825,0,302308,282242,4170775,0,303101,283046,4169970,0,302760,282785,4170000,0,302810,282918,4170920,0,302934,283018,4171031,0,303016,282828,4170715,0,303008,283012,4170787,0,303830,284089,4170599,0,302264,282368,4170643,0,303507,283530,4171001,0,302577,282662,4170981,0,303755,283998,4171213,0,302675,282658,4171095,0,303094,283025,4170914,0,302750,282672,4170780,0,303440,283464,1164457,10425,0,27744081,22239441,1322369,27806168,27806168,2071931296614550,2072010623978546,2072010626728852,2071931300152893
23,matmul_kernel.kd,2,0,65,1432,1432,1048576,256,16384,0,16,128,48,64,0x0,0x7e0336d04600,16384,118734848,23779748,1902663508,0,0,65536,0,0.0,0.0,0.0,262144.0,1090519040.0,1090519040.0,1073741824.0,16777216.0,4133735,0,306950,284830,4133718,0,307728,285720,4132990,0,307316,285101,4132909,0,307914,285835,4133477,0,307375,284894,4133196,0,307355,284800,4134068,0,307501,284919,4134106,0,307842,285313,4133941,0,306345,284423,4133953,0,307789,285678,4134568,0,307351,285088,4134239,0,307954,285432,4133846,0,307185,284865,4133648,0,307568,285122,4133296,0,307193,284972,4133253,0,307837,285609,1085768,10449,0,27381789,22268985,1195959,27443648,27443648,2071931301062347,2072010626785857,2072010629439300,2071931304492320
24,matmul_kernel.kd,2,0,69,1432,1432,1048576,256,16384,0,16,128,48,64,0x0,0x7e0336d04600,16384,118734848,23774821,1902343376,0,0,65536,0,0.0,0.0,0.0,262144.0,1090519040.0,1090519040.0,1073741824.0,16777216.0,4012239,0,315349,289053,4012507,0,316301,290259,4012909,0,315855,289697,4013046,0,316225,290234,4012705,0,315728,289485,4012953,0,315741,289504,4012924,0,315679,289421,4012901,0,316344,290171,4012447,0,315933,289462,4012423,0,316982,290778,4012593,0,315767,289666,4012241,0,316613,290587,4012582,0,316166,289755,4012508,0,316210,289703,4013362,0,316018,289550,4013113,0,316558,290444,1156208,9529,0,27696308,22278042,1235707,27731283,27731283,2071931305330689,2072010629493460,2072010632053886,2071931309002439
25,matmul_kernel.kd,2,0,73,1432,1432,1048576,256,16384,0,16,128,48,64,0x0,0x7e0336d04600,16384,118734848,23784184,1902771884,0,0,65536,0,0.0,0.0,0.0,262144.0,1090519040.0,1090519040.0,1073741824.0,16777216.0,4023875,0,314513,288721,4023706,0,315368,289874,4023617,0,314827,289094,4023536,0,315134,289673,4023383,0,315212,289427,4023425,0,315243,289333,4023775,0,314913,288972,4023440,0,315481,289600,4024299,0,315320,289462,4024488,0,315821,290289,4023793,0,315180,289436,4024157,0,315857,290148,4024232,0,315484,289754,4024286,0,315434,289491,4023932,0,315075,289115,4024056,0,315666,290006,1081990,68209,0,27255313,22111459,1024311,27270066,27270066,2071931309847258,2072010632107405,2072010634674200,2071931313506939
26,matmul_kernel.kd,2,0,77,1432,1432,1048576,256,16384,0,16,128,48,64,0x0,0x7e0336d04600,16384,118734848,23791544,1902349908,0,0,65536,0,0.0,0.0,0.0,262144.0,1090519040.0,1090519040.0,1073741824.0,16777216.0,4019618,0,313386,288126,4019661,0,314048,288897,4018998,0,313796,288578,4018905,0,314010,288888,4019099,0,314082,288671,4018824,0,313987,288523,4018438,0,314075,288438,4018552,0,314633,289182,4018998,0,313411,288048,4019032,0,314701,289462,4019652,0,313725,288313,4019799,0,314509,289289,4019979,0,313984,288535,4020080,0,313944,288596,4019873,0,314147,288543,4019945,0,314348,288851,1158619,10070,0,27684578,22253152,1096140,27721763,27721763,2071931314293673,2072010634725676,2072010637257900,2071931317950390
27,matmul_kernel.kd,2,0,81,1432,1432,1048576,256,16384,0,16,128,48,64,0x0,0x7e0336d04600,16384,118734848,23779387,1902742792,0,0,65536,0,0.0,0.0,0.0,262144.0,1090519040.0,1090519040.0,1073741824.0,16777216.0,4044439,0,315605,289586,4044528,0,316530,290926,4045089,0,316050,289902,4045330,0,316295,290510,4045705,0,316459,290555,4045841,0,316375,290406,4044761,0,316496,290640,4044882,0,316992,291246,4043862,0,315845,289717,4044115,0,317003,291183,4044748,0,316084,290007,4044955,0,316501,290569,4044029,0,316645,290664,4043881,0,316510,290449,4044565,0,316011,289951,4044529,0,316555,290836,1082546,10577,0,27633753,22544635,1113321,27675519,27675519,2071931318762932,2072010637310178,2072010639767491,2071931322423074
28,matmul_kernel.kd,2,0,85,1432,1432,1048576,256,16384,0,16,128,48,64,0x0,0x7e0336d04600,16384,118734848,23777473,1901862812,0,0,65536,0,0.0,0.0,0.0,262144.0,1090519040.0,1090519040.0,1073741824.0,16777216.0,4123078,0,307721,285185,4123018,0,308484,285939,4123957,0,308274,285625,4123898,0,308653,285957,4123731,0,308249,285681,4123451,0,308537,285717,4124077,0,308184,285316,4123999,0,308825,286224,4122399,0,307889,285468,4122209,0,309026,286503,4122740,0,308164,285669,4122682,0,309112,286738,4123156,0,308563,285860,4123024,0,308657,285857,4123836,0,308276,285613,4123892,0,308874,286207,1165210,34495,0,27386993,22247570,1330370,27468443,27468443,2071931323207524,2072010639818366,2072010642301678,2071931326816320
29,matmul_kernel.kd,2,0,89,1432,1432,1048576,256,16384,0,16,128,48,64,0x0,0x7e0336d04600,16384,118734848,23785875,1902938084,0,0,65536,0,0.0,0.0,0.0,262144.0,1090519040.0,1090519040.0,1073741824.0,16777216.0,4095924,0,311636,287338,4095777,0,312550,288381,4096314,0,312443,288010,4096360,0,312715,288472,4096590,0,312010,287915,4096468,0,312236,287894,4096352,0,312064,287766,4096307,0,312655,288460,4096016,0,311856,287406,4095647,0,313156,289084,4096316,0,311751,287895,4095909,0,312939,289243,4095564,0,312356,288014,4095429,0,312661,288153,4095996,0,312218,287845,4095783,0,312903,288593,1154736,10656,0,27842606,22384157,1166195,27857260,27857260,2071931327541833,2072010642353635,2072010644758311,2071931331290736
30,"void at::native::vectorized_elementwise_kernel<4, at::native::FillFunctor<float>, std::array<char*, 1ul> >(int, at::native::FillFunctor<float>, std::array<char*, 1ul>) [clone .kd]",2,0,92,1432,1432,16777216,256,0,0,8,0,16,64,0x0,0x7deb2f92e140,262144,1048576,232489,18543004,0,0,0,0,0.0,0.0,0.0,262144.0,16777216.0,16777216.0,0.0,16777216.0,0,0,262144,262144,16,0,262144,262144,0,0,262144,262144,0,0,262144,262144,22,0,262144,262144,16,0,262144,262144,19,0,262144,262144,20,0,262144,262144,0,0,262144,262144,16,0,262144,262144,0,0,262144,262144,0,0,262144,262144,26,0,262144,262144,16,0,262144,262144,20,0,262144,262144,20,0,262144,262144,45064,957,0,901289,390775,481778,924184,924184,2071931335289930,2072010647970831,2072010648017259,2071931335941944
31,micro_tk(micro_globals) [clone .kd],2,0,93,1432,1432,1048576,256,32768,0,76,132,32,64,0x0,0x7deb2f8e0580,16384,128532480,25798967,2063335312,0,0,0,0,0.0,0.0,0.0,1048576.0,4311744512.0,4311744512.0,4294967296.0,16777216.0,1594588,0,267917,267917,1594617,0,268154,268154,1594853,0,267761,267761,1594770,0,267957,267957,1594351,0,267716,267716,1594382,0,267669,267669,1594386,0,267777,267777,1594413,0,267889,267889,1594748,0,267855,267855,1594699,0,268040,268040,1594743,0,267851,267851,1594823,0,267956,267956,1594284,0,267657,267657,1594293,0,267634,267634,1594337,0,267756,267756,1594436,0,267935,267935,1878368,4078,0,51794323,44648714,225732,52401691,52401691,2071931336198734,2072010648270954,2072010651775296,2071931340838334
32,micro_tk(micro_globals) [clone .kd],2,0,95,1432,1432,1048576,256,32768,0,76,132,32,64,0x0,0x7deb2f8e0580,16384,128532480,25800737,2064305388,0,0,0,0,0.0,0.0,0.0,1048576.0,4311744512.0,4311744512.0,4294967296.0,16777216.0,1496889,0,269524,269524,1496970,0,269495,269495,1497013,0,269522,269522,1497033,0,269487,269487,1496567,0,269382,269382,1496603,0,269196,269196,1496639,0,269502,269502,1496696,0,269437,269437,1497033,0,269456,269456,1497032,0,269581,269581,1497141,0,269505,269505,1497187,0,269466,269466,1496691,0,269402,269402,1496687,0,269178,269178,1496679,0,269494,269494,1496729,0,269464,269464,1624866,12860,0,51898503,44442899,166251,51913864,51913864,2071931341580732,2072010651805300,2072010655432944,2071931346292570
33,micro_tk(micro_globals) [clone .kd],2,0,98,1432,1432,1048576,256,32768,0,76,132,32,64,0x0,0x7deb2f8e0580,16384,128532480,25774032,2062875320,0,0,0,0,0.0,0.0,0.0,1048576.0,4311744512.0,4311744512.0,4294967296.0,16777216.0,1576745,0,268484,268484,1576827,0,268676,268676,1576962,0,268409,268409,1576865,0,268576,268576,1576394,0,268356,268356,1576406,0,268373,268373,1576432,0,268309,268309,1576442,0,268466,268466,1576818,0,268418,268418,1576792,0,268651,268651,1576941,0,268410,268410,1576939,0,268587,268587,1576448,0,268316,268316,1576413,0,268354,268354,1576407,0,268374,268374,1576403,0,268514,268514,1541484,13518,0,51040503,43849818,146707,51058580,51058580,2071931347074546,2072010655481015,2072010658999778,2071931351773815
34,micro_tk(micro_globals) [clone .kd],2,0,103,1432,1432,1048576,256,32768,0,76,132,32,64,0x0,0x7deb2f8e0580,16384,128532480,25809995,2064965664,0,0,0,0,0.0,0.0,0.0,1048576.0,4311744512.0,4311744512.0,4294967296.0,16777216.0,1560395,0,268801,268801,1560431,0,268995,268995,1560622,0,268745,268745,1560550,0,268789,268789,1560101,0,268661,268661,1560119,0,268657,268657,1560070,0,268816,268816,1560108,0,268743,268743,1560461,0,268801,268801,1560443,0,268890,268890,1560558,0,268731,268731,1560683,0,268718,268718,1560088,0,268623,268623,1560070,0,268607,268607,1560103,0,268745,268745,1560106,0,268671,268671,1634643,12933,0,51958037,44226610,186867,51977554,51977554,2071931352635189,2072010659055500,2072010662533643,2071931357279756
35,micro_tk(micro_globals) [clone .kd],2,0,108,1432,1432,1048576,256,32768,0,76,132,32,64,0x0,0x7deb2f8e0580,16384,128532480,25781935,2063124876,0,0,0,0,0.0,0.0,0.0,1048576.0,4311744512.0,4311744512.0,4294967296.0,16777216.0,1502463,0,269441,269441,1502435,0,269556,269556,1502540,0,269680,269680,1502478,0,269827,269827,1502149,0,269445,269445,1502108,0,269324,269324,1502087,0,269706,269706,1502057,0,269762,269762,1502533,0,269331,269331,1502518,0,269519,269519,1502589,0,269740,269740,1502565,0,269792,269792,1502158,0,269341,269341,1502120,0,269271,269271,1502135,0,269666,269666,1502118,0,269723,269723,1570769,12878,0,50931511,43751287,146474,50951727,50951727,2071931358175771,2072010662585480,2072010666045355,2071931362778578
36,micro_tk(micro_globals) [clone .kd],2,0,113,1432,1432,1048576,256,32768,0,76,132,32,64,0x0,0x7deb2f8e0580,16384,128532480,25792458,2063708248,0,0,0,0,0.0,0.0,0.0,1048576.0,4311744512.0,4311744512.0,4294967296.0,16777216.0,1837249,0,267252,267252,1837400,0,267349,267349,1837593,0,267386,267386,1837476,0,267515,267515,1836903,0,267211,267211,1836915,0,267146,267146,1836792,0,267380,267380,1836870,0,267508,267508,1837341,0,267269,267269,1837307,0,267455,267455,1837548,0,267418,267418,1837699,0,267590,267590,1836955,0,267187,267187,1836978,0,267185,267185,1836929,0,267412,267412,1836983,0,267628,267628,1593011,12891,0,51752235,43553728,273419,51767357,51767357,2071931363698117,2072010666097072,2072010669558590,2071931368373862
37,micro_tk(micro_globals) [clone .kd],2,0,118,1432,1432,1048576,256,32768,0,76,132,32,64,0x0,0x7deb2f8e0580,16384,128532480,25784529,2063112072,0,0,0,0,0.0,0.0,0.0,1048576.0,4311744512.0,4311744512.0,4294967296.0,16777216.0,1487649,0,268949,268949,1487715,0,269186,269186,1487761,0,269268,269268,1487797,0,269377,269377,1487282,0,268826,268826,1487280,0,268775,268775,1487344,0,269127,269127,1487379,0,269398,269398,1487838,0,268928,268928,1487826,0,269127,269127,1487881,0,269201,269201,1487910,0,269345,269345,1487422,0,268848,268848,1487415,0,268837,268837,1487407,0,269131,269131,1487447,0,269416,269416,1563790,12891,0,51133420,43988278,141663,51152582,51152582,2071931369276496,2072010669608824,2072010673037614,2071931373835477
38,micro_tk(micro_globals) [clone .kd],2,0,123,1432,1432,1048576,256,32768,0,76,132,32,64,0x0,0x7deb2f8e0580,16384,128532480,25798491,2063841816,0,0,0,0,0.0,0.0,0.0,1048576.0,4311744512.0,4311744512.0,4294967296.0,16777216.0,1598086,0,268341,268341,1598103,0,268612,268612,1598393,0,268469,268469,1598331,0,268586,268586,1597746,0,268305,268305,1597729,0,268229,268229,1597807,0,268467,268467,1597843,0,268489,268489,1598149,0,268278,268278,1598137,0,268644,268644,1598374,0,268480,268480,1598420,0,268505,268505,1597792,0,268200,268200,1597815,0,268333,268333,1597801,0,268426,268426,1597855,0,268546,268546,1535080,12916,0,51872588,44373886,159697,51890398,51890398,2071931374711463,2072010673089050,2072010676520925,2071931379564179
39,micro_tk(micro_globals) [clone .kd],2,0,128,1432,1432,1048576,256,32768,0,76,132,32,64,0x0,0x7deb2f8e0580,16384,128532480,25788469,2063412200,0,0,0,0,0.0,0.0,0.0,1048576.0,4311744512.0,4311744512.0,4294967296.0,16777216.0,1725366,0,267905,267905,1725459,0,267901,267901,1725675,0,267733,267733,1725637,0,267817,267817,1724979,0,267720,267720,1724993,0,267575,267575,1724938,0,267852,267852,1725001,0,267816,267816,1725427,0,267868,267868,1725361,0,267960,267960,1725446,0,267774,267774,1725537,0,267783,267783,1725040,0,267730,267730,1725030,0,267589,267589,1725003,0,267749,267749,1725030,0,267853,267853,1526102,13235,0,51332780,43699184,213638,51349350,51349350,2071931380520233,2072010676570434,2072010679999865,2071931385041869
40,micro_tk(micro_globals) [clone .kd],2,0,133,1432,1432,1048576,256,32768,0,76,132,32,64,0x0,0x7deb2f8e0580,16384,128532480,25804616,2064625640,0,0,0,0,0.0,0.0,0.0,1048576.0,4311744512.0,4311744512.0,4294967296.0,16777216.0,1824919,0,266830,266830,1825061,0,266905,266905,1825144,0,266713,266713,1825066,0,266860,266860,1824676,0,266753,266753,1824660,0,266734,266734,1824642,0,266736,266736,1824695,0,266896,266896,1825038,0,266832,266832,1824969,0,266989,266989,1825041,0,266687,266687,1825141,0,266857,266857,1824584,0,266800,266800,1824580,0,266739,266739,1824456,0,266721,266721,1824458,0,266822,266822,1536955,12925,0,51683307,43877453,265339,51699942,51699942,2071931386001638,2072010680049457,2072010683466389,2071931390698513
41,micro_tk(micro_globals) [clone .kd],2,0,138,1432,1432,1048576,256,32768,0,76,132,32,64,0x0,0x7deb2f8e0580,16384,128532480,25790921,2063769268,0,0,0,0,0.0,0.0,0.0,1048576.0,4311744512.0,4311744512.0,4294967296.0,16777216.0,1776449,0,267629,267629,1776575,0,267742,267742,1776730,0,267585,267585,1776672,0,267701,267701,1776166,0,267558,267558,1776197,0,267480,267480,1776057,0,267617,267617,1776160,0,267769,267769,1776429,0,267564,267564,1776416,0,267781,267781,1776490,0,267604,267604,1776556,0,267760,267760,1775990,0,267582,267582,1776005,0,267542,267542,1775893,0,267693,267693,1775914,0,267770,267770,1534004,12890,0,50929232,42876668,246278,50948207,50948207,2071931391676810,2072010683515061,2072010686937802,2071931396295570
42,micro_tk(micro_globals) [clone .kd],2,0,143,1432,1432,1048576,256,32768,0,76,132,32,64,0x0,0x7deb2f8e0580,16384,128532480,25794732,2063901800,0,0,0,0,0.0,0.0,0.0,1048576.0,4311744512.0,4311744512.0,4294967296.0,16777216.0,1506605,0,268839,268839,1506586,0,268879,268879,1506720,0,268924,268924,1506649,0,269096,269096,1506253,0,268814,268814,1506236,0,268588,268588,1506241,0,268936,268936,1506248,0,269077,269077,1506532,0,268784,268784,1506547,0,268841,268841,1506601,0,269002,269002,1506634,0,269058,269058,1506146,0,268797,268797,1506138,0,268541,268541,1506182,0,268927,268927,1506212,0,269088,269088,1564354,12930,0,52177912,45035380,148516,52198356,52198356,2071931397273806,2072010686986193,2072010690388784,2071931401886847
43,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,147,1432,1432,67108864,512,0,0,12,4,32,64,0x0,0x7dcab0c6ed00,1048576,20971520,4320384,345569424,0,0,0,0,0.0,0.0,0.0,1048576.0,33554432.0,33554432.0,16777216.0,16777216.0,65606,0,262144,262144,65597,0,262144,262144,65611,0,262144,262144,65614,0,262144,262144,65568,0,262144,262144,65572,0,262144,262144,65591,0,262144,262144,65593,0,262144,262144,65604,0,262144,262144,65598,0,262144,262144,65611,0,262144,262144,65613,0,262144,262144,65568,0,262144,262144,65572,0,262144,262144,65592,0,262144,262144,65597,0,262144,262144,41390,957,0,2720835,1281531,1942550,2739808,2739808,2071931409877003,2072010697152635,2072010697323488,2071931410637938
44,"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul> >(int, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul>) [clone .kd]",2,0,148,1432,1432,16777216,256,0,0,16,0,32,64,0x0,0x7dcaa0260e40,262144,1572864,335230,26855436,0,0,0,524288,0.0,0.0,0.0,262144.0,50331648.0,50331648.0,33554432.0,16777216.0,262190,0,262144,262144,262181,0,262144,262144,262187,0,262144,262144,262166,0,262144,262144,262195,0,262144,262144,262203,0,262144,262144,262204,0,262144,262144,262202,0,262144,262144,262187,0,262144,262144,262180,0,262144,262144,262182,0,262144,262144,262168,0,262144,262144,262198,0,262144,262144,262199,0,262144,262144,262207,0,262144,262144,262204,0,262144,262144,45711,957,0,3219884,2618517,2074151,3238460,3238460,2071931416946085,2072010703343278,2072010703535603,2071931417721772
45,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,149,1432,1432,16777216,256,0,0,12,4,32,64,0x0,0x7ddb2f5957c0,262144,1572864,395873,31812528,0,0,0,0,0.0,0.0,0.0,262144.0,33554432.0,33554432.0,16777216.0,16777216.0,131072,0,262144,262144,131081,0,262144,262144,131076,0,262144,262144,131076,0,262144,262144,131143,0,262144,262144,131139,0,262144,262144,131147,0,262144,262144,131139,0,262144,262144,131072,0,262144,262144,131082,0,262144,262144,131076,0,262144,262144,131076,0,262144,262144,131131,0,262144,262144,131138,0,262144,262144,131146,0,262144,262144,131134,0,262144,262144,57729,13370,0,2121265,1380043,1236868,2141746,2141746,2071931419080542,2072010704887241,2072010705006457,2071931420197824
46,__amd_rocclr_fillBufferAligned.kd,2,0,150,1432,1432,256,256,0,0,12,4,48,64,0x0,0x7e033401ba00,4,42,86,7156,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,8,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,4,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,1,0,0,0,1,0,0,0,9,0,0,0,4,0,0,0,131197,8356,0,577208,0,4,602360,602360,2071931420142903,2072010705006457,2072010705010423,2071931422060068
47,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,151,1432,1432,155648,512,2560,48,28,4,80,64,0x0,0x7dca8f618380,2432,1483154,446882,35824988,0,0,0,0,0.0,19520.0,304.0,5185.0,16801888.0,16801888.0,16777552.0,4880.0,131128,0,0,0,131140,0,0,0,131152,0,32,0,131132,0,32,0,131144,0,32,0,131163,0,184,0,131159,0,0,0,131161,0,24,0,131128,0,0,0,131140,0,1,0,131155,0,32,0,131136,0,32,0,131143,0,32,0,131160,0,184,0,131158,0,0,0,131160,0,24,0,485541,16650,0,4275178,55,2487,4331846,4331846,2071931422879539,2072010707646601,2072010707773429,2071931424144290
48,__amd_rocclr_copyBuffer.kd,2,0,152,1432,1432,512,512,0,0,16,0,32,64,0x0,0x7e033401ba80,8,75,115,8712,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,5,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,4,0,4,0,0,0,0,0,136971,7982,0,609275,0,8,634392,634392,2071931423981569,2072010707773429,2072010707777435,2071931425830954
49,__amd_rocclr_fillBufferAligned.kd,2,0,154,1432,1432,256,256,0,0,12,4,48,64,0x0,0x7e033401ba00,4,42,92,7068,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,8,0,0,0,5,0,0,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,1,0,5,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,42099,10112,0,80966,0,4,106214,106214,2071931426686890,2072010707842651,2072010707844894,2071931427786496
50,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4>) [clone .kd]",2,0,155,1432,1432,155648,512,2560,48,28,4,80,64,0x0,0x7dd32f317880,2432,936615,323796,25872252,0,548364,1,0,0.0,19520.0,304.0,5185.0,16801888.0,16801888.0,16777552.0,4880.0,131120,0,0,0,131120,0,1,0,131130,0,32,0,131130,0,32,0,131151,0,32,0,131132,0,184,0,131167,0,0,0,131143,0,24,0,131120,0,0,0,131120,0,0,0,131128,0,32,0,131128,0,32,0,131149,0,32,0,131128,0,184,0,131171,0,0,0,131149,0,24,0,367483,1044,0,1599352,55,2487,1619368,1619368,2071931430024415,2072010710136443,2072010710235589,2071931430696418
51,__amd_rocclr_copyBuffer.kd,2,0,156,1432,1432,512,512,0,0,16,0,32,64,0x0,0x7e033401ba80,8,75,99,8504,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,5,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,4,0,4,0,0,0,0,0,183943,7982,0,866834,0,8,891982,891982,2071931430593977,2072010710235589,2072010710239675,2071931432645931
52,"void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul> >(int, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul>) [clone .kd]",2,0,158,1432,1432,4194304,256,0,0,24,0,64,64,0x0,0x7dca8f2314c0,65536,5046272,1043504,83452684,0,0,0,0,0.0,0.0,0.0,262144.0,20971520.0,20971520.0,16777216.0,4194304.0,131104,0,65536,65536,131104,0,65536,65536,131104,0,65536,65536,131104,0,65536,65536,131111,0,65536,65536,131114,0,65536,65536,131137,0,65536,65536,131136,0,65536,65536,131104,0,65536,65536,131104,0,65536,65536,131104,0,65536,65536,131104,0,65536,65536,131111,0,65536,65536,131117,0,65536,65536,131133,0,65536,65536,131132,0,65536,65536,52285,957,0,1018837,727050,543216,1038140,1038140,2071931437078896,2072010714620913,2072010714681042,2071931437717210
53,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,159,1432,1432,67108864,512,0,0,12,4,32,64,0x0,0x7dcab0c6e700,1048576,24117248,5014468,401083212,0,0,0,0,0.0,0.0,0.0,1048576.0,83886080.0,83886080.0,16777216.0,67108864.0,32859,0,524288,524288,32846,0,524288,524288,32849,0,524288,524288,32860,0,524288,524288,32818,0,524288,524288,32850,0,524288,524288,32819,0,524288,524288,32972,0,524288,524288,32855,0,524288,524288,32849,0,524288,524288,32854,0,524288,524288,32859,0,524288,524288,32814,0,524288,524288,32854,0,524288,524288,32816,0,524288,524288,32977,0,524288,524288,479135,8128,0,3494041,1655435,2179826,3876014,3876014,2071931437740905,2072010714701152,2072010714891513,2071931439539154
54,__amd_rocclr_fillBufferAligned.kd,2,0,160,1432,1432,256,256,0,0,12,4,48,64,0x0,0x7e033401ba00,4,42,108,8516,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,8,0,0,0,4,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,13,0,0,0,12,0,0,0,120441,17376,0,524184,0,4,549861,549861,2071931438305860,2072010714891513,2072010714895359,2071931441088185
55,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4> >(at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4>) [clone .kd]",2,0,161,1432,1432,155648,512,4608,80,36,4,80,64,0x0,0x7dca6ec2e7c0,2432,1213406,385618,30826492,0,0,0,0,0.0,19520.0,304.0,5185.0,33593984.0,33593984.0,33555008.0,19520.0,262235,0,0,0,262218,0,152,0,262220,0,16,0,262236,0,16,0,262237,0,32,0,262236,0,32,0,262235,0,24,0,262234,0,32,0,262231,0,0,0,262217,0,153,0,262220,0,16,0,262240,0,16,0,262231,0,32,0,262230,0,32,0,262233,0,24,0,262236,0,32,0,755844,16273,0,5517916,51,2483,5574674,5574674,2071931442518750,2072010718852950,2072010719056692,2071931443478920
56,__amd_rocclr_copyBuffer.kd,2,0,162,1432,1432,512,512,0,0,16,0,32,64,0x0,0x7e033401ba80,8,87,118,9000,0,0,0,0,0.0,0.0,0.0,8.0,256.0,256.0,128.0,128.0,5,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,5,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,8,0,0,0,0,0,174733,8368,0,813794,0,8,839361,839361,2071931443194640,2072010719056692,2072010719062300,2071931445259733
57,"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul> >(int, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul>) [clone .kd]",2,0,164,1432,1432,16777216,256,0,0,16,0,32,64,0x0,0x7dcaa0260e40,262144,1572864,340707,27232100,0,0,0,524288,0.0,0.0,0.0,262144.0,50331648.0,50331648.0,33554432.0,16777216.0,262205,0,262144,262144,262205,0,262144,262144,262217,0,262144,262144,262193,0,262144,262144,262180,0,262144,262144,262182,0,262144,262144,262185,0,262144,262144,262179,0,262144,262144,262206,0,262144,262144,262205,0,262144,262144,262211,0,262144,262144,262198,0,262144,262144,262183,0,262144,262144,262180,0,262144,262144,262184,0,262144,262144,262187,0,262144,262144,52205,7188,0,2850175,2295106,1800569,2870621,2870621,2071931445977074,2072010719120666,2072010719295685,2071931447163288
58,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,165,1432,1432,16777216,256,0,0,12,4,32,64,0x0,0x7ddb2f5957c0,262144,1572864,430692,34487336,0,0,0,0,0.0,0.0,0.0,262144.0,33554432.0,33554432.0,16777216.0,16777216.0,131080,0,262144,262144,131077,0,262144,262144,131077,0,262144,262144,131076,0,262144,262144,131110,0,262144,262144,131117,0,262144,262144,131128,0,262144,262144,131111,0,262144,262144,131082,0,262144,262144,131076,0,262144,262144,131077,0,262144,262144,131076,0,262144,262144,131108,0,262144,262144,131116,0,262144,262144,131118,0,262144,262144,131114,0,262144,262144,331169,11310,0,2278113,1362832,1227586,2517505,2517505,2071931446996681,2072010719295685,2072010719443944,2071931448854519
59,__amd_rocclr_fillBufferAligned.kd,2,0,166,1432,1432,256,256,0,0,12,4,48,64,0x0,0x7e033401ba00,4,42,90,7104,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,8,0,0,0,4,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,4,0,0,0,3,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,175564,11214,0,804984,0,4,838514,838514,2071931447580455,2072010719443944,2072010719448471,2071931450399183
60,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,167,1432,1432,155648,512,2560,48,28,4,80,64,0x0,0x7dca8f618380,2432,1483154,463808,37087680,0,0,0,0,0.0,19520.0,304.0,5185.0,16801888.0,16801888.0,16777552.0,4880.0,131133,0,0,0,131141,0,1,0,131148,0,32,0,131137,0,32,0,131153,0,32,0,131167,0,184,0,131170,0,0,0,131162,0,24,0,131134,0,0,0,131141,0,0,0,131148,0,32,0,131133,0,32,0,131143,0,32,0,131168,0,184,0,131173,0,0,0,131157,0,24,0,720161,13495,0,2688934,53,2485,2844704,2844704,2071931448137268,2072010719448471,2072010719580787,2071931451713006
61,__amd_rocclr_copyBuffer.kd,2,0,168,1432,1432,512,512,0,0,16,0,32,64,0x0,0x7e033401ba80,8,75,119,8856,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,11,0,0,0,8,0,0,0,6,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,8,0,4,0,4,0,0,0,337846,14244,0,1720383,0,8,1745228,1745228,2071931449184587,2072010719580787,2072010719584913,2071931453189629
62,__amd_rocclr_fillBufferAligned.kd,2,0,170,1432,1432,256,256,0,0,12,4,48,64,0x0,0x7e033401ba00,4,42,94,7276,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,8,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,1,0,5,0,0,0,0,0,0,0,9,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,8,0,0,0,5,0,0,0,41876,10110,0,81626,0,4,106554,106554,2071931453967159,2072010719611712,2072010719613675,2071931455166062
63,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4>) [clone .kd]",2,0,171,1432,1432,155648,512,2560,48,28,4,80,64,0x0,0x7dd32f317880,2432,936615,357866,28616484,0,548364,1,0,0.0,19520.0,304.0,5185.0,16801888.0,16801888.0,16777552.0,4880.0,131136,0,0,0,131132,0,1,0,131135,0,32,0,131122,0,32,0,131149,0,32,0,131126,0,184,0,131158,0,0,0,131151,0,24,0,131137,0,0,0,131132,0,0,0,131131,0,32,0,131120,0,32,0,131149,0,32,0,131118,0,184,0,131162,0,0,0,131151,0,24,0,476072,10697,0,2141489,53,2485,2225982,2225982,2071931455148626,2072010719618122,2072010719715386,2071931457042707
64,__amd_rocclr_copyBuffer.kd,2,0,172,1432,1432,512,512,0,0,16,0,32,64,0x0,0x7e033401ba80,8,75,102,8896,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,1,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,11,0,0,0,11,0,0,0,5,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,8,0,4,0,7,0,0,0,82195,16938,0,316287,0,8,341403,341403,2071931455720632,2072010719715386,2072010719719472,2071931458187119
65,"void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul> >(int, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul>) [clone .kd]",2,0,174,1432,1432,4194304,256,0,0,24,0,64,64,0x0,0x7dca8f2314c0,65536,5046272,1144908,91626080,0,0,0,0,0.0,0.0,0.0,262144.0,20971520.0,20971520.0,16777216.0,4194304.0,131112,0,65536,65536,131104,0,65536,65536,131116,0,65536,65536,131108,0,65536,65536,131108,0,65536,65536,131112,0,65536,65536,131140,0,65536,65536,131127,0,65536,65536,131112,0,65536,65536,131104,0,65536,65536,131116,0,65536,65536,131108,0,65536,65536,131105,0,65536,65536,131110,0,65536,65536,131139,0,65536,65536,131128,0,65536,65536,55745,9463,0,1078493,757740,562524,1097562,1097562,2071931458937819,2072010719749196,2072010719811688,2071931460147047
66,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,175,1432,1432,67108864,512,0,0,12,4,32,64,0x0,0x7dcab0c6e700,1048576,24117248,5016563,401240620,0,0,0,0,0.0,0.0,0.0,1048576.0,83886080.0,83886080.0,16777216.0,67108864.0,32864,0,524288,524288,32877,0,524288,524288,32889,0,524288,524288,32891,0,524288,524288,32796,0,524288,524288,32819,0,524288,524288,32790,0,524288,524288,32791,0,524288,524288,32871,0,524288,524288,32876,0,524288,524288,32890,0,524288,524288,32894,0,524288,524288,32796,0,524288,524288,32818,0,524288,524288,32788,0,524288,524288,32791,0,524288,524288,243420,8335,0,3451257,1639937,2160220,3609624,3609624,2071931460109922,2072010719811688,2072010719999646,2071931461949953
67,__amd_rocclr_fillBufferAligned.kd,2,0,176,1432,1432,256,256,0,0,12,4,48,64,0x0,0x7e033401ba00,4,42,93,7084,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,8,0,0,0,4,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,4,0,0,0,4,0,0,0,9,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,2,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,173779,12171,0,816244,0,4,841295,841295,2071931460667276,2072010719999646,2072010720004092,2071931463566153
68,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4> >(at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4>) [clone .kd]",2,0,177,1432,1432,155648,512,4608,80,36,4,80,64,0x0,0x7dca6ec2e7c0,2432,1213406,391732,31357196,0,0,0,0,0.0,19520.0,304.0,5185.0,33593984.0,33593984.0,33555008.0,19520.0,262244,0,0,0,262234,0,152,0,262249,0,16,0,262252,0,16,0,262222,0,32,0,262232,0,32,0,262225,0,24,0,262221,0,32,0,262242,0,0,0,262233,0,153,0,262246,0,16,0,262252,0,16,0,262218,0,32,0,262231,0,32,0,262225,0,24,0,262220,0,32,0,1138583,13967,0,4186630,53,2485,4439280,4439280,2071931461214776,2072010720004092,2072010720207473,2071931465019372
69,__amd_rocclr_copyBuffer.kd,2,0,178,1432,1432,512,512,0,0,16,0,32,64,0x0,0x7e033401ba80,8,87,127,9844,0,0,0,0,0.0,0.0,0.0,8.0,256.0,256.0,128.0,128.0,4,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,11,0,0,0,8,0,0,0,5,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,8,0,4,0,0,0,149130,14398,0,675817,0,8,701919,701919,2071931462251989,2072010720207473,2072010720212240,2071931466606288
