Dispatch_ID,Kernel_Name,GPU_ID,queue-id,queue-index,pid,tid,Grid_Size,Workgroup_Size,LDS_Per_Workgroup,Scratch_Per_Workitem,Arch_VGPR,Accum_VGPR,SGPR,wave_size,sig,obj,SQ_CYCLES,SQ_WAVES,SQ_WAVE_CYCLES,SQ_BUSY_CYCLES,SQ_LEVEL_WAVES,SQ_ACCUM_PREV_HIRES,SQ_INSTS_VALU_INT32,SQ_INSTS_VALU_INT64,TA_ADDR_STALLED_BY_TC_CYCLES_sum,TA_TOTAL_WAVEFRONTS_sum,TCP_UTCL1_TRANSLATION_MISS_sum,TCP_UTCL1_TRANSLATION_HIT_sum,TCP_UTCL1_PERMISSION_MISS_sum,TCP_UTCL1_REQUEST_sum,TCC_TAG_STALL[0],TCC_BUBBLE[0],TCC_TOO_MANY_EA_WRREQS_STALL[0],TCC_TAG_STALL[1],TCC_BUBBLE[1],TCC_TOO_MANY_EA_WRREQS_STALL[1],TCC_TAG_STALL[2],TCC_BUBBLE[2],TCC_TOO_MANY_EA_WRREQS_STALL[2],TCC_TAG_STALL[3],TCC_BUBBLE[3],TCC_TOO_MANY_EA_WRREQS_STALL[3],TCC_TAG_STALL[4],TCC_BUBBLE[4],TCC_TOO_MANY_EA_WRREQS_STALL[4],TCC_TAG_STALL[5],TCC_BUBBLE[5],TCC_TOO_MANY_EA_WRREQS_STALL[5],TCC_TAG_STALL[6],TCC_BUBBLE[6],TCC_TOO_MANY_EA_WRREQS_STALL[6],TCC_TAG_STALL[7],TCC_BUBBLE[7],TCC_TOO_MANY_EA_WRREQS_STALL[7],TCC_TAG_STALL[8],TCC_BUBBLE[8],TCC_TOO_MANY_EA_WRREQS_STALL[8],TCC_TAG_STALL[9],TCC_BUBBLE[9],TCC_TOO_MANY_EA_WRREQS_STALL[9],TCC_TAG_STALL[10],TCC_BUBBLE[10],TCC_TOO_MANY_EA_WRREQS_STALL[10],TCC_TAG_STALL[11],TCC_BUBBLE[11],TCC_TOO_MANY_EA_WRREQS_STALL[11],TCC_TAG_STALL[12],TCC_BUBBLE[12],TCC_TOO_MANY_EA_WRREQS_STALL[12],TCC_TAG_STALL[13],TCC_BUBBLE[13],TCC_TOO_MANY_EA_WRREQS_STALL[13],TCC_TAG_STALL[14],TCC_BUBBLE[14],TCC_TOO_MANY_EA_WRREQS_STALL[14],TCC_TAG_STALL[15],TCC_BUBBLE[15],TCC_TOO_MANY_EA_WRREQS_STALL[15],TCC_CYCLE_sum,CPC_ME1_BUSY_FOR_PACKET_DECODE,CPC_CPC_UTCL2IU_STALL,SPI_RA_WAVE_SIMD_FULL_CSN,SPI_RA_VGPR_SIMD_FULL_CSN,GRBM_COUNT,GRBM_GUI_ACTIVE,DispatchNs,Start_Timestamp,End_Timestamp,CompleteNs
0,"void at::native::(anonymous namespace)::distribution_elementwise_grid_stride_kernel<float, 4, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}>(long, at::PhiloxCudaState, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}) [clone .kd]",2,0,0,41874,41874,622592,256,0,0,56,0,48,64,0x0,0x7e7b919abf80,5694789,9728,246064247,5213494,0,984472808,7443456,9025536,62152.0,1048576.0,139980.0,2228610.0,0.0,4194304.0,1859,0,0,0,0,0,2274,0,0,2237,0,0,1863,0,0,1777,0,0,1725,0,0,1628,0,0,2029,0,0,0,0,0,2396,0,0,2184,0,0,1923,0,0,1881,0,0,1746,0,0,1625,0,0,22765360.0,784850,0,0,0,1422835,1422835,3985543042492113,3985600464261405,3985600464349455,3985543052077747
1,"void at::native::vectorized_elementwise_kernel<8, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul> >(int, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,1,41874,41874,8388608,256,0,0,20,4,32,64,0x0,0x7e4375e46d40,6831491,131072,412215643,6266409,0,1651778856,2097152,0,4321562.0,262144.0,35278.0,2955369.0,0.0,4194304.0,193109,65536,0,349189,65536,0,286217,65536,0,309283,65536,0,197379,65536,0,200570,65536,0,236865,65536,0,184767,65536,0,211323,65536,0,374080,65536,0,282704,65536,0,325659,65536,0,195704,65536,0,191124,65536,0,238694,65536,0,200088,65536,0,27323776.0,165970,0,9118177,0,1707736,1707736,3985543057144625,3985600469372577,3985600469465073,3985543057716810
2,"void at::native::(anonymous namespace)::distribution_elementwise_grid_stride_kernel<float, 4, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}>(long, at::PhiloxCudaState, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}) [clone .kd]",2,0,2,41874,41874,622592,256,0,0,56,0,48,64,0x0,0x7e7b919abf80,7496441,9728,246979912,5225426,0,988135916,7443456,9025536,276.0,1048576.0,139901.0,2227402.0,0.0,4194304.0,5726,0,0,1671,0,0,6181,0,0,5906,0,0,5113,0,0,5810,0,0,5591,0,0,5555,0,0,5429,0,0,1631,0,0,6058,0,0,5897,0,0,5178,0,0,5817,0,0,5509,0,0,5372,0,0,29972560.0,1228022,0,0,0,1873285,1873285,3985543057741677,3985600469465073,3985600469551601,3985543059207052
3,"void at::native::vectorized_elementwise_kernel<8, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul> >(int, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,3,41874,41874,8388608,256,0,0,20,4,32,64,0x0,0x7e4375e46d40,10043429,131072,357814615,5437584,0,1434181612,2097152,0,3070598.0,262144.0,35114.0,2964747.0,0.0,4194304.0,254118,65536,0,524392,65536,0,149992,65536,0,185540,65536,0,219468,65536,0,192886,65536,0,117702,65536,0,110852,65536,0,237102,65536,0,536779,65536,0,161162,65536,0,196506,65536,0,211800,65536,0,206608,65536,0,119290,65536,0,114576,65536,0,40160240.0,1173374,0,7422947,0,2510015,2510015,3985543058239673,3985600469551601,3985600469639410,3985543060461015
4,"void at::native::elementwise_kernel_manual_unroll<128, 8, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,4,41874,41874,8388608,128,0,0,40,0,64,64,0x0,0x7e437586f6c0,21580941,131072,1497525585,21175425,0,5992985112,9437184,6291456,169125361.0,2097152.0,21883.0,71202133.0,0.0,71303168.0,9243,65536,0,9342,65536,0,9416,65536,0,8604,65536,0,9299,65536,0,9337,65536,0,9205,65536,0,9181,65536,0,9361,65536,0,9340,65536,0,9477,65536,0,8613,65536,0,9163,65536,0,9392,65536,0,9259,65536,0,9094,65536,0,86307504.0,428381,0,44200559,0,5394219,5394219,3985543065830820,3985600476294902,3985600476646741,3985543066612976
5,__amd_rocclr_fillBufferAligned.kd,2,0,5,41874,41874,77824,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,908661,1216,3100521,331167,0,12442128,4864,79232,3.0,25600.0,3904.0,302211.0,0.0,409600.0,6677,0,0,6041,0,0,7317,0,0,6214,0,0,4356,0,0,2753,0,0,3426,0,0,2897,0,0,5513,0,0,6033,0,0,6668,0,0,6191,0,0,4206,0,0,3487,0,0,3140,0,0,2890,0,0,3619872.0,190008,0,0,0,226242,226242,3985543069111669,3985600479242372,3985600479253949,3985543069592759
6,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,6,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,67830265,4736,620356178,67312759,0,2481527924,2424704,0,12247230.0,13601792.0,81595.0,215846666.0,0.0,216006656.0,26354,908000,0,33537,907927,0,32005,907768,0,36291,907734,0,30044,908110,0,29504,908078,0,29994,907476,0,33856,907531,0,21773,908120,0,31628,908035,0,23207,907557,0,29702,907604,0,28893,907988,0,27220,907895,0,32340,907624,0,30210,907757,0,271307328.0,4330407,0,0,402315099,16956708,16956708,3985543160411953,3985600568206057,3985600569423053,3985543162421904
7,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,7,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,68328921,4736,619231794,67085958,0,2477031336,2424704,0,16535259.0,13601792.0,83574.0,215842900.0,0.0,216006656.0,1319,817855,0,609,817839,0,1209,817756,0,1257,817700,0,1181,817828,0,1188,817807,0,1300,817753,0,640,817697,0,1318,817706,0,616,817694,0,1293,817726,0,1264,817700,0,1169,817832,0,1182,817784,0,1335,817734,0,649,817662,0,273299904.0,4397098,0,0,404398432,17081244,17081244,3985543161232095,3985600569423053,3985600570876317,3985543164537430
8,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,8,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,67847617,4736,607335171,65838712,0,2429444368,2424704,0,10971407.0,13601792.0,83294.0,215843440.0,0.0,216006656.0,1381,820300,0,681,820234,0,1230,820300,0,1246,820212,0,1207,820355,0,1206,820306,0,1305,820317,0,727,820242,0,1299,820422,0,613,820366,0,1257,820458,0,1148,820364,0,1205,820295,0,1235,820192,0,1307,820338,0,598,820222,0,271375904.0,4591649,0,0,394185966,16960994,16960994,3985543161709641,3985600570876317,3985600573097956,3985543166708848
9,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,9,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,68146917,4736,609689691,66085288,0,2438862744,2424704,0,11411228.0,13601792.0,83350.0,215843341.0,0.0,216006656.0,1362,823528,0,1304,823627,0,731,823652,0,1781,823750,0,1437,823663,0,1332,823761,0,1392,823606,0,890,823717,0,1219,823543,0,1365,823649,0,689,823531,0,1308,823601,0,1295,823483,0,1311,823531,0,1389,823478,0,698,823544,0,272574944.0,4621249,0,0,395595229,17035934,17035934,3985543162153877,3985600573097956,3985600574918242,3985543168713450
10,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,10,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,69493617,4736,609770518,66088726,0,2439185736,2424704,0,11345205.0,13601792.0,83341.0,215843381.0,0.0,216006656.0,2929,820491,0,3565,820371,0,2656,820457,0,3108,820359,0,3093,820447,0,3115,820357,0,4023,820419,0,3686,820337,0,2714,820457,0,4875,820319,0,2672,820428,0,4205,820342,0,2556,820512,0,3694,820396,0,3402,820396,0,3209,820276,0,277961392.0,4961162,0,0,395394382,17372587,17372587,3985543162607568,3985600574918242,3985600576577090,3985543170758613
11,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,11,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,68177653,4736,609925714,66135253,0,2439806832,2424704,0,11264640.0,13601792.0,83460.0,215843166.0,0.0,216006656.0,1798,822779,0,1772,822778,0,1433,822775,0,942,822709,0,1520,822862,0,1851,822829,0,1826,822688,0,1061,822663,0,1634,822771,0,1522,822741,0,1455,822694,0,911,822671,0,1519,822768,0,1517,822778,0,1402,822750,0,887,822737,0,272696752.0,4629068,0,0,395547629,17043547,17043547,3985543163101768,3985600576577090,3985600578183701,3985543172662346
12,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,12,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,69591277,4736,610947498,66249958,0,2443893804,2424704,0,11702436.0,13601792.0,83182.0,215843809.0,0.0,216006656.0,3087,821915,0,3895,821973,0,3467,821943,0,3849,821981,0,3991,821910,0,5056,821932,0,4517,821972,0,4395,821965,0,4163,821895,0,5849,821913,0,5159,822001,0,5839,821986,0,4393,821968,0,4915,821953,0,4917,821977,0,6010,821962,0,278351376.0,4959294,0,0,396173495,17396961,17396961,3985543163807862,3985600578183701,3985600579757224,3985543174619168
13,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,13,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,68737038,4736,610723185,66218526,0,2442996348,2424704,0,11550675.0,13601792.0,83508.0,215843102.0,0.0,216006656.0,3325,833167,0,3380,832927,0,3296,832956,0,3815,832788,0,3270,833061,0,3915,832799,0,4152,833058,0,4541,832940,0,2489,833135,0,4561,832895,0,5400,833103,0,6061,833005,0,2604,833172,0,3932,832965,0,3877,832944,0,4035,832761,0,274936176.0,4751487,0,0,396077070,17183511,17183511,3985543164349182,3985600579757224,3985600581308673,3985543176485095
14,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,14,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,68483165,4736,610568463,66209726,0,2442377888,2424704,0,11556206.0,13601792.0,83342.0,215843371.0,0.0,216006656.0,6173,828507,0,7467,828410,0,5423,828514,0,8462,828418,0,5158,828822,0,5399,828690,0,7470,828660,0,6861,828537,0,3048,828715,0,4913,828616,0,4669,828584,0,4212,828538,0,3262,828502,0,4442,828334,0,5622,828509,0,5775,828406,0,273918704.0,4705430,0,0,395544738,17119919,17119919,3985543164794049,3985600581308673,3985600582829838,3985543178351683
15,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,15,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,68032909,4736,611352157,66303643,0,2445512464,2424704,0,11976217.0,13601792.0,83328.0,215843344.0,0.0,216006656.0,1861,827531,0,1701,827463,0,1715,827712,0,2154,827645,0,1678,827469,0,957,827397,0,1813,827648,0,1041,827571,0,1894,827478,0,3214,827508,0,2407,827815,0,3688,827773,0,1544,827506,0,709,827435,0,1692,827688,0,880,827720,0,272117472.0,4549368,0,0,396705203,17007342,17007342,3985543165263222,3985600582829838,3985600584342270,3985543180154026
16,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,16,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,68345567,4736,614069369,66615945,0,2456381208,2424704,0,12356022.0,13601792.0,83387.0,215843234.0,0.0,216006656.0,4818,840732,0,6993,840678,0,6257,840653,0,8555,840627,0,7285,840664,0,7139,840540,0,5681,840583,0,10624,840617,0,7669,840623,0,11825,840586,0,9255,840725,0,12224,840717,0,9143,840868,0,7181,840819,0,10965,840728,0,11635,840715,0,273380000.0,4573635,0,0,398488294,17086250,17086250,3985543166016195,3985600584342270,3985600585816646,3985543181892746
17,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,17,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,68113309,4736,614614749,66706984,0,2458562632,2424704,0,12411528.0,13601792.0,83620.0,215842830.0,0.0,216006656.0,10386,841307,0,14714,841359,0,14389,841169,0,18179,841132,0,15730,841206,0,12593,841335,0,13002,841291,0,17269,841291,0,10665,841466,0,13984,841572,0,12729,841486,0,15057,841456,0,14066,841474,0,13466,841506,0,13736,841299,0,15774,841280,0,272440048.0,4511018,0,0,398755036,17027503,17027503,3985543166449745,3985600585816646,3985600587279205,3985543183638285
18,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,18,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,68205917,4736,611261902,66284022,0,2445151000,2424704,0,11632829.0,13601792.0,83481.0,215843086.0,0.0,216006656.0,6546,827073,0,6657,826952,0,8118,826972,0,8646,827001,0,7103,826999,0,5960,826932,0,5506,827033,0,7860,827034,0,2727,826902,0,5012,826901,0,6840,827037,0,7521,827010,0,6681,826992,0,5895,826950,0,5447,826924,0,7644,826948,0,272811664.0,4629942,0,0,395811337,17050729,17050729,3985543166873632,3985600587279205,3985600588722455,3985543185473347
19,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,19,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,70073461,4736,613531070,66609987,0,2454227984,2424704,0,11834007.0,13601792.0,83372.0,215843316.0,0.0,216006656.0,9683,852472,0,10949,852416,0,8655,852157,0,11524,852219,0,9164,852261,0,9529,852244,0,11885,852143,0,11478,852169,0,8145,852163,0,9011,852257,0,7308,852076,0,8823,852135,0,7840,852505,0,7201,852498,0,9090,852193,0,9303,852218,0,280280560.0,5064035,0,0,396622133,17517535,17517535,3985543167342344,3985600588722455,3985600590164863,3985543187352954
20,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,20,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,69151997,4736,612975452,66481111,0,2452005368,2424704,0,12046495.0,13601792.0,83521.0,215842945.0,0.0,216006656.0,4224,826464,0,5036,826433,0,4031,826369,0,5175,826367,0,3617,826485,0,4240,826461,0,4512,826501,0,4412,826498,0,2884,826507,0,4462,826417,0,3009,826534,0,4092,826456,0,2824,826361,0,2752,826292,0,3029,826381,0,3085,826265,0,276594960.0,4803054,0,0,397712294,17287185,17287185,3985543168169236,3985600590164863,3985600591581314,3985543189142248
21,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,21,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,70022704,4736,615333388,66727266,0,2461437920,2424704,0,12662771.0,13601792.0,83363.0,215843362.0,0.0,216006656.0,18126,842006,0,19556,841975,0,17553,842065,0,21051,842048,0,17697,841809,0,17466,841867,0,19143,842074,0,20749,841911,0,17866,841849,0,19957,841852,0,19688,841937,0,20538,841932,0,18348,842112,0,18217,842008,0,19585,842104,0,20342,842164,0,280090432.0,4978510,0,0,399064959,17505652,17505652,3985543168601725,3985600591581314,3985600592985666,3985543190922198
22,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,22,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,68575961,4736,616538379,66873000,0,2466256808,2424704,0,12758460.0,13601792.0,83486.0,215843072.0,0.0,216006656.0,13110,847965,0,21181,847890,0,17517,847861,0,21951,847905,0,19448,847988,0,19217,848017,0,19751,847766,0,21100,847805,0,19957,847957,0,23241,847982,0,20542,847812,0,24565,847917,0,21950,847997,0,22649,847987,0,24291,847821,0,24158,847833,0,274291392.0,4587882,0,0,399536162,17143212,17143212,3985543169025061,3985600592985666,3985600594392983,3985543192628760
23,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,23,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,69755829,4736,613460865,66545548,0,2453947528,2424704,0,11936901.0,13601792.0,83381.0,215843238.0,0.0,216006656.0,9833,848144,0,8930,848117,0,9942,848372,0,9220,848418,0,8673,848124,0,7442,848110,0,8792,848271,0,9996,848287,0,9739,848083,0,12316,847989,0,11699,848175,0,13227,848186,0,10097,848077,0,8245,847999,0,10337,848300,0,11768,848346,0,279008720.0,4979356,0,0,396906397,17438045,17438045,3985543169489818,3985600594392983,3985600595785959,3985543194485484
24,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,24,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,67919041,4736,613002089,66493070,0,2452112104,2424704,0,11824028.0,13601792.0,83460.0,215843118.0,0.0,216006656.0,3386,843710,0,4339,843837,0,3812,843488,0,6833,843616,0,3908,843606,0,3112,843778,0,3980,843449,0,5155,843589,0,2891,843710,0,4876,843849,0,3416,843570,0,5481,843653,0,3757,843655,0,4244,843745,0,4217,843405,0,5203,843545,0,271661840.0,4510748,0,0,397216293,16978865,16978865,3985543170294447,3985600595785959,3985600597184383,3985543196245465
25,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,25,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,68580552,4736,616853368,66909230,0,2467517188,2424704,0,12778728.0,13601792.0,83391.0,215843163.0,0.0,216006656.0,11433,843052,0,17236,843016,0,14529,843136,0,17588,843137,0,16601,843146,0,16117,843106,0,17685,843104,0,18700,843151,0,12290,843061,0,16780,843162,0,14255,843120,0,19216,843205,0,11445,842987,0,12572,843030,0,14180,843189,0,17460,843268,0,274321824.0,4580074,0,0,400233935,17145114,17145114,3985543170731302,3985600597184383,3985600598575156,3985543197924506
26,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,28,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,69147725,4736,633278750,68617000,0,2533218280,2424704,0,17496856.0,13601792.0,81588.0,215846700.0,0.0,216006656.0,28157,835962,0,30780,835929,0,48232,836146,0,52182,836133,0,50808,836029,0,51672,836011,0,50269,836245,0,54393,836152,0,49764,836025,0,56648,836010,0,33437,836208,0,38956,836158,0,33206,835924,0,32465,835863,0,52282,836249,0,52977,836164,0,276577696.0,4286971,0,0,414242509,17286106,17286106,3985543198919766,3985600598683315,3985600600065555,3985543201064686
27,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,32,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,67235916,4736,615416062,66718665,0,2461767684,2424704,0,12856906.0,13601792.0,81587.0,215846707.0,0.0,216006656.0,23514,868638,0,27154,868837,0,22669,870019,0,25661,870027,0,24029,868982,0,23848,869196,0,23487,870375,0,28943,870181,0,21081,869100,0,25026,869377,0,20989,870345,0,30145,870337,0,22635,868784,0,22398,868913,0,24669,870092,0,25673,870081,0,268943280.0,4273370,0,0,399385277,16808955,16808955,3985543201631383,3985600600117832,3985600601459132,3985543203970059
28,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,36,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,67402589,4736,615981656,66804251,0,2464030432,2424704,0,11556825.0,13601792.0,81582.0,215846709.0,0.0,216006656.0,18099,870018,0,20144,869996,0,21104,869855,0,26081,869998,0,22968,869977,0,22502,869989,0,23407,870000,0,26855,870148,0,16983,870021,0,22756,870056,0,19278,870041,0,28416,870284,0,20469,869928,0,21577,869915,0,20192,869747,0,26207,869899,0,269596000.0,4305190,0,0,399847335,16849750,16849750,3985543204488015,3985600601501274,3985600602853830,3985543206812270
29,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,40,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,69096901,4736,632247554,68489232,0,2529093700,2424704,0,13644456.0,13601792.0,81586.0,215846711.0,0.0,216006656.0,37709,851221,0,42980,851262,0,41235,851241,0,46024,851417,0,17808,851105,0,18667,851153,0,18008,851196,0,22854,851403,0,14720,851209,0,19626,851246,0,18972,851299,0,23344,851521,0,41582,851328,0,41127,851421,0,21079,851434,0,22746,851601,0,276372736.0,4287886,0,0,414005373,17273296,17273296,3985543207358997,3985600602893168,3985600604288107,3985543209655090
30,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,44,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,67230029,4736,614422626,66653513,0,2457794120,2424704,0,12413829.0,13601792.0,81587.0,215846701.0,0.0,216006656.0,21716,836463,0,24798,836414,0,23230,836432,0,27125,836474,0,25216,836284,0,25038,836233,0,26289,836404,0,28256,836363,0,25985,836205,0,29266,836129,0,28055,836287,0,30032,836298,0,26843,836313,0,27012,836267,0,26997,836316,0,28557,836365,0,268905856.0,4302532,0,0,398443915,16806616,16806616,3985543210206815,3985600604330289,3985600605690497,3985543212448908
31,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,48,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,68997929,4736,631199636,68411724,0,2524901836,2424704,0,15679358.0,13601792.0,81580.0,215846720.0,0.0,216006656.0,43163,854792,0,47585,854901,0,27869,854908,0,30541,854991,0,22206,854763,0,22863,854784,0,22626,854812,0,26303,854945,0,22417,854920,0,25767,854954,0,26517,855004,0,33818,855107,0,51261,854803,0,51477,854825,0,31778,855055,0,31976,855016,0,275976864.0,4295630,0,0,412896015,17248554,17248554,3985543212930280,3985600605732999,3985600607091044,3985543215332920
32,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,52,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,67197149,4736,613294240,66544690,0,2453280568,2424704,0,11663346.0,13601792.0,81587.0,215846701.0,0.0,216006656.0,20969,859249,0,23524,859463,0,24918,860311,0,25954,860331,0,23476,859629,0,22027,859857,0,26499,860338,0,27266,860314,0,18654,859626,0,25853,859844,0,20446,860440,0,26738,860437,0,23207,859381,0,25180,859546,0,24911,860462,0,28984,860375,0,268775280.0,4300920,0,0,398274964,16798455,16798455,3985543215804928,3985600607131864,3985600608497760,3985543218208690
33,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,56,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,67171285,4736,613904836,66587160,0,2455723328,2424704,0,11892154.0,13601792.0,81578.0,215846719.0,0.0,216006656.0,12798,839045,0,20335,839163,0,14454,838790,0,20917,838861,0,20454,839136,0,19465,839312,0,19062,838879,0,23556,838960,0,16520,839195,0,19451,839379,0,16059,839057,0,19697,839135,0,19065,838998,0,18936,839162,0,18303,838829,0,19442,838870,0,268672192.0,4278913,0,0,398658119,16792012,16792012,3985543218695589,3985600608538700,3985600609887330,3985543221092371
34,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,60,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,67172952,4736,614311126,66643938,0,2457348472,2424704,0,12118854.0,13601792.0,81586.0,215846702.0,0.0,216006656.0,19442,855387,0,25794,855789,0,23413,855563,0,28712,855986,0,27011,855512,0,26145,855991,0,24328,855866,0,28429,856212,0,21206,855579,0,26434,856072,0,23529,856015,0,26264,856446,0,24750,855491,0,23105,855985,0,21991,855584,0,25349,855998,0,268691424.0,4277999,0,0,398847786,16793214,16793214,3985543221579220,3985600609926428,3985600611301137,3985543223973188
35,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,64,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,69080077,4736,631351498,68473673,0,2525509636,2424704,0,13071930.0,13601792.0,81578.0,215846727.0,0.0,216006656.0,77429,840357,0,82251,840381,0,78671,840273,0,81666,840233,0,40570,840384,0,60113,840475,0,61285,840379,0,60435,840380,0,60222,840367,0,63150,840520,0,59967,840524,0,42523,840446,0,79618,840377,0,78776,840353,0,60618,840383,0,60751,840278,0,276306192.0,4280106,0,0,413820263,17269137,17269137,3985543224510492,3985600611340836,3985600612695835,3985543226862678
36,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,68,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,67138845,4736,613122016,66507688,0,2452591740,2424704,0,11939757.0,13601792.0,81596.0,215846690.0,0.0,216006656.0,14787,840436,0,20249,840549,0,16638,840578,0,18910,840709,0,19522,840400,0,19123,840518,0,19137,840364,0,23751,840581,0,14138,840571,0,21138,840596,0,17030,840465,0,19212,840631,0,17309,840616,0,16427,840657,0,19010,840744,0,21089,840954,0,268541344.0,4297704,0,0,397920686,16783834,16783834,3985543227453381,3985600612735093,3985600614089252,3985543229799017
37,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,72,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,68938653,4736,629695955,68333907,0,2518887060,2424704,0,15242159.0,13601792.0,81588.0,215846699.0,0.0,216006656.0,142561,847152,0,148598,847019,0,147300,847548,0,149893,847490,0,89143,846814,0,108527,846813,0,109583,847379,0,126035,847284,0,180415,846931,0,191737,846865,0,182222,847391,0,188136,847360,0,185313,847119,0,183831,847030,0,183526,847445,0,191336,847371,0,275740896.0,4406377,0,0,408921972,17233806,17233806,3985543230368779,3985600614129551,3985600615488357,3985543232695357
38,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,76,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,67171255,4736,613757880,66578324,0,2455134988,2424704,0,11698797.0,13601792.0,81579.0,215846709.0,0.0,216006656.0,27937,825438,0,33491,825333,0,31301,825284,0,34207,825281,0,34736,825545,0,32535,825411,0,31949,825518,0,34986,825469,0,21362,825593,0,25200,825524,0,22061,825501,0,25048,825520,0,19796,825449,0,19741,825317,0,24311,825322,0,25611,825332,0,268675744.0,4281557,0,0,398575395,16792234,16792234,3985543233199582,3985600615527775,3985600616876525,3985543235588532
39,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,80,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,70381913,4736,615160140,66748909,0,2460743964,2424704,0,12286458.0,13601792.0,81583.0,215846708.0,0.0,216006656.0,25950,871339,0,29108,871506,0,26111,872003,0,29904,872124,0,26201,871485,0,26544,871608,0,27333,872101,0,30567,872161,0,23521,871541,0,26402,871648,0,23922,872223,0,27850,872299,0,28597,871532,0,27324,871610,0,24801,872107,0,26926,872222,0,281514784.0,5050246,0,0,399690455,17594674,17594674,3985543236073329,3985600616915903,3985600618280878,3985543238603488
40,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,84,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,70240029,4736,615885429,66821922,0,2463645072,2424704,0,12104244.0,13601792.0,81579.0,215846709.0,0.0,216006656.0,22905,850399,0,25492,850382,0,26113,850346,0,28466,850281,0,25129,850458,0,22881,850550,0,25329,850191,0,26745,850244,0,23371,850317,0,27800,850390,0,24232,850129,0,28388,850204,0,25598,850273,0,25641,850243,0,26006,850260,0,25841,850195,0,280946912.0,5009090,0,0,399638894,17559182,17559182,3985543239089856,3985600618320657,3985600619669207,3985543241603581
41,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,88,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,68046125,4736,617155320,66932286,0,2468724804,2424704,0,12434153.0,13601792.0,81580.0,215846714.0,0.0,216006656.0,29205,890350,0,32266,890168,0,29605,890597,0,34716,890702,0,28490,890621,0,29199,890548,0,31286,890932,0,32500,891085,0,28280,890675,0,32474,890538,0,27846,891025,0,32904,891161,0,25009,890409,0,25259,890299,0,25652,890662,0,25782,890851,0,272171008.0,4426553,0,0,401094767,17010688,17010688,3985543242120334,3985600619707784,3985600621057255,3985543244647158
42,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,92,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,67425749,4736,615957743,66809689,0,2463934696,2424704,0,11540685.0,13601792.0,81585.0,215846708.0,0.0,216006656.0,25712,836864,0,30137,836737,0,28290,837273,0,30711,837155,0,26229,836898,0,26843,836735,0,28143,836957,0,29382,836848,0,20564,836841,0,27077,836694,0,20681,837028,0,27363,836853,0,24733,836857,0,23833,836650,0,24309,837320,0,27687,837079,0,269689248.0,4305196,0,0,399694664,16855578,16855578,3985543245479588,3985600621096353,3985600622456120,3985543247932753
43,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,96,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,67195725,4736,614050619,66601099,0,2456306548,2424704,0,11687583.0,13601792.0,81581.0,215846719.0,0.0,216006656.0,18255,852934,0,20649,852942,0,18071,853095,0,18978,853095,0,14366,853081,0,13359,853046,0,16777,853312,0,18915,853240,0,16045,853031,0,18776,853109,0,16900,853135,0,19455,853172,0,21759,852978,0,19439,852941,0,20930,853130,0,20751,853086,0,268768560.0,4300555,0,0,398406678,16798035,16798035,3985543248456027,3985600622495338,3985600623831109,3985543250816154
44,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,100,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,67414973,4736,616021504,66813268,0,2464189396,2424704,0,12376040.0,13601792.0,81587.0,215846704.0,0.0,216006656.0,26821,866029,0,30948,866155,0,32075,865963,0,33235,866043,0,25959,865866,0,24796,865889,0,25782,865875,0,28375,866032,0,19130,866025,0,24139,866039,0,21294,865889,0,25563,866049,0,24366,866211,0,24155,866273,0,26890,866027,0,29257,866108,0,269646384.0,4306086,0,0,399698167,16852899,16852899,3985543251344995,3985600623870527,3985600625234781,3985543253929975
45,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,104,41874,41874,303104,256,64000,0,128,352,112,64,0x0,0x7e4374417980,68875957,4736,629648753,68250547,0,2518699036,2424704,0,13123528.0,13601792.0,81580.0,215846713.0,0.0,216006656.0,158515,841391,0,161678,841528,0,124319,841352,0,127174,841488,0,121672,841512,0,140379,841559,0,123882,841720,0,145386,841851,0,160930,841442,0,164486,841542,0,143608,841661,0,145687,841820,0,160569,841364,0,161250,841416,0,108002,841349,0,110530,841436,0,275489520.0,4280681,0,0,412262423,17218095,17218095,3985543254488470,3985600625275481,3985600626629559,3985543256834057
46,"void at::native::vectorized_elementwise_kernel<8, at::native::FillFunctor<c10::BFloat16>, std::array<char*, 1ul> >(int, at::native::FillFunctor<c10::BFloat16>, std::array<char*, 1ul>) [clone .kd]",2,0,107,41874,41874,8388608,256,0,0,12,4,16,64,0x0,0x7e438a92ed00,3099745,131072,173097420,2570175,0,695288640,0,262144,0.0,393216.0,19419.0,5819808.0,0.0,6291456.0,1651,0,0,0,0,0,798,0,0,863,0,0,682,0,0,0,0,0,0,0,0,0,0,0,1639,0,0,0,0,0,840,0,0,892,0,0,677,0,0,0,0,0,0,0,0,0,0,0,12385584.0,139425,0,3491036,0,774099,774099,3985543261375548,3985600629947325,3985600629991270,3985543261881986
47,micro_tk(micro_globals) [clone .kd],2,0,108,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,87548149,16384,1586070377,87134606,0,6344639212,8290304,1081344,27421283.0,13631488.0,7168.0,205513728.0,0.0,205520896.0,15339,2197497,0,16456,2197490,0,14161,2197494,0,14769,2197477,0,8235,2197317,0,8310,2197379,0,9675,2197261,0,9877,2197277,0,13560,2197830,0,13858,2197780,0,13176,2197856,0,13078,2197809,0,11653,2197817,0,9454,2197830,0,10889,2197701,0,10535,2197816,0,350177440.0,2917183,0,0,598661521,21886090,21886090,3985543262159736,3985600630293997,3985600631913667,3985543264725888
48,micro_tk(micro_globals) [clone .kd],2,0,110,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,85654979,16384,1535860118,84721234,0,6143799176,8290304,1081344,29893268.0,13631488.0,7230.0,205513666.0,0.0,205520896.0,3599,2222847,0,4176,2222874,0,4076,2222842,0,3140,2222876,0,4599,2222960,0,4188,2222949,0,5852,2223009,0,5028,2222979,0,4485,2223328,0,4588,2223349,0,5154,2223334,0,4072,2223340,0,4783,2222929,0,4251,2222987,0,5850,2222868,0,4448,2222882,0,342607488.0,3065312,0,0,580648723,21412968,21412968,3985543265266287,3985600631947319,3985600633798972,3985543267868953
49,micro_tk(micro_globals) [clone .kd],2,0,112,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,87536937,16384,1578266381,86670124,0,6313423624,8290304,1081344,25856785.0,13631488.0,7242.0,205513654.0,0.0,205520896.0,25356,2108821,0,25755,2108823,0,25239,2108883,0,25182,2108875,0,26025,2108997,0,25905,2108901,0,26915,2109005,0,26750,2108885,0,24918,2109480,0,25787,2109352,0,25236,2109324,0,25089,2109292,0,25423,2109361,0,25052,2109335,0,26565,2109410,0,26121,2109410,0,350134592.0,3105581,0,0,595735053,21883412,21883412,3985543268367039,3985600633829616,3985600635812823,3985543270994933
50,micro_tk(micro_globals) [clone .kd],2,0,114,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,83597904,16384,1506765266,82919041,0,6027420900,8290304,1081344,23711621.0,13631488.0,7140.0,205513756.0,0.0,205520896.0,4192,2058426,0,5008,2058496,0,4337,2058505,0,4975,2058550,0,5192,2058810,0,5181,2058832,0,6028,2058863,0,5822,2058871,0,3743,2058770,0,4544,2058821,0,3893,2058846,0,3990,2058845,0,4081,2058775,0,4461,2058824,0,5206,2058857,0,4663,2058908,0,334383968.0,2949490,0,0,567124844,20898998,20898998,3985543271488422,3985600635840784,3985600637666999,3985543274121032
51,micro_tk(micro_globals) [clone .kd],2,0,116,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,85226845,16384,1535435969,84607835,0,6142102000,8290304,1081344,28086623.0,13631488.0,7276.0,205513620.0,0.0,205520896.0,4602,2292928,0,5039,2292940,0,4981,2292855,0,4479,2292852,0,5422,2292997,0,5075,2292982,0,6172,2292958,0,5390,2292912,0,4316,2293104,0,5157,2293174,0,5006,2293172,0,5324,2293206,0,4383,2293166,0,4782,2293195,0,5213,2293267,0,6096,2293259,0,340893504.0,2963349,0,0,576948322,21305844,21305844,3985543274644866,3985600637695201,3985600639507035,3985543277345306
52,micro_tk(micro_globals) [clone .kd],2,0,118,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,87773205,16384,1577518018,86787866,0,6310430152,8290304,1081344,28421053.0,13631488.0,7252.0,205513644.0,0.0,205520896.0,5731,2185304,0,6360,2185350,0,6197,2185360,0,5750,2185365,0,5115,2185414,0,5279,2185459,0,5803,2185520,0,5844,2185514,0,5144,2185540,0,5609,2185628,0,5610,2185542,0,5305,2185605,0,6335,2185559,0,5527,2185568,0,7627,2185538,0,6658,2185537,0,351079360.0,3121603,0,0,595665534,21942460,21942460,3985543277848229,3985600639532472,3985600641332609,3985543280549832
53,micro_tk(micro_globals) [clone .kd],2,0,120,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,87104853,16384,1569058665,86284255,0,6276592252,8290304,1081344,25544868.0,13631488.0,7148.0,205513748.0,0.0,205520896.0,5568,2099012,0,6101,2099015,0,5517,2098970,0,5848,2099020,0,5695,2099341,0,5250,2099391,0,6541,2099238,0,6286,2099278,0,5127,2099761,0,5965,2099807,0,5491,2099681,0,5183,2099656,0,5422,2099506,0,5000,2099485,0,6578,2099417,0,5866,2099311,0,348404800.0,3086144,0,0,592800531,21775300,21775300,3985543281013146,3985600641360130,3985600643160106,3985543283658805
54,micro_tk(micro_globals) [clone .kd],2,0,122,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,87563261,16384,1577232069,86761752,0,6309288316,8290304,1081344,29066698.0,13631488.0,7178.0,205513718.0,0.0,205520896.0,10095,2137233,0,10465,2137260,0,10275,2137250,0,10231,2137215,0,9650,2136468,0,9414,2136494,0,11226,2136472,0,10255,2136431,0,9211,2135852,0,10233,2135857,0,10458,2135913,0,10078,2135931,0,9882,2136275,0,9316,2136239,0,11479,2136228,0,10508,2136216,0,350240032.0,3097696,0,0,592212628,21890002,21890002,3985543284219073,3985600643187266,3985600644989526,3985543286867858
55,micro_tk(micro_globals) [clone .kd],2,0,124,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,88702418,16384,1599262648,87921975,0,6397410636,8290304,1081344,31875230.0,13631488.0,7210.0,205513686.0,0.0,205520896.0,7326,2161285,0,8739,2161208,0,8372,2161327,0,8499,2161241,0,53593,2161409,0,53576,2161360,0,54969,2161384,0,54385,2161398,0,52049,2160966,0,54423,2161019,0,53059,2161072,0,53463,2161145,0,29879,2160692,0,30803,2160697,0,31238,2160737,0,32148,2160698,0,354799136.0,3126829,0,0,597878941,22174946,22174946,3985543287420074,3985600645014883,3985600646807289,3985543290041868
56,micro_tk(micro_globals) [clone .kd],2,0,126,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,84578232,16384,1524856229,83980775,0,6099783960,8290304,1081344,27974841.0,13631488.0,7204.0,205513692.0,0.0,205520896.0,5828,2186926,0,7070,2186857,0,6625,2186793,0,5843,2186766,0,5619,2185945,0,5457,2185936,0,6695,2185944,0,6409,2185990,0,4885,2186123,0,5133,2186105,0,4987,2186227,0,4872,2186059,0,5637,2187043,0,5378,2187154,0,6597,2187117,0,6655,2187213,0,338305648.0,2950799,0,0,571934633,21144103,21144103,3985543290533164,3985600646832566,3985600648614836,3985543293174347
57,micro_tk(micro_globals) [clone .kd],2,0,128,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,85314177,16384,1537235505,84582322,0,6149300632,8290304,1081344,25840652.0,13631488.0,7192.0,205513704.0,0.0,205520896.0,4260,2174610,0,5613,2174579,0,4875,2174657,0,5386,2174606,0,5251,2174138,0,5050,2174050,0,6877,2174183,0,6504,2174117,0,5106,2173742,0,6421,2173768,0,4981,2173742,0,6225,2173741,0,5533,2173936,0,5604,2173941,0,6603,2174039,0,6889,2174006,0,341243440.0,2955987,0,0,582728656,21327715,21327715,3985543293672123,3985600648639873,3985600650403756,3985543296348227
58,micro_tk(micro_globals) [clone .kd],2,0,130,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,85201525,16384,1545517044,84526878,0,6182427900,8290304,1081344,24795806.0,13631488.0,7156.0,205513740.0,0.0,205520896.0,74816,2079108,0,75400,2079098,0,75090,2079257,0,75451,2079247,0,73575,2079113,0,72958,2079174,0,74390,2079166,0,73748,2079276,0,72549,2079548,0,73314,2079568,0,73034,2079501,0,72603,2079456,0,74036,2079861,0,73244,2079849,0,75473,2080152,0,74603,2080038,0,340792256.0,2898676,0,0,576609320,21299516,21299516,3985543296836478,3985600650426710,3985600652185786,3985543299479734
59,micro_tk(micro_globals) [clone .kd],2,0,132,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,87079341,16384,1573814680,86387524,0,6295617052,8290304,1081344,26814776.0,13631488.0,7186.0,205513710.0,0.0,205520896.0,7078,2084146,0,5920,2084135,0,7650,2084021,0,5796,2084093,0,6352,2083178,0,5867,2083149,0,7172,2083310,0,6633,2083274,0,8904,2083163,0,8873,2083209,0,9083,2083252,0,8212,2083186,0,7282,2083629,0,6795,2083641,0,8208,2083674,0,7638,2083546,0,348303584.0,3101510,0,0,581888798,21768974,21768974,3985543300386945,3985600652206217,3985600653950270,3985543303016020
60,micro_tk(micro_globals) [clone .kd],2,0,134,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,87026597,16384,1573084546,86347911,0,6292696756,8290304,1081344,28623790.0,13631488.0,7204.0,205513692.0,0.0,205520896.0,72724,2251114,0,73086,2251086,0,72882,2251058,0,72718,2250989,0,73074,2251188,0,72599,2251220,0,73949,2251262,0,73090,2251306,0,72694,2250941,0,73201,2250951,0,72696,2251016,0,72270,2251074,0,72759,2251243,0,72525,2251239,0,73680,2251201,0,73336,2251191,0,348093728.0,2994546,0,0,590250330,21755858,21755858,3985543303705409,3985600653971462,3985600655721084,3985543306378639
61,micro_tk(micro_globals) [clone .kd],2,0,136,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,87972477,16384,1580576234,86998272,0,6322664424,8290304,1081344,27219398.0,13631488.0,7154.0,205513742.0,0.0,205520896.0,8549,1985915,0,10374,1985861,0,8945,1985838,0,10029,1985862,0,8708,1986122,0,9341,1986153,0,10043,1986228,0,10234,1986228,0,8637,1985986,0,10167,1986056,0,9895,1986073,0,10069,1986119,0,9167,1986810,0,9653,1986845,0,10721,1986654,0,10986,1986702,0,351875504.0,3246075,0,0,590300116,21992219,21992219,3985543307118542,3985600655741955,3985600657509203,3985543309801166
62,micro_tk(micro_globals) [clone .kd],2,0,138,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,87554463,16384,1587644610,86839283,0,6350937536,8290304,1081344,28953190.0,13631488.0,7132.0,205513764.0,0.0,205520896.0,51226,2096273,0,52453,2096244,0,51811,2096402,0,52154,2096310,0,74065,2097003,0,74592,2096965,0,75526,2097221,0,75589,2097231,0,97176,2097102,0,98059,2097117,0,97292,2097022,0,97047,2097000,0,52057,2096795,0,51394,2096824,0,53215,2096916,0,52481,2096978,0,350207328.0,2857199,0,0,597408489,21887958,21887958,3985543310632405,3985600657530314,3985600659265635,3985543313242752
63,micro_tk(micro_globals) [clone .kd],2,0,140,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,86595429,16384,1561511668,85923742,0,6246405028,8290304,1081344,28391090.0,13631488.0,7144.0,205513752.0,0.0,205520896.0,4720,2096949,0,5979,2097028,0,5449,2096976,0,5985,2096885,0,4751,2096870,0,5082,2096794,0,5850,2096893,0,5770,2096921,0,6305,2097642,0,7388,2097661,0,6165,2097738,0,6489,2097656,0,5626,2097972,0,5505,2097951,0,6291,2097761,0,5945,2097798,0,346366768.0,3056535,0,0,579814105,21647923,21647923,3985543313971629,3985600659285504,3985600661041015,3985543316604800
64,micro_tk(micro_globals) [clone .kd],2,0,142,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,86654738,16384,1571210243,86138585,0,6285200072,8290304,1081344,25723777.0,13631488.0,7204.0,205513692.0,0.0,205520896.0,6865,2059781,0,8411,2059766,0,6838,2059812,0,7860,2059826,0,7279,2060298,0,6922,2060312,0,8887,2060288,0,8313,2060409,0,6901,2061574,0,9689,2061493,0,7042,2061480,0,8920,2061429,0,8311,2060813,0,8150,2060853,0,9119,2060817,0,9526,2060811,0,346613856.0,2962046,0,0,590167242,21663366,21663366,3985543317488025,3985600661061525,3985600662805619,3985543320106995
65,micro_tk(micro_globals) [clone .kd],2,0,144,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,86818717,16384,1567684771,85972828,0,6271096564,8290304,1081344,28424410.0,13631488.0,7200.0,205513696.0,0.0,205520896.0,5074,2193553,0,5827,2193568,0,5291,2193441,0,5516,2193433,0,4890,2193186,0,4886,2193185,0,5492,2193370,0,5344,2193315,0,4994,2193430,0,6031,2193404,0,5334,2193345,0,5505,2193357,0,6048,2192848,0,5827,2192910,0,6568,2192715,0,7023,2192750,0,347260416.0,3006808,0,0,580061311,21703776,21703776,3985543320798287,3985600662825689,3985600664592897,3985543323476034
66,micro_tk(micro_globals) [clone .kd],2,0,146,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,85922605,16384,1550383567,85252822,0,6201893252,8290304,1081344,24984969.0,13631488.0,7260.0,205513636.0,0.0,205520896.0,24616,2095101,0,25193,2095115,0,25216,2094861,0,25110,2094911,0,24547,2095515,0,24550,2095524,0,25770,2095486,0,24899,2095531,0,23743,2095656,0,24390,2095764,0,23884,2095667,0,24005,2095838,0,24775,2094694,0,24447,2094668,0,25366,2094441,0,24906,2094462,0,343674976.0,3010929,0,0,583416015,21479686,21479686,3985543323937686,3985600664613648,3985600666335229,3985543326604577
67,micro_tk(micro_globals) [clone .kd],2,0,149,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,86809756,16384,1566489576,86301916,0,6266317284,8290304,1081344,25710708.0,13631488.0,7148.0,205513748.0,0.0,205520896.0,98129,2051776,0,100627,2051805,0,97942,2051775,0,99361,2051830,0,97250,2050697,0,97829,2050766,0,99061,2050804,0,99515,2050884,0,98045,2051454,0,100044,2051557,0,99376,2051440,0,100250,2051404,0,96561,2050760,0,96311,2050834,0,97633,2050971,0,97467,2050924,0,347230992.0,3152118,0,0,583787857,21701937,21701937,3985543327098647,3985600666379654,3985600668110088,3985543329709946
68,micro_tk(micro_globals) [clone .kd],2,0,154,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,87536313,16384,1578375185,86746716,0,6313859632,8290304,1081344,27473802.0,13631488.0,7184.0,205513712.0,0.0,205520896.0,8104,2114446,0,9587,2114535,0,8585,2114617,0,9020,2114693,0,8137,2113835,0,7722,2113797,0,9589,2113804,0,9124,2113811,0,7816,2114974,0,8682,2114945,0,7888,2114851,0,7808,2114838,0,7056,2115099,0,6529,2115017,0,8015,2115080,0,7171,2115111,0,350131168.0,3135032,0,0,593319950,21883198,21883198,3985543330247420,3985600668162485,3985600669889153,3985543332874602
69,micro_tk(micro_globals) [clone .kd],2,0,159,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,88691543,16384,1597026090,87820378,0,6388462860,8290304,1081344,28874709.0,13631488.0,7224.0,205513672.0,0.0,205520896.0,64466,2213824,0,65269,2213787,0,87538,2213877,0,87813,2213907,0,74008,2213196,0,51479,2213182,0,75000,2213321,0,52004,2213245,0,51982,2213572,0,53312,2213491,0,52570,2213549,0,52958,2213527,0,29505,2213924,0,29708,2214000,0,31586,2214158,0,31387,2214202,0,354763712.0,3081873,0,0,594884934,22172732,22172732,3985543333586334,3985600669940670,3985600671700427,3985543336207407
70,micro_tk(micro_globals) [clone .kd],2,0,164,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,84639065,16384,1522636619,83841059,0,6090905828,8290304,1081344,26581064.0,13631488.0,7228.0,205513668.0,0.0,205520896.0,5001,2139445,0,5985,2139456,0,5905,2139470,0,5428,2139481,0,5169,2138885,0,5384,2138895,0,6690,2138831,0,6432,2138894,0,4602,2140664,0,4858,2140644,0,5398,2140744,0,4172,2140606,0,5618,2140773,0,4445,2140803,0,6413,2140586,0,5447,2140696,0,338542320.0,3010078,0,0,568402803,21158895,21158895,3985543336724111,3985600671747416,3985600673466753,3985543339356380
71,micro_tk(micro_globals) [clone .kd],2,0,169,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,85616757,16384,1545582373,84962451,0,6182688632,8290304,1081344,27200088.0,13631488.0,7184.0,205513712.0,0.0,205520896.0,6724,2174108,0,7171,2174117,0,7307,2174140,0,7144,2174082,0,5213,2174899,0,4900,2174891,0,6455,2174908,0,6433,2174949,0,6689,2174304,0,7603,2174316,0,7526,2174343,0,7306,2174357,0,5057,2174117,0,4751,2174040,0,5606,2174232,0,5838,2174211,0,342453568.0,2990870,0,0,579309394,21403348,21403348,3985543339857911,3985600673514784,3985600675236565,3985543342488288
72,micro_tk(micro_globals) [clone .kd],2,0,174,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,87722385,16384,1579229340,86774603,0,6317275612,8290304,1081344,28704731.0,13631488.0,7164.0,205513732.0,0.0,205520896.0,5625,2186307,0,5756,2186364,0,6148,2186365,0,5363,2186400,0,5853,2186834,0,5778,2186846,0,6602,2186711,0,6316,2186701,0,4317,2187026,0,4395,2187081,0,4711,2187013,0,3897,2187005,0,4689,2186393,0,4385,2186369,0,5683,2186531,0,5548,2186641,0,350875488.0,3131222,0,0,594053928,21929718,21929718,3985543343039894,3985600675284516,3985600676999968,3985543345713214
73,micro_tk(micro_globals) [clone .kd],2,0,179,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,87479613,16384,1574453925,86664108,0,6298174748,8290304,1081344,27019842.0,13631488.0,7178.0,205513718.0,0.0,205520896.0,6829,2034910,0,8560,2034927,0,7422,2034903,0,8598,2034873,0,6884,2034115,0,6482,2034047,0,8209,2033917,0,7755,2033988,0,8210,2035111,0,9030,2034960,0,9124,2035176,0,9615,2035141,0,8937,2035565,0,7866,2035600,0,10306,2035628,0,8781,2035503,0,349912640.0,3207867,0,0,586587515,21869540,21869540,3985543346500868,3985600677048560,3985600678769620,3985543349121059
74,micro_tk(micro_globals) [clone .kd],2,0,184,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,85982784,16384,1552099736,85248323,0,6208758416,8290304,1081344,26985538.0,13631488.0,7158.0,205513738.0,0.0,205520896.0,5824,2010456,0,5822,2010540,0,4977,2010406,0,5037,2010439,0,5891,2010088,0,5206,2009947,0,6552,2009893,0,5771,2009772,0,5544,2011000,0,6809,2010912,0,6457,2011014,0,6136,2011022,0,5862,2011231,0,5638,2011209,0,6225,2011432,0,6341,2011326,0,343922736.0,3028131,0,0,582126294,21495171,21495171,3985543349696890,3985600678822457,3985600680563627,3985543352328169
75,micro_tk(micro_globals) [clone .kd],2,0,189,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,84498901,16384,1524619715,84098433,0,6098837972,8290304,1081344,27131002.0,13631488.0,7154.0,205513742.0,0.0,205520896.0,4537,2138025,0,5027,2138080,0,5143,2137871,0,4853,2137909,0,5158,2137285,0,5072,2137232,0,6373,2137264,0,6460,2137354,0,4215,2137241,0,4692,2137298,0,5100,2137308,0,4440,2137256,0,4782,2137837,0,4434,2137882,0,5719,2137756,0,5036,2137768,0,337982176.0,2872563,0,0,579301193,21123886,21123886,3985543352836610,3985600680612339,3985600682326950,3985543355462020
76,micro_tk(micro_globals) [clone .kd],2,0,194,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,86355765,16384,1554975733,85626342,0,6220262552,8290304,1081344,28450486.0,13631488.0,7218.0,205513678.0,0.0,205520896.0,6517,2164666,0,9117,2164653,0,7381,2164727,0,8635,2164776,0,7836,2164467,0,8009,2164480,0,9209,2164491,0,9298,2164491,0,8321,2165301,0,9724,2165303,0,8772,2165189,0,8925,2165194,0,7913,2165124,0,7877,2165180,0,10086,2165186,0,9190,2165206,0,345410256.0,3006049,0,0,586707132,21588141,21588141,3985543355968569,3985600682374540,3985600684084463,3985543358603412
77,micro_tk(micro_globals) [clone .kd],2,0,199,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,86957757,16384,1567469299,86102086,0,6270236864,8290304,1081344,27757786.0,13631488.0,7176.0,205513720.0,0.0,205520896.0,72342,2174632,0,73246,2174563,0,72170,2174573,0,73341,2174547,0,72900,2173752,0,73021,2173713,0,74129,2173658,0,73664,2173633,0,73101,2174380,0,74154,2174375,0,74591,2174415,0,74301,2174408,0,94589,2174703,0,94814,2174732,0,96017,2174871,0,96641,2174866,0,347817504.0,3156213,0,0,580902582,21738594,21738594,3985543359101548,3985600684133335,3985600685870018,3985543361764313
78,micro_tk(micro_globals) [clone .kd],2,0,204,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,87242749,16384,1571224856,86586517,0,6285257936,8290304,1081344,27771838.0,13631488.0,7206.0,205513690.0,0.0,205520896.0,6032,1975199,0,6446,1975189,0,6037,1975183,0,5843,1975157,0,6675,1974015,0,5975,1974045,0,7453,1974031,0,6782,1974102,0,6094,1974888,0,6966,1974969,0,5707,1975174,0,5359,1975197,0,6386,1975851,0,5804,1975831,0,7712,1975818,0,6723,1975878,0,348957072.0,3151935,0,0,589613475,21809817,21809817,3985543362272864,3985600685916167,3985600687649324,3985543364927026
79,micro_tk(micro_globals) [clone .kd],2,0,209,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,88458933,16384,1596001732,87822543,0,6384365348,8290304,1081344,30538786.0,13631488.0,7170.0,205513726.0,0.0,205520896.0,27517,2089201,0,27691,2089266,0,27689,2089196,0,27594,2089219,0,48614,2089530,0,27823,2089544,0,49950,2089587,0,49019,2089598,0,143718,2090011,0,252655,2090059,0,144436,2089989,0,217121,2090068,0,144262,2089514,0,216036,2089591,0,145433,2089472,0,251734,2089517,0,353822336.0,3084173,0,0,600535071,22113896,22113896,3985543365459523,3985600687695352,3985600689413288,3985543368009431
80,micro_tk(micro_globals) [clone .kd],2,0,214,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,86254885,16384,1555832868,85632826,0,6223688808,8290304,1081344,30050521.0,13631488.0,7176.0,205513720.0,0.0,205520896.0,5717,2243560,0,6589,2243602,0,5433,2243517,0,5109,2243533,0,4797,2243973,0,4578,2243927,0,6053,2243917,0,5743,2243933,0,5164,2244242,0,5899,2244236,0,5832,2244351,0,5503,2244345,0,5916,2244388,0,6023,2244399,0,7273,2244434,0,7037,2244433,0,345004992.0,3071403,0,0,578783310,21562812,21562812,3985543368523411,3985600689459556,3985600691168118,3985543371069934
81,micro_tk(micro_globals) [clone .kd],2,0,219,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,87263888,16384,1579236479,86642343,0,6317306140,8290304,1081344,29566535.0,13631488.0,7176.0,205513720.0,0.0,205520896.0,66184,2137809,0,66959,2137942,0,66933,2137982,0,66477,2138018,0,86704,2138412,0,86306,2138499,0,87603,2138403,0,87159,2138404,0,67215,2139718,0,66742,2139630,0,87346,2139658,0,86800,2139600,0,88883,2138472,0,86767,2138466,0,89311,2138438,0,88166,2138421,0,349055168.0,3012179,0,0,590061669,21815948,21815948,3985543371661828,3985600691213705,3985600692941334,3985543374264524
82,micro_tk(micro_globals) [clone .kd],2,0,224,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,83842085,16384,1517457481,83246831,0,6070188908,8290304,1081344,25310020.0,13631488.0,7174.0,205513722.0,0.0,205520896.0,3780,2096130,0,4545,2096236,0,3788,2096108,0,4188,2096145,0,4642,2096269,0,4351,2096336,0,5366,2096349,0,5121,2096337,0,4011,2097001,0,4708,2097065,0,4246,2096916,0,4060,2096942,0,4034,2097046,0,3518,2097014,0,5060,2097046,0,3959,2097096,0,335355680.0,2878844,0,0,562454144,20959730,20959730,3985543374857070,3985600692987042,3985600694716835,3985543377458454
83,micro_tk(micro_globals) [clone .kd],2,0,229,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,85529437,16384,1549405215,85100549,0,6197980172,8290304,1081344,28129850.0,13631488.0,7188.0,205513708.0,0.0,205520896.0,156584,2053427,0,156541,2053384,0,156287,2053197,0,155713,2053193,0,131276,2053466,0,130366,2053409,0,131744,2053398,0,131065,2053361,0,134655,2054001,0,134808,2053946,0,134905,2053972,0,135029,2053928,0,153836,2054528,0,152985,2054577,0,155380,2054576,0,153989,2054582,0,342103552.0,2979869,0,0,577298171,21381472,21381472,3985543377982088,3985600694760849,3985600696489400,3985543380595479
84,micro_tk(micro_globals) [clone .kd],2,0,234,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,86444233,16384,1565387470,85897362,0,6261908060,8290304,1081344,29059456.0,13631488.0,7200.0,205513696.0,0.0,205520896.0,6273,2086091,0,6961,2086084,0,6929,2086214,0,6698,2086144,0,7482,2084757,0,6989,2084711,0,8822,2084885,0,8037,2084843,0,4433,2086450,0,5657,2086437,0,4538,2086565,0,5084,2086660,0,5408,2086793,0,5233,2086767,0,5893,2086796,0,6594,2086809,0,345764016.0,3017096,0,0,584664834,21610251,21610251,3985543381206112,3985600696539754,3985600698236017,3985543383840645
85,micro_tk(micro_globals) [clone .kd],2,0,239,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,87490189,16384,1578702796,86706665,0,6315169640,8290304,1081344,29059361.0,13631488.0,7132.0,205513764.0,0.0,205520896.0,8983,2135389,0,9878,2135436,0,8955,2135433,0,8891,2135457,0,8917,2135188,0,7743,2135210,0,9410,2135217,0,8681,2135253,0,9420,2135481,0,9935,2135571,0,10336,2135463,0,9417,2135583,0,9309,2136633,0,8489,2136556,0,10079,2136555,0,9286,2136361,0,349945296.0,3107656,0,0,593373904,21871581,21871581,3985543384363488,3985600698296627,3985600700027061,3985543386992733
86,micro_tk(micro_globals) [clone .kd],2,0,244,41874,41874,1048576,512,49152,0,80,128,32,64,0x0,0x7e7b91918840,88004789,16384,1586678412,87174483,0,6347073560,8290304,1081344,26596817.0,13631488.0,7128.0,205513768.0,0.0,205520896.0,46809,2111395,0,46594,2111380,0,46663,2111385,0,46179,2111309,0,46949,2110157,0,45565,2110083,0,48039,2110059,0,46488,2110071,0,47224,2110354,0,48107,2110346,0,47709,2110398,0,47541,2110346,0,47584,2110869,0,46714,2110749,0,49021,2110982,0,47971,2110826,0,352005248.0,3069455,0,0,599458787,22000328,22000328,3985543387553642,3985600700084585,3985600701806887,3985543390098062
87,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,248,41874,41874,67108864,512,0,0,12,4,32,64,0x0,0x7e437586ed00,9741497,1048576,592246829,9271075,0,2393927120,5242880,2097152,468410.0,2097152.0,58321.0,7091192.0,0.0,8388608.0,1451,65536,0,1533,65536,0,1490,65536,0,1544,65536,0,653,65536,0,1297,65536,0,1443,65536,0,1437,65536,0,1548,65536,0,1563,65536,0,1560,65536,0,1478,65536,0,630,65536,0,1368,65536,0,1428,65536,0,1515,65536,0,38952848.0,110400,0,9710828,0,2434553,2434553,3985543391143126,3985600701976097,3985600702158366,3985543391788920
88,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,249,41874,41874,67108864,512,0,0,12,4,32,64,0x0,0x7e437586ed00,12581938,1048576,662888066,10357117,0,2676550472,5242880,2097152,398412.0,2097152.0,58499.0,7116450.0,0.0,8388608.0,1865,65536,0,1980,65536,0,1993,65536,0,1803,65536,0,756,65536,0,1612,65536,0,1667,65536,0,1711,65536,0,1811,65536,0,1881,65536,0,1913,65536,0,1803,65536,0,814,65536,0,1636,65536,0,1704,65536,0,1755,65536,0,50316592.0,418162,0,11414877,0,3144787,3144787,3985543391641122,3985600702158366,3985600702345082,3985543392769900
89,"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul> >(int, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul>) [clone .kd]",2,0,250,41874,41874,16777216,256,0,0,16,0,32,64,0x0,0x7e430b260e40,13030337,262144,812241627,12077949,0,3254774676,0,0,244701.0,786432.0,111393.0,9645286.0,0.0,12582912.0,1114770,262144,0,893433,262144,0,790067,262144,0,839511,262144,0,572156,262144,0,538240,262144,0,487602,262144,0,435512,262144,0,1096947,262144,0,954929,262144,0,768324,262144,0,780513,262144,0,573177,262144,0,568730,262144,0,486741,262144,0,399237,262144,0,52108704.0,186006,0,19392085,0,3256794,3256794,3985543398829093,3985600708189447,3985600708376924,3985543399481878
90,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,251,41874,41874,16777216,256,0,0,12,4,32,64,0x0,0x7e738bc557c0,7309533,262144,471981947,6867689,0,1893771580,0,0,8146395.0,524288.0,53092.0,6253548.0,0.0,8388608.0,403479,131072,0,357820,131072,0,476196,131072,0,789117,131072,0,374872,131072,0,328279,131072,0,390672,131072,0,391978,131072,0,342475,131072,0,340269,131072,0,446202,131072,0,743417,131072,0,388743,131072,0,322584,131072,0,413961,131072,0,400496,131072,0,29226272.0,123551,0,10365193,0,1826642,1826642,3985543401221408,3985600709859793,3985600709970075,3985543401769839
91,__amd_rocclr_fillBufferAligned.kd,2,0,252,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,1248994,4,2928,4281,0,11792,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,194,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,1,0,193,0,0,184,0,0,231,0,0,203,0,0,0,0,0,204,0,0,0,0,0,165,0,0,4984944.0,273903,0,0,0,311559,311559,3985543401766494,3985600709970075,3985600709974121,3985543402745070
92,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,253,41874,41874,155648,512,2560,48,28,4,80,64,0x0,0x7e4374218380,17411885,2432,151684251,8077627,0,606792600,642500,267319,341915.0,267654.0,33073.0,3192503.0,304.0,4194996.0,1987,131074,0,2169,131072,0,2297,131074,0,2410,131074,0,1768,131074,0,1966,131074,0,1169,131072,0,2011,131072,0,1974,131072,0,2177,131072,0,2230,131072,0,2402,131072,0,1999,131072,0,2191,131072,0,1373,131072,0,2211,131072,0,69634384.0,2084699,0,0,0,4352149,4352149,3985543405007473,3985600712179056,3985600712307365,3985543405703822
93,__amd_rocclr_copyBuffer.kd,2,0,254,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,3927505,8,4293,6333,0,17364,8,40,0.0,8.0,1.0,7.0,0.0,8.0,180,0,0,208,0,0,0,0,0,0,0,0,186,0,0,171,0,0,195,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15697008.0,943169,0,0,0,981063,981063,3985543405548393,3985600712307365,3985600712311491,3985543406812781
94,__amd_rocclr_fillBufferAligned.kd,2,0,256,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,416449,4,3072,4341,0,12348,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,194,0,0,182,0,0,0,0,0,0,0,0,0,0,0,0,0,0,194,0,0,184,0,0,231,0,0,203,1,0,169,0,0,204,0,0,0,0,0,230,0,0,1652256.0,65153,0,0,0,103266,103266,3985543407197500,3985600712389486,3985600712391609,3985543408138340
95,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4>) [clone .kd]",2,0,257,41874,41874,155648,512,2560,48,28,4,80,64,0x0,0x7e4376517880,6164165,2432,107860423,5756517,0,431497164,642500,267319,634352.0,267654.0,33073.0,3021591.0,304.0,4194996.0,1077,131072,0,1813,131072,0,2029,131072,0,1855,131072,0,2095,131072,0,1684,131072,0,1949,131072,0,2079,131072,0,1041,131074,0,1843,131072,0,2053,131074,0,1871,131074,0,2167,131074,0,1746,131074,0,1974,131072,0,2110,131072,0,24643632.0,1509058,0,0,0,1540227,1540227,3985543410398259,3985600714392683,3985600714486261,3985543410918638
96,__amd_rocclr_copyBuffer.kd,2,0,258,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,2620521,8,3980,6369,0,16012,8,40,0.0,8.0,1.0,7.0,0.0,8.0,181,0,0,195,0,0,0,0,0,0,0,0,173,0,0,0,0,0,182,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10468256.0,616201,0,0,0,654266,654266,3985543410826502,3985600714486261,3985600714490146,3985543411986706
97,"void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul> >(int, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul>) [clone .kd]",2,0,260,41874,41874,4194304,256,0,0,24,0,64,64,0x0,0x7e42fa4314c0,4033161,65536,223600960,3598853,0,895847136,393216,65536,6158724.0,524288.0,24880.0,4893786.0,0.0,5242880.0,86241,131072,0,228254,131072,0,108477,131072,0,211531,131072,0,142682,131072,0,346887,131072,0,176642,131072,0,392672,131072,0,87729,131072,0,190982,131072,0,97055,131072,0,181424,131072,0,148118,131072,0,348814,131072,0,185627,131072,0,371105,131072,0,16119600.0,152566,0,4275957,0,1007475,1007475,3985543416483802,3985600718231689,3985600718290015,3985543416984802
98,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,261,41874,41874,67108864,512,0,0,12,4,32,64,0x0,0x7e437586e700,13881997,1048576,778807465,11788955,0,3139062928,5242880,2097152,107300.0,2097152.0,76086.0,18871724.0,0.0,20971520.0,17851,32768,0,19141,32768,0,15007,32768,0,17066,32768,0,13638,32768,0,13081,32768,0,13910,32768,0,13868,32768,0,16625,32768,0,17349,32768,0,15181,32768,0,17061,32768,0,11905,32768,0,10729,32768,0,14397,32768,0,13824,32768,0,55514144.0,344079,0,15802154,0,3469634,3469634,3985543417001747,3985600718327190,3985600718505172,3985543418012701
99,__amd_rocclr_fillBufferAligned.kd,2,0,262,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,4963221,4,2942,4257,0,11876,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,195,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,195,0,0,188,0,0,234,0,0,206,0,0,0,0,0,208,1,0,0,0,0,165,0,0,19839856.0,1202118,0,0,0,1239991,1239991,3985543417432574,3985600718505172,3985600718509258,3985543419005849
100,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4> >(at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4>) [clone .kd]",2,0,263,41874,41874,155648,512,4608,80,36,4,80,64,0x0,0x7e42d9e2e7c0,22317701,2432,245476315,12981443,0,981961940,642500,1354611,1652748.0,529798.0,33073.0,7096390.0,304.0,8389357.0,515102,262146,0,627119,262146,0,964720,262146,0,998063,262146,0,403434,262146,0,404585,262146,0,974832,262144,0,642480,262144,0,514954,262146,0,594772,262145,0,911392,262146,0,1020488,262146,0,407209,262144,0,395142,262144,0,1066789,262144,0,579590,262144,0,89257248.0,3310369,0,0,0,5578578,5578578,3985543422126560,3985600722178233,3985600722381573,3985543422897579
101,__amd_rocclr_copyBuffer.kd,2,0,264,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,4115965,8,5407,9677,0,21820,8,40,0.0,16.0,1.0,15.0,0.0,16.0,182,0,0,208,0,0,0,0,0,0,0,0,186,0,0,170,0,0,195,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16450464.0,990179,0,0,0,1028154,1028154,3985543422625287,3985600722381573,3985600722387142,3985543424392338
102,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,266,41874,41874,256,128,0,0,20,4,64,64,0x0,0x7e437586ecc0,404605,4,6727,13539,0,27020,144,96,1402.0,32.0,4.0,83.0,0.0,128.0,444,2,0,379,2,0,399,2,0,443,2,0,389,2,0,211,2,0,402,2,0,401,2,0,439,2,0,375,2,0,397,2,0,425,2,0,384,2,0,173,2,0,377,2,0,353,2,0,1605584.0,65136,0,0,0,100349,100349,3985543424908691,3985600722520699,3985600722524144,3985543425715193
103,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,267,41874,41874,256,256,1536,48,28,4,80,64,0x0,0x7e4374218380,3252833,4,9297,9685,0,37244,179,14,35.0,5.0,1.0,30.0,1.0,65.0,193,2,0,207,2,0,179,2,0,183,2,0,204,2,0,170,2,0,0,2,0,179,2,0,177,2,0,197,2,0,240,2,0,178,2,0,169,2,0,178,2,0,189,2,0,199,2,0,12997376.0,774241,0,0,0,812336,812336,3985543425707762,3985600722529432,3985600722533878,3985543427087181
104,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,268,41874,41874,256,256,0,0,12,4,32,64,0x0,0x7e738bc557c0,646658,4,2989,4105,0,12068,28,2,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,0,0,0,0,0,0,172,0,0,0,0,0,174,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,171,0,0,204,0,0,181,0,0,2574160.0,97258,0,0,0,160885,160885,3985543427035715,3985600723361660,3985600723363583,3985543427943065
105,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,269,41874,41874,256,256,0,0,24,0,32,64,0x0,0x7e42d9869a40,359365,4,5052,5129,0,20312,180,1,0.0,2.0,1.0,0.0,1.0,2.0,186,0,0,211,0,0,180,0,0,0,0,0,214,1,0,223,0,0,174,0,0,183,0,0,178,0,0,183,0,0,177,0,0,178,0,0,193,0,0,200,0,0,174,0,0,182,0,0,1424208.0,51128,0,0,0,89013,89013,3985543435838062,3985600731048174,3985600731050938,3985543436306915
106,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,270,41874,41874,256,256,0,0,40,0,32,64,0x0,0x7e42d9869840,3322393,4,4467,4525,0,17968,180,2,0.0,3.0,1.0,0.0,1.0,3.0,0,0,0,0,0,0,194,0,0,210,0,0,172,0,0,211,0,0,228,1,0,168,0,0,178,0,0,184,0,0,177,0,0,191,0,0,169,0,0,167,0,0,171,0,0,165,0,0,13275072.0,792252,0,0,0,829692,829692,3985543436319293,3985600731075975,3985600731078419,3985543437771879
107,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,271,41874,41874,256,256,0,0,36,4,80,64,0x0,0x7e42d9247fc0,347263,4,3541,4161,0,14228,180,0,0.0,3.0,1.0,0.0,1.0,3.0,244,1,0,181,0,0,180,1,0,183,0,0,173,0,0,170,0,0,174,0,0,168,0,0,197,0,0,189,0,0,177,0,0,210,0,0,0,0,0,0,0,0,170,0,0,0,0,0,1386832.0,48513,0,0,0,86677,86677,3985543441860231,3985600735713880,3985600735716284,3985543442306991
108,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,272,41874,41874,256,256,0,0,24,0,32,64,0x0,0x7e42d9869a40,3069033,4,4943,5017,0,19900,180,1,0.0,2.0,1.0,0.0,1.0,2.0,185,0,0,196,0,0,179,0,0,0,0,0,215,0,0,225,0,0,208,1,0,172,0,0,178,0,0,184,0,0,178,0,0,180,0,0,195,0,0,201,0,0,174,0,0,182,0,0,12261856.0,729044,0,0,0,766366,766366,3985543442341652,3985600735761751,3985600735764435,3985543443906815
109,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,273,41874,41874,256,256,0,0,36,4,80,64,0x0,0x7e42d8e53a80,361973,4,4626,5237,0,18620,180,0,0.0,3.0,1.0,0.0,1.0,3.0,180,0,0,181,0,0,179,0,0,183,0,0,172,1,0,0,0,0,175,0,0,169,0,0,0,0,0,0,0,0,194,1,0,183,0,0,197,0,0,167,0,0,171,0,0,204,0,0,1434592.0,51498,0,0,0,89662,89662,3985543449331501,3985600741733395,3985600741736319,3985543449783699
110,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,274,41874,41874,256,256,512,0,8,0,32,64,0x0,0x7e42d8a8eec0,350845,4,3440,3965,0,13876,159,0,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,179,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,177,0,0,194,0,0,202,0,0,215,0,0,169,0,0,167,0,0,171,0,0,0,0,0,1390176.0,49425,0,0,0,86886,86886,3985543457952300,3985600749470033,3985600749472316,3985543458391769
111,__amd_rocclr_copyBuffer.kd,2,0,275,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,2900893,8,4118,6313,0,16632,8,40,0.0,8.0,2.0,6.0,0.0,8.0,180,0,0,213,0,0,0,0,0,0,0,0,186,1,0,171,0,0,196,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11589040.0,687125,0,0,0,724315,724315,3985543458393282,3985600749488020,3985600749491144,3985543459948780
112,__amd_rocclr_fillBufferAligned.kd,2,0,277,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,413729,4,3321,5053,0,13420,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,194,0,0,182,0,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0,0,0,0,199,0,0,188,0,0,169,0,0,205,0,0,171,1,0,165,0,0,1641104.0,64523,0,0,0,102569,102569,3985543460560464,3985600749529281,3985600749533086,3985543461504900
113,__amd_rocclr_fillBufferAligned.kd,2,0,278,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,2559869,4,2429,3357,0,9844,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,191,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,190,0,0,183,0,0,0,0,0,220,1,0,168,0,0,188,0,0,0,0,0,165,0,0,10224896.0,601757,0,0,0,639056,639056,3985543461484650,3985600749533086,3985600749537132,3985543463110883
114,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,279,41874,41874,256,256,0,0,8,0,16,64,0x0,0x7e4375721100,376109,4,2527,3293,0,10232,13,2,0.0,2.0,1.0,3.0,0.0,17.0,0,0,0,181,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,180,0,0,165,0,0,1490640.0,55780,0,0,0,93165,93165,3985543464135507,3985600751402806,3985600751404929,3985543464589007
115,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,280,41874,41874,512,512,29184,0,52,4,48,64,0x0,0x7e42d8a8f040,4484125,8,12390,6481,0,49728,414,74,0.0,3.0,1.0,1.0,1.0,3.0,234,0,0,223,0,0,209,1,0,182,0,0,173,0,0,171,0,0,174,0,0,179,0,0,179,0,0,0,0,0,177,0,0,195,0,0,181,0,0,168,0,0,0,0,0,164,0,0,17922688.0,1082518,0,0,0,1120168,1120168,3985543464574195,3985600751408774,3985600751412139,3985543466188430
116,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,281,41874,41874,256,256,0,0,8,0,32,64,0x0,0x7e42d8a8b900,2973213,4,2953,3941,0,11860,8,4,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,215,0,0,232,0,0,177,1,0,0,0,0,0,0,0,171,0,0,204,0,0,181,0,0,11878528.0,704493,0,0,0,742408,742408,3985543464976710,3985600751418309,3985600751420271,3985543467321745
117,__amd_rocclr_copyBuffer.kd,2,0,282,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,3165829,8,3800,6433,0,15292,8,40,0.0,8.0,2.0,6.0,0.0,8.0,180,0,0,194,0,0,0,0,0,0,0,0,172,0,0,0,0,0,181,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12648736.0,753369,0,0,0,790546,790546,3985543465479593,3985600751520299,3985600751524385,3985543468522229
118,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,284,41874,41874,256,128,0,0,20,4,64,64,0x0,0x7e437586ecc0,391965,4,6510,13289,0,26176,144,96,1379.0,32.0,4.0,108.0,0.0,128.0,385,2,0,415,2,0,383,2,0,425,2,0,380,2,0,186,2,0,346,2,0,358,2,0,386,2,0,417,2,0,382,2,0,408,2,0,395,2,0,169,2,0,357,2,0,359,2,0,1555632.0,61645,0,0,0,97227,97227,3985543469342211,3985600751704291,3985600751708016,3985543470086261
119,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,285,41874,41874,256,256,1536,48,28,4,80,64,0x0,0x7e4374218380,3176629,4,8912,9333,0,35744,179,14,75.0,5.0,1.0,30.0,1.0,65.0,195,2,0,209,2,0,180,2,0,193,2,0,185,2,0,171,2,0,0,2,0,180,2,0,181,2,0,200,2,0,178,2,0,194,2,0,169,2,0,167,2,0,170,2,0,179,2,0,12693952.0,756068,0,0,0,793372,793372,3985543470085069,3985600751725442,3985600751730009,3985543471653406
120,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,286,41874,41874,256,256,0,0,12,4,32,64,0x0,0x7e738bc557c0,3034821,4,2582,3633,0,10384,28,2,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,175,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,171,0,0,203,0,0,180,0,0,12125248.0,720444,0,0,0,757828,757828,3985543470671706,3985600751872218,3985600751874382,3985543472838447
121,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,287,41874,41874,256,256,0,0,24,0,32,64,0x0,0x7e42d9869a40,3424513,4,5296,5441,0,21236,180,1,0.0,2.0,1.0,0.0,1.0,2.0,181,0,0,208,0,0,180,0,0,0,0,0,211,1,0,220,0,0,174,0,0,180,0,0,178,0,0,183,0,0,177,0,0,180,0,0,181,0,0,183,0,0,171,0,0,165,0,0,13683024.0,817087,0,0,0,855189,855189,3985543471104105,3985600751893490,3985600751896134,3985543474056517
122,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,288,41874,41874,256,256,0,0,40,0,32,64,0x0,0x7e42d9869840,1970037,4,4701,4909,0,18852,180,2,0.0,3.0,1.0,0.0,1.0,3.0,0,0,0,0,0,0,179,0,0,210,0,0,187,0,0,210,0,0,226,1,0,168,0,0,179,0,0,184,0,0,177,0,0,191,0,0,169,0,0,168,0,0,171,0,0,165,0,0,7866000.0,454524,0,0,0,491625,491625,3985543472141998,3985600751908792,3985600751911276,3985543475333644
123,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,289,41874,41874,256,256,0,0,36,4,80,64,0x0,0x7e42d9247fc0,4014445,4,4542,5153,0,18268,180,0,0.0,3.0,1.0,0.0,1.0,3.0,186,1,0,181,0,0,180,1,0,182,0,0,172,0,0,170,0,0,174,0,0,167,0,0,214,0,0,189,0,0,177,0,0,198,0,0,0,0,0,0,0,0,170,0,0,0,0,0,16043136.0,965404,0,0,0,1002696,1002696,3985543473087215,3985600751927780,3985600751930464,3985543476448291
124,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,290,41874,41874,256,256,0,0,24,0,32,64,0x0,0x7e42d9869a40,2972413,4,5368,5441,0,21536,180,1,0.0,2.0,1.0,0.0,1.0,2.0,181,0,0,196,0,0,179,0,0,0,0,0,219,0,0,224,0,0,207,1,0,168,0,0,179,0,0,184,0,0,177,0,0,179,0,0,193,0,0,205,0,0,175,0,0,182,0,0,11875904.0,704891,0,0,0,742244,742244,3985543473543159,3985600751948491,3985600751950895,3985543477631750
125,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,291,41874,41874,256,256,0,0,36,4,80,64,0x0,0x7e42d8e53a80,2770841,4,5663,6245,0,22712,180,0,0.0,3.0,1.0,0.0,1.0,3.0,180,0,0,181,0,0,180,0,0,182,0,0,172,1,0,0,0,0,239,0,0,169,0,0,182,0,0,0,0,0,189,1,0,179,0,0,222,0,0,190,0,0,170,0,0,200,0,0,11068704.0,653716,0,0,0,691794,691794,3985543474494915,3985600751966838,3985600751969442,3985543478809911
126,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,292,41874,41874,256,256,512,0,8,0,32,64,0x0,0x7e42d8a8eec0,3497901,4,4350,4825,0,17460,159,0,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,180,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0,195,0,0,203,0,0,216,0,0,169,0,0,167,0,0,171,0,0,0,0,0,13978560.0,835805,0,0,0,873660,873660,3985543475537946,3985600751985626,3985600751987909,3985543480015303
127,__amd_rocclr_copyBuffer.kd,2,0,293,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,3184093,8,4661,7149,0,18876,8,40,0.0,8.0,2.0,6.0,0.0,8.0,184,0,0,208,0,0,0,0,0,0,0,0,186,1,0,171,0,0,195,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12722784.0,757016,0,0,0,795174,795174,3985543475997615,3985600751991835,3985600751994799,3985543481268234
128,__amd_rocclr_fillBufferAligned.kd,2,0,295,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,411189,4,2628,4113,0,10592,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,181,1,0,194,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,193,0,0,184,0,0,232,0,0,204,0,0,168,0,0,205,0,0,0,0,0,164,0,0,1631136.0,64040,0,0,0,101946,101946,3985543481864085,3985600752071873,3985600752073796,3985543482913516
129,__amd_rocclr_fillBufferAligned.kd,2,0,296,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,2810469,4,2481,3429,0,10000,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,195,1,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,0,0,183,0,0,212,0,0,239,0,0,168,0,0,190,0,0,0,0,0,165,0,0,11227824.0,663985,0,0,0,701739,701739,3985543482893816,3985600752077842,3985600752079324,3985543484515032
130,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,297,41874,41874,256,256,0,0,8,0,16,64,0x0,0x7e4375721100,2910237,4,2623,3353,0,10556,13,2,0.0,2.0,1.0,3.0,0.0,17.0,0,0,0,0,0,0,0,0,0,0,0,0,171,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,171,0,0,228,0,0,11626176.0,688916,0,0,0,726636,726636,3985543483299746,3985600752088858,3985600752090461,3985543485817076
131,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,298,41874,41874,512,512,29184,0,52,4,48,64,0x0,0x7e42d8a8f040,1933037,8,14440,7525,0,58016,414,74,0.0,3.0,1.0,1.0,1.0,3.0,235,0,0,224,0,0,210,1,0,199,0,0,172,0,0,171,0,0,174,0,0,167,0,0,178,0,0,0,0,0,181,0,0,194,0,0,180,0,0,167,0,0,0,0,0,165,0,0,7719728.0,445137,0,0,0,482483,482483,3985543483702011,3985600752097591,3985600752100315,3985543486896381
132,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,299,41874,41874,256,256,0,0,8,0,32,64,0x0,0x7e42d8a8b900,3230301,4,3148,4177,0,12672,8,4,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,174,0,0,0,0,0,213,0,0,229,0,0,176,1,0,0,0,0,0,0,0,170,0,0,202,0,0,179,0,0,12908528.0,769245,0,0,0,806783,806783,3985543484158575,3985600752108567,3985600752110290,3985543488068633
133,__amd_rocclr_copyBuffer.kd,2,0,300,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,3282461,8,4276,6553,0,17260,8,40,0.0,8.0,2.0,6.0,0.0,8.0,244,0,0,208,0,0,0,0,0,0,0,0,186,0,0,171,0,0,195,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13116624.0,781912,0,0,0,819789,819789,3985543484958918,3985600752129358,3985600752132563,3985543489294074
134,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,302,41874,41874,256,128,0,0,20,4,64,64,0x0,0x7e437586ecc0,408997,4,6862,13788,0,27544,144,96,1371.0,32.0,4.0,100.0,0.0,128.0,398,2,0,429,2,0,382,2,0,426,2,0,379,2,0,214,2,0,374,2,0,437,2,0,435,2,0,462,2,0,443,2,0,470,2,0,456,2,0,170,2,0,357,2,0,457,2,0,1622608.0,65586,0,0,0,101413,101413,3985543489994148,3985600752174264,3985600752177148,3985543490892867
135,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,303,41874,41874,256,256,1536,48,28,4,80,64,0x0,0x7e4374218380,2730821,4,8681,9065,0,34772,179,14,54.0,5.0,1.0,30.0,1.0,65.0,183,2,0,197,2,0,179,2,0,192,2,0,207,2,0,171,2,0,0,2,0,231,2,0,190,2,0,183,2,0,178,2,0,179,2,0,169,2,0,176,2,0,208,2,0,185,2,0,10909600.0,644061,0,0,0,681850,681850,3985543490882471,3985600752184279,3985600752187924,3985543492483197
136,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,304,41874,41874,256,256,0,0,12,4,32,64,0x0,0x7e738bc557c0,2574341,4,2727,3829,0,11004,28,2,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,182,0,0,0,0,0,0,0,0,0,0,0,0,0,0,175,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,171,0,0,203,0,0,180,0,0,10283072.0,604711,0,0,0,642692,642692,3985543491362721,3985600752220172,3985600752221854,3985543493657021
137,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,305,41874,41874,256,256,0,0,24,0,32,64,0x0,0x7e42d9869a40,3014045,4,5140,5217,0,20652,180,1,0.0,2.0,1.0,0.0,1.0,2.0,183,0,0,212,0,0,179,0,0,0,0,0,214,1,0,224,0,0,174,0,0,184,0,0,178,0,0,183,0,0,177,0,0,179,0,0,188,0,0,197,0,0,171,0,0,178,0,0,12042992.0,715778,0,0,0,752687,752687,3985543491777374,3985600752235755,3985600752238038,3985543494902061
138,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,306,41874,41874,256,256,0,0,40,0,32,64,0x0,0x7e42d9869840,2043877,4,4641,4869,0,18640,180,2,0.0,3.0,1.0,0.0,1.0,3.0,181,0,0,0,0,0,194,0,0,209,0,0,172,0,0,212,0,0,228,1,0,168,0,0,178,0,0,183,0,0,177,0,0,195,0,0,170,0,0,167,0,0,171,0,0,165,0,0,8161280.0,472476,0,0,0,510080,510080,3985543492725535,3985600752244127,3985600752246331,3985543496069776
139,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,307,41874,41874,256,256,0,0,36,4,80,64,0x0,0x7e42d9247fc0,2157885,4,4538,5129,0,18204,180,0,0.0,3.0,1.0,0.0,1.0,3.0,180,1,0,182,0,0,179,1,0,182,0,0,172,0,0,171,0,0,174,0,0,169,0,0,197,0,0,189,0,0,178,0,0,210,0,0,0,0,0,0,0,0,170,0,0,0,0,0,8617888.0,500916,0,0,0,538618,538618,3985543493181699,3985600752262635,3985600752264798,3985543497309859
140,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,308,41874,41874,256,256,0,0,24,0,32,64,0x0,0x7e42d9869a40,2342861,4,5193,5265,0,20876,180,1,0.0,2.0,1.0,0.0,1.0,2.0,183,0,0,196,0,0,180,0,0,0,0,0,215,0,0,224,0,0,207,1,0,168,0,0,178,0,0,184,0,0,237,0,0,179,0,0,196,0,0,200,0,0,174,0,0,181,0,0,9357456.0,547577,0,0,0,584841,584841,3985543494089570,3985600752272209,3985600752274612,3985543498553997
141,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,309,41874,41874,256,256,0,0,36,4,80,64,0x0,0x7e42d8e53a80,4058701,4,5682,6237,0,22828,180,0,0.0,3.0,1.0,0.0,1.0,3.0,181,0,0,181,0,0,179,0,0,182,0,0,172,1,0,0,0,0,174,0,0,168,0,0,0,0,0,0,0,0,194,1,0,183,0,0,225,0,0,193,0,0,171,0,0,202,0,0,16221760.0,976290,0,0,0,1013860,1013860,3985543494548518,3985600752288272,3985600752290516,3985543499633372
142,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,310,41874,41874,256,256,512,0,8,0,32,64,0x0,0x7e42d8a8eec0,3887789,4,4314,4829,0,17348,159,0,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,180,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0,194,0,0,203,0,0,216,0,0,169,0,0,167,0,0,170,0,0,0,0,0,15537936.0,933120,0,0,0,971121,971121,3985543495339928,3985600752302894,3985600752304817,3985543500838263
143,__amd_rocclr_copyBuffer.kd,2,0,311,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,3495229,8,4365,6793,0,17584,8,40,0.0,8.0,2.0,6.0,0.0,8.0,182,0,0,211,0,0,0,0,0,0,0,0,189,1,0,173,0,0,198,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13968480.0,835239,0,0,0,873030,873030,3985543496306055,3985600752310105,3985600752313990,3985543502074870
144,__amd_rocclr_fillBufferAligned.kd,2,0,313,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,407149,4,2584,4021,0,10452,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,193,0,0,182,0,0,171,1,0,0,0,0,0,0,0,0,0,0,192,0,0,183,0,0,230,0,0,203,0,0,169,0,0,204,0,0,0,0,0,164,0,0,1614496.0,62966,0,0,0,100906,100906,3985543502708707,3985600752342993,3985600752344916,3985543503762574
145,__amd_rocclr_fillBufferAligned.kd,2,0,314,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,1851689,4,2281,3113,0,9240,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,194,0,0,182,0,0,0,0,0,0,0,0,0,0,0,0,0,0,193,0,0,184,0,0,230,0,0,202,0,0,0,0,0,203,1,0,0,0,0,165,0,0,7394096.0,424516,0,0,0,462131,462131,3985543503743446,3985600752348682,3985600752350124,3985543505358843
146,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,315,41874,41874,256,256,0,0,8,0,16,64,0x0,0x7e4375721100,2001765,4,2226,2973,0,9004,13,2,0.0,2.0,1.0,3.0,0.0,17.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,180,0,0,165,0,0,7992656.0,461457,0,0,0,499541,499541,3985543504159230,3985600752354490,3985600752356253,3985543506559627
147,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,316,41874,41874,512,512,29184,0,52,4,48,64,0x0,0x7e42d8a8f040,2722573,8,13221,6901,0,53040,414,74,0.0,3.0,1.0,1.0,1.0,3.0,236,0,0,225,0,0,211,1,0,183,0,0,173,0,0,170,0,0,174,0,0,185,0,0,178,0,0,0,0,0,178,0,0,195,0,0,181,0,0,168,0,0,0,0,0,166,0,0,10877616.0,642671,0,0,0,679851,679851,3985543504563528,3985600752365146,3985600752367590,3985543507724498
148,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,317,41874,41874,256,256,0,0,8,0,32,64,0x0,0x7e42d8a8b900,3029301,4,2789,3869,0,11284,8,4,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0,227,0,0,177,1,0,0,0,0,0,0,0,167,0,0,199,0,0,180,0,0,12103488.0,719364,0,0,0,756468,756468,3985543505569174,3985600752372397,3985600752374079,3985543508852205
149,__amd_rocclr_copyBuffer.kd,2,0,318,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,4839221,8,4170,6621,0,16936,8,40,0.0,8.0,2.0,6.0,0.0,8.0,180,0,0,208,0,0,0,0,0,0,0,0,173,0,0,187,0,0,195,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19342560.0,1171316,0,0,0,1208910,1208910,3985543506088671,3985600752388060,3985600752391825,3985543510090465
150,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,320,41874,41874,256,128,0,0,20,4,64,64,0x0,0x7e437586ecc0,399741,4,5825,11756,0,23416,144,96,1367.0,32.0,4.0,83.0,0.0,128.0,387,2,0,418,2,0,383,2,0,427,2,0,381,2,0,170,2,0,357,2,0,374,2,0,387,2,0,418,2,0,382,2,0,409,2,0,397,2,0,170,2,0,357,2,0,359,2,0,1586880.0,63777,0,0,0,99180,99180,3985543510728888,3985600752427318,3985600752430122,3985543511728766
151,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,321,41874,41874,256,256,1536,48,28,4,80,64,0x0,0x7e4374218380,2032677,4,8571,8973,0,34360,179,14,55.0,5.0,1.0,14.0,1.0,65.0,194,2,0,208,2,0,179,2,0,182,2,0,203,2,0,171,2,0,0,2,0,180,2,0,195,2,0,215,2,0,177,2,0,193,2,0,168,2,0,174,2,0,188,2,0,198,2,0,8115520.0,469429,0,0,0,507220,507220,3985543511716498,3985600752434408,3985600752437853,3985543513191197
152,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,322,41874,41874,256,256,0,0,12,4,32,64,0x0,0x7e738bc557c0,3303629,4,2657,3793,0,10764,28,2,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,0,0,0,0,0,0,172,0,0,0,0,0,174,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,171,0,0,204,0,0,181,0,0,13201968.0,787481,0,0,0,825123,825123,3985543512243036,3985600752460767,3985600752462490,3985543514358752
153,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,323,41874,41874,256,256,0,0,24,0,32,64,0x0,0x7e42d9869a40,3390197,4,4946,5009,0,19832,180,1,0.0,2.0,1.0,0.0,1.0,2.0,181,0,0,196,0,0,180,0,0,0,0,0,215,1,0,225,0,0,208,0,0,168,0,0,178,0,0,183,0,0,177,0,0,179,0,0,190,0,0,197,0,0,171,0,0,181,0,0,13546832.0,809246,0,0,0,846677,846677,3985543512732599,3985600752476951,3985600752479234,3985543515538185
154,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,324,41874,41874,256,256,0,0,40,0,32,64,0x0,0x7e42d9869840,2970749,4,4549,4805,0,18324,180,2,0.0,3.0,1.0,0.0,1.0,3.0,0,0,0,0,0,0,190,0,0,205,0,0,171,0,0,207,0,0,223,1,0,169,0,0,178,0,0,183,0,0,176,0,0,190,0,0,168,0,0,168,0,0,171,0,0,164,0,0,11870176.0,704714,0,0,0,741886,741886,3985543513629665,3985600752485283,3985600752487446,3985543516754412
155,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,325,41874,41874,256,256,0,0,36,4,80,64,0x0,0x7e42d9247fc0,3783109,4,4452,5065,0,17900,180,0,0.0,3.0,1.0,0.0,1.0,3.0,186,1,0,181,0,0,179,1,0,182,0,0,172,0,0,171,0,0,175,0,0,168,0,0,197,0,0,189,0,0,177,0,0,211,0,0,0,0,0,0,0,0,170,0,0,0,0,0,15118448.0,907534,0,0,0,944903,944903,3985543514608862,3985600752500345,3985600752502469,3985543517917050
156,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,326,41874,41874,256,256,0,0,24,0,32,64,0x0,0x7e42d9869a40,2762057,4,4938,5001,0,19800,180,1,0.0,2.0,1.0,0.0,1.0,2.0,184,0,0,182,0,0,179,0,0,0,0,0,214,0,0,223,0,0,190,1,0,199,0,0,178,0,0,183,0,0,178,0,0,179,0,0,190,0,0,201,0,0,171,0,0,179,0,0,11035376.0,651994,0,0,0,689711,689711,3985543515082772,3985600752509158,3985600752511522,3985543519080029
157,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,327,41874,41874,256,256,0,0,36,4,80,64,0x0,0x7e42d8e53a80,2492109,4,5165,5953,0,20716,180,0,0.0,3.0,1.0,0.0,1.0,3.0,181,0,0,181,0,0,180,0,0,182,0,0,172,1,0,0,0,0,175,0,0,168,0,0,0,0,0,0,0,0,189,1,0,179,0,0,207,0,0,192,0,0,171,0,0,217,0,0,9954304.0,584644,0,0,0,622144,622144,3985543515970454,3985600752524501,3985600752526704,3985543520224340
158,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,328,41874,41874,256,256,512,0,8,0,32,64,0x0,0x7e42d8a8eec0,2295533,4,4503,5033,0,18152,159,0,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,180,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,0,0,195,0,0,204,0,0,217,0,0,169,0,0,167,0,0,170,0,0,0,0,0,9169248.0,535902,0,0,0,573078,573078,3985543517007316,3985600752540685,3985600752542648,3985543521370744
159,__amd_rocclr_copyBuffer.kd,2,0,329,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,3905609,8,4388,7009,0,17756,8,40,0.0,8.0,2.0,6.0,0.0,8.0,181,0,0,216,0,0,0,0,0,0,0,0,189,1,0,174,0,0,199,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15607488.0,937339,0,0,0,975468,975468,3985543517472684,3985600752547335,3985600752550820,3985543522497929
160,__amd_rocclr_fillBufferAligned.kd,2,0,331,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,412373,4,2385,3589,0,9600,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,179,0,0,196,0,0,0,0,0,0,0,0,0,0,0,0,0,0,189,0,0,183,0,0,230,0,0,219,0,0,169,0,0,188,0,0,0,0,0,165,1,0,1636704.0,64733,0,0,0,102294,102294,3985543523071707,3985600752579222,3985600752581025,3985543524162079
161,__amd_rocclr_fillBufferAligned.kd,2,0,332,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,3959489,4,2319,3169,0,9340,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,190,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,193,1,0,183,0,0,215,0,0,0,0,0,169,0,0,192,0,0,0,0,0,164,0,0,15831520.0,951514,0,0,0,989470,989470,3985543524142620,3985600752584910,3985600752586112,3985543525636297
162,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,333,41874,41874,256,256,0,0,8,0,16,64,0x0,0x7e4375721100,3442993,4,2437,3145,0,9796,13,2,0.0,2.0,1.0,3.0,0.0,17.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0,0,0,0,0,0,0,0,0,0,180,0,0,165,0,0,13758912.0,822280,0,0,0,859932,859932,3985543524550372,3985600752590639,3985600752592321,3985543526752656
163,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,334,41874,41874,512,512,29184,0,52,4,48,64,0x0,0x7e42d8a8f040,1957973,8,13652,7125,0,54844,414,74,0.0,3.0,1.0,1.0,1.0,3.0,235,0,0,225,0,0,210,1,0,183,0,0,172,0,0,171,0,0,174,0,0,180,0,0,178,0,0,0,0,0,178,0,0,195,0,0,181,0,0,168,0,0,0,0,0,164,0,0,7816704.0,451107,0,0,0,488544,488544,3985543524940319,3985600752603257,3985600752605861,3985543527951127
164,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,335,41874,41874,256,256,0,0,8,0,32,64,0x0,0x7e42d8a8b900,3947765,4,2967,3961,0,11932,8,4,0.0,2.0,1.0,0.0,1.0,2.0,180,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0,226,0,0,177,1,0,0,0,0,0,0,0,167,0,0,183,0,0,192,0,0,15777536.0,948992,0,0,0,986096,986096,3985543525857504,3985600752611469,3985600752613192,3985543529137631
165,__amd_rocclr_copyBuffer.kd,2,0,336,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,2888373,8,4169,6649,0,16836,8,40,0.0,8.0,2.0,6.0,0.0,8.0,181,0,0,212,0,0,0,0,0,0,0,0,189,0,0,174,0,0,203,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11539120.0,683194,0,0,0,721195,721195,3985543526359115,3985600752627693,3985600752630498,3985543530344234
166,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,338,41874,41874,1024,128,0,0,20,4,64,64,0x0,0x7e437586ecc0,556869,16,27002,54250,0,108328,576,384,5124.0,128.0,16.0,324.0,0.0,512.0,1563,8,0,1685,8,0,1618,8,0,1721,8,0,1581,8,0,675,8,0,1393,8,0,1060,8,0,1557,8,0,1696,8,0,1598,8,0,1736,8,0,1560,8,0,673,8,0,1378,8,0,1052,8,0,2214528.0,106312,0,0,0,138408,138408,3985543531014564,3985600752662865,3985600752667312,3985543531994262
167,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,339,41874,41874,512,512,2560,48,28,4,80,64,0x0,0x7e4374218380,2693669,8,21594,11289,0,86628,399,34,71.0,17.0,1.0,206.0,1.0,257.0,194,8,0,208,8,0,181,8,0,194,8,0,185,8,0,171,8,0,0,8,0,180,8,0,197,8,0,216,8,0,178,8,0,194,8,0,169,8,0,167,8,0,170,8,0,180,8,0,10762928.0,635763,0,0,0,672683,672683,3985543531981053,3985600752671118,3985600752675364,3985543533629409
168,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,340,41874,41874,256,256,0,0,12,4,32,64,0x0,0x7e738bc557c0,2298133,4,2563,3633,0,10332,28,2,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,174,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,167,0,0,179,0,0,188,0,0,9179504.0,536408,0,0,0,573719,573719,3985543532420051,3985600752697316,3985600752699039,3985543534782232
169,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,341,41874,41874,256,256,0,0,24,0,32,64,0x0,0x7e42d9869a40,2861850,4,5399,5469,0,21676,180,1,0.0,2.0,1.0,0.0,1.0,2.0,184,0,0,196,0,0,180,0,0,0,0,0,215,1,0,224,0,0,207,0,0,168,0,0,179,0,0,183,0,0,178,0,0,179,0,0,173,0,0,179,0,0,171,0,0,165,0,0,11435808.0,676739,0,0,0,714738,714738,3985543532822947,3985600752712539,3985600752714702,3985543535993742
170,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,342,41874,41874,256,256,0,0,40,0,32,64,0x0,0x7e42d9869840,4661021,4,4689,4905,0,18820,180,2,0.0,3.0,1.0,0.0,1.0,3.0,0,0,0,0,0,0,179,0,0,210,0,0,188,0,0,212,0,0,228,1,0,168,0,0,177,0,0,183,0,0,178,0,0,191,0,0,169,0,0,167,0,0,171,0,0,166,0,0,18638368.0,1127657,0,0,0,1164898,1164898,3985543533867240,3985600752727881,3985600752730205,3985543537003525
171,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,343,41874,41874,256,256,0,0,36,4,80,64,0x0,0x7e42d9247fc0,4878837,4,4412,4993,0,17692,180,0,0.0,3.0,1.0,0.0,1.0,3.0,192,1,0,182,0,0,179,1,0,182,0,0,172,0,0,170,0,0,174,0,0,169,0,0,197,0,0,189,0,0,178,0,0,211,0,0,0,0,0,0,0,0,170,0,0,0,0,0,19500592.0,1181378,0,0,0,1218787,1218787,3985543534322242,3985600752743024,3985600752745227,3985543538302554
172,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,344,41874,41874,256,256,0,0,24,0,32,64,0x0,0x7e42d9869a40,3242005,4,5387,5457,0,21632,180,1,0.0,2.0,1.0,0.0,1.0,2.0,187,0,0,212,0,0,180,0,0,0,0,0,215,0,0,224,0,0,174,1,0,184,0,0,178,0,0,184,0,0,178,0,0,180,0,0,187,0,0,196,0,0,174,0,0,178,0,0,12955952.0,771930,0,0,0,809747,809747,3985543535206389,3985600752751516,3985600752753880,3985543539458662
173,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,345,41874,41874,256,256,0,0,36,4,80,64,0x0,0x7e42d8e53a80,3050385,4,5455,6257,0,21916,180,0,0.0,3.0,1.0,0.0,1.0,3.0,179,0,0,184,0,0,179,0,0,181,0,0,171,1,0,0,0,0,174,0,0,167,0,0,0,0,0,183,0,0,189,1,0,179,0,0,206,0,0,191,0,0,171,0,0,216,0,0,12187504.0,724410,0,0,0,761719,761719,3985543535664776,3985600752768822,3985600752771105,3985543540668270
174,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,346,41874,41874,256,256,512,0,8,0,32,64,0x0,0x7e42d8a8eec0,2865205,4,4333,4821,0,17412,159,0,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,179,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0,194,0,0,202,0,0,216,0,0,169,0,0,167,0,0,170,0,0,0,0,0,11447760.0,677999,0,0,0,715485,715485,3985543536527181,3985600752784805,3985600752786768,3985543541886069
175,__amd_rocclr_copyBuffer.kd,2,0,347,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,3278993,8,4383,6909,0,17644,8,40,0.0,8.0,2.0,6.0,0.0,8.0,180,0,0,211,0,0,0,0,0,0,0,0,189,1,0,174,0,0,198,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13102464.0,779379,0,0,0,818904,818904,3985543537421051,3985600752792497,3985600752795822,3985543543100774
176,__amd_rocclr_fillBufferAligned.kd,2,0,349,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,411081,4,2661,4269,0,10740,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,194,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,194,0,0,187,0,0,233,1,0,205,0,0,169,0,0,206,0,0,0,0,0,165,0,0,1629984.0,63837,0,0,0,101874,101874,3985543543739398,3985600752818856,3985600752820538,3985543544699297
177,__amd_rocclr_fillBufferAligned.kd,2,0,350,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,1938101,4,2490,3449,0,10064,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,0,183,1,0,0,0,0,0,0,0,0,0,0,0,0,0,189,0,0,183,0,0,231,0,0,219,0,0,169,0,0,188,0,0,0,0,0,165,0,0,7738512.0,445609,0,0,0,483657,483657,3985543544674931,3985600752824504,3985600752825826,3985543546310057
178,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,351,41874,41874,256,256,0,0,8,0,16,64,0x0,0x7e4375721100,2592461,4,2553,3289,0,10292,13,2,0.0,2.0,1.0,3.0,0.0,17.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,174,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,180,0,0,165,0,0,10356688.0,610039,0,0,0,647293,647293,3985543545074411,3985600752839326,3985600752841329,3985543547417283
179,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,352,41874,41874,512,512,29184,0,52,4,48,64,0x0,0x7e42d8a8f040,3463205,8,13679,7121,0,54844,414,74,0.0,3.0,1.0,1.0,1.0,3.0,235,0,0,224,0,0,210,1,0,182,0,0,172,0,0,171,0,0,174,0,0,180,0,0,177,0,0,0,0,0,177,0,0,194,0,0,181,0,0,167,0,0,0,0,0,165,0,0,13839712.0,827565,0,0,0,864982,864982,3985543545465008,3985600752848620,3985600752851344,3985543548623536
180,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,353,41874,41874,256,256,0,0,8,0,32,64,0x0,0x7e42d8a8b900,2085885,4,3137,4177,0,12652,8,4,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,169,0,0,211,0,0,227,0,0,178,1,0,0,0,0,0,0,0,184,0,0,171,0,0,193,0,0,8330272.0,482765,0,0,0,520642,520642,3985543546249007,3985600752855069,3985600752856912,3985543549761457
181,__amd_rocclr_copyBuffer.kd,2,0,354,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,3130473,8,4316,6821,0,17496,8,40,0.0,8.0,2.0,6.0,0.0,8.0,181,0,0,212,0,0,0,0,0,0,0,0,186,0,0,170,0,0,195,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12509168.0,744678,0,0,0,781823,781823,3985543546739231,3985600752868889,3985600752872895,3985543551032505
182,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,356,41874,41874,1024,128,0,0,20,4,64,64,0x0,0x7e437586ecc0,564265,16,26108,52462,0,104780,576,384,4374.0,128.0,16.0,312.0,0.0,512.0,1554,8,0,1677,8,0,1563,8,0,1683,8,0,1165,8,0,694,8,0,1443,8,0,1424,8,0,1656,8,0,1796,8,0,1660,8,0,1780,8,0,1288,8,0,673,8,0,1427,8,0,1434,8,0,2242624.0,105474,0,0,0,140164,140164,3985543551649016,3985600752903180,3985600752907306,3985543552630877
183,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,357,41874,41874,512,512,2560,48,28,4,80,64,0x0,0x7e4374218380,2883717,8,21400,11165,0,85760,399,34,51.0,17.0,1.0,206.0,1.0,257.0,194,8,0,208,8,0,179,8,0,192,8,0,183,8,0,171,8,0,0,8,0,180,8,0,179,8,0,187,8,0,177,8,0,193,8,0,168,8,0,175,8,0,170,8,0,178,8,0,11519760.0,682814,0,0,0,719985,719985,3985543552617818,3985600752911032,3985600752915198,3985543554268146
184,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,358,41874,41874,256,256,0,0,12,4,32,64,0x0,0x7e738bc557c0,3830589,4,2703,3817,0,10924,28,2,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,174,1,0,0,0,0,0,0,0,0,0,0,177,0,0,0,0,0,0,0,0,171,0,0,204,0,0,180,0,0,15309472.0,919383,0,0,0,956842,956842,3985543553051108,3985600752935027,3985600752936910,3985543555398327
185,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,359,41874,41874,256,256,0,0,24,0,32,64,0x0,0x7e42d9869a40,3792033,4,5426,5541,0,21832,180,1,0.0,2.0,1.0,0.0,1.0,2.0,180,0,0,211,0,0,179,0,0,0,0,0,218,1,0,224,0,0,174,0,0,183,0,0,178,0,0,188,0,0,177,0,0,179,0,0,192,0,0,198,0,0,171,0,0,179,0,0,15155232.0,910224,0,0,0,947202,947202,3985543553446462,3985600752950530,3985600752952613,3985543556586462
186,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,360,41874,41874,256,256,0,0,40,0,32,64,0x0,0x7e42d9869840,2453977,4,4459,4689,0,17940,180,2,0.0,3.0,1.0,0.0,1.0,3.0,0,0,0,0,0,0,198,0,0,230,0,0,175,0,0,198,0,0,231,1,0,167,0,0,178,0,0,184,0,0,177,0,0,190,0,0,168,0,0,166,0,0,171,0,0,164,0,0,9801248.0,575242,0,0,0,612578,612578,3985543554190221,3985600752958261,3985600752960465,3985543557829409
187,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,361,41874,41874,256,256,0,0,36,4,80,64,0x0,0x7e42d9247fc0,2404637,4,4510,5161,0,18120,180,0,0.0,3.0,1.0,0.0,1.0,3.0,180,1,0,182,0,0,179,1,0,183,0,0,173,0,0,171,0,0,175,0,0,169,0,0,198,0,0,190,0,0,177,0,0,212,0,0,0,0,0,0,0,0,171,0,0,0,0,0,9604400.0,563067,0,0,0,600275,600275,3985543554674627,3985600752968717,3985600752970880,3985543558987470
188,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,362,41874,41874,256,256,0,0,24,0,32,64,0x0,0x7e42d9869a40,3383073,4,5363,5441,0,21580,180,1,0.0,2.0,1.0,0.0,1.0,2.0,181,0,0,212,0,0,183,0,0,0,0,0,214,0,0,224,0,0,174,1,0,184,0,0,178,0,0,183,0,0,178,0,0,180,0,0,193,0,0,204,0,0,174,0,0,182,0,0,13518896.0,807374,0,0,0,844931,844931,3985543555627986,3985600752977970,3985600752980334,3985543560097240
189,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,363,41874,41874,256,256,0,0,36,4,80,64,0x0,0x7e42d8e53a80,3274461,4,5254,6025,0,21064,180,0,0.0,3.0,1.0,0.0,1.0,3.0,181,0,0,181,0,0,180,0,0,183,0,0,172,1,0,0,0,0,174,0,0,169,0,0,0,0,0,0,0,0,187,1,0,179,0,0,203,0,0,192,0,0,170,0,0,214,0,0,13084032.0,780355,0,0,0,817752,817752,3985543556029269,3985600752994355,3985600752996558,3985543561366906
190,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,364,41874,41874,256,256,512,0,8,0,32,64,0x0,0x7e42d8a8eec0,3520589,4,4272,4793,0,17204,159,0,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,179,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,177,0,0,194,0,0,202,0,0,215,0,0,169,0,0,167,0,0,170,0,0,0,0,0,14067760.0,841871,0,0,0,879235,879235,3985543557051519,3985600753010058,3985600753011981,3985543562546239
191,__amd_rocclr_copyBuffer.kd,2,0,365,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,3193957,8,4313,6777,0,17444,8,40,0.0,8.0,2.0,6.0,0.0,8.0,181,0,0,208,0,0,0,0,0,0,0,0,186,1,0,171,0,0,195,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12762624.0,759560,0,0,0,797664,797664,3985543558067761,3985600753017188,3985600753021354,3985543563632093
192,__amd_rocclr_fillBufferAligned.kd,2,0,367,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,404709,4,2561,3989,0,10376,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,194,0,0,183,0,0,0,0,0,170,1,0,0,0,0,0,0,0,192,0,0,182,0,0,212,0,0,201,0,0,169,0,0,218,0,0,0,0,0,164,0,0,1606112.0,62752,0,0,0,100382,100382,3985543563912558,3985600753054363,3985600753056486,3985543564892286
193,__amd_rocclr_fillBufferAligned.kd,2,0,368,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,2145861,4,2247,3213,0,9048,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,240,0,0,182,0,0,0,0,0,0,0,0,174,1,0,0,0,0,193,0,0,184,0,0,231,0,0,203,0,0,168,0,0,204,0,0,0,0,0,165,0,0,8569248.0,498206,0,0,0,535578,535578,3985543564872947,3985600753060332,3985600753061814,3985543566477859
194,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,369,41874,41874,256,256,0,0,8,0,16,64,0x0,0x7e4375721100,3170717,4,2266,3033,0,9188,13,2,0.0,2.0,1.0,3.0,0.0,17.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,180,0,0,165,0,0,12669824.0,754200,0,0,0,791864,791864,3985543565284445,3985600753074753,3985600753076596,3985543567644543
195,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,370,41874,41874,512,512,29184,0,52,4,48,64,0x0,0x7e42d8a8f040,2005141,8,14383,7485,0,57748,414,74,0.0,3.0,1.0,1.0,1.0,3.0,234,0,0,224,0,0,210,1,0,182,0,0,172,0,0,171,0,0,175,0,0,179,0,0,179,0,0,0,0,0,177,0,0,183,0,0,169,0,0,167,0,0,0,0,0,165,0,0,8006816.0,462845,0,0,0,500426,500426,3985543565685959,3985600753084127,3985600753086611,3985543568817606
196,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,371,41874,41874,256,256,0,0,8,0,32,64,0x0,0x7e42d8a8b900,4592821,4,2634,3605,0,10580,8,4,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,215,0,0,231,0,0,177,1,0,0,0,0,0,0,0,171,0,0,204,0,0,180,0,0,18355488.0,1109790,0,0,0,1147218,1147218,3985543566710493,3985600753100111,3985600753101993,3985543569889440
197,__amd_rocclr_copyBuffer.kd,2,0,372,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,3301485,8,4035,6577,0,16268,8,40,0.0,8.0,2.0,6.0,0.0,8.0,181,0,0,209,0,0,0,0,0,0,0,0,186,0,0,171,0,0,196,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13191584.0,786353,0,0,0,824474,824474,3985543567188119,3985600753112729,3985600753116255,3985543570701991
198,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,374,41874,41874,1024,128,0,0,20,4,64,64,0x0,0x7e437586ecc0,569413,16,26808,53901,0,107628,576,384,6850.0,128.0,16.0,328.0,0.0,512.0,1650,8,0,1773,8,0,1618,8,0,1740,8,0,1225,8,0,715,8,0,1472,8,0,1148,8,0,1624,8,0,1762,8,0,1612,8,0,1750,8,0,1234,8,0,675,8,0,1448,8,0,1087,8,0,2263888.0,108011,0,0,0,141493,141493,3985543571032078,3985600753145377,3985600753149904,3985543572064975
199,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,375,41874,41874,512,512,2560,48,28,4,80,64,0x0,0x7e4374218380,2731285,8,21191,11089,0,84988,399,34,67.0,17.0,1.0,206.0,1.0,257.0,193,8,0,207,8,0,179,8,0,190,8,0,200,8,0,170,8,0,0,8,0,179,8,0,180,8,0,200,8,0,178,8,0,194,8,0,169,8,0,175,8,0,186,8,0,195,8,0,10911664.0,644414,0,0,0,681979,681979,3985543572051605,3985600753153550,3985600753157836,3985543573756885
200,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,376,41874,41874,256,256,0,0,12,4,32,64,0x0,0x7e738bc557c0,3954765,4,2498,3421,0,10044,28,2,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,174,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,166,0,0,199,0,0,176,0,0,15805104.0,950314,0,0,0,987819,987819,3985543572499677,3985600753173138,3985600753174981,3985543574863070
201,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,377,41874,41874,256,256,0,0,24,0,32,64,0x0,0x7e42d9869a40,3114989,4,5057,5297,0,20308,180,1,0.0,2.0,1.0,0.0,1.0,2.0,181,0,0,212,0,0,179,0,0,0,0,0,215,1,0,224,0,0,175,0,0,184,0,0,178,0,0,184,0,0,178,0,0,179,0,0,194,0,0,203,0,0,175,0,0,181,0,0,12446592.0,740169,0,0,0,777912,777912,3985543572911956,3985600753181190,3985600753183394,3985543576086267
202,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,378,41874,41874,256,256,0,0,40,0,32,64,0x0,0x7e42d9869840,2051613,4,4434,4633,0,17784,180,2,0.0,3.0,1.0,0.0,1.0,3.0,0,0,0,0,0,0,179,0,0,210,0,0,188,0,0,214,0,0,228,1,0,168,0,0,178,0,0,184,0,0,178,0,0,191,0,0,169,0,0,168,0,0,171,0,0,165,0,0,8193152.0,474391,0,0,0,512072,512072,3985543573938623,3985600753199698,3985600753201741,3985543577256096
203,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,379,41874,41874,256,256,0,0,36,4,80,64,0x0,0x7e42d9247fc0,3246549,4,4481,5149,0,18052,180,0,0.0,3.0,1.0,0.0,1.0,3.0,189,1,0,181,0,0,179,1,0,183,0,0,171,0,0,170,0,0,174,0,0,169,0,0,197,0,0,189,0,0,177,0,0,211,0,0,0,0,0,0,0,0,170,0,0,0,0,0,12972544.0,773280,0,0,0,810784,810784,3985543574445693,3985600753207028,3985600753209031,3985543578495578
204,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,380,41874,41874,256,256,0,0,24,0,32,64,0x0,0x7e42d9869a40,3424269,4,5000,5061,0,20060,180,1,0.0,2.0,1.0,0.0,1.0,2.0,188,0,0,211,0,0,180,0,0,0,0,0,214,0,0,224,0,0,174,1,0,184,0,0,178,0,0,184,0,0,178,0,0,180,0,0,191,0,0,205,0,0,174,0,0,182,0,0,13683776.0,817835,0,0,0,855236,855236,3985543575291433,3985600753223373,3985600753225416,3985543579645497
205,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,381,41874,41874,256,256,0,0,36,4,80,64,0x0,0x7e42d8e53a80,3507557,4,5220,6017,0,20960,180,0,0.0,3.0,1.0,0.0,1.0,3.0,180,0,0,181,0,0,180,0,0,183,0,0,173,1,0,0,0,0,174,0,0,168,0,0,0,0,0,0,0,0,187,1,0,179,0,0,204,0,0,192,0,0,171,0,0,214,0,0,14016576.0,838319,0,0,0,876036,876036,3985543576306923,3985600753239116,3985600753241119,3985543580696420
206,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,382,41874,41874,256,256,512,0,8,0,32,64,0x0,0x7e42d8a8eec0,3070781,4,4254,4729,0,17076,159,0,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,179,1,0,0,0,0,0,0,0,170,0,0,0,0,0,0,0,0,178,0,0,195,0,0,203,0,0,216,0,0,169,0,0,168,0,0,170,0,0,0,0,0,12269648.0,729176,0,0,0,766853,766853,3985543576761275,3985600753253697,3985600753255580,3985543581803385
207,__amd_rocclr_copyBuffer.kd,2,0,383,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,3716345,8,3695,6537,0,14876,8,40,0.0,8.0,2.0,6.0,0.0,8.0,180,0,0,194,0,0,0,0,0,0,0,0,172,1,0,0,0,0,181,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14850768.0,889802,0,0,0,928173,928173,3985543577681364,3985600753261068,3985600753264994,3985543582533965
208,__amd_rocclr_fillBufferAligned.kd,2,0,385,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,410553,4,2411,3641,0,9720,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,179,0,0,196,0,0,0,0,0,0,0,0,0,0,0,0,0,0,193,0,0,184,0,0,230,0,0,203,0,0,0,0,0,204,0,0,0,0,0,165,1,0,1628592.0,63790,0,0,0,101787,101787,3985543582840818,3985600753287908,3985600753289871,3985543583815559
209,__amd_rocclr_fillBufferAligned.kd,2,0,386,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,4482809,4,2325,3081,0,9396,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,190,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,0,0,183,0,0,214,1,0,0,0,0,169,0,0,191,0,0,0,0,0,165,0,0,17917552.0,1082233,0,0,0,1119847,1119847,3985543583796250,3985600753293676,3985600753295118,3985543585132224
210,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,387,41874,41874,256,256,0,0,8,0,16,64,0x0,0x7e4375721100,4434423,4,2451,3173,0,9868,13,2,0.0,2.0,1.0,3.0,0.0,17.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,180,0,0,165,0,0,17728608.0,1070434,0,0,0,1108038,1108038,3985543584237292,3985600753308218,3985600753310101,3985543586109398
211,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,388,41874,41874,512,512,29184,0,52,4,48,64,0x0,0x7e42d8a8f040,3583845,8,13403,6981,0,53732,414,74,0.0,3.0,1.0,1.0,1.0,3.0,235,0,0,224,0,0,210,1,0,182,0,0,172,0,0,170,0,0,174,0,0,180,0,0,178,0,0,0,0,0,178,0,0,194,0,0,180,0,0,167,0,0,0,0,0,168,0,0,14321248.0,857283,0,0,0,895078,895078,3985543584611575,3985600753328848,3985600753331372,3985543587373146
212,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,389,41874,41874,256,256,0,0,8,0,32,64,0x0,0x7e42d8a8b900,3997933,4,2999,4017,0,12072,8,4,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,180,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,214,0,0,230,0,0,177,1,0,0,0,0,0,0,0,171,0,0,203,0,0,180,0,0,15979072.0,960644,0,0,0,998692,998692,3985543585658452,3985600753336460,3985600753338382,3985543588388807
213,__amd_rocclr_copyBuffer.kd,2,0,390,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,3198701,8,4259,6697,0,17244,8,40,0.0,8.0,2.0,6.0,0.0,8.0,0,0,0,208,0,0,0,0,0,0,0,0,186,0,0,170,0,0,199,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12781568.0,759909,0,0,0,798848,798848,3985543586546494,3985600753350120,3985600753353885,3985543589504585
214,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,392,41874,41874,1024,128,0,0,20,4,64,64,0x0,0x7e437586ecc0,562477,16,26380,53007,0,105860,576,384,4589.0,128.0,16.0,316.0,0.0,512.0,1597,8,0,1548,8,0,1599,8,0,1709,8,0,1226,8,0,694,8,0,1424,8,0,1109,8,0,1572,8,0,1534,8,0,1553,8,0,1693,8,0,1177,8,0,684,8,0,1440,8,0,1112,8,0,2237072.0,106621,0,0,0,139817,139817,3985543590042180,3985600753383289,3985600753387415,3985543590998112
215,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,393,41874,41874,512,512,2560,48,28,4,80,64,0x0,0x7e4374218380,3445769,8,20972,10941,0,84016,399,34,79.0,17.0,1.0,238.0,1.0,257.0,194,8,0,209,8,0,180,8,0,189,8,0,172,8,0,171,8,0,0,8,0,180,8,0,197,8,0,216,8,0,178,8,0,194,8,0,169,8,0,174,8,0,184,8,0,193,8,0,13768384.0,823131,0,0,0,860524,860524,3985543590985083,3985600753391060,3985600753395547,3985543592388166
216,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,394,41874,41874,256,256,0,0,12,4,32,64,0x0,0x7e738bc557c0,3913757,4,2637,3733,0,10640,28,2,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,174,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,171,0,0,204,0,0,180,0,0,15639952.0,939994,0,0,0,977497,977497,3985543591418313,3985600753412972,3985600753414895,3985543593423556
217,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,395,41874,41874,256,256,0,0,24,0,32,64,0x0,0x7e42d9869a40,4243325,4,5554,5801,0,22328,180,1,0.0,2.0,1.0,0.0,1.0,2.0,181,0,0,211,0,0,179,0,0,0,0,0,214,1,0,227,0,0,174,0,0,183,0,0,178,0,0,184,0,0,178,0,0,179,0,0,173,0,0,178,0,0,170,0,0,164,0,0,16960160.0,1022184,0,0,0,1060010,1060010,3985543591810783,3985600753420984,3985600753423308,3985543594505315
218,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,396,41874,41874,256,256,0,0,40,0,32,64,0x0,0x7e42d9869840,6233537,4,4772,4985,0,19164,180,2,0.0,3.0,1.0,0.0,1.0,3.0,0,0,0,0,0,0,193,0,0,225,0,0,171,0,0,196,0,0,227,1,0,168,0,0,178,0,0,183,0,0,176,0,0,190,0,0,169,0,0,167,0,0,172,0,0,165,0,0,24921248.0,1519577,0,0,0,1557578,1557578,3985543592851160,3985600753430879,3985600753432962,3985543595656386
219,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,397,41874,41874,256,256,0,0,36,4,80,64,0x0,0x7e42d9247fc0,5744957,4,4597,5245,0,18468,180,0,0.0,3.0,1.0,0.0,1.0,3.0,189,1,0,182,0,0,180,1,0,184,0,0,173,0,0,171,0,0,174,0,0,168,0,0,198,0,0,190,0,0,178,0,0,211,0,0,169,0,0,0,0,0,171,0,0,0,0,0,22966368.0,1397924,0,0,0,1435398,1435398,3985543593897997,3985600753439852,3985600753441935,3985543596792575
220,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,398,41874,41874,256,256,0,0,24,0,32,64,0x0,0x7e42d9869a40,3650025,4,5417,5493,0,21768,180,1,0.0,2.0,1.0,0.0,1.0,2.0,181,0,0,182,0,0,180,0,0,0,0,0,214,0,0,223,0,0,190,1,0,199,0,0,178,0,0,183,0,0,178,0,0,180,0,0,186,0,0,167,0,0,171,0,0,173,0,0,14584192.0,874050,0,0,0,911512,911512,3985543594968029,3985600753455876,3985600753458079,3985543597876046
221,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,399,41874,41874,256,256,0,0,36,4,80,64,0x0,0x7e42d8e53a80,2267045,4,5556,6381,0,22348,180,0,0.0,3.0,1.0,0.0,1.0,3.0,180,0,0,181,0,0,179,0,0,186,0,0,171,1,0,0,0,0,174,0,0,168,0,0,0,0,0,0,0,0,187,1,0,179,0,0,187,0,0,168,0,0,171,0,0,197,0,0,9053344.0,528043,0,0,0,565834,565834,3985543595889020,3985600753471098,3985600753473261,3985543599047477
222,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,400,41874,41874,256,256,512,0,8,0,32,64,0x0,0x7e42d8a8eec0,3123933,4,4425,4937,0,17792,159,0,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,180,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0,194,0,0,202,0,0,216,0,0,169,0,0,166,0,0,171,0,0,0,0,0,12482512.0,743084,0,0,0,780157,780157,3985543596392093,3985600753487162,3985600753489085,3985543600245928
223,__amd_rocclr_copyBuffer.kd,2,0,401,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,3103413,8,4603,7085,0,18572,8,40,0.0,8.0,2.0,6.0,0.0,8.0,181,0,0,208,0,0,0,0,0,0,0,0,186,1,0,171,0,0,195,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12399648.0,737197,0,0,0,774978,774978,3985543597198054,3985600753494132,3985600753497137,3985543601440804
224,__amd_rocclr_fillBufferAligned.kd,2,0,403,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,413029,4,2666,4181,0,10780,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,195,0,0,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,1,0,0,0,0,216,0,0,188,0,0,168,0,0,189,0,0,0,0,0,165,0,0,1638208.0,64568,0,0,0,102388,102388,3985543602035733,3985600753525979,3985600753527702,3985543603062991
225,__amd_rocclr_fillBufferAligned.kd,2,0,404,41874,41874,256,256,0,0,12,4,48,64,0x0,0x7e7b9196ba00,2682885,4,2417,3337,0,9716,13,11,0.0,2.0,2.0,0.0,0.0,2.0,0,0,0,0,0,0,193,0,0,182,1,0,0,0,0,0,0,0,0,0,0,0,0,0,189,0,0,183,0,0,230,0,0,203,0,0,169,0,0,204,0,0,0,0,0,164,0,0,10718624.0,632355,0,0,0,669914,669914,3985543603042951,3985600753531668,3985600753533150,3985543604679970
226,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,405,41874,41874,256,256,0,0,8,0,16,64,0x0,0x7e4375721100,2470197,4,2638,3389,0,10652,13,2,0.0,2.0,1.0,3.0,0.0,17.0,0,0,0,181,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,180,0,0,165,0,0,9866848.0,579482,0,0,0,616678,616678,3985543603445235,3985600753536875,3985600753538798,3985543605947874
227,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,406,41874,41874,512,512,29184,0,52,4,48,64,0x0,0x7e42d8a8f040,3068621,8,13867,7225,0,55660,414,74,0.0,3.0,1.0,1.0,1.0,3.0,234,0,0,223,0,0,193,1,0,182,0,0,173,0,0,171,0,0,174,0,0,195,0,0,178,0,0,0,0,0,177,0,0,194,0,0,181,0,0,167,0,0,0,0,0,165,0,0,12261408.0,729126,0,0,0,766338,766338,3985543603835592,3985600753548452,3985600753551257,3985543607074178
228,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,407,41874,41874,256,256,0,0,8,0,32,64,0x0,0x7e42d8a8b900,2376821,4,3194,4257,0,12900,8,4,0.0,2.0,1.0,0.0,1.0,2.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,0,0,206,0,0,223,0,0,178,1,0,0,0,0,0,0,0,167,0,0,179,0,0,189,0,0,9493200.0,555869,0,0,0,593325,593325,3985543604276143,3985600753564997,3985600753566960,3985543608245739
229,__amd_rocclr_copyBuffer.kd,2,0,408,41874,41874,512,512,0,0,16,0,32,64,0x0,0x7e7b9196ba80,4040357,8,4059,6537,0,16348,8,40,0.0,8.0,2.0,6.0,0.0,8.0,181,0,0,194,0,0,0,0,0,0,0,0,172,0,0,0,0,0,181,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16148032.0,971285,0,0,0,1009252,1009252,3985543605116335,3985600753579258,3985600753582463,3985543609445703
