Dispatch_ID,Kernel_Name,GPU_ID,queue-id,queue-index,pid,tid,Grid_Size,Workgroup_Size,LDS_Per_Workgroup,Scratch_Per_Workitem,Arch_VGPR,Accum_VGPR,SGPR,wave_size,sig,obj,SQ_WAVES,SQ_IFETCH,SQ_IFETCH_LEVEL,SQ_ACCUM_PREV_HIRES,SQ_INSTS_VALU_TRANS_F16,SQ_INSTS_VALU_ADD_F32,SQ_INSTS_VALU_MUL_F32,SQ_INSTS_VALU_FMA_F32,TA_BUFFER_ATOMIC_WAVEFRONTS_sum,TA_BUFFER_TOTAL_CYCLES_sum,TD_ATOMIC_WAVEFRONT_sum,TD_STORE_WAVEFRONT_sum,TCP_VOLATILE_sum,TCP_TOTAL_ACCESSES_sum,TCP_TOTAL_READ_sum,TCP_TOTAL_WRITE_sum,TCC_EA0_RDREQ[0],TCC_EA0_RDREQ_32B[0],TCC_EA0_WRREQ[0],TCC_EA0_WRREQ_64B[0],TCC_EA0_RDREQ[1],TCC_EA0_RDREQ_32B[1],TCC_EA0_WRREQ[1],TCC_EA0_WRREQ_64B[1],TCC_EA0_RDREQ[2],TCC_EA0_RDREQ_32B[2],TCC_EA0_WRREQ[2],TCC_EA0_WRREQ_64B[2],TCC_EA0_RDREQ[3],TCC_EA0_RDREQ_32B[3],TCC_EA0_WRREQ[3],TCC_EA0_WRREQ_64B[3],TCC_EA0_RDREQ[4],TCC_EA0_RDREQ_32B[4],TCC_EA0_WRREQ[4],TCC_EA0_WRREQ_64B[4],TCC_EA0_RDREQ[5],TCC_EA0_RDREQ_32B[5],TCC_EA0_WRREQ[5],TCC_EA0_WRREQ_64B[5],TCC_EA0_RDREQ[6],TCC_EA0_RDREQ_32B[6],TCC_EA0_WRREQ[6],TCC_EA0_WRREQ_64B[6],TCC_EA0_RDREQ[7],TCC_EA0_RDREQ_32B[7],TCC_EA0_WRREQ[7],TCC_EA0_WRREQ_64B[7],TCC_EA0_RDREQ[8],TCC_EA0_RDREQ_32B[8],TCC_EA0_WRREQ[8],TCC_EA0_WRREQ_64B[8],TCC_EA0_RDREQ[9],TCC_EA0_RDREQ_32B[9],TCC_EA0_WRREQ[9],TCC_EA0_WRREQ_64B[9],TCC_EA0_RDREQ[10],TCC_EA0_RDREQ_32B[10],TCC_EA0_WRREQ[10],TCC_EA0_WRREQ_64B[10],TCC_EA0_RDREQ[11],TCC_EA0_RDREQ_32B[11],TCC_EA0_WRREQ[11],TCC_EA0_WRREQ_64B[11],TCC_EA0_RDREQ[12],TCC_EA0_RDREQ_32B[12],TCC_EA0_WRREQ[12],TCC_EA0_WRREQ_64B[12],TCC_EA0_RDREQ[13],TCC_EA0_RDREQ_32B[13],TCC_EA0_WRREQ[13],TCC_EA0_WRREQ_64B[13],TCC_EA0_RDREQ[14],TCC_EA0_RDREQ_32B[14],TCC_EA0_WRREQ[14],TCC_EA0_WRREQ_64B[14],TCC_EA0_RDREQ[15],TCC_EA0_RDREQ_32B[15],TCC_EA0_WRREQ[15],TCC_EA0_WRREQ_64B[15],CPC_CPC_STAT_STALL,CPC_UTCL1_STALL_ON_TRANSLATION,CPF_CPF_STAT_IDLE,CPF_CPF_TCIU_IDLE,SPI_RA_REQ_NO_ALLOC,SPI_RA_REQ_NO_ALLOC_CSN,GRBM_COUNT,GRBM_GUI_ACTIVE,DispatchNs,Start_Timestamp,End_Timestamp,CompleteNs
0,"void at::native::(anonymous namespace)::distribution_elementwise_grid_stride_kernel<float, 4, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}>(long, at::PhiloxCudaState, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}) [clone .kd]",2,0,0,40886,40886,622592,256,0,0,56,0,48,64,0x0,0x7e1e1c92bf80,9728,11696640,2555456,204283832,0,1050624,4210176,4200448,0.0,0.0,0.0,1048576.0,16777216.0,16777216.0,0.0,16777216.0,32,0,131072,131072,24,0,131072,131072,49,0,131072,131072,40,0,131072,131072,39,0,131072,131072,63,0,131072,131072,32,0,131072,131072,32,0,131072,131072,32,0,131072,131072,24,0,131072,131072,47,0,131072,131072,40,0,131072,131072,38,0,131072,131072,64,0,131072,131072,32,0,131072,131072,32,0,131072,131072,202354,9417,0,1394029,97,9825,1431804,1431804,3985519360376332,3985600464261405,3985600464349455,3985519369971380
1,"void at::native::vectorized_elementwise_kernel<8, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul> >(int, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,1,40886,40886,8388608,256,0,0,20,4,32,64,0x0,0x7de600e46d40,131072,2097152,524947,41874100,0,0,524288,0,0.0,0.0,0.0,131072.0,16777216.0,16777216.0,8388608.0,8388608.0,65556,0,131072,131072,65568,0,131072,131072,65587,0,131072,131072,65568,0,131072,131072,65585,0,131072,131072,65600,0,131072,131072,65552,0,131072,131072,65536,0,131072,131072,65556,0,131072,131072,65568,0,131072,131072,65589,0,131072,131072,65568,0,131072,131072,65583,0,131072,131072,65599,0,131072,131072,65552,0,131072,131072,65536,0,131072,131072,48942,957,0,1587361,1183339,945016,1607416,1607416,3985519375419371,3985600469372577,3985600469465073,3985519376060809
2,"void at::native::(anonymous namespace)::distribution_elementwise_grid_stride_kernel<float, 4, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}>(long, at::PhiloxCudaState, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}) [clone .kd]",2,0,2,40886,40886,622592,256,0,0,56,0,48,64,0x0,0x7e1e1c92bf80,9728,11696640,2561786,204932616,0,1050624,4210176,4200448,0.0,0.0,0.0,1048576.0,16777216.0,16777216.0,0.0,16777216.0,32,0,131072,131072,24,0,131072,131072,32,0,131072,131072,40,0,131072,131072,32,0,131072,131072,32,0,131072,131072,32,0,131072,131072,40,0,131072,131072,32,0,131072,131072,24,0,131072,131072,32,0,131072,131072,40,0,131072,131072,32,0,131072,131072,32,0,131072,131072,32,0,131072,131072,40,0,131072,131072,281336,8562,0,1835237,97,9825,1872811,1872811,3985519376086878,3985600469465073,3985600469551601,3985519377921288
3,"void at::native::vectorized_elementwise_kernel<8, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul> >(int, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,3,40886,40886,8388608,256,0,0,20,4,32,64,0x0,0x7de600e46d40,131072,2097152,583046,46514260,0,0,524288,0,0.0,0.0,0.0,131072.0,16777216.0,16777216.0,8388608.0,8388608.0,65556,0,131072,131072,65580,0,131072,131072,65587,0,131072,131072,65568,0,131072,131072,65565,0,131072,131072,65584,0,131072,131072,65577,0,131072,131072,65560,0,131072,131072,65556,0,131072,131072,65580,0,131072,131072,65588,0,131072,131072,65569,0,131072,131072,65568,0,131072,131072,65588,0,131072,131072,65579,0,131072,131072,65561,0,131072,131072,245584,11571,0,2341007,1202115,961535,2414000,2414000,3985519376647686,3985600469551601,3985600469639410,3985519379388596
4,"void at::native::elementwise_kernel_manual_unroll<128, 8, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,4,40886,40886,8388608,128,0,0,40,0,64,64,0x0,0x7de60086f6c0,131072,14548992,2979352,238308168,0,0,0,0,0.0,0.0,0.0,1048576.0,83886080.0,83886080.0,67108864.0,16777216.0,65588,0,131072,131072,65576,0,131072,131072,65600,0,131072,131072,65584,0,131072,131072,65593,0,131072,131072,65622,0,131072,131072,65589,0,131072,131072,65587,0,131072,131072,65588,0,131072,131072,65576,0,131072,131072,65601,0,131072,131072,65584,0,131072,131072,65592,0,131072,131072,65621,0,131072,131072,65587,0,131072,131072,65590,0,131072,131072,113260,957,0,5383225,4575978,3052596,5402514,5402514,3985519384212835,3985600476294902,3985600476646741,3985519385084674
5,__amd_rocclr_fillBufferAligned.kd,2,0,5,40886,40886,77824,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,1216,116992,90937,7268340,0,0,0,0,0.0,0.0,0.0,25600.0,1638400.0,1638400.0,0.0,1638400.0,16,0,25600,25600,4,0,25600,25600,41,0,25600,25600,36,0,25600,25600,28,0,25600,25600,20,0,25600,25600,0,0,25600,25600,14,0,25600,25600,16,0,25600,25600,4,0,25600,25600,40,0,25600,25600,36,0,25600,25600,28,0,25600,25600,20,0,25600,25600,0,0,25600,25600,13,0,25600,25600,59183,10568,0,209865,59,1275,233904,233904,3985519399346418,3985600479242372,3985600479253949,3985519399922159
6,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,6,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12660376,1012733984,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,899484,0,131072,131072,899478,0,131072,131072,899514,0,131072,131072,899423,0,131072,131072,900044,0,131072,131072,900017,0,131072,131072,899899,0,131072,131072,899710,0,131072,131072,899860,0,131072,131072,899780,0,131072,131072,899603,0,131072,131072,899400,0,131072,131072,899649,0,131072,131072,899518,0,131072,131072,899687,0,131072,131072,899582,0,131072,131072,950885,1653,0,16844182,12565371,19580,16907434,16907434,3985519490868291,3985600568206057,3985600569423053,3985519492910719
7,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,7,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12662712,1012997252,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,819672,0,131072,131072,819820,0,131072,131072,819495,0,131072,131072,819594,0,131072,131072,819751,0,131072,131072,819941,0,131072,131072,819567,0,131072,131072,819727,0,131072,131072,819746,0,131072,131072,819918,0,131072,131072,819545,0,131072,131072,819644,0,131072,131072,819796,0,131072,131072,819964,0,131072,131072,819553,0,131072,131072,819699,0,131072,131072,1241178,2323,0,16653766,12312579,17495,17119819,17119819,3985519491681582,3985600569423053,3985600570876317,3985519495330815
8,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,8,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12675699,1013877160,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,819447,0,131072,131072,819413,0,131072,131072,819367,0,131072,131072,819316,0,131072,131072,819479,0,131072,131072,819492,0,131072,131072,819435,0,131072,131072,819401,0,131072,131072,819358,0,131072,131072,819416,0,131072,131072,819324,0,131072,131072,819333,0,131072,131072,819446,0,131072,131072,819512,0,131072,131072,819320,0,131072,131072,819339,0,131072,131072,1224945,4722,0,16588995,12318531,17953,16987841,16987841,3985519492279897,3985600570876317,3985600573097956,3985519497654068
9,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,9,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12687263,1014733652,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,822100,0,131072,131072,822003,0,131072,131072,822046,0,131072,131072,821883,0,131072,131072,822037,0,131072,131072,821977,0,131072,131072,821850,0,131072,131072,821749,0,131072,131072,821946,0,131072,131072,821825,0,131072,131072,821823,0,131072,131072,821677,0,131072,131072,821993,0,131072,131072,821967,0,131072,131072,821942,0,131072,131072,821861,0,131072,131072,1331192,4956,0,17061457,12375038,18841,17496882,17496882,3985519492777001,3985600573097956,3985600574918242,3985519499811215
10,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,10,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12704022,1016661152,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,830161,0,131072,131072,830040,0,131072,131072,829985,0,131072,131072,829829,0,131072,131072,830135,0,131072,131072,830062,0,131072,131072,830039,0,131072,131072,829937,0,131072,131072,829981,0,131072,131072,829844,0,131072,131072,830068,0,131072,131072,829919,0,131072,131072,830141,0,131072,131072,830065,0,131072,131072,830076,0,131072,131072,829912,0,131072,131072,1299441,4748,0,16832115,12396960,19479,17311716,17311716,3985519493287205,3985600574918242,3985600576577090,3985519501931448
11,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,11,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12734784,1018513456,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,832313,0,131072,131072,832437,0,131072,131072,832401,0,131072,131072,832478,0,131072,131072,832227,0,131072,131072,832295,0,131072,131072,832316,0,131072,131072,832455,0,131072,131072,832265,0,131072,131072,832304,0,131072,131072,832414,0,131072,131072,832390,0,131072,131072,832415,0,131072,131072,832540,0,131072,131072,832487,0,131072,131072,832547,0,131072,131072,1353931,4905,0,17343366,12440088,25925,17836369,17836369,3985519493817589,3985600576577090,3985600578183701,3985519504086713
12,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,12,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12704585,1016150460,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,898516,0,131072,131072,898824,0,131072,131072,898222,0,131072,131072,898248,0,131072,131072,898627,0,131072,131072,898773,0,131072,131072,897971,0,131072,131072,898197,0,131072,131072,898424,0,131072,131072,898585,0,131072,131072,898180,0,131072,131072,898425,0,131072,131072,898593,0,131072,131072,898889,0,131074,131074,898104,0,131072,131072,898296,0,131072,131072,1477679,5762,0,17932173,12714242,57080,18466810,18466810,3985519494697639,3985600578183701,3985600579757224,3985519506316658
13,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,13,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12719715,1017686844,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,850314,0,131072,131072,850339,0,131072,131072,850761,0,131072,131072,850618,0,131072,131072,850417,0,131072,131072,850454,0,131072,131072,850868,0,131072,131072,850796,0,131072,131072,850606,0,131072,131072,850642,0,131072,131072,851040,0,131072,131072,851005,0,131072,131072,850371,0,131072,131072,850503,0,131072,131072,850878,0,131072,131072,850786,0,131072,131072,1288438,5192,0,17250181,12948106,28610,17801226,17801226,3985519495198799,3985600579757224,3985600581308673,3985519508813929
14,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,14,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12720419,1017759356,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,825381,0,131072,131072,825420,0,131072,131072,825390,0,131072,131072,825465,0,131072,131072,825492,0,131072,131072,825576,0,131072,131072,825510,0,131072,131072,825551,0,131072,131072,825353,0,131072,131072,825453,0,131072,131072,825464,0,131072,131072,825491,0,131072,131072,825491,0,131072,131072,825552,0,131072,131072,825484,0,131072,131072,825570,0,131072,131072,1347953,4812,0,17121835,12431191,18694,17636383,17636383,3985519495695133,3985600581308673,3985600582829838,3985519510986369
15,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,15,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12730984,1018546196,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,822058,0,131072,131072,822171,0,131072,131072,822105,0,131072,131072,822127,0,131072,131072,822126,0,131072,131072,822314,0,131072,131072,822086,0,131072,131072,822121,0,131072,131072,822060,0,131072,131072,822215,0,131072,131072,822156,0,131072,131072,822134,0,131072,131072,822138,0,131072,131072,822223,0,131072,131072,822125,0,131072,131072,822161,0,131072,131072,1251241,4908,0,16604520,12443953,27018,17124209,17124209,3985519496213108,3985600582829838,3985600584342270,3985519513085781
16,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,16,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12706303,1016644556,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,829809,0,131072,131072,830034,0,131072,131072,829827,0,131072,131072,829844,0,131072,131072,829801,0,131072,131072,829952,0,131072,131072,829769,0,131072,131072,829803,0,131072,131072,829692,0,131072,131072,829934,0,131072,131072,829830,0,131072,131072,829867,0,131072,131072,829918,0,131072,131072,830118,0,131072,131072,829857,0,131072,131072,829948,0,131072,131072,1435748,5086,0,17486877,12427028,20044,18019795,18019795,3985519497058097,3985600584342270,3985600585816646,3985519515295186
17,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,17,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12684596,1014871124,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,835307,0,131072,131072,835305,0,131072,131072,835142,0,131072,131072,835153,0,131072,131072,835081,0,131072,131072,835130,0,131072,131072,835079,0,131072,131072,835074,0,131072,131072,835051,0,131072,131072,835109,0,131072,131072,835031,0,131072,131072,835094,0,131072,131072,835187,0,131072,131072,835207,0,131072,131072,835104,0,131072,131072,835086,0,131072,131072,1510775,5259,0,17964785,12442193,18598,18482504,18482504,3985519497552377,3985600585816646,3985600587279205,3985519517836952
18,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,18,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12724068,1017915932,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,837786,0,131072,131072,837729,0,131072,131072,837917,0,131072,131072,837665,0,131072,131072,837812,0,131072,131072,837641,0,131072,131072,837668,0,131072,131072,837510,0,131072,131072,837570,0,131072,131072,837431,0,131072,131072,837451,0,131072,131072,837275,0,131072,131072,837840,0,131072,131072,837764,0,131072,131072,837881,0,131072,131072,837804,0,131072,131072,1337390,4926,0,17162518,12489573,21926,17693516,17693516,3985519498031105,3985600587279205,3985600588722455,3985519520006468
19,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,19,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12730095,1018266296,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,834501,0,131072,131072,834502,0,131072,131072,834524,0,131072,131072,834524,0,131072,131072,834500,0,131072,131072,834536,0,131072,131072,834576,0,131072,131072,834602,0,131072,131072,834557,0,131072,131072,834562,0,131072,131072,834592,0,131072,131072,834672,0,131072,131072,834668,0,131072,131072,834748,0,131072,131072,834658,0,131072,131072,834697,0,131072,131072,1467689,5206,0,17555826,12467480,21264,18114205,18114205,3985519498563011,3985600588722455,3985600590164863,3985519522321629
20,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,20,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12705218,1016236568,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,840345,0,131072,131072,840422,0,131072,131072,840365,0,131072,131072,840308,0,131072,131072,840146,0,131072,131072,840205,0,131072,131072,840213,0,131072,131072,840180,0,131072,131072,839990,0,131072,131072,840134,0,131072,131072,840130,0,131072,131072,840078,0,131072,131072,840409,0,131072,131072,840494,0,131072,131072,840464,0,131072,131072,840447,0,131072,131072,1407158,5259,0,17415813,12442324,19323,17935374,17935374,3985519499417434,3985600590164863,3985600591581314,3985519524782906
21,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,21,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12746727,1019719568,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,832056,0,131072,131072,832053,0,131072,131072,832563,0,131072,131072,832460,0,131072,131072,832118,0,131072,131072,832135,0,131072,131072,832076,0,131072,131072,832034,0,131072,131072,831899,0,131072,131072,831935,0,131072,131072,832105,0,131072,131072,832059,0,131072,131072,832123,0,131072,131072,832199,0,131072,131072,832564,0,131072,131072,832536,0,131072,131072,1407129,5129,0,17321108,12484400,21178,17822512,17822512,3985519499908399,3985600591581314,3985600592985666,3985519527078929
22,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,22,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12703812,1016238420,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,834469,0,131072,131072,834445,0,131072,131072,834641,0,131072,131072,834594,0,131072,131072,834583,0,131072,131072,834529,0,131072,131072,834734,0,131072,131072,834680,0,131072,131072,834395,0,131072,131072,834314,0,131072,131072,834678,0,131072,131072,834675,0,131072,131072,834516,0,131072,131072,834529,0,131072,131072,834689,0,131072,131072,834671,0,131072,131072,1371966,5226,0,17084804,12483789,19879,17608697,17608697,3985519500392414,3985600592985666,3985600594392983,3985519529330436
23,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,23,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12716633,1017414020,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,851669,0,131072,131072,851702,0,131072,131072,852135,0,131072,131072,852111,0,131072,131072,852029,0,131072,131072,852030,0,131072,131072,852264,0,131072,131072,852276,0,131072,131072,851983,0,131072,131072,851970,0,131072,131072,852344,0,131072,131072,852267,0,131072,131072,851829,0,131072,131072,851843,0,131072,131072,852181,0,131072,131072,852121,0,131072,131072,1451196,5258,0,17753050,12466971,23897,18231056,18231056,3985519501345853,3985600594392983,3985600595785959,3985519531750813
24,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,24,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12716931,1017390900,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,851575,0,131072,131072,851832,0,131072,131072,851882,0,131072,131072,852019,0,131072,131072,851442,0,131072,131072,851823,0,131072,131072,851926,0,131072,131072,852175,0,131072,131072,851387,0,131072,131072,851774,0,131072,131072,851979,0,131072,131072,852186,0,131072,131072,851770,0,131072,131072,851961,0,131072,131072,851976,0,131072,131072,852182,0,131072,131072,1372255,5020,0,17426182,12491283,27450,17882544,17882544,3985519501853513,3985600595785959,3985600597184383,3985519534054206
25,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,25,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12713961,1017165180,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,843407,0,131072,131072,843408,0,131072,131072,843345,0,131072,131072,843217,0,131072,131072,843318,0,131072,131072,843372,0,131072,131072,843242,0,131072,131072,843186,0,131072,131072,843348,0,131072,131072,843349,0,131072,131072,843284,0,131072,131072,843187,0,131072,131072,843644,0,131072,131072,843586,0,131072,131072,843391,0,131072,131072,843384,0,131072,131072,1357395,5057,0,17211407,12506447,18403,17725552,17725552,3985519502337018,3985600597184383,3985600598575156,3985519536197363
26,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,28,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12744496,1019531192,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,843965,0,131072,131072,844383,0,131072,131072,843582,0,131072,131072,843694,0,131072,131072,843855,0,131072,131072,844311,0,131072,131072,843662,0,131072,131072,843753,0,131072,131072,843834,0,131072,131072,844177,0,131072,131072,843601,0,131072,131072,843744,0,131072,131072,844016,0,131072,131072,844445,0,131072,131072,843585,0,131072,131072,843749,0,131072,131072,949450,10623,0,16786803,12511115,18572,16846892,16846892,3985519537806401,3985600598683315,3985600600065555,3985519540258304
27,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,32,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12771722,1021971820,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,841930,0,131072,131072,841949,0,131072,131072,842117,0,131072,131072,842143,0,131072,131072,841933,0,131072,131072,841962,0,131072,131072,842107,0,131072,131072,842158,0,131072,131072,841941,0,131072,131072,841977,0,131072,131072,842180,0,131072,131072,842144,0,131072,131072,842011,0,131072,131072,842074,0,131072,131072,842055,0,131072,131072,842129,0,131072,131072,951518,11429,0,16790556,12521884,22076,16862197,16862197,3985519541384869,3985600600117832,3985600601459132,3985519543923831
28,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,36,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12721417,1017697856,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,877240,0,131072,131072,877252,0,131072,131072,877645,0,131072,131072,877533,0,131072,131072,877073,0,131072,131072,877095,0,131072,131072,877465,0,131072,131072,877284,0,131072,131072,877148,0,131072,131072,877061,0,131072,131072,877476,0,131072,131072,877342,0,131072,131072,877361,0,131072,131072,877260,0,131072,131072,877741,0,131072,131072,877600,0,131072,131072,942316,10378,0,17196557,12932156,18731,17239127,17239127,3985519544809069,3985600601501274,3985600602853830,3985519547304937
29,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,40,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12736141,1018915660,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,869377,0,131072,131072,869208,0,131072,131072,869573,0,131072,131072,869304,0,131072,131072,869233,0,131072,131072,869159,0,131072,131072,869366,0,131072,131072,869202,0,131072,131072,869320,0,131072,131072,869150,0,131072,131072,869285,0,131072,131072,869115,0,131072,131072,869217,0,131072,131072,869110,0,131072,131072,869546,0,131072,131072,869279,0,131072,131072,942160,11166,0,16738969,12484404,21592,16788776,16788776,3985519548437150,3985600602893168,3985600604288107,3985519551007058
30,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,44,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12707533,1016930760,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,847399,0,131072,131072,847618,0,131072,131072,848320,0,131072,131072,848649,0,131072,131072,847587,0,131072,131072,847806,0,131072,131072,848498,0,131072,131072,848729,0,131072,131072,847503,0,131072,131072,847637,0,131072,131072,848358,0,131072,131072,848608,0,131072,131072,847513,0,131072,131072,847759,0,131072,131072,848341,0,131072,131072,848550,0,131072,131072,941821,10178,0,17158984,12903566,23373,17205417,17205417,3985519551841531,3985600604330289,3985600605690497,3985519554347984
31,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,48,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12725288,1018214636,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,835724,0,131072,131072,835708,0,131072,131072,835736,0,131072,131072,835664,0,131072,131072,835705,0,131072,131072,835750,0,131072,131072,835636,0,131072,131072,835586,0,131072,131072,835752,0,131072,131072,835723,0,131072,131072,835674,0,131072,131072,835594,0,131072,131072,835842,0,131072,131072,835819,0,131072,131072,835704,0,131072,131072,835665,0,131072,131072,943515,11051,0,16744055,12476906,31193,16792030,16792030,3985519555469091,3985600605732999,3985600607091044,3985519557995494
32,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,52,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12673712,1013677276,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,852545,0,131072,131072,852777,0,131072,131072,853155,0,131072,131072,853367,0,131072,131072,852543,0,131072,131072,852651,0,131072,131072,853024,0,131072,131072,853287,0,131072,131072,852372,0,131072,131072,852533,0,131072,131072,852976,0,131072,131072,853219,0,131072,131072,852686,0,131072,131072,852862,0,131072,131072,853179,0,131072,131072,853430,0,131072,131072,944711,10665,0,17160601,12880553,21028,17201522,17201522,3985519558910787,3985600607131864,3985600608497760,3985519561399334
33,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,56,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12722956,1018192180,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,853132,0,131072,131072,853083,0,131072,131072,853582,0,131072,131072,853434,0,131072,131072,853287,0,131072,131072,853223,0,131072,131072,853399,0,131072,131072,853346,0,131072,131072,853414,0,131072,131072,853396,0,131072,131072,853554,0,131072,131072,853468,0,131072,131072,853171,0,131072,131072,853239,0,131072,131072,853553,0,131072,131072,853516,0,131072,131072,938831,10926,0,16736592,12482063,32898,16782766,16782766,3985519562460813,3985600608538700,3985600609887330,3985519565152070
34,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,60,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12718319,1017508860,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,844969,0,131072,131072,844835,0,131072,131072,844686,0,131072,131072,844343,0,131072,131072,844913,0,131072,131072,844762,0,131072,131072,844808,0,131072,131072,844620,0,131072,131072,845001,0,131072,131072,844733,0,131072,131072,844882,0,131072,131072,844589,0,131072,131072,845174,0,131072,131072,844985,0,131072,131072,844853,0,131072,131072,844495,0,131072,131072,965986,11414,0,16895004,12482354,21565,16919240,16919240,3985519566129584,3985600609926428,3985600611301137,3985519568707574
35,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,64,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12672797,1013890560,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,850398,0,131072,131072,850523,0,131072,131072,850767,0,131072,131072,850748,0,131072,131072,850389,0,131072,131072,850464,0,131072,131072,850734,0,131072,131072,850835,0,131072,131072,850580,0,131072,131072,850659,0,131072,131072,850798,0,131072,131072,850851,0,131072,131072,850604,0,131072,131072,850694,0,131072,131072,850859,0,131072,131072,850904,0,131072,131072,938259,11178,0,17161888,12899973,66595,17204510,17204510,3985519569655114,3985600611340836,3985600612695835,3985519572130752
36,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,68,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12728492,1018578648,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,845205,0,131072,131072,845195,0,131072,131072,845141,0,131072,131072,845119,0,131072,131072,845255,0,131072,131072,845279,0,131072,131072,845179,0,131072,131072,845158,0,131072,131072,845225,0,131072,131072,845161,0,131072,131072,845273,0,131072,131072,845201,0,131072,131072,845311,0,131072,131072,845360,0,131072,131072,845165,0,131072,131072,845155,0,131072,131072,944754,10350,0,16753470,12477816,21195,16795042,16795042,3985519572970733,3985600612735093,3985600614089252,3985519575512789
37,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,72,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12727536,1018220100,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,849729,0,131072,131072,849490,0,131072,131072,849482,0,131072,131072,849285,0,131072,131072,849774,0,131072,131072,849519,0,131072,131072,849533,0,131072,131072,849367,0,131072,131072,849783,0,131072,131072,849531,0,131072,131072,849594,0,131072,131072,849415,0,131072,131072,849881,0,131072,131072,849675,0,131072,131072,849594,0,131072,131072,849570,0,131072,131072,938892,10810,0,16735109,12475624,23746,16778940,16778940,3985519576583271,3985600614129551,3985600615488357,3985519579132729
38,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,76,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12702513,1015805840,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,848472,0,131072,131072,848498,0,131072,131072,848687,0,131072,131072,848694,0,131072,131072,848509,0,131072,131072,848490,0,131072,131072,848686,0,131072,131072,848783,0,131072,131072,848469,0,131072,131072,848500,0,131072,131072,848636,0,131072,131072,848640,0,131072,131072,848621,0,131072,131072,848701,0,131072,131072,848804,0,131072,131072,848874,0,131072,131072,941960,10223,0,17145681,12881275,23377,17186914,17186914,3985519579942746,3985600615527775,3985600616876525,3985519582478483
39,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,80,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12731304,1018092340,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,862136,0,131072,131072,862091,0,131072,131072,862020,0,131072,131072,862022,0,131072,131072,862232,0,131072,131072,862208,0,131072,131072,862313,0,131072,131072,862379,0,131072,131072,862313,0,131072,131072,862289,0,131072,131072,862373,0,131072,131072,862461,0,131072,131072,862122,0,131072,131072,862204,0,131072,131072,862024,0,131072,131072,862178,0,131072,131072,937974,10820,0,16736138,12480672,31480,16780265,16780265,3985519583542155,3985600616915903,3985600618280878,3985519586108257
40,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,84,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12718934,1017284252,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,887049,0,131072,131072,887039,0,131072,131072,887305,0,131072,131072,887279,0,131072,131072,886915,0,131072,131072,886938,0,131072,131072,887399,0,131072,131072,887464,0,131072,131072,886827,0,131072,131072,886835,0,131072,131072,887361,0,131072,131072,887465,0,131072,131072,887171,0,131072,131072,887169,0,131072,131072,887218,0,131072,131072,887299,0,131072,131072,946452,10285,0,17238122,12961387,22357,17281228,17281228,3985519586983220,3985600618320657,3985600619669207,3985519589546878
41,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,88,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12749785,1019688012,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,840228,0,131072,131072,840366,0,131072,131072,840007,0,131072,131072,840059,0,131072,131072,840240,0,131072,131072,840376,0,131072,131072,840046,0,131072,131072,840174,0,131072,131072,840302,0,131072,131072,840420,0,131072,131072,840100,0,131072,131072,840206,0,131072,131072,840317,0,131072,131072,840451,0,131072,131072,840002,0,131072,131072,840135,0,131072,131072,936927,10866,0,16741251,12489994,20530,16784504,16784504,3985519590574947,3985600619707784,3985600621057255,3985519593130934
42,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,92,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12695653,1015602656,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,850153,0,131072,131072,850268,0,131072,131072,850242,0,131072,131072,850255,0,131072,131072,850057,0,131072,131072,850058,0,131072,131072,849898,0,131072,131072,849952,0,131072,131072,850119,0,131072,131072,850119,0,131072,131072,849930,0,131072,131072,849870,0,131072,131072,850277,0,131072,131072,850254,0,131072,131072,850264,0,131072,131072,850258,0,131072,131072,943872,10230,0,16718200,12448563,23901,16759654,16759654,3985519593984065,3985600621096353,3985600622456120,3985519596483689
43,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,96,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12716676,1017514520,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,872518,0,131072,131072,872260,0,131072,131072,872269,0,131072,131072,872023,0,131072,131072,872314,0,131072,131072,872090,0,131072,131072,871888,0,131072,131072,871759,0,131072,131072,872290,0,131072,131072,872125,0,131072,131072,871922,0,131072,131072,871840,0,131072,131072,872509,0,131072,131072,872411,0,131072,131072,872219,0,131072,131072,872135,0,131072,131072,937057,10829,0,16730125,12477734,22023,16772157,16772157,3985519597589503,3985600622495338,3985600623831109,3985519600153842
44,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,100,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12755297,1020766944,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,832463,0,131072,131072,832519,0,131072,131072,832363,0,131072,131072,832405,0,131072,131072,832553,0,131072,131072,832576,0,131072,131072,832409,0,131072,131072,832403,0,131072,131072,832516,0,131072,131072,832545,0,131072,131072,832456,0,131072,131072,832446,0,131072,131072,832522,0,131072,131072,832623,0,131072,131072,832381,0,131072,131072,832469,0,131072,131072,945545,10276,0,17212910,12940764,23220,17254810,17254810,3985519601054853,3985600623870527,3985600625234781,3985519603582709
45,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,104,40886,40886,303104,256,64000,0,128,352,112,64,0x0,0x7de5cf217980,4736,62952832,12710417,1016784028,0,0,47616,0,0.0,217628672.0,0.0,265216.0,870514688.0,870514688.0,853540864.0,16973824.0,852718,0,131072,131072,852436,0,131072,131072,852038,0,131072,131072,852097,0,131072,131072,852695,0,131072,131072,852491,0,131072,131072,852006,0,131072,131072,852026,0,131072,131072,852698,0,131072,131072,852468,0,131072,131072,852009,0,131072,131072,852025,0,131072,131072,852629,0,131072,131072,852483,0,131072,131072,852033,0,131072,131072,852158,0,131072,131072,935857,10781,0,16690240,12445945,21250,16737110,16737110,3985519604607593,3985600625275481,3985600626629559,3985519607174626
46,"void at::native::vectorized_elementwise_kernel<8, at::native::FillFunctor<c10::BFloat16>, std::array<char*, 1ul> >(int, at::native::FillFunctor<c10::BFloat16>, std::array<char*, 1ul>) [clone .kd]",2,0,107,40886,40886,8388608,256,0,0,12,4,16,64,0x0,0x7de61592ed00,131072,655360,151578,12093512,0,0,0,0,0.0,0.0,0.0,393216.0,25165824.0,25165824.0,0.0,25165824.0,0,0,131072,131072,0,0,131072,131072,0,0,131072,131072,0,0,131072,131072,53,0,131072,131072,54,0,131072,131072,20,0,131072,131072,16,0,131072,131072,0,0,131072,131072,0,0,131072,131072,0,0,131072,131072,0,0,131072,131072,57,0,131072,131072,54,0,131072,131072,23,0,131072,131072,16,0,131072,131072,44762,957,0,763835,444189,432800,783975,783975,3985519611581599,3985600629947325,3985600629991270,3985519612152853
47,micro_tk(micro_globals) [clone .kd],2,0,108,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18614124,1489139860,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2041572,0,171996,129970,2041487,0,172380,130053,2041714,0,172041,129974,2041677,0,172238,129998,2042406,0,171977,129928,2042367,0,172157,129872,2042280,0,171924,129947,2042252,0,172286,129911,2043485,0,171962,129921,2043514,0,171641,130029,2043525,0,171997,130006,2043592,0,171615,130069,2042392,0,171916,129816,2042519,0,171411,129883,2042452,0,171859,129870,2042558,0,171430,129990,1137436,4682,0,22312757,18336080,34853,22808722,22808722,3985519612454148,3985600630293997,3985600631913667,3985519614916196
48,micro_tk(micro_globals) [clone .kd],2,0,110,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18624609,1489209940,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2115079,0,175073,129341,2115037,0,174628,129453,2115083,0,174953,129336,2114995,0,174788,129411,2116806,0,175410,129257,2116658,0,174965,129365,2116660,0,175451,129246,2116589,0,174941,129370,2116508,0,175034,129023,2116467,0,175125,128972,2116606,0,174944,128991,2116577,0,175335,128941,2115558,0,174865,129277,2115578,0,175109,129195,2115663,0,174926,129282,2115670,0,175192,129227,655465,9157,0,21434882,18347607,31356,21454000,21454000,3985519615786132,3985600631947319,3985600633798972,3985519618586730
49,micro_tk(micro_globals) [clone .kd],2,0,112,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18659625,1493206284,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2108868,0,174397,130258,2108736,0,174916,130261,2108875,0,174527,130231,2108867,0,174880,130251,2109314,0,174538,130245,2109229,0,174824,130195,2109480,0,174598,130243,2109410,0,174891,130258,2109379,0,174865,130406,2109431,0,175110,130398,2109402,0,174975,130386,2109487,0,175240,130373,2109270,0,174912,130459,2109284,0,175029,130438,2109236,0,175084,130415,2109276,0,175099,130333,646644,9812,0,21703097,18366861,32036,21718746,21718746,3985519619532227,3985600633829616,3985600635812823,3985519622249202
50,micro_tk(micro_globals) [clone .kd],2,0,114,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18620979,1489600276,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2132026,0,173977,130399,2132028,0,173374,130433,2131944,0,174043,130357,2131941,0,173387,130413,2131043,0,174181,130360,2131126,0,173388,130338,2130965,0,174448,130367,2131011,0,173610,130369,2132097,0,173573,130405,2132222,0,173867,130463,2132153,0,173556,130422,2132179,0,173929,130468,2131331,0,173548,130412,2131402,0,173779,130468,2131349,0,173700,130399,2131394,0,173904,130495,688140,9325,0,21649444,18356563,65993,21668542,21668542,3985519623067632,3985600635840784,3985600637666999,3985519625822092
51,micro_tk(micro_globals) [clone .kd],2,0,116,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18672755,1493629928,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2144273,0,176885,129686,2144293,0,176623,129684,2144156,0,176880,129635,2144207,0,176704,129646,2143582,0,177314,129748,2143619,0,177066,129779,2143651,0,177243,129753,2143683,0,176796,129813,2144144,0,176480,129920,2144051,0,176534,129996,2144048,0,176548,129932,2144063,0,176612,129948,2143907,0,176296,129700,2144002,0,176398,129916,2143818,0,176269,129810,2143858,0,176236,129939,642691,9920,0,21712069,18640674,45506,21728706,21728706,3985519626743243,3985600637695201,3985600639507035,3985519629495139
52,micro_tk(micro_globals) [clone .kd],2,0,118,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18624583,1489760052,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2129628,0,173435,130056,2129669,0,174029,130059,2129680,0,173425,130057,2129668,0,173804,130070,2128589,0,173429,130033,2128632,0,174003,130037,2128564,0,173595,130035,2128632,0,174104,130081,2128953,0,173901,129980,2129000,0,174106,130090,2129148,0,174030,129994,2129114,0,174137,130096,2129807,0,174065,130115,2129873,0,174176,130171,2129936,0,174135,130121,2129992,0,174189,130219,702398,10361,0,22003017,18630346,66747,22023137,22023137,3985519630381910,3985600639532472,3985600641332609,3985519633103652
53,micro_tk(micro_globals) [clone .kd],2,0,120,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18664050,1493094140,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2004678,0,174731,130469,2004688,0,174582,130462,2004840,0,174574,130454,2004735,0,174579,130467,2005660,0,174667,130464,2005661,0,174658,130503,2005915,0,174703,130506,2005909,0,174648,130507,2005652,0,175493,130587,2005663,0,174626,130624,2005643,0,175451,130580,2005708,0,174552,130592,2005689,0,175464,130684,2005730,0,174491,130629,2005839,0,175420,130670,2005927,0,174559,130622,675170,9934,0,21408420,17924732,28382,21427845,21427845,3985519633874471,3985600641360130,3985600643160106,3985519636601531
54,micro_tk(micro_globals) [clone .kd],2,0,122,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18636010,1490287476,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2158113,0,174316,129797,2158141,0,174255,129853,2158080,0,174270,129820,2157988,0,174138,129833,2158118,0,174321,129889,2158092,0,174045,129914,2158170,0,174215,129882,2158217,0,174030,129926,2158746,0,174322,130271,2158642,0,174142,130161,2159003,0,174340,130258,2158925,0,174037,130128,2159154,0,174451,130219,2159174,0,174181,130139,2159154,0,174468,130220,2159078,0,174153,130138,630641,10874,0,21589293,18427847,58553,21603616,21603616,3985519637584684,3985600643187266,3985600644989526,3985519640389388
55,micro_tk(micro_globals) [clone .kd],2,0,124,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18628453,1489707824,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2148298,0,175710,130120,2148355,0,176053,130200,2148200,0,175737,130104,2148179,0,175961,130205,2147605,0,175977,130029,2147627,0,175867,130097,2147691,0,175910,130159,2147719,0,176218,129962,2147216,0,175816,130036,2147273,0,175712,130079,2147247,0,175727,129997,2147228,0,175617,130071,2148238,0,176155,130094,2148245,0,175993,130023,2148124,0,176136,130076,2148117,0,176220,130034,690162,9217,0,21820601,18466772,53602,21841881,21841881,3985519641106317,3985600645014883,3985600646807289,3985519643863963
56,micro_tk(micro_globals) [clone .kd],2,0,126,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18672113,1493297736,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2159410,0,172908,130305,2159429,0,172435,130291,2159290,0,172977,130239,2159360,0,172341,130262,2159176,0,173185,130278,2159213,0,172292,130185,2158970,0,173156,130275,2158974,0,172443,130216,2159808,0,173107,130078,2159762,0,172650,129903,2159871,0,173108,130085,2159866,0,172541,129931,2159836,0,173434,130120,2159890,0,172719,130013,2159862,0,173423,130108,2159911,0,172899,130017,651119,9996,0,21641906,18436348,40117,21659395,21659395,3985519644792935,3985600646832566,3985600648614836,3985519647550410
57,micro_tk(micro_globals) [clone .kd],2,0,128,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18627803,1489983116,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2120847,0,170235,130905,2120764,0,170189,130958,2120759,0,170272,130890,2120707,0,170310,130956,2120609,0,170263,130888,2120531,0,170020,130856,2120698,0,170188,130878,2120738,0,170017,130911,2122329,0,170065,130667,2122367,0,170216,130707,2122328,0,170230,130672,2122230,0,170250,130706,2121938,0,170323,130749,2121977,0,170268,130722,2121747,0,170254,130740,2121865,0,170321,130725,651014,10103,0,21547740,18261434,80731,21564526,21564526,3985519648536337,3985600648639873,3985600650403756,3985519651312429
58,micro_tk(micro_globals) [clone .kd],2,0,130,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18630328,1491111760,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2154467,0,174370,129758,2154376,0,174728,129777,2154527,0,174407,129747,2154422,0,174642,129755,2155225,0,174002,129658,2155257,0,174325,129752,2155382,0,174031,129642,2155345,0,174397,129752,2155519,0,174187,130288,2155461,0,174159,130220,2155453,0,174193,130309,2155503,0,174129,130220,2154632,0,174412,130285,2154626,0,174243,130155,2154634,0,174421,130281,2154601,0,174311,130177,693540,9289,0,21709792,18448207,57668,21729650,21729650,3985519652050059,3985600650426710,3985600652185786,3985519654816056
59,micro_tk(micro_globals) [clone .kd],2,0,132,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18618866,1489698576,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2162000,0,173763,129901,2162031,0,174041,129942,2161977,0,173698,129879,2161997,0,173953,129931,2161449,0,173646,129953,2161498,0,173910,129950,2161511,0,173844,129954,2161466,0,173850,130034,2161161,0,174448,130128,2161182,0,174266,130216,2161000,0,174381,130123,2161021,0,174229,130210,2161951,0,174571,129927,2161995,0,174397,129976,2161906,0,174725,129932,2161831,0,174309,129976,644420,10037,0,21893061,18843171,92064,21909062,21909062,3985519655731619,3985600652206217,3985600653950270,3985519658509104
60,micro_tk(micro_globals) [clone .kd],2,0,134,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18622183,1489850600,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2150894,0,171420,130716,2150939,0,171696,130660,2151012,0,171486,130721,2151026,0,171691,130672,2150063,0,171596,130594,2150113,0,171700,130586,2150063,0,171642,130609,2150093,0,171750,130632,2150298,0,171340,130618,2150345,0,171597,130607,2150532,0,171383,130637,2150553,0,171584,130589,2151101,0,171387,130619,2151144,0,171538,130576,2151173,0,171492,130620,2151290,0,171625,130589,658728,10119,0,21676038,18285015,90477,21691085,21691085,3985519659537052,3985600653971462,3985600655721084,3985519662338382
61,micro_tk(micro_globals) [clone .kd],2,0,136,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18699500,1496703864,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2135058,0,173150,130416,2134989,0,173950,130536,2135000,0,173182,130395,2134955,0,173979,130530,2135540,0,173279,130453,2135551,0,173970,130441,2135433,0,173259,130500,2135465,0,174020,130470,2135131,0,173916,130452,2135101,0,173759,130497,2135142,0,174004,130450,2135178,0,173683,130507,2134398,0,174023,130440,2134422,0,173744,130410,2134370,0,174140,130443,2134386,0,173818,130486,697798,9289,0,21624445,18105753,30708,21646050,21646050,3985519663069282,3985600655741955,3985600657509203,3985519665850062
62,micro_tk(micro_globals) [clone .kd],2,0,138,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18668054,1493251928,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2123299,0,175976,130452,2123292,0,175855,130511,2123202,0,176094,130468,2123121,0,175832,130531,2122612,0,176128,130408,2122686,0,175680,130459,2122498,0,176152,130410,2122483,0,175731,130495,2123497,0,175579,130145,2123472,0,175773,130119,2123403,0,175561,130146,2123344,0,175776,130128,2123450,0,175933,130021,2123493,0,175986,129973,2123397,0,176008,130037,2123399,0,176080,130005,683120,10154,0,21770859,18349544,35637,21791271,21791271,3985519666751343,3985600657530314,3985600659265635,3985519669796673
63,micro_tk(micro_globals) [clone .kd],2,0,140,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18619498,1489458344,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2184489,0,171938,129968,2184438,0,172202,129830,2184485,0,172201,129936,2184443,0,172051,129804,2184376,0,171934,130022,2184423,0,171940,129945,2184413,0,172061,130033,2184419,0,171976,129977,2184095,0,172335,129936,2184115,0,172394,129857,2184151,0,172522,129938,2184187,0,172272,129855,2183955,0,172071,130006,2183917,0,171764,129931,2184006,0,172098,129995,2183985,0,171938,129928,642353,9966,0,21847362,18619888,76768,21863620,21863620,3985519670757884,3985600659285504,3985600661041015,3985519673535899
64,micro_tk(micro_globals) [clone .kd],2,0,142,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18625519,1490361044,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2180487,0,170728,130233,2180443,0,170469,130228,2180432,0,170673,130231,2180421,0,170389,130152,2179759,0,170589,130215,2179761,0,170549,130121,2179801,0,170727,130255,2179823,0,170676,130152,2179949,0,171074,130110,2180022,0,170604,130171,2180028,0,170996,130081,2180027,0,170473,130167,2180890,0,170708,130220,2180923,0,170128,130238,2180755,0,170767,130212,2180713,0,170295,130297,648099,10188,0,21656866,18456685,87984,21673082,21673082,3985519674557048,3985600661061525,3985600662805619,3985519677339870
65,micro_tk(micro_globals) [clone .kd],2,0,144,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18620288,1489692940,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2160081,0,172790,130776,2159990,0,173320,130694,2159990,0,172840,130783,2159977,0,173339,130709,2159198,0,173031,130875,2159207,0,173435,130683,2159300,0,173035,130862,2159291,0,173590,130700,2157804,0,173622,130853,2157815,0,172977,130940,2157874,0,173607,130857,2157859,0,172977,130962,2158996,0,173721,130902,2158987,0,173214,130971,2158889,0,173805,130935,2158914,0,173313,130988,698235,9343,0,21761646,18370435,60361,21782796,21782796,3985519678129927,3985600662825689,3985600664592897,3985519680882885
66,micro_tk(micro_globals) [clone .kd],2,0,146,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18654749,1492869964,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2070508,0,175457,130262,2070569,0,175025,130185,2070404,0,175397,130263,2070340,0,175077,130166,2070485,0,175402,130410,2070466,0,174975,130258,2070547,0,175439,130398,2070523,0,175180,130266,2071248,0,175637,130308,2071226,0,175559,130262,2071263,0,175702,130321,2071154,0,175607,130272,2071186,0,175550,130334,2071178,0,175578,130248,2071157,0,175558,130331,2071062,0,175726,130248,649002,9935,0,21683217,18450201,45756,21699828,21699828,3985519681796255,3985600664613648,3985600666335229,3985519684553550
67,micro_tk(micro_globals) [clone .kd],2,0,149,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18615010,1490045580,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2184660,0,173216,129281,2184604,0,173306,129355,2184748,0,173111,129265,2184689,0,173244,129380,2184189,0,173526,129217,2184144,0,173591,129230,2184152,0,173642,129200,2184120,0,173686,129277,2183996,0,174530,129320,2184056,0,174208,129244,2183993,0,174490,129310,2183975,0,174136,129222,2184628,0,174809,129246,2184641,0,174329,129247,2184623,0,174954,129267,2184632,0,174423,129243,694835,10383,0,21927304,18637108,93298,21947932,21947932,3985519685394753,3985600666379654,3985600668110088,3985519688152448
68,micro_tk(micro_globals) [clone .kd],2,0,154,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18668468,1493777212,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2128805,0,174445,130563,2128781,0,173960,130606,2128877,0,174459,130578,2128834,0,173943,130580,2129480,0,174600,130572,2129501,0,174087,130588,2129189,0,174664,130559,2129229,0,174148,130605,2129115,0,174558,130495,2129133,0,173756,130597,2129055,0,174545,130516,2129028,0,173687,130588,2129652,0,174468,130606,2129794,0,173695,130689,2129550,0,174383,130602,2129665,0,173798,130698,694851,9607,0,21611745,18203893,37442,21632554,21632554,3985519688999920,3985600668162485,3985600669889153,3985519691724215
69,micro_tk(micro_globals) [clone .kd],2,0,159,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18612042,1489973232,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,1999837,0,172774,130660,1999767,0,172660,130650,1999518,0,172790,130649,1999510,0,172526,130670,1999034,0,172837,130583,1999060,0,172480,130543,1998931,0,172777,130580,1999030,0,172459,130612,2000497,0,172945,130608,2000538,0,172692,130639,2000585,0,172946,130624,2000572,0,172649,130672,2001152,0,173083,130657,2001180,0,172657,130632,2001088,0,173109,130648,2001078,0,172760,130669,708123,10148,0,21761420,18185966,41558,21777336,21777336,3985519692828007,3985600669940670,3985600671700427,3985519695631560
70,micro_tk(micro_globals) [clone .kd],2,0,164,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18677303,1493959216,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2076605,0,172959,130534,2076571,0,173366,130606,2076691,0,173080,130528,2076676,0,173411,130589,2076830,0,172999,130400,2076860,0,173351,130476,2076913,0,173124,130414,2076921,0,173393,130469,2077261,0,173332,130449,2077317,0,173195,130513,2077189,0,173394,130371,2077218,0,173155,130415,2076268,0,173252,130493,2076300,0,173048,130505,2076339,0,173281,130491,2076429,0,173046,130507,712619,10211,0,22336334,18998082,38772,22356381,22356381,3985519696339095,3985600671747416,3985600673466753,3985519699058173
71,micro_tk(micro_globals) [clone .kd],2,0,169,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18667575,1493232060,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2136855,0,176987,130135,2136850,0,177103,130090,2136926,0,176858,130117,2136894,0,177056,130132,2136620,0,177377,129964,2136680,0,176941,130014,2136540,0,177236,130015,2136557,0,177272,130039,2137231,0,177168,130038,2137197,0,177097,130057,2137317,0,177202,130085,2137238,0,176975,130082,2137283,0,177456,130000,2137323,0,176425,130100,2137349,0,177366,130016,2137348,0,176761,130117,668389,9828,0,21967428,18869828,29510,21985797,21985797,3985519700025253,3985600673514784,3985600675236565,3985519702760254
72,micro_tk(micro_globals) [clone .kd],2,0,174,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18624547,1489685972,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2167693,0,171368,129669,2167727,0,171693,129870,2167632,0,171231,129664,2167676,0,171371,129929,2167718,0,171432,129860,2167747,0,171571,129961,2167779,0,171507,129829,2167750,0,171700,129981,2167486,0,172161,129991,2167522,0,172051,130043,2167597,0,172159,130029,2167605,0,171778,130078,2167305,0,172079,129958,2167348,0,171891,129803,2167385,0,172253,129882,2167343,0,171989,129873,618928,10333,0,21732135,18656245,72666,21747888,21747888,3985519703775764,3985600675284516,3985600676999968,3985519706488403
73,micro_tk(micro_globals) [clone .kd],2,0,179,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18623393,1489236112,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2160346,0,170398,130922,2160453,0,170469,130928,2160471,0,170386,130915,2160434,0,170498,130929,2161262,0,170509,130883,2161208,0,170599,130864,2161361,0,170524,130886,2161417,0,170676,130887,2161363,0,170732,130667,2161379,0,170349,130669,2161403,0,170764,130668,2161349,0,170333,130665,2160892,0,170614,130634,2160908,0,170254,130652,2160732,0,170697,130632,2160793,0,170345,130654,688484,9313,0,21816446,18368461,54084,21838350,21838350,3985519707306261,3985600677048560,3985600678769620,3985519710051368
74,micro_tk(micro_globals) [clone .kd],2,0,184,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18653758,1492674012,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2192279,0,174802,130720,2192291,0,174612,130705,2192213,0,174765,130664,2192183,0,174557,130669,2192238,0,174952,130658,2192342,0,174660,130557,2192181,0,175000,130648,2192210,0,174719,130584,2192147,0,173834,130361,2192144,0,173525,130356,2192002,0,173890,130366,2191990,0,173482,130354,2192535,0,174130,130344,2192550,0,173645,130317,2192445,0,174145,130333,2192466,0,173705,130317,666462,9735,0,21811612,18376703,31582,21829733,21829733,3985519710953260,3985600678822457,3985600680563627,3985519713715893
75,micro_tk(micro_globals) [clone .kd],2,0,189,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18680569,1494417132,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2065781,0,172724,130569,2065669,0,173475,130563,2065584,0,172781,130570,2065636,0,173342,130583,2065690,0,172751,130556,2065624,0,173514,130529,2065641,0,172811,130550,2065538,0,173476,130506,2065991,0,173558,130213,2065981,0,173570,130273,2065999,0,173676,130194,2066084,0,173527,130249,2066107,0,173794,130267,2066089,0,173599,130259,2065952,0,173897,130259,2065992,0,173593,130335,629673,10013,0,21110319,18055535,38935,21125443,21125443,3985519714747117,3985600680612339,3985600682326950,3985519717496299
76,micro_tk(micro_globals) [clone .kd],2,0,194,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18664536,1493146424,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2098891,0,172765,130293,2098974,0,172949,130346,2099003,0,172839,130277,2099071,0,172909,130339,2098640,0,172797,130423,2098647,0,172806,130401,2098621,0,172924,130392,2098640,0,172850,130425,2098857,0,173234,130360,2098885,0,173021,130360,2098874,0,173295,130395,2098931,0,172955,130345,2099268,0,173545,130390,2099290,0,173126,130354,2099347,0,173664,130392,2099296,0,173259,130380,695535,9193,0,21755741,18284335,35339,21777620,21777620,3985519718279977,3985600682374540,3985600684084463,3985519721002661
77,micro_tk(micro_globals) [clone .kd],2,0,199,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18673027,1494228504,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2182230,0,176555,129777,2182276,0,176300,129713,2182277,0,176589,129773,2182272,0,176234,129694,2182210,0,176214,129712,2182187,0,176031,129704,2182314,0,176445,129721,2182242,0,176122,129703,2182382,0,175841,129652,2182393,0,175498,129631,2182498,0,175869,129661,2182546,0,175430,129639,2183253,0,175657,129650,2183271,0,175570,129609,2183101,0,175843,129619,2183197,0,175683,129651,639804,10078,0,21702994,18529335,37994,21720780,21720780,3985519721869842,3985600684133335,3985600685870018,3985519724602840
78,micro_tk(micro_globals) [clone .kd],2,0,204,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18677415,1493883008,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2071078,0,170764,130335,2071139,0,170301,130301,2071215,0,170858,130340,2071148,0,170038,130285,2071654,0,170831,130364,2071565,0,170243,130330,2071778,0,170852,130364,2071703,0,170263,130334,2071447,0,170625,130184,2071410,0,170678,130126,2071512,0,170684,130260,2071448,0,170449,130144,2071124,0,170853,130321,2071061,0,170847,130140,2070822,0,170918,130324,2070856,0,170755,130136,615779,10443,0,21158951,18177380,46993,21172156,21172156,3985519725612613,3985600685916167,3985600687649324,3985519728439841
79,micro_tk(micro_globals) [clone .kd],2,0,209,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18665538,1493318304,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2114590,0,176742,130141,2114650,0,176946,130175,2114528,0,176601,130133,2114527,0,176924,130168,2115454,0,176971,130028,2115480,0,177049,130047,2115437,0,176877,130071,2115507,0,176981,130095,2114447,0,176266,130007,2114535,0,176761,130055,2114509,0,176024,130027,2114491,0,176821,130067,2114468,0,176456,129995,2114493,0,176988,130050,2114369,0,176352,129998,2114333,0,177123,130094,700873,9327,0,21741263,18522946,49013,21761807,21761807,3985519729211160,3985600687695352,3985600689413288,3985519731990237
80,micro_tk(micro_globals) [clone .kd],2,0,214,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18666873,1493666656,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2205517,0,172126,130170,2205492,0,171673,130132,2205490,0,172169,130154,2205480,0,171650,130177,2205781,0,171921,130135,2205766,0,171730,130137,2205678,0,172291,130107,2205648,0,171875,130148,2205206,0,172072,130263,2205247,0,171549,130234,2205236,0,172151,130221,2205241,0,171420,130202,2204948,0,171924,130210,2204959,0,171380,130221,2204969,0,172205,130185,2204962,0,171489,130228,653333,10046,0,21802908,18777602,66891,21821182,21821182,3985519732934101,3985600689459556,3985600691168118,3985519735681151
81,micro_tk(micro_globals) [clone .kd],2,0,219,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18686540,1494683072,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2091888,0,176819,130391,2091944,0,177005,130460,2091844,0,176769,130398,2091922,0,177066,130472,2091426,0,176897,130257,2091466,0,176994,130365,2091423,0,176825,130246,2091461,0,177093,130394,2091284,0,176761,130165,2091314,0,176734,130169,2091178,0,176785,130214,2091270,0,176774,130197,2092674,0,177087,130053,2092740,0,176934,130029,2092527,0,177019,130055,2092582,0,176987,130006,639621,10254,0,21598101,18445728,31562,21614552,21614552,3985519736678254,3985600691213705,3985600692941334,3985519739432094
82,micro_tk(micro_globals) [clone .kd],2,0,224,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18653808,1492397068,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2031261,0,177224,130045,2031177,0,177174,130100,2031317,0,177274,130029,2031231,0,177110,130108,2030776,0,177349,130022,2030774,0,177150,129985,2030845,0,177257,130023,2030790,0,176986,130048,2033518,0,177095,130190,2033461,0,176561,130194,2033531,0,177133,130166,2033391,0,176575,130225,2032901,0,177052,130168,2032967,0,176542,130042,2033116,0,176996,130148,2033127,0,176514,130086,706153,9429,0,21692116,18368433,33967,21712215,21712215,3985519740294268,3985600692987042,3985600694716835,3985519743037181
83,micro_tk(micro_globals) [clone .kd],2,0,229,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18615027,1489649060,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2196322,0,172234,129887,2196313,0,172142,129896,2196420,0,172177,129808,2196434,0,172050,129808,2196084,0,172260,129764,2196116,0,172105,129791,2196207,0,172518,129816,2196197,0,172201,129844,2197055,0,172623,130056,2197066,0,172154,130048,2197121,0,172593,130028,2197111,0,172130,130113,2196631,0,172738,130003,2196641,0,172255,129946,2196695,0,172869,129966,2196701,0,172334,130025,642444,9961,0,21891294,18835763,31386,21908047,21908047,3985519743958172,3985600694760849,3985600696489400,3985519746703148
84,micro_tk(micro_globals) [clone .kd],2,0,234,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18623608,1489579920,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2082149,0,174718,130317,2082196,0,174322,130427,2082163,0,174785,130337,2082196,0,174242,130448,2082726,0,174796,130341,2082763,0,174256,130378,2082708,0,175060,130291,2082870,0,174457,130403,2082206,0,173821,129993,2082135,0,173527,129998,2082057,0,173948,129990,2081968,0,173553,129978,2082245,0,174270,130007,2082212,0,173725,129966,2082157,0,174390,130023,2082134,0,173927,130001,646171,10093,0,21640425,18288937,42292,21656486,21656486,3985519747716886,3985600696539754,3985600698236017,3985519750464577
85,micro_tk(micro_globals) [clone .kd],2,0,239,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18674119,1493588380,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2083888,0,174333,130598,2083750,0,174338,130663,2083753,0,174394,130627,2083718,0,174391,130679,2084382,0,174704,130727,2084293,0,174726,130700,2084374,0,174688,130700,2084255,0,174742,130695,2084337,0,174307,130664,2084343,0,174245,130750,2084164,0,174400,130681,2084190,0,174385,130755,2083993,0,174263,130723,2084085,0,174353,130755,2083934,0,174260,130713,2083969,0,174465,130752,688712,9314,0,21616661,18256862,31308,21638186,21638186,3985519751227304,3985600698296627,3985600700027061,3985519753989986
86,micro_tk(micro_globals) [clone .kd],2,0,244,40886,40886,1048576,512,49152,0,80,128,32,64,0x0,0x7e1e1c908840,16384,92741632,18660306,1493435364,0,0,16384,0,0.0,201326592.0,0.0,1048576.0,822083584.0,822083584.0,805306368.0,16777216.0,2177895,0,172804,130283,2177946,0,173077,130132,2177878,0,172842,130203,2177931,0,173099,130087,2177217,0,173073,130285,2177302,0,173281,130077,2177171,0,173107,130294,2177180,0,173302,130087,2177621,0,172448,130089,2177512,0,172486,130052,2177641,0,172471,130065,2177601,0,172439,130027,2177271,0,172618,130132,2177286,0,172430,130017,2177236,0,172720,130121,2177221,0,172573,130023,646771,10395,0,21788124,18573602,50202,21804515,21804515,3985519754920932,3985600700084585,3985600701806887,3985519757680089
87,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,248,40886,40886,67108864,512,0,0,12,4,32,64,0x0,0x7de60086ed00,1048576,20971520,4381202,350486720,0,0,0,0,0.0,0.0,0.0,1048576.0,33554432.0,33554432.0,16777216.0,16777216.0,65568,0,262144,262144,65572,0,262144,262144,65594,0,262144,262144,65586,0,262144,262144,65642,0,262144,262144,65638,0,262144,262144,65580,0,262144,262144,65583,0,262144,262144,65568,0,262144,262144,65572,0,262144,262144,65596,0,262144,262144,65589,0,262144,262144,65643,0,262144,262144,65640,0,262144,262144,65583,0,262144,262144,65582,0,262144,262144,41618,7219,0,3051683,1544102,2152497,3070234,3070234,3985519759015933,3985600701976097,3985600702158366,3985519759763548
88,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,249,40886,40886,67108864,512,0,0,12,4,32,64,0x0,0x7de60086ed00,1048576,20971520,4358812,348466984,0,0,0,0,0.0,0.0,0.0,1048576.0,33554432.0,33554432.0,16777216.0,16777216.0,65618,0,262144,262144,65610,0,262144,262144,65570,0,262144,262144,65585,0,262144,262144,65588,0,262144,262144,65588,0,262144,262144,65601,0,262144,262144,65592,0,262144,262144,65620,0,262144,262144,65615,0,262144,262144,65570,0,262144,262144,65583,0,262144,262144,65589,0,262144,262144,65587,0,262144,262144,65601,0,262144,262144,65592,0,262144,262144,491144,3845,0,4157279,1185189,1868339,4347424,4347424,3985519759582951,3985600702158366,3985600702345082,3985519761478201
89,"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul> >(int, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul>) [clone .kd]",2,0,250,40886,40886,16777216,256,0,0,16,0,32,64,0x0,0x7de596260e40,262144,1572864,337065,27062424,0,0,0,524288,0.0,0.0,0.0,262144.0,50331648.0,50331648.0,33554432.0,16777216.0,262190,0,262144,262144,262206,0,262144,262144,262211,0,262144,262144,262208,0,262144,262144,262187,0,262144,262144,262183,0,262144,262144,262185,0,262144,262144,262173,0,262144,262144,262189,0,262144,262144,262210,0,262144,262144,262212,0,262144,262144,262207,0,262144,262144,262182,0,262144,262144,262187,0,262144,262144,262187,0,262144,262144,262173,0,262144,262144,58367,957,0,3267005,2537199,2015596,3287752,3287752,3985519766711595,3985600708189447,3985600708376924,3985519767469985
90,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,251,40886,40886,16777216,256,0,0,12,4,32,64,0x0,0x7de601d957c0,262144,1572864,364131,29184904,0,0,0,0,0.0,0.0,0.0,262144.0,33554432.0,33554432.0,16777216.0,16777216.0,131112,0,262144,262144,131115,0,262144,262144,131137,0,262144,262144,131127,0,262144,262144,131094,0,262144,262144,131102,0,262144,262144,131072,0,262144,262144,131092,0,262144,262144,131111,0,262144,262144,131115,0,262144,262144,131132,0,262144,262144,131126,0,262144,262144,131095,0,262144,262144,131103,0,262144,262144,131072,0,262144,262144,131091,0,262144,262144,45235,4790,0,1837512,1242476,1145977,1855912,1855912,3985519769070110,3985600709859793,3985600709970075,3985519769710556
91,__amd_rocclr_fillBufferAligned.kd,2,0,252,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,91,7280,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,0,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,4,0,0,0,2,0,0,0,8,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,1,0,0,0,1,0,0,0,151811,7968,0,690201,0,4,715257,715257,3985519769695845,3985600709970075,3985600709974121,3985519771593639
92,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,253,40886,40886,155648,512,2560,48,28,4,80,64,0x0,0x7de600218380,2432,1483154,440598,35303668,0,0,0,0,0.0,19520.0,304.0,5185.0,16801888.0,16801888.0,16777552.0,4880.0,131124,0,32,0,131157,0,32,0,131157,0,0,0,131142,0,0,0,131147,0,24,0,131162,0,0,0,131136,0,184,0,131164,0,32,0,131126,0,32,0,131159,0,32,0,131157,0,1,0,131143,0,0,0,131150,0,24,0,131160,0,0,0,131138,0,184,0,131164,0,32,0,499664,16716,0,4339509,51,2483,4396840,4396840,3985519772661507,3985600712179056,3985600712307365,3985519773658490
93,__amd_rocclr_copyBuffer.kd,2,0,254,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,75,117,8648,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,5,0,0,0,4,0,0,0,5,0,0,0,0,0,4,0,8,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,310459,7781,0,1563484,0,8,1588438,1588438,3985519773501088,3985600712307365,3985600712311491,3985519775421996
94,__amd_rocclr_fillBufferAligned.kd,2,0,256,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,100,7680,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,0,0,0,0,0,0,0,0,10,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,1,0,3,0,0,0,4,0,0,0,3,0,0,0,8,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,0,0,0,0,2,0,0,0,42468,10002,0,81580,0,4,106694,106694,3985519776203741,3985600712389486,3985600712391609,3985519777155027
95,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4>) [clone .kd]",2,0,257,40886,40886,155648,512,2560,48,28,4,80,64,0x0,0x7de601517880,2432,936615,333391,26664856,0,548364,1,0,0.0,19520.0,304.0,5185.0,16801888.0,16801888.0,16777552.0,4880.0,131128,0,32,0,131132,0,32,0,131148,0,0,0,131140,0,0,0,131146,0,24,0,131139,0,0,0,131136,0,184,0,131144,0,32,0,131130,0,32,0,131132,0,32,0,131149,0,1,0,131134,0,0,0,131152,0,24,0,131141,0,0,0,131138,0,184,0,131145,0,32,0,359238,7654,0,1552069,51,2483,1575031,1575031,3985519779321999,3985600714392683,3985600714486261,3985519779963077
96,__amd_rocclr_copyBuffer.kd,2,0,258,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,75,107,8736,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,4,0,0,0,5,0,0,0,0,0,4,0,8,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,156038,7788,0,713032,0,8,737932,737932,3985519779863459,3985600714486261,3985600714490146,3985519781802224
97,"void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul> >(int, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul>) [clone .kd]",2,0,260,40886,40886,4194304,256,0,0,24,0,64,64,0x0,0x7de5854314c0,65536,5046272,1039429,83190676,0,0,0,0,0.0,0.0,0.0,262144.0,20971520.0,20971520.0,16777216.0,4194304.0,131104,0,65536,65536,131104,0,65536,65536,131129,0,65536,65536,131114,0,65536,65536,131114,0,65536,65536,131115,0,65536,65536,131110,0,65536,65536,131125,0,65536,65536,131104,0,65536,65536,131104,0,65536,65536,131128,0,65536,65536,131116,0,65536,65536,131110,0,65536,65536,131110,0,65536,65536,131110,0,65536,65536,131127,0,65536,65536,52435,957,0,970233,684912,522966,990225,990225,3985519786684499,3985600718231689,3985600718290015,3985519787269193
98,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,261,40886,40886,67108864,512,0,0,12,4,32,64,0x0,0x7de60086e700,1048576,24117248,5017863,401522644,0,0,0,0,0.0,0.0,0.0,1048576.0,83886080.0,83886080.0,16777216.0,67108864.0,32784,0,524288,524288,32811,0,524288,524288,32845,0,524288,524288,32814,0,524288,524288,32862,0,524288,524288,33113,0,524288,524288,32883,0,524288,524288,32863,0,524288,524288,32784,0,524288,524288,32813,0,524288,524288,32843,0,524288,524288,32813,0,524288,524288,32863,0,524288,524288,33080,0,524288,524288,32885,0,524288,524288,32868,0,524288,524288,346032,8112,0,3676392,1670024,2188268,3892283,3892283,3985519787299437,3985600718327190,3985600718505172,3985519788975945
99,__amd_rocclr_fillBufferAligned.kd,2,0,262,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,88,7372,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,0,0,0,0,0,0,0,0,8,0,1,0,4,0,0,0,5,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,2,0,0,0,8,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,0,0,0,0,1,0,0,0,219999,7977,0,1065670,0,4,1090588,1090588,3985519787801810,3985600718505172,3985600718509258,3985519790573596
100,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4> >(at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4>) [clone .kd]",2,0,263,40886,40886,155648,512,4608,80,36,4,80,64,0x0,0x7de564e2e7c0,2432,1213406,353329,28274288,0,0,0,0,0.0,19520.0,304.0,5185.0,33593984.0,33593984.0,33555008.0,19520.0,262192,0,16,0,262213,0,16,0,262227,0,152,0,262215,0,0,0,262229,0,32,0,262228,0,24,0,262257,0,32,0,262245,0,32,0,262194,0,16,0,262217,0,16,0,262228,0,153,0,262219,0,0,0,262228,0,32,0,262227,0,24,0,262261,0,32,0,262249,0,32,0,757251,1566,0,5506105,53,2485,5563631,5563631,3985519792238406,3985600722178233,3985600722381573,3985519793113709
101,__amd_rocclr_copyBuffer.kd,2,0,264,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,87,147,11796,0,0,0,0,0.0,0.0,0.0,8.0,256.0,256.0,128.0,128.0,4,0,0,0,4,0,0,0,6,0,0,0,0,0,0,0,8,0,0,0,4,0,8,0,4,0,0,0,4,0,0,0,0,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184697,7992,0,870397,0,8,895522,895522,3985519792845994,3985600722381573,3985600722387142,3985519795175265
102,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,266,40886,40886,256,128,0,0,20,4,64,64,0x0,0x7de60086ecc0,4,228,131,9856,0,0,0,0,0.0,0.0,0.0,16.0,512.0,512.0,256.0,256.0,16,0,0,0,19,0,0,0,15,0,4,4,14,0,4,4,7,0,0,0,9,0,0,0,10,0,4,4,9,0,4,4,16,0,8,8,19,0,8,8,14,0,4,4,14,0,4,4,7,0,8,8,9,0,8,8,10,0,4,4,8,0,4,4,42445,6637,0,83760,0,4,106812,106812,3985519795862591,3985600722520699,3985600722524144,3985519796813326
103,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,267,40886,40886,256,256,1536,48,28,4,80,64,0x0,0x7de600218380,4,256,295,22452,0,0,0,0,0.0,0.0,0.0,1.0,272.0,272.0,256.0,16.0,10,0,0,0,18,0,0,0,10,0,0,0,11,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,18,0,0,0,7,0,1,0,7,0,0,0,12,0,0,0,14,0,0,0,14,0,0,0,13,0,0,0,203640,7446,0,967712,0,4,993084,993084,3985519796803411,3985600722529432,3985600722533878,3985519798565636
104,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,268,40886,40886,256,256,0,0,12,4,32,64,0x0,0x7de601d957c0,4,59,99,7616,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,5,0,0,0,8,0,0,0,8,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,5,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,41971,7496,0,87534,0,4,111763,111763,3985519798148459,3985600723361660,3985600723363583,3985519799699000
105,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,269,40886,40886,256,256,0,0,24,0,32,64,0x0,0x7de564869a40,4,341,160,12348,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,4,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,1,0,4,0,0,0,40318,957,0,66417,0,4,91119,91119,3985519807188448,3985600731048174,3985600731050938,3985519807742937
106,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,270,40886,40886,256,256,0,0,40,0,32,64,0x0,0x7de564869840,4,355,144,11008,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,9,0,0,0,8,0,0,0,4,0,1,0,4,0,0,0,5,0,0,0,4,0,0,0,142038,0,0,624044,0,4,648947,648947,3985519807761815,3985600731075975,3985600731078419,3985519809595685
107,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,271,40886,40886,256,256,0,0,36,4,80,64,0x0,0x7de564247fc0,4,252,102,7856,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,1,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,40842,955,0,66602,0,4,91646,91646,3985519813175915,3985600735713880,3985600735716284,3985519813710445
108,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,272,40886,40886,256,256,0,0,24,0,32,64,0x0,0x7de564869a40,4,341,174,13484,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,4,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,7,0,0,0,4,0,1,0,4,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,185931,696,0,866978,0,4,891865,891865,3985519813743284,3985600735761751,3985600735764435,3985519815492668
109,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,273,40886,40886,256,256,0,0,36,4,80,64,0x0,0x7de563e53a80,4,252,106,9032,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,1,0,0,0,1,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,4,0,1,0,4,0,0,0,41471,957,0,68669,0,4,93916,93916,3985519820404557,3985600741733395,3985600741736319,3985519820932117
110,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,274,40886,40886,256,256,512,0,8,0,32,64,0x0,0x7de563a8eec0,4,82,51,3944,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,4,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,40631,957,0,66810,0,4,91823,91823,3985519828712784,3985600749470033,3985600749472316,3985519829231621
111,__amd_rocclr_copyBuffer.kd,2,0,275,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,75,99,7124,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,4,0,0,0,5,0,0,0,0,0,4,0,8,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,1,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,193078,7780,0,917786,0,8,942707,942707,3985519829229878,3985600749488020,3985600749491144,3985519831017940
112,__amd_rocclr_fillBufferAligned.kd,2,0,277,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,84,7124,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,1,0,0,0,0,0,0,0,9,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,1,0,4,0,0,0,4,0,0,0,2,0,0,0,8,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,0,0,0,0,2,0,0,0,42761,9998,0,83438,0,4,108475,108475,3985519831863720,3985600749529281,3985600749533086,3985519832923647
113,__amd_rocclr_fillBufferAligned.kd,2,0,278,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,64,5412,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,0,0,0,0,0,0,0,0,5,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,1,0,0,0,132526,0,0,577001,0,4,602095,602095,3985519832901854,3985600749533086,3985600749537132,3985519834799999
114,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,279,40886,40886,256,256,0,0,8,0,16,64,0x0,0x7de600721100,4,18,69,5572,0,0,0,0,0.0,0.0,0.0,2.0,128.0,128.0,0.0,128.0,0,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,1,0,1,0,3,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,5,0,4,4,0,0,0,0,1,0,0,0,41341,9508,0,73430,0,4,98198,98198,3985519835686349,3985600751402806,3985600751404929,3985519836611736
115,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,280,40886,40886,512,512,29184,0,52,4,48,64,0x0,0x7de563a8f040,8,492,282,23844,0,0,0,0,0.0,0.0,0.0,2.0,144.0,144.0,16.0,128.0,4,0,0,0,8,0,0,0,4,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,5,0,2,0,4,0,0,0,9,0,0,0,8,0,0,0,7,0,0,0,4,0,0,0,4,0,0,0,7,0,0,0,5,0,0,0,4,0,0,0,189535,9612,0,892319,0,8,917819,917819,3985519836596724,3985600751408774,3985600751412139,3985519838399398
116,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,281,40886,40886,256,256,0,0,8,0,32,64,0x0,0x7de563a8b900,4,31,77,6044,0,0,0,0,0.0,0.0,0.0,1.0,80.0,80.0,64.0,16.0,9,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,1,0,0,0,2,0,0,0,5,0,1,0,4,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,247697,9863,0,1212999,0,4,1238562,1238562,3985519837087169,3985600751418309,3985600751420271,3985519839847017
117,__amd_rocclr_copyBuffer.kd,2,0,282,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,75,99,7220,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,4,0,0,0,5,0,0,0,0,0,4,0,8,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,5,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,138876,7788,0,617988,0,8,643167,643167,3985519837686014,3985600751520299,3985600751524385,3985519841286935
118,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,284,40886,40886,256,128,0,0,20,4,64,64,0x0,0x7de60086ecc0,4,228,114,8936,0,0,0,0,0.0,0.0,0.0,16.0,512.0,512.0,256.0,256.0,14,0,0,0,18,0,0,0,15,0,4,4,14,0,4,4,7,0,0,0,10,0,0,0,12,0,4,4,9,0,4,4,14,0,8,8,18,0,8,8,14,0,4,4,14,0,4,4,7,0,8,8,10,0,8,8,12,0,4,4,8,0,4,4,43075,6456,0,82689,0,4,106441,106441,3985519842310758,3985600751704291,3985600751708016,3985519843179762
119,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,285,40886,40886,256,256,1536,48,28,4,80,64,0x0,0x7de600218380,4,256,173,14608,0,0,0,0,0.0,0.0,0.0,1.0,272.0,272.0,256.0,16.0,10,0,0,0,18,0,0,0,10,0,0,0,11,0,0,0,6,0,0,0,8,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,16,0,0,0,6,0,1,0,7,0,0,0,10,0,0,0,14,0,0,0,14,0,0,0,15,0,0,0,114557,7324,0,482473,0,4,506992,506992,3985519843176938,3985600751725442,3985600751730009,3985519844952331
120,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,286,40886,40886,256,256,0,0,12,4,32,64,0x0,0x7de601d957c0,4,59,73,5744,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,5,0,0,0,8,0,0,0,9,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,1,0,6,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,163726,7292,0,750880,0,4,775942,775942,3985519843827960,3985600751872218,3985600751874382,3985519846396525
121,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,287,40886,40886,256,256,0,0,24,0,32,64,0x0,0x7de564869a40,4,341,179,13584,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,4,0,0,0,12,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,9,0,0,0,5,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,1,0,4,0,0,0,126189,7107,0,542674,0,4,567633,567633,3985519844361639,3985600751893490,3985600751896134,3985519847801822
122,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,288,40886,40886,256,256,0,0,40,0,32,64,0x0,0x7de564869840,4,355,145,11100,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,1,0,0,0,4,0,0,0,1,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,8,0,0,0,9,0,0,0,8,0,0,0,4,0,1,0,8,0,0,0,4,0,0,0,4,0,0,0,244971,7100,0,1198423,0,4,1223151,1223151,3985519845528433,3985600751908792,3985600751911276,3985519849263081
123,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,289,40886,40886,256,256,0,0,36,4,80,64,0x0,0x7de564247fc0,4,252,137,11404,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,1,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,1,0,5,0,0,0,5,0,0,0,10,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,9,0,0,0,4,0,0,0,220457,10048,0,1031330,0,4,1093417,1093417,3985519846093768,3985600751927780,3985600751930464,3985519850646826
124,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,290,40886,40886,256,256,0,0,24,0,32,64,0x0,0x7de564869a40,4,341,165,13192,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,4,0,0,0,13,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,5,0,1,0,9,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,216821,7097,0,1040719,0,4,1065873,1065873,3985519846909954,3985600751948491,3985600751950895,3985519852093344
125,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,291,40886,40886,256,256,0,0,36,4,80,64,0x0,0x7de563e53a80,4,252,178,14096,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,8,0,0,0,5,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,1,0,0,0,10,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,1,0,4,0,0,0,218130,9976,0,1053242,0,4,1077932,1077932,3985519847447088,3985600751966838,3985600751969442,3985519853511670
126,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,292,40886,40886,256,256,512,0,8,0,32,64,0x0,0x7de563a8eec0,4,82,96,7492,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,8,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,5,0,0,0,5,0,1,0,4,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,8,0,0,0,1,0,0,0,0,0,0,0,210753,9868,0,1013332,0,4,1038028,1038028,3985519848331134,3985600751985626,3985600751987909,3985519854978017
127,__amd_rocclr_copyBuffer.kd,2,0,293,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,75,82,7248,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,4,0,0,0,7,0,0,0,0,0,4,0,8,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,130788,7849,0,573349,0,8,598648,598648,3985519848873105,3985600751991835,3985600751994799,3985519856388281
128,__amd_rocclr_fillBufferAligned.kd,2,0,295,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,76,5900,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,0,0,0,0,0,0,0,0,9,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,1,0,3,0,0,0,5,0,0,0,3,0,0,0,8,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,0,0,0,0,2,0,0,0,42036,10000,0,82094,0,4,106882,106882,3985519857229934,3985600752071873,3985600752073796,3985519858421795
129,__amd_rocclr_fillBufferAligned.kd,2,0,296,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,68,5936,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,2,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,4,0,0,0,0,0,0,0,1,0,0,0,144534,0,0,643009,0,4,668102,668102,3985519858400454,3985600752077842,3985600752079324,3985519860339519
130,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,297,40886,40886,256,256,0,0,8,0,16,64,0x0,0x7de600721100,4,18,71,5652,0,0,0,0,0.0,0.0,0.0,2.0,128.0,128.0,0.0,128.0,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,6,0,4,4,0,0,0,0,0,0,0,0,116184,7294,0,490618,0,4,515410,515410,3985519858888775,3985600752088858,3985600752090461,3985519861635324
131,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,298,40886,40886,512,512,29184,0,52,4,48,64,0x0,0x7de563a8f040,8,492,304,24232,0,0,0,0,0.0,0.0,0.0,2.0,144.0,144.0,16.0,128.0,4,0,0,0,8,0,0,0,4,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,5,0,2,0,5,0,0,0,9,0,0,0,8,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,6,0,0,0,217604,9867,0,1052612,0,8,1076948,1076948,3985519859380402,3985600752097591,3985600752100315,3985519863114460
132,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,299,40886,40886,256,256,0,0,8,0,32,64,0x0,0x7de563a8b900,4,31,78,6128,0,0,0,0,0.0,0.0,0.0,1.0,80.0,80.0,64.0,16.0,9,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,1,0,0,0,2,0,0,0,6,0,1,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,1,0,0,0,261374,9861,0,1293012,0,4,1317733,1317733,3985519859952838,3985600752108567,3985600752110290,3985519864563882
133,__amd_rocclr_copyBuffer.kd,2,0,300,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,75,72,6580,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,8,0,0,0,6,0,0,0,0,0,4,0,8,0,0,0,5,0,0,0,4,0,0,0,5,0,0,0,1,0,0,0,5,0,0,0,5,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,233678,11002,0,1144989,0,8,1169815,1169815,3985519860867479,3985600752129358,3985600752132563,3985519866053462
134,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,302,40886,40886,256,128,0,0,20,4,64,64,0x0,0x7de60086ecc0,4,228,113,8664,0,0,0,0,0.0,0.0,0.0,16.0,512.0,512.0,256.0,256.0,14,0,0,0,18,0,0,0,15,0,4,4,14,0,4,4,7,0,0,0,9,0,0,0,11,0,4,4,11,0,4,4,14,0,8,8,18,0,8,8,14,0,4,4,14,0,4,4,7,0,8,8,9,0,8,8,11,0,4,4,10,0,4,4,42186,6455,0,82324,0,4,105198,105198,3985519866900434,3985600752174264,3985600752177148,3985519867976123
135,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,303,40886,40886,256,256,1536,48,28,4,80,64,0x0,0x7de600218380,4,256,169,14148,0,0,0,0,0.0,0.0,0.0,1.0,272.0,272.0,256.0,16.0,12,0,0,0,19,0,0,0,12,0,0,0,11,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,16,0,0,0,6,0,1,0,7,0,0,0,10,0,0,0,14,0,0,0,14,0,0,0,13,0,0,0,201941,7257,0,950536,0,4,984450,984450,3985519867962443,3985600752184279,3985600752187924,3985519869810434
136,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,304,40886,40886,256,256,0,0,12,4,32,64,0x0,0x7de601d957c0,4,59,67,5828,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,5,0,0,0,8,0,0,0,8,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,5,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,230451,7380,0,1118040,0,4,1142980,1142980,3985519868568989,3985600752220172,3985600752221854,3985519871192587
137,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,305,40886,40886,256,256,0,0,24,0,32,64,0x0,0x7de564869a40,4,341,163,13072,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,4,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,1,0,4,0,0,0,200218,7094,0,951520,0,4,976501,976501,3985519869059755,3985600752235755,3985600752238038,3985519872640276
138,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,306,40886,40886,256,256,0,0,40,0,32,64,0x0,0x7de564869840,4,355,144,11260,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,0,0,0,0,4,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,10,0,0,0,9,0,0,0,8,0,0,0,4,0,1,0,8,0,0,0,4,0,0,0,4,0,0,0,189259,7100,0,891909,0,4,916767,916767,3985519870083768,3985600752244127,3985600752246331,3985519874160563
139,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,307,40886,40886,256,256,0,0,36,4,80,64,0x0,0x7de564247fc0,4,252,150,11548,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,1,0,5,0,0,0,4,0,0,0,10,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,9,0,0,0,4,0,0,0,120557,10054,0,484729,0,4,543833,543833,3985519870579130,3985600752262635,3985600752264798,3985519875475015
140,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,308,40886,40886,256,256,0,0,24,0,32,64,0x0,0x7de564869a40,4,341,166,12720,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,4,0,0,0,12,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,4,0,1,0,8,0,0,0,6,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,236349,7101,0,1149880,0,4,1174913,1174913,3985519871757371,3985600752272209,3985600752274612,3985519876905769
141,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,309,40886,40886,256,256,0,0,36,4,80,64,0x0,0x7de563e53a80,4,252,155,12684,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,8,0,0,0,4,0,0,0,6,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,1,0,0,0,11,0,0,0,5,0,0,0,5,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,1,0,4,0,0,0,122644,10101,0,524179,0,4,549703,549703,3985519872332040,3985600752288272,3985600752290516,3985519878237687
142,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,310,40886,40886,256,256,512,0,8,0,32,64,0x0,0x7de563a8eec0,4,82,92,7348,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,8,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,5,0,0,0,6,0,1,0,5,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,8,0,0,0,1,0,0,0,0,0,0,0,149668,9865,0,678324,0,4,702991,702991,3985519873148687,3985600752302894,3985600752304817,3985519879682752
143,__amd_rocclr_copyBuffer.kd,2,0,311,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,75,83,7376,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,4,0,0,0,5,0,0,0,0,0,4,0,8,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,2,0,0,0,1,0,0,0,4,0,0,0,1,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,126895,7788,0,553066,0,8,578073,578073,3985519873710107,3985600752310105,3985600752313990,3985519881063803
144,__amd_rocclr_fillBufferAligned.kd,2,0,313,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,74,5848,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,0,0,0,0,0,0,0,0,9,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,1,0,3,0,0,0,4,0,0,0,2,0,0,0,8,0,0,0,4,0,0,0,8,0,0,0,6,0,0,0,1,0,0,0,2,0,0,0,43238,10000,0,83018,0,4,108678,108678,3985519881731800,3985600752342993,3985600752344916,3985519882833178
145,__amd_rocclr_fillBufferAligned.kd,2,0,314,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,75,5728,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,1,0,0,0,167138,0,0,762990,0,4,788647,788647,3985519882811626,3985600752348682,3985600752350124,3985519884748408
146,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,315,40886,40886,256,256,0,0,8,0,16,64,0x0,0x7de600721100,4,18,69,5508,0,0,0,0,0.0,0.0,0.0,2.0,128.0,128.0,0.0,128.0,0,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,2,0,1,0,1,0,0,0,1,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,5,0,4,4,0,0,0,0,0,0,0,0,200956,7289,0,959102,0,4,983561,983561,3985519883313678,3985600752354490,3985600752356253,3985519886045104
147,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,316,40886,40886,512,512,29184,0,52,4,48,64,0x0,0x7de563a8f040,8,492,311,24912,0,0,0,0,0.0,0.0,0.0,2.0,144.0,144.0,16.0,128.0,6,0,0,0,8,0,0,0,5,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,5,0,2,0,5,0,0,0,10,0,0,0,9,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,4,0,0,0,146824,9922,0,659953,0,8,684952,684952,3985519883804624,3985600752365146,3985600752367590,3985519887437141
148,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,317,40886,40886,256,256,0,0,8,0,32,64,0x0,0x7de563a8b900,4,31,78,6236,0,0,0,0,0.0,0.0,0.0,1.0,80.0,80.0,64.0,16.0,10,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,1,0,0,0,2,0,0,0,5,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,145272,9863,0,651390,0,4,676504,676504,3985519884965729,3985600752372397,3985600752374079,3985519888864130
149,__amd_rocclr_copyBuffer.kd,2,0,318,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,75,92,7156,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,8,0,0,0,6,0,0,0,0,0,4,0,8,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,209742,11016,0,1011841,0,8,1036863,1036863,3985519885489083,3985600752388060,3985600752391825,3985519890348473
150,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,320,40886,40886,256,128,0,0,20,4,64,64,0x0,0x7de60086ecc0,4,228,108,8584,0,0,0,0,0.0,0.0,0.0,16.0,512.0,512.0,256.0,256.0,16,0,0,0,18,0,0,0,15,0,4,4,15,0,4,4,7,0,0,0,9,0,0,0,10,0,4,4,9,0,4,4,16,0,8,8,18,0,8,8,14,0,4,4,15,0,4,4,7,0,8,8,9,0,8,8,10,0,4,4,8,0,4,4,42332,6449,0,82475,0,4,105759,105759,3985519891205610,3985600752427318,3985600752430122,3985519892364062
151,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,321,40886,40886,256,256,1536,48,28,4,80,64,0x0,0x7de600218380,4,256,160,14420,0,0,0,0,0.0,0.0,0.0,1.0,272.0,272.0,256.0,16.0,10,0,0,0,18,0,0,0,10,0,0,0,11,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,18,0,0,0,7,0,1,0,9,0,0,0,10,0,0,0,14,0,0,0,14,0,0,0,13,0,0,0,218057,7463,0,1047226,0,4,1077061,1077061,3985519892350532,3985600752434408,3985600752437853,3985519894165023
152,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,322,40886,40886,256,256,0,0,12,4,32,64,0x0,0x7de601d957c0,4,59,78,5712,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,5,0,0,0,8,0,0,0,9,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,6,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,159803,7293,0,685515,0,4,754216,754216,3985519892901997,3985600752460767,3985600752462490,3985519895606213
153,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,323,40886,40886,256,256,0,0,24,0,32,64,0x0,0x7de564869a40,4,341,160,13632,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,4,0,0,0,12,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,5,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,9,0,0,0,4,0,1,0,4,0,0,0,232858,7102,0,1132079,0,4,1156863,1156863,3985519893409637,3985600752476951,3985600752479234,3985519897098168
154,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,324,40886,40886,256,256,0,0,40,0,32,64,0x0,0x7de564869840,4,355,141,10972,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,0,0,0,0,4,0,0,0,1,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,8,0,0,0,9,0,0,0,8,0,0,0,4,0,1,0,8,0,0,0,5,0,0,0,4,0,0,0,154877,7103,0,700024,0,4,725425,725425,3985519894453980,3985600752485283,3985600752487446,3985519898575781
155,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,325,40886,40886,256,256,0,0,36,4,80,64,0x0,0x7de564247fc0,4,252,144,11360,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,0,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,1,0,5,0,0,0,5,0,0,0,10,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,10,0,0,0,4,0,0,0,231336,10528,0,1088625,0,4,1151330,1151330,3985519894952867,3985600752500345,3985600752502469,3985519900023891
156,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,326,40886,40886,256,256,0,0,24,0,32,64,0x0,0x7de564869a40,4,341,166,13540,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,4,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,5,0,1,0,9,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,5,0,0,0,211795,7105,0,1011914,0,4,1037336,1037336,3985519896198859,3985600752509158,3985600752511522,3985519901491950
157,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,327,40886,40886,256,256,0,0,36,4,80,64,0x0,0x7de563e53a80,4,252,176,14144,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,8,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,1,0,0,0,10,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,1,0,5,0,0,0,209436,9969,0,1002434,0,4,1027742,1027742,3985519896768450,3985600752524501,3985600752526704,3985519902946930
158,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,328,40886,40886,256,256,512,0,8,0,32,64,0x0,0x7de563a8eec0,4,82,94,7428,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,8,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,8,0,0,0,4,0,0,0,5,0,0,0,5,0,1,0,4,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,8,0,0,0,1,0,0,0,0,0,0,0,227657,9945,0,1107593,0,4,1132152,1132152,3985519897617625,3985600752540685,3985600752542648,3985519904399437
159,__amd_rocclr_copyBuffer.kd,2,0,329,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,75,94,7084,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,4,0,0,0,6,0,0,0,0,0,4,0,9,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,219653,7781,0,1065906,0,8,1090470,1090470,3985519898192344,3985600752547335,3985600752550820,3985519905828298
160,__amd_rocclr_fillBufferAligned.kd,2,0,331,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,65,5648,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,0,0,0,0,0,0,0,0,9,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,1,0,1,0,4,0,0,0,4,0,0,0,2,0,0,0,8,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,0,0,0,0,2,0,0,0,42222,10002,0,80928,0,4,105838,105838,3985519906681498,3985600752579222,3985600752581025,3985519907882393
161,__amd_rocclr_fillBufferAligned.kd,2,0,332,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,70,5884,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,0,0,0,0,1,0,0,0,5,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,1,0,0,0,94394,0,0,366032,0,4,391158,391158,3985519907860651,3985600752584910,3985600752586112,3985519909075927
162,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,333,40886,40886,256,256,0,0,8,0,16,64,0x0,0x7de600721100,4,18,71,5616,0,0,0,0,0.0,0.0,0.0,2.0,128.0,128.0,0.0,128.0,0,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,4,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,5,0,4,4,0,0,0,0,0,0,0,0,179792,7355,0,838834,0,4,863735,863735,3985519908366148,3985600752590639,3985600752592321,3985519910126038
163,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,334,40886,40886,512,512,29184,0,52,4,48,64,0x0,0x7de563a8f040,8,492,312,24032,0,0,0,0,0.0,0.0,0.0,2.0,144.0,144.0,16.0,128.0,4,0,0,0,8,0,0,0,4,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,5,0,2,0,5,0,0,0,9,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,4,0,0,0,217999,9866,0,1052070,0,8,1076947,1076947,3985519909357543,3985600752603257,3985600752605861,3985519911241196
164,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,335,40886,40886,256,256,0,0,8,0,32,64,0x0,0x7de563a8b900,4,31,76,6100,0,0,0,0,0.0,0.0,0.0,1.0,80.0,80.0,64.0,16.0,9,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,1,0,0,0,2,0,0,0,6,0,1,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,245684,9864,0,1204306,0,4,1229308,1229308,3985519910386223,3985600752611469,3985600752613192,3985519912150290
165,__amd_rocclr_copyBuffer.kd,2,0,336,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,75,86,7300,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,4,0,0,0,6,0,0,0,0,0,4,0,8,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,1,0,0,0,2,0,0,0,5,0,0,0,1,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,123120,7856,0,534863,0,8,559532,559532,3985519911484266,3985600752627693,3985600752630498,3985519913410993
166,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,338,40886,40886,1024,128,0,0,20,4,64,64,0x0,0x7de60086ecc0,16,912,422,34032,0,0,0,0,0.0,0.0,0.0,64.0,2048.0,2048.0,1024.0,1024.0,56,0,16,16,60,0,16,16,61,0,16,16,56,0,16,16,32,0,16,16,44,0,16,16,40,0,16,16,30,0,16,16,56,0,16,16,60,0,16,16,60,0,16,16,56,0,16,16,32,0,16,16,44,0,16,16,40,0,16,16,29,0,16,16,51749,6450,0,125895,0,16,149266,149266,3985519914251916,3985600752662865,3985600752667312,3985519915346083
167,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,339,40886,40886,512,512,2560,48,28,4,80,64,0x0,0x7de600218380,8,588,388,30172,0,0,0,0,0.0,0.0,0.0,1.0,1040.0,1040.0,1024.0,16.0,16,0,0,0,24,0,0,0,16,0,0,0,17,0,0,0,13,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,22,0,0,0,12,0,1,0,13,0,0,0,16,0,0,0,20,0,0,0,22,0,0,0,20,0,0,0,293266,7458,0,1463482,0,8,1488318,1488318,3985519915330520,3985600752671118,3985600752675364,3985519916909453
168,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,340,40886,40886,256,256,0,0,12,4,32,64,0x0,0x7de601d957c0,4,59,69,5800,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,5,0,0,0,8,0,0,0,8,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,5,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,299736,7290,0,1500599,0,4,1525376,1525376,3985519915885359,3985600752697316,3985600752699039,3985519917958753
169,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,341,40886,40886,256,256,0,0,24,0,32,64,0x0,0x7de564869a40,4,341,155,12928,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,4,0,0,0,16,0,0,0,9,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,9,0,0,0,8,0,0,0,6,0,0,0,12,0,0,0,7,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,1,0,4,0,0,0,213047,7169,0,1002764,0,4,1048010,1048010,3985519916470965,3985600752712539,3985600752714702,3985519919083425
170,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,342,40886,40886,256,256,0,0,40,0,32,64,0x0,0x7de564869840,4,355,129,11188,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,0,0,0,0,8,0,0,0,6,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,12,0,0,0,12,0,0,0,8,0,0,0,4,0,1,0,8,0,0,0,4,0,0,0,4,0,0,0,202858,7096,0,943345,0,4,991858,991858,3985519917436762,3985600752727881,3985600752730205,3985519920193976
171,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,343,40886,40886,256,256,0,0,36,4,80,64,0x0,0x7de564247fc0,4,252,147,11716,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,1,0,6,0,0,0,4,0,0,0,9,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,9,0,0,0,4,0,0,0,179634,10054,0,844624,0,4,868928,868928,3985519918535445,3985600752743024,3985600752745227,3985519921307531
172,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,344,40886,40886,256,256,0,0,24,0,32,64,0x0,0x7de564869a40,4,341,163,12528,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,5,0,0,0,16,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,4,0,1,0,11,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,229963,7096,0,1097131,0,4,1142450,1142450,3985519919647869,3985600752751516,3985600752753880,3985519922423300
173,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,345,40886,40886,256,256,0,0,36,4,80,64,0x0,0x7de563e53a80,4,252,158,12560,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,9,0,0,0,7,0,0,0,9,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,1,0,0,0,11,0,0,0,8,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,1,0,4,0,0,0,220948,10037,0,1045484,0,4,1092257,1092257,3985519920776897,3985600752768822,3985600752771105,3985519923738093
174,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,346,40886,40886,256,256,512,0,8,0,32,64,0x0,0x7de563a8eec0,4,82,87,7540,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,8,0,0,0,5,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,5,0,0,0,6,0,1,0,5,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,8,0,0,0,1,0,0,0,0,0,0,0,233248,9860,0,1137791,0,4,1162428,1162428,3985519921888290,3985600752784805,3985600752786768,3985519925110091
175,__amd_rocclr_copyBuffer.kd,2,0,347,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,75,84,7376,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,5,0,0,0,5,0,0,0,0,0,4,0,8,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,2,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,235265,7791,0,1143856,0,8,1169759,1169759,3985519922988556,3985600752792497,3985600752795822,3985519926604509
176,__amd_rocclr_fillBufferAligned.kd,2,0,349,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,78,5824,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,0,0,0,0,0,0,0,0,9,0,0,0,5,0,0,0,4,0,0,0,0,0,0,0,0,0,1,0,3,0,0,0,5,0,0,0,2,0,0,0,8,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,0,0,0,0,2,0,0,0,42393,10000,0,83104,0,4,107912,107912,3985519927340026,3985600752818856,3985600752820538,3985519928499910
177,__amd_rocclr_fillBufferAligned.kd,2,0,350,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,69,5744,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,2,0,0,0,5,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,1,0,0,0,138030,87,0,611113,0,4,635359,635359,3985519928478138,3985600752824504,3985600752825826,3985519930253782
178,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,351,40886,40886,256,256,0,0,8,0,16,64,0x0,0x7de600721100,4,18,68,5684,0,0,0,0,0.0,0.0,0.0,2.0,128.0,128.0,0.0,128.0,0,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,1,0,1,0,1,0,0,0,1,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,1,0,4,4,5,0,4,4,0,0,0,0,0,0,0,0,156351,7292,0,709233,0,4,734498,734498,3985519928970826,3985600752839326,3985600752841329,3985519931250534
179,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,352,40886,40886,512,512,29184,0,52,4,48,64,0x0,0x7de563a8f040,8,492,320,24204,0,0,0,0,0.0,0.0,0.0,2.0,144.0,144.0,16.0,128.0,4,0,0,0,8,0,0,0,5,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,5,0,2,0,5,0,0,0,10,0,0,0,9,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,7,0,0,0,4,0,0,0,191347,9866,0,903962,0,8,929127,929127,3985519929457034,3985600752848620,3985600752851344,3985519932676582
180,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,353,40886,40886,256,256,0,0,8,0,32,64,0x0,0x7de563a8b900,4,31,78,6180,0,0,0,0,0.0,0.0,0.0,1.0,80.0,80.0,64.0,16.0,9,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,1,0,0,0,2,0,0,0,5,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,207008,9862,0,990115,0,4,1015367,1015367,3985519930014919,3985600752855069,3985600752856912,3985519934089299
181,__amd_rocclr_copyBuffer.kd,2,0,354,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,75,96,6908,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,8,0,0,0,5,0,0,0,0,0,4,0,9,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,198102,11013,0,947024,0,8,972167,972167,3985519930848020,3985600752868889,3985600752872895,3985519935558921
182,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,356,40886,40886,1024,128,0,0,20,4,64,64,0x0,0x7de60086ecc0,16,912,420,33740,0,0,0,0,0.0,0.0,0.0,64.0,2048.0,2048.0,1024.0,1024.0,56,0,16,16,60,0,16,16,61,0,16,16,56,0,16,16,28,0,16,16,40,0,16,16,48,0,16,16,30,0,16,16,56,0,16,16,60,0,16,16,60,0,16,16,56,0,16,16,28,0,16,16,40,0,16,16,48,0,16,16,29,0,16,16,52020,6578,0,124138,0,16,148154,148154,3985519936363750,3985600752903180,3985600752907306,3985519937502934
183,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,357,40886,40886,512,512,2560,48,28,4,80,64,0x0,0x7de600218380,8,588,401,30096,0,0,0,0,0.0,0.0,0.0,1.0,1040.0,1040.0,1024.0,16.0,17,0,0,0,26,0,0,0,16,0,0,0,17,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,14,0,0,0,13,0,0,0,22,0,0,0,12,0,1,0,13,0,0,0,16,0,0,0,20,0,0,0,20,0,0,0,19,0,0,0,184635,7266,0,870532,0,8,894314,894314,3985519937488192,3985600752911032,3985600752915198,3985519938876754
184,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,358,40886,40886,256,256,0,0,12,4,32,64,0x0,0x7de601d957c0,4,59,66,5892,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,5,0,0,0,12,0,0,0,13,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,9,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,203846,7419,0,952598,0,4,999177,999177,3985519938018245,3985600752935027,3985600752936910,3985519940032021
185,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,359,40886,40886,256,256,0,0,24,0,32,64,0x0,0x7de564869a40,4,341,177,13172,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,4,0,0,0,12,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,5,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,1,0,4,0,0,0,207529,7096,0,992690,0,4,1017595,1017595,3985519938595137,3985600752950530,3985600752952613,3985519941529473
186,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,360,40886,40886,256,256,0,0,40,0,32,64,0x0,0x7de564869840,4,355,139,11004,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,0,0,0,0,4,0,0,0,1,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,9,0,0,0,8,0,0,0,4,0,1,0,8,0,0,0,4,0,0,0,4,0,0,0,140752,7097,0,624249,0,4,649282,649282,3985519939379807,3985600752958261,3985600752960465,3985519942952126
187,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,361,40886,40886,256,256,0,0,36,4,80,64,0x0,0x7de564247fc0,4,252,145,11588,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,0,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,1,0,5,0,0,0,6,0,0,0,10,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,9,0,0,0,4,0,0,0,206060,10046,0,986583,0,4,1011509,1011509,3985519940592979,3985600752968717,3985600752970880,3985519944381869
188,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,362,40886,40886,256,256,0,0,24,0,32,64,0x0,0x7de564869a40,4,341,160,13392,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,4,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,5,0,1,0,10,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,243755,7097,0,1191815,0,4,1216613,1216613,3985519941153558,3985600752977970,3985600752980334,3985519945790951
189,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,363,40886,40886,256,256,0,0,36,4,80,64,0x0,0x7de563e53a80,4,252,157,12684,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,8,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,1,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,1,0,4,0,0,0,215401,9964,0,1039004,0,4,1063788,1063788,3985519942015882,3985600752994355,3985600752996558,3985519947261594
190,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,364,40886,40886,256,256,512,0,8,0,32,64,0x0,0x7de563a8eec0,4,82,102,7396,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,8,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,5,0,0,0,5,0,1,0,4,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,8,0,0,0,1,0,0,0,0,0,0,0,197331,9859,0,941878,0,4,966341,966341,3985519942599985,3985600753010058,3985600753011981,3985519948707210
191,__amd_rocclr_copyBuffer.kd,2,0,365,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,75,79,7120,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,4,0,0,0,6,0,0,0,0,0,4,0,8,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,2,0,0,0,2,0,0,0,5,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,123877,7791,0,535684,0,8,560867,560867,3985519943452245,3985600753017188,3985600753021354,3985519950164163
192,__amd_rocclr_fillBufferAligned.kd,2,0,367,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,68,5612,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,0,0,0,0,0,0,0,0,9,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,1,0,3,0,0,0,4,0,0,0,2,0,0,0,8,0,0,0,4,0,0,0,9,0,0,0,6,0,0,0,0,0,0,0,2,0,0,0,41598,10003,0,80442,0,4,105230,105230,3985519950968982,3985600753054363,3985600753056486,3985519952178169
193,__amd_rocclr_fillBufferAligned.kd,2,0,368,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,74,5864,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,4,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,2,0,0,0,150463,0,0,674732,0,4,699626,699626,3985519952157108,3985600753060332,3985600753061814,3985519954047001
194,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,369,40886,40886,256,256,0,0,8,0,16,64,0x0,0x7de600721100,4,18,73,5568,0,0,0,0,0.0,0.0,0.0,2.0,128.0,128.0,0.0,128.0,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,2,0,1,0,1,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,5,0,4,4,0,0,0,0,0,0,0,0,152233,7289,0,687448,0,4,712441,712441,3985519952641684,3985600753074753,3985600753076596,3985519955538475
195,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,370,40886,40886,512,512,29184,0,52,4,48,64,0x0,0x7de563a8f040,8,492,298,24020,0,0,0,0,0.0,0.0,0.0,2.0,144.0,144.0,16.0,128.0,4,0,0,0,8,0,0,0,4,0,0,0,2,0,0,0,6,0,0,0,8,0,0,0,5,0,2,0,5,0,0,0,9,0,0,0,8,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,4,0,0,0,200582,9858,0,955556,0,8,980554,980554,3985519953131057,3985600753084127,3985600753086611,3985519956863242
196,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,371,40886,40886,256,256,0,0,8,0,32,64,0x0,0x7de563a8b900,4,31,75,6068,0,0,0,0,0.0,0.0,0.0,1.0,80.0,80.0,64.0,16.0,9,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,5,0,0,0,8,0,0,0,1,0,0,0,2,0,0,0,6,0,1,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,200010,9861,0,955162,0,4,979874,979874,3985519953678847,3985600753100111,3985600753101993,3985519958313505
197,__amd_rocclr_copyBuffer.kd,2,0,372,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,75,82,7228,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,8,0,0,0,7,0,0,0,0,0,4,0,8,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,1,0,0,0,5,0,0,0,5,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,236989,11023,0,1155865,0,8,1181986,1181986,3985519954569873,3985600753112729,3985600753116255,3985519959769967
198,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,374,40886,40886,1024,128,0,0,20,4,64,64,0x0,0x7de60086ecc0,16,912,419,33952,0,0,0,0,0.0,0.0,0.0,64.0,2048.0,2048.0,1024.0,1024.0,64,0,16,16,64,0,16,16,57,0,16,16,60,0,16,16,28,0,16,16,36,0,16,16,40,0,16,16,30,0,16,16,64,0,16,16,64,0,16,16,56,0,16,16,60,0,16,16,28,0,16,16,36,0,16,16,40,0,16,16,29,0,16,16,52528,6627,0,123188,0,16,147722,147722,3985519960630158,3985600753145377,3985600753149904,3985519961707841
199,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,375,40886,40886,512,512,2560,48,28,4,80,64,0x0,0x7de600218380,8,588,372,30944,0,0,0,0,0.0,0.0,0.0,1.0,1040.0,1040.0,1024.0,16.0,16,0,0,0,24,0,0,0,16,0,0,0,17,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,24,0,0,0,13,0,1,0,15,0,0,0,16,0,0,0,20,0,0,0,20,0,0,0,19,0,0,0,183112,7258,0,859726,0,8,884108,884108,3985519961692428,3985600753153550,3985600753157836,3985519963040540
200,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,376,40886,40886,256,256,0,0,12,4,32,64,0x0,0x7de601d957c0,4,59,77,5960,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,5,0,0,0,8,0,0,0,8,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,5,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,166235,7283,0,766602,0,4,791265,791265,3985519962231044,3985600753173138,3985600753174981,3985519964257038
201,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,377,40886,40886,256,256,0,0,24,0,32,64,0x0,0x7de564869a40,4,341,174,13720,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,4,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,6,0,0,0,9,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,1,0,5,0,0,0,204902,7098,0,976440,0,4,1001605,1001605,3985519963290079,3985600753181190,3985600753183394,3985519965638400
202,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,378,40886,40886,256,256,0,0,40,0,32,64,0x0,0x7de564869840,4,355,142,11004,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,0,0,0,0,4,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,9,0,0,0,9,0,0,0,8,0,0,0,4,0,1,0,8,0,0,0,5,0,0,0,4,0,0,0,184546,7096,0,862889,0,4,888425,888425,3985519963868844,3985600753199698,3985600753201741,3985519967076485
203,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,379,40886,40886,256,256,0,0,36,4,80,64,0x0,0x7de564247fc0,4,252,146,11808,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,1,0,5,0,0,0,4,0,0,0,9,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,10,0,0,0,4,0,0,0,212794,10049,0,1023385,0,4,1048363,1048363,3985519964765169,3985600753207028,3985600753209031,3985519968589520
204,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,380,40886,40886,256,256,0,0,24,0,32,64,0x0,0x7de564869a40,4,341,169,13216,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,4,0,0,0,12,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,4,0,1,0,8,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,9,0,0,0,4,0,0,0,4,0,0,0,203056,7103,0,966872,0,4,991817,991817,3985519965319658,3985600753223373,3985600753225416,3985519969964051
205,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,381,40886,40886,256,256,0,0,36,4,80,64,0x0,0x7de563e53a80,4,252,158,12564,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,8,0,0,0,4,0,0,0,6,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,1,0,0,0,11,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,9,0,0,0,8,0,1,0,4,0,0,0,225964,9960,0,1096162,0,4,1121000,1121000,3985519966139099,3985600753239116,3985600753241119,3985519971422637
206,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,382,40886,40886,256,256,512,0,8,0,32,64,0x0,0x7de563a8eec0,4,82,93,7484,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,8,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,5,0,0,0,6,0,1,0,5,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,8,0,0,0,1,0,0,0,0,0,0,0,244520,9864,0,1200432,0,4,1225021,1225021,3985519966680399,3985600753253697,3985600753255580,3985519972877026
207,__amd_rocclr_copyBuffer.kd,2,0,383,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,75,88,7324,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,8,0,0,0,5,0,0,0,0,0,4,0,8,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,5,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,206714,11020,0,998085,0,8,1022653,1022653,3985519967580980,3985600753261068,3985600753264994,3985519974366327
208,__amd_rocclr_fillBufferAligned.kd,2,0,385,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,77,5748,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,0,0,0,0,0,0,0,0,9,0,0,0,4,0,0,0,4,0,0,0,1,0,0,0,1,0,1,0,3,0,0,0,4,0,0,0,2,0,0,0,8,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,0,0,0,0,2,0,0,0,43565,10005,0,84124,0,4,109902,109902,3985519975196724,3985600753287908,3985600753289871,3985519976351430
209,__amd_rocclr_fillBufferAligned.kd,2,0,386,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,71,5636,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,0,0,0,0,0,0,0,0,5,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,1,0,0,0,104155,0,0,420315,0,4,445577,445577,3985519976329398,3985600753293676,3985600753295118,3985519978186482
210,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,387,40886,40886,256,256,0,0,8,0,16,64,0x0,0x7de600721100,4,18,68,5640,0,0,0,0,0.0,0.0,0.0,2.0,128.0,128.0,0.0,128.0,0,0,0,0,5,0,0,0,5,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,1,0,1,0,1,0,0,0,1,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,5,0,4,4,0,0,0,0,0,0,0,0,151654,7282,0,669917,0,4,708978,708978,3985519976818641,3985600753308218,3985600753310101,3985519979636795
211,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,388,40886,40886,512,512,29184,0,52,4,48,64,0x0,0x7de563a8f040,8,492,282,24240,0,0,0,0,0.0,0.0,0.0,2.0,144.0,144.0,16.0,128.0,4,0,0,0,8,0,0,0,5,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,5,0,2,0,5,0,0,0,10,0,0,0,9,0,0,0,5,0,0,0,6,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,4,0,0,0,208599,9868,0,999633,0,8,1024656,1024656,3985519977297598,3985600753328848,3985600753331372,3985519981076993
212,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,389,40886,40886,256,256,0,0,8,0,32,64,0x0,0x7de563a8b900,4,31,75,6156,0,0,0,0,0.0,0.0,0.0,1.0,80.0,80.0,64.0,16.0,9,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,1,0,0,0,2,0,0,0,5,0,1,0,4,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,146749,9936,0,662364,0,4,687033,687033,3985519978392226,3985600753336460,3985600753338382,3985519982436853
213,__amd_rocclr_copyBuffer.kd,2,0,390,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,75,85,7096,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,8,0,0,0,5,0,0,0,0,0,4,0,8,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,5,0,0,0,5,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,162538,11012,0,752415,0,8,777362,777362,3985519978895690,3985600753350120,3985600753353885,3985519983905282
214,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,392,40886,40886,1024,128,0,0,20,4,64,64,0x0,0x7de60086ecc0,16,912,444,33708,0,0,0,0,0.0,0.0,0.0,64.0,2048.0,2048.0,1024.0,1024.0,60,0,16,16,60,0,16,16,57,0,16,16,60,0,16,16,28,0,16,16,36,0,16,16,40,0,16,16,38,0,16,16,60,0,16,16,60,0,16,16,56,0,16,16,60,0,16,16,28,0,16,16,36,0,16,16,40,0,16,16,37,0,16,16,49659,6455,0,125058,0,16,146466,146466,3985519984767647,3985600753383289,3985600753387415,3985519985874352
215,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,393,40886,40886,512,512,2560,48,28,4,80,64,0x0,0x7de600218380,8,588,407,30916,0,0,0,0,0.0,0.0,0.0,1.0,1040.0,1040.0,1024.0,16.0,16,0,0,0,24,0,0,0,16,0,0,0,17,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,22,0,0,0,12,0,1,0,13,0,0,0,18,0,0,0,21,0,0,0,22,0,0,0,19,0,0,0,77623,7265,0,277279,0,8,302103,302103,3985519985859751,3985600753391060,3985600753395547,3985519987118280
216,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,394,40886,40886,256,256,0,0,12,4,32,64,0x0,0x7de601d957c0,4,59,70,6056,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,5,0,0,0,8,0,0,0,9,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,1,0,6,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,222041,7412,0,1071074,0,4,1098213,1098213,3985519986403354,3985600753412972,3985600753414895,3985519988534513
217,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,395,40886,40886,256,256,0,0,24,0,32,64,0x0,0x7de564869a40,4,341,153,13076,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,4,0,0,0,12,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,9,0,0,0,8,0,0,0,5,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,1,0,4,0,0,0,138130,7103,0,609117,0,4,634009,634009,3985519987407508,3985600753420984,3985600753423308,3985519989905058
218,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,396,40886,40886,256,256,0,0,40,0,32,64,0x0,0x7de564869840,4,355,141,11216,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,0,0,0,0,4,0,0,0,1,0,0,0,4,0,0,0,4,0,0,0,9,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,8,0,0,0,9,0,0,0,8,0,0,0,4,0,1,0,8,0,0,0,4,0,0,0,4,0,0,0,169903,7188,0,783154,0,4,808379,808379,3985519987903771,3985600753430879,3985600753432962,3985519991278558
219,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,397,40886,40886,256,256,0,0,36,4,80,64,0x0,0x7de564247fc0,4,252,147,12100,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,0,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,9,0,0,0,8,0,1,0,5,0,0,0,5,0,0,0,10,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,9,0,0,0,4,0,0,0,148936,10056,0,672527,0,4,697572,697572,3985519989113499,3985600753439852,3985600753441935,3985519992764864
220,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,398,40886,40886,256,256,0,0,24,0,32,64,0x0,0x7de564869a40,4,341,179,13352,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,4,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,5,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,5,0,1,0,9,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,4,0,0,0,177717,7102,0,829651,0,4,854110,854110,3985519990181537,3985600753455876,3985600753458079,3985519994026829
221,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,399,40886,40886,256,256,0,0,36,4,80,64,0x0,0x7de563e53a80,4,252,161,13048,0,0,0,0,0.0,0.0,0.0,1.0,48.0,48.0,32.0,16.0,8,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,5,0,0,0,8,0,0,0,5,0,0,0,1,0,0,0,10,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,1,0,4,0,0,0,264818,10237,0,1310628,0,4,1335579,1335579,3985519990674085,3985600753471098,3985600753473261,3985519995478304
222,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,400,40886,40886,256,256,512,0,8,0,32,64,0x0,0x7de563a8eec0,4,82,98,7348,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,8,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,8,0,0,0,4,0,0,0,5,0,0,0,5,0,1,0,4,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,8,0,0,0,1,0,0,0,0,0,0,0,246821,9861,0,1211378,0,4,1236344,1236344,3985519991849321,3985600753487162,3985600753489085,3985519996975416
223,__amd_rocclr_copyBuffer.kd,2,0,401,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,75,84,7164,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,4,0,0,0,6,0,0,0,1,0,4,0,8,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,256718,7788,0,1266358,0,8,1291507,1291507,3985519992971229,3985600753494132,3985600753497137,3985519998431648
224,__amd_rocclr_fillBufferAligned.kd,2,0,403,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,77,5852,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,1,0,0,0,1,0,0,0,9,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,1,0,3,0,0,0,4,0,0,0,2,0,0,0,8,0,0,0,4,0,0,0,8,0,0,0,5,0,0,0,0,0,0,0,2,0,0,0,41879,10005,0,81771,0,4,106702,106702,3985519999264980,3985600753525979,3985600753527702,3985520000477471
225,__amd_rocclr_fillBufferAligned.kd,2,0,404,40886,40886,256,256,0,0,12,4,48,64,0x0,0x7de6159e3a00,4,42,78,5864,0,0,0,0,0.0,0.0,0.0,1.0,32.0,32.0,16.0,16.0,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,1,0,0,0,182028,0,0,836847,0,4,874550,874550,3985520000456060,3985600753531668,3985600753533150,3985520002180438
226,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,405,40886,40886,256,256,0,0,8,0,16,64,0x0,0x7de600721100,4,18,71,5560,0,0,0,0,0.0,0.0,0.0,2.0,128.0,128.0,0.0,128.0,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,1,0,1,0,1,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,5,0,4,4,0,0,0,0,0,0,0,0,121120,7362,0,516500,0,4,541497,541497,3985520000952433,3985600753536875,3985600753538798,3985520003535560
227,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,406,40886,40886,512,512,29184,0,52,4,48,64,0x0,0x7de563a8f040,8,492,273,23836,0,0,0,0,0.0,0.0,0.0,2.0,144.0,144.0,16.0,128.0,4,0,0,0,8,0,0,0,4,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,5,0,2,0,5,0,0,0,9,0,0,0,8,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,7,0,0,0,4,0,0,0,124082,9935,0,533419,0,8,558677,558677,3985520001442698,3985600753548452,3985600753551257,3985520004898815
228,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,407,40886,40886,256,256,0,0,8,0,32,64,0x0,0x7de563a8b900,4,31,81,6264,0,0,0,0,0.0,0.0,0.0,1.0,80.0,80.0,64.0,16.0,9,0,0,0,4,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,8,0,0,0,1,0,0,0,2,0,0,0,6,0,1,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,151787,9988,0,688375,0,4,713034,713034,3985520002448674,3985600753564997,3985600753566960,3985520006211294
229,__amd_rocclr_copyBuffer.kd,2,0,408,40886,40886,512,512,0,0,16,0,32,64,0x0,0x7de6159e3a80,8,75,79,7260,0,0,0,0,0.0,0.0,0.0,4.0,128.0,128.0,64.0,64.0,4,0,0,0,8,0,0,0,6,0,0,0,0,0,4,0,8,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,1,0,0,0,5,0,0,0,5,0,0,0,0,0,0,0,5,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,160093,11287,0,737064,0,8,762437,762437,3985520002961582,3985600753579258,3985600753582463,3985520007591884
