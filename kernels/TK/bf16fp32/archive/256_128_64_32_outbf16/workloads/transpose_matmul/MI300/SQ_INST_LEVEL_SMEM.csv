Dispatch_ID,Kernel_Name,GPU_ID,queue-id,queue-index,pid,tid,Grid_Size,Workgroup_Size,LDS_Per_Workgroup,Scratch_Per_Workitem,Arch_VGPR,Accum_VGPR,SGPR,wave_size,sig,obj,SQ_INSTS_SMEM,SQ_INST_LEVEL_SMEM,SQ_ACCUM_PREV_HIRES,SQ_INSTS,SQ_INSTS_VALU,SQ_INSTS_VALU_ADD_F16,SQ_INSTS_VALU_MUL_F16,SQ_INSTS_VALU_FMA_F16,TA_BUFFER_READ_WAVEFRONTS_sum,TA_BUFFER_WRITE_WAVEFRONTS_sum,TD_SPI_STALL_sum,TD_LOAD_WAVEFRONT_sum,TCP_READ_TAGCONFLICT_STALL_CYCLES_sum,TCP_WRITE_TAGCONFLICT_STALL_CYCLES_sum,TCP_ATOMIC_TAGCONFLICT_STALL_CYCLES_sum,TCP_TA_TCP_STATE_READ_sum,TCC_REQ[0],TCC_READ[0],TCC_WRITE[0],TCC_ATOMIC[0],TCC_REQ[1],TCC_READ[1],TCC_WRITE[1],TCC_ATOMIC[1],TCC_REQ[2],TCC_READ[2],TCC_WRITE[2],TCC_ATOMIC[2],TCC_REQ[3],TCC_READ[3],TCC_WRITE[3],TCC_ATOMIC[3],TCC_REQ[4],TCC_READ[4],TCC_WRITE[4],TCC_ATOMIC[4],TCC_REQ[5],TCC_READ[5],TCC_WRITE[5],TCC_ATOMIC[5],TCC_REQ[6],TCC_READ[6],TCC_WRITE[6],TCC_ATOMIC[6],TCC_REQ[7],TCC_READ[7],TCC_WRITE[7],TCC_ATOMIC[7],TCC_REQ[8],TCC_READ[8],TCC_WRITE[8],TCC_ATOMIC[8],TCC_REQ[9],TCC_READ[9],TCC_WRITE[9],TCC_ATOMIC[9],TCC_REQ[10],TCC_READ[10],TCC_WRITE[10],TCC_ATOMIC[10],TCC_REQ[11],TCC_READ[11],TCC_WRITE[11],TCC_ATOMIC[11],TCC_REQ[12],TCC_READ[12],TCC_WRITE[12],TCC_ATOMIC[12],TCC_REQ[13],TCC_READ[13],TCC_WRITE[13],TCC_ATOMIC[13],TCC_REQ[14],TCC_READ[14],TCC_WRITE[14],TCC_ATOMIC[14],TCC_REQ[15],TCC_READ[15],TCC_WRITE[15],TCC_ATOMIC[15],CPC_CPC_TCIU_BUSY,CPC_CPC_TCIU_IDLE,CPF_CPF_TCIU_BUSY,CPF_CPF_TCIU_STALL,SPI_CSN_NUM_THREADGROUPS,SPI_CSN_WAVE,DispatchNs,Start_Timestamp,End_Timestamp,CompleteNs
0,"void at::native::(anonymous namespace)::distribution_elementwise_grid_stride_kernel<float, 4, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}>(long, at::PhiloxCudaState, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}) [clone .kd]",2,0,0,41380,41380,622592,256,0,0,56,0,48,64,0x0,0x71180543bf80,68096,382188,30529712,68765696,54870528,0,0,0,0.0,0.0,0.0,1048576.0,0.0,0.0,0.0,1048576.0,131728,656,131072,0,131400,328,131072,0,131723,651,131072,0,131734,662,131072,0,131876,804,131072,0,131712,640,131072,0,131712,640,131072,0,131716,644,131072,0,131729,657,131072,0,131400,328,131072,0,131723,651,131072,0,131735,663,131072,0,131876,804,131072,0,131712,640,131072,0,131712,640,131072,0,131716,644,131072,0,3138,1420118,38135,0,2432,9728,3985531157636202,3985600464261405,3985600464349455,3985531167285390
1,"void at::native::vectorized_elementwise_kernel<8, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul> >(int, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,1,41380,41380,8388608,256,0,0,20,4,32,64,0x0,0x70d7e9046d40,393216,463842,37122272,10747904,7602176,0,0,0,0.0,0.0,2607.0,262144.0,0.0,0.0,0.0,262144.0,197022,65950,131072,0,197248,66176,131072,0,197259,66187,131072,0,197272,66200,131072,0,196952,65880,131072,0,197032,65960,131072,0,196928,65856,131072,0,196613,65541,131072,0,197023,65951,131072,0,197248,66176,131072,0,197260,66188,131072,0,197275,66203,131072,0,196948,65876,131072,0,197030,65958,131072,0,196928,65856,131072,0,196616,65544,131072,0,1186,1181760,19530,0,32768,131072,3985531172760892,3985600469372577,3985600469465073,3985531173381529
2,"void at::native::(anonymous namespace)::distribution_elementwise_grid_stride_kernel<float, 4, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}>(long, at::PhiloxCudaState, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}) [clone .kd]",2,0,2,41380,41380,622592,256,0,0,56,0,48,64,0x0,0x71180543bf80,68096,355508,28447880,68765696,54870528,0,0,0,0.0,0.0,0.0,1048576.0,0.0,0.0,0.0,1048576.0,131712,640,131072,0,131400,328,131072,0,131712,640,131072,0,131712,640,131072,0,131716,644,131072,0,131712,640,131072,0,131872,800,131072,0,131716,644,131072,0,131712,640,131072,0,131400,328,131072,0,131712,640,131072,0,131712,640,131072,0,131716,644,131072,0,131712,640,131072,0,131872,800,131072,0,131716,644,131072,0,3163,2162227,36869,0,2432,9728,3985531173390061,3985600469465073,3985600469551601,3985531174868666
3,"void at::native::vectorized_elementwise_kernel<8, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul> >(int, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,3,41380,41380,8388608,256,0,0,20,4,32,64,0x0,0x70d7e9046d40,393216,485756,38759464,10747904,7602176,0,0,0,0.0,0.0,2520.0,262144.0,0.0,0.0,0.0,262144.0,197022,65950,131072,0,197252,66180,131072,0,197279,66207,131072,0,197297,66225,131072,0,196928,65856,131072,0,196935,65863,131072,0,196932,65860,131072,0,196696,65624,131072,0,197023,65951,131072,0,197252,66180,131072,0,197280,66208,131072,0,197296,66224,131072,0,196928,65856,131072,0,196934,65862,131072,0,196932,65860,131072,0,196696,65624,131072,0,1186,1765920,19360,0,32768,131072,3985531173944861,3985600469551601,3985600469639410,3985531176266291
4,"void at::native::elementwise_kernel_manual_unroll<128, 8, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,4,41380,41380,8388608,128,0,0,40,0,64,64,0x0,0x70d7e8a6f6c0,6684672,5478388,438181960,81002496,31981568,0,0,0,0.0,0.0,3246.0,2097152.0,50331648.0,0.0,0.0,2097152.0,4319276,4188204,131072,0,4319180,4188108,131072,0,4319194,4188122,131072,0,4319440,4188368,131072,0,4319100,4188028,131072,0,4319100,4188028,131072,0,4319100,4188028,131072,0,4318780,4187708,131072,0,4319279,4188207,131072,0,4319180,4188108,131072,0,4319192,4188120,131072,0,4319444,4188372,131072,0,4319100,4188028,131072,0,4319101,4188029,131072,0,4319100,4188028,131072,0,4318780,4187708,131072,0,1673,5464072,23338,0,65536,131072,3985531181548197,3985600476294902,3985600476646741,3985531182434957
5,__amd_rocclr_fillBufferAligned.kd,2,0,5,41380,41380,77824,256,0,0,12,4,48,64,0x0,0x71100401ba00,28032,56998,4560664,645952,140160,0,0,0,0.0,0.0,0.0,25600.0,0.0,0.0,0.0,25600.0,25920,320,25600,0,25690,90,25600,0,26324,724,25600,0,26400,800,25600,0,25924,324,25600,0,25928,328,25600,0,25600,0,25600,0,25680,80,25600,0,25920,320,25600,0,25686,86,25600,0,26324,724,25600,0,26401,801,25600,0,25924,324,25600,0,25928,328,25600,0,25601,1,25600,0,25680,80,25600,0,1394,224060,24773,0,304,1216,3985531185019386,3985600479242372,3985600479253949,3985531185592352
6,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,6,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,53224,4242652,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658459,4527387,131072,0,4658289,4527217,131072,0,4658109,4527037,131072,0,4658143,4527071,131072,0,4658258,4527186,131072,0,4658257,4527185,131072,0,4658288,4527216,131072,0,4658308,4527236,131072,0,4658454,4527382,131072,0,4658289,4527217,131072,0,4658108,4527036,131072,0,4658138,4527066,131072,0,4658258,4527186,131072,0,4658259,4527187,131072,0,4658288,4527216,131072,0,4658308,4527236,131072,0,1394,16926921,58511,0,1184,4736,3985531274682592,3985600568206057,3985600569423053,3985531276728635
7,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,7,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,117677,9465592,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658284,4527212,131072,0,4658639,4527567,131072,0,4658125,4527053,131072,0,4658160,4527088,131072,0,4658264,4527192,131072,0,4658278,4527206,131072,0,4658310,4527238,131072,0,4658351,4527279,131072,0,4658278,4527206,131072,0,4658636,4527564,131072,0,4658126,4527054,131072,0,4658158,4527086,131072,0,4658265,4527193,131072,0,4658281,4527209,131072,0,4658313,4527241,131072,0,4658352,4527280,131072,0,1986,16778535,380804,0,1184,4736,3985531275499429,3985600569423053,3985600570876317,3985531279102964
8,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,8,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,121563,9654756,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658294,4527222,131072,0,4658612,4527540,131072,0,4658122,4527050,131072,0,4658155,4527083,131072,0,4658265,4527193,131072,0,4658291,4527219,131072,0,4658288,4527216,131072,0,4658329,4527257,131072,0,4658299,4527227,131072,0,4658610,4527538,131072,0,4658121,4527049,131072,0,4658168,4527096,131072,0,4658261,4527189,131072,0,4658292,4527220,131072,0,4658289,4527217,131072,0,4658330,4527258,131072,0,1778,16900438,326316,0,1184,4736,3985531276097002,3985600570876317,3985600573097956,3985531281430863
9,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,9,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,142512,11392400,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658280,4527208,131072,0,4658278,4527206,131072,0,4658527,4527455,131072,0,4658150,4527078,131072,0,4658268,4527196,131072,0,4658286,4527214,131072,0,4658310,4527238,131072,0,4658352,4527280,131072,0,4658275,4527203,131072,0,4658276,4527204,131072,0,4658527,4527455,131072,0,4658158,4527086,131072,0,4658264,4527192,131072,0,4658278,4527206,131072,0,4658313,4527241,131072,0,4658352,4527280,131072,0,1778,17383177,347564,0,1184,4736,3985531276616480,3985600573097956,3985600574918242,3985531283583004
10,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,10,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,144082,11539564,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658302,4527230,131072,0,4658293,4527221,131072,0,4658525,4527453,131072,0,4658157,4527085,131072,0,4658265,4527193,131072,0,4658289,4527217,131072,0,4658288,4527216,131072,0,4658334,4527262,131072,0,4658308,4527236,131072,0,4658293,4527221,131072,0,4658522,4527450,131072,0,4658157,4527085,131072,0,4658262,4527190,131072,0,4658289,4527217,131072,0,4658289,4527217,131072,0,4658338,4527266,131072,0,1778,17635850,378541,0,1184,4736,3985531277133033,3985600574918242,3985600576577090,3985531285685251
11,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,11,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,178999,14368780,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658282,4527210,131072,0,4658278,4527206,131072,0,4658124,4527052,131072,0,4658562,4527490,131072,0,4658264,4527192,131072,0,4658283,4527211,131072,0,4658309,4527237,131072,0,4658355,4527283,131072,0,4658274,4527202,131072,0,4658276,4527204,131072,0,4658120,4527048,131072,0,4658515,4527443,131072,0,4658262,4527190,131072,0,4658289,4527217,131072,0,4658316,4527244,131072,0,4658350,4527278,131072,0,1778,17299079,386482,0,1184,4736,3985531277673592,3985600576577090,3985600578183701,3985531287764423
12,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,12,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,180710,14509048,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658297,4527225,131072,0,4658292,4527220,131072,0,4658118,4527046,131072,0,4658552,4527480,131072,0,4658263,4527191,131072,0,4658279,4527207,131072,0,4658288,4527216,131072,0,4658341,4527269,131072,0,4658299,4527227,131072,0,4658292,4527220,131072,0,4658116,4527044,131072,0,4658550,4527478,131072,0,4658259,4527187,131072,0,4658281,4527209,131072,0,4658289,4527217,131072,0,4658340,4527268,131072,0,1778,18261794,416492,0,1184,4736,3985531278441717,3985600578183701,3985600579757224,3985531289930203
13,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,13,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,164950,13120416,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658280,4527208,131072,0,4658278,4527206,131072,0,4658116,4527044,131072,0,4658143,4527071,131072,0,4658660,4527588,131072,0,4658284,4527212,131072,0,4658311,4527239,131072,0,4658350,4527278,131072,0,4658279,4527207,131072,0,4658276,4527204,131072,0,4658115,4527043,131072,0,4658146,4527074,131072,0,4658699,4527627,131072,0,4658283,4527211,131072,0,4658310,4527238,131072,0,4658349,4527277,131072,0,1778,18276705,470382,0,1184,4736,3985531278924039,3985600579757224,3985600581308673,3985531292060942
14,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,14,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,136875,10952716,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658304,4527232,131072,0,4658299,4527227,131072,0,4658118,4527046,131072,0,4658158,4527086,131072,0,4658662,4527590,131072,0,4658288,4527216,131072,0,4658288,4527216,131072,0,4658340,4527268,131072,0,4658300,4527228,131072,0,4658299,4527227,131072,0,4658120,4527048,131072,0,4658155,4527083,131072,0,4658701,4527629,131072,0,4658282,4527210,131072,0,4658289,4527217,131072,0,4658342,4527270,131072,0,1778,18449439,461223,0,1184,4736,3985531279414284,3985600581308673,3985600582829838,3985531294447468
15,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,15,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,145026,11607964,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658282,4527210,131072,0,4658280,4527208,131072,0,4658122,4527050,131072,0,4658159,4527087,131072,0,4658259,4527187,131072,0,4658687,4527615,131072,0,4658310,4527238,131072,0,4658345,4527273,131072,0,4658279,4527207,131072,0,4658279,4527207,131072,0,4658124,4527052,131072,0,4658155,4527083,131072,0,4658259,4527187,131072,0,4658652,4527580,131072,0,4658313,4527241,131072,0,4658346,4527274,131072,0,1778,18012675,396254,0,1184,4736,3985531279935564,3985600582829838,3985600584342270,3985531296794016
16,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,16,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,164495,13202272,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658302,4527230,131072,0,4658297,4527225,131072,0,4658122,4527050,131072,0,4658159,4527087,131072,0,4658263,4527191,131072,0,4658679,4527607,131072,0,4658288,4527216,131072,0,4658340,4527268,131072,0,4658303,4527231,131072,0,4658298,4527226,131072,0,4658121,4527049,131072,0,4658153,4527081,131072,0,4658259,4527187,131072,0,4658721,4527649,131072,0,4658289,4527217,131072,0,4658343,4527271,131072,0,1778,17803274,458531,0,1184,4736,3985531280758690,3985600584342270,3985600585816646,3985531299020756
17,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,17,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,170361,13634168,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658283,4527211,131072,0,4658279,4527207,131072,0,4658122,4527050,131072,0,4658154,4527082,131072,0,4658260,4527188,131072,0,4658281,4527209,131072,0,4658711,4527639,131072,0,4658361,4527289,131072,0,4658279,4527207,131072,0,4658277,4527205,131072,0,4658117,4527045,131072,0,4658147,4527075,131072,0,4658260,4527188,131072,0,4658288,4527216,131072,0,4658754,4527682,131072,0,4658359,4527287,131072,0,1778,17950340,436690,0,1184,4736,3985531281245259,3985600585816646,3985600587279205,3985531301247507
18,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,18,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,142649,11405444,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658300,4527228,131072,0,4658295,4527223,131072,0,4658122,4527050,131072,0,4658164,4527092,131072,0,4658260,4527188,131072,0,4658283,4527211,131072,0,4658688,4527616,131072,0,4658337,4527265,131072,0,4658303,4527231,131072,0,4658295,4527223,131072,0,4658119,4527047,131072,0,4658162,4527090,131072,0,4658260,4527188,131072,0,4658285,4527213,131072,0,4658689,4527617,131072,0,4658338,4527266,131072,0,1778,18344556,412032,0,1184,4736,3985531281726841,3985600587279205,3985600588722455,3985531303740551
19,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,19,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,145758,11659068,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658278,4527206,131072,0,4658279,4527207,131072,0,4658124,4527052,131072,0,4658154,4527082,131072,0,4658265,4527193,131072,0,4658279,4527207,131072,0,4658310,4527238,131072,0,4658750,4527678,131072,0,4658278,4527206,131072,0,4658276,4527204,131072,0,4658122,4527050,131072,0,4658147,4527075,131072,0,4658264,4527192,131072,0,4658281,4527209,131072,0,4658313,4527241,131072,0,4658749,4527677,131072,0,1778,18206483,417288,0,1184,4736,3985531282247310,3985600588722455,3985600590164863,3985531306073088
20,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,20,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,181002,14506576,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658301,4527229,131072,0,4658295,4527223,131072,0,4658120,4527048,131072,0,4658164,4527092,131072,0,4658261,4527189,131072,0,4658284,4527212,131072,0,4658288,4527216,131072,0,4658742,4527670,131072,0,4658302,4527230,131072,0,4658293,4527221,131072,0,4658120,4527048,131072,0,4658154,4527082,131072,0,4658259,4527187,131072,0,4658289,4527217,131072,0,4658289,4527217,131072,0,4658783,4527711,131072,0,1778,18252897,447257,0,1184,4736,3985531283121953,3985600590164863,3985600591581314,3985531308497520
21,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,21,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,173399,13892956,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658285,4527213,131072,0,4658279,4527207,131072,0,4658119,4527047,131072,0,4658155,4527083,131072,0,4658618,4527546,131072,0,4658283,4527211,131072,0,4658311,4527239,131072,0,4658349,4527277,131072,0,4658279,4527207,131072,0,4658276,4527204,131072,0,4658119,4527047,131072,0,4658150,4527078,131072,0,4658661,4527589,131072,0,4658287,4527215,131072,0,4658314,4527242,131072,0,4658349,4527277,131072,0,1778,18234131,400025,0,1184,4736,3985531283603094,3985600591581314,3985600592985666,3985531311006287
22,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,22,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,163378,13011620,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658304,4527232,131072,0,4658296,4527224,131072,0,4658120,4527048,131072,0,4658160,4527088,131072,0,4658704,4527632,131072,0,4658284,4527212,131072,0,4658288,4527216,131072,0,4658336,4527264,131072,0,4658296,4527224,131072,0,4658295,4527223,131072,0,4658119,4527047,131072,0,4658153,4527081,131072,0,4658663,4527591,131072,0,4658284,4527212,131072,0,4658289,4527217,131072,0,4658340,4527268,131072,0,1778,17239832,420471,0,1184,4736,3985531284080189,3985600592985666,3985600594392983,3985531313165338
23,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,23,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,162128,12983548,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658284,4527212,131072,0,4658279,4527207,131072,0,4658127,4527055,131072,0,4658157,4527085,131072,0,4658264,4527192,131072,0,4658683,4527611,131072,0,4658312,4527240,131072,0,4658349,4527277,131072,0,4658278,4527206,131072,0,4658277,4527205,131072,0,4658123,4527051,131072,0,4658148,4527076,131072,0,4658264,4527192,131072,0,4658689,4527617,131072,0,4658314,4527242,131072,0,4658345,4527273,131072,0,1778,19217902,387876,0,1184,4736,3985531284594298,3985600594392983,3985600595785959,3985531315635067
24,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,24,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,155591,12427852,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658301,4527229,131072,0,4658292,4527220,131072,0,4658123,4527051,131072,0,4658159,4527087,131072,0,4658264,4527192,131072,0,4658690,4527618,131072,0,4658288,4527216,131072,0,4658341,4527269,131072,0,4658297,4527225,131072,0,4658293,4527221,131072,0,4658119,4527047,131072,0,4658151,4527079,131072,0,4658265,4527193,131072,0,4658682,4527610,131072,0,4658289,4527217,131072,0,4658338,4527266,131072,0,1778,18176008,357593,0,1184,4736,3985531285323556,3985600595785959,3985600597184383,3985531318073010
25,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,25,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,144825,11553428,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658284,4527212,131072,0,4658280,4527208,131072,0,4658121,4527049,131072,0,4658155,4527083,131072,0,4658261,4527189,131072,0,4658283,4527211,131072,0,4658716,4527644,131072,0,4658353,4527281,131072,0,4658278,4527206,131072,0,4658278,4527206,131072,0,4658118,4527046,131072,0,4658146,4527074,131072,0,4658260,4527188,131072,0,4658281,4527209,131072,0,4658718,4527646,131072,0,4658354,4527282,131072,0,1778,18386372,422857,0,1184,4736,3985531285806910,3985600597184383,3985600598575156,3985531320587926
26,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,28,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,55172,4463216,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658294,4527222,131072,0,4658293,4527221,131072,0,4658112,4527040,131072,0,4658146,4527074,131072,0,4658257,4527185,131072,0,4658258,4527186,131072,0,4658448,4527376,131072,0,4658314,4527242,131072,0,4658298,4527226,131072,0,4658289,4527217,131072,0,4658112,4527040,131072,0,4658148,4527076,131072,0,4658258,4527186,131072,0,4658256,4527184,131072,0,4658449,4527377,131072,0,4658313,4527241,131072,0,1394,16799725,58119,0,1184,4736,3985531322009677,3985600598683315,3985600600065555,3985531324539325
27,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,32,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,53224,4296808,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658275,4527203,131072,0,4658279,4527207,131072,0,4658110,4527038,131072,0,4658142,4527070,131072,0,4658258,4527186,131072,0,4658257,4527185,131072,0,4658307,4527235,131072,0,4658489,4527417,131072,0,4658276,4527204,131072,0,4658276,4527204,131072,0,4658112,4527040,131072,0,4658142,4527070,131072,0,4658257,4527185,131072,0,4658256,4527184,131072,0,4658308,4527236,131072,0,4658487,4527415,131072,0,1394,17244552,55563,0,1184,4736,3985531325484582,3985600600117832,3985600601459132,3985531327872691
28,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,36,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,52131,4208416,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658296,4527224,131072,0,4658292,4527220,131072,0,4658111,4527039,131072,0,4658149,4527077,131072,0,4658258,4527186,131072,0,4658259,4527187,131072,0,4658288,4527216,131072,0,4658474,4527402,131072,0,4658298,4527226,131072,0,4658291,4527219,131072,0,4658112,4527040,131072,0,4658149,4527077,131072,0,4658258,4527186,131072,0,4658257,4527185,131072,0,4658289,4527217,131072,0,4658472,4527400,131072,0,1394,16775862,40399,0,1184,4736,3985531328648918,3985600601501274,3985600602853830,3985531331103875
29,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,40,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,53499,4287856,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658436,4527364,131072,0,4658278,4527206,131072,0,4658112,4527040,131072,0,4658142,4527070,131072,0,4658258,4527186,131072,0,4658257,4527185,131072,0,4658306,4527234,131072,0,4658330,4527258,131072,0,4658437,4527365,131072,0,4658276,4527204,131072,0,4658111,4527039,131072,0,4658144,4527072,131072,0,4658257,4527185,131072,0,4658256,4527184,131072,0,4658306,4527234,131072,0,4658328,4527256,131072,0,1394,16813198,47002,0,1184,4736,3985531332149641,3985600602893168,3985600604288107,3985531334657807
30,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,44,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,52154,4218376,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658458,4527386,131072,0,4658291,4527219,131072,0,4658113,4527041,131072,0,4658146,4527074,131072,0,4658259,4527187,131072,0,4658258,4527186,131072,0,4658288,4527216,131072,0,4658313,4527241,131072,0,4658456,4527384,131072,0,4658291,4527219,131072,0,4658111,4527039,131072,0,4658149,4527077,131072,0,4658259,4527187,131072,0,4658256,4527184,131072,0,4658289,4527217,131072,0,4658312,4527240,131072,0,1394,17226163,43679,0,1184,4736,3985531335709041,3985600604330289,3985600605690497,3985531338153623
31,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,48,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,37593,2893516,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658275,4527203,131072,0,4658439,4527367,131072,0,4658112,4527040,131072,0,4658143,4527071,131072,0,4658257,4527185,131072,0,4658258,4527186,131072,0,4658308,4527236,131072,0,4658328,4527256,131072,0,4658275,4527203,131072,0,4658436,4527364,131072,0,4658111,4527039,131072,0,4658143,4527071,131072,0,4658260,4527188,131072,0,4658256,4527184,131072,0,4658306,4527234,131072,0,4658327,4527255,131072,0,1394,16789638,46375,0,1184,4736,3985531339322531,3985600605732999,3985600607091044,3985531341819841
32,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,52,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,53337,4237832,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658294,4527222,131072,0,4658451,4527379,131072,0,4658111,4527039,131072,0,4658147,4527075,131072,0,4658256,4527184,131072,0,4658258,4527186,131072,0,4658288,4527216,131072,0,4658313,4527241,131072,0,4658293,4527221,131072,0,4658449,4527377,131072,0,4658112,4527040,131072,0,4658149,4527077,131072,0,4658256,4527184,131072,0,4658256,4527184,131072,0,4658289,4527217,131072,0,4658312,4527240,131072,0,1394,17251153,40566,0,1184,4736,3985531342727642,3985600607131864,3985600608497760,3985531345179355
33,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,56,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,57730,4594284,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658276,4527204,131072,0,4658278,4527206,131072,0,4658269,4527197,131072,0,4658143,4527071,131072,0,4658258,4527186,131072,0,4658258,4527186,131072,0,4658306,4527234,131072,0,4658329,4527257,131072,0,4658275,4527203,131072,0,4658276,4527204,131072,0,4658271,4527199,131072,0,4658144,4527072,131072,0,4658256,4527184,131072,0,4658257,4527185,131072,0,4658310,4527238,131072,0,4658328,4527256,131072,0,1394,16796582,47384,0,1184,4736,3985531346318608,3985600608538700,3985600609887330,3985531348813495
34,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,60,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,54224,4282664,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658295,4527223,131072,0,4658292,4527220,131072,0,4658271,4527199,131072,0,4658148,4527076,131072,0,4658256,4527184,131072,0,4658256,4527184,131072,0,4658288,4527216,131072,0,4658313,4527241,131072,0,4658296,4527224,131072,0,4658290,4527218,131072,0,4658272,4527200,131072,0,4658149,4527077,131072,0,4658257,4527185,131072,0,4658256,4527184,131072,0,4658289,4527217,131072,0,4658314,4527242,131072,0,1394,17221242,40514,0,1184,4736,3985531349670211,3985600609926428,3985600611301137,3985531352131268
35,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,64,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,51808,4087416,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658276,4527204,131072,0,4658278,4527206,131072,0,4658110,4527038,131072,0,4658304,4527232,131072,0,4658257,4527185,131072,0,4658257,4527185,131072,0,4658309,4527237,131072,0,4658331,4527259,131072,0,4658275,4527203,131072,0,4658276,4527204,131072,0,4658112,4527040,131072,0,4658304,4527232,131072,0,4658258,4527186,131072,0,4658256,4527184,131072,0,4658307,4527235,131072,0,4658328,4527256,131072,0,1394,16782928,46220,0,1184,4736,3985531353186988,3985600611340836,3985600612695835,3985531355695495
36,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,68,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,53695,4294816,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658294,4527222,131072,0,4658294,4527222,131072,0,4658110,4527038,131072,0,4658307,4527235,131072,0,4658258,4527186,131072,0,4658257,4527185,131072,0,4658288,4527216,131072,0,4658314,4527242,131072,0,4658298,4527226,131072,0,4658293,4527221,131072,0,4658112,4527040,131072,0,4658312,4527240,131072,0,4658257,4527185,131072,0,4658257,4527185,131072,0,4658289,4527217,131072,0,4658312,4527240,131072,0,1394,17241300,40116,0,1184,4736,3985531356679549,3985600612735093,3985600614089252,3985531359115689
37,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,72,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,54195,4288032,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658436,4527364,131072,0,4658278,4527206,131072,0,4658112,4527040,131072,0,4658141,4527069,131072,0,4658257,4527185,131072,0,4658257,4527185,131072,0,4658305,4527233,131072,0,4658329,4527257,131072,0,4658435,4527363,131072,0,4658276,4527204,131072,0,4658111,4527039,131072,0,4658143,4527071,131072,0,4658258,4527186,131072,0,4658256,4527184,131072,0,4658307,4527235,131072,0,4658327,4527255,131072,0,1394,16786814,43262,0,1184,4736,3985531360155065,3985600614129551,3985600615488357,3985531362649360
38,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,76,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,53791,4254224,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658456,4527384,131072,0,4658293,4527221,131072,0,4658111,4527039,131072,0,4658148,4527076,131072,0,4658256,4527184,131072,0,4658258,4527186,131072,0,4658288,4527216,131072,0,4658313,4527241,131072,0,4658456,4527384,131072,0,4658291,4527219,131072,0,4658111,4527039,131072,0,4658148,4527076,131072,0,4658256,4527184,131072,0,4658256,4527184,131072,0,4658289,4527217,131072,0,4658313,4527241,131072,0,1394,17224717,43819,0,1184,4736,3985531363708696,3985600615527775,3985600616876525,3985531366133299
39,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,80,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,53495,4302008,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658274,4527202,131072,0,4658439,4527367,131072,0,4658110,4527038,131072,0,4658139,4527067,131072,0,4658260,4527188,131072,0,4658258,4527186,131072,0,4658306,4527234,131072,0,4658328,4527256,131072,0,4658274,4527202,131072,0,4658437,4527365,131072,0,4658109,4527037,131072,0,4658143,4527071,131072,0,4658257,4527185,131072,0,4658256,4527184,131072,0,4658306,4527234,131072,0,4658328,4527256,131072,0,1394,16782508,46691,0,1184,4736,3985531367169119,3985600616915903,3985600618280878,3985531369689774
40,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,84,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,54463,4276508,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658295,4527223,131072,0,4658453,4527381,131072,0,4658110,4527038,131072,0,4658145,4527073,131072,0,4658258,4527186,131072,0,4658258,4527186,131072,0,4658288,4527216,131072,0,4658314,4527242,131072,0,4658298,4527226,131072,0,4658450,4527378,131072,0,4658111,4527039,131072,0,4658149,4527077,131072,0,4658256,4527184,131072,0,4658256,4527184,131072,0,4658289,4527217,131072,0,4658314,4527242,131072,0,1394,17206153,41911,0,1184,4736,3985531370651696,3985600618320657,3985600619669207,3985531373112682
41,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,88,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,54193,4336776,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658276,4527204,131072,0,4658278,4527206,131072,0,4658271,4527199,131072,0,4658141,4527069,131072,0,4658259,4527187,131072,0,4658257,4527185,131072,0,4658306,4527234,131072,0,4658330,4527258,131072,0,4658275,4527203,131072,0,4658276,4527204,131072,0,4658271,4527199,131072,0,4658142,4527070,131072,0,4658256,4527184,131072,0,4658256,4527184,131072,0,4658308,4527236,131072,0,4658328,4527256,131072,0,1394,16786209,47790,0,1184,4736,3985531374225016,3985600619707784,3985600621057255,3985531376758009
42,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,92,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,54683,4387144,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658297,4527225,131072,0,4658292,4527220,131072,0,4658271,4527199,131072,0,4658144,4527072,131072,0,4658258,4527186,131072,0,4658257,4527185,131072,0,4658288,4527216,131072,0,4658313,4527241,131072,0,4658297,4527225,131072,0,4658290,4527218,131072,0,4658270,4527198,131072,0,4658146,4527074,131072,0,4658257,4527185,131072,0,4658256,4527184,131072,0,4658289,4527217,131072,0,4658313,4527241,131072,0,1394,17203027,38525,0,1184,4736,3985531377656126,3985600621096353,3985600622456120,3985531380113938
43,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,96,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,55456,4439860,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658275,4527203,131072,0,4658279,4527207,131072,0,4658112,4527040,131072,0,4658302,4527230,131072,0,4658258,4527186,131072,0,4658257,4527185,131072,0,4658306,4527234,131072,0,4658331,4527259,131072,0,4658276,4527204,131072,0,4658276,4527204,131072,0,4658111,4527039,131072,0,4658305,4527233,131072,0,4658256,4527184,131072,0,4658256,4527184,131072,0,4658307,4527235,131072,0,4658326,4527254,131072,0,1394,16800053,46733,0,1184,4736,3985531381125172,3985600622495338,3985600623831109,3985531383645657
44,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,100,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,53520,4291144,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658298,4527226,131072,0,4658291,4527219,131072,0,4658110,4527038,131072,0,4658307,4527235,131072,0,4658258,4527186,131072,0,4658256,4527184,131072,0,4658288,4527216,131072,0,4658314,4527242,131072,0,4658299,4527227,131072,0,4658289,4527217,131072,0,4658112,4527040,131072,0,4658309,4527237,131072,0,4658258,4527186,131072,0,4658256,4527184,131072,0,4658289,4527217,131072,0,4658312,4527240,131072,0,1394,17257707,41429,0,1184,4736,3985531384706043,3985600623870527,3985600625234781,3985531387200370
45,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,104,41380,41380,303104,256,64000,0,128,352,112,64,0x0,0x70d7e8217980,18944,42530,3332712,267647104,163333632,0,0,0,13336576.0,265216.0,0.0,13601792.0,0.0,0.0,0.0,13601792.0,4658275,4527203,131072,0,4658278,4527206,131072,0,4658111,4527039,131072,0,4658141,4527069,131072,0,4658419,4527347,131072,0,4658257,4527185,131072,0,4658305,4527233,131072,0,4658331,4527259,131072,0,4658273,4527201,131072,0,4658276,4527204,131072,0,4658109,4527037,131072,0,4658143,4527071,131072,0,4658417,4527345,131072,0,4658256,4527184,131072,0,4658309,4527237,131072,0,4658328,4527256,131072,0,1394,16790685,46781,0,1184,4736,3985531388240687,3985600625275481,3985600626629559,3985531390753090
46,"void at::native::vectorized_elementwise_kernel<8, at::native::FillFunctor<c10::BFloat16>, std::array<char*, 1ul> >(int, at::native::FillFunctor<c10::BFloat16>, std::array<char*, 1ul>) [clone .kd]",2,0,107,41380,41380,8388608,256,0,0,12,4,16,64,0x0,0x70d7fdb2ed00,131072,149232,11938304,3801088,1179648,0,0,0,0.0,0.0,1748.0,393216.0,0.0,0.0,0.0,393216.0,393250,34,393216,0,393240,24,393216,0,393216,0,393216,0,393224,8,393216,0,393616,400,393216,0,393536,320,393216,0,393776,560,393216,0,393536,320,393216,0,393246,30,393216,0,393242,26,393216,0,393216,0,393216,0,393223,7,393216,0,393616,400,393216,0,393536,320,393216,0,393776,560,393216,0,393536,320,393216,0,1185,776412,26508,0,32768,131072,3985531395316032,3985600629947325,3985600629991270,3985531395883831
47,micro_tk(micro_globals) [clone .kd],2,0,108,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,414552,33242192,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555535,6293391,262144,0,6555534,6293390,262144,0,6555548,6293404,262144,0,6555535,6293391,262144,0,6555471,6293327,262144,0,6555947,6293803,262144,0,6555204,6293060,262144,0,6555220,6293076,262144,0,6555537,6293393,262144,0,6555533,6293389,262144,0,6555547,6293403,262144,0,6555536,6293392,262144,0,6555469,6293325,262144,0,6555947,6293803,262144,0,6555205,6293061,262144,0,6555221,6293077,262144,0,1778,22855726,380573,0,2048,16384,3985531396252616,3985600630293997,3985600631913667,3985531398652022
48,micro_tk(micro_globals) [clone .kd],2,0,110,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,218322,17526824,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555527,6293383,262144,0,6555538,6293394,262144,0,6555530,6293386,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555441,6293297,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555537,6293393,262144,0,6555533,6293389,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555441,6293297,262144,0,1186,21489489,17418,0,2048,16384,3985531399631589,3985600631947319,3985600633798972,3985531402360391
49,micro_tk(micro_globals) [clone .kd],2,0,112,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,271156,21698560,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555528,6293384,262144,0,6555538,6293394,262144,0,6555528,6293384,262144,0,6555450,6293306,262144,0,6555446,6293302,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555537,6293393,262144,0,6555533,6293389,262144,0,6555450,6293306,262144,0,6555448,6293304,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,22172264,21716,0,2048,16384,3985531403201184,3985600633829616,3985600635812823,3985531405809208
50,micro_tk(micro_globals) [clone .kd],2,0,114,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,263680,21142088,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555527,6293383,262144,0,6555529,6293385,262144,0,6555537,6293393,262144,0,6555529,6293385,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555441,6293297,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555540,6293396,262144,0,6555534,6293390,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555441,6293297,262144,0,1186,21506280,16799,0,2048,16384,3985531406658873,3985600635840784,3985600637666999,3985531409417159
51,micro_tk(micro_globals) [clone .kd],2,0,116,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,276766,22139872,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555527,6293383,262144,0,6555768,6293624,262144,0,6555538,6293394,262144,0,6555529,6293385,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555765,6293621,262144,0,6555538,6293394,262144,0,6555533,6293389,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21906777,14750,0,2048,16384,3985531410452790,3985600637695201,3985600639507035,3985531413125800
52,micro_tk(micro_globals) [clone .kd],2,0,118,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,262634,20859344,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555530,6293386,262144,0,6555540,6293396,262144,0,6555768,6293624,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555530,6293386,262144,0,6555525,6293381,262144,0,6555535,6293391,262144,0,6555774,6293630,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21700214,20611,0,2048,16384,3985531413953443,3985600639532472,3985600641332609,3985531416636848
53,micro_tk(micro_globals) [clone .kd],2,0,120,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,224342,17986000,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555767,6293623,262144,0,6555536,6293392,262144,0,6555528,6293384,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555765,6293621,262144,0,6555537,6293393,262144,0,6555533,6293389,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21719885,16804,0,2048,16384,3985531417611839,3985600641360130,3985600643160106,3985531420286671
54,micro_tk(micro_globals) [clone .kd],2,0,122,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,289368,23325056,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555527,6293383,262144,0,6555537,6293393,262144,0,6555769,6293625,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555536,6293392,262144,0,6555776,6293632,262144,0,6555450,6293306,262144,0,6555208,6293064,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,22042217,19764,0,2048,16384,3985531421159221,3985600643187266,3985600644989526,3985531423940982
55,micro_tk(micro_globals) [clone .kd],2,0,124,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,219872,17523776,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555527,6293383,262144,0,6555528,6293384,262144,0,6555538,6293394,262144,0,6555531,6293387,262144,0,6555450,6293306,262144,0,6555446,6293302,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555537,6293393,262144,0,6555533,6293389,262144,0,6555450,6293306,262144,0,6555448,6293304,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21657878,18276,0,2048,16384,3985531424810607,3985600645014883,3985600646807289,3985531427507542
56,micro_tk(micro_globals) [clone .kd],2,0,126,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,226158,18077288,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555527,6293383,262144,0,6555540,6293396,262144,0,6555529,6293385,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555441,6293297,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555539,6293395,262144,0,6555532,6293388,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555441,6293297,262144,0,1186,21009890,15242,0,2048,16384,3985531428567658,3985600646832566,3985600648614836,3985531431265665
57,micro_tk(micro_globals) [clone .kd],2,0,128,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,254484,20230720,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555527,6293383,262144,0,6555538,6293394,262144,0,6555529,6293385,262144,0,6555450,6293306,262144,0,6555446,6293302,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555537,6293393,262144,0,6555532,6293388,262144,0,6555450,6293306,262144,0,6555447,6293303,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21694565,20337,0,2048,16384,3985531432056454,3985600648639873,3985600650403756,3985531434753279
58,micro_tk(micro_globals) [clone .kd],2,0,130,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,277296,22216472,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555530,6293386,262144,0,6555538,6293394,262144,0,6555529,6293385,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555441,6293297,262144,0,6555529,6293385,262144,0,6555528,6293384,262144,0,6555537,6293393,262144,0,6555532,6293388,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555441,6293297,262144,0,1186,21610402,18794,0,2048,16384,3985531435739065,3985600650426710,3985600652185786,3985531438423162
59,micro_tk(micro_globals) [clone .kd],2,0,132,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,278356,22270456,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555768,6293624,262144,0,6555537,6293393,262144,0,6555528,6293384,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555765,6293621,262144,0,6555536,6293392,262144,0,6555531,6293387,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21970815,17174,0,2048,16384,3985531439374397,3985600652206217,3985600653950270,3985531442077322
60,micro_tk(micro_globals) [clone .kd],2,0,134,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,266848,21320920,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555528,6293384,262144,0,6555535,6293391,262144,0,6555768,6293624,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555530,6293386,262144,0,6555525,6293381,262144,0,6555535,6293391,262144,0,6555772,6293628,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21761716,18648,0,2048,16384,3985531442886107,3985600653971462,3985600655721084,3985531445580248
61,micro_tk(micro_globals) [clone .kd],2,0,136,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,227368,18091248,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555769,6293625,262144,0,6555537,6293393,262144,0,6555529,6293385,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555527,6293383,262144,0,6555765,6293621,262144,0,6555539,6293395,262144,0,6555535,6293391,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21829593,16017,0,2048,16384,3985531446457915,3985600655741955,3985600657509203,3985531449176382
62,micro_tk(micro_globals) [clone .kd],2,0,138,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,258938,20749696,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555527,6293383,262144,0,6555538,6293394,262144,0,6555769,6293625,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555537,6293393,262144,0,6555774,6293630,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21702656,19237,0,2048,16384,3985531449945378,3985600657530314,3985600659265635,3985531452652599
63,micro_tk(micro_globals) [clone .kd],2,0,140,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,225546,17956072,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555527,6293383,262144,0,6555531,6293387,262144,0,6555538,6293394,262144,0,6555529,6293385,262144,0,6555450,6293306,262144,0,6555446,6293302,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555537,6293393,262144,0,6555535,6293391,262144,0,6555450,6293306,262144,0,6555447,6293303,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21568445,15045,0,2048,16384,3985531453582433,3985600659285504,3985600661041015,3985531456447346
64,micro_tk(micro_globals) [clone .kd],2,0,142,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,229076,18373480,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555527,6293383,262144,0,6555538,6293394,262144,0,6555528,6293384,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555441,6293297,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555539,6293395,262144,0,6555533,6293389,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555441,6293297,262144,0,1186,22555686,20718,0,2048,16384,3985531457203724,3985600661061525,3985600662805619,3985531459983071
65,micro_tk(micro_globals) [clone .kd],2,0,144,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,261842,21071448,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555527,6293383,262144,0,6555529,6293385,262144,0,6555537,6293393,262144,0,6555530,6293386,262144,0,6555450,6293306,262144,0,6555447,6293303,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555528,6293384,262144,0,6555525,6293381,262144,0,6555537,6293393,262144,0,6555535,6293391,262144,0,6555450,6293306,262144,0,6555447,6293303,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21540045,17366,0,2048,16384,3985531460686881,3985600662825689,3985600664592897,3985531463405899
66,micro_tk(micro_globals) [clone .kd],2,0,146,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,278240,22344216,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555527,6293383,262144,0,6555538,6293394,262144,0,6555532,6293388,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555200,6293056,262144,0,6555441,6293297,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555536,6293392,262144,0,6555535,6293391,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555441,6293297,262144,0,1186,21509201,16722,0,2048,16384,3985531464523270,3985600664613648,3985600666335229,3985531467239704
67,micro_tk(micro_globals) [clone .kd],2,0,149,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,253168,20326296,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555769,6293625,262144,0,6555538,6293394,262144,0,6555530,6293386,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555765,6293621,262144,0,6555538,6293394,262144,0,6555533,6293389,262144,0,6555450,6293306,262144,0,6555208,6293064,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21696906,19735,0,2048,16384,3985531467985856,3985600666379654,3985600668110088,3985531470681330
68,micro_tk(micro_globals) [clone .kd],2,0,154,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,273544,21923320,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555528,6293384,262144,0,6555537,6293393,262144,0,6555769,6293625,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555537,6293393,262144,0,6555773,6293629,262144,0,6555450,6293306,262144,0,6555208,6293064,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21844627,21749,0,2048,16384,3985531471429485,3985600668162485,3985600669889153,3985531474076577
69,micro_tk(micro_globals) [clone .kd],2,0,159,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,210362,16912896,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555767,6293623,262144,0,6555538,6293394,262144,0,6555531,6293387,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555527,6293383,262144,0,6555765,6293621,262144,0,6555536,6293392,262144,0,6555531,6293387,262144,0,6555450,6293306,262144,0,6555208,6293064,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21562210,18060,0,2048,16384,3985531474805424,3985600669940670,3985600671700427,3985531477517942
70,micro_tk(micro_globals) [clone .kd],2,0,164,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,256964,20650512,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555527,6293383,262144,0,6555529,6293385,262144,0,6555538,6293394,262144,0,6555770,6293626,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555536,6293392,262144,0,6555773,6293629,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21795141,21172,0,2048,16384,3985531478189014,3985600671747416,3985600673466753,3985531480894271
71,micro_tk(micro_globals) [clone .kd],2,0,169,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,214550,17113112,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555528,6293384,262144,0,6555538,6293394,262144,0,6555529,6293385,262144,0,6555450,6293306,262144,0,6555446,6293302,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555537,6293393,262144,0,6555533,6293389,262144,0,6555450,6293306,262144,0,6555447,6293303,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21771652,17173,0,2048,16384,3985531481878065,3985600673514784,3985600675236565,3985531484556363
72,micro_tk(micro_globals) [clone .kd],2,0,174,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,219706,17551136,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555529,6293385,262144,0,6555538,6293394,262144,0,6555530,6293386,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555441,6293297,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555537,6293393,262144,0,6555532,6293388,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555441,6293297,262144,0,1186,21649586,16830,0,2048,16384,3985531485590521,3985600675284516,3985600676999968,3985531488265293
73,micro_tk(micro_globals) [clone .kd],2,0,179,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,254038,20512248,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555528,6293384,262144,0,6555537,6293393,262144,0,6555530,6293386,262144,0,6555450,6293306,262144,0,6555446,6293302,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555538,6293394,262144,0,6555531,6293387,262144,0,6555450,6293306,262144,0,6555447,6293303,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21710746,19864,0,2048,16384,3985531489125985,3985600677048560,3985600678769620,3985531491819085
74,micro_tk(micro_globals) [clone .kd],2,0,184,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,272396,21814360,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555527,6293383,262144,0,6555539,6293395,262144,0,6555532,6293388,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555441,6293297,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555537,6293393,262144,0,6555533,6293389,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555441,6293297,262144,0,1186,21716796,15664,0,2048,16384,3985531492675340,3985600678822457,3985600680563627,3985531495306258
75,micro_tk(micro_globals) [clone .kd],2,0,189,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,264834,21191608,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555767,6293623,262144,0,6555536,6293392,262144,0,6555528,6293384,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555765,6293621,262144,0,6555536,6293392,262144,0,6555532,6293388,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21785035,19951,0,2048,16384,3985531496210154,3985600680612339,3985600682326950,3985531498884175
76,micro_tk(micro_globals) [clone .kd],2,0,194,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,272496,21785528,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555529,6293385,262144,0,6555537,6293393,262144,0,6555770,6293626,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555537,6293393,262144,0,6555772,6293628,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21977618,16815,0,2048,16384,3985531499598791,3985600682374540,3985600684084463,3985531502280454
77,micro_tk(micro_globals) [clone .kd],2,0,199,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,215552,17289680,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555767,6293623,262144,0,6555540,6293396,262144,0,6555529,6293385,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555767,6293623,262144,0,6555537,6293393,262144,0,6555532,6293388,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21310893,18749,0,2048,16384,3985531502963543,3985600684133335,3985600685870018,3985531505637685
78,micro_tk(micro_globals) [clone .kd],2,0,204,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,287898,23053720,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555531,6293387,262144,0,6555537,6293393,262144,0,6555769,6293625,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555529,6293385,262144,0,6555525,6293381,262144,0,6555537,6293393,262144,0,6555775,6293631,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21811946,21262,0,2048,16384,3985531506459970,3985600685916167,3985600687649324,3985531509099020
79,micro_tk(micro_globals) [clone .kd],2,0,209,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,216720,17440632,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555527,6293383,262144,0,6555538,6293394,262144,0,6555529,6293385,262144,0,6555450,6293306,262144,0,6555447,6293303,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555529,6293385,262144,0,6555525,6293381,262144,0,6555536,6293392,262144,0,6555533,6293389,262144,0,6555450,6293306,262144,0,6555447,6293303,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21487494,17522,0,2048,16384,3985531509829239,3985600687695352,3985600689413288,3985531512525803
80,micro_tk(micro_globals) [clone .kd],2,0,214,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,228068,18276920,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555527,6293383,262144,0,6555538,6293394,262144,0,6555528,6293384,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555441,6293297,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555535,6293391,262144,0,6555532,6293388,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555441,6293297,262144,0,1186,21638656,15364,0,2048,16384,3985531513609925,3985600689459556,3985600691168118,3985531516294102
81,micro_tk(micro_globals) [clone .kd],2,0,219,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,250606,20019416,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555527,6293383,262144,0,6555539,6293395,262144,0,6555529,6293385,262144,0,6555450,6293306,262144,0,6555446,6293302,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555539,6293395,262144,0,6555530,6293386,262144,0,6555450,6293306,262144,0,6555447,6293303,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21721755,20826,0,2048,16384,3985531517132801,3985600691213705,3985600692941334,3985531519817388
82,micro_tk(micro_globals) [clone .kd],2,0,224,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,262954,21173424,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555527,6293383,262144,0,6555532,6293388,262144,0,6555539,6293395,262144,0,6555528,6293384,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555200,6293056,262144,0,6555441,6293297,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555535,6293391,262144,0,6555530,6293386,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555441,6293297,262144,0,1186,21789472,16620,0,2048,16384,3985531520775884,3985600692987042,3985600694716835,3985531523443937
83,micro_tk(micro_globals) [clone .kd],2,0,229,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,287198,22954488,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555527,6293383,262144,0,6555769,6293625,262144,0,6555538,6293394,262144,0,6555528,6293384,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555765,6293621,262144,0,6555538,6293394,262144,0,6555531,6293387,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21899235,19795,0,2048,16384,3985531524373791,3985600694760849,3985600696489400,3985531527090887
84,micro_tk(micro_globals) [clone .kd],2,0,234,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,258102,20732112,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555531,6293387,262144,0,6555538,6293394,262144,0,6555768,6293624,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555528,6293384,262144,0,6555525,6293381,262144,0,6555538,6293394,262144,0,6555775,6293631,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21631342,20370,0,2048,16384,3985531527992749,3985600696539754,3985600698236017,3985531530665669
85,micro_tk(micro_globals) [clone .kd],2,0,239,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,216330,17418536,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555769,6293625,262144,0,6555540,6293396,262144,0,6555530,6293386,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555528,6293384,262144,0,6555765,6293621,262144,0,6555536,6293392,262144,0,6555531,6293387,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21115021,16458,0,2048,16384,3985531531716051,3985600698296627,3985600700027061,3985531534423001
86,micro_tk(micro_globals) [clone .kd],2,0,244,41380,41380,1048576,512,49152,0,80,128,32,64,0x0,0x70dfff2a8840,114688,248716,19900704,397606912,221560832,0,0,0,12582912.0,0.0,0.0,13631488.0,0.0,0.0,0.0,13631488.0,6555526,6293382,262144,0,6555528,6293384,262144,0,6555535,6293391,262144,0,6555768,6293624,262144,0,6555450,6293306,262144,0,6555206,6293062,262144,0,6555200,6293056,262144,0,6555201,6293057,262144,0,6555526,6293382,262144,0,6555525,6293381,262144,0,6555535,6293391,262144,0,6555771,6293627,262144,0,6555450,6293306,262144,0,6555207,6293063,262144,0,6555201,6293057,262144,0,6555201,6293057,262144,0,1186,21794544,21080,0,2048,16384,3985531535258105,3985600700084585,3985600701806887,3985531537928481
87,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,248,41380,41380,67108864,512,0,0,12,4,32,64,0x0,0x70d7e8a6ed00,4194304,4179510,334247080,84934656,29360128,0,0,0,0.0,0.0,15947.0,2097152.0,0.0,0.0,0.0,2097152.0,328369,66225,262144,0,328375,66231,262144,0,328352,66208,262144,0,328359,66215,262144,0,328640,66496,262144,0,328720,66576,262144,0,328480,66336,262144,0,328324,66180,262144,0,328376,66232,262144,0,328368,66224,262144,0,328348,66204,262144,0,328352,66208,262144,0,328640,66496,262144,0,328720,66576,262144,0,328481,66337,262144,0,328324,66180,262144,0,1186,2532636,17164,0,131072,1048576,3985531539403731,3985600701976097,3985600702158366,3985531540116294
88,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,249,41380,41380,67108864,512,0,0,12,4,32,64,0x0,0x70d7e8a6ed00,4194304,4240916,339005432,84934656,29360128,0,0,0,0.0,0.0,16036.0,2097152.0,0.0,0.0,0.0,2097152.0,328348,66204,262144,0,328348,66204,262144,0,328350,66206,262144,0,328349,66205,262144,0,328642,66498,262144,0,328752,66608,262144,0,328502,66358,262144,0,328342,66198,262144,0,328349,66205,262144,0,328349,66205,262144,0,328348,66204,262144,0,328350,66206,262144,0,328641,66497,262144,0,328755,66611,262144,0,328505,66361,262144,0,328341,66197,262144,0,1284,3246946,69022,0,131072,1048576,3985531539962127,3985600702158366,3985600702345082,3985531542055390
89,"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul> >(int, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul>) [clone .kd]",2,0,250,41380,41380,16777216,256,0,0,16,0,32,64,0x0,0x70d77e660e40,786432,802240,63960264,7602176,786432,0,0,0,0.0,0.0,4929.0,786432.0,0.0,0.0,0.0,786432.0,524660,262516,262144,0,524642,262498,262144,0,524344,262200,262144,0,524660,262516,262144,0,524627,262483,262144,0,524389,262245,262144,0,524710,262566,262144,0,524627,262483,262144,0,524655,262511,262144,0,524648,262504,262144,0,524343,262199,262144,0,524647,262503,262144,0,524627,262483,262144,0,524386,262242,262144,0,524707,262563,262144,0,524629,262485,262144,0,1186,3209850,19000,0,65536,262144,3985531547071372,3985600708189447,3985600708376924,3985531547782012
90,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,251,41380,41380,16777216,256,0,0,12,4,32,64,0x0,0x70d7fda957c0,524288,548352,44132200,6815744,1310720,0,0,0,0.0,0.0,2209.0,524288.0,0.0,0.0,0.0,524288.0,393241,131097,262144,0,393241,131097,262144,0,393246,131102,262144,0,393244,131100,262144,0,393561,131417,262144,0,393553,131409,262144,0,393652,131508,262144,0,393559,131415,262144,0,393241,131097,262144,0,393240,131096,262144,0,393246,131102,262144,0,393240,131096,262144,0,393561,131417,262144,0,393553,131409,262144,0,393652,131508,262144,0,393561,131417,262144,0,1186,1810870,20859,0,65536,262144,3985531549209151,3985600709859793,3985600709970075,3985531550010985
91,__amd_rocclr_fillBufferAligned.kd,2,0,252,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,54,4016,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,8,8,0,0,4,4,0,0,5,4,1,0,0,0,0,0,1,1,0,0,1,1,0,0,4,4,0,0,2,2,0,0,8,8,0,0,4,4,0,0,10,10,0,0,4,4,0,0,0,0,0,0,1,1,0,0,1394,646694,24720,0,1,4,3985531550006339,3985600709970075,3985600709974121,3985531551810755
92,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,253,41380,41380,155648,512,2560,48,28,4,80,64,0x0,0x70d76da18380,35006,220150,17541616,7593947,4489550,0,0,0,0.0,0.0,0.0,267654.0,0.0,0.0,0.0,267654.0,137417,132537,0,0,137101,132221,0,0,137035,132123,32,0,137286,132374,32,0,137416,132352,32,152,137344,132432,32,0,136949,132045,24,0,137232,132352,0,0,137415,132534,1,0,137099,132219,0,0,137040,132128,32,0,137287,132375,32,0,137418,132354,32,152,137346,132434,32,0,136957,132053,24,0,137232,132352,0,0,3916,4377622,57527,0,304,2432,3985531553274398,3985600712179056,3985600712307365,3985531554075972
93,__amd_rocclr_copyBuffer.kd,2,0,254,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,92,7392,299,65,0,0,0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,4,4,0,0,4,4,0,0,5,5,0,0,0,0,0,0,8,8,0,0,5,5,0,0,8,4,4,0,4,4,0,0,1,1,0,0,2,2,0,0,4,4,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1394,629525,24955,0,1,8,3985531553914514,3985600712307365,3985600712311491,3985531555697038
94,__amd_rocclr_fillBufferAligned.kd,2,0,256,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,52,4688,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,2,2,0,0,2,2,0,0,8,8,0,0,4,4,0,0,5,4,1,0,0,0,0,0,1,1,0,0,0,0,0,0,4,4,0,0,2,2,0,0,8,8,0,0,6,6,0,0,8,8,0,0,4,4,0,0,1,1,0,0,1,1,0,0,1394,98742,25494,0,1,4,3985531556575286,3985600712389486,3985600712391609,3985531557489717
95,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4>) [clone .kd]",2,0,257,41380,41380,155648,512,2560,48,28,4,80,64,0x0,0x70d7e9717880,35007,226354,18028344,3837074,1819959,0,0,0,0.0,0.0,0.0,267654.0,0.0,0.0,0.0,267654.0,137019,132138,1,0,137099,132219,0,0,137035,132123,32,0,136970,132058,32,0,137578,132514,32,152,136946,132034,32,0,136954,132050,24,0,136513,131633,0,0,137017,132137,0,0,137098,132218,0,0,137036,132124,32,0,136965,132053,32,0,137577,132513,32,152,136944,132032,32,0,136951,132047,24,0,136512,131632,0,0,1186,1539516,18644,0,304,2432,3985531560154765,3985600714392683,3985600714486261,3985531560778226
96,__amd_rocclr_copyBuffer.kd,2,0,258,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,60,4488,299,65,0,0,0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,4,4,0,0,4,4,0,0,5,5,0,0,0,0,0,0,8,8,0,0,7,7,0,0,8,4,4,0,4,4,0,0,1,1,0,0,0,0,0,0,4,4,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1394,1030692,25294,0,1,8,3985531560681063,3985600714486261,3985600714490146,3985531562521602
97,"void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul> >(int, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul>) [clone .kd]",2,0,260,41380,41380,4194304,256,0,0,24,0,64,64,0x0,0x70d76d6314c0,65536,109704,8618848,22151168,3473408,0,0,0,0.0,0.0,3021.0,524288.0,0.0,0.0,0.0,524288.0,196952,131416,65536,0,196952,131416,65536,0,197339,131803,65536,0,196952,131416,65536,0,197269,131733,65536,0,197258,131722,65536,0,197257,131721,65536,0,197328,131792,65536,0,196952,131416,65536,0,196953,131417,65536,0,197340,131804,65536,0,196948,131412,65536,0,197267,131731,65536,0,197258,131722,65536,0,197256,131720,65536,0,197328,131792,65536,0,1186,1004659,20615,0,16384,65536,3985531567883987,3985600718231689,3985600718290015,3985531568486437
98,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,261,41380,41380,67108864,512,0,0,12,4,32,64,0x0,0x70d7e8a6e700,4194304,4205450,336036728,93323264,31457280,0,0,0,0.0,0.0,20671.0,2097152.0,0.0,0.0,0.0,2097152.0,557378,33090,524288,0,557378,33090,524288,0,557952,33664,524288,0,557376,33088,524288,0,558397,34109,524288,0,558410,34122,524288,0,558058,33770,524288,0,558280,33992,524288,0,557379,33091,524288,0,557376,33088,524288,0,557955,33667,524288,0,557378,33090,524288,0,558399,34111,524288,0,558406,34118,524288,0,558062,33774,524288,0,558305,34017,524288,0,1674,4099940,205323,0,131072,1048576,3985531568511604,3985600718327190,3985600718505172,3985531570192137
99,__amd_rocclr_fillBufferAligned.kd,2,0,262,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,64,5616,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,1,0,1,0,0,0,0,0,12,12,0,0,4,4,0,0,4,4,0,0,0,0,0,0,1,1,0,0,0,0,0,0,4,4,0,0,2,2,0,0,11,11,0,0,4,4,0,0,10,10,0,0,5,5,0,0,0,0,0,0,1,1,0,0,1394,687848,24974,0,1,4,3985531569029990,3985600718505172,3985600718509258,3985531571736809
100,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4> >(at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4>) [clone .kd]",2,0,263,41380,41380,155648,512,4608,80,36,4,80,64,0x0,0x70d74d02e7c0,35006,240472,19295800,5216087,2645406,0,0,0,0.0,0.0,0.0,529798.0,0.0,0.0,0.0,529798.0,268616,263584,0,152,268304,263424,0,0,268332,263436,16,0,268241,263345,16,0,268062,263150,32,0,268060,263148,32,0,268209,263297,32,0,268456,263552,24,0,268618,263585,1,152,268304,263424,0,0,268332,263436,16,0,268242,263346,16,0,268062,263150,32,0,268059,263147,32,0,268211,263299,32,0,268448,263544,24,0,3916,5589350,56868,0,304,2432,3985531573795992,3985600722178233,3985600722381573,3985531574674130
101,__amd_rocclr_copyBuffer.kd,2,0,264,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,124,8928,351,65,0,0,0,0.0,0.0,0.0,16.0,0.0,0.0,0.0,16.0,4,4,0,0,4,4,0,0,5,5,0,0,0,0,0,0,8,8,0,0,5,5,0,0,4,4,0,0,4,4,0,0,9,1,8,0,0,0,0,0,4,4,0,0,2,2,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1394,533444,25166,0,1,8,3985531574401507,3985600722381573,3985600722387142,3985531576430836
102,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,266,41380,41380,256,128,0,0,20,4,64,64,0x0,0x70d7e8a6ecc0,108,262,20688,1272,496,0,0,0,0.0,0.0,0.0,32.0,0.0,0.0,0.0,32.0,19,15,4,0,22,18,4,0,14,14,0,0,14,14,0,0,11,7,4,0,12,8,4,0,12,12,0,0,10,10,0,0,19,15,4,0,20,16,4,0,22,14,8,0,23,15,8,0,11,7,4,0,12,8,4,0,21,13,8,0,18,10,8,0,1186,100594,22870,0,2,4,3985531577367651,3985600722520699,3985600722524144,3985531578273369
103,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,267,41380,41380,256,256,1536,48,28,4,80,64,0x0,0x70d76da18380,49,352,28672,1190,502,0,0,0,0.0,0.0,0.0,5.0,0.0,0.0,0.0,5.0,13,13,0,0,10,10,0,0,14,14,0,0,11,11,0,0,6,6,0,0,8,8,0,0,10,10,0,0,6,6,0,0,7,6,1,0,7,7,0,0,11,11,0,0,7,7,0,0,14,14,0,0,13,13,0,0,14,14,0,0,14,14,0,0,1186,766204,25420,0,1,4,3985531578263695,3985600722529432,3985600722533878,3985531579979400
104,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,268,41380,41380,256,256,0,0,12,4,32,64,0x0,0x70d7fda957c0,8,56,4832,216,74,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,9,9,0,0,4,4,0,0,5,5,0,0,4,4,0,0,1,1,0,0,0,0,0,0,5,4,1,0,0,0,0,0,4,4,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1186,978376,25555,0,1,4,3985531579606789,3985600723361660,3985600723363583,3985531581344036
105,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,269,41380,41380,256,256,0,0,24,0,32,64,0x0,0x70d74ca69a40,4,40,3144,1458,876,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,8,8,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,8,8,0,0,9,9,0,0,4,4,0,0,4,4,0,0,5,5,0,0,4,4,0,0,5,4,1,0,4,4,0,0,4,4,0,0,4,4,0,0,1186,90970,25163,0,1,4,3985531588496926,3985600731048174,3985600731050938,3985531589038356
106,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,270,41380,41380,256,256,0,0,40,0,32,64,0x0,0x70d74ca69840,12,168,13584,1533,942,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,0,0,0,0,0,0,0,0,4,4,0,0,1,1,0,0,4,4,0,0,4,4,0,0,4,4,0,0,5,5,0,0,5,5,0,0,4,4,0,0,8,8,0,0,8,8,0,0,4,4,0,0,4,4,0,0,5,4,1,0,4,4,0,0,1186,970695,25358,0,1,4,3985531589053068,3985600731075975,3985600731078419,3985531590832578
107,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,271,41380,41380,256,256,0,0,36,4,80,64,0x0,0x70d74c447fc0,12,178,13272,1085,622,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,5,4,1,0,4,4,0,0,6,6,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,1,1,0,0,0,0,0,0,5,5,0,0,4,4,0,0,1186,84594,24927,0,1,4,3985531594354853,3985600735713880,3985600735716284,3985531594885066
108,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,272,41380,41380,256,256,0,0,24,0,32,64,0x0,0x70d74ca69a40,4,40,3192,1458,876,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,8,8,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,8,8,0,0,8,8,0,0,5,5,0,0,4,4,0,0,5,4,1,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,1186,609170,24538,0,1,4,3985531594912947,3985600735761751,3985600735764435,3985531596537378
109,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,273,41380,41380,256,256,0,0,36,4,80,64,0x0,0x70d74c053a80,12,216,16704,1085,622,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,8,8,0,0,4,4,0,0,4,4,0,0,4,4,0,0,5,5,0,0,4,4,0,0,5,5,0,0,4,4,0,0,4,4,0,0,4,4,0,0,1,1,0,0,0,0,0,0,5,4,1,0,5,5,0,0,4,4,0,0,4,4,0,0,1186,88880,25161,0,1,4,3985531601514623,3985600741733395,3985600741736319,3985531602036684
110,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,274,41380,41380,256,256,512,0,8,0,32,64,0x0,0x70d74bc8eec0,9,112,8576,453,252,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,4,4,0,0,0,0,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,5,5,0,0,4,4,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,1,0,0,5,5,0,0,0,0,0,0,0,0,0,0,1186,89722,25250,0,1,4,3985531609871532,3985600749470033,3985600749472316,3985531610387444
111,__amd_rocclr_copyBuffer.kd,2,0,275,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,148,10848,299,65,0,0,0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,4,4,0,0,4,4,0,0,5,5,0,0,0,0,0,0,8,8,0,0,5,5,0,0,8,4,4,0,4,4,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1394,1090704,25113,0,1,8,3985531610385581,3985600749488020,3985600749491144,3985531612147926
112,__amd_rocclr_fillBufferAligned.kd,2,0,277,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,56,4392,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,2,2,0,0,8,8,0,0,4,4,0,0,5,4,1,0,0,0,0,0,1,1,0,0,0,0,0,0,4,4,0,0,4,4,0,0,8,8,0,0,5,5,0,0,8,8,0,0,4,4,0,0,2,2,0,0,1,1,0,0,1394,101610,25241,0,1,4,3985531612987516,3985600749529281,3985600749533086,3985531613980784
113,__amd_rocclr_fillBufferAligned.kd,2,0,278,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,72,6336,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,4,4,0,0,4,4,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,2,2,0,0,6,6,0,0,5,5,0,0,4,4,0,0,4,4,0,0,0,0,0,0,1,1,0,0,1394,865741,24628,0,1,4,3985531613959402,3985600749533086,3985600749537132,3985531615678532
114,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,279,41380,41380,256,256,0,0,8,0,16,64,0x0,0x70d7e8921100,12,186,15072,78,20,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,3,3,0,0,0,0,0,0,4,4,0,0,1,0,1,0,0,0,0,0,1,1,0,0,5,5,0,0,1,1,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,9,5,4,0,12,8,4,0,1186,96476,24773,0,1,4,3985531616564692,3985600751402806,3985600751404929,3985531617388609
115,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,280,41380,41380,512,512,29184,0,52,4,48,64,0x0,0x70d74bc8f040,56,732,57960,2268,900,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,0,0,0,0,4,4,0,0,4,4,0,0,8,8,0,0,7,5,2,0,8,8,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,9,9,0,0,5,5,0,0,8,8,0,0,5,5,0,0,4,4,0,0,1186,1013549,24642,0,1,8,3985531617374248,3985600751408774,3985600751412139,3985531619099808
116,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,281,41380,41380,256,256,0,0,8,0,32,64,0x0,0x70d74bc8b900,12,144,11784,151,28,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,4,4,0,0,0,0,0,0,4,4,0,0,9,9,0,0,6,6,0,0,8,8,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,5,5,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,1186,1044249,25030,0,1,4,3985531617863291,3985600751418309,3985600751420271,3985531620490033
117,__amd_rocclr_copyBuffer.kd,2,0,282,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,108,7744,299,65,0,0,0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,4,4,0,0,4,4,0,0,9,9,0,0,0,0,0,0,8,8,0,0,7,7,0,0,9,5,4,0,4,4,0,0,1,1,0,0,0,0,0,0,7,7,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1394,1109074,24906,0,1,8,3985531618438231,3985600751520299,3985600751524385,3985531621886436
118,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,284,41380,41380,256,128,0,0,20,4,64,64,0x0,0x70d7e8a6ecc0,108,276,22112,1272,496,0,0,0,0.0,0.0,0.0,32.0,0.0,0.0,0.0,32.0,18,14,4,0,20,16,4,0,14,14,0,0,14,14,0,0,12,8,4,0,12,8,4,0,12,12,0,0,12,12,0,0,18,14,4,0,18,14,4,0,22,14,8,0,23,15,8,0,12,8,4,0,12,8,4,0,21,13,8,0,20,12,8,0,1186,102690,23350,0,2,4,3985531622889789,3985600751704291,3985600751708016,3985531623730111
119,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,285,41380,41380,256,256,1536,48,28,4,80,64,0x0,0x70d76da18380,49,438,36312,1190,502,0,0,0,0.0,0.0,0.0,5.0,0.0,0.0,0.0,5.0,11,11,0,0,10,10,0,0,14,14,0,0,10,10,0,0,6,6,0,0,6,6,0,0,12,12,0,0,6,6,0,0,7,6,1,0,7,7,0,0,11,11,0,0,7,7,0,0,16,16,0,0,14,14,0,0,14,14,0,0,14,14,0,0,1186,1032844,48088,0,1,4,3985531623727607,3985600751725442,3985600751730009,3985531625497973
120,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,286,41380,41380,256,256,0,0,12,4,32,64,0x0,0x70d7fda957c0,8,160,12608,216,74,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,8,8,0,0,5,5,0,0,5,5,0,0,4,4,0,0,1,1,0,0,0,0,0,0,6,5,1,0,0,0,0,0,4,4,0,0,0,0,0,0,2,2,0,0,0,0,0,0,1186,1141776,24869,0,1,4,3985531624388494,3985600751872218,3985600751874382,3985531626926474
121,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,287,41380,41380,256,256,0,0,24,0,32,64,0x0,0x70d74ca69a40,4,80,6488,1458,876,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,8,8,0,0,4,4,0,0,8,8,0,0,4,4,0,0,4,4,0,0,4,4,0,0,8,8,0,0,8,8,0,0,4,4,0,0,4,4,0,0,9,9,0,0,4,4,0,0,5,4,1,0,4,4,0,0,5,5,0,0,4,4,0,0,1186,1040885,24805,0,1,4,3985531624903084,3985600751893490,3985600751896134,3985531628263680
122,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,288,41380,41380,256,256,0,0,40,0,32,64,0x0,0x70d74ca69840,12,240,19392,1533,942,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,0,0,0,0,0,0,0,0,8,8,0,0,1,1,0,0,4,4,0,0,4,4,0,0,5,5,0,0,4,4,0,0,5,5,0,0,5,5,0,0,12,12,0,0,8,8,0,0,4,4,0,0,4,4,0,0,5,4,1,0,4,4,0,0,1186,998287,46607,0,1,4,3985531626055116,3985600751908792,3985600751911276,3985531629653413
123,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,289,41380,41380,256,256,0,0,36,4,80,64,0x0,0x70d74c447fc0,12,174,13152,1085,622,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,4,4,0,0,4,4,0,0,9,9,0,0,4,4,0,0,5,4,1,0,5,5,0,0,9,9,0,0,4,4,0,0,4,4,0,0,5,5,0,0,10,10,0,0,5,5,0,0,1,1,0,0,0,0,0,0,9,9,0,0,4,4,0,0,1186,798458,25255,0,1,4,3985531626617688,3985600751927780,3985600751930464,3985531631017028
124,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,290,41380,41380,256,256,0,0,24,0,32,64,0x0,0x70d74ca69a40,4,78,6328,1458,876,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,8,8,0,0,4,4,0,0,9,9,0,0,4,4,0,0,4,4,0,0,5,5,0,0,8,8,0,0,8,8,0,0,6,6,0,0,4,4,0,0,10,9,1,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,1186,547133,25030,0,1,4,3985531627443738,3985600751948491,3985600751950895,3985531632381645
125,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,291,41380,41380,256,256,0,0,36,4,80,64,0x0,0x70d74c053a80,12,240,18816,1085,622,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,8,8,0,0,4,4,0,0,8,8,0,0,4,4,0,0,5,5,0,0,8,8,0,0,5,5,0,0,4,4,0,0,5,5,0,0,5,5,0,0,6,6,0,0,0,0,0,0,5,4,1,0,8,8,0,0,4,4,0,0,4,4,0,0,1186,1176875,24574,0,1,4,3985531628483915,3985600751966838,3985600751969442,3985531633867831
126,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,292,41380,41380,256,256,512,0,8,0,32,64,0x0,0x70d74bc8eec0,9,162,12992,453,252,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,4,4,0,0,0,0,0,0,4,4,0,0,8,8,0,0,4,4,0,0,8,8,0,0,5,5,0,0,4,4,0,0,0,0,0,0,0,0,0,0,1,0,1,0,6,6,0,0,1,1,0,0,8,8,0,0,0,0,0,0,1,1,0,0,1186,1088933,25095,0,1,4,3985531628999267,3985600751985626,3985600751987909,3985531635156415
127,__amd_rocclr_copyBuffer.kd,2,0,293,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,150,12592,299,65,0,0,0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,4,4,0,0,4,4,0,0,10,10,0,0,0,0,0,0,8,8,0,0,6,6,0,0,9,5,4,0,4,4,0,0,0,0,0,0,0,0,0,0,9,9,0,0,2,2,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1394,1105058,25378,0,1,8,3985531629929642,3985600751991835,3985600751994799,3985531636572487
128,__amd_rocclr_fillBufferAligned.kd,2,0,295,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,88,7184,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,2,2,0,0,3,3,0,0,8,8,0,0,4,4,0,0,5,4,1,0,0,0,0,0,1,1,0,0,0,0,0,0,4,4,0,0,2,2,0,0,8,8,0,0,5,5,0,0,8,8,0,0,4,4,0,0,1,1,0,0,1,1,0,0,1394,98834,26742,0,1,4,3985531637411668,3985600752071873,3985600752073796,3985531638550501
129,__amd_rocclr_fillBufferAligned.kd,2,0,296,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,88,6832,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,5,5,0,0,4,4,0,0,1,0,1,0,2,2,0,0,0,0,0,0,0,0,0,0,4,4,0,0,2,2,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,0,0,0,0,1,1,0,0,1394,524904,24424,0,1,4,3985531638529459,3985600752077842,3985600752079324,3985531640271103
130,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,297,41380,41380,256,256,0,0,8,0,16,64,0x0,0x70d7e8921100,12,240,18480,78,20,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,2,1,1,0,0,0,0,0,1,1,0,0,5,5,0,0,1,1,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,8,4,4,0,12,8,4,0,1186,991829,25394,0,1,4,3985531639033624,3985600752088858,3985600752090461,3985531641635670
131,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,298,41380,41380,512,512,29184,0,52,4,48,64,0x0,0x70d74bc8f040,56,881,71484,2268,900,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,0,0,0,0,4,4,0,0,4,4,0,0,6,6,0,0,7,5,2,0,8,8,0,0,7,7,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,9,9,0,0,5,5,0,0,8,8,0,0,5,5,0,0,4,4,0,0,1186,592400,24550,0,1,8,3985531639522667,3985600752097591,3985600752100315,3985531642988970
132,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,299,41380,41380,256,256,0,0,8,0,32,64,0x0,0x70d74bc8b900,12,254,20448,151,28,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,4,4,0,0,0,0,0,0,5,5,0,0,8,8,0,0,6,6,0,0,9,9,0,0,2,2,0,0,1,1,0,0,0,0,0,0,0,0,0,0,2,1,1,0,5,5,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,1186,1051296,25403,0,1,4,3985531640547522,3985600752108567,3985600752110290,3985531644374237
133,__amd_rocclr_copyBuffer.kd,2,0,300,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,132,11552,299,65,0,0,0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,4,4,0,0,4,4,0,0,10,10,0,0,0,0,0,0,8,8,0,0,6,6,0,0,9,5,4,0,4,4,0,0,1,1,0,0,0,0,0,0,8,8,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1394,623488,24989,0,1,8,3985531641080289,3985600752129358,3985600752132563,3985531645792442
134,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,302,41380,41380,256,128,0,0,20,4,64,64,0x0,0x70d7e8a6ecc0,108,312,24960,1272,496,0,0,0,0.0,0.0,0.0,32.0,0.0,0.0,0.0,32.0,18,14,4,0,20,16,4,0,14,14,0,0,14,14,0,0,11,7,4,0,12,8,4,0,14,14,0,0,11,11,0,0,18,14,4,0,18,14,4,0,22,14,8,0,23,15,8,0,11,7,4,0,12,8,4,0,23,15,8,0,19,11,8,0,1186,98328,22373,0,2,4,3985531646677039,3985600752174264,3985600752177148,3985531647724717
135,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,303,41380,41380,256,256,1536,48,28,4,80,64,0x0,0x70d76da18380,49,328,27504,1190,502,0,0,0,0.0,0.0,0.0,5.0,0.0,0.0,0.0,5.0,11,11,0,0,10,10,0,0,14,14,0,0,10,10,0,0,6,6,0,0,6,6,0,0,10,10,0,0,6,6,0,0,8,7,1,0,9,9,0,0,11,11,0,0,9,9,0,0,14,14,0,0,13,13,0,0,14,14,0,0,14,14,0,0,1186,1234759,43671,0,1,4,3985531647713831,3985600752184279,3985600752187924,3985531649505258
136,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,304,41380,41380,256,256,0,0,12,4,32,64,0x0,0x70d7fda957c0,8,152,11712,216,74,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,1,1,0,0,5,5,0,0,0,0,0,0,8,8,0,0,4,4,0,0,5,5,0,0,4,4,0,0,1,1,0,0,0,0,0,0,5,4,1,0,0,0,0,0,4,4,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1186,1059803,25507,0,1,4,3985531648300017,3985600752220172,3985600752221854,3985531650878538
137,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,305,41380,41380,256,256,0,0,24,0,32,64,0x0,0x70d74ca69a40,4,72,5624,1458,876,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,8,8,0,0,5,5,0,0,9,9,0,0,4,4,0,0,4,4,0,0,5,5,0,0,8,8,0,0,8,8,0,0,4,4,0,0,4,4,0,0,10,10,0,0,4,4,0,0,5,4,1,0,4,4,0,0,4,4,0,0,4,4,0,0,1186,1018619,24895,0,1,4,3985531648798133,3985600752235755,3985600752238038,3985531652282002
138,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,306,41380,41380,256,256,0,0,40,0,32,64,0x0,0x70d74ca69840,12,152,12048,1533,942,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,1,1,0,0,0,0,0,0,9,9,0,0,1,1,0,0,4,4,0,0,5,5,0,0,5,5,0,0,4,4,0,0,5,5,0,0,4,4,0,0,13,13,0,0,8,8,0,0,4,4,0,0,4,4,0,0,5,4,1,0,4,4,0,0,1186,1025907,36875,0,1,4,3985531649795527,3985600752244127,3985600752246331,3985531653682111
139,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,307,41380,41380,256,256,0,0,36,4,80,64,0x0,0x70d74c447fc0,12,184,15768,1085,622,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,5,5,0,0,4,4,0,0,8,8,0,0,4,4,0,0,5,4,1,0,4,4,0,0,9,9,0,0,4,4,0,0,4,4,0,0,4,4,0,0,9,9,0,0,5,5,0,0,1,1,0,0,0,0,0,0,9,9,0,0,4,4,0,0,1186,1202240,84346,0,1,4,3985531650303929,3985600752262635,3985600752264798,3985531655110341
140,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,308,41380,41380,256,256,0,0,24,0,32,64,0x0,0x70d74ca69a40,4,72,5624,1458,876,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,8,8,0,0,4,4,0,0,8,8,0,0,5,5,0,0,4,4,0,0,4,4,0,0,8,8,0,0,8,8,0,0,5,5,0,0,4,4,0,0,9,8,1,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,1186,629957,24625,0,1,4,3985531651450804,3985600752272209,3985600752274612,3985531656463701
141,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,309,41380,41380,256,256,0,0,36,4,80,64,0x0,0x70d74c053a80,12,198,16824,1085,622,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,8,8,0,0,4,4,0,0,9,9,0,0,5,5,0,0,5,5,0,0,9,9,0,0,5,5,0,0,4,4,0,0,4,4,0,0,5,5,0,0,7,7,0,0,0,0,0,0,5,4,1,0,8,8,0,0,4,4,0,0,4,4,0,0,1186,1067985,24874,0,1,4,3985531652521636,3985600752288272,3985600752290516,3985531657876699
142,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,310,41380,41380,256,256,512,0,8,0,32,64,0x0,0x70d74bc8eec0,9,144,11328,453,252,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,4,4,0,0,0,0,0,0,6,6,0,0,8,8,0,0,4,4,0,0,9,9,0,0,5,5,0,0,4,4,0,0,0,0,0,0,0,0,0,0,2,1,1,0,5,5,0,0,1,1,0,0,8,8,0,0,0,0,0,0,1,1,0,0,1186,1014037,24696,0,1,4,3985531653019632,3985600752302894,3985600752304817,3985531659240214
143,__amd_rocclr_copyBuffer.kd,2,0,311,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,156,12368,299,65,0,0,0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,4,4,0,0,4,4,0,0,11,11,0,0,0,0,0,0,8,8,0,0,5,5,0,0,9,5,4,0,4,4,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1394,1293094,25184,0,1,8,3985531653968644,3985600752310105,3985600752313990,3985531660629988
144,__amd_rocclr_fillBufferAligned.kd,2,0,313,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,72,5936,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,2,2,0,0,8,8,0,0,4,4,0,0,6,5,1,0,0,0,0,0,1,1,0,0,2,2,0,0,4,4,0,0,2,2,0,0,8,8,0,0,5,5,0,0,8,8,0,0,4,4,0,0,1,1,0,0,1,1,0,0,1394,98248,25284,0,1,4,3985531661464030,3985600752342993,3985600752344916,3985531662604566
145,__amd_rocclr_fillBufferAligned.kd,2,0,314,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,76,5648,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,4,4,0,0,4,4,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,2,2,0,0,4,4,0,0,4,4,0,0,6,6,0,0,5,5,0,0,0,0,0,0,1,1,0,0,1394,421934,24783,0,1,4,3985531662584045,3985600752348682,3985600752350124,3985531663837788
146,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,315,41380,41380,256,256,0,0,8,0,16,64,0x0,0x70d7e8921100,12,118,9672,78,20,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,1,1,0,0,4,4,0,0,1,0,1,0,1,1,0,0,1,1,0,0,5,5,0,0,1,1,0,0,0,0,0,0,1,1,0,0,4,4,0,0,0,0,0,0,0,0,0,0,8,4,4,0,13,9,4,0,1186,170012,24691,0,1,4,3985531663086127,3985600752354490,3985600752356253,3985531664804326
147,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,316,41380,41380,512,512,29184,0,52,4,48,64,0x0,0x70d74bc8f040,56,674,52344,2268,900,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,0,0,0,0,4,4,0,0,5,5,0,0,6,6,0,0,7,5,2,0,9,9,0,0,5,5,0,0,4,4,0,0,4,4,0,0,6,6,0,0,5,5,0,0,9,9,0,0,5,5,0,0,8,8,0,0,5,5,0,0,4,4,0,0,1186,1007289,24922,0,1,8,3985531664110912,3985600752365146,3985600752367590,3985531666046221
148,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,317,41380,41380,256,256,0,0,8,0,32,64,0x0,0x70d74bc8b900,12,114,8568,151,28,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,4,4,0,0,0,0,0,0,4,4,0,0,8,8,0,0,6,6,0,0,8,8,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,1,0,0,1,0,1,0,5,5,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,1186,911482,25446,0,1,4,3985531665089307,3985600752372397,3985600752374079,3985531667362486
149,__amd_rocclr_copyBuffer.kd,2,0,318,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,126,10320,299,65,0,0,0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,4,4,0,0,4,4,0,0,9,9,0,0,0,0,0,0,8,8,0,0,5,5,0,0,9,5,4,0,4,4,0,0,1,1,0,0,0,0,0,0,7,7,0,0,2,2,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1394,536256,24945,0,1,8,3985531665662454,3985600752388060,3985600752391825,3985531668702636
150,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,320,41380,41380,256,128,0,0,20,4,64,64,0x0,0x70d7e8a6ecc0,108,224,16384,1272,496,0,0,0,0.0,0.0,0.0,32.0,0.0,0.0,0.0,32.0,18,14,4,0,22,18,4,0,15,15,0,0,14,14,0,0,11,7,4,0,12,8,4,0,12,12,0,0,10,10,0,0,18,14,4,0,20,16,4,0,23,15,8,0,23,15,8,0,11,7,4,0,12,8,4,0,21,13,8,0,18,10,8,0,1186,99649,23153,0,2,4,3985531669537971,3985600752427318,3985600752430122,3985531670588744
151,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,321,41380,41380,256,256,1536,48,28,4,80,64,0x0,0x70d76da18380,49,388,30232,1190,502,0,0,0,0.0,0.0,0.0,5.0,0.0,0.0,0.0,5.0,13,13,0,0,10,10,0,0,16,16,0,0,11,11,0,0,6,6,0,0,6,6,0,0,10,10,0,0,6,6,0,0,7,6,1,0,7,7,0,0,11,11,0,0,7,7,0,0,14,14,0,0,13,13,0,0,14,14,0,0,14,14,0,0,1186,572105,24626,0,1,4,3985531670575374,3985600752434408,3985600752437853,3985531672350988
152,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,322,41380,41380,256,256,0,0,12,4,32,64,0x0,0x70d7fda957c0,8,80,6208,216,74,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,9,9,0,0,5,5,0,0,5,5,0,0,4,4,0,0,1,1,0,0,0,0,0,0,6,5,1,0,0,0,0,0,4,4,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1186,1108344,46374,0,1,4,3985531671123894,3985600752460767,3985600752462490,3985531673755363
153,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,323,41380,41380,256,256,0,0,24,0,32,64,0x0,0x70d74ca69a40,4,48,3352,1458,876,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,8,8,0,0,4,4,0,0,8,8,0,0,4,4,0,0,5,5,0,0,4,4,0,0,8,8,0,0,8,8,0,0,4,4,0,0,4,4,0,0,9,9,0,0,4,4,0,0,5,4,1,0,4,4,0,0,4,4,0,0,4,4,0,0,1186,1343257,25493,0,1,4,3985531671623463,3985600752476951,3985600752479234,3985531675187359
154,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,324,41380,41380,256,256,0,0,40,0,32,64,0x0,0x70d74ca69840,12,144,12144,1533,942,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,0,0,0,0,0,0,0,0,8,8,0,0,1,1,0,0,4,4,0,0,4,4,0,0,5,5,0,0,5,5,0,0,5,5,0,0,4,4,0,0,12,12,0,0,8,8,0,0,4,4,0,0,4,4,0,0,5,4,1,0,4,4,0,0,1186,1095645,24574,0,1,4,3985531672636940,3985600752485283,3985600752487446,3985531676589952
155,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,325,41380,41380,256,256,0,0,36,4,80,64,0x0,0x70d74c447fc0,12,132,10800,1085,622,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,4,4,0,0,4,4,0,0,9,9,0,0,4,4,0,0,5,4,1,0,5,5,0,0,9,9,0,0,5,5,0,0,4,4,0,0,4,4,0,0,10,10,0,0,5,5,0,0,1,1,0,0,0,0,0,0,9,9,0,0,4,4,0,0,1186,706187,68970,0,1,4,3985531673132893,3985600752500345,3985600752502469,3985531677914719
156,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,326,41380,41380,256,256,0,0,24,0,32,64,0x0,0x70d74ca69a40,4,40,3232,1458,876,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,8,8,0,0,4,4,0,0,9,9,0,0,4,4,0,0,4,4,0,0,5,5,0,0,9,9,0,0,8,8,0,0,5,5,0,0,4,4,0,0,10,9,1,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,1186,1033271,24614,0,1,4,3985531674332326,3985600752509158,3985600752511522,3985531679287738
157,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,327,41380,41380,256,256,0,0,36,4,80,64,0x0,0x70d74c053a80,12,168,12864,1085,622,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,8,8,0,0,4,4,0,0,8,8,0,0,4,4,0,0,5,5,0,0,8,8,0,0,6,6,0,0,4,4,0,0,4,4,0,0,5,5,0,0,6,6,0,0,0,0,0,0,5,4,1,0,8,8,0,0,4,4,0,0,4,4,0,0,1186,1011247,24780,0,1,4,3985531674884321,3985600752524501,3985600752526704,3985531680688718
158,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,328,41380,41380,256,256,512,0,8,0,32,64,0x0,0x70d74bc8eec0,9,98,7680,453,252,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,4,4,0,0,0,0,0,0,4,4,0,0,8,8,0,0,4,4,0,0,8,8,0,0,5,5,0,0,4,4,0,0,0,0,0,0,0,0,0,0,1,0,1,0,5,5,0,0,1,1,0,0,9,9,0,0,0,0,0,0,1,1,0,0,1186,1084800,24610,0,1,4,3985531675708479,3985600752540685,3985600752542648,3985531682083910
159,__amd_rocclr_copyBuffer.kd,2,0,329,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,112,9696,299,65,0,0,0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,4,4,0,0,4,4,0,0,10,10,0,0,0,0,0,0,8,8,0,0,6,6,0,0,9,5,4,0,4,4,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,4,4,0,0,2,2,0,0,0,0,0,0,0,0,0,0,1394,970003,25197,0,1,8,3985531676289568,3985600752547335,3985600752550820,3985531683477009
160,__amd_rocclr_fillBufferAligned.kd,2,0,331,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,70,5536,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,2,2,0,0,8,8,0,0,4,4,0,0,5,4,1,0,0,0,0,0,1,1,0,0,0,0,0,0,4,4,0,0,2,2,0,0,8,8,0,0,5,5,0,0,8,8,0,0,4,4,0,0,3,3,0,0,2,2,0,0,1394,99998,24826,0,1,4,3985531684323319,3985600752579222,3985600752581025,3985531685464966
161,__amd_rocclr_fillBufferAligned.kd,2,0,332,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,68,5744,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,4,4,0,0,4,4,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,2,2,0,0,4,4,0,0,6,6,0,0,4,4,0,0,4,4,0,0,0,0,0,0,1,1,0,0,1394,582580,24350,0,1,4,3985531685444957,3985600752584910,3985600752586112,3985531687263233
162,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,333,41380,41380,256,256,0,0,8,0,16,64,0x0,0x70d7e8921100,12,192,15696,78,20,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,1,0,1,0,0,0,0,0,1,1,0,0,5,5,0,0,1,1,0,0,0,0,0,0,1,1,0,0,4,4,0,0,0,0,0,0,0,0,0,0,8,4,4,0,12,8,4,0,1186,1049693,25135,0,1,4,3985531685940369,3985600752590639,3985600752592321,3985531688830910
163,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,334,41380,41380,512,512,29184,0,52,4,48,64,0x0,0x70d74bc8f040,56,760,61436,2268,900,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,2,2,0,0,4,4,0,0,4,4,0,0,6,6,0,0,7,5,2,0,8,8,0,0,5,5,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,9,9,0,0,5,5,0,0,8,8,0,0,5,5,0,0,4,4,0,0,1186,770716,24772,0,1,8,3985531686429011,3985600752603257,3985600752605861,3985531690087417
164,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,335,41380,41380,256,256,0,0,8,0,32,64,0x0,0x70d74bc8b900,12,144,12192,151,28,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,5,5,0,0,0,0,0,0,5,5,0,0,8,8,0,0,6,6,0,0,9,9,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,2,1,1,0,5,5,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,1186,1299687,24676,0,1,4,3985531686968187,3985600752611469,3985600752613192,3985531691493435
165,__amd_rocclr_copyBuffer.kd,2,0,336,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,112,9872,299,65,0,0,0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,4,4,0,0,4,4,0,0,12,12,0,0,0,0,0,0,8,8,0,0,6,6,0,0,9,5,4,0,4,4,0,0,1,1,0,0,0,0,0,0,8,8,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1394,1079724,25488,0,1,8,3985531687794358,3985600752627693,3985600752630498,3985531692925901
166,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,338,41380,41380,1024,128,0,0,20,4,64,64,0x0,0x70d7e8a6ecc0,432,1196,95432,5088,1984,0,0,0,0.0,0.0,0.0,128.0,0.0,0.0,0.0,128.0,72,56,16,0,74,58,16,0,76,60,16,0,72,56,16,0,52,36,16,0,52,36,16,0,60,44,16,0,44,28,16,0,72,56,16,0,72,56,16,0,76,60,16,0,73,57,16,0,52,36,16,0,52,36,16,0,61,45,16,0,44,28,16,0,1186,142849,22959,0,8,16,3985531693783318,3985600752662865,3985600752667312,3985531694823666
167,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,339,41380,41380,512,512,2560,48,28,4,80,64,0x0,0x70d76da18380,97,820,65592,2694,1158,0,0,0,0.0,0.0,0.0,17.0,0.0,0.0,0.0,17.0,17,17,0,0,16,16,0,0,20,20,0,0,16,16,0,0,12,12,0,0,12,12,0,0,17,17,0,0,14,14,0,0,13,12,1,0,13,13,0,0,17,17,0,0,13,13,0,0,20,20,0,0,21,21,0,0,20,20,0,0,20,20,0,0,1186,1542244,25355,0,1,8,3985531694809906,3985600752671118,3985600752675364,3985531696330503
168,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,340,41380,41380,256,256,0,0,12,4,32,64,0x0,0x70d7fda957c0,8,160,11936,216,74,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,11,11,0,0,4,4,0,0,5,5,0,0,7,7,0,0,1,1,0,0,0,0,0,0,5,4,1,0,0,0,0,0,8,8,0,0,0,0,0,0,1,1,0,0,5,5,0,0,1186,1309144,49118,0,1,4,3985531695350875,3985600752697316,3985600752699039,3985531697586388
169,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,341,41380,41380,256,256,0,0,24,0,32,64,0x0,0x70d74ca69a40,4,80,6144,1458,876,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,8,8,0,0,4,4,0,0,9,9,0,0,4,4,0,0,4,4,0,0,5,5,0,0,8,8,0,0,8,8,0,0,4,4,0,0,4,4,0,0,10,10,0,0,4,4,0,0,5,4,1,0,4,4,0,0,4,4,0,0,5,5,0,0,1186,902598,24776,0,1,4,3985531695824425,3985600752712539,3985600752714702,3985531698789736
170,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,342,41380,41380,256,256,0,0,40,0,32,64,0x0,0x70d74ca69840,12,240,18624,1533,942,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,0,0,0,0,0,0,0,0,9,9,0,0,1,1,0,0,4,4,0,0,5,5,0,0,5,5,0,0,4,4,0,0,5,5,0,0,4,4,0,0,13,13,0,0,8,8,0,0,4,4,0,0,4,4,0,0,6,5,1,0,4,4,0,0,1186,1393448,24945,0,1,4,3985531696884291,3985600752727881,3985600752730205,3985531700195533
171,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,343,41380,41380,256,256,0,0,36,4,80,64,0x0,0x70d74c447fc0,12,154,12048,1085,622,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,4,4,0,0,4,4,0,0,8,8,0,0,4,4,0,0,5,4,1,0,4,4,0,0,9,9,0,0,4,4,0,0,4,4,0,0,4,4,0,0,9,9,0,0,5,5,0,0,1,1,0,0,0,0,0,0,10,10,0,0,4,4,0,0,1186,1006507,24569,0,1,4,3985531697860013,3985600752743024,3985600752745227,3985531701592177
172,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,344,41380,41380,256,256,0,0,24,0,32,64,0x0,0x70d74ca69a40,4,76,6208,1458,876,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,8,8,0,0,4,4,0,0,8,8,0,0,4,4,0,0,4,4,0,0,4,4,0,0,8,8,0,0,8,8,0,0,5,5,0,0,5,5,0,0,9,8,1,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,1186,1132070,25250,0,1,4,3985531698398989,3985600752751516,3985600752753880,3985531702994029
173,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,345,41380,41380,256,256,0,0,36,4,80,64,0x0,0x70d74c053a80,12,228,18720,1085,622,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,8,8,0,0,4,4,0,0,9,9,0,0,4,4,0,0,5,5,0,0,9,9,0,0,5,5,0,0,4,4,0,0,4,4,0,0,6,6,0,0,7,7,0,0,0,0,0,0,5,4,1,0,8,8,0,0,4,4,0,0,4,4,0,0,1186,931982,24871,0,1,4,3985531699291658,3985600752768822,3985600752771105,3985531704368320
174,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,346,41380,41380,256,256,512,0,8,0,32,64,0x0,0x70d74bc8eec0,9,158,12288,453,252,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,4,4,0,0,0,0,0,0,5,5,0,0,8,8,0,0,4,4,0,0,9,9,0,0,5,5,0,0,4,4,0,0,1,1,0,0,0,0,0,0,2,1,1,0,5,5,0,0,1,1,0,0,8,8,0,0,0,0,0,0,1,1,0,0,1186,842698,24580,0,1,4,3985531699843403,3985600752784805,3985600752786768,3985531705693218
175,__amd_rocclr_copyBuffer.kd,2,0,347,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,144,11792,299,65,0,0,0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,4,4,0,0,4,4,0,0,9,9,0,0,0,0,0,0,8,8,0,0,5,5,0,0,9,5,4,0,4,4,0,0,2,2,0,0,0,0,0,0,9,9,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1394,1225920,25397,0,1,8,3985531700693990,3985600752792497,3985600752795822,3985531707093187
176,__amd_rocclr_fillBufferAligned.kd,2,0,349,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,80,6976,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,4,4,0,0,8,8,0,0,4,4,0,0,5,4,1,0,0,0,0,0,1,1,0,0,0,0,0,0,4,4,0,0,2,2,0,0,9,9,0,0,5,5,0,0,8,8,0,0,4,4,0,0,1,1,0,0,1,1,0,0,1394,99460,25673,0,1,4,3985531707879198,3985600752818856,3985600752820538,3985531709003580
177,__amd_rocclr_fillBufferAligned.kd,2,0,350,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,80,6752,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,6,6,0,0,5,5,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,2,2,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,0,0,0,0,1,1,0,0,1394,630820,24864,0,1,4,3985531708982749,3985600752824504,3985600752825826,3985531710807034
178,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,351,41380,41380,256,256,0,0,8,0,16,64,0x0,0x70d7e8921100,12,224,17856,78,20,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,1,1,0,0,4,4,0,0,1,0,1,0,2,2,0,0,1,1,0,0,5,5,0,0,1,1,0,0,0,0,0,0,1,1,0,0,4,4,0,0,0,0,0,0,0,0,0,0,8,4,4,0,12,8,4,0,1186,1070340,25307,0,1,4,3985531709474916,3985600752839326,3985600752841329,3985531712249255
179,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,352,41380,41380,512,512,29184,0,52,4,48,64,0x0,0x70d74bc8f040,56,865,70180,2268,900,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,0,0,0,0,4,4,0,0,5,5,0,0,6,6,0,0,7,5,2,0,9,9,0,0,5,5,0,0,6,6,0,0,4,4,0,0,4,4,0,0,5,5,0,0,9,9,0,0,5,5,0,0,8,8,0,0,5,5,0,0,4,4,0,0,1186,859105,24842,0,1,8,3985531709957950,3985600752848620,3985600752851344,3985531713535967
180,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,353,41380,41380,256,256,0,0,8,0,32,64,0x0,0x70d74bc8b900,12,228,17952,151,28,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,4,4,0,0,0,0,0,0,4,4,0,0,8,8,0,0,6,6,0,0,8,8,0,0,1,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,1,0,1,0,5,5,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,1186,678719,24979,0,1,4,3985531710499951,3985600752855069,3985600752856912,3985531714889607
181,__amd_rocclr_copyBuffer.kd,2,0,354,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,146,11712,299,65,0,0,0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,4,4,0,0,4,4,0,0,9,9,0,0,0,0,0,0,8,8,0,0,5,5,0,0,9,5,4,0,4,4,0,0,1,1,0,0,0,0,0,0,7,7,0,0,0,0,0,0,4,4,0,0,2,2,0,0,0,0,0,0,0,0,0,0,1394,1142076,25310,0,1,8,3985531711322847,3985600752868889,3985600752872895,3985531716263778
182,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,356,41380,41380,1024,128,0,0,20,4,64,64,0x0,0x70d7e8a6ecc0,432,1048,83848,5088,1984,0,0,0,0.0,0.0,0.0,128.0,0.0,0.0,0.0,128.0,72,56,16,0,74,58,16,0,76,60,16,0,72,56,16,0,48,32,16,0,48,32,16,0,60,44,16,0,52,36,16,0,72,56,16,0,72,56,16,0,76,60,16,0,73,57,16,0,48,32,16,0,48,32,16,0,61,45,16,0,52,36,16,0,1186,139910,25051,0,8,16,3985531717079553,3985600752903180,3985600752907306,3985531718109285
183,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,357,41380,41380,512,512,2560,48,28,4,80,64,0x0,0x70d76da18380,97,584,48464,2694,1158,0,0,0,0.0,0.0,0.0,17.0,0.0,0.0,0.0,17.0,17,17,0,0,16,16,0,0,20,20,0,0,16,16,0,0,12,12,0,0,12,12,0,0,16,16,0,0,12,12,0,0,15,14,1,0,14,14,0,0,17,17,0,0,13,13,0,0,20,20,0,0,19,19,0,0,22,22,0,0,20,20,0,0,1186,1147570,50273,0,1,8,3985531718095685,3985600752911032,3985600752915198,3985531719814534
184,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,358,41380,41380,256,256,0,0,12,4,32,64,0x0,0x70d7fda957c0,8,128,9888,216,74,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,8,8,0,0,5,5,0,0,5,5,0,0,4,4,0,0,1,1,0,0,0,0,0,0,7,6,1,0,0,0,0,0,4,4,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1186,991145,25006,0,1,4,3985531718640109,3985600752935027,3985600752936910,3985531721029430
185,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,359,41380,41380,256,256,0,0,24,0,32,64,0x0,0x70d74ca69a40,4,72,5624,1458,876,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,8,8,0,0,4,4,0,0,8,8,0,0,4,4,0,0,4,4,0,0,4,4,0,0,8,8,0,0,8,8,0,0,4,4,0,0,4,4,0,0,10,10,0,0,4,4,0,0,5,4,1,0,4,4,0,0,4,4,0,0,4,4,0,0,1186,1165038,24842,0,1,4,3985531719129903,3985600752950530,3985600752952613,3985531722432984
186,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,360,41380,41380,256,256,0,0,40,0,32,64,0x0,0x70d74ca69840,12,210,15888,1533,942,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,0,0,0,0,1,1,0,0,8,8,0,0,1,1,0,0,4,4,0,0,4,4,0,0,5,5,0,0,4,4,0,0,5,5,0,0,4,4,0,0,12,12,0,0,8,8,0,0,4,4,0,0,4,4,0,0,5,4,1,0,4,4,0,0,1186,1082699,24619,0,1,4,3985531720082671,3985600752958261,3985600752960465,3985531723792854
187,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,361,41380,41380,256,256,0,0,36,4,80,64,0x0,0x70d74c447fc0,12,180,14592,1085,622,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,4,4,0,0,5,5,0,0,9,9,0,0,4,4,0,0,5,4,1,0,5,5,0,0,9,9,0,0,4,4,0,0,4,4,0,0,4,4,0,0,10,10,0,0,5,5,0,0,1,1,0,0,0,0,0,0,9,9,0,0,4,4,0,0,1186,1086979,63089,0,1,4,3985531720642738,3985600752968717,3985600752970880,3985531725195576
188,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,362,41380,41380,256,256,0,0,24,0,32,64,0x0,0x70d74ca69a40,4,48,3792,1458,876,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,9,9,0,0,4,4,0,0,9,9,0,0,4,4,0,0,4,4,0,0,5,5,0,0,8,8,0,0,8,8,0,0,5,5,0,0,4,4,0,0,10,9,1,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,1186,1120486,24239,0,1,4,3985531721533555,3985600752977970,3985600752980334,3985531726584219
189,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,363,41380,41380,256,256,0,0,36,4,80,64,0x0,0x70d74c053a80,12,144,11808,1085,622,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,9,9,0,0,4,4,0,0,8,8,0,0,4,4,0,0,5,5,0,0,8,8,0,0,5,5,0,0,4,4,0,0,4,4,0,0,5,5,0,0,6,6,0,0,0,0,0,0,5,4,1,0,8,8,0,0,4,4,0,0,4,4,0,0,1186,1066482,24746,0,1,4,3985531722081525,3985600752994355,3985600752996558,3985531727975094
190,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,364,41380,41380,256,256,512,0,8,0,32,64,0x0,0x70d74bc8eec0,9,144,10944,453,252,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,4,4,0,0,0,0,0,0,4,4,0,0,9,9,0,0,4,4,0,0,8,8,0,0,5,5,0,0,4,4,0,0,0,0,0,0,0,0,0,0,1,0,1,0,5,5,0,0,1,1,0,0,8,8,0,0,0,0,0,0,1,1,0,0,1186,787792,24946,0,1,4,3985531722932652,3985600753010058,3985600753011981,3985531729363025
191,__amd_rocclr_copyBuffer.kd,2,0,365,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,148,10784,299,65,0,0,0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,4,4,0,0,4,4,0,0,10,10,0,0,2,2,0,0,8,8,0,0,6,6,0,0,9,5,4,0,4,4,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1394,1062829,25034,0,1,8,3985531723456346,3985600753017188,3985600753021354,3985531730764295
192,__amd_rocclr_fillBufferAligned.kd,2,0,367,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,72,5648,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,2,2,0,0,8,8,0,0,4,4,0,0,7,6,1,0,1,1,0,0,1,1,0,0,0,0,0,0,4,4,0,0,2,2,0,0,8,8,0,0,5,5,0,0,8,8,0,0,4,4,0,0,1,1,0,0,1,1,0,0,1394,96188,24531,0,1,4,3985531731589174,3985600753054363,3985600753056486,3985531732667838
193,__amd_rocclr_fillBufferAligned.kd,2,0,368,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,64,5040,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,4,4,0,0,4,4,0,0,1,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,4,4,0,0,2,2,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,2,2,0,0,1,1,0,0,1394,542555,25123,0,1,4,3985531732647037,3985600753060332,3985600753061814,3985531734425576
194,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,369,41380,41380,256,256,0,0,8,0,16,64,0x0,0x70d7e8921100,12,108,8856,78,20,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,1,0,1,0,0,0,0,0,1,1,0,0,5,5,0,0,1,1,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,8,4,4,0,13,9,4,0,1186,562740,24814,0,1,4,3985531733131573,3985600753074753,3985600753076596,3985531735797363
195,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,370,41380,41380,512,512,29184,0,52,4,48,64,0x0,0x70d74bc8f040,56,508,41652,2268,900,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,0,0,0,0,4,4,0,0,4,4,0,0,6,6,0,0,7,5,2,0,8,8,0,0,5,5,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,9,9,0,0,5,5,0,0,10,10,0,0,5,5,0,0,4,4,0,0,1186,1001869,24776,0,1,8,3985531733608869,3985600753084127,3985600753086611,3985531737135620
196,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,371,41380,41380,256,256,0,0,8,0,32,64,0x0,0x70d74bc8b900,12,152,12720,151,28,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,4,4,0,0,0,0,0,0,5,5,0,0,8,8,0,0,6,6,0,0,9,9,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,2,1,1,0,5,5,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,1186,837515,24472,0,1,4,3985531734152963,3985600753100111,3985600753101993,3985531738490443
197,__amd_rocclr_copyBuffer.kd,2,0,372,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,110,9088,299,65,0,0,0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,4,4,0,0,4,4,0,0,10,10,0,0,0,0,0,0,8,8,0,0,6,6,0,0,9,5,4,0,4,4,0,0,1,1,0,0,0,0,0,0,8,8,0,0,2,2,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1394,594362,25289,0,1,8,3985531734949490,3985600753112729,3985600753116255,3985531739900707
198,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,374,41380,41380,1024,128,0,0,20,4,64,64,0x0,0x70d7e8a6ecc0,432,1012,82368,5088,1984,0,0,0,0.0,0.0,0.0,128.0,0.0,0.0,0.0,128.0,76,60,16,0,82,66,16,0,76,60,16,0,72,56,16,0,44,28,16,0,48,32,16,0,60,44,16,0,44,28,16,0,76,60,16,0,80,64,16,0,76,60,16,0,73,57,16,0,44,28,16,0,48,32,16,0,61,45,16,0,44,28,16,0,1186,139966,23269,0,8,16,3985531740757803,3985600753145377,3985600753149904,3985531741882395
199,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,375,41380,41380,512,512,2560,48,28,4,80,64,0x0,0x70d76da18380,97,664,53104,2694,1158,0,0,0,0.0,0.0,0.0,17.0,0.0,0.0,0.0,17.0,19,19,0,0,16,16,0,0,22,22,0,0,17,17,0,0,12,12,0,0,12,12,0,0,16,16,0,0,12,12,0,0,13,12,1,0,13,13,0,0,17,17,0,0,13,13,0,0,20,20,0,0,19,19,0,0,20,20,0,0,20,20,0,0,1186,1001652,24797,0,1,8,3985531741868214,3985600753153550,3985600753157836,3985531743432074
200,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,376,41380,41380,256,256,0,0,12,4,32,64,0x0,0x70d7fda957c0,8,80,6464,216,74,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,10,10,0,0,4,4,0,0,6,6,0,0,6,6,0,0,1,1,0,0,0,0,0,0,5,4,1,0,0,0,0,0,8,8,0,0,0,0,0,0,1,1,0,0,4,4,0,0,1186,1027668,45941,0,1,4,3985531742413109,3985600753173138,3985600753174981,3985531744712336
201,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,377,41380,41380,256,256,0,0,24,0,32,64,0x0,0x70d74ca69a40,4,40,3104,1458,876,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,8,8,0,0,4,4,0,0,9,9,0,0,4,4,0,0,4,4,0,0,5,5,0,0,9,9,0,0,8,8,0,0,4,4,0,0,4,4,0,0,10,10,0,0,4,4,0,0,5,4,1,0,4,4,0,0,4,4,0,0,4,4,0,0,1186,1026996,25750,0,1,4,3985531742902652,3985600753181190,3985600753183394,3985531745949044
202,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,378,41380,41380,256,256,0,0,40,0,32,64,0x0,0x70d74ca69840,12,164,12528,1533,942,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,0,0,0,0,0,0,0,0,9,9,0,0,1,1,0,0,4,4,0,0,5,5,0,0,5,5,0,0,5,5,0,0,5,5,0,0,4,4,0,0,13,13,0,0,8,8,0,0,4,4,0,0,4,4,0,0,5,4,1,0,4,4,0,0,1186,777681,24723,0,1,4,3985531743998161,3985600753199698,3985600753201741,3985531747182897
203,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,379,41380,41380,256,256,0,0,36,4,80,64,0x0,0x70d74c447fc0,12,144,11520,1085,622,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,4,4,0,0,4,4,0,0,8,8,0,0,4,4,0,0,6,5,1,0,4,4,0,0,9,9,0,0,6,6,0,0,4,4,0,0,4,4,0,0,9,9,0,0,5,5,0,0,3,3,0,0,0,0,0,0,9,9,0,0,6,6,0,0,1186,1132390,45429,0,1,4,3985531744998930,3985600753207028,3985600753209031,3985531748074635
204,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,380,41380,41380,256,256,0,0,24,0,32,64,0x0,0x70d74ca69a40,4,42,3264,1458,876,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,8,8,0,0,4,4,0,0,8,8,0,0,4,4,0,0,6,6,0,0,4,4,0,0,8,8,0,0,9,9,0,0,5,5,0,0,4,4,0,0,9,8,1,0,4,4,0,0,6,6,0,0,4,4,0,0,4,4,0,0,6,6,0,0,1186,1210594,32942,0,1,4,3985531745565587,3985600753223373,3985600753225416,3985531749012371
205,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,381,41380,41380,256,256,0,0,36,4,80,64,0x0,0x70d74c053a80,12,154,12960,1085,622,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,8,8,0,0,4,4,0,0,9,9,0,0,4,4,0,0,7,7,0,0,9,9,0,0,5,5,0,0,5,5,0,0,4,4,0,0,5,5,0,0,7,7,0,0,0,0,0,0,6,5,1,0,8,8,0,0,4,4,0,0,5,5,0,0,1186,1473861,39025,0,1,4,3985531746464095,3985600753239116,3985600753241119,3985531749964848
206,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,382,41380,41380,256,256,512,0,8,0,32,64,0x0,0x70d74bc8eec0,9,64,5760,453,252,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,4,4,0,0,0,0,0,0,5,5,0,0,8,8,0,0,4,4,0,0,10,10,0,0,5,5,0,0,4,4,0,0,0,0,0,0,0,0,0,0,2,1,1,0,5,5,0,0,1,1,0,0,8,8,0,0,0,0,0,0,1,1,0,0,1186,866926,24777,0,1,4,3985531747432907,3985600753253697,3985600753255580,3985531750925497
207,__amd_rocclr_copyBuffer.kd,2,0,383,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,76,6240,299,65,0,0,0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,4,4,0,0,4,4,0,0,9,9,0,0,0,0,0,0,8,8,0,0,7,7,0,0,9,5,4,0,4,4,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1394,1011132,24767,0,1,8,3985531748355690,3985600753261068,3985600753264994,3985531752352256
208,__amd_rocclr_fillBufferAligned.kd,2,0,385,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,72,5824,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,2,2,0,0,8,8,0,0,4,4,0,0,5,4,1,0,0,0,0,0,1,1,0,0,0,0,0,0,4,4,0,0,2,2,0,0,8,8,0,0,5,5,0,0,10,10,0,0,4,4,0,0,1,1,0,0,2,2,0,0,1394,98706,25029,0,1,4,3985531753162152,3985600753287908,3985600753289871,3985531754256009
209,__amd_rocclr_fillBufferAligned.kd,2,0,386,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,72,6304,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,4,4,0,0,4,4,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,2,2,0,0,5,5,0,0,6,6,0,0,4,4,0,0,4,4,0,0,0,0,0,0,1,1,0,0,1394,723431,25783,0,1,4,3985531754234988,3985600753293676,3985600753295118,3985531756101797
210,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,387,41380,41380,256,256,0,0,8,0,16,64,0x0,0x70d7e8921100,12,198,15744,78,20,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,1,1,0,0,4,4,0,0,1,0,1,0,1,1,0,0,1,1,0,0,5,5,0,0,2,2,0,0,0,0,0,0,1,1,0,0,4,4,0,0,0,0,0,0,0,0,0,0,8,4,4,0,12,8,4,0,1186,1292131,24719,0,1,4,3985531754742147,3985600753308218,3985600753310101,3985531757416309
211,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,388,41380,41380,512,512,29184,0,52,4,48,64,0x0,0x70d74bc8f040,56,771,62868,2268,900,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,0,0,0,0,4,4,0,0,7,7,0,0,6,6,0,0,7,5,2,0,9,9,0,0,5,5,0,0,4,4,0,0,4,4,0,0,4,4,0,0,5,5,0,0,9,9,0,0,5,5,0,0,8,8,0,0,5,5,0,0,4,4,0,0,1186,1329268,24739,0,1,8,3985531755227495,3985600753328848,3985600753331372,3985531758848706
212,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,389,41380,41380,256,256,0,0,8,0,32,64,0x0,0x70d74bc8b900,12,152,12336,151,28,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,4,4,0,0,0,0,0,0,5,5,0,0,8,8,0,0,6,6,0,0,8,8,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,5,5,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,1186,1404193,25440,0,1,4,3985531756351085,3985600753336460,3985600753338382,3985531760272540
213,__amd_rocclr_copyBuffer.kd,2,0,390,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,128,10640,299,65,0,0,0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,6,6,0,0,4,4,0,0,9,9,0,0,0,0,0,0,8,8,0,0,5,5,0,0,9,5,4,0,4,4,0,0,1,1,0,0,0,0,0,0,7,7,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1394,1070375,25197,0,1,8,3985531756855120,3985600753350120,3985600753353885,3985531761725907
214,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,392,41380,41380,1024,128,0,0,20,4,64,64,0x0,0x70d7e8a6ecc0,432,1156,93544,5088,1984,0,0,0,0.0,0.0,0.0,128.0,0.0,0.0,0.0,128.0,72,56,16,0,78,62,16,0,76,60,16,0,72,56,16,0,44,28,16,0,48,32,16,0,68,52,16,0,44,28,16,0,72,56,16,0,76,60,16,0,76,60,16,0,73,57,16,0,44,28,16,0,48,32,16,0,69,53,16,0,44,28,16,0,1186,135552,20642,0,8,16,3985531762573961,3985600753383289,3985600753387415,3985531763670401
215,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,393,41380,41380,512,512,2560,48,28,4,80,64,0x0,0x70d76da18380,97,840,68536,2694,1158,0,0,0,0.0,0.0,0.0,17.0,0.0,0.0,0.0,17.0,17,17,0,0,16,16,0,0,20,20,0,0,16,16,0,0,13,13,0,0,14,14,0,0,16,16,0,0,14,14,0,0,13,12,1,0,13,13,0,0,17,17,0,0,13,13,0,0,20,20,0,0,19,19,0,0,20,20,0,0,20,20,0,0,1186,1073184,23999,0,1,8,3985531763656200,3985600753391060,3985600753395547,3985531765261332
216,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,394,41380,41380,256,256,0,0,12,4,32,64,0x0,0x70d7fda957c0,8,154,12704,216,74,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,10,10,0,0,5,5,0,0,5,5,0,0,6,6,0,0,1,1,0,0,0,0,0,0,6,5,1,0,0,0,0,0,8,8,0,0,0,0,0,0,1,1,0,0,5,5,0,0,1186,1231251,47132,0,1,4,3985531764186834,3985600753412972,3985600753414895,3985531766482907
217,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,395,41380,41380,256,256,0,0,24,0,32,64,0x0,0x70d74ca69a40,4,88,6632,1458,876,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,8,8,0,0,4,4,0,0,8,8,0,0,4,4,0,0,4,4,0,0,4,4,0,0,8,8,0,0,8,8,0,0,4,4,0,0,4,4,0,0,9,9,0,0,4,4,0,0,5,4,1,0,4,4,0,0,4,4,0,0,5,5,0,0,1186,693532,24664,0,1,4,3985531764678360,3985600753420984,3985600753423308,3985531767940461
218,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,396,41380,41380,256,256,0,0,40,0,32,64,0x0,0x70d74ca69840,12,240,19368,1533,942,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,0,0,0,0,0,0,0,0,8,8,0,0,1,1,0,0,4,4,0,0,4,4,0,0,5,5,0,0,4,4,0,0,5,5,0,0,4,4,0,0,12,12,0,0,8,8,0,0,5,5,0,0,4,4,0,0,5,4,1,0,4,4,0,0,1186,804411,25136,0,1,4,3985531765827468,3985600753430879,3985600753432962,3985531769243977
219,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,397,41380,41380,256,256,0,0,36,4,80,64,0x0,0x70d74c447fc0,12,210,16992,1085,622,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,4,4,0,0,4,4,0,0,9,9,0,0,4,4,0,0,5,4,1,0,5,5,0,0,9,9,0,0,4,4,0,0,4,4,0,0,4,4,0,0,10,10,0,0,5,5,0,0,2,2,0,0,0,0,0,0,9,9,0,0,4,4,0,0,1186,977791,25033,0,1,4,3985531767051307,3985600753439852,3985600753441935,3985531770708190
220,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,398,41380,41380,256,256,0,0,24,0,32,64,0x0,0x70d74ca69a40,4,80,6616,1458,876,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,8,8,0,0,4,4,0,0,9,9,0,0,4,4,0,0,4,4,0,0,5,5,0,0,8,8,0,0,8,8,0,0,5,5,0,0,4,4,0,0,10,9,1,0,4,4,0,0,4,4,0,0,5,5,0,0,4,4,0,0,4,4,0,0,1186,1329960,25280,0,1,4,3985531768157461,3985600753455876,3985600753458079,3985531772144463
221,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,399,41380,41380,256,256,0,0,36,4,80,64,0x0,0x70d74c053a80,12,242,19872,1085,622,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,8,8,0,0,4,4,0,0,8,8,0,0,4,4,0,0,5,5,0,0,8,8,0,0,5,5,0,0,4,4,0,0,4,4,0,0,5,5,0,0,6,6,0,0,0,0,0,0,5,4,1,0,9,9,0,0,4,4,0,0,4,4,0,0,1186,673002,24915,0,1,4,3985531768656198,3985600753471098,3985600753473261,3985531773561216
222,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,400,41380,41380,256,256,512,0,8,0,32,64,0x0,0x70d74bc8eec0,9,162,13248,453,252,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,4,4,0,0,0,0,0,0,4,4,0,0,8,8,0,0,4,4,0,0,8,8,0,0,5,5,0,0,4,4,0,0,0,0,0,0,0,0,0,0,2,1,1,0,5,5,0,0,1,1,0,0,8,8,0,0,0,0,0,0,1,1,0,0,1186,1069656,24421,0,1,4,3985531769821150,3985600753487162,3985600753489085,3985531774945282
223,__amd_rocclr_copyBuffer.kd,2,0,401,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,164,13232,299,65,0,0,0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,4,4,0,0,4,4,0,0,10,10,0,0,0,0,0,0,8,8,0,0,6,6,0,0,9,5,4,0,7,7,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,4,4,0,0,1394,857797,25362,0,1,8,3985531770392894,3985600753494132,3985600753497137,3985531776091776
224,__amd_rocclr_fillBufferAligned.kd,2,0,403,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,72,6320,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,2,2,0,0,8,8,0,0,4,4,0,0,5,4,1,0,0,0,0,0,1,1,0,0,0,0,0,0,5,5,0,0,4,4,0,0,8,8,0,0,5,5,0,0,8,8,0,0,4,4,0,0,1,1,0,0,1,1,0,0,1394,100120,24616,0,1,4,3985531776918568,3985600753525979,3985600753527702,3985531778076689
225,__amd_rocclr_fillBufferAligned.kd,2,0,404,41380,41380,256,256,0,0,12,4,48,64,0x0,0x71100401ba00,8,96,7232,183,38,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,2,2,0,0,0,0,0,0,4,4,0,0,5,5,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,2,2,0,0,4,4,0,0,4,4,0,0,4,4,0,0,4,4,0,0,0,0,0,0,1,1,0,0,1394,631957,24809,0,1,4,3985531778055518,3985600753531668,3985600753533150,3985531779985109
226,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,405,41380,41380,256,256,0,0,8,0,16,64,0x0,0x70d7e8921100,12,238,19296,78,20,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,0,0,0,0,1,1,0,0,0,0,0,0,4,4,0,0,1,0,1,0,0,0,0,0,1,1,0,0,5,5,0,0,1,1,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,8,4,4,0,12,8,4,0,1186,653408,25039,0,1,4,3985531778545131,3985600753536875,3985600753538798,3985531781386119
227,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,406,41380,41380,512,512,29184,0,52,4,48,64,0x0,0x70d74bc8f040,56,882,69760,2268,900,0,0,0,0.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,0,0,0,0,4,4,0,0,4,4,0,0,6,6,0,0,7,5,2,0,8,8,0,0,5,5,0,0,6,6,0,0,4,4,0,0,4,4,0,0,4,4,0,0,9,9,0,0,5,5,0,0,8,8,0,0,5,5,0,0,4,4,0,0,1186,1085110,24542,0,1,8,3985531779033934,3985600753548452,3985600753551257,3985531782773600
228,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,407,41380,41380,256,256,0,0,8,0,32,64,0x0,0x70d74bc8b900,12,242,18960,151,28,0,0,0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,2.0,4,4,0,0,0,0,0,0,5,5,0,0,8,8,0,0,6,6,0,0,9,9,0,0,1,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,2,1,1,0,5,5,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,1186,1192446,25201,0,1,4,3985531779601422,3985600753564997,3985600753566960,3985531784270682
229,__amd_rocclr_copyBuffer.kd,2,0,408,41380,41380,512,512,0,0,16,0,32,64,0x0,0x71100401ba80,16,96,8472,299,65,0,0,0,0.0,0.0,0.0,8.0,0.0,0.0,0.0,8.0,4,4,0,0,4,4,0,0,10,10,0,0,0,0,0,0,8,8,0,0,8,8,0,0,9,5,4,0,4,4,0,0,1,1,0,0,0,0,0,0,8,8,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1394,555820,24751,0,1,8,3985531780515243,3985600753579258,3985600753582463,3985531785642108
