Dispatch_ID,Kernel_Name,GPU_ID,queue-id,queue-index,pid,tid,Grid_Size,Workgroup_Size,LDS_Per_Workgroup,Scratch_Per_Workitem,Arch_VGPR,Accum_VGPR,SGPR,wave_size,sig,obj,SQ_INSTS_VMEM,SQ_INST_LEVEL_VMEM,SQ_ACCUM_PREV_HIRES,SQ_INSTS_VALU_CVT,SQ_INSTS_VMEM_WR,SQ_INSTS_VMEM_RD,SQ_INSTS_SALU,SQ_INSTS_VSKIPPED,TA_TA_BUSY_sum,TA_BUFFER_WAVEFRONTS_sum,TD_TD_BUSY_sum,TD_TC_STALL_sum,TCP_GATE_EN1_sum,TCP_GATE_EN2_sum,TCP_TD_TCP_STALL_CYCLES_sum,TCP_TCR_TCP_STALL_CYCLES_sum,TCC_CYCLE[0],TCC_RW_REQ[0],TCC_HIT[0],TCC_MISS[0],TCC_CYCLE[1],TCC_RW_REQ[1],TCC_HIT[1],TCC_MISS[1],TCC_CYCLE[2],TCC_RW_REQ[2],TCC_HIT[2],TCC_MISS[2],TCC_CYCLE[3],TCC_RW_REQ[3],TCC_HIT[3],TCC_MISS[3],TCC_CYCLE[4],TCC_RW_REQ[4],TCC_HIT[4],TCC_MISS[4],TCC_CYCLE[5],TCC_RW_REQ[5],TCC_HIT[5],TCC_MISS[5],TCC_CYCLE[6],TCC_RW_REQ[6],TCC_HIT[6],TCC_MISS[6],TCC_CYCLE[7],TCC_RW_REQ[7],TCC_HIT[7],TCC_MISS[7],TCC_CYCLE[8],TCC_RW_REQ[8],TCC_HIT[8],TCC_MISS[8],TCC_CYCLE[9],TCC_RW_REQ[9],TCC_HIT[9],TCC_MISS[9],TCC_CYCLE[10],TCC_RW_REQ[10],TCC_HIT[10],TCC_MISS[10],TCC_CYCLE[11],TCC_RW_REQ[11],TCC_HIT[11],TCC_MISS[11],TCC_CYCLE[12],TCC_RW_REQ[12],TCC_HIT[12],TCC_MISS[12],TCC_CYCLE[13],TCC_RW_REQ[13],TCC_HIT[13],TCC_MISS[13],TCC_CYCLE[14],TCC_RW_REQ[14],TCC_HIT[14],TCC_MISS[14],TCC_CYCLE[15],TCC_RW_REQ[15],TCC_HIT[15],TCC_MISS[15],CPC_CPC_STAT_BUSY,CPC_CPC_STAT_IDLE,CPF_CPF_STAT_BUSY,CPF_CPF_STAT_STALL,SPI_CSN_WINDOW_VALID,SPI_CSN_BUSY,GRBM_SPI_BUSY,DispatchNs,Start_Timestamp,End_Timestamp,CompleteNs
0,"void at::native::(anonymous namespace)::distribution_elementwise_grid_stride_kernel<float, 4, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}>(long, at::PhiloxCudaState, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}) [clone .kd]",2,0,0,41627,41627,622592,256,0,0,56,0,48,64,0x0,0x71de0462bf80,1048576,4039029,322876276,1070080,1048576,0,5243392,0,25093456.0,0.0,38995784.0,36710535.0,50142277.0,41414634.0,26.0,0.0,1415982,131872,66316,65582,1415982,131392,65848,65554,1415982,131712,66160,65552,1415982,131712,66160,65572,1415982,131712,66160,65556,1415982,131712,66160,65552,1415982,131712,66160,65556,1415982,131712,66160,65552,1415982,131872,66316,65579,1415982,131392,65848,65554,1415982,131712,66160,65552,1415982,131712,66160,65573,1415982,131712,66160,65556,1415982,131712,66160,65552,1415982,131712,66160,65556,1415982,131712,66160,65552,906678,509304,1415982,1224,5657200,5224188,1312439,3985537084648761,3985600464261405,3985600464349455,3985537094301656
1,"void at::native::vectorized_elementwise_kernel<8, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul> >(int, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,1,41627,41627,8388608,256,0,0,20,4,32,64,0x0,0x719de8246d40,262144,12024112,961861712,0,131072,131072,1835008,0,23980813.0,0.0,37068795.0,34612425.0,38524893.0,37096283.0,104649.0,29814368.0,1115680,197008,65924,131110,1115680,197328,66236,131096,1115680,197248,66160,131088,1115680,197248,66160,131106,1115680,196928,65848,131086,1115680,196928,65848,131080,1115680,196928,65848,131096,1115680,196608,65536,131097,1115680,197008,65924,131105,1115680,197328,66236,131098,1115680,197248,66160,131088,1115680,197248,66160,131106,1115680,196928,65848,131084,1115680,196928,65848,131080,1115680,196928,65848,131098,1115680,196608,65536,131096,1115680,0,1115680,78,4462720,4008186,1009905,3985537099853219,3985600469372577,3985600469465073,3985537100490982
2,"void at::native::(anonymous namespace)::distribution_elementwise_grid_stride_kernel<float, 4, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}>(long, at::PhiloxCudaState, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::(anonymous namespace)::distribution_nullary_kernel<c10::BFloat16, float, HIP_vector_type<float, 4u>, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2}, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_and_transform<c10::BFloat16, float, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::CUDAGeneratorImpl*, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(hiprandStatePhilox4_32_10*)#2} const&, at::native::templates::cuda::normal_kernel<at::CUDAGeneratorImpl*>(at::TensorBase const&, double, double, at::CUDAGeneratorImpl*)::{lambda()#1}::operator()() const::{lambda()#4}::operator()() const::{lambda(float)#1})::{lambda(int, float)#1}) [clone .kd]",2,0,2,41627,41627,622592,256,0,0,56,0,48,64,0x0,0x71de0462bf80,1048576,3879557,310280012,1070080,1048576,0,5243392,0,24415702.0,0.0,38699892.0,36387292.0,49828430.0,41208966.0,0.0,0.0,2213804,131712,66160,65552,2213804,131392,65848,65548,2213804,131872,66316,65556,2213804,131712,66160,65552,2213804,131712,66160,65552,2213804,131712,66160,65552,2213804,131712,66160,65556,2213804,131712,66160,65552,2213804,131712,66160,65552,2213804,131392,65848,65548,2213804,131872,66316,65556,2213804,131712,66160,65552,2213804,131712,66160,65552,2213804,131712,66160,65552,2213804,131712,66160,65556,2213804,131712,66160,65552,1703177,510627,2213804,1224,8855216,5197812,1304010,3985537100543600,3985600469465073,3985600469551601,3985537102160699
3,"void at::native::vectorized_elementwise_kernel<8, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul> >(int, at::native::BUnaryFunctor<c10::BFloat16, c10::BFloat16, c10::BFloat16, at::native::binary_internal::MulFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,3,41627,41627,8388608,256,0,0,20,4,32,64,0x0,0x719de8246d40,262144,13315008,1065173980,0,131072,131072,1835008,0,25978718.0,0.0,40998670.0,38537750.0,42653144.0,41021964.0,110670.0,33372840.0,2184961,197008,65924,131132,2184961,197248,66160,131113,2184961,197248,66160,131088,2184961,197328,66236,131116,2184961,196928,65848,131092,2184961,196928,65848,131080,2184961,196928,65848,131085,2184961,196608,65536,131072,2184961,197008,65924,131129,2184961,197248,66160,131111,2184961,197248,66160,131088,2184961,197328,66236,131116,2184961,196928,65848,131092,2184961,196928,65848,131080,2184961,196928,65848,131087,2184961,196608,65536,131072,2184961,0,2184961,0,8739844,4442738,1117521,3985537101130827,3985600469551601,3985600469639410,3985537103426289
4,"void at::native::elementwise_kernel_manual_unroll<128, 8, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#12}::operator()() const::{lambda(c10::BFloat16)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,4,41627,41627,8388608,128,0,0,40,0,64,64,0x0,0x719dc846f6c0,2097152,49129913,3930143500,0,1048576,1048576,31195136,0,197980299.0,0.0,198043912.0,179882476.0,201993669.0,198060813.0,17323.0,4199.0,5441896,4317820,4186724,131117,5441896,4317820,4186724,131104,5441896,4317500,4186412,131088,5441896,4317820,4186724,131119,5441896,4317980,4186876,131108,5441896,4317900,4186800,131100,5441896,4318140,4187036,131106,5441896,4317900,4186800,131100,5441896,4317820,4186724,131120,5441896,4317820,4186724,131106,5441896,4317500,4186412,131088,5441896,4317820,4186724,131117,5441896,4317980,4186876,131108,5441896,4317900,4186800,131100,5441896,4318140,4187036,131104,5441896,4317900,4186800,131100,5378261,63635,5441896,154,21767584,21210582,5315714,3985537108745509,3985600476294902,3985600476646741,3985537109635865
5,__amd_rocclr_fillBufferAligned.kd,2,0,5,41627,41627,77824,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,25600,428239,34258088,0,25600,0,310784,0,1475434.0,0.0,1899472.0,1866092.0,3832808.0,1920838.0,0.0,1089266.0,216362,25920,13112,12808,216362,25920,13112,12814,216362,25600,12800,12804,216362,25680,12876,12804,216362,25920,13112,12812,216362,25680,12876,12804,216362,26320,13500,12831,216362,26400,13584,12816,216362,25920,13112,12808,216362,25920,13112,12812,216362,25600,12800,12804,216362,25680,12876,12804,216362,25920,13112,12812,216362,25680,12876,12805,216362,26320,13500,12832,216362,26400,13584,12816,216362,0,216362,77,865448,345854,89381,3985537112218692,3985600479242372,3985600479253949,3985537112789445
6,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,6,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,100780488,8060769392,56832,265216,13336576,14252800,0,355304235.0,13601792.0,476387993.0,257351403.0,639913274.0,484823444.0,1179592.0,6503335.0,16947147,4658272,3713773,944524,16947147,4658255,3713693,944568,16947147,4658112,3713633,944497,16947147,4658096,3713362,944773,16947147,4658400,3713704,944707,16947147,4658240,3713470,944770,16947147,4658304,3713838,944486,16947147,4658288,3713564,944745,16947147,4658272,3713407,944891,16947147,4658256,3713329,944933,16947147,4658112,3713334,944799,16947147,4658096,3713096,945043,16947147,4658400,3713666,944744,16947147,4658240,3713398,944842,16947147,4658304,3713256,945070,16947147,4658288,3712981,945326,16947147,0,16947147,78,67788588,67302822,16829341,3985537203302286,3985600568206057,3985600569423053,3985537205325526
7,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,7,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,79045120,6321941720,56832,265216,13336576,14252800,0,324446200.0,13601792.0,430030890.0,210834962.0,627654254.0,438872328.0,1067149.0,7156022.0,17804884,4658272,3773904,884424,17804884,4658256,3773936,884334,17804884,4658112,3773758,884362,17804884,4658096,3773770,884357,17804884,4658240,3773927,884353,17804884,4658600,3774332,884296,17804884,4658304,3774000,884337,17804884,4658288,3774041,884264,17804884,4658272,3773946,884377,17804884,4658256,3773947,884322,17804884,4658112,3773805,884317,17804884,4658096,3773850,884272,17804884,4658240,3773887,884398,17804884,4658600,3774264,884368,17804884,4658304,3773994,884344,17804884,4658288,3773939,884366,17804884,0,17804884,15993,71219536,66010548,16505648,3985537204169348,3985600569423053,3985600570876317,3985537207834564
8,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,8,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,75559858,6042900052,56832,265216,13336576,14252800,0,321137276.0,13601792.0,425076569.0,205851366.0,627665963.0,433958587.0,1115595.0,7140339.0,16998019,4658272,3772756,885567,16998019,4658256,3772958,885314,16998019,4658112,3772640,885496,16998019,4658096,3772900,885243,16998019,4658240,3772738,885539,16998019,4658600,3773285,885327,16998019,4658304,3772846,885496,16998019,4658288,3773019,885288,16998019,4658272,3772879,885449,16998019,4658256,3773069,885203,16998019,4658112,3772740,885392,16998019,4658096,3772919,885235,16998019,4658240,3772805,885472,16998019,4658640,3773441,885209,16998019,4658304,3772870,885474,16998019,4658288,3773109,885196,16998019,0,16998019,10641,67992076,66013586,16506362,3985537204712200,3985600570876317,3985600573097956,3985537209991070
9,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,9,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,76172125,6091822504,56832,265216,13336576,14252800,0,322855156.0,13601792.0,428971524.0,209743386.0,628509590.0,437841503.0,1115084.0,5145474.0,17326602,4658272,3770951,887367,17326602,4658256,3771026,887249,17326602,4658112,3770679,887441,17326602,4658096,3770790,887332,17326602,4658240,3770852,887432,17326602,4658240,3771009,887261,17326602,4658704,3771137,887602,17326602,4658288,3770870,887436,17326602,4658272,3770925,887394,17326602,4658256,3771040,887234,17326602,4658112,3770646,887475,17326602,4658096,3770753,887376,17326602,4658240,3770839,887446,17326602,4658240,3771008,887265,17326602,4658704,3771173,887565,17326602,4658288,3770857,887452,17326602,0,17326602,8010,69306408,66102380,16528575,3985537205214762,3985600573097956,3985600574918242,3985537212151122
10,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,10,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,89378073,7148608236,56832,265216,13336576,14252800,0,337635701.0,13601792.0,453736675.0,234601234.0,632310281.0,462467767.0,1072816.0,6794507.0,17977629,4658272,3760381,897941,17977629,4658256,3760383,897889,17977629,4658112,3760087,898051,17977629,4658096,3760155,897996,17977629,4658240,3760445,897824,17977629,4658240,3760417,897832,17977629,4658704,3760937,897802,17977629,4658288,3760556,897751,17977629,4658272,3760547,897774,17977629,4658256,3760501,897767,17977629,4658112,3760508,897633,17977629,4658096,3760487,897670,17977629,4658240,3760337,897937,17977629,4658240,3760314,897936,17977629,4658704,3760694,898042,17977629,4658288,3760332,897975,17977629,0,17977629,8455,71910516,66502444,16628617,3985537205714481,3985600574918242,3985600576577090,3985537214407657
11,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,11,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,87735463,7017006368,56832,265216,13336576,14252800,0,339142816.0,13601792.0,456889224.0,237729220.0,634099670.0,465552962.0,1133781.0,5520443.0,17721594,4658272,3756156,902171,17721594,4658255,3755931,902337,17721594,4658112,3756120,902001,17721594,4658096,3755862,902262,17721594,4658240,3755918,902359,17721594,4658240,3755787,902481,17721594,4658304,3756106,902238,17721594,4658648,3756276,902393,17721594,4658272,3756047,902275,17721594,4658256,3755913,902354,17721594,4658112,3755976,902144,17721594,4658096,3755817,902311,17721594,4658240,3756158,902125,17721594,4658240,3755940,902333,17721594,4658304,3756224,902115,17721594,4658688,3756366,902341,17721594,0,17721594,8031,70886376,66690814,16675769,3985537206217214,3985600576577090,3985600578183701,3985537216550193
12,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,12,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,116284794,9301176304,56832,265216,13336576,14252800,0,392984177.0,13601792.0,527385120.0,308404572.0,661533535.0,535543734.0,1177157.0,4985330.0,18106436,4658272,3765316,893004,18106436,4658256,3765253,893015,18106436,4658112,3765281,892854,18106436,4658096,3765152,892997,18106436,4658240,3765264,893013,18106436,4658240,3765165,893083,18106436,4658304,3765267,893073,18106436,4658688,3765619,893090,18106436,4658272,3765185,893127,18106436,4658256,3765096,893170,18106436,4658112,3765090,893044,18106436,4658096,3764964,893179,18106436,4658240,3765189,893083,18106436,4658240,3765181,893070,18106436,4658304,3765373,892966,18106436,4658688,3765690,893015,18106436,0,18106436,8603,72425744,69578564,17401392,3985537207112827,3985600578183701,3985600579757224,3985537218737075
13,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,13,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,87609800,7007099484,56832,265216,13336576,14252800,0,337955334.0,13601792.0,459036554.0,239831271.0,633372741.0,467846108.0,1163775.0,5052481.0,17843875,4658672,3766672,892046,17843875,4658256,3766109,892163,17843875,4658112,3766270,891852,17843875,4658096,3766098,892028,17843875,4658240,3766350,891933,17843875,4658240,3766132,892138,17843875,4658304,3766539,891802,17843875,4658288,3766399,891908,17843875,4658672,3766853,891866,17843875,4658256,3766314,891951,17843875,4658112,3766483,891637,17843875,4658096,3766374,891756,17843875,4658240,3766106,892183,17843875,4658240,3765954,892315,17843875,4658304,3766418,891914,17843875,4658288,3766198,892110,17843875,0,17843875,8292,71375500,66614294,16656726,3985537207619226,3985600579757224,3985600581308673,3985537220944587
14,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,14,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,95673369,7652140736,56832,265216,13336576,14252800,0,352331070.0,13601792.0,469469966.0,250287787.0,650477885.0,478286189.0,1115724.0,6677329.0,17972532,4658672,3747006,911713,17972532,4658256,3746600,911670,17972532,4658112,3746660,911476,17972532,4658096,3746707,911438,17972532,4658240,3746032,912245,17972532,4658240,3746186,912064,17972532,4658304,3746665,911681,17972532,4658288,3746751,911558,17972532,4658672,3746558,912161,17972532,4658256,3746203,912065,17972532,4658112,3746626,911508,17972532,4658096,3746672,911478,17972532,4658240,3746613,911668,17972532,4658240,3746660,911592,17972532,4658304,3746826,911518,17972532,4658288,3746859,911448,17972532,0,17972532,9419,71890128,68414834,17106772,3985537208218221,3985600581308673,3985600582829838,3985537223290122
15,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,15,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,81965881,6555530192,56832,265216,13336576,14252800,0,331743976.0,13601792.0,443336512.0,224127500.0,631906734.0,452131470.0,1149216.0,4919371.0,17922720,4658272,3762303,896024,17922720,4658656,3762703,895968,17922720,4658112,3761829,896291,17922720,4658096,3761805,896320,17922720,4658240,3762060,896217,17922720,4658240,3762133,896134,17922720,4658304,3761864,896475,17922720,4658288,3761930,896377,17922720,4658272,3762193,896131,17922720,4658656,3762595,896076,17922720,4658112,3761930,896191,17922720,4658096,3761841,896287,17922720,4658240,3762416,895867,17922720,4658240,3762392,895881,17922720,4658304,3762177,896165,17922720,4658288,3762101,896208,17922720,0,17922720,7300,71690880,66459972,16618000,3985537208740753,3985600582829838,3985600584342270,3985537225753262
16,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,16,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,85506966,6838864864,56832,265216,13336576,14252800,0,333945834.0,13601792.0,451119534.0,231900068.0,632018908.0,459979870.0,1142289.0,5745909.0,17397772,4658272,3770720,887595,17397772,4658656,3770921,887749,17397772,4658112,3770373,887762,17397772,4658096,3770219,887922,17397772,4658240,3770491,887786,17397772,4658240,3770295,887955,17397772,4658304,3770524,887822,17397772,4658288,3770290,888018,17397772,4658272,3770626,887695,17397772,4658656,3770785,887884,17397772,4658112,3770298,887837,17397772,4658096,3770142,888012,17397772,4658240,3770717,887563,17397772,4658240,3770553,887696,17397772,4658304,3770521,887822,17397772,4658288,3770411,887895,17397772,0,17397772,7602,69591088,66471782,16620948,3985537209497391,3985600584342270,3985600585816646,3985537227952552
17,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,17,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,102912092,8231281108,56832,265216,13336576,14252800,0,367831463.0,13601792.0,484644715.0,265449880.0,666284708.0,493415104.0,1156184.0,5010867.0,18213195,4658272,3761877,896444,18213195,4658256,3761721,896548,18213195,4658472,3762182,896299,18213195,4658096,3761677,896449,18213195,4658240,3762164,896117,18213195,4658240,3762012,896261,18213195,4658304,3762384,895954,18213195,4658288,3762269,896040,18213195,4658272,3762185,896135,18213195,4658256,3762090,896177,18213195,4658512,3762547,895974,18213195,4658096,3762081,896054,18213195,4658240,3761797,896492,18213195,4658240,3761701,896570,18213195,4658304,3761886,896455,18213195,4658288,3761880,896426,18213195,0,18213195,8558,72852780,70078698,17522860,3985537209982738,3985600585816646,3985600587279205,3985537230361882
18,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,18,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,85569307,6843717216,56832,265216,13336576,14252800,0,332479415.0,13601792.0,445983471.0,226809763.0,630919827.0,454826582.0,1073805.0,6382686.0,17761070,4658272,3752278,906041,17761070,4658256,3752169,906100,17761070,4658512,3752479,906056,17761070,4658096,3752006,906143,17761070,4658240,3752313,905964,17761070,4658240,3752245,906005,17761070,4658304,3752151,906192,17761070,4658288,3752083,906226,17761070,4658272,3752284,906036,17761070,4658256,3752137,906132,17761070,4658512,3752374,906159,17761070,4658096,3751789,906363,17761070,4658240,3752187,906095,17761070,4658240,3752142,906108,17761070,4658304,3752229,906118,17761070,4658288,3752110,906200,17761070,0,17761070,8640,71044280,66356100,16592160,3985537210470469,3985600587279205,3985600588722455,3985537232853975
19,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,19,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,86725894,6936167280,56832,265216,13336576,14252800,0,336121823.0,13601792.0,453871461.0,234665981.0,632416607.0,462679244.0,1142551.0,5404856.0,17468043,4658272,3766198,892116,17468043,4658255,3766154,892120,17468043,4658112,3765878,892243,17468043,4658536,3766280,892286,17468043,4658240,3766287,892003,17468043,4658240,3766270,892001,17468043,4658304,3766152,892187,17468043,4658288,3766157,892152,17468043,4658272,3766196,892120,17468043,4658256,3766236,892037,17468043,4658112,3765918,892205,17468043,4658496,3766287,892246,17468043,4658240,3766118,892167,17468043,4658240,3766109,892166,17468043,4658304,3766062,892272,17468043,4658288,3766063,892246,17468043,0,17468043,7295,69872172,66513642,16631451,3985537211007532,3985600588722455,3985600590164863,3985537235197598
20,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,20,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,85923744,6871784780,56832,265216,13336576,14252800,0,336036095.0,13601792.0,452159411.0,232969817.0,632716732.0,460944574.0,1160840.0,5019316.0,18202441,4658272,3755776,902545,18202441,4658256,3755653,902617,18202441,4658112,3755922,902214,18202441,4658496,3756031,902512,18202441,4658240,3755500,902776,18202441,4658240,3755414,902834,18202441,4658304,3755661,902686,18202441,4658288,3755457,902851,18202441,4658272,3755441,902873,18202441,4658256,3755319,902947,18202441,4658112,3755530,902605,18202441,4658496,3755636,902914,18202441,4658240,3755642,902639,18202441,4658240,3755500,902752,18202441,4658304,3755786,902556,18202441,4658288,3755613,902695,18202441,0,18202441,7972,72809764,66545206,16639706,3985537211695208,3985600590164863,3985600591581314,3985537237710942
21,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,21,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,87385438,6989202036,56832,265216,13336576,14252800,0,337097441.0,13601792.0,454586545.0,235389947.0,632943608.0,463367789.0,1121995.0,5459679.0,17930752,4658672,3765954,892762,17930752,4658256,3765608,892663,17930752,4658112,3765896,892226,17930752,4658096,3765908,892213,17930752,4658240,3765760,892520,17930752,4658240,3765867,892407,17930752,4658304,3766140,892198,17930752,4658288,3766149,892159,17930752,4658672,3766393,892332,17930752,4658256,3766045,892223,17930752,4658112,3766078,892044,17930752,4658096,3766119,892015,17930752,4658240,3765647,892638,17930752,4658240,3765739,892538,17930752,4658304,3766148,892189,17930752,4658288,3766179,892128,17930752,0,17930752,8315,71723008,66569108,16645435,3985537212191021,3985600591581314,3985600592985666,3985537239964803
22,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,22,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,93644649,7489726380,56832,265216,13336576,14252800,0,351577945.0,13601792.0,468396203.0,249202916.0,650547111.0,477234581.0,1139534.0,5117182.0,18629719,4658672,3757282,901432,18629719,4658256,3756760,901515,18629719,4658112,3756571,901563,18629719,4658096,3756381,901763,18629719,4658240,3756940,901335,18629719,4658240,3756815,901434,18629719,4658304,3757010,901333,18629719,4658288,3756915,901392,18629719,4658712,3757463,901287,18629719,4658256,3756801,901473,18629719,4658112,3756826,901310,18629719,4658096,3756736,901413,18629719,4658240,3756917,901361,18629719,4658240,3756791,901459,18629719,4658304,3756891,901446,18629719,4658288,3756739,901570,18629719,0,18629719,8306,74518876,68422122,17108576,3985537212679903,3985600592985666,3985600594392983,3985537242387212
23,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,23,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,82534300,6600793092,56832,265216,13336576,14252800,0,331057215.0,13601792.0,442366090.0,223160662.0,632277600.0,451248561.0,1122358.0,6015254.0,17732831,4658272,3760346,897976,17732831,4658656,3760789,897883,17732831,4658112,3760179,897943,17732831,4658096,3760201,897919,17732831,4658240,3760328,897953,17732831,4658240,3760415,897857,17732831,4658304,3760351,897990,17732831,4658288,3760430,897879,17732831,4658272,3760531,897789,17732831,4658616,3760913,897719,17732831,4658112,3760288,897832,17732831,4658096,3760297,897833,17732831,4658240,3760530,897752,17732831,4658240,3760583,897687,17732831,4658304,3760341,898002,17732831,4658288,3760415,897891,17732831,0,17732831,7159,70931324,66499008,16627683,3985537213203247,3985600594392983,3985600595785959,3985537244947676
24,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,24,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,87942007,7033593860,56832,265216,13336576,14252800,0,337526569.0,13601792.0,456974766.0,237793136.0,633240415.0,465736381.0,1145453.0,5471760.0,17663836,4658272,3765223,893092,17663836,4658656,3765386,893287,17663836,4658112,3765192,892942,17663836,4658096,3764940,893205,17663836,4658240,3765221,893059,17663836,4658240,3765080,893170,17663836,4658304,3765400,892940,17663836,4658288,3765175,893131,17663836,4658272,3765334,892978,17663836,4658696,3765559,893152,17663836,4658112,3765216,892918,17663836,4658096,3764969,893184,17663836,4658240,3765101,893176,17663836,4658240,3764873,893377,17663836,4658304,3765239,893102,17663836,4658288,3765021,893288,17663836,0,17663836,11768,70655344,66600370,16653504,3985537214098860,3985600595785959,3985600597184383,3985537247257860
25,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,25,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,86045288,6881798320,56832,265216,13336576,14252800,0,337491018.0,13601792.0,452327070.0,233126243.0,634293298.0,461078549.0,1159920.0,5926232.0,18206637,4658272,3745590,912730,18206637,4658256,3745369,912901,18206637,4658512,3745925,912596,18206637,4658096,3745283,912847,18206637,4658240,3745811,912467,18206637,4658240,3745610,912659,18206637,4658304,3745685,912657,18206637,4658288,3745424,912883,18206637,4658272,3745949,912369,18206637,4658256,3745757,912509,18206637,4658512,3746149,912372,18206637,4658096,3745550,912583,18206637,4658240,3745798,912485,18206637,4658240,3745511,912764,18206637,4658304,3745561,912785,18206637,4658288,3745421,912887,18206637,0,18206637,10074,72826548,66711200,16680918,3985537214582956,3985600597184383,3985600598575156,3985537249743753
26,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,28,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,84231928,6736883700,56832,265216,13336576,14252800,0,335921047.0,13601792.0,452042399.0,232829506.0,636622985.0,460831672.0,1186022.0,4114279.0,17593194,4658272,3754372,903930,17593194,4658256,3754455,903810,17593194,4658272,3754116,904172,17593194,4658096,3754025,904116,17593194,4658240,3754116,904136,17593194,4658240,3754205,904035,17593194,4658304,3753945,904380,17593194,4658288,3754071,904236,17593194,4658272,3754148,904154,17593194,4658256,3754198,904065,17593194,4658272,3753851,904437,17593194,4658096,3753902,904241,17593194,4658240,3754206,904047,17593194,4658240,3754365,903876,17593194,4658304,3754060,904264,17593194,4658288,3754151,904155,17593194,0,17593194,0,70372776,66956466,16742858,3985537251110573,3985600598683315,3985600600065555,3985537253457321
27,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,32,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,84124744,6728073460,56832,265216,13336576,14252800,0,336683961.0,13601792.0,453526653.0,234292136.0,636156795.0,462303832.0,1218606.0,3779570.0,16845985,4658272,3752992,905310,16845985,4658256,3752876,905388,16845985,4658112,3752750,905370,16845985,4658256,3752921,905360,16845985,4658240,3752896,905366,16845985,4658240,3752837,905423,16845985,4658304,3752839,905482,16845985,4658288,3752845,905460,16845985,4658272,3752889,905413,16845985,4658256,3752825,905438,16845985,4658112,3752750,905371,16845985,4658256,3752864,905419,16845985,4658240,3752898,905365,16845985,4658240,3752753,905506,16845985,4658304,3752829,905491,16845985,4658288,3752837,905467,16845985,0,16845985,77,67383940,66907352,16729778,3985537254552499,3985600600117832,3985600601459132,3985537257020326
28,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,36,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,84853906,6786569308,56832,265216,13336576,14252800,0,337780418.0,13601792.0,454514056.0,235305143.0,636140676.0,463252464.0,1210177.0,3749074.0,16980087,4658272,3755617,902684,16980087,4658256,3755523,902742,16980087,4658112,3755719,902410,16980087,4658256,3755737,902561,16980087,4658240,3755677,902576,16980087,4658240,3755595,902645,16980087,4658304,3755962,902362,16980087,4658288,3755865,902443,16980087,4658272,3755541,902759,16980087,4658256,3755400,902863,16980087,4658112,3755687,902444,16980087,4658256,3755771,902531,16980087,4658240,3755502,902751,16980087,4658240,3755439,902802,16980087,4658304,3755923,902401,16980087,4658288,3755745,902560,16980087,0,16980087,0,67920348,66905660,16729378,3985537258004730,3985600601501274,3985600602853830,3985537260548269
29,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,40,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,91942058,7353547172,56832,265216,13336576,14252800,0,351170837.0,13601792.0,467480984.0,248250034.0,651719076.0,476334976.0,1182774.0,3863735.0,17267260,4658272,3730853,927450,17267260,4658256,3730975,927291,17267260,4658112,3730578,927542,17267260,4658096,3730613,927507,17267260,4658400,3731061,927363,17267260,4658240,3731012,927246,17267260,4658304,3730970,927352,17267260,4658288,3730989,927315,17267260,4658272,3730778,927521,17267260,4658256,3730905,927358,17267260,4658112,3730722,927399,17267260,4658096,3730724,927398,17267260,4658400,3730942,927481,17267260,4658240,3730951,927309,17267260,4658304,3730671,927649,17267260,4658288,3730762,927542,17267260,0,17267260,77,69069040,68545486,17139278,3985537261625911,3985600602893168,3985600604288107,3985537264052867
30,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,44,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,82639918,6609502692,56832,265216,13336576,14252800,0,332457915.0,13601792.0,447884798.0,228653026.0,634045608.0,456759382.0,1188223.0,4059763.0,16870451,4658272,3758369,899933,16870451,4658256,3758422,899844,16870451,4658112,3758197,899934,16870451,4658096,3758180,899962,16870451,4658400,3758588,899824,16870451,4658240,3758464,899776,16870451,4658304,3758461,899863,16870451,4658288,3758481,899825,16870451,4658272,3758381,899923,16870451,4658256,3758381,899883,16870451,4658112,3758212,899917,16870451,4658096,3758150,899988,16870451,4658400,3758398,900016,16870451,4658240,3758297,899944,16870451,4658304,3758286,900038,16870451,4658288,3758315,899991,16870451,0,16870451,0,67481804,66685124,16674166,3985537265060857,3985600604330289,3985600605690497,3985537267552249
31,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,48,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,92824713,7424044008,56832,265216,13336576,14252800,0,351427401.0,13601792.0,469304143.0,250105164.0,651121039.0,478126655.0,1152658.0,3729306.0,17252380,4658272,3758581,899721,17252380,4658256,3758761,899505,17252380,4658112,3758520,899600,17252380,4658096,3758592,899530,17252380,4658240,3758541,899719,17252380,4658400,3758868,899550,17252380,4658304,3758724,899598,17252380,4658288,3758804,899506,17252380,4658272,3758534,899770,17252380,4658256,3758694,899570,17252380,4658112,3758581,899539,17252380,4658096,3758639,899482,17252380,4658240,3758534,899728,17252380,4658400,3758897,899524,17252380,4658304,3758730,899590,17252380,4658288,3758916,899391,17252380,0,17252380,77,69009520,68482522,17123696,3985537268544775,3985600605732999,3985600607091044,3985537270907687
32,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,52,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,83066061,6643396152,56832,265216,13336576,14252800,0,331997918.0,13601792.0,447097637.0,227885653.0,633724533.0,455965449.0,1146962.0,4456452.0,16915072,4658272,3755134,903170,16915072,4658256,3754996,903268,16915072,4658112,3754681,903449,16915072,4658096,3754649,903493,16915072,4658240,3755249,903004,16915072,4658400,3755280,903120,16915072,4658304,3755001,903325,16915072,4658288,3754908,903398,16915072,4658272,3755048,903255,16915072,4658256,3754961,903302,16915072,4658112,3754627,903505,16915072,4658096,3754597,903541,16915072,4658240,3754930,903325,16915072,4658400,3755049,903352,16915072,4658304,3754698,903626,16915072,4658288,3754714,903590,16915072,0,16915072,0,67660288,66651328,16665822,3985537271973472,3985600607131864,3985600608497760,3985537274548157
33,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,56,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,92563027,7403360440,56832,265216,13336576,14252800,0,350912753.0,13601792.0,467930748.0,248705489.0,650736768.0,476765522.0,1177791.0,4942655.0,17255081,4658272,3745185,913118,17255081,4658256,3745121,913144,17255081,4658112,3744993,913127,17255081,4658096,3744886,913235,17255081,4658240,3745189,913074,17255081,4658240,3745201,913057,17255081,4658464,3745550,912932,17255081,4658288,3745218,913088,17255081,4658272,3745282,913019,17255081,4658256,3745285,912980,17255081,4658112,3745069,913051,17255081,4658096,3744885,913236,17255081,4658240,3745146,913115,17255081,4658240,3745137,913123,17255081,4658464,3745462,913018,17255081,4658288,3745165,913139,17255081,0,17255081,77,69020324,68441413,17113435,3985537275505201,3985600608538700,3985600609887330,3985537277903445
34,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,60,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,85320782,6823865316,56832,265216,13336576,14252800,0,334052968.0,13601792.0,449719538.0,230515011.0,632557880.0,458520815.0,1144118.0,5987358.0,16776793,4658272,3736803,921499,16776793,4658256,3736969,921297,16776793,4658112,3736688,921441,16776793,4658096,3736790,921351,16776793,4658240,3736504,921749,16776793,4658240,3736656,921584,16776793,4658464,3736775,921710,16776793,4658288,3736924,921381,16776793,4658272,3736465,921838,16776793,4658256,3736672,921592,16776793,4658112,3736452,921678,16776793,4658096,3736743,921397,16776793,4658240,3736766,921486,16776793,4658240,3737051,921190,16776793,4658464,3736953,921532,16776793,4658288,3737060,921245,16776793,0,16776793,0,67107172,66528524,16635261,3985537278807571,3985600609926428,3985600611301137,3985537281240116
35,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,64,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,81826548,6544463796,56832,265216,13336576,14252800,0,333234455.0,13601792.0,448252434.0,229017563.0,633191866.0,457042065.0,1215978.0,3201861.0,16793448,4658272,3751200,907098,16793448,4658256,3751234,907031,16793448,4658112,3751099,907022,16793448,4658096,3751145,906975,16793448,4658240,3751240,907020,16793448,4658240,3751310,906951,16793448,4658304,3751369,906951,16793448,4658448,3751509,906957,16793448,4658272,3751356,906947,16793448,4658256,3751315,906946,16793448,4658112,3751252,906871,16793448,4658096,3751216,906903,16793448,4658240,3751209,907052,16793448,4658240,3751216,907046,16793448,4658304,3751338,906982,16793448,4658448,3751465,907001,16793448,0,16793448,77,67173792,66595256,16651714,3985537282359400,3985600611340836,3985600612695835,3985537284872734
36,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,68,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,92016090,7359489740,56832,265216,13336576,14252800,0,348620663.0,13601792.0,462018381.0,242817155.0,649593378.0,470873098.0,1122792.0,5411555.0,17218655,4658272,3756294,902008,17218655,4658256,3756395,901871,17218655,4658112,3755948,902182,17218655,4658096,3756048,902093,17218655,4658240,3756151,902101,17218655,4658240,3756355,901885,17218655,4658304,3756002,902323,17218655,4658448,3756324,902144,17218655,4658272,3756057,902245,17218655,4658256,3756223,902041,17218655,4658112,3755772,902357,17218655,4658096,3755900,902238,17218655,4658240,3756330,901922,17218655,4658240,3756532,901709,17218655,4658304,3756148,902176,17218655,4658448,3756396,902070,17218655,0,17218655,0,68874620,68321728,17083418,3985537285761787,3985600612735093,3985600614089252,3985537288216414
37,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,72,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,81386394,6509200724,56832,265216,13336576,14252800,0,332081111.0,13601792.0,446242907.0,226995817.0,633345720.0,455098921.0,1195553.0,3586378.0,16801872,4658272,3760598,897702,16801872,4658256,3760706,897559,16801872,4658112,3760644,897477,16801872,4658096,3760737,897387,16801872,4658400,3760709,897714,16801872,4658240,3760684,897576,16801872,4658304,3760671,897650,16801872,4658288,3760739,897566,16801872,4658272,3760609,897692,16801872,4658256,3760650,897612,16801872,4658112,3760527,897595,16801872,4658096,3760527,897593,16801872,4658400,3760770,897653,16801872,4658240,3760677,897586,16801872,4658304,3760770,897550,16801872,4658288,3760838,897467,16801872,0,16801872,77,67207488,66610553,16655836,3985537289315759,3985600614129551,3985600615488357,3985537291801502
38,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,76,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,92311590,7383368556,56832,265216,13336576,14252800,0,349085493.0,13601792.0,463482964.0,244266900.0,650755331.0,472361660.0,1139429.0,5054215.0,17251964,4658272,3747993,910311,17251964,4658256,3747989,910276,17251964,4658112,3747526,910607,17251964,4658096,3747282,910860,17251964,4658400,3747969,910443,17251964,4658240,3747817,910423,17251964,4658304,3747866,910460,17251964,4658288,3747724,910582,17251964,4658272,3747848,910452,17251964,4658256,3747837,910427,17251964,4658112,3747625,910507,17251964,4658096,3747502,910639,17251964,4658400,3748020,910393,17251964,4658240,3747838,910403,17251964,4658304,3747606,910718,17251964,4658288,3747461,910843,17251964,0,17251964,0,69007856,68443359,17113895,3985537292739148,3985600615527775,3985600616876525,3985537295188146
39,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,80,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,82751941,6618236872,56832,265216,13336576,14252800,0,332900861.0,13601792.0,446610101.0,227391344.0,634169573.0,455468992.0,1161277.0,4530848.0,16818508,4658272,3748663,909639,16818508,4658256,3748505,909762,16818508,4658112,3748416,909704,16818508,4658096,3748330,909792,16818508,4658240,3748598,909667,16818508,4658400,3748588,909830,16818508,4658304,3748441,909881,16818508,4658288,3748304,910001,16818508,4658272,3748611,909690,16818508,4658256,3748438,909825,16818508,4658112,3748226,909894,16818508,4658096,3748165,909957,16818508,4658240,3748506,909757,16818508,4658400,3748538,909881,16818508,4658304,3748415,909905,16818508,4658288,3748302,910004,16818508,0,16818508,77,67274032,66698170,16677421,3985537296048858,3985600616915903,3985600618280878,3985537298803088
40,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,84,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,91359323,7306831340,56832,265216,13336576,14252800,0,347880030.0,13601792.0,462122234.0,242914730.0,649445715.0,470960561.0,1106140.0,4908729.0,17212991,4658272,3765880,892424,17212991,4658256,3765874,892392,17212991,4658112,3766059,892073,17212991,4658096,3766005,892137,17212991,4658240,3765812,892440,17212991,4658400,3765971,892429,17212991,4658304,3766035,892290,17212991,4658288,3766041,892264,17212991,4658272,3765876,892425,17212991,4658256,3765887,892377,17212991,4658112,3765886,892243,17212991,4658096,3765749,892396,17212991,4658240,3765910,892343,17212991,4658400,3766119,892282,17212991,4658304,3766281,892043,17212991,4658288,3766224,892080,17212991,0,17212991,0,68851964,68305983,17079479,3985537299556672,3985600618320657,3985600619669207,3985537302045259
41,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,88,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,83529583,6680722208,56832,265216,13336576,14252800,0,333230061.0,13601792.0,447593411.0,228389394.0,632516734.0,456380394.0,1162059.0,4935401.0,16774191,4658272,3746259,912045,16774191,4658256,3746105,912162,16774191,4658112,3746005,912115,16774191,4658096,3745635,912486,16774191,4658240,3746334,911928,16774191,4658240,3746177,912082,16774191,4658464,3746714,911768,16774191,4658288,3746255,912051,16774191,4658272,3746319,911985,16774191,4658256,3746044,912219,16774191,4658112,3746344,911776,16774191,4658096,3745977,912146,16774191,4658240,3746126,912135,16774191,4658240,3745940,912321,16774191,4658464,3746203,912279,16774191,4658288,3745773,912533,16774191,0,16774191,77,67096764,66524198,16634434,3985537302806174,3985600619707784,3985600621057255,3985537305260811
42,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,92,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,82885128,6629089104,56832,265216,13336576,14252800,0,333590335.0,13601792.0,449157642.0,229923722.0,634091267.0,457996352.0,1199127.0,3669756.0,16821429,4658272,3760682,897617,16821429,4658256,3760812,897453,16821429,4658112,3760500,897629,16821429,4658096,3760485,897655,16821429,4658240,3760863,897389,16821429,4658240,3760908,897332,16821429,4658464,3760931,897556,16821429,4658288,3760760,897545,16821429,4658272,3760769,897531,16821429,4658256,3760832,897430,16821429,4658112,3760619,897511,16821429,4658096,3760624,897516,16821429,4658240,3760617,897636,16821429,4658240,3760746,897495,16821429,4658464,3760739,897746,16821429,4658288,3760631,897674,16821429,0,16821429,0,67285716,66689926,16675444,3985537306157256,3985600621096353,3985600622456120,3985537308671300
43,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,96,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,94375235,7548284904,56832,265216,13336576,14252800,0,352282592.0,13601792.0,469128200.0,249939079.0,651825897.0,477967818.0,1107554.0,4951162.0,17273656,4658272,3754369,903935,17273656,4658256,3753998,904267,17273656,4658112,3753522,904599,17273656,4658096,3753429,904690,17273656,4658240,3754475,903787,17273656,4658240,3754196,904063,17273656,4658304,3754019,904302,17273656,4658448,3754070,904395,17273656,4658272,3754434,903867,17273656,4658256,3754171,904092,17273656,4658112,3753789,904332,17273656,4658096,3753746,904375,17273656,4658240,3754274,903989,17273656,4658240,3753994,904265,17273656,4658304,3753571,904749,17273656,4658448,3753741,904723,17273656,0,17273656,77,69094624,68556726,17142161,3985537309502639,3985600622495338,3985600623831109,3985537311939170
44,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,100,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,81486414,6517341640,56832,265216,13336576,14252800,0,330840089.0,13601792.0,442563078.0,223344547.0,632208974.0,451416287.0,1167312.0,4607763.0,16765164,4658272,3747899,910404,16765164,4658256,3747746,910519,16765164,4658112,3747547,910584,16765164,4658096,3747446,910691,16765164,4658240,3747929,910325,16765164,4658240,3747897,910343,16765164,4658304,3747733,910593,16765164,4658448,3747798,910670,16765164,4658272,3747847,910456,16765164,4658256,3747775,910487,16765164,4658112,3747633,910498,16765164,4658096,3747555,910586,16765164,4658240,3747887,910365,16765164,4658240,3747781,910460,16765164,4658304,3747743,910582,16765164,4658448,3747807,910659,16765164,0,16765164,616,67060656,66491790,16626038,3985537312784979,3985600623870527,3985600625234781,3985537315248700
45,Cijk_Ailk_Bljk_BBS_BH_UserArgs_MT256x224x64_MI16x16x1_SN_LDSB1_AFC0_AFEM8_AFEM8_ASEM32_CLR1_CADS0_DTVA0_DTVB0_EPS0_FDSI0_GRPM1_GRVWA8_GRVWB4_GSUAMB_GLS0_ISA942_IU1_K1_LBSPPA2048_LBSPPB128_LBSPPM0_LPA16_LPB4_LPM0_LRVW4_LWPMn1_MIAV0_MIWT4_14_MO40_NTn1_NTA0_NTB0_NTC0_NTD0_NTM0_NEPBS0_NLCA1_NLCB1_ONLL1_PGR2_PLR1_PKA1_SIA3_SS1_SPO0_SRVW0_SSO0_SVW4_SK0_SKXCCM0_TLDS1_ULSGRO0_USL1_UIOFGRO0_USFGROn1_VSn1_VWA4_VWB1_WSGRA1_WSGRB2_WS64_WG64_4_1.kd,2,0,104,41627,41627,303104,256,64000,0,128,352,112,64,0x0,0x719db6817980,13601792,82693031,6613764500,56832,265216,13336576,14252800,0,333133008.0,13601792.0,447165961.0,227941375.0,633790312.0,456064634.0,1176570.0,3881913.0,16808347,4658432,3760667,897796,16808347,4658256,3760386,897879,16808347,4658112,3760242,897879,16808347,4658096,3760120,897999,16808347,4658240,3760578,897684,16808347,4658240,3760390,897869,16808347,4658304,3760473,897848,16808347,4658288,3760295,898012,16808347,4658432,3760618,897845,16808347,4658256,3760356,897907,16808347,4658112,3760196,897925,16808347,4658096,3760057,898064,16808347,4658240,3760522,897739,16808347,4658240,3760385,897875,16808347,4658304,3760457,897863,16808347,4658288,3760298,898006,16808347,0,16808347,77,67233388,66658248,16667490,3985537316383406,3985600625275481,3985600626629559,3985537318893716
46,"void at::native::vectorized_elementwise_kernel<8, at::native::FillFunctor<c10::BFloat16>, std::array<char*, 1ul> >(int, at::native::FillFunctor<c10::BFloat16>, std::array<char*, 1ul>) [clone .kd]",2,0,107,41627,41627,8388608,256,0,0,12,4,16,64,0x0,0x719dfcd2ed00,393216,9945949,795628852,0,393216,0,1310720,0,23616101.0,0.0,23892608.0,23490792.0,25150708.0,23914161.0,0.0,17065401.0,768931,393616,328068,65548,768931,393536,327992,65544,768931,393776,328224,65577,768931,393536,327992,65572,768931,393216,327680,65536,768931,393216,327680,65536,768931,393216,327680,65541,768931,393216,327680,65536,768931,393616,328068,65548,768931,393536,327992,65544,768931,393776,328224,65578,768931,393536,327992,65573,768931,393216,327680,65536,768931,393216,327680,65536,768931,393216,327680,65540,768931,393216,327680,65536,768931,0,768931,78,3075724,2600142,654429,3985537323404162,3985600629947325,3985600629991270,3985537323976437
47,micro_tk(micro_globals) [clone .kd],2,0,108,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,147668644,11811670728,32768,1048576,12582912,35160064,0,527222725.0,12582912.0,639314401.0,426604029.0,816518348.0,654223030.0,2551320.0,1246708.0,22403868,6555520,4434273,2121265,22403868,6556240,4434878,2121400,22403868,6555520,4434238,2121294,22403868,6555520,4434065,2121467,22403868,6555520,4434910,2120634,22403868,6555120,4434458,2120670,22403868,6555200,4434611,2120608,22403868,6555200,4434546,2120681,22403868,6555520,4434100,2121439,22403868,6556240,4434849,2121425,22403868,6555520,4434098,2121434,22403868,6555520,4434183,2121349,22403868,6555520,4433381,2122166,22403868,6555120,4433109,2122021,22403868,6555200,4432965,2122253,22403868,6555200,4433073,2122150,22403868,0,22403868,8750,89615472,85901990,21478384,3985537324304382,3985600630293997,3985600631913667,3985537326805397
48,micro_tk(micro_globals) [clone .kd],2,0,110,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,143566785,11483311916,32768,1048576,12582912,35160064,0,517488276.0,12582912.0,631180962.0,418363046.0,804983664.0,646092979.0,2547058.0,867131.0,21359963,6555520,4337176,2218356,21359963,6555520,4337074,2218470,21359963,6555520,4337167,2218359,21359963,6555760,4337423,2218344,21359963,6555520,4337002,2218523,21359963,6555120,4336716,2218404,21359963,6555200,4336552,2218656,21359963,6555200,4336545,2218665,21359963,6555520,4337118,2218416,21359963,6555520,4337136,2218404,21359963,6555520,4337236,2218291,21359963,6555760,4337482,2218283,21359963,6555520,4337233,2218292,21359963,6555120,4336893,2218228,21359963,6555200,4336927,2218280,21359963,6555200,4337015,2218195,21359963,0,21359963,77,85439852,84687806,21174946,3985537327617798,3985600631947319,3985600633798972,3985537330356274
49,micro_tk(micro_globals) [clone .kd],2,0,112,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,151112203,12087251548,32768,1048576,12582912,35160064,0,540424249.0,12582912.0,655321983.0,442494481.0,828050256.0,670217346.0,2541870.0,1081229.0,21937586,6555520,4373267,2182263,21937586,6555760,4373518,2182266,21937586,6555520,4373476,2182050,21937586,6555520,4373383,2182145,21937586,6555520,4373572,2181953,21937586,6555120,4373130,2181990,21937586,6555200,4373173,2182035,21937586,6555200,4373051,2182159,21937586,6555520,4371353,2184179,21937586,6555760,4371765,2184016,21937586,6555520,4371570,2183958,21937586,6555520,4371625,2183900,21937586,6555520,4371725,2183800,21937586,6555120,4371360,2183761,21937586,6555200,4371360,2183847,21937586,6555200,4371414,2183796,21937586,0,21937586,77,87750344,87115845,21782029,3985537331332898,3985600633829616,3985600635812823,3985537333954882
50,micro_tk(micro_globals) [clone .kd],2,0,114,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,148216257,11855583420,32768,1048576,12582912,35160064,0,530978005.0,12582912.0,646229608.0,433358093.0,819305584.0,661151279.0,2544789.0,804150.0,21706017,6555520,4301991,2253539,21706017,6555520,4302012,2253530,21706017,6555520,4302004,2253522,21706017,6555760,4302250,2253517,21706017,6555520,4301845,2253680,21706017,6555120,4301514,2253606,21706017,6555200,4301654,2253554,21706017,6555200,4301669,2253541,21706017,6555520,4302015,2253518,21706017,6555520,4302045,2253494,21706017,6555520,4302177,2253350,21706017,6555760,4302398,2253367,21706017,6555520,4301899,2253626,21706017,6555120,4301612,2253509,21706017,6555200,4301691,2253516,21706017,6555200,4301771,2253439,21706017,0,21706017,77,86824068,86195356,21551868,3985537334875232,3985600635840784,3985600637666999,3985537337556965
51,micro_tk(micro_globals) [clone .kd],2,0,116,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,149268918,11939864124,32768,1048576,12582912,35160064,0,530182539.0,12582912.0,646210602.0,433376485.0,818759157.0,661124154.0,2544773.0,4567694.0,21688070,6555520,4390668,2164863,21688070,6555520,4390668,2164875,21688070,6555520,4390889,2164637,21688070,6555520,4390890,2164635,21688070,6555520,4391057,2164468,21688070,6555360,4390880,2164480,21688070,6555200,4390926,2164282,21688070,6555200,4390866,2164344,21688070,6555520,4390660,2164869,21688070,6555520,4390741,2164799,21688070,6555520,4390705,2164821,21688070,6555520,4390824,2164701,21688070,6555520,4390649,2164876,21688070,6555360,4390479,2164882,21688070,6555200,4390302,2164905,21688070,6555200,4390276,2164934,21688070,0,21688070,77,86752280,86137858,21537635,3985537338470866,3985600637695201,3985600639507035,3985537341125638
52,micro_tk(micro_globals) [clone .kd],2,0,118,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,144679991,11572668884,32768,1048576,12582912,35160064,0,522046407.0,12582912.0,635789388.0,422995254.0,808770263.0,650687593.0,2524287.0,909568.0,21386435,6555520,4331873,2223655,21386435,6555520,4331967,2223577,21386435,6555520,4331797,2223729,21386435,6555520,4331811,2223714,21386435,6555520,4331432,2224093,21386435,6555120,4331032,2224088,21386435,6555200,4331137,2224071,21386435,6555440,4331461,2223989,21386435,6555520,4331137,2224393,21386435,6555520,4331111,2224430,21386435,6555520,4331182,2224344,21386435,6555520,4331232,2224293,21386435,6555520,4330369,2225156,21386435,6555120,4330061,2225060,21386435,6555200,4330216,2224991,21386435,6555440,4330387,2225063,21386435,0,21386435,77,85545740,85086373,21274716,3985537341825513,3985600639532472,3985600641332609,3985537344504582
53,micro_tk(micro_globals) [clone .kd],2,0,120,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,146695273,11733783476,32768,1048576,12582912,35160064,0,526037015.0,12582912.0,639439725.0,426603161.0,814818752.0,654342572.0,2542536.0,875065.0,21607523,6555520,4405917,2149612,21607523,6555520,4406099,2149446,21607523,6555520,4405769,2149758,21607523,6555520,4405933,2149595,21607523,6555520,4405954,2149571,21607523,6555360,4405792,2149568,21607523,6555200,4405610,2149598,21607523,6555200,4405608,2149602,21607523,6555520,4405964,2149567,21607523,6555520,4405953,2149586,21607523,6555520,4405832,2149698,21607523,6555520,4405846,2149679,21607523,6555520,4406666,2148859,21607523,6555360,4406497,2148864,21607523,6555200,4406536,2148671,21607523,6555200,4406451,2148759,21607523,0,21607523,77,86430092,85723068,21433659,3985537345452883,3985600641360130,3985600643160106,3985537348180944
54,micro_tk(micro_globals) [clone .kd],2,0,122,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,145809391,11663018484,32768,1048576,12582912,35160064,0,523526325.0,12582912.0,638105045.0,425158418.0,810558489.0,653043027.0,2565227.0,928734.0,21475886,6555520,4436309,2119222,21475886,6555520,4436329,2119214,21475886,6555520,4436156,2119370,21475886,6555520,4436152,2119373,21475886,6555520,4437211,2118314,21475886,6555120,4436810,2118310,21475886,6555200,4436736,2118472,21475886,6555440,4436879,2118571,21475886,6555520,4434408,2121123,21475886,6555520,4434459,2121081,21475886,6555520,4434178,2121348,21475886,6555520,4434170,2121355,21475886,6555520,4435069,2120456,21475886,6555120,4434698,2120423,21475886,6555200,4434757,2120450,21475886,6555440,4434944,2120506,21475886,0,21475886,77,85903544,85274608,21321775,3985537348888539,3985600643187266,3985600644989526,3985537351576832
55,micro_tk(micro_globals) [clone .kd],2,0,124,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,144768832,11579708628,32768,1048576,12582912,35160064,0,522290212.0,12582912.0,641237324.0,428291204.0,816291876.0,656143341.0,2565432.0,1039676.0,21763868,6555520,4490744,2064784,21763868,6555760,4491014,2064768,21763868,6555520,4490606,2064920,21763868,6555520,4490659,2064868,21763868,6555520,4489779,2065746,21763868,6555120,4489501,2065619,21763868,6555200,4489422,2065786,21763868,6555200,4489496,2065714,21763868,6555520,4488783,2066748,21763868,6555760,4488936,2066844,21763868,6555520,4488756,2066770,21763868,6555520,4488799,2066726,21763868,6555520,4488835,2066690,21763868,6555120,4488417,2066704,21763868,6555200,4488247,2066960,21763868,6555200,4488292,2066918,21763868,0,21763868,77,87055472,85878117,21472462,3985537352237288,3985600645014883,3985600646807289,3985537354933933
56,micro_tk(micro_globals) [clone .kd],2,0,126,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,145303171,11622551808,32768,1048576,12582912,35160064,0,523217511.0,12582912.0,639736793.0,426922780.0,811894576.0,654630766.0,2529401.0,906702.0,21476776,6555520,4386363,2169166,21476776,6555520,4386394,2169149,21476776,6555520,4386602,2168924,21476776,6555760,4386795,2168972,21476776,6555520,4386717,2168808,21476776,6555120,4386327,2168793,21476776,6555200,4386394,2168814,21476776,6555200,4386432,2168778,21476776,6555520,4386301,2169229,21476776,6555520,4386311,2169229,21476776,6555520,4386441,2169087,21476776,6555760,4386633,2169132,21476776,6555520,4386036,2169489,21476776,6555120,4385708,2169413,21476776,6555200,4385780,2169427,21476776,6555200,4385765,2169445,21476776,0,21476776,77,85907104,85415266,21356820,3985537355832301,3985600646832566,3985600648614836,3985537358494645
57,micro_tk(micro_globals) [clone .kd],2,0,128,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,138935420,11113284576,32768,1048576,12582912,35160064,0,502565487.0,12582912.0,615632668.0,402793858.0,788960390.0,630542519.0,2543588.0,892163.0,20890996,6555520,4444589,2110940,20890996,6555760,4444951,2110834,20890996,6555520,4444761,2110765,20890996,6555520,4444763,2110762,20890996,6555520,4445754,2109771,20890996,6555120,4445457,2109663,20890996,6555200,4445471,2109737,20890996,6555200,4445550,2109660,20890996,6555520,4444554,2110977,20890996,6555760,4444786,2110994,20890996,6555520,4444694,2110832,20890996,6555520,4444611,2110914,20890996,6555520,4444447,2111078,20890996,6555120,4444021,2111100,20890996,6555200,4444182,2111025,20890996,6555200,4444149,2111061,20890996,0,20890996,77,83563984,83001110,20753125,3985537359537556,3985600648639873,3985600650403756,3985537362251737
58,micro_tk(micro_globals) [clone .kd],2,0,130,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,145398675,11629833320,32768,1048576,12582912,35160064,0,522935558.0,12582912.0,637012931.0,424132626.0,814351525.0,651956174.0,2558988.0,1031982.0,21568154,6555520,4379464,2176064,21568154,6555520,4379366,2176178,21568154,6555520,4379517,2176009,21568154,6555760,4379656,2176109,21568154,6555520,4379290,2176235,21568154,6555120,4378893,2176227,21568154,6555200,4379281,2175927,21568154,6555200,4379157,2176053,21568154,6555520,4379744,2175785,21568154,6555520,4379800,2175740,21568154,6555520,4379906,2175620,21568154,6555760,4380179,2175586,21568154,6555520,4379344,2176181,21568154,6555120,4378853,2176268,21568154,6555200,4379060,2176147,21568154,6555200,4379109,2176101,21568154,0,21568154,77,86272616,85673864,21421475,3985537363066240,3985600650426710,3985600652185786,3985537365767612
59,micro_tk(micro_globals) [clone .kd],2,0,132,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,148275988,11860274996,32768,1048576,12582912,35160064,0,531163826.0,12582912.0,645574946.0,432821733.0,818222875.0,660496450.0,2522896.0,896572.0,21691202,6555520,4277046,2278482,21691202,6555520,4276910,2278634,21691202,6555520,4276861,2278665,21691202,6555520,4276713,2278813,21691202,6555520,4276685,2278840,21691202,6555360,4276431,2278929,21691202,6555200,4276348,2278861,21691202,6555200,4276305,2278905,21691202,6555520,4276629,2278902,21691202,6555520,4276601,2278939,21691202,6555520,4276615,2278911,21691202,6555520,4276486,2279039,21691202,6555520,4276632,2278893,21691202,6555360,4276380,2278981,21691202,6555200,4276356,2278851,21691202,6555200,4276187,2279023,21691202,0,21691202,77,86764808,86081386,21523431,3985537366671989,3985600652206217,3985600653950270,3985537369357297
60,micro_tk(micro_globals) [clone .kd],2,0,134,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,148304483,11862513872,32768,1048576,12582912,35160064,0,530695559.0,12582912.0,644283147.0,431453459.0,819719226.0,659202261.0,2532057.0,917101.0,21745354,6555520,4378423,2177106,21745354,6555520,4378444,2177101,21745354,6555520,4378354,2177172,21745354,6555520,4378347,2177178,21745354,6555520,4377940,2177585,21745354,6555120,4377626,2177494,21745354,6555200,4377707,2177501,21745354,6555440,4377962,2177488,21745354,6555520,4377370,2178160,21745354,6555520,4377247,2178292,21745354,6555520,4377488,2178038,21745354,6555520,4377467,2178058,21745354,6555520,4377812,2177713,21745354,6555120,4377419,2177702,21745354,6555200,4377470,2177737,21745354,6555440,4377747,2177703,21745354,0,21745354,77,86981416,86238878,21562644,3985537370338807,3985600653971462,3985600655721084,3985537373034470
61,micro_tk(micro_globals) [clone .kd],2,0,136,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,148217117,11855383552,32768,1048576,12582912,35160064,0,529746230.0,12582912.0,643835501.0,431053480.0,815934965.0,658729697.0,2527392.0,1000799.0,21603365,6555520,4257385,2298146,21603365,6555520,4257474,2298068,21603365,6555520,4257259,2298267,21603365,6555520,4257310,2298216,21603365,6555520,4257108,2298417,21603365,6555360,4256954,2298406,21603365,6555200,4256887,2298321,21603365,6555200,4256988,2298222,21603365,6555520,4256301,2299229,21603365,6555520,4256237,2299304,21603365,6555520,4256293,2299233,21603365,6555520,4256156,2299369,21603365,6555520,4256396,2299129,21603365,6555360,4256292,2299069,21603365,6555200,4256120,2299087,21603365,6555200,4256060,2299150,21603365,0,21603365,77,86413460,85840547,21462953,3985537373850817,3985600655741955,3985600657509203,3985537376544998
62,micro_tk(micro_globals) [clone .kd],2,0,138,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,138984754,11117308608,32768,1048576,12582912,35160064,0,502026586.0,12582912.0,615236471.0,402319849.0,789836582.0,630142738.0,2573413.0,1176657.0,20954969,6555520,4481296,2074233,20954969,6555520,4481266,2074278,20954969,6555520,4481316,2074210,20954969,6555520,4481311,2074216,20954969,6555520,4482428,2073097,20954969,6555120,4482058,2073062,20954969,6555200,4482040,2073168,20954969,6555440,4482229,2073221,20954969,6555520,4482349,2073183,20954969,6555520,4482298,2073242,20954969,6555520,4482383,2073144,20954969,6555520,4482332,2073193,20954969,6555520,4481190,2074335,20954969,6555120,4480856,2074265,20954969,6555200,4480868,2074339,20954969,6555440,4481067,2074383,20954969,0,20954969,77,83819876,83093333,20776453,3985537377598154,3985600657530314,3985600659265635,3985537380335469
63,micro_tk(micro_globals) [clone .kd],2,0,140,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,145859474,11666871332,32768,1048576,12582912,35160064,0,523699855.0,12582912.0,637806169.0,424966797.0,811209231.0,652737304.0,2552686.0,1458849.0,21512802,6555520,4317366,2238166,21512802,6555760,4317580,2238202,21512802,6555520,4317304,2238222,21512802,6555520,4317370,2238156,21512802,6555520,4317110,2238415,21512802,6555120,4316746,2238374,21512802,6555200,4317041,2238167,21512802,6555200,4316975,2238235,21512802,6555520,4317901,2237631,21512802,6555760,4318208,2237573,21512802,6555520,4317901,2237625,21512802,6555520,4318022,2237503,21512802,6555520,4317408,2238117,21512802,6555120,4317075,2238046,21512802,6555200,4316965,2238242,21512802,6555200,4317034,2238176,21512802,0,21512802,77,86051208,85343114,21338923,3985537381051427,3985600659285504,3985600661041015,3985537383741182
64,micro_tk(micro_globals) [clone .kd],2,0,142,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,147830330,11824609888,32768,1048576,12582912,35160064,0,530898156.0,12582912.0,645065349.0,432236759.0,818512599.0,659971595.0,2537127.0,822613.0,21619492,6555520,4421111,2134420,21619492,6555520,4421161,2134381,21619492,6555520,4421048,2134478,21619492,6555760,4421259,2134509,21619492,6555520,4421892,2133633,21619492,6555120,4421617,2133503,21619492,6555200,4421577,2133631,21619492,6555200,4421567,2133643,21619492,6555520,4421309,2134222,21619492,6555520,4421213,2134326,21619492,6555520,4421411,2134119,21619492,6555760,4421614,2134151,21619492,6555520,4419641,2135884,21619492,6555120,4419237,2135884,21619492,6555200,4419126,2136081,21619492,6555200,4419156,2136054,21619492,0,21619492,77,86477968,86111890,21530933,3985537384698817,3985600661061525,3985600662805619,3985537387358407
65,micro_tk(micro_globals) [clone .kd],2,0,144,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,147924588,11832052468,32768,1048576,12582912,35160064,0,532642716.0,12582912.0,647121788.0,434223238.0,823794721.0,662030958.0,2551699.0,1016229.0,21856556,6555520,4442785,2112744,21856556,6555760,4442955,2112829,21856556,6555520,4442888,2112638,21856556,6555520,4442821,2112704,21856556,6555520,4442972,2112553,21856556,6555120,4442604,2112516,21856556,6555200,4443038,2112170,21856556,6555200,4443123,2112087,21856556,6555520,4442666,2112865,21856556,6555760,4442854,2112927,21856556,6555520,4442770,2112756,21856556,6555520,4442742,2112783,21856556,6555520,4442417,2113108,21856556,6555120,4441984,2113137,21856556,6555200,4442186,2113021,21856556,6555200,4442098,2113112,21856556,0,21856556,77,87426224,86667895,21670008,3985537388374448,3985600662825689,3985600664592897,3985537391058214
66,micro_tk(micro_globals) [clone .kd],2,0,146,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,146979936,11756665380,32768,1048576,12582912,35160064,0,526491418.0,12582912.0,641486876.0,428615596.0,816423480.0,656429917.0,2554330.0,902929.0,21649350,6555520,4361326,2194203,21649350,6555520,4361284,2194259,21649350,6555520,4361236,2194290,21649350,6555760,4361468,2194301,21649350,6555520,4361488,2194037,21649350,6555120,4361079,2194041,21649350,6555200,4361176,2194032,21649350,6555200,4361226,2193984,21649350,6555520,4361791,2193738,21649350,6555520,4361841,2193699,21649350,6555520,4361698,2193830,21649350,6555760,4362025,2193740,21649350,6555520,4361243,2194282,21649350,6555120,4360808,2194313,21649350,6555200,4360955,2194253,21649350,6555200,4360969,2194241,21649350,0,21649350,77,86597400,85892033,21476849,3985537391881811,3985600664613648,3985600666335229,3985537394581230
67,micro_tk(micro_globals) [clone .kd],2,0,149,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,139266984,11139343140,32768,1048576,12582912,35160064,0,501542335.0,12582912.0,615992605.0,403199764.0,790873434.0,630896800.0,2556821.0,929656.0,20926997,6555520,4304754,2250776,20926997,6555520,4304679,2250864,20926997,6555520,4304746,2250780,20926997,6555520,4304789,2250737,20926997,6555520,4303944,2251581,20926997,6555360,4303758,2251602,20926997,6555200,4303626,2251582,20926997,6555200,4303610,2251600,20926997,6555520,4304289,2251239,20926997,6555520,4304336,2251205,20926997,6555520,4304153,2251373,20926997,6555520,4304186,2251339,20926997,6555520,4305040,2250485,20926997,6555360,4304964,2250397,20926997,6555200,4304690,2250517,20926997,6555200,4304650,2250560,20926997,0,20926997,75,83707988,83202508,20803724,3985537395658312,3985600666379654,3985600668110088,3985537398339834
68,micro_tk(micro_globals) [clone .kd],2,0,154,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,145527801,11640500776,32768,1048576,12582912,35160064,0,522774740.0,12582912.0,635540727.0,422736872.0,811792231.0,650459642.0,2537200.0,917691.0,21472232,6555520,4396570,2158959,21472232,6555520,4396498,2159047,21472232,6555520,4396288,2159238,21472232,6555520,4396251,2159275,21472232,6555520,4396146,2159379,21472232,6555120,4395695,2159425,21472232,6555200,4395898,2159310,21472232,6555440,4396101,2159349,21472232,6555520,4395151,2160380,21472232,6555520,4395084,2160456,21472232,6555520,4395544,2159982,21472232,6555520,4395405,2160120,21472232,6555520,4394734,2160791,21472232,6555120,4394260,2160861,21472232,6555200,4394300,2160907,21472232,6555440,4394482,2160968,21472232,0,21472232,77,85888928,85404462,21354296,3985537399119386,3985600668162485,3985600669889153,3985537401769913
69,micro_tk(micro_globals) [clone .kd],2,0,159,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,147316816,11783614596,32768,1048576,12582912,35160064,0,527695700.0,12582912.0,643110715.0,430243315.0,814193102.0,658014734.0,2552325.0,996817.0,21586440,6555520,4434327,2121202,21586440,6555520,4434158,2121386,21586440,6555520,4434152,2121374,21586440,6555520,4434041,2121484,21586440,6555520,4434122,2121403,21586440,6555360,4434087,2121273,21586440,6555200,4433763,2121445,21586440,6555200,4433763,2121447,21586440,6555520,4432717,2122815,21586440,6555520,4432682,2122859,21586440,6555520,4432734,2122792,21586440,6555520,4432672,2122853,21586440,6555520,4433963,2121562,21586440,6555360,4433945,2121416,21586440,6555200,4433756,2121451,21586440,6555200,4433846,2121364,21586440,0,21586440,0,86345760,85657224,21417742,3985537402838171,3985600669940670,3985600671700427,3985537405490230
70,micro_tk(micro_globals) [clone .kd],2,0,164,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,147968358,11835870896,32768,1048576,12582912,35160064,0,530396135.0,12582912.0,644979168.0,432164025.0,818786734.0,659883273.0,2537783.0,892771.0,21703919,6555520,4281874,2273656,21703919,6555520,4281823,2273720,21703919,6555520,4281813,2273713,21703919,6555520,4281860,2273665,21703919,6555520,4282062,2273463,21703919,6555120,4281689,2273431,21703919,6555200,4281673,2273535,21703919,6555440,4281959,2273491,21703919,6555520,4280784,2274747,21703919,6555520,4280823,2274716,21703919,6555520,4280798,2274728,21703919,6555520,4280862,2274663,21703919,6555520,4281370,2274155,21703919,6555120,4280973,2274148,21703919,6555200,4280884,2274323,21703919,6555440,4281203,2274247,21703919,0,21703919,0,86815676,86140745,21538144,3985537406545430,3985600671747416,3985600673466753,3985537409270727
71,micro_tk(micro_globals) [clone .kd],2,0,169,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,148382277,11868557748,32768,1048576,12582912,35160064,0,521545449.0,12582912.0,635602342.0,422743388.0,807965569.0,650502646.0,2555813.0,6879261.0,21399974,6555520,4365506,2190022,21399974,6555760,4365635,2190149,21399974,6555520,4365628,2189898,21399974,6555520,4365534,2189995,21399974,6555520,4365225,2190300,21399974,6555120,4364918,2190202,21399974,6555200,4364847,2190362,21399974,6555200,4364900,2190310,21399974,6555520,4364901,2190628,21399974,6555760,4365043,2190738,21399974,6555520,4364940,2190589,21399974,6555520,4364892,2190633,21399974,6555520,4365768,2189757,21399974,6555120,4365313,2189808,21399974,6555200,4365558,2189649,21399974,6555200,4365438,2189772,21399974,0,21399974,75,85599896,85001630,21253347,3985537410060924,3985600673514784,3985600675236565,3985537412726483
72,micro_tk(micro_globals) [clone .kd],2,0,174,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,138321525,11064149936,32768,1048576,12582912,35160064,0,500409063.0,12582912.0,613702886.0,400880263.0,788308105.0,628645238.0,2544321.0,865819.0,20913874,6555520,4396941,2158588,20913874,6555520,4396943,2158602,20913874,6555520,4397114,2158413,20913874,6555760,4397318,2158449,20913874,6555520,4397290,2158235,20913874,6555120,4396843,2158277,20913874,6555200,4396916,2158292,20913874,6555200,4396820,2158390,20913874,6555520,4396821,2158710,20913874,6555520,4396810,2158729,20913874,6555520,4396857,2158671,20913874,6555760,4397119,2158646,20913874,6555520,4396659,2158866,20913874,6555120,4396188,2158933,20913874,6555200,4396447,2158760,20913874,6555200,4396558,2158652,20913874,0,20913874,77,83655496,82932474,20736061,3985537413697198,3985600675284516,3985600676999968,3985537416392721
73,micro_tk(micro_globals) [clone .kd],2,0,179,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,146269891,11699851280,32768,1048576,12582912,35160064,0,526005829.0,12582912.0,642978837.0,430083212.0,819764576.0,657895490.0,2560774.0,1185209.0,21727174,6555520,4406914,2148615,21727174,6555760,4407095,2148687,21727174,6555520,4407038,2148488,21727174,6555520,4406939,2148588,21727174,6555520,4407271,2148254,21727174,6555120,4406858,2148262,21727174,6555200,4406989,2148219,21727174,6555200,4406995,2148215,21727174,6555520,4405660,2149870,21727174,6555760,4405861,2149919,21727174,6555520,4405723,2149803,21727174,6555520,4405608,2149917,21727174,6555520,4406541,2148984,21727174,6555120,4406184,2148937,21727174,6555200,4406319,2148888,21727174,6555200,4406302,2148908,21727174,0,21727174,0,86908696,86243671,21563948,3985537417184902,3985600677048560,3985600678769620,3985537419850020
74,micro_tk(micro_globals) [clone .kd],2,0,184,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,143880678,11508856828,32768,1048576,12582912,35160064,0,518151796.0,12582912.0,634791502.0,421965306.0,810665580.0,649719353.0,2530891.0,992850.0,21443974,6555520,4459434,2096095,21443974,6555520,4459364,2096178,21443974,6555520,4459383,2096143,21443974,6555760,4459567,2096199,21443974,6555520,4458649,2096876,21443974,6555120,4458175,2096945,21443974,6555200,4458346,2096862,21443974,6555200,4458361,2096849,21443974,6555520,4458225,2097305,21443974,6555520,4458253,2097288,21443974,6555520,4458286,2097240,21443974,6555760,4458591,2097174,21443974,6555520,4459053,2096472,21443974,6555120,4458660,2096461,21443974,6555200,4458721,2096486,21443974,6555200,4458756,2096454,21443974,0,21443974,0,85775896,85285829,21324607,3985537420852301,3985600678822457,3985600680563627,3985537423496418
75,micro_tk(micro_globals) [clone .kd],2,0,189,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,146610973,11727142780,32768,1048576,12582912,35160064,0,525336671.0,12582912.0,646277726.0,433387904.0,821064111.0,661184856.0,2568336.0,761939.0,21773960,6555520,4388414,2167116,21773960,6555520,4388282,2167260,21773960,6555520,4388271,2167255,21773960,6555520,4388171,2167357,21773960,6555520,4388970,2166555,21773960,6555360,4388809,2166551,21773960,6555200,4388840,2166368,21773960,6555200,4388857,2166353,21773960,6555520,4388256,2167275,21773960,6555520,4388312,2167227,21773960,6555520,4388217,2167312,21773960,6555520,4388263,2167262,21773960,6555520,4388448,2167077,21773960,6555360,4388257,2167104,21773960,6555200,4388007,2167200,21773960,6555200,4387997,2167213,21773960,0,21773960,77,87095840,86380417,21598291,3985537424470267,3985600680612339,3985600682326950,3985537427159421
76,micro_tk(micro_globals) [clone .kd],2,0,194,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,144365196,11547529032,32768,1048576,12582912,35160064,0,520677704.0,12582912.0,632672640.0,419800121.0,808412789.0,647606265.0,2557386.0,883147.0,21423111,6555520,4524829,2030700,21423111,6555520,4524809,2030733,21423111,6555520,4525035,2030491,21423111,6555520,4524937,2030588,21423111,6555520,4524657,2030868,21423111,6555120,4524187,2030933,21423111,6555200,4524252,2030956,21423111,6555440,4524544,2030906,21423111,6555520,4524500,2031031,21423111,6555520,4524446,2031095,21423111,6555520,4524500,2031026,21423111,6555520,4524311,2031215,21423111,6555520,4524803,2030722,21423111,6555120,4524453,2030668,21423111,6555200,4524444,2030763,21423111,6555440,4524670,2030780,21423111,0,21423111,77,85692444,85048734,21265187,3985537428011430,3985600682374540,3985600684084463,3985537430671261
77,micro_tk(micro_globals) [clone .kd],2,0,199,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,139431562,11152681824,32768,1048576,12582912,35160064,0,503256076.0,12582912.0,616682876.0,403868341.0,791819913.0,631594516.0,2538442.0,989469.0,20969643,6555520,4384850,2170680,20969643,6555520,4384811,2170732,20969643,6555520,4384660,2170866,20969643,6555520,4384697,2170828,20969643,6555520,4384873,2170652,20969643,6555360,4384808,2170552,20969643,6555200,4384717,2170491,20969643,6555200,4384764,2170446,20969643,6555520,4383390,2172141,20969643,6555520,4383392,2172150,20969643,6555520,4383362,2172164,20969643,6555520,4383347,2172178,20969643,6555520,4383046,2172479,20969643,6555360,4382886,2172475,20969643,6555200,4382772,2172436,20969643,6555200,4382725,2172485,20969643,0,20969643,0,83878572,83302117,20828710,3985537431686821,3985600684133335,3985600685870018,3985537434397116
78,micro_tk(micro_globals) [clone .kd],2,0,204,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,146678811,11732578344,32768,1048576,12582912,35160064,0,524548132.0,12582912.0,640157583.0,427322832.0,817530954.0,655104265.0,2546336.0,935594.0,21683449,6555520,4343977,2211552,21683449,6555520,4343919,2211623,21683449,6555520,4344062,2211464,21683449,6555520,4344079,2211447,21683449,6555520,4343622,2211903,21683449,6555120,4343084,2212036,21683449,6555200,4343163,2212045,21683449,6555440,4343311,2212139,21683449,6555520,4342961,2212571,21683449,6555520,4342916,2212624,21683449,6555520,4343049,2212477,21683449,6555520,4343084,2212441,21683449,6555520,4343174,2212351,21683449,6555120,4342745,2212376,21683449,6555200,4342805,2212402,21683449,6555440,4343172,2212278,21683449,0,21683449,0,86733796,86008522,21505119,3985537435219732,3985600685916167,3985600687649324,3985537437910207
79,micro_tk(micro_globals) [clone .kd],2,0,209,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,148671125,11892108004,32768,1048576,12582912,35160064,0,532755223.0,12582912.0,646277343.0,433459660.0,819531475.0,661195278.0,2547942.0,910427.0,21697937,6555520,4359131,2196398,21697937,6555760,4359366,2196416,21697937,6555520,4359123,2196403,21697937,6555520,4359051,2196474,21697937,6555520,4359168,2196357,21697937,6555120,4358870,2196250,21697937,6555200,4358904,2196304,21697937,6555200,4358905,2196305,21697937,6555520,4359004,2196525,21697937,6555760,4359257,2196523,21697937,6555520,4358931,2196595,21697937,6555520,4359009,2196516,21697937,6555520,4358740,2196785,21697937,6555120,4358235,2196886,21697937,6555200,4358458,2196749,21697937,6555200,4358393,2196817,21697937,0,21697937,75,86791748,86219111,21557776,3985537438861243,3985600687695352,3985600689413288,3985537441790892
80,micro_tk(micro_globals) [clone .kd],2,0,214,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,148669590,11891892052,32768,1048576,12582912,35160064,0,532313909.0,12582912.0,646659060.0,433868398.0,817555784.0,661566395.0,2543868.0,861577.0,21670418,6555520,4294755,2260774,21670418,6555520,4294814,2260729,21670418,6555520,4294717,2260809,21670418,6555760,4294992,2260776,21670418,6555520,4295842,2259683,21670418,6555120,4295591,2259529,21670418,6555200,4295700,2259508,21670418,6555200,4295735,2259475,21670418,6555520,4295415,2260117,21670418,6555520,4295473,2260066,21670418,6555520,4295463,2260064,21670418,6555760,4295727,2260038,21670418,6555520,4295131,2260394,21670418,6555120,4294778,2260343,21670418,6555200,4294876,2260331,21670418,6555200,4294871,2260339,21670418,0,21670418,77,86681672,86011122,21505832,3985537442760254,3985600689459556,3985600691168118,3985537445432393
81,micro_tk(micro_globals) [clone .kd],2,0,219,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,144806699,11582815680,32768,1048576,12582912,35160064,0,519582135.0,12582912.0,637456239.0,424590235.0,814830726.0,652377199.0,2538743.0,968892.0,21594898,6555520,4444631,2110900,21594898,6555760,4444876,2110908,21594898,6555520,4444189,2111337,21594898,6555520,4444303,2111222,21594898,6555520,4443621,2111904,21594898,6555120,4443192,2111928,21594898,6555200,4443185,2112023,21594898,6555200,4443211,2111999,21594898,6555520,4442815,2112717,21594898,6555760,4443016,2112763,21594898,6555520,4442763,2112763,21594898,6555520,4442748,2112777,21594898,6555520,4443587,2111938,21594898,6555120,4443066,2112055,21594898,6555200,4443044,2112163,21594898,6555200,4442907,2112303,21594898,0,21594898,0,86379592,85724340,21434150,3985537446153018,3985600691213705,3985600692941334,3985537448854380
82,micro_tk(micro_globals) [clone .kd],2,0,224,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,147761050,11818877668,32768,1048576,12582912,35160064,0,529553380.0,12582912.0,645482261.0,432700509.0,821078837.0,660403832.0,2540091.0,727581.0,21737054,6555520,4281985,2273544,21737054,6555520,4282031,2273513,21737054,6555520,4282022,2273504,21737054,6555760,4282324,2273442,21737054,6555520,4282136,2273389,21737054,6555120,4281760,2273360,21737054,6555200,4281892,2273316,21737054,6555200,4281957,2273253,21737054,6555520,4281830,2273700,21737054,6555520,4281854,2273686,21737054,6555520,4281863,2273663,21737054,6555760,4282184,2273581,21737054,6555520,4282090,2273435,21737054,6555120,4281765,2273356,21737054,6555200,4281671,2273536,21737054,6555200,4281708,2273502,21737054,0,21737054,0,86948216,86382002,21598515,3985537449811564,3985600692987042,3985600694716835,3985537452510112
83,micro_tk(micro_globals) [clone .kd],2,0,229,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,147333084,11785172176,32768,1048576,12582912,35160064,0,528977523.0,12582912.0,642857755.0,429912976.0,815357844.0,657769850.0,2581725.0,890020.0,21634830,6555520,4482748,2072780,21634830,6555520,4482635,2072909,21634830,6555520,4482767,2072759,21634830,6555520,4482640,2072885,21634830,6555520,4482631,2072894,21634830,6555360,4482401,2072959,21634830,6555200,4482275,2072933,21634830,6555200,4482367,2072843,21634830,6555520,4482637,2072892,21634830,6555520,4482614,2072927,21634830,6555520,4482401,2073125,21634830,6555520,4482306,2073219,21634830,6555520,4481885,2073640,21634830,6555360,4481808,2073553,21634830,6555200,4481647,2073560,21634830,6555200,4481679,2073531,21634830,0,21634830,75,86539320,85779795,21447996,3985537453595185,3985600694760849,3985600696489400,3985537456287253
84,micro_tk(micro_globals) [clone .kd],2,0,234,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,147276698,11780527756,32768,1048576,12582912,35160064,0,527689807.0,12582912.0,640857992.0,428016425.0,816812121.0,655787379.0,2549342.0,1006138.0,21671904,6555520,4323410,2232120,21671904,6555520,4323344,2232199,21671904,6555520,4323441,2232087,21671904,6555520,4323366,2232160,21671904,6555520,4323753,2231772,21671904,6555120,4323275,2231845,21671904,6555200,4323307,2231901,21671904,6555440,4323477,2231973,21671904,6555520,4324137,2231398,21671904,6555520,4324072,2231468,21671904,6555520,4324219,2231307,21671904,6555520,4324145,2231380,21671904,6555520,4324083,2231442,21671904,6555120,4323662,2231459,21671904,6555200,4323633,2231574,21671904,6555440,4323883,2231567,21671904,0,21671904,77,86687616,85932870,21486274,3985537457114596,3985600696539754,3985600698236017,3985537459822928
85,micro_tk(micro_globals) [clone .kd],2,0,239,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,148001200,11838282084,32768,1048576,12582912,35160064,0,528981438.0,12582912.0,644262767.0,431431167.0,819125062.0,659187027.0,2534822.0,972271.0,21638074,6555520,4312176,2243354,21638074,6555520,4312164,2243381,21638074,6555520,4312225,2243301,21638074,6555520,4312213,2243314,21638074,6555520,4312251,2243274,21638074,6555360,4312123,2243237,21638074,6555200,4311933,2243275,21638074,6555200,4311866,2243344,21638074,6555520,4312609,2242922,21638074,6555520,4312618,2242922,21638074,6555520,4312623,2242903,21638074,6555520,4312712,2242813,21638074,6555520,4312431,2243094,21638074,6555360,4312268,2243093,21638074,6555200,4312135,2243072,21638074,6555200,4312157,2243053,21638074,0,21638074,0,86552296,86176377,21547081,3985537460832940,3985600698296627,3985600700027061,3985537463500402
86,micro_tk(micro_globals) [clone .kd],2,0,244,41627,41627,1048576,512,49152,0,80,128,32,64,0x0,0x71d604008840,13631488,149516374,11959546300,32768,1048576,12582912,35160064,0,534591576.0,12582912.0,651055124.0,438254037.0,827879777.0,665967892.0,2539387.0,593650.0,22095786,6555520,4284405,2271125,22095786,6555520,4284375,2271167,22095786,6555520,4284506,2271020,22095786,6555520,4284419,2271106,22095786,6555520,4284561,2270964,22095786,6555120,4284078,2271042,22095786,6555200,4284221,2270988,22095786,6555440,4284439,2271011,22095786,6555520,4284586,2270946,22095786,6555520,4284578,2270961,22095786,6555520,4284714,2270812,22095786,6555520,4284634,2270891,22095786,6555520,4284023,2271502,22095786,6555120,4283581,2271540,22095786,6555200,4283895,2271312,22095786,6555440,4283987,2271463,22095786,0,22095786,0,88383144,87097916,21777422,3985537464338560,3985600700084585,3985600701806887,3985537467098339
87,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,248,41627,41627,67108864,512,0,0,12,4,32,64,0x0,0x719dc846ed00,2097152,18560721,1484595980,0,1048576,1048576,24117248,0,29532839.0,0.0,80555632.0,73212593.0,89576858.0,82653342.0,140632.0,8832.0,2439828,328640,132008,196666,2439828,328720,132084,196671,2439828,328480,131852,196681,2439828,328320,131696,196683,2439828,328320,131696,196628,2439828,328320,131696,196624,2439828,328320,131696,196628,2439828,328320,131696,196624,2439828,328640,132008,196666,2439828,328720,132084,196668,2439828,328480,131852,196681,2439828,328320,131696,196680,2439828,328320,131696,196628,2439828,328320,131696,196625,2439828,328320,131696,196628,2439828,328320,131696,196624,2439828,0,2439828,77,9759312,9381876,2348881,3985537468527561,3985600701976097,3985600702158366,3985537469277319
88,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,249,41627,41627,67108864,512,0,0,12,4,32,64,0x0,0x719dc846ed00,2097152,21282028,1702314748,0,1048576,1048576,24117248,0,29506841.0,0.0,87019562.0,79642932.0,97001472.0,89211477.0,133337.0,9602.0,3480042,328640,132008,196660,3480042,328740,132103,196665,3480042,328480,131852,196652,3480042,328320,131696,196655,3480042,328320,131696,196645,3480042,328320,131696,196652,3480042,328320,131696,196643,3480042,328320,131696,196626,3480042,328640,132008,196660,3480042,328740,132103,196664,3480042,328480,131852,196654,3480042,328320,131696,196653,3480042,328320,131696,196649,3480042,328320,131696,196647,3480042,328320,131696,196639,3480042,328320,131696,196624,3480042,0,3480042,6197,13920168,10163316,2544971,3985537469115640,3985600702158366,3985600702345082,3985537471096016
89,"void at::native::vectorized_elementwise_kernel<4, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul> >(int, at::native::CUDAFunctor_add<float>, std::array<char*, 3ul>) [clone .kd]",2,0,250,41627,41627,16777216,256,0,0,16,0,32,64,0x0,0x719d7d860e40,786432,61442165,4915235080,0,262144,524288,3932160,0,115186122.0,0.0,117378007.0,108142633.0,118923604.0,117395729.0,258608.0,104223717.0,3212993,524608,131384,393273,3212993,524368,131148,393273,3212993,524688,131460,393262,3212993,524608,131384,393284,3212993,524608,131384,393250,3212993,524608,131384,393243,3212993,524288,131072,393234,3212993,524608,131384,393244,3212993,524608,131384,393269,3212993,524368,131148,393264,3212993,524688,131460,393263,3212993,524608,131384,393292,3212993,524608,131384,393248,3212993,524608,131384,393242,3212993,524288,131072,393234,3212993,524608,131384,393245,3212993,0,3212993,0,12851972,12471272,3124806,3985537476361176,3985600708189447,3985600708376924,3985537477084846
90,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,251,41627,41627,16777216,256,0,0,12,4,32,64,0x0,0x719dfcc957c0,524288,23041340,1843239164,0,262144,262144,3145728,0,42792321.0,0.0,64538117.0,59772833.0,66431066.0,64556085.0,75681.0,53313892.0,1854633,393216,131072,262169,1854633,393216,131072,262173,1854633,393296,131148,262171,1854633,393216,131072,262167,1854633,393536,131384,262184,1854633,393536,131384,262175,1854633,393536,131384,262168,1854633,393536,131384,262191,1854633,393216,131072,262168,1854633,393216,131072,262178,1854633,393296,131148,262171,1854633,393216,131072,262165,1854633,393536,131384,262186,1854633,393536,131384,262171,1854633,393536,131384,262166,1854633,393536,131384,262195,1854633,0,1854633,76,7418532,6945650,1742067,3985537478554077,3985600709859793,3985600709970075,3985537479320309
91,__amd_rocclr_fillBufferAligned.kd,2,0,252,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,22,1782,0,1,1,93,0,66.0,0.0,1707.0,1657.0,1024460.0,1809.0,0.0,0.0,1035172,2,2,0,1035172,0,0,4,1035172,0,0,4,1035172,0,0,0,1035172,0,0,0,1035172,0,0,0,1035172,4,2,2,1035172,4,2,3,1035172,5,2,3,1035172,4,2,6,1035172,0,0,4,1035172,2,0,2,1035172,4,2,2,1035172,2,1,1,1035172,4,2,2,1035172,4,2,2,1035172,0,1035172,0,4140688,43347,16378,3985537479318006,3985600709970075,3985600709974121,3985537481128572
92,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,253,41627,41627,155648,512,2560,48,28,4,80,64,0x0,0x719d6cc18380,267654,6633268,530615676,0,609,267045,1816295,0,19965002.0,4880.0,73387247.0,69017688.0,79774929.0,73480928.0,46995.0,203.0,4395596,132538,1248,131310,4395596,132466,1324,131165,4395596,132058,932,131149,4395596,132352,1248,131113,4395596,132514,1401,131117,4395596,132194,1090,131106,4395596,132146,1012,131134,4395596,132386,1248,131159,4395596,132536,1248,131308,4395596,132464,1324,131165,4395596,132056,932,131142,4395596,132352,1248,131116,4395596,132512,1400,131116,4395596,132192,1088,131106,4395596,132144,1012,131132,4395596,132384,1248,131155,2321350,2074246,4395596,1856,17582384,8296494,2093937,3985537482658312,3985600712179056,3985600712307365,3985537483463292
93,__amd_rocclr_copyBuffer.kd,2,0,254,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,8,102,8104,0,4,4,154,0,261.0,0.0,4547.0,4424.0,1045579.0,4812.0,0.0,0.0,423514,4,2,2,423514,4,2,7,423514,4,2,6,423514,4,2,2,423514,5,2,3,423514,6,4,2,423514,0,0,0,423514,0,0,0,423514,0,0,0,423514,0,0,4,423514,0,0,4,423514,0,0,0,423514,0,0,0,423514,0,0,0,423514,0,0,0,423514,0,0,1,423514,0,423514,0,1694056,45690,18620,3985537483312249,3985600712307365,3985600712311491,3985537485180569
94,__amd_rocclr_fillBufferAligned.kd,2,0,256,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,21,1714,0,1,1,93,0,66.0,0.0,1639.0,1590.0,1029500.0,1741.0,0.0,0.0,104394,0,0,0,104394,0,0,6,104394,0,0,4,104394,0,0,0,104394,0,0,4,104394,0,0,0,104394,4,2,2,104394,5,2,4,104394,5,2,3,104394,4,2,6,104394,0,0,4,104394,1,0,1,104394,6,4,6,104394,2,1,2,104394,4,2,2,104394,4,2,2,104394,0,104394,0,417576,43485,16455,3985537486066618,3985600712389486,3985600712391609,3985537486988130
95,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::MeanOps<float, float, float, float>, unsigned int, float, 4, 4>) [clone .kd]",2,0,257,41627,41627,155648,512,2560,48,28,4,80,64,0x0,0x719de8917880,267654,4589479,367111684,0,609,267045,743643,0,19696145.0,4880.0,50709210.0,46346751.0,55506466.0,50741578.0,54424.0,59.0,1546028,132698,1400,131326,1546028,132066,936,131156,1546028,132058,936,131144,1546028,131633,545,131101,1546028,132113,1012,131101,1546028,132192,1092,131100,1546028,132146,1012,131134,1546028,132066,936,131151,1546028,132697,1401,131327,1546028,132064,936,131151,1546028,132056,936,131141,1546028,131632,544,131099,1546028,132112,1012,131100,1546028,132192,1092,131100,1546028,132144,1012,131132,1546028,132064,936,131151,1546028,0,1546028,78,6184112,5795894,1462466,3985537489709912,3985600714392683,3985600714486261,3985537490337810
96,__amd_rocclr_copyBuffer.kd,2,0,258,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,8,108,8760,0,4,4,154,0,261.0,0.0,4923.0,4797.0,1051402.0,5169.0,0.0,0.0,1371526,4,2,2,1371526,4,2,7,1371526,4,2,6,1371526,4,2,2,1371526,5,2,3,1371526,4,2,2,1371526,0,0,0,1371526,0,0,0,1371526,0,0,0,1371526,2,2,4,1371526,0,0,4,1371526,0,0,0,1371526,0,0,0,1371526,0,0,0,1371526,0,0,0,1371526,0,0,1,1371526,0,1371526,0,5486104,46336,19297,3985537490244722,3985600714486261,3985600714490146,3985537491914119
97,"void at::native::vectorized_elementwise_kernel<4, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul> >(int, at::native::compare_scalar_kernel<float>(at::TensorIteratorBase&, at::native::(anonymous namespace)::OpType, float)::{lambda(float)#1}, std::array<char*, 2ul>) [clone .kd]",2,0,260,41627,41627,4194304,256,0,0,24,0,64,64,0x0,0x719d6c8314c0,524288,25176727,2014091080,0,262144,262144,10223616,0,31908061.0,0.0,33419924.0,28241660.0,35603638.0,33481263.0,426768.0,24411687.0,1018214,196928,33080,163869,1018214,196928,33080,163872,1018214,197328,33468,163886,1018214,197008,33156,163866,1018214,197248,33392,163860,1018214,197248,33392,163856,1018214,197248,33392,163865,1018214,197248,33392,163889,1018214,196928,33080,163872,1018214,196928,33080,163872,1018214,197328,33468,163883,1018214,197008,33156,163863,1018214,197248,33392,163860,1018214,197248,33392,163856,1018214,197248,33392,163867,1018214,197248,33392,163886,1018214,0,1018214,78,4072856,3701286,936862,3985537497188533,3985600718231689,3985600718290015,3985537497784434
98,"void at::native::elementwise_kernel<512, 1, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}>(int, at::native::gpu_kernel_impl<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#4}::operator()() const::{lambda(long)#1} const&)::{lambda(int)#1}) [clone .kd]",2,0,261,41627,41627,67108864,512,0,0,12,4,32,64,0x0,0x719dc846e700,2097152,26399948,2111668100,0,1048576,1048576,26214400,0,40030435.0,0.0,103763297.0,97074873.0,111940697.0,105917514.0,178865.0,219450.0,4224254,558348,263404,294952,4224254,558342,263398,294946,4224254,558019,263083,294936,4224254,558242,263295,294977,4224254,557376,262456,294984,4224254,557376,262456,294982,4224254,557936,263000,294997,4224254,557376,262456,294956,4224254,558336,263392,294953,4224254,558336,263392,294945,4224254,558016,263080,294936,4224254,558216,263270,294976,4224254,557376,262456,294983,4224254,557376,262456,294985,4224254,557936,263000,295004,4224254,557376,262456,294956,4170564,53690,4224254,7733,16897016,11731642,2939784,3985537497812125,3985600718327190,3985600718505172,3985537499523854
99,__amd_rocclr_fillBufferAligned.kd,2,0,262,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,22,1720,0,1,1,93,0,66.0,0.0,1643.0,1598.0,1030100.0,1746.0,0.0,0.0,614682,2,2,0,614682,1,0,5,614682,0,0,4,614682,0,0,0,614682,0,0,0,614682,0,0,0,614682,4,2,2,614682,4,2,3,614682,4,2,2,614682,4,2,6,614682,0,0,4,614682,1,0,1,614682,5,2,3,614682,2,1,1,614682,4,2,2,614682,4,2,2,614682,0,614682,0,2458728,43545,16567,3985537498342829,3985600718505172,3985600718509258,3985537501087445
100,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4> >(at::native::ReduceOp<long, at::native::func_wrapper_t<long, at::native::sum_functor<long, long, long>::operator()(at::TensorIterator&)::{lambda(long, long)#2}>, unsigned int, long, 4, 4>) [clone .kd]",2,0,263,41627,41627,155648,512,4608,80,36,4,80,64,0x0,0x719d4c22e7c0,529798,20756093,1660419178,0,609,529189,743643,0,31564933.0,4880.0,119810130.0,111281904.0,125265729.0,119842554.0,92284.0,537010.0,5605674,263458,1248,262210,5605674,263458,1248,262213,5605674,263538,1324,262214,5605674,263531,1325,262223,5605674,263418,1089,262374,5605674,263104,932,262211,5605674,263202,1012,262233,5605674,263362,1168,262221,5605674,263458,1248,262210,5605674,263458,1248,262214,5605674,263538,1324,262214,5605674,263529,1324,262220,5605674,263416,1088,262376,5605674,263104,932,262212,5605674,263200,1012,262225,5605674,263360,1168,262219,3531554,2074120,5605674,1935,22422696,13087180,3289029,3985537503068933,3985600722178233,3985600722381573,3985537503946940
101,__amd_rocclr_copyBuffer.kd,2,0,264,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,16,198,15684,0,8,8,190,0,521.0,0.0,8371.0,8135.0,1082722.0,8844.0,0.0,0.0,1217714,4,2,2,1217714,4,2,7,1217714,4,2,6,1217714,4,2,2,1217714,5,2,3,1217714,4,2,2,1217714,0,0,0,1217714,2,2,0,1217714,0,0,0,1217714,0,0,4,1217714,0,0,4,1217714,0,0,0,1217714,0,0,0,1217714,0,0,0,1217714,0,0,0,1217714,0,0,1,1217714,0,1217714,0,4870856,49817,22767,3985537503685594,3985600722381573,3985600722387142,3985537505729655
102,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,266,41627,41627,256,128,0,0,20,4,64,64,0x0,0x719dc846ecc0,32,471,37632,0,16,16,488,0,2944.0,0.0,4758.0,4625.0,971806.0,4871.0,0.0,0.0,101664,11,4,11,101664,12,5,9,101664,18,8,10,101664,14,6,8,101664,19,8,12,101664,20,8,12,101664,22,10,12,101664,22,10,14,101664,11,4,11,101664,12,5,7,101664,10,4,6,101664,6,2,4,101664,19,8,12,101664,20,8,13,101664,14,6,8,101664,14,6,10,101664,0,101664,77,406656,47175,25754,3985537506686378,3985600722520699,3985600722524144,3985537507557946
103,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,267,41627,41627,256,256,1536,48,28,4,80,64,0x0,0x719d6cc18380,5,35,2751,0,1,4,365,0,126.0,0.0,963.0,854.0,923058.0,1078.0,0.0,0.0,513975,14,6,8,513975,13,5,8,513975,10,4,6,513975,14,6,8,513975,7,2,5,513975,7,2,5,513975,7,2,5,513975,7,2,14,513975,6,2,4,513975,8,3,5,513975,5,1,4,513975,6,2,4,513975,12,5,7,513975,10,4,7,513975,10,4,6,513975,11,4,15,513975,0,513975,0,2055900,42313,20922,3985537507550124,3985600722529432,3985600722533878,3985537509284447
104,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,268,41627,41627,256,256,0,0,12,4,32,64,0x0,0x719dfcc957c0,2,20,1576,0,1,1,80,0,66.0,0.0,1495.0,1450.0,867146.0,1612.0,0.0,0.0,681374,0,0,0,681374,0,0,4,681374,0,0,0,681374,0,0,0,681374,1,0,5,681374,0,0,0,681374,1,0,1,681374,0,0,1,681374,1,0,1,681374,0,0,5,681374,0,0,0,681374,0,0,0,681374,4,2,6,681374,4,2,2,681374,4,2,3,681374,4,2,2,681374,0,681374,0,2725496,35673,14232,3985537508996702,3985600723361660,3985600723363583,3985537510673580
105,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,269,41627,41627,256,256,0,0,24,0,32,64,0x0,0x719d4bc69a40,2,17,1320,0,1,1,292,0,66.0,0.0,1239.0,1192.0,872136.0,1356.0,0.0,0.0,89895,9,4,5,89895,4,2,2,89895,4,2,2,89895,4,2,2,89895,4,2,2,89895,4,2,2,89895,8,3,5,89895,8,4,5,89895,4,2,2,89895,4,2,2,89895,4,2,2,89895,5,2,3,89895,4,2,3,89895,4,2,2,89895,4,2,2,89895,4,2,2,89895,0,89895,76,359580,36654,15225,3985537517963963,3985600731048174,3985600731050938,3985537518504192
106,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,270,41627,41627,256,256,0,0,40,0,32,64,0x0,0x719d4bc69840,3,14,1111,0,1,2,292,0,70.0,0.0,635.0,584.0,868286.0,750.0,0.0,0.0,566268,0,0,0,566268,0,0,0,566268,5,2,3,566268,1,0,1,566268,5,2,3,566268,4,2,2,566268,4,2,2,566268,4,2,2,566268,4,2,2,566268,4,2,2,566268,8,4,4,566268,9,4,5,566268,4,2,2,566268,4,2,2,566268,4,2,2,566268,4,2,2,566268,0,566268,0,2265072,35378,13995,3985537518515989,3985600731075975,3985600731078419,3985537520266886
107,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,271,41627,41627,256,256,0,0,36,4,80,64,0x0,0x719d4b647fc0,3,30,2339,0,1,2,284,0,70.0,0.0,1267.0,1214.0,865692.0,1382.0,0.0,0.0,87897,5,2,3,87897,4,2,2,87897,5,2,3,87897,4,2,2,87897,4,2,2,87897,4,2,2,87897,4,2,2,87897,4,2,3,87897,5,2,3,87897,4,2,2,87897,5,2,3,87897,4,2,2,87897,0,0,1,87897,0,0,0,87897,4,2,2,87897,4,2,2,87897,0,87897,0,351588,35939,14519,3985537523812716,3985600735713880,3985600735716284,3985537524345273
108,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,272,41627,41627,256,256,0,0,24,0,32,64,0x0,0x719d4bc69a40,2,9,744,0,1,1,292,0,66.0,0.0,663.0,614.0,869609.0,780.0,0.0,0.0,552983,8,4,4,552983,4,2,2,552983,4,2,2,552983,4,2,2,552983,5,2,3,552983,4,2,2,552983,8,3,5,552983,8,4,4,552983,4,2,2,552983,4,2,2,552983,5,2,3,552983,4,2,2,552983,4,2,2,552983,4,2,2,552983,4,2,2,552983,4,2,2,552983,0,552983,0,2211932,35848,14515,3985537524385352,3985600735761751,3985600735764435,3985537526092314
109,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,273,41627,41627,256,256,0,0,36,4,80,64,0x0,0x719d4b253a80,3,35,2726,0,1,2,284,0,70.0,0.0,1459.0,1406.0,877077.0,1576.0,0.0,0.0,92268,5,2,3,92268,5,2,3,92268,8,4,4,92268,4,2,2,92268,4,2,2,92268,4,2,2,92268,5,2,3,92268,4,2,3,92268,1,0,1,92268,0,0,0,92268,4,2,2,92268,4,2,2,92268,4,2,3,92268,4,2,2,92268,4,2,2,92268,4,2,2,92268,0,92268,76,369072,37204,15777,3985537531006646,3985600741733395,3985600741736319,3985537531536379
110,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,274,41627,41627,256,256,512,0,8,0,32,64,0x0,0x719d4ae8eec0,2,17,1438,0,1,1,61,0,66.0,0.0,1359.0,1312.0,866536.0,1474.0,0.0,0.0,88300,1,0,1,88300,1,0,1,88300,0,0,0,88300,4,2,2,88300,0,0,0,88300,0,0,0,88300,1,0,1,88300,0,0,1,88300,4,2,2,88300,4,2,2,88300,4,2,2,88300,4,2,2,88300,4,2,3,88300,4,2,2,88300,4,2,2,88300,0,0,0,88300,0,88300,78,353200,35611,14193,3985537539361452,3985600749470033,3985600749472316,3985537539880239
111,__amd_rocclr_copyBuffer.kd,2,0,275,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,8,106,8528,0,4,4,154,0,261.0,0.0,4871.0,4749.0,1048927.0,5163.0,0.0,0.0,950077,6,4,2,950077,4,2,7,950077,4,2,6,950077,4,2,2,950077,4,2,6,950077,4,2,2,950077,1,0,1,950077,0,0,0,950077,0,0,0,950077,0,0,4,950077,0,0,4,950077,0,0,0,950077,0,0,3,950077,0,0,0,950077,0,0,0,950077,0,0,1,950077,0,950077,0,3800308,46061,19040,3985537539881851,3985600749488020,3985600749491144,3985537541601432
112,__amd_rocclr_fillBufferAligned.kd,2,0,277,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,22,1724,0,1,1,93,0,66.0,0.0,1643.0,1598.0,1028080.0,1752.0,0.0,0.0,101897,0,0,0,101897,0,0,6,101897,1,0,5,101897,0,0,0,101897,0,0,4,101897,2,2,0,101897,4,2,2,101897,4,2,3,101897,5,2,3,101897,4,2,6,101897,0,0,4,101897,1,0,1,101897,4,2,6,101897,2,1,2,101897,4,2,2,101897,4,2,2,101897,0,101897,0,407588,43344,16331,3985537542447883,3985600749529281,3985600749533086,3985537543462132
113,__amd_rocclr_fillBufferAligned.kd,2,0,278,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,13,1020,0,1,1,93,0,66.0,0.0,939.0,890.0,1019597.0,1048.0,0.0,0.0,587595,0,0,0,587595,0,0,0,587595,0,0,0,587595,0,0,0,587595,0,0,0,587595,0,0,0,587595,6,4,2,587595,5,2,3,587595,5,2,3,587595,4,2,2,587595,0,0,0,587595,1,0,1,587595,4,2,2,587595,2,1,1,587595,4,2,2,587595,4,2,2,587595,0,587595,0,2350380,42274,15276,3985537543441011,3985600749533086,3985600749537132,3985537545291565
114,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,279,41627,41627,256,256,0,0,8,0,16,64,0x0,0x719dd8d21100,2,23,1798,0,2,0,24,0,727.0,0.0,884.0,860.0,861166.0,955.0,0.0,0.0,95830,0,0,0,95830,0,0,2,95830,4,2,2,95830,4,2,2,95830,0,0,5,95830,0,0,1,95830,0,0,4,95830,0,0,1,95830,1,0,1,95830,0,0,0,95830,0,0,0,95830,0,0,0,95830,0,0,5,95830,1,0,2,95830,4,2,6,95830,4,2,2,95830,0,95830,75,383320,35075,13685,3985537546188281,3985600751402806,3985600751404929,3985537547077785
115,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,280,41627,41627,512,512,29184,0,52,4,48,64,0x0,0x719d4ae8f040,3,14,1111,0,2,1,616,0,229.0,0.0,967.0,899.0,879921.0,1165.0,0.0,0.0,938951,5,2,7,938951,4,2,2,938951,4,2,6,938951,4,2,2,938951,4,2,2,938951,4,2,2,938951,4,2,2,938951,4,2,2,938951,7,3,8,938951,4,2,2,938951,4,2,7,938951,4,2,3,938951,4,2,2,938951,2,1,1,938951,0,0,0,938951,6,3,3,938951,0,938951,0,3755804,37519,16138,3985537547062422,3985600751408774,3985600751412139,3985537548851086
116,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,281,41627,41627,256,256,0,0,8,0,32,64,0x0,0x719d4ae8b900,2,17,1308,0,1,1,78,0,78.0,0.0,1227.0,1164.0,857376.0,1336.0,0.0,0.0,1035767,0,0,4,1035767,0,0,1,1035767,0,0,4,1035767,0,0,0,1035767,0,0,0,1035767,0,0,0,1035767,1,0,1,1035767,0,0,1,1035767,5,2,7,1035767,4,2,2,1035767,1,0,6,1035767,0,0,0,1035767,0,0,0,1035767,4,2,2,1035767,4,2,2,1035767,5,2,3,1035767,0,1035767,0,4143068,34695,13249,3985537547551435,3985600751418309,3985600751420271,3985537550258445
117,__amd_rocclr_copyBuffer.kd,2,0,282,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,8,103,8288,0,4,4,154,0,261.0,0.0,4867.0,4740.0,1047208.0,5114.0,0.0,0.0,1027819,4,2,2,1027819,4,2,7,1027819,4,2,6,1027819,4,2,2,1027819,5,2,3,1027819,4,2,2,1027819,0,0,0,1027819,0,0,1,1027819,0,0,0,1027819,2,2,4,1027819,0,0,4,1027819,0,0,0,1027819,0,0,0,1027819,0,0,0,1027819,0,0,0,1027819,0,0,1,1027819,0,1027819,0,4111276,45870,18853,3985537548147165,3985600751520299,3985600751524385,3985537551718252
118,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,284,41627,41627,256,128,0,0,20,4,64,64,0x0,0x719dc846ecc0,32,433,34452,0,16,16,488,0,2564.0,0.0,4370.0,4244.0,966778.0,4482.0,0.0,0.0,101276,12,4,12,101276,12,5,9,101276,18,8,10,101276,16,6,10,101276,18,8,11,101276,18,8,10,101276,22,10,12,101276,22,10,14,101276,12,4,12,101276,12,5,7,101276,10,4,6,101276,8,2,6,101276,18,8,11,101276,18,8,11,101276,14,6,8,101276,14,6,10,101276,0,101276,0,405104,45904,24561,3985537552670780,3985600751704291,3985600751708016,3985537553543559
119,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,285,41627,41627,256,256,1536,48,28,4,80,64,0x0,0x719d6cc18380,5,33,2643,0,1,4,365,0,126.0,0.0,911.0,802.0,911844.0,1026.0,0.0,0.0,990011,16,7,9,990011,14,5,9,990011,10,4,6,990011,14,6,8,990011,7,2,5,990011,7,2,5,990011,7,2,5,990011,7,2,14,990011,6,2,4,990011,6,2,4,990011,7,2,5,990011,6,2,4,990011,10,4,6,990011,10,4,7,990011,10,4,6,990011,10,4,14,990011,0,990011,75,3960044,41067,19642,3985537553542988,3985600751725442,3985600751730009,3985537555263952
120,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,286,41627,41627,256,256,0,0,12,4,32,64,0x0,0x719dfcc957c0,2,19,1504,0,1,1,80,0,66.0,0.0,1427.0,1378.0,864046.0,1540.0,0.0,0.0,1036569,0,0,0,1036569,0,0,5,1036569,1,0,1,1036569,0,0,0,1036569,1,0,5,1036569,0,0,0,1036569,1,0,1,1036569,0,0,1,1036569,0,0,0,1036569,0,0,5,1036569,0,0,0,1036569,0,0,0,1036569,4,2,6,1036569,4,2,2,1036569,4,2,3,1036569,4,2,3,1036569,0,1036569,988,4146276,35362,13912,3985537554233269,3985600751872218,3985600751874382,3985537556764880
121,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,287,41627,41627,256,256,0,0,24,0,32,64,0x0,0x719d4bc69a40,2,16,1252,0,1,1,292,0,66.0,0.0,1175.0,1126.0,866835.0,1288.0,0.0,0.0,646030,9,4,5,646030,4,2,2,646030,5,2,7,646030,4,2,2,646030,4,2,2,646030,4,2,2,646030,8,3,5,646030,8,4,5,646030,4,2,2,646030,4,2,2,646030,4,2,6,646030,4,2,2,646030,4,2,2,646030,4,2,2,646030,4,2,2,646030,4,2,2,646030,0,646030,0,2584120,36066,14673,3985537554773827,3985600751893490,3985600751896134,3985537558132000
122,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,288,41627,41627,256,256,0,0,40,0,32,64,0x0,0x719d4bc69840,3,28,2290,0,1,2,292,0,70.0,0.0,1235.0,1184.0,869726.0,1352.0,0.0,0.0,1024005,0,0,0,1024005,0,0,0,1024005,5,2,7,1024005,1,0,1,1024005,5,2,3,1024005,5,2,3,1024005,4,2,2,1024005,4,2,3,1024005,4,2,2,1024005,4,2,2,1024005,8,4,8,1024005,8,4,4,1024005,4,2,2,1024005,4,2,2,1024005,4,2,2,1024005,4,2,2,1024005,0,1024005,0,4096020,35931,14506,3985537555853162,3985600751908792,3985600751911276,3985537559497217
123,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,289,41627,41627,256,256,0,0,36,4,80,64,0x0,0x719d4b647fc0,3,28,2287,0,1,2,284,0,70.0,0.0,1223.0,1168.0,870300.0,1338.0,0.0,0.0,1058046,5,2,4,1058046,4,2,3,1058046,5,2,7,1058046,4,2,2,1058046,4,2,2,1058046,5,2,7,1058046,4,2,2,1058046,4,2,3,1058046,5,2,3,1058046,4,2,2,1058046,4,2,7,1058046,4,2,2,1058046,0,0,0,1058046,0,0,4,1058046,4,2,2,1058046,4,2,3,1058046,0,1058046,986,4232184,36450,15062,3985537556780443,3985600751927780,3985600751930464,3985537560919138
124,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,290,41627,41627,256,256,0,0,24,0,32,64,0x0,0x719d4bc69a40,2,17,1340,0,1,1,292,0,66.0,0.0,1263.0,1216.0,871446.0,1376.0,0.0,0.0,1172945,8,4,4,1172945,4,2,3,1172945,4,2,6,1172945,4,2,2,1172945,6,2,4,1172945,4,2,2,1172945,8,3,5,1172945,8,4,5,1172945,4,2,2,1172945,4,2,2,1172945,4,2,6,1172945,4,2,2,1172945,4,2,2,1172945,4,2,2,1172945,4,2,2,1172945,4,2,3,1172945,0,1172945,992,4691780,36103,14663,3985537557314141,3985600751948491,3985600751950895,3985537562341800
125,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,291,41627,41627,256,256,0,0,36,4,80,64,0x0,0x719d4b253a80,3,32,2616,0,1,2,284,0,70.0,0.0,1391.0,1342.0,879948.0,1504.0,0.0,0.0,1065451,5,2,3,1065451,4,2,2,1065451,8,4,8,1065451,4,2,6,1065451,5,2,3,1065451,4,2,2,1065451,5,2,3,1065451,4,2,3,1065451,1,0,1,1065451,0,0,0,1065451,4,2,7,1065451,4,2,6,1065451,4,2,2,1065451,4,2,2,1065451,4,2,2,1065451,4,2,3,1065451,0,1065451,0,4261804,37522,16153,3985537558386355,3985600751966838,3985600751969442,3985537563747037
126,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,292,41627,41627,256,256,512,0,8,0,32,64,0x0,0x719d4ae8eec0,2,19,1488,0,1,1,61,0,66.0,0.0,1411.0,1362.0,870646.0,1524.0,0.0,0.0,1019892,1,0,5,1019892,0,0,0,1019892,0,0,4,1019892,4,2,2,1019892,0,0,0,1019892,0,0,0,1019892,1,0,1,1019892,1,0,2,1019892,4,2,6,1019892,4,2,2,1019892,4,2,8,1019892,4,2,2,1019892,4,2,2,1019892,4,2,2,1019892,4,2,2,1019892,0,0,0,1019892,0,1019892,0,4079568,36023,14608,3985537558913254,3985600751985626,3985600751987909,3985537565150140
127,__amd_rocclr_copyBuffer.kd,2,0,293,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,8,114,8996,0,4,4,154,0,261.0,0.0,5347.0,5218.0,1052986.0,5593.0,0.0,0.0,1060191,4,2,2,1060191,4,2,8,1060191,4,2,6,1060191,4,2,2,1060191,4,2,2,1060191,4,2,2,1060191,1,0,1,1060191,2,2,1,1060191,0,0,0,1060191,0,0,4,1060191,0,0,4,1060191,0,0,0,1060191,0,0,0,1060191,0,0,0,1060191,0,0,0,1060191,0,0,2,1060191,0,1060191,989,4240764,46513,19495,3985537560074239,3985600751991835,3985600751994799,3985537566551071
128,__amd_rocclr_fillBufferAligned.kd,2,0,295,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,21,1668,0,1,1,93,0,66.0,0.0,1591.0,1540.0,1025040.0,1694.0,0.0,0.0,102226,0,0,0,102226,0,0,6,102226,0,0,4,102226,0,0,0,102226,0,0,4,102226,0,0,0,102226,4,2,2,102226,4,2,3,102226,5,2,3,102226,4,2,6,102226,0,0,4,102226,1,0,1,102226,6,4,6,102226,3,1,3,102226,4,2,2,102226,4,2,2,102226,0,102226,77,408904,43040,16029,3985537567368779,3985600752071873,3985600752073796,3985537568527481
129,__amd_rocclr_fillBufferAligned.kd,2,0,296,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,15,1196,0,1,1,93,0,66.0,0.0,1119.0,1069.0,1020105.0,1222.0,0.0,0.0,930426,0,0,0,930426,0,0,0,930426,0,0,0,930426,0,0,0,930426,0,0,0,930426,0,0,0,930426,4,2,2,930426,4,2,2,930426,5,2,3,930426,6,4,2,930426,0,0,0,930426,1,0,1,930426,4,2,2,930426,2,1,1,930426,5,2,3,930426,4,2,2,930426,0,930426,0,3721704,42610,15651,3985537568506991,3985600752077842,3985600752079324,3985537570375562
130,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,297,41627,41627,256,256,0,0,8,0,16,64,0x0,0x719dd8d21100,2,23,1844,0,2,0,24,0,743.0,0.0,908.0,884.0,859856.0,978.0,0.0,0.0,930887,0,0,0,930887,0,0,0,930887,4,2,2,930887,4,2,2,930887,0,0,5,930887,0,0,1,930887,0,0,4,930887,0,0,1,930887,2,0,2,930887,0,0,0,930887,0,0,0,930887,0,0,0,930887,0,0,4,930887,0,0,0,930887,4,2,6,930887,4,2,2,930887,0,930887,0,3723548,34943,13557,3985537569009614,3985600752088858,3985600752090461,3985537571639780
131,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,298,41627,41627,512,512,29184,0,52,4,48,64,0x0,0x719d4ae8f040,3,14,1165,0,2,1,616,0,246.0,0.0,1027.0,957.0,886266.0,1219.0,0.0,0.0,1102506,5,2,7,1102506,4,2,2,1102506,4,2,6,1102506,4,2,2,1102506,4,2,2,1102506,4,2,2,1102506,4,2,2,1102506,4,2,3,1102506,7,3,8,1102506,4,2,2,1102506,6,3,8,1102506,4,2,3,1102506,4,2,2,1102506,2,1,1,1102506,0,0,0,1102506,4,2,2,1102506,0,1102506,0,4410024,38224,16860,3985537569517524,3985600752097591,3985600752100315,3985537573046819
132,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,299,41627,41627,256,256,0,0,8,0,32,64,0x0,0x719d4ae8b900,2,17,1348,0,1,1,78,0,78.0,0.0,1271.0,1210.0,861096.0,1374.0,0.0,0.0,886092,0,0,4,886092,0,0,2,886092,0,0,4,886092,0,0,0,886092,0,0,0,886092,0,0,0,886092,1,0,1,886092,0,0,1,886092,5,2,7,886092,4,2,2,886092,2,0,7,886092,0,0,0,886092,0,0,0,886092,4,2,2,886092,4,2,2,886092,4,2,3,886092,0,886092,992,3544368,35067,13649,3985537570615326,3985600752108567,3985600752110290,3985537574407029
133,__amd_rocclr_copyBuffer.kd,2,0,300,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,8,104,8288,0,4,4,154,0,261.0,0.0,4863.0,4732.0,1047307.0,5110.0,0.0,0.0,565926,6,4,2,565926,4,2,8,565926,4,2,6,565926,4,2,2,565926,5,2,3,565926,4,2,2,565926,0,0,0,565926,0,0,1,565926,0,0,0,565926,0,0,4,565926,0,0,4,565926,0,0,0,565926,0,0,0,565926,0,0,0,565926,0,0,0,565926,0,0,2,565926,0,565926,991,2263704,45882,18822,3985537571170206,3985600752129358,3985600752132563,3985537575789072
134,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,302,41627,41627,256,128,0,0,20,4,64,64,0x0,0x719dc846ecc0,32,452,35972,0,16,16,488,0,2862.0,0.0,4526.0,4376.0,965591.0,4644.0,1.0,0.0,101239,11,4,11,101239,12,5,9,101239,20,8,12,101239,15,6,9,101239,18,8,11,101239,18,8,10,101239,22,10,12,101239,22,10,14,101239,11,4,11,101239,12,5,7,101239,12,4,8,101239,7,2,5,101239,18,8,11,101239,18,8,11,101239,14,6,8,101239,14,6,10,101239,0,101239,77,404956,46491,25104,3985537576713027,3985600752174264,3985600752177148,3985537577728418
135,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,303,41627,41627,256,256,1536,48,28,4,80,64,0x0,0x719d6cc18380,5,33,2761,0,1,4,365,0,201.0,0.0,959.0,851.0,907962.0,1070.0,0.0,0.0,590061,14,6,8,590061,13,5,8,590061,10,4,6,590061,14,6,8,590061,8,2,6,590061,9,3,6,590061,7,2,5,590061,9,3,15,590061,6,2,4,590061,6,2,4,590061,5,1,4,590061,6,2,4,590061,10,4,6,590061,10,4,7,590061,10,4,6,590061,10,4,14,590061,0,590061,0,2360244,40444,19189,3985537577720907,3985600752184279,3985600752187924,3985537579520796
136,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,304,41627,41627,256,256,0,0,12,4,32,64,0x0,0x719dfcc957c0,2,20,1556,0,1,1,80,0,66.0,0.0,1479.0,1428.0,861916.0,1592.0,0.0,0.0,1105640,0,0,0,1105640,0,0,4,1105640,0,0,0,1105640,0,0,0,1105640,1,0,5,1105640,0,0,0,1105640,1,0,1,1105640,0,0,1,1105640,0,0,0,1105640,0,0,5,1105640,0,0,0,1105640,0,0,0,1105640,4,2,6,1105640,5,2,3,1105640,4,2,3,1105640,4,2,2,1105640,0,1105640,0,4422560,35150,13752,3985537578329235,3985600752220172,3985600752221854,3985537580946072
137,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,305,41627,41627,256,256,0,0,24,0,32,64,0x0,0x719d4bc69a40,2,16,1304,0,1,1,292,0,66.0,0.0,1227.0,1176.0,868581.0,1340.0,0.0,0.0,1035497,9,4,5,1035497,4,2,3,1035497,4,2,6,1035497,4,2,2,1035497,4,2,2,1035497,4,2,2,1035497,8,3,5,1035497,8,4,5,1035497,4,2,2,1035497,4,2,2,1035497,4,2,6,1035497,4,2,2,1035497,4,2,2,1035497,5,2,3,1035497,4,2,2,1035497,4,2,3,1035497,0,1035497,1018,4141988,36259,14833,3985537578843375,3985600752235755,3985600752238038,3985537582389055
138,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,306,41627,41627,256,256,0,0,40,0,32,64,0x0,0x719d4bc69840,3,28,2173,0,1,2,292,0,70.0,0.0,1163.0,1112.0,867716.0,1274.0,0.0,0.0,1142034,0,0,0,1142034,0,0,1,1142034,5,2,7,1142034,1,0,1,1142034,5,2,3,1142034,4,2,2,1142034,4,2,2,1142034,4,2,3,1142034,4,2,2,1142034,4,2,2,1142034,8,4,8,1142034,8,4,4,1142034,5,2,3,1142034,4,2,2,1142034,4,2,2,1142034,4,2,3,1142034,0,1142034,986,4568136,35730,14346,3985537579822612,3985600752244127,3985600752246331,3985537583774992
139,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,307,41627,41627,256,256,0,0,36,4,80,64,0x0,0x719d4b647fc0,3,29,2329,0,1,2,284,0,70.0,0.0,1259.0,1204.0,869733.0,1370.0,0.0,0.0,596761,5,2,4,596761,4,2,2,596761,5,2,7,596761,4,2,2,596761,4,2,2,596761,4,2,6,596761,4,2,2,596761,4,2,3,596761,5,2,3,596761,4,2,2,596761,4,2,7,596761,4,2,2,596761,1,0,1,596761,0,0,4,596761,4,2,2,596761,4,2,2,596761,0,596761,0,2387044,36387,14982,3985537580341219,3985600752262635,3985600752264798,3985537585166609
140,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,308,41627,41627,256,256,0,0,24,0,32,64,0x0,0x719d4bc69a40,2,18,1384,0,1,1,292,0,66.0,0.0,1307.0,1258.0,871426.0,1420.0,0.0,0.0,603852,8,4,4,603852,4,2,2,603852,4,2,6,603852,4,2,2,603852,5,2,3,603852,4,2,2,603852,8,3,5,603852,8,4,5,603852,4,2,2,603852,4,2,2,603852,4,2,6,603852,4,2,2,603852,4,2,2,603852,4,2,2,603852,4,2,2,603852,5,2,3,603852,0,603852,0,2415408,36100,14656,3985537581527381,3985600752272209,3985600752274612,3985537586552547
141,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,309,41627,41627,256,256,0,0,36,4,80,64,0x0,0x719d4b253a80,3,35,2688,0,1,2,284,0,70.0,0.0,1439.0,1390.0,879813.0,1552.0,0.0,0.0,1045990,5,2,3,1045990,4,2,3,1045990,8,4,8,1045990,4,2,6,1045990,4,2,2,1045990,4,2,2,1045990,5,2,3,1045990,4,2,3,1045990,1,0,1,1045990,0,0,0,1045990,4,2,7,1045990,4,2,6,1045990,4,2,2,1045990,4,2,2,1045990,4,2,2,1045990,5,2,5,1045990,0,1045990,986,4183960,37508,16073,3985537582099226,3985600752288272,3985600752290516,3985537587954849
142,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,310,41627,41627,256,256,512,0,8,0,32,64,0x0,0x719d4ae8eec0,2,17,1414,0,1,1,61,0,66.0,0.0,1339.0,1290.0,867956.0,1450.0,0.0,0.0,1068258,1,0,5,1068258,0,0,1,1068258,0,0,4,1068258,4,2,2,1068258,0,0,0,1068258,0,0,0,1068258,1,0,1,1068258,0,0,1,1068258,4,2,6,1068258,4,2,2,1068258,4,2,8,1068258,4,2,2,1068258,4,2,2,1068258,4,2,2,1068258,5,2,3,1068258,0,0,1,1068258,0,1068258,991,4273032,35753,14361,3985537582918427,3985600752302894,3985600752304817,3985537589369209
143,__amd_rocclr_copyBuffer.kd,2,0,311,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,8,112,8972,0,4,4,154,0,261.0,0.0,5379.0,5246.0,1052509.0,5625.0,0.0,0.0,1232887,4,2,2,1232887,4,2,7,1232887,4,2,6,1232887,4,2,2,1232887,4,2,2,1232887,4,2,2,1232887,1,0,1,1232887,0,0,1,1232887,0,0,0,1232887,0,0,4,1232887,0,0,4,1232887,0,0,0,1232887,0,0,0,1232887,0,0,0,1232887,2,2,0,1232887,0,0,1,1232887,0,1232887,0,4931548,46459,19426,3985537583465886,3985600752310105,3985600752313990,3985537590761987
144,__amd_rocclr_fillBufferAligned.kd,2,0,313,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,21,1604,0,1,1,93,0,66.0,0.0,1527.0,1479.0,1024070.0,1630.0,0.0,0.0,103044,0,0,0,103044,0,0,6,103044,0,0,4,103044,0,0,0,103044,0,0,4,103044,0,0,0,103044,4,2,2,103044,4,2,3,103044,6,2,4,103044,4,2,6,103044,0,0,4,103044,3,2,1,103044,4,2,6,103044,2,1,2,103044,4,2,2,103044,4,2,2,103044,0,103044,0,412176,42942,15903,3985537591616279,3985600752342993,3985600752344916,3985537592782032
145,__amd_rocclr_fillBufferAligned.kd,2,0,314,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,15,1192,0,1,1,93,0,66.0,0.0,1115.0,1066.0,1020961.0,1218.0,0.0,0.0,830520,2,2,0,830520,1,0,1,830520,0,0,0,830520,0,0,0,830520,0,0,0,830520,0,0,0,830520,4,2,2,830520,4,2,2,830520,5,2,3,830520,4,2,2,830520,0,0,0,830520,1,0,1,830520,4,2,2,830520,2,1,1,830520,4,2,2,830520,4,2,2,830520,0,830520,0,3322080,42451,15482,3985537592761141,3985600752348682,3985600752350124,3985537594604585
146,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,315,41627,41627,256,256,0,0,8,0,16,64,0x0,0x719dd8d21100,2,23,1770,0,2,0,24,0,718.0,0.0,872.0,847.0,855886.0,941.0,0.0,0.0,1056019,0,0,0,1056019,0,0,1,1056019,4,2,2,1056019,5,2,3,1056019,0,0,5,1056019,0,0,1,1056019,0,0,4,1056019,0,0,1,1056019,1,0,1,1056019,0,0,0,1056019,0,0,0,1056019,0,0,0,1056019,0,0,4,1056019,0,0,0,1056019,4,2,6,1056019,4,2,3,1056019,0,1056019,983,4224076,34547,13164,3985537593271415,3985600752354490,3985600752356253,3985537595934420
147,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,316,41627,41627,512,512,29184,0,52,4,48,64,0x0,0x719d4ae8f040,3,16,1221,0,2,1,616,0,262.0,0.0,1083.0,1012.0,885951.0,1275.0,0.0,0.0,552140,5,2,7,552140,4,2,3,552140,4,2,6,552140,4,2,2,552140,4,2,2,552140,6,3,3,552140,4,2,2,552140,4,2,3,552140,7,3,8,552140,4,2,2,552140,4,2,7,552140,4,2,3,552140,4,2,2,552140,2,1,1,552140,0,0,0,552140,4,2,3,552140,0,552140,989,2208560,38190,16778,3985537593759937,3985600752365146,3985600752367590,3985537597306288
148,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,317,41627,41627,256,256,0,0,8,0,32,64,0x0,0x719d4ae8b900,2,16,1280,0,1,1,78,0,78.0,0.0,1203.0,1140.0,857636.0,1306.0,0.0,0.0,1005356,0,0,4,1005356,0,0,1,1005356,0,0,4,1005356,0,0,0,1005356,0,0,0,1005356,1,0,1,1005356,1,0,1,1005356,0,0,1,1005356,5,2,7,1005356,4,2,2,1005356,1,0,6,1005356,0,0,0,1005356,0,0,0,1005356,4,2,2,1005356,4,2,2,1005356,4,2,2,1005356,0,1005356,0,4021424,34721,13329,3985537594835657,3985600752372397,3985600752374079,3985537598679858
149,__amd_rocclr_copyBuffer.kd,2,0,318,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,8,106,8336,0,4,4,154,0,261.0,0.0,4867.0,4740.0,1046065.0,5114.0,0.0,0.0,1187188,4,2,2,1187188,4,2,7,1187188,4,2,6,1187188,4,2,2,1187188,5,2,3,1187188,4,2,2,1187188,0,0,0,1187188,2,2,1,1187188,0,0,0,1187188,0,0,4,1187188,0,0,4,1187188,0,0,0,1187188,0,0,0,1187188,0,0,0,1187188,0,0,0,1187188,0,0,1,1187188,0,1187188,0,4748752,45743,18744,3985537595362045,3985600752388060,3985600752391825,3985537600106987
150,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,320,41627,41627,256,128,0,0,20,4,64,64,0x0,0x719dc846ecc0,32,408,32928,0,16,16,488,0,2566.0,0.0,4150.0,4017.0,956268.0,4258.0,0.0,0.0,100218,11,4,11,100218,12,5,9,100218,18,8,10,100218,14,6,8,100218,18,8,11,100218,20,8,12,100218,23,10,13,100218,22,10,14,100218,11,4,11,100218,12,5,7,100218,10,4,6,100218,6,2,4,100218,18,8,11,100218,20,8,13,100218,15,6,9,100218,14,6,10,100218,0,100218,0,400872,44853,23508,3985537600934630,3985600752427318,3985600752430122,3985537601989378
151,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,321,41627,41627,256,256,1536,48,28,4,80,64,0x0,0x719d6cc18380,5,35,2625,0,1,4,365,0,126.0,0.0,903.0,795.0,905958.0,1014.0,1.0,0.0,904630,14,6,8,904630,13,5,8,904630,10,4,6,904630,14,6,8,904630,7,2,5,904630,7,2,5,904630,7,2,5,904630,7,2,14,904630,6,2,4,904630,6,2,4,904630,5,1,4,904630,6,2,4,904630,12,5,7,904630,10,4,7,904630,12,5,7,904630,11,4,15,904630,0,904630,77,3618520,40413,19002,3985537601978602,3985600752434408,3985600752437853,3985537603754366
152,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,322,41627,41627,256,256,0,0,12,4,32,64,0x0,0x719dfcc957c0,2,19,1476,0,1,1,80,0,66.0,0.0,1399.0,1350.0,860976.0,1512.0,0.0,0.0,1008602,0,0,0,1008602,0,0,5,1008602,0,0,0,1008602,0,0,0,1008602,1,0,5,1008602,0,0,0,1008602,1,0,1,1008602,0,0,1,1008602,1,0,1,1008602,0,0,5,1008602,0,0,0,1008602,0,0,0,1008602,4,2,6,1008602,4,2,2,1008602,4,2,3,1008602,4,2,3,1008602,0,1008602,989,4034408,35055,13672,3985537602537818,3985600752460767,3985600752462490,3985537605290826
153,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,323,41627,41627,256,256,0,0,24,0,32,64,0x0,0x719d4bc69a40,2,16,1242,0,1,1,292,0,66.0,0.0,1163.0,1116.0,865836.0,1278.0,0.0,0.0,1194464,9,4,5,1194464,4,2,2,1194464,4,2,6,1194464,4,2,2,1194464,4,2,2,1194464,4,2,2,1194464,8,3,5,1194464,8,4,5,1194464,5,2,3,1194464,4,2,2,1194464,4,2,6,1194464,4,2,2,1194464,4,2,2,1194464,4,2,2,1194464,4,2,2,1194464,4,2,2,1194464,0,1194464,0,4777856,35955,14574,3985537603047221,3985600752476951,3985600752479234,3985537606672518
154,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,324,41627,41627,256,256,0,0,40,0,32,64,0x0,0x719d4bc69840,3,29,2248,0,1,2,292,0,70.0,0.0,1211.0,1158.0,865896.0,1324.0,0.0,0.0,1145507,0,0,0,1145507,0,0,0,1145507,5,2,7,1145507,1,0,1,1145507,5,2,3,1145507,4,2,2,1145507,4,2,2,1145507,4,2,3,1145507,4,2,2,1145507,4,2,2,1145507,8,4,8,1145507,9,4,5,1145507,4,2,2,1145507,4,2,2,1145507,4,2,2,1145507,4,2,2,1145507,0,1145507,0,4582028,35548,14106,3985537604050203,3985600752485283,3985600752487446,3985537608084355
155,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,325,41627,41627,256,256,0,0,36,4,80,64,0x0,0x719d4b647fc0,3,27,2241,0,1,2,284,0,70.0,0.0,1199.0,1148.0,866394.0,1310.0,0.0,0.0,595768,5,2,4,595768,4,2,3,595768,5,2,7,595768,4,2,2,595768,4,2,2,595768,4,2,6,595768,4,2,2,595768,4,2,3,595768,5,2,3,595768,4,2,2,595768,4,2,7,595768,5,2,3,595768,0,0,0,595768,0,0,4,595768,4,2,2,595768,4,2,3,595768,0,595768,991,2383072,36016,14575,3985537604534158,3985600752500345,3985600752502469,3985537609439427
156,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,326,41627,41627,256,256,0,0,24,0,32,64,0x0,0x719d4bc69a40,2,16,1312,0,1,1,292,0,66.0,0.0,1235.0,1186.0,870876.0,1348.0,0.0,0.0,997776,8,4,4,997776,4,2,3,997776,4,2,6,997776,4,2,2,997776,5,2,3,997776,4,2,2,997776,8,3,5,997776,8,4,5,997776,4,2,2,997776,4,2,2,997776,5,2,7,997776,4,2,2,997776,4,2,2,997776,4,2,2,997776,4,2,2,997776,4,2,3,997776,0,997776,990,3991104,36046,14656,3985537605577981,3985600752509158,3985600752511522,3985537610837553
157,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,327,41627,41627,256,256,0,0,36,4,80,64,0x0,0x719d4b253a80,3,31,2607,0,1,2,284,0,70.0,0.0,1383.0,1330.0,878346.0,1498.0,0.0,0.0,1078013,5,2,3,1078013,4,2,2,1078013,8,4,8,1078013,4,2,6,1078013,4,2,2,1078013,4,2,2,1078013,5,2,3,1078013,4,2,3,1078013,1,0,1,1078013,0,0,0,1078013,5,2,8,1078013,4,2,6,1078013,4,2,2,1078013,4,2,2,1078013,4,2,2,1078013,4,2,3,1078013,0,1078013,0,4312052,37344,15913,3985537606092822,3985600752524501,3985600752526704,3985537612233145
158,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,328,41627,41627,256,256,512,0,8,0,32,64,0x0,0x719d4ae8eec0,2,17,1460,0,1,1,61,0,66.0,0.0,1383.0,1334.0,869176.0,1496.0,0.0,0.0,2033024,1,0,5,2033024,1,0,1,2033024,0,0,4,2033024,4,2,2,2033024,0,0,0,2033024,0,0,0,2033024,1,0,1,2033024,0,0,1,2033024,4,2,6,2033024,4,2,2,2033024,4,2,8,2033024,4,2,2,2033024,4,2,2,2033024,4,2,2,2033024,4,2,2,2033024,0,0,0,2033024,0,2033024,0,8132096,35876,14441,3985537607216923,3985600752540685,3985600752542648,3985537613513477
159,__amd_rocclr_copyBuffer.kd,2,0,329,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,8,112,8844,0,4,4,154,0,261.0,0.0,5283.0,5155.0,1049755.0,5529.0,0.0,0.0,1742309,4,2,2,1742309,6,4,8,1742309,4,2,6,1742309,4,2,2,1742309,4,2,2,1742309,4,2,2,1742309,1,0,1,1742309,0,0,1,1742309,0,0,0,1742309,0,0,4,1742309,0,0,4,1742309,0,0,0,1742309,0,0,0,1742309,0,0,0,1742309,0,0,0,1742309,0,0,2,1742309,0,1742309,991,6969236,46154,19113,3985537607748719,3985600752547335,3985600752550820,3985537614743495
160,__amd_rocclr_fillBufferAligned.kd,2,0,331,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,19,1582,0,1,1,93,0,66.0,0.0,1503.0,1455.0,1023500.0,1618.0,0.0,0.0,102660,0,0,0,102660,0,0,6,102660,2,2,4,102660,1,0,1,102660,0,0,4,102660,0,0,0,102660,4,2,2,102660,4,2,3,102660,5,2,3,102660,4,2,6,102660,0,0,4,102660,1,0,1,102660,4,2,6,102660,2,1,2,102660,4,2,2,102660,4,2,2,102660,0,102660,77,410640,42885,15884,3985537615476968,3985600752579222,3985600752581025,3985537616634169
161,__amd_rocclr_fillBufferAligned.kd,2,0,332,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,15,1234,0,1,1,93,0,66.0,0.0,1155.0,1104.0,1020214.0,1270.0,0.0,0.0,632012,0,0,0,632012,0,0,0,632012,0,0,0,632012,0,0,0,632012,1,0,1,632012,0,0,0,632012,4,2,2,632012,6,4,2,632012,5,2,3,632012,4,2,2,632012,0,0,0,632012,1,0,1,632012,4,2,2,632012,2,1,1,632012,4,2,2,632012,4,2,2,632012,0,632012,0,2528048,42368,15363,3985537616614009,3985600752584910,3985600752586112,3985537617947670
162,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,333,41627,41627,256,256,0,0,8,0,16,64,0x0,0x719dd8d21100,2,23,1812,0,2,0,24,0,733.0,0.0,892.0,870.0,857786.0,962.0,0.0,0.0,739027,0,0,0,739027,0,0,0,739027,4,2,2,739027,4,2,2,739027,0,0,5,739027,0,0,1,739027,1,0,5,739027,0,0,1,739027,1,0,1,739027,0,0,0,739027,0,0,0,739027,0,0,0,739027,0,0,4,739027,0,0,0,739027,4,2,6,739027,4,2,2,739027,0,739027,0,2956108,34736,13317,3985537617096191,3985600752590639,3985600752592321,3985537618925895
163,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,334,41627,41627,512,512,29184,0,52,4,48,64,0x0,0x719d4ae8f040,3,15,1162,0,2,1,616,0,242.0,0.0,1015.0,942.0,884880.0,1216.0,0.0,0.0,679818,5,2,7,679818,4,2,2,679818,4,2,6,679818,4,2,2,679818,4,2,2,679818,4,2,2,679818,4,2,2,679818,4,2,3,679818,7,3,8,679818,4,2,2,679818,4,2,7,679818,4,2,3,679818,6,3,3,679818,2,1,1,679818,0,0,0,679818,4,2,2,679818,0,679818,0,2719272,38071,16698,3985537617647686,3985600752603257,3985600752605861,3985537619876720
164,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,335,41627,41627,256,256,0,0,8,0,32,64,0x0,0x719d4ae8b900,2,16,1330,0,1,1,78,0,78.0,0.0,1251.0,1190.0,859636.0,1366.0,0.0,0.0,720741,0,0,4,720741,0,0,2,720741,0,0,4,720741,0,0,0,720741,0,0,0,720741,0,0,0,720741,1,0,1,720741,0,0,1,720741,5,2,7,720741,4,2,2,720741,1,0,6,720741,0,0,0,720741,1,0,1,720741,4,2,2,720741,4,2,2,720741,4,2,3,720741,0,720741,989,2882964,34922,13489,3985537618501047,3985600752611469,3985600752613192,3985537620877930
165,__amd_rocclr_copyBuffer.kd,2,0,336,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,8,104,8328,0,4,4,154,0,261.0,0.0,4871.0,4745.0,1048270.0,5163.0,0.0,0.0,732803,4,2,2,732803,4,2,8,732803,4,2,6,732803,4,2,2,732803,5,2,3,732803,4,2,2,732803,0,0,0,732803,0,0,1,732803,0,0,0,732803,0,0,4,732803,0,0,4,732803,0,0,0,732803,0,0,0,732803,0,0,0,732803,2,2,0,732803,0,0,2,732803,0,732803,987,2931212,45989,18940,3985537619510519,3985600752627693,3985600752630498,3985537621850667
166,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,338,41627,41627,1024,128,0,0,20,4,64,64,0x0,0x719dc846ecc0,128,1633,130824,0,64,64,1952,0,10288.0,0.0,16460.0,15879.0,1341544.0,16939.0,0.0,0.0,142607,52,16,40,142607,52,20,34,142607,56,24,36,142607,40,16,24,142607,72,32,44,142607,72,32,40,142607,72,32,40,142607,72,32,44,142607,52,16,40,142607,52,20,32,142607,56,24,36,142607,40,16,24,142607,72,32,44,142607,72,32,41,142607,72,32,40,142607,72,32,44,142607,0,142607,77,570428,89859,68749,3985537622338688,3985600752662865,3985600752667312,3985537623374989
167,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,339,41627,41627,512,512,2560,48,28,4,80,64,0x0,0x719d6cc18380,17,129,10114,0,1,16,821,0,474.0,0.0,1686.0,1357.0,933030.0,1838.0,6.0,0.0,1112143,20,6,14,1112143,21,6,15,1112143,16,4,12,1112143,20,6,14,1112143,13,2,11,1112143,13,2,11,1112143,13,2,11,1112143,13,2,20,1112143,12,2,10,1112143,12,2,10,1112143,12,1,11,1112143,14,3,11,1112143,16,4,12,1112143,16,4,13,1112143,16,4,12,1112143,16,4,20,1112143,0,1112143,0,4448572,43420,22049,3985537623362521,3985600752671118,3985600752675364,3985537625081601
168,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,340,41627,41627,256,256,0,0,12,4,32,64,0x0,0x719dfcc957c0,2,19,1526,0,1,1,80,0,66.0,0.0,1447.0,1398.0,864976.0,1562.0,0.0,0.0,595326,0,0,2,595326,0,0,4,595326,0,0,0,595326,1,0,1,595326,1,0,7,595326,0,0,0,595326,1,0,1,595326,0,0,1,595326,0,0,1,595326,0,0,5,595326,0,0,0,595326,0,0,0,595326,4,2,7,595326,4,2,2,595326,4,2,3,595326,4,2,2,595326,0,595326,3274,2381304,35455,14072,3985537623893916,3985600752697316,3985600752699039,3985537625965688
169,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,341,41627,41627,256,256,0,0,24,0,32,64,0x0,0x719d4bc69a40,2,16,1290,0,1,1,292,0,66.0,0.0,1211.0,1162.0,868581.0,1326.0,0.0,0.0,660765,9,4,6,660765,4,2,3,660765,4,2,6,660765,5,2,3,660765,4,2,3,660765,4,2,2,660765,8,3,5,660765,8,4,5,660765,4,2,2,660765,4,2,2,660765,4,2,6,660765,4,2,2,660765,4,2,2,660765,4,2,2,660765,4,2,2,660765,4,2,3,660765,0,660765,2178,2643060,36260,14826,3985537624387075,3985600752712539,3985600752714702,3985537626886599
170,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,342,41627,41627,256,256,0,0,40,0,32,64,0x0,0x719d4bc69840,3,29,2318,0,1,2,292,0,70.0,0.0,1255.0,1204.0,870756.0,1372.0,0.0,0.0,723969,0,0,0,723969,0,0,1,723969,6,2,8,723969,1,0,1,723969,5,2,3,723969,4,2,2,723969,4,2,2,723969,4,2,3,723969,4,2,2,723969,4,2,2,723969,8,4,8,723969,8,4,4,723969,4,2,2,723969,4,2,2,723969,4,2,2,723969,4,2,3,723969,0,723969,992,2895876,36034,14586,3985537625345041,3985600752727881,3985600752730205,3985537627856312
171,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,343,41627,41627,256,256,0,0,36,4,80,64,0x0,0x719d4b647fc0,3,28,2294,0,1,2,284,0,70.0,0.0,1239.0,1186.0,870993.0,1356.0,0.0,0.0,684269,5,2,5,684269,4,2,2,684269,6,2,8,684269,4,2,2,684269,4,2,3,684269,4,2,6,684269,4,2,2,684269,4,2,3,684269,5,2,3,684269,4,2,2,684269,4,2,7,684269,4,2,2,684269,0,0,0,684269,0,0,4,684269,4,2,2,684269,4,2,2,684269,0,684269,1340,2737076,36527,15142,3985537626235887,3985600752743024,3985600752745227,3985537628853675
172,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,344,41627,41627,256,256,0,0,24,0,32,64,0x0,0x719d4bc69a40,2,17,1362,0,1,1,292,0,66.0,0.0,1283.0,1234.0,872396.0,1398.0,0.0,0.0,724934,8,4,4,724934,4,2,2,724934,4,2,6,724934,4,2,2,724934,5,2,3,724934,5,2,3,724934,8,3,5,724934,8,4,5,724934,4,2,2,724934,4,2,2,724934,4,2,6,724934,4,2,2,724934,4,2,2,724934,4,2,2,724934,4,2,2,724934,4,2,2,724934,0,724934,0,2899736,36198,14743,3985537627173212,3985600752751516,3985600752753880,3985537629913181
173,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,345,41627,41627,256,256,0,0,36,4,80,64,0x0,0x719d4b253a80,3,32,2679,0,1,2,284,0,70.0,0.0,1431.0,1376.0,879417.0,1546.0,0.0,0.0,627646,5,2,3,627646,4,2,3,627646,8,4,8,627646,4,2,6,627646,4,2,2,627646,5,2,3,627646,5,2,3,627646,4,2,3,627646,1,0,1,627646,0,0,0,627646,4,2,7,627646,4,2,6,627646,4,2,2,627646,4,2,2,627646,4,2,2,627646,4,2,4,627646,0,627646,990,2510584,37464,16073,3985537628199809,3985600752768822,3985600752771105,3985537630851278
174,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,346,41627,41627,256,256,512,0,8,0,32,64,0x0,0x719d4ae8eec0,2,19,1508,0,1,1,61,0,66.0,0.0,1427.0,1380.0,871526.0,1544.0,0.0,0.0,2059626,1,0,5,2059626,0,0,1,2059626,0,0,4,2059626,4,2,2,2059626,1,0,1,2059626,0,0,0,2059626,1,0,1,2059626,0,0,1,2059626,4,2,6,2059626,4,2,2,2059626,4,2,8,2059626,4,2,2,2059626,4,2,2,2059626,4,2,2,2059626,4,2,2,2059626,0,0,1,2059626,0,2059626,991,8238504,36111,15168,3985537629139848,3985600752784805,3985600752786768,3985537632085431
175,__amd_rocclr_copyBuffer.kd,2,0,347,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,8,112,8984,0,4,4,154,0,261.0,0.0,5331.0,5203.0,1053742.0,5596.0,0.0,0.0,1671715,4,2,2,1671715,4,2,7,1671715,4,2,6,1671715,4,2,2,1671715,6,4,2,1671715,4,2,2,1671715,1,0,1,1671715,0,0,1,1671715,0,0,0,1671715,0,0,4,1671715,0,0,4,1671715,0,0,0,1671715,0,0,0,1671715,0,0,0,1671715,0,0,0,1671715,0,0,1,1671715,0,1671715,0,6686860,46597,19554,3985537630124564,3985600752792497,3985600752795822,3985537633328638
176,__amd_rocclr_fillBufferAligned.kd,2,0,349,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,22,1778,0,1,1,93,0,66.0,0.0,1699.0,1653.0,1029060.0,1814.0,0.0,0.0,101183,0,0,0,101183,0,0,6,101183,0,0,4,101183,0,0,0,101183,0,0,4,101183,0,0,0,101183,5,2,3,101183,4,2,3,101183,5,2,3,101183,4,2,6,101183,0,0,4,101183,1,0,1,101183,4,2,6,101183,4,3,2,101183,4,2,2,101183,4,2,2,101183,0,101183,0,404732,43442,16440,3985537634013490,3985600752818856,3985600752820538,3985537635073006
177,__amd_rocclr_fillBufferAligned.kd,2,0,350,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,19,1538,0,1,1,93,0,66.0,0.0,1459.0,1409.0,1024272.0,1574.0,0.0,0.0,869428,0,0,0,869428,0,0,0,869428,0,0,0,869428,0,0,0,869428,0,0,0,869428,0,0,0,869428,4,2,2,869428,4,2,2,869428,5,2,3,869428,4,2,2,869428,0,0,0,869428,1,0,1,869428,4,2,2,869428,2,1,1,869428,6,4,2,869428,5,2,3,869428,0,869428,0,3477712,43073,16089,3985537635052215,3985600752824504,3985600752825826,3985537636410432
178,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,351,41627,41627,256,256,0,0,8,0,16,64,0x0,0x719dd8d21100,2,23,1744,0,2,0,24,0,709.0,0.0,856.0,834.0,858126.0,928.0,0.0,0.0,727114,0,0,0,727114,0,0,1,727114,4,2,2,727114,4,2,2,727114,0,0,5,727114,0,0,1,727114,0,0,4,727114,0,0,1,727114,1,0,1,727114,1,0,1,727114,0,0,0,727114,0,0,0,727114,0,0,4,727114,0,0,0,727114,4,2,6,727114,4,2,3,727114,0,727114,986,2908456,34771,13324,3985537635529290,3985600752839326,3985600752841329,3985537637403540
179,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,352,41627,41627,512,512,29184,0,52,4,48,64,0x0,0x719d4ae8f040,3,15,1218,0,2,1,616,0,258.0,0.0,1071.0,998.0,887157.0,1272.0,0.0,0.0,736454,5,2,7,736454,4,2,3,736454,4,2,6,736454,4,2,2,736454,4,2,2,736454,4,2,2,736454,4,2,2,736454,4,2,3,736454,7,3,8,736454,4,2,2,736454,4,2,7,736454,6,3,4,736454,4,2,2,736454,2,1,1,736454,0,0,0,736454,4,2,3,736454,0,736454,988,2945816,38323,16938,3985537636085522,3985600752848620,3985600752851344,3985537638343448
180,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,353,41627,41627,256,256,0,0,8,0,32,64,0x0,0x719d4ae8b900,2,18,1382,0,1,1,78,0,78.0,0.0,1303.0,1240.0,862326.0,1418.0,0.0,0.0,675197,0,0,4,675197,0,0,1,675197,0,0,4,675197,0,0,0,675197,0,0,0,675197,0,0,0,675197,1,0,1,675197,0,0,1,675197,5,2,7,675197,4,2,2,675197,1,0,6,675197,1,0,1,675197,0,0,0,675197,4,2,2,675197,4,2,2,675197,4,2,2,675197,0,675197,0,2700788,35190,13809,3985537636945733,3985600752855069,3985600752856912,3985537639354513
181,__amd_rocclr_copyBuffer.kd,2,0,354,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,8,104,8352,0,4,4,154,0,261.0,0.0,4907.0,4783.0,1047460.0,5199.0,0.0,0.0,752933,4,2,2,752933,6,4,7,752933,4,2,6,752933,4,2,2,752933,5,2,3,752933,4,2,2,752933,0,0,0,752933,0,0,1,752933,0,0,0,752933,0,0,4,752933,0,0,4,752933,0,0,0,752933,0,0,0,752933,0,0,0,752933,0,0,0,752933,0,0,1,752933,0,752933,0,3011732,45898,18853,3985537637961304,3985600752868889,3985600752872895,3985537640305788
182,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,356,41627,41627,1024,128,0,0,20,4,64,64,0x0,0x719dc846ecc0,128,1569,125568,0,64,64,1952,0,9429.0,0.0,15776.0,15163.0,1368628.0,16290.0,0.0,0.0,144117,48,16,36,144117,48,20,30,144117,56,24,36,144117,48,16,32,144117,72,32,44,144117,72,32,40,144117,72,32,40,144117,72,32,44,144117,48,16,36,144117,48,20,28,144117,56,24,36,144117,48,16,32,144117,72,32,44,144117,72,32,41,144117,72,32,40,144117,72,32,44,144117,0,144117,0,576468,87679,66363,3985537640790895,3985600752903180,3985600752907306,3985537641788479
183,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,357,41627,41627,512,512,2560,48,28,4,80,64,0x0,0x719d6cc18380,17,127,10118,0,1,16,821,0,492.0,0.0,1763.0,1455.0,929268.0,1880.0,6.0,0.0,1231481,20,6,14,1231481,19,5,14,1231481,18,5,13,1231481,20,6,14,1231481,15,3,12,1231481,14,2,12,1231481,13,2,11,1231481,13,2,20,1231481,12,2,10,1231481,12,2,10,1231481,11,1,10,1231481,12,2,10,1231481,16,4,12,1231481,16,4,13,1231481,16,4,12,1231481,16,4,20,1231481,0,1231481,75,4925924,43003,21569,3985537641774028,3985600752911032,3985600752915198,3985537643357087
184,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,358,41627,41627,256,256,0,0,12,4,32,64,0x0,0x719dfcc957c0,2,20,1578,0,1,1,80,0,66.0,0.0,1499.0,1448.0,865066.0,1614.0,0.0,0.0,379844,0,0,1,379844,0,0,5,379844,0,0,0,379844,0,0,0,379844,1,0,6,379844,0,0,0,379844,2,0,2,379844,0,0,1,379844,0,0,0,379844,0,0,5,379844,0,0,0,379844,0,0,0,379844,4,2,6,379844,4,2,2,379844,4,2,3,379844,4,2,3,379844,0,379844,1894,1519376,35465,14072,3985537642288278,3985600752935027,3985600752936910,3985537644226181
185,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,359,41627,41627,256,256,0,0,24,0,32,64,0x0,0x719d4bc69a40,2,16,1234,0,1,1,292,0,66.0,0.0,1155.0,1104.0,865530.0,1270.0,0.0,0.0,672145,9,4,5,672145,4,2,2,672145,4,2,6,672145,4,2,2,672145,4,2,2,672145,4,2,2,672145,9,3,6,672145,8,4,5,672145,4,2,2,672145,4,2,2,672145,4,2,6,672145,4,2,2,672145,4,2,2,672145,4,2,2,672145,4,2,2,672145,4,2,2,672145,0,672145,0,2688580,35920,14506,3985537642775808,3985600752950530,3985600752952613,3985537645163346
186,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,360,41627,41627,256,256,0,0,40,0,32,64,0x0,0x719d4bc69840,3,27,2207,0,1,2,292,0,70.0,0.0,1183.0,1130.0,868336.0,1298.0,0.0,0.0,721783,0,0,0,721783,0,0,0,721783,5,2,7,721783,1,0,1,721783,5,2,3,721783,4,2,2,721783,4,2,2,721783,4,2,3,721783,4,2,2,721783,4,2,2,721783,8,4,8,721783,8,4,4,721783,4,2,2,721783,5,2,3,721783,4,2,2,721783,4,2,2,721783,0,721783,0,2887132,35791,14346,3985537643624692,3985600752958261,3985600752960465,3985537646183874
187,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,361,41627,41627,256,256,0,0,36,4,80,64,0x0,0x719d4b647fc0,3,28,2242,0,1,2,284,0,70.0,0.0,1191.0,1138.0,869013.0,1308.0,0.0,0.0,734520,5,2,4,734520,4,2,3,734520,5,2,7,734520,4,2,2,734520,4,2,2,734520,4,2,6,734520,4,2,2,734520,4,2,3,734520,5,2,3,734520,4,2,2,734520,4,2,7,734520,4,2,2,734520,0,0,0,734520,1,0,5,734520,4,2,2,734520,4,2,3,734520,0,734520,988,2938080,36308,14902,3985537644500346,3985600752968717,3985600752970880,3985537647222179
188,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,362,41627,41627,256,256,0,0,24,0,32,64,0x0,0x719d4bc69a40,2,16,1290,0,1,1,292,0,66.0,0.0,1211.0,1162.0,871486.0,1326.0,0.0,0.0,478255,8,4,4,478255,4,2,3,478255,4,2,6,478255,4,2,2,478255,5,2,3,478255,4,2,2,478255,8,3,5,478255,8,4,5,478255,4,2,2,478255,4,2,2,478255,4,2,6,478255,4,2,2,478255,5,2,3,478255,4,2,2,478255,4,2,2,478255,4,2,3,478255,0,478255,984,1913020,36106,14656,3985537645437161,3985600752977970,3985600752980334,3985537648066917
189,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,363,41627,41627,256,256,0,0,36,4,80,64,0x0,0x719d4b253a80,3,31,2609,0,1,2,284,0,70.0,0.0,1383.0,1330.0,879141.0,1494.0,0.0,0.0,820024,5,2,3,820024,4,2,2,820024,8,4,8,820024,4,2,6,820024,4,2,2,820024,4,2,2,820024,5,2,3,820024,4,2,3,820024,1,0,1,820024,0,0,0,820024,4,2,7,820024,4,2,6,820024,5,2,3,820024,4,2,2,820024,4,2,2,820024,4,2,3,820024,0,820024,0,3280096,37390,15982,3985537646416468,3985600752994355,3985600752996558,3985537648989360
190,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,364,41627,41627,256,256,512,0,8,0,32,64,0x0,0x719d4ae8eec0,2,18,1438,0,1,1,61,0,66.0,0.0,1359.0,1310.0,869056.0,1474.0,0.0,0.0,596959,1,0,5,596959,0,0,0,596959,0,0,4,596959,4,2,2,596959,0,0,0,596959,0,0,0,596959,1,0,1,596959,0,0,1,596959,4,2,6,596959,4,2,2,596959,4,2,8,596959,4,2,2,596959,4,2,2,596959,4,2,2,596959,4,2,2,596959,1,0,1,596959,0,596959,0,2387836,35863,14441,3985537647272503,3985600753010058,3985600753011981,3985537650068645
191,__amd_rocclr_copyBuffer.kd,2,0,365,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,8,112,8948,0,4,4,154,0,261.0,0.0,5315.0,5188.0,1051654.0,5580.0,0.0,0.0,1154139,4,2,2,1154139,4,2,8,1154139,4,2,6,1154139,4,2,2,1154139,4,2,2,1154139,4,2,2,1154139,1,0,1,1154139,0,0,1,1154139,0,0,0,1154139,0,0,4,1154139,0,0,4,1154139,0,0,0,1154139,0,0,0,1154139,0,0,0,1154139,0,0,0,1154139,2,2,2,1154139,0,1154139,991,4616556,46365,19318,3985537647815105,3985600753017188,3985600753021354,3985537651442485
192,__amd_rocclr_fillBufferAligned.kd,2,0,367,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,20,1558,0,1,1,93,0,66.0,0.0,1479.0,1432.0,1022850.0,1594.0,0.0,0.0,102706,0,0,0,102706,0,0,6,102706,0,0,4,102706,0,0,0,102706,0,0,4,102706,0,0,0,102706,4,2,2,102706,4,2,3,102706,7,4,3,102706,5,2,7,102706,0,0,4,102706,1,0,1,102706,4,2,6,102706,2,1,2,102706,4,2,2,102706,4,2,2,102706,0,102706,77,410824,42821,15809,3985537652265832,3985600753054363,3985600753056486,3985537653350565
193,__amd_rocclr_fillBufferAligned.kd,2,0,368,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,16,1278,0,1,1,93,0,66.0,0.0,1203.0,1152.0,1021136.0,1305.0,0.0,0.0,425639,0,0,0,425639,0,0,0,425639,2,2,0,425639,0,0,0,425639,0,0,0,425639,0,0,0,425639,4,2,2,425639,4,2,2,425639,5,2,3,425639,4,2,2,425639,1,0,1,425639,1,0,1,425639,4,2,2,425639,2,1,1,425639,4,2,2,425639,4,2,2,425639,0,425639,0,1702556,42445,15475,3985537653330154,3985600753060332,3985600753061814,3985537655144135
194,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,369,41627,41627,256,256,0,0,8,0,16,64,0x0,0x719dd8d21100,2,23,1798,0,2,0,24,0,728.0,0.0,884.0,861.0,856146.0,955.0,0.0,0.0,1722377,0,0,3,1722377,0,0,0,1722377,4,2,2,1722377,5,2,3,1722377,0,0,8,1722377,0,0,1,1722377,0,0,4,1722377,0,0,1,1722377,1,0,3,1722377,0,0,0,1722377,0,0,0,1722377,0,0,0,1722377,0,0,6,1722377,0,0,0,1722377,4,2,6,1722377,4,2,2,1722377,0,1722377,5807,6889508,34573,13164,3985537653795512,3985600753074753,3985600753076596,3985537656383065
195,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,370,41627,41627,512,512,29184,0,52,4,48,64,0x0,0x719d4ae8f040,3,14,1146,0,2,1,616,0,238.0,0.0,999.0,928.0,882567.0,1200.0,0.0,0.0,1652598,5,2,7,1652598,6,3,3,1652598,4,2,6,1652598,4,2,2,1652598,4,2,2,1652598,4,2,2,1652598,4,2,2,1652598,4,2,3,1652598,7,3,8,1652598,4,2,2,1652598,4,2,7,1652598,4,2,3,1652598,4,2,2,1652598,2,1,1,1652598,0,0,0,1652598,4,2,2,1652598,0,1652598,0,6610392,37813,16378,3985537654261461,3985600753084127,3985600753086611,3985537657502129
196,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,371,41627,41627,256,256,0,0,8,0,32,64,0x0,0x719d4ae8b900,2,16,1310,0,1,1,78,0,78.0,0.0,1231.0,1166.0,858566.0,1346.0,0.0,0.0,722585,0,0,4,722585,1,0,3,722585,0,0,4,722585,0,0,0,722585,0,0,0,722585,0,0,0,722585,1,0,1,722585,0,0,1,722585,5,2,7,722585,4,2,2,722585,1,0,6,722585,0,0,0,722585,0,0,0,722585,4,2,2,722585,4,2,2,722585,4,2,3,722585,0,722585,989,2890340,34814,13409,3985537654803031,3985600753100111,3985600753101993,3985537658879164
197,__amd_rocclr_copyBuffer.kd,2,0,372,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,8,106,8376,0,4,4,154,0,261.0,0.0,4911.0,4783.0,1046677.0,5157.0,0.0,0.0,653062,4,2,2,653062,4,2,8,653062,4,2,6,653062,4,2,2,653062,5,2,3,653062,4,2,2,653062,0,0,0,653062,2,2,1,653062,0,0,0,653062,0,0,4,653062,0,0,4,653062,0,0,0,653062,0,0,0,653062,0,0,0,653062,0,0,0,653062,0,0,2,653062,0,653062,986,2612248,45812,18760,3985537655649732,3985600753112729,3985600753116255,3985537660277340
198,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,374,41627,41627,1024,128,0,0,20,4,64,64,0x0,0x719dc846ecc0,128,1572,125468,0,64,64,1952,0,9042.0,0.0,15824.0,15277.0,1302591.0,16288.0,4.0,0.0,139127,44,16,32,139127,48,20,30,139127,56,24,36,139127,40,16,24,139127,76,32,48,139127,80,32,48,139127,72,32,40,139127,72,32,44,139127,44,16,32,139127,48,20,28,139127,56,24,36,139127,40,16,24,139127,76,32,48,139127,80,32,49,139127,72,32,40,139127,72,32,44,139127,0,139127,77,556508,85611,64362,3985537661113546,3985600753145377,3985600753149904,3985537662153012
199,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,375,41627,41627,512,512,2560,48,28,4,80,64,0x0,0x719d6cc18380,17,125,10080,0,1,16,821,0,446.0,0.0,1682.0,1354.0,925884.0,1829.0,5.0,0.0,935767,20,6,14,935767,19,5,14,935767,16,4,12,935767,20,6,14,935767,13,2,11,935767,13,2,11,935767,13,2,11,935767,13,2,20,935767,12,2,10,935767,12,2,10,935767,11,1,10,935767,12,2,10,935767,18,5,13,935767,16,4,13,935767,18,5,13,935767,17,4,21,935767,0,935767,0,3743068,42626,21242,3985537662138481,3985600753153550,3985600753157836,3985537663950609
200,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,376,41627,41627,256,256,0,0,12,4,32,64,0x0,0x719dfcc957c0,2,19,1498,0,1,1,80,0,66.0,0.0,1423.0,1376.0,861566.0,1534.0,0.0,0.0,1120961,0,0,0,1120961,0,0,4,1120961,0,0,0,1120961,0,0,0,1120961,1,0,5,1120961,0,0,0,1120961,1,0,1,1120961,0,0,1,1120961,0,0,0,1120961,0,0,5,1120961,1,0,1,1120961,0,0,0,1120961,4,2,6,1120961,4,2,2,1120961,4,2,3,1120961,4,2,2,1120961,0,1120961,0,4483844,35115,13672,3985537662669596,3985600753173138,3985600753174981,3985537665417616
201,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,377,41627,41627,256,256,0,0,24,0,32,64,0x0,0x719d4bc69a40,2,16,1274,0,1,1,292,0,66.0,0.0,1199.0,1152.0,866619.0,1310.0,0.0,0.0,619644,9,4,5,619644,4,2,3,619644,4,2,6,619644,4,2,2,619644,4,2,2,619644,4,2,2,619644,8,3,5,619644,8,4,5,619644,4,2,2,619644,4,2,2,619644,5,2,7,619644,4,2,2,619644,4,2,2,619644,4,2,2,619644,4,2,2,619644,4,2,3,619644,0,619644,988,2478576,36041,14673,3985537663147772,3985600753181190,3985600753183394,3985537666708564
202,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,378,41627,41627,256,256,0,0,40,0,32,64,0x0,0x719d4bc69840,3,28,2282,0,1,2,292,0,70.0,0.0,1231.0,1182.0,866326.0,1348.0,0.0,0.0,502211,0,0,0,502211,0,0,1,502211,5,2,7,502211,1,0,1,502211,5,2,3,502211,4,2,2,502211,4,2,2,502211,4,2,3,502211,4,2,2,502211,4,2,2,502211,8,4,8,502211,9,4,5,502211,4,2,2,502211,4,2,2,502211,4,2,2,502211,4,2,3,502211,0,502211,991,2008844,35591,14186,3985537664244343,3985600753199698,3985600753201741,3985537668144866
203,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,379,41627,41627,256,256,0,0,36,4,80,64,0x0,0x719d4b647fc0,3,30,2292,0,1,2,284,0,70.0,0.0,1231.0,1180.0,866979.0,1344.0,0.0,0.0,635281,5,2,4,635281,4,2,2,635281,5,2,7,635281,4,2,2,635281,4,2,2,635281,4,2,6,635281,4,2,2,635281,4,2,3,635281,5,2,3,635281,4,2,2,635281,4,2,7,635281,5,2,3,635281,0,0,0,635281,0,0,4,635281,4,2,2,635281,4,2,2,635281,0,635281,0,2541124,36082,14662,3985537664713005,3985600753207028,3985600753209031,3985537669454421
204,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,380,41627,41627,256,256,0,0,24,0,32,64,0x0,0x719d4bc69a40,2,18,1334,0,1,1,292,0,66.0,0.0,1259.0,1210.0,871336.0,1370.0,0.0,0.0,920706,8,4,4,920706,4,2,2,920706,4,2,6,920706,4,2,2,920706,5,2,3,920706,4,2,2,920706,8,3,5,920706,8,4,5,920706,5,2,3,920706,4,2,2,920706,4,2,6,920706,4,2,2,920706,4,2,2,920706,4,2,2,920706,4,2,2,920706,4,2,2,920706,0,920706,0,3682824,36091,14663,3985537665679093,3985600753223373,3985600753225416,3985537670768583
205,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,381,41627,41627,256,256,0,0,36,4,80,64,0x0,0x719d4b253a80,3,30,2445,0,1,2,284,0,70.0,0.0,1387.0,1336.0,878310.0,1498.0,0.0,0.0,2034458,5,2,3,2034458,4,2,3,2034458,8,4,8,2034458,4,2,6,2034458,4,2,2,2034458,4,2,2,2034458,5,2,3,2034458,4,2,3,2034458,2,0,2,2034458,0,0,0,2034458,4,2,7,2034458,4,2,6,2034458,4,2,2,2034458,4,2,2,2034458,4,2,2,2034458,4,2,4,2034458,0,2034458,990,8137832,37341,15913,3985537666158711,3985600753239116,3985600753241119,3985537672162483
206,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,382,41627,41627,256,256,512,0,8,0,32,64,0x0,0x719d4ae8eec0,2,19,1488,0,1,1,61,0,66.0,0.0,1407.0,1360.0,867206.0,1524.0,0.0,0.0,2109277,1,0,5,2109277,0,0,1,2109277,0,0,4,2109277,4,2,2,2109277,0,0,0,2109277,0,0,0,2109277,1,0,1,2109277,0,0,1,2109277,4,2,6,2109277,5,2,3,2109277,4,2,8,2109277,4,2,2,2109277,4,2,2,2109277,4,2,2,2109277,4,2,2,2109277,0,0,1,2109277,0,2109277,989,8437108,35678,14281,3985537667255161,3985600753253697,3985600753255580,3985537673578115
207,__amd_rocclr_copyBuffer.kd,2,0,383,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,8,112,9108,0,4,4,154,0,261.0,0.0,5423.0,5295.0,1051762.0,5670.0,0.0,0.0,1564059,4,2,2,1564059,4,2,7,1564059,4,2,6,1564059,4,2,2,1564059,4,2,2,1564059,4,2,2,1564059,1,0,1,1564059,0,0,1,1564059,0,0,0,1564059,2,2,4,1564059,0,0,4,1564059,0,0,0,1564059,0,0,0,1564059,0,0,0,1564059,0,0,0,1564059,0,0,1,1564059,0,1564059,0,6256236,46377,19350,3985537667803642,3985600753261068,3985600753264994,3985537674793200
208,__amd_rocclr_fillBufferAligned.kd,2,0,385,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,20,1590,0,1,1,93,0,66.0,0.0,1515.0,1467.0,1023590.0,1617.0,0.0,0.0,101282,2,2,0,101282,0,0,6,101282,0,0,4,101282,1,0,1,101282,0,0,4,101282,0,0,0,101282,4,2,2,101282,4,2,3,101282,5,2,3,101282,4,2,6,101282,0,0,4,101282,1,0,1,101282,4,2,6,101282,2,1,2,101282,4,2,2,101282,4,2,2,101282,0,101282,0,405128,42895,15884,3985537675461738,3985600753287908,3985600753289871,3985537676514934
209,__amd_rocclr_fillBufferAligned.kd,2,0,386,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,12,910,0,1,1,93,0,66.0,0.0,835.0,788.0,1016962.0,937.0,0.0,0.0,656626,0,0,0,656626,0,0,0,656626,0,0,0,656626,0,0,0,656626,0,0,0,656626,0,0,0,656626,5,2,3,656626,6,4,2,656626,5,2,3,656626,4,2,2,656626,0,0,0,656626,1,0,1,656626,4,2,2,656626,2,1,1,656626,4,2,2,656626,4,2,2,656626,0,656626,0,2626504,42086,15064,3985537676494334,3985600753293676,3985600753295118,3985537678287874
210,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,387,41627,41627,256,256,0,0,8,0,16,64,0x0,0x719dd8d21100,2,23,1836,0,2,0,24,0,741.0,0.0,904.0,882.0,858136.0,974.0,0.0,0.0,675618,0,0,0,675618,0,0,1,675618,4,2,2,675618,4,2,2,675618,1,0,6,675618,0,0,1,675618,0,0,4,675618,0,0,1,675618,1,0,1,675618,0,0,0,675618,0,0,0,675618,0,0,0,675618,0,0,4,675618,0,0,0,675618,4,2,6,675618,4,2,3,675618,0,675618,982,2702472,34771,13324,3985537676977438,3985600753308218,3985600753310101,3985537679723506
211,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,388,41627,41627,512,512,29184,0,52,4,48,64,0x0,0x719d4ae8f040,3,16,1192,0,2,1,616,0,254.0,0.0,1051.0,985.0,885843.0,1246.0,0.0,0.0,1053414,5,2,7,1053414,4,2,3,1053414,4,2,6,1053414,4,2,2,1053414,4,2,2,1053414,4,2,2,1053414,4,2,2,1053414,4,2,3,1053414,7,3,8,1053414,4,2,2,1053414,4,2,7,1053414,4,2,3,1053414,4,2,2,1053414,2,1,1,1053414,2,1,1,1053414,4,2,3,1053414,0,1053414,989,4213656,38177,16778,3985537677439461,3985600753328848,3985600753331372,3985537681036807
212,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,389,41627,41627,256,256,0,0,8,0,32,64,0x0,0x719d4ae8b900,2,17,1350,0,1,1,78,0,78.0,0.0,1275.0,1212.0,858376.0,1377.0,0.0,0.0,1003321,0,0,4,1003321,0,0,1,1003321,0,0,4,1003321,0,0,0,1003321,0,0,0,1003321,0,0,0,1003321,1,0,1,1003321,0,0,1,1003321,5,2,7,1003321,4,2,2,1003321,1,0,6,1003321,0,0,0,1003321,0,0,0,1003321,4,2,2,1003321,5,2,3,1003321,4,2,2,1003321,0,1003321,0,4013284,34795,13409,3985537678004896,3985600753336460,3985600753338382,3985537682450956
213,__amd_rocclr_copyBuffer.kd,2,0,390,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,8,107,8552,0,4,4,154,0,261.0,0.0,5027.0,4898.0,1049503.0,5273.0,0.0,0.0,936752,4,2,2,936752,4,2,7,936752,4,2,6,936752,4,2,2,936752,5,2,3,936752,4,2,2,936752,0,0,0,936752,0,0,1,936752,0,0,0,936752,0,0,4,936752,0,0,4,936752,0,0,0,936752,2,2,0,936752,0,0,0,936752,0,0,0,936752,0,0,1,936752,0,936752,0,3747008,46125,19100,3985537678790147,3985600753350120,3985600753353885,3985537683843164
214,"void at::native::elementwise_kernel_manual_unroll<128, 4, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}>(int, at::native::gpu_kernel_impl_nocast<at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1}>(at::TensorIteratorBase&, at::native::direct_copy_kernel_cuda(at::TensorIteratorBase&)::{lambda()#3}::operator()() const::{lambda()#7}::operator()() const::{lambda(float)#1} const&)::{lambda(int, bool)#1}) [clone .kd]",2,0,392,41627,41627,1024,128,0,0,20,4,64,64,0x0,0x719dc846ecc0,128,1568,125756,0,64,64,1952,0,9512.0,0.0,15868.0,15331.0,1360878.0,16330.0,0.0,0.0,140714,44,16,32,140714,48,20,30,140714,64,24,44,140714,40,16,24,140714,72,32,44,140714,76,32,44,140714,72,32,40,140714,72,32,44,140714,44,16,32,140714,48,20,28,140714,64,24,44,140714,40,16,24,140714,72,32,44,140714,76,32,45,140714,72,32,40,140714,72,32,44,140714,0,140714,0,562856,86908,65736,3985537684646771,3985600753383289,3985600753387415,3985537685690203
215,"void at::native::reduce_kernel<512, 1, at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4> >(at::native::ReduceOp<float, at::native::func_wrapper_t<float, at::native::MaxNanFunctor<float> >, unsigned int, float, 4, 4>) [clone .kd]",2,0,393,41627,41627,512,512,2560,48,28,4,80,64,0x0,0x719d6cc18380,17,119,9732,0,1,16,821,0,472.0,0.0,1715.0,1407.0,930141.0,1829.0,6.0,0.0,843968,20,6,14,843968,19,5,14,843968,16,4,12,843968,20,6,14,843968,13,2,11,843968,13,2,11,843968,13,2,11,843968,13,2,20,843968,13,2,11,843968,14,3,11,843968,11,1,10,843968,14,3,11,843968,16,4,12,843968,16,4,13,843968,16,4,12,843968,16,4,20,843968,0,843968,75,3375872,43100,21722,3985537685675912,3985600753391060,3985600753395547,3985537686953660
216,"void at::native::vectorized_elementwise_kernel<4, at::native::AbsFunctor<float>, std::array<char*, 2ul> >(int, at::native::AbsFunctor<float>, std::array<char*, 2ul>) [clone .kd]",2,0,394,41627,41627,256,256,0,0,12,4,32,64,0x0,0x719dfcc957c0,2,20,1542,0,1,1,80,0,66.0,0.0,1467.0,1422.0,864956.0,1578.0,0.0,0.0,730684,0,0,0,730684,0,0,5,730684,0,0,0,730684,1,0,1,730684,1,0,5,730684,0,0,0,730684,1,0,1,730684,0,0,1,730684,0,0,0,730684,0,0,5,730684,0,0,0,730684,0,0,0,730684,4,2,6,730684,4,2,2,730684,4,2,3,730684,4,2,3,730684,0,730684,990,2922736,35453,14072,3985537686177663,3985600753412972,3985600753414895,3985537687833931
217,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,395,41627,41627,256,256,0,0,24,0,32,64,0x0,0x719d4bc69a40,2,17,1326,0,1,1,292,0,66.0,0.0,1251.0,1204.0,867663.0,1362.0,0.0,0.0,1192889,9,4,5,1192889,4,2,2,1192889,4,2,6,1192889,5,2,3,1192889,4,2,2,1192889,4,2,2,1192889,8,3,5,1192889,8,4,5,1192889,4,2,2,1192889,4,2,2,1192889,4,2,6,1192889,4,2,2,1192889,4,2,2,1192889,4,2,2,1192889,4,2,2,1192889,4,2,2,1192889,0,1192889,0,4771556,36158,14746,3985537687169168,3985600753420984,3985600753423308,3985537688827128
218,"void at::native::vectorized_elementwise_kernel<4, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 3ul>) [clone .kd]",2,0,396,41627,41627,256,256,0,0,40,0,32,64,0x0,0x719d4bc69840,3,28,2181,0,1,2,292,0,70.0,0.0,1167.0,1116.0,866766.0,1278.0,0.0,0.0,770893,1,0,1,770893,0,0,0,770893,5,2,7,770893,1,0,1,770893,5,2,3,770893,4,2,2,770893,4,2,2,770893,4,2,3,770893,4,2,2,770893,4,2,2,770893,8,4,8,770893,8,4,4,770893,4,2,2,770893,4,2,2,770893,4,2,2,770893,4,2,2,770893,0,770893,0,3083572,35635,14309,3985537688137529,3985600753430879,3985600753432962,3985537690135241
219,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::binary_internal::MulFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,397,41627,41627,256,256,0,0,36,4,80,64,0x0,0x719d4b647fc0,3,29,2348,0,1,2,284,0,70.0,0.0,1275.0,1224.0,871218.0,1388.0,0.0,0.0,476237,6,2,5,476237,4,2,3,476237,5,2,7,476237,4,2,2,476237,4,2,2,476237,4,2,6,476237,4,2,2,476237,4,2,3,476237,5,2,3,476237,4,2,2,476237,4,2,7,476237,4,2,2,476237,0,0,0,476237,0,0,4,476237,4,2,2,476237,4,2,3,476237,0,476237,987,1904948,36552,15142,3985537689096056,3985600753439852,3985600753441935,3985537691570592
220,"void at::native::vectorized_elementwise_kernel<4, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul> >(int, at::native::AUnaryFunctor<float, float, bool, at::native::(anonymous namespace)::CompareEqFunctor<float> >, std::array<char*, 2ul>) [clone .kd]",2,0,398,41627,41627,256,256,0,0,24,0,32,64,0x0,0x719d4bc69a40,2,17,1382,0,1,1,292,0,66.0,0.0,1307.0,1260.0,873946.0,1418.0,0.0,0.0,981524,8,4,4,981524,5,2,4,981524,4,2,6,981524,4,2,2,981524,5,2,3,981524,4,2,2,981524,8,3,5,981524,8,4,5,981524,4,2,2,981524,4,2,2,981524,4,2,6,981524,4,2,2,981524,4,2,2,981524,4,2,2,981524,4,2,2,981524,4,2,3,981524,0,981524,991,3926096,36353,14903,3985537689563927,3985600753455876,3985600753458079,3985537692905235
221,"void at::native::vectorized_elementwise_kernel<16, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul> >(int, at::native::BinaryFunctor<bool, bool, bool, at::native::BitwiseAndFunctor<bool> >, std::array<char*, 3ul>) [clone .kd]",2,0,399,41627,41627,256,256,0,0,36,4,80,64,0x0,0x719d4b253a80,3,34,2589,0,1,2,284,0,70.0,0.0,1371.0,1318.0,879435.0,1482.0,0.0,0.0,1065561,5,2,3,1065561,5,2,3,1065561,8,4,8,1065561,4,2,6,1065561,4,2,2,1065561,4,2,2,1065561,5,2,3,1065561,4,2,3,1065561,1,0,1,1065561,0,0,0,1065561,4,2,7,1065561,4,2,6,1065561,4,2,2,1065561,4,2,2,1065561,4,2,2,1065561,4,2,3,1065561,0,1065561,0,4262244,37466,16073,3985537690677843,3985600753471098,3985600753473261,3985537694331322
222,"void rocprim::detail::block_reduce_kernel<true, false, 16u, rocprim::detail::wrapped_reduce_config<rocprim::default_config, int>, int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum> >(hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, unsigned long, int*, int, hipcub::detail::convert_binary_result_type_wrapper<int, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, int*, hipcub::Sum>) [clone .kd]",2,0,400,41627,41627,256,256,512,0,8,0,32,64,0x0,0x719d4ae8eec0,2,17,1414,0,1,1,61,0,66.0,0.0,1339.0,1294.0,868966.0,1450.0,0.0,0.0,1059515,1,0,5,1059515,0,0,0,1059515,0,0,4,1059515,4,2,2,1059515,0,0,0,1059515,0,0,0,1059515,2,0,2,1059515,0,0,1,1059515,4,2,6,1059515,4,2,2,1059515,4,2,8,1059515,4,2,2,1059515,4,2,2,1059515,4,2,2,1059515,4,2,2,1059515,0,0,0,1059515,0,1059515,0,4238060,35854,14455,3985537691239002,3985600753487162,3985600753489085,3985537695731642
223,__amd_rocclr_copyBuffer.kd,2,0,401,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,8,108,8612,0,4,4,154,0,261.0,0.0,5051.0,4924.0,1050052.0,5298.0,0.0,0.0,558018,4,2,2,558018,4,2,8,558018,4,2,6,558018,4,2,2,558018,4,2,2,558018,4,2,2,558018,3,2,1,558018,0,0,1,558018,0,0,0,558018,0,0,4,558018,0,0,4,558018,0,0,0,558018,0,0,0,558018,0,0,0,558018,0,0,0,558018,0,0,2,558018,0,558018,989,2232072,46186,19168,3985537692054277,3985600753494132,3985600753497137,3985537697136598
224,__amd_rocclr_fillBufferAligned.kd,2,0,403,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,24,1914,0,1,1,93,0,66.0,0.0,1839.0,1789.0,1028610.0,1941.0,0.0,0.0,100809,0,0,0,100809,0,0,6,100809,0,0,4,100809,0,0,0,100809,1,0,5,100809,2,2,0,100809,4,2,2,100809,4,2,3,100809,5,2,3,100809,4,2,6,100809,0,0,4,100809,1,0,1,100809,4,2,6,100809,2,1,2,100809,4,2,2,100809,4,2,2,100809,0,100809,77,403236,43396,16360,3985537697959654,3985600753525979,3985600753527702,3985537699056064
225,__amd_rocclr_fillBufferAligned.kd,2,0,404,41627,41627,256,256,0,0,12,4,48,64,0x0,0x719dfe9f3a00,2,15,1156,0,1,1,93,0,66.0,0.0,1075.0,1027.0,1021820.0,1184.0,0.0,0.0,581859,0,0,0,581859,0,0,0,581859,0,0,0,581859,0,0,0,581859,0,0,0,581859,0,0,0,581859,4,2,2,581859,4,2,2,581859,5,2,3,581859,4,2,2,581859,0,0,0,581859,1,0,1,581859,6,4,2,581859,2,1,1,581859,4,2,2,581859,5,2,3,581859,0,581859,0,2327436,42521,15498,3985537699035003,3985600753531668,3985600753533150,3985537700868522
226,"void rocprim::detail::init_lookback_scan_state_kernel<rocprim::detail::lookback_scan_state<unsigned int, false, true> const>(rocprim::detail::lookback_scan_state<unsigned int, false, true> const, unsigned int, unsigned int, rocprim::detail::lookback_scan_state<unsigned int, false, true> const::value_type*) [clone .kd]",2,0,405,41627,41627,256,256,0,0,8,0,16,64,0x0,0x719dd8d21100,2,21,1770,0,2,0,24,0,719.0,0.0,872.0,848.0,856166.0,941.0,0.0,0.0,1015951,0,0,0,1015951,0,0,0,1015951,4,2,2,1015951,4,2,2,1015951,0,0,5,1015951,0,0,1,1015951,0,0,4,1015951,0,0,1,1015951,1,0,1,1015951,0,0,0,1015951,0,0,0,1015951,0,0,0,1015951,0,0,4,1015951,1,0,1,1015951,4,2,6,1015951,4,2,2,1015951,0,1015951,0,4063804,34575,13164,3985537699503064,3985600753536875,3985600753538798,3985537702300328
227,"void rocprim::detail::partition_kernel<(rocprim::detail::select_method)0, true, rocprim::detail::wrapped_partition_config<rocprim::default_config, (rocprim::detail::partition_subalgo)5, long, rocprim::empty_type>, hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, rocprim::empty_type>(hipcub::CountingInputIterator<long, long>, rocprim::empty_type*, hipcub::TransformInputIterator<bool, at::native::(anonymous namespace)::NonZeroOp<bool>, bool const*, long>, rocprim::tuple<long*, rocprim::empty_type>, rocprim::tuple<rocprim::empty_type*, rocprim::empty_type*>, unsigned long*, unsigned long*, unsigned long, unsigned long, rocprim::empty_type, rocprim::detail::lookback_scan_state<unsigned int, false, true>, unsigned int, rocprim::empty_type) [clone .kd]",2,0,406,41627,41627,512,512,29184,0,52,4,48,64,0x0,0x719d4ae8f040,3,14,1124,0,2,1,616,0,234.0,0.0,983.0,910.0,885384.0,1178.0,0.0,0.0,1066870,5,2,7,1066870,4,2,2,1066870,4,2,6,1066870,4,2,2,1066870,4,2,2,1066870,4,2,2,1066870,4,2,2,1066870,4,2,3,1066870,7,3,8,1066870,4,2,2,1066870,4,2,7,1066870,6,3,4,1066870,4,2,2,1066870,2,1,1,1066870,0,0,0,1066870,4,2,2,1066870,0,1066870,0,4267480,38126,16698,3985537699958547,3985600753548452,3985600753551257,3985537703684333
228,"void rocprim::detail::transform_kernel<rocprim::detail::wrapped_transform_config<rocprim::default_config, unsigned long>, unsigned long, unsigned long*, int*, rocprim::identity<void> >(unsigned long*, unsigned long, int*, rocprim::identity<void>) [clone .kd]",2,0,407,41627,41627,256,256,0,0,8,0,32,64,0x0,0x719d4ae8b900,2,16,1278,0,1,1,78,0,78.0,0.0,1203.0,1142.0,859486.0,1305.0,0.0,0.0,1054315,0,0,4,1054315,0,0,2,1054315,0,0,4,1054315,0,0,0,1054315,0,0,0,1054315,0,0,0,1054315,1,0,1,1054315,0,0,1,1054315,5,2,7,1054315,4,2,2,1054315,1,0,6,1054315,1,0,1,1054315,0,0,0,1054315,4,2,2,1054315,4,2,2,1054315,4,2,3,1054315,0,1054315,990,4217260,34907,13489,3985537700494780,3985600753564997,3985600753566960,3985537705048769
229,__amd_rocclr_copyBuffer.kd,2,0,408,41627,41627,512,512,0,0,16,0,32,64,0x0,0x719dfe9f3a80,8,103,8212,0,4,4,154,0,261.0,0.0,4819.0,4693.0,1047955.0,5084.0,0.0,0.0,1040602,4,2,2,1040602,4,2,8,1040602,4,2,6,1040602,4,2,2,1040602,5,2,3,1040602,4,2,2,1040602,0,0,0,1040602,0,0,1,1040602,0,0,0,1040602,2,2,4,1040602,0,0,4,1040602,0,0,0,1040602,0,0,0,1040602,0,0,0,1040602,0,0,0,1040602,0,0,2,1040602,0,1040602,991,4162408,45953,18922,3985537701370604,3985600753579258,3985600753582463,3985537706448648
