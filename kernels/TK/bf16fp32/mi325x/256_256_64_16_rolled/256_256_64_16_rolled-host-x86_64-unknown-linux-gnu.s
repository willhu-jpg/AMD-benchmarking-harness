	.text
	.file	"256_256_64_16_rolled.cpp"
                                        # Start of file scope inline assembly
	.globl	_ZSt21ios_base_library_initv

                                        # End of file scope inline assembly
	.section	.text._ZNK8pybind1117error_already_set4whatEv,"axG",@progbits,_ZNK8pybind1117error_already_set4whatEv,comdat
	.hidden	_ZNK8pybind1117error_already_set4whatEv # -- Begin function _ZNK8pybind1117error_already_set4whatEv
	.weak	_ZNK8pybind1117error_already_set4whatEv
	.p2align	4, 0x90
	.type	_ZNK8pybind1117error_already_set4whatEv,@function
_ZNK8pybind1117error_already_set4whatEv: # @_ZNK8pybind1117error_already_set4whatEv
.Lfunc_begin0:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception0
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$48, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp0:
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind1118gil_scoped_acquireC2Ev
.Ltmp1:
# %bb.1:
	leaq	16(%rsp), %rsi
	leaq	24(%rsp), %rdx
.Ltmp2:
	leaq	8(%rsp), %rdi
	callq	PyErr_Fetch@PLT
.Ltmp3:
# %bb.2:                                # %_ZN8pybind1111error_scopeC2Ev.exit
	movq	8(%rbx), %rdi
.Ltmp4:
	callq	_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev
.Ltmp5:
# %bb.3:
	movq	(%rax), %rbx
	movq	8(%rsp), %rdi
	movq	16(%rsp), %rsi
	movq	24(%rsp), %rdx
.Ltmp7:
	callq	PyErr_Restore@PLT
.Ltmp8:
# %bb.4:                                # %_ZN8pybind1111error_scopeD2Ev.exit
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind1118gil_scoped_acquireD2Ev
	movq	%rbx, %rax
	addq	$48, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB0_6:
	.cfi_def_cfa_offset 64
.Ltmp9:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_5:
.Ltmp6:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end0:
	.size	_ZNK8pybind1117error_already_set4whatEv, .Lfunc_end0-_ZNK8pybind1117error_already_set4whatEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind1117error_already_set4whatEv,"aG",@progbits,_ZNK8pybind1117error_already_set4whatEv,comdat
	.p2align	2, 0x0
GCC_except_table0:
.Lexception0:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase0-.Lttbaseref0
.Lttbaseref0:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end0-.Lcst_begin0
.Lcst_begin0:
	.uleb128 .Ltmp0-.Lfunc_begin0           # >> Call Site 1 <<
	.uleb128 .Ltmp5-.Ltmp0                  #   Call between .Ltmp0 and .Ltmp5
	.uleb128 .Ltmp6-.Lfunc_begin0           #     jumps to .Ltmp6
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp7-.Lfunc_begin0           # >> Call Site 2 <<
	.uleb128 .Ltmp8-.Ltmp7                  #   Call between .Ltmp7 and .Ltmp8
	.uleb128 .Ltmp9-.Lfunc_begin0           #     jumps to .Ltmp9
	.byte	1                               #   On action: 1
.Lcst_end0:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase0:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1118gil_scoped_acquireC2Ev,"axG",@progbits,_ZN8pybind1118gil_scoped_acquireC2Ev,comdat
	.hidden	_ZN8pybind1118gil_scoped_acquireC2Ev # -- Begin function _ZN8pybind1118gil_scoped_acquireC2Ev
	.weak	_ZN8pybind1118gil_scoped_acquireC2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind1118gil_scoped_acquireC2Ev,@function
_ZN8pybind1118gil_scoped_acquireC2Ev:   # @_ZN8pybind1118gil_scoped_acquireC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	$0, (%rdi)
	movw	$257, 8(%rdi)                   # imm = 0x101
	callq	_ZN8pybind116detail13get_internalsEv
	movq	%rax, %r15
	leaq	432(%rax), %r14
	movq	%r14, %rdi
	callq	PyThread_tss_get@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	jne	.LBB1_4
# %bb.1:
	callq	PyGILState_GetThisThreadState@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB1_2
.LBB1_4:                                # %.thread
	callq	_PyThreadState_UncheckedGet@PLT
	movq	(%rbx), %rdi
	cmpq	%rdi, %rax
	setne	8(%rbx)
	je	.LBB1_7
.LBB1_6:                                # %._crit_edge
	callq	PyEval_AcquireThread@PLT
	movq	(%rbx), %rdi
.LBB1_7:
	incl	120(%rdi)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB1_2:
	.cfi_def_cfa_offset 32
	movq	448(%r15), %rdi
	callq	PyThreadState_New@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB1_3
# %bb.5:
	movl	$0, 120(%rax)
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	PyThread_tss_set@PLT
	movq	(%rbx), %rdi
	testb	$1, 8(%rbx)
	jne	.LBB1_6
	jmp	.LBB1_7
.LBB1_3:
	leaq	.L.str.4(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Lfunc_end1:
	.size	_ZN8pybind1118gil_scoped_acquireC2Ev, .Lfunc_end1-_ZN8pybind1118gil_scoped_acquireC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text.__clang_call_terminate,"axG",@progbits,__clang_call_terminate,comdat
	.hidden	__clang_call_terminate          # -- Begin function __clang_call_terminate
	.weak	__clang_call_terminate
	.p2align	4, 0x90
	.type	__clang_call_terminate,@function
__clang_call_terminate:                 # @__clang_call_terminate
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	callq	__cxa_begin_catch@PLT
	callq	_ZSt9terminatev@PLT
.Lfunc_end2:
	.size	__clang_call_terminate, .Lfunc_end2-__clang_call_terminate
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev,"axG",@progbits,_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev,comdat
	.hidden	_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev # -- Begin function _ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev
	.weak	_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev
	.p2align	4, 0x90
	.type	_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev,@function
_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev: # @_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev
.Lfunc_begin1:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception1
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	cmpb	$0, 56(%rdi)
	jne	.LBB3_39
# %bb.1:
	leaq	8(%rsp), %rdi
	movq	%rbx, %rsi
	callq	_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev
	movq	16(%rsp), %r12
	movq	%r12, %rax
	shrq	%rax
	movabsq	$4611686018427387903, %rcx      # imm = 0x3FFFFFFFFFFFFFFF
	cmpq	%rcx, %rax
	je	.LBB3_44
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	leaq	2(%r12), %r14
	movq	8(%rsp), %r15
	leaq	24(%rsp), %rax
	cmpq	%rax, %r15
	je	.LBB3_13
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.thread
	movq	24(%rsp), %r13
	movq	%r13, %rax
	cmpq	%r13, %r14
	jbe	.LBB3_16
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i19
	cmpq	$-3, %r12
	jle	.LBB3_15
.LBB3_5:
	addq	%rax, %rax
	movabsq	$9223372036854775807, %rbp      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rbp, %rax
	cmovbq	%rax, %rbp
	cmpq	%rax, %r14
	cmovaeq	%r14, %rbp
	movq	%rbp, %rdi
	incq	%rdi
	js	.LBB3_42
# %bb.6:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i
.Ltmp12:
	callq	_Znwm@PLT
.Ltmp13:
# %bb.7:                                # %.noexc24
	movq	%rax, %rcx
	movw	$8250, (%rax)                   # imm = 0x203A
	testq	%r12, %r12
	je	.LBB3_10
# %bb.8:
	movq	%rcx, %rdi
	addq	$2, %rdi
	cmpq	$1, %r12
	jne	.LBB3_40
# %bb.9:
	movzbl	(%r15), %eax
	movb	%al, (%rdi)
.LBB3_10:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit27.i
	leaq	24(%rsp), %rax
	cmpq	%rax, %r15
	je	.LBB3_12
.LBB3_11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i20
	incq	%r13
	movq	%r15, %rdi
	movq	%r13, %rsi
	movq	%rcx, %r15
	callq	_ZdlPvm@PLT
	movq	%r15, %rcx
.LBB3_12:                               # %.noexc18
	movq	%rcx, 8(%rsp)
	movq	%rbp, 24(%rsp)
	jmp	.LBB3_22
.LBB3_13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i
	cmpq	$15, %r14
	jbe	.LBB3_16
# %bb.14:
	movl	$15, %eax
	movq	24(%rsp), %r13
	cmpq	$-3, %r12
	jg	.LBB3_5
.LBB3_15:
	leaq	.L.str.10(%rip), %rdi
	jmp	.LBB3_45
.LBB3_16:
	leaq	.L.str.7(%rip), %rax
	cmpq	%rax, %r15
	seta	%cl
	leaq	(%r15,%r12), %rdx
	cmpq	%rax, %rdx
	setb	%al
	orb	%cl, %al
	cmpb	$1, %al
	jne	.LBB3_41
# %bb.17:
	testq	%r12, %r12
	je	.LBB3_21
# %bb.18:
	cmpq	$1, %r12
	jne	.LBB3_20
# %bb.19:
	movzbl	(%r15), %eax
	movb	%al, 2(%r15)
	jmp	.LBB3_21
.LBB3_20:
	leaq	2(%r15), %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memmove@PLT
.LBB3_21:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm.exit.i
	movw	$8250, (%r15)                   # imm = 0x203A
.LBB3_22:                               # %.noexc
	movabsq	$9223372036854775806, %r13      # imm = 0x7FFFFFFFFFFFFFFE
	movq	%r14, 16(%rsp)
	movq	8(%rsp), %rax
	movb	$0, (%rax,%r14)
	leaq	56(%rsp), %r15
	movq	%r15, 40(%rsp)
	movq	8(%rsp), %rcx
	leaq	24(%rsp), %r14
	cmpq	%r14, %rcx
	je	.LBB3_24
# %bb.23:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	%rcx, 40(%rsp)
	movq	16(%rsp), %r12
	movq	24(%rsp), %rax
	movq	%rax, 56(%rsp)
	jmp	.LBB3_25
.LBB3_24:
	movq	16(%rsp), %r12
	leaq	1(%r12), %rdx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	memcpy@PLT
	movq	%r15, %rcx
.LBB3_25:
	movq	%r12, 48(%rsp)
	movq	%r14, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
	movq	32(%rbx), %rsi
	subq	%rsi, %r13
	incq	%r13
	cmpq	%r12, %r13
	jb	.LBB3_47
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	leaq	(%rsi,%r12), %r14
	movq	24(%rbx), %rdi
	leaq	40(%rbx), %rdx
	movl	$15, %eax
	cmpq	%rdx, %rdi
	je	.LBB3_28
# %bb.27:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	movq	40(%rbx), %rax
.LBB3_28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	cmpq	%rax, %r14
	jbe	.LBB3_30
# %bb.29:
.Ltmp14:
	leaq	24(%rbx), %rdi
	xorl	%edx, %edx
	movq	%r12, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp15:
	jmp	.LBB3_34
.LBB3_30:
	testq	%r12, %r12
	je	.LBB3_34
# %bb.31:
	addq	%rsi, %rdi
	cmpq	$1, %r12
	jne	.LBB3_33
# %bb.32:
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB3_34
.LBB3_33:
	movq	%rcx, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB3_34:
	movq	%r14, 32(%rbx)
	movq	24(%rbx), %rax
	movb	$0, (%rax,%r14)
	movq	40(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB3_36
# %bb.35:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6
	movq	56(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB3_36:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_38
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i7
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB3_38:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit9
	movb	$1, 56(%rbx)
.LBB3_39:
	addq	$24, %rbx
	movq	%rbx, %rax
	addq	$72, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB3_40:
	.cfi_def_cfa_offset 128
	movq	%r15, %rsi
	movq	%r12, %rdx
	movq	%rcx, %r12
	callq	memcpy@PLT
	movq	%r12, %rcx
	leaq	24(%rsp), %rax
	cmpq	%rax, %r15
	jne	.LBB3_11
	jmp	.LBB3_12
.LBB3_41:
.Ltmp10:
	leaq	.L.str.7(%rip), %rcx
	leaq	8(%rsp), %rdi
	movl	$2, %r8d
	movq	%r15, %rsi
	xorl	%edx, %edx
	movq	%r12, %r9
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@PLT
.Ltmp11:
	jmp	.LBB3_22
.LBB3_42:
.Ltmp19:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp20:
# %bb.43:                               # %.noexc23
.LBB3_44:
	leaq	.L.str.9(%rip), %rdi
.LBB3_45:                               # %.invoke
.Ltmp21:
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp22:
# %bb.46:                               # %.cont
.LBB3_47:
.Ltmp16:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp17:
# %bb.48:                               # %.noexc4
.LBB3_49:
.Ltmp18:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	cmpq	%r15, %rdi
	jne	.LBB3_52
# %bb.50:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit12
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB3_54
.LBB3_51:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit15
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB3_52:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i10
	movq	56(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_51
	jmp	.LBB3_54
.LBB3_53:
.Ltmp23:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_51
.LBB3_54:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i13
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end3:
	.size	_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev, .Lfunc_end3-_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev,"aG",@progbits,_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev,comdat
	.p2align	2, 0x0
GCC_except_table3:
.Lexception1:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end1-.Lcst_begin1
.Lcst_begin1:
	.uleb128 .Lfunc_begin1-.Lfunc_begin1    # >> Call Site 1 <<
	.uleb128 .Ltmp12-.Lfunc_begin1          #   Call between .Lfunc_begin1 and .Ltmp12
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp12-.Lfunc_begin1          # >> Call Site 2 <<
	.uleb128 .Ltmp13-.Ltmp12                #   Call between .Ltmp12 and .Ltmp13
	.uleb128 .Ltmp23-.Lfunc_begin1          #     jumps to .Ltmp23
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp13-.Lfunc_begin1          # >> Call Site 3 <<
	.uleb128 .Ltmp14-.Ltmp13                #   Call between .Ltmp13 and .Ltmp14
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp14-.Lfunc_begin1          # >> Call Site 4 <<
	.uleb128 .Ltmp15-.Ltmp14                #   Call between .Ltmp14 and .Ltmp15
	.uleb128 .Ltmp18-.Lfunc_begin1          #     jumps to .Ltmp18
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp15-.Lfunc_begin1          # >> Call Site 5 <<
	.uleb128 .Ltmp10-.Ltmp15                #   Call between .Ltmp15 and .Ltmp10
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp10-.Lfunc_begin1          # >> Call Site 6 <<
	.uleb128 .Ltmp22-.Ltmp10                #   Call between .Ltmp10 and .Ltmp22
	.uleb128 .Ltmp23-.Lfunc_begin1          #     jumps to .Ltmp23
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp16-.Lfunc_begin1          # >> Call Site 7 <<
	.uleb128 .Ltmp17-.Ltmp16                #   Call between .Ltmp16 and .Ltmp17
	.uleb128 .Ltmp18-.Lfunc_begin1          #     jumps to .Ltmp18
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp17-.Lfunc_begin1          # >> Call Site 8 <<
	.uleb128 .Lfunc_end3-.Ltmp17            #   Call between .Ltmp17 and .Lfunc_end3
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end1:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1111error_scopeD2Ev,"axG",@progbits,_ZN8pybind1111error_scopeD2Ev,comdat
	.hidden	_ZN8pybind1111error_scopeD2Ev   # -- Begin function _ZN8pybind1111error_scopeD2Ev
	.weak	_ZN8pybind1111error_scopeD2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind1111error_scopeD2Ev,@function
_ZN8pybind1111error_scopeD2Ev:          # @_ZN8pybind1111error_scopeD2Ev
.Lfunc_begin2:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception2
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	movq	16(%rdi), %rdx
.Ltmp24:
	movq	%rax, %rdi
	callq	PyErr_Restore@PLT
.Ltmp25:
# %bb.1:
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.LBB4_2:
	.cfi_def_cfa_offset 16
.Ltmp26:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end4:
	.size	_ZN8pybind1111error_scopeD2Ev, .Lfunc_end4-_ZN8pybind1111error_scopeD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1111error_scopeD2Ev,"aG",@progbits,_ZN8pybind1111error_scopeD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table4:
.Lexception2:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase1-.Lttbaseref1
.Lttbaseref1:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end2-.Lcst_begin2
.Lcst_begin2:
	.uleb128 .Ltmp24-.Lfunc_begin2          # >> Call Site 1 <<
	.uleb128 .Ltmp25-.Ltmp24                #   Call between .Ltmp24 and .Ltmp25
	.uleb128 .Ltmp26-.Lfunc_begin2          #     jumps to .Ltmp26
	.byte	1                               #   On action: 1
.Lcst_end2:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase1:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1118gil_scoped_acquireD2Ev,"axG",@progbits,_ZN8pybind1118gil_scoped_acquireD2Ev,comdat
	.hidden	_ZN8pybind1118gil_scoped_acquireD2Ev # -- Begin function _ZN8pybind1118gil_scoped_acquireD2Ev
	.weak	_ZN8pybind1118gil_scoped_acquireD2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind1118gil_scoped_acquireD2Ev,@function
_ZN8pybind1118gil_scoped_acquireD2Ev:   # @_ZN8pybind1118gil_scoped_acquireD2Ev
.Lfunc_begin3:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception3
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp27:
	callq	_ZN8pybind1118gil_scoped_acquire7dec_refEv
.Ltmp28:
# %bb.1:
	cmpb	$1, 8(%rbx)
	jne	.LBB5_3
# %bb.2:
.Ltmp29:
	callq	PyEval_SaveThread@PLT
.Ltmp30:
.LBB5_3:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB5_4:
	.cfi_def_cfa_offset 16
.Ltmp31:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end5:
	.size	_ZN8pybind1118gil_scoped_acquireD2Ev, .Lfunc_end5-_ZN8pybind1118gil_scoped_acquireD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1118gil_scoped_acquireD2Ev,"aG",@progbits,_ZN8pybind1118gil_scoped_acquireD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table5:
.Lexception3:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase2-.Lttbaseref2
.Lttbaseref2:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end3-.Lcst_begin3
.Lcst_begin3:
	.uleb128 .Ltmp27-.Lfunc_begin3          # >> Call Site 1 <<
	.uleb128 .Ltmp30-.Ltmp27                #   Call between .Ltmp27 and .Ltmp30
	.uleb128 .Ltmp31-.Lfunc_begin3          #     jumps to .Ltmp31
	.byte	1                               #   On action: 1
.Lcst_end3:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase2:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_Z23__device_stub__micro_tk13micro_globals # -- Begin function _Z23__device_stub__micro_tk13micro_globals
	.p2align	4, 0x90
	.type	_Z23__device_stub__micro_tk13micro_globals,@function
_Z23__device_stub__micro_tk13micro_globals: # @_Z23__device_stub__micro_tk13micro_globals
	.cfi_startproc
# %bb.0:
	subq	$56, %rsp
	.cfi_def_cfa_offset 64
	movq	%rdi, (%rsp)
	leaq	40(%rsp), %rdi
	leaq	24(%rsp), %rsi
	leaq	16(%rsp), %rdx
	leaq	8(%rsp), %rcx
	callq	__hipPopCallConfiguration@PLT
	movq	40(%rsp), %rsi
	movl	48(%rsp), %edx
	movq	24(%rsp), %rcx
	movl	32(%rsp), %r8d
	movq	_Z8micro_tk13micro_globals@GOTPCREL(%rip), %rdi
	movq	%rsp, %r9
	pushq	8(%rsp)
	.cfi_adjust_cfa_offset 8
	pushq	24(%rsp)
	.cfi_adjust_cfa_offset 8
	callq	hipLaunchKernel@PLT
	addq	$72, %rsp
	.cfi_adjust_cfa_offset -72
	retq
.Lfunc_end6:
	.size	_Z23__device_stub__micro_tk13micro_globals, .Lfunc_end6-_Z23__device_stub__micro_tk13micro_globals
	.cfi_endproc
                                        # -- End function
	.globl	_Z14dispatch_micro13micro_globals # -- Begin function _Z14dispatch_micro13micro_globals
	.p2align	4, 0x90
	.type	_Z14dispatch_micro13micro_globals,@function
_Z14dispatch_micro13micro_globals:      # @_Z14dispatch_micro13micro_globals
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$208, %rsp
	.cfi_def_cfa_offset 224
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	_Z8micro_tk13micro_globals@GOTPCREL(%rip), %rdi
	movl	$8, %esi
	movl	$65536, %edx                    # imm = 0x10000
	callq	hipFuncSetAttribute@PLT
	movabsq	$137438953504, %rdi             # imm = 0x2000000020
	movabsq	$4294967808, %rdx               # imm = 0x100000200
	movl	$65536, %r8d                    # imm = 0x10000
	movl	$1, %esi
	movl	$1, %ecx
	xorl	%r9d, %r9d
	callq	__hipPushCallConfiguration@PLT
	testl	%eax, %eax
	je	.LBB7_1
# %bb.2:
	callq	hipDeviceSynchronize@PLT
	addq	$208, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB7_1:
	.cfi_def_cfa_offset 224
	movq	(%rbx), %rax
	movq	%rax, 64(%rsp)
	movups	8(%rbx), %xmm0
	movups	%xmm0, 72(%rsp)
	movups	24(%rbx), %xmm0
	movups	%xmm0, 88(%rsp)
	movq	48(%rbx), %rax
	movq	%rax, 112(%rsp)
	movups	56(%rbx), %xmm0
	movups	%xmm0, 120(%rsp)
	movups	72(%rbx), %xmm0
	movups	%xmm0, 136(%rsp)
	movq	96(%rbx), %rax
	movq	%rax, 160(%rsp)
	movups	104(%rbx), %xmm0
	movups	%xmm0, 168(%rsp)
	movups	120(%rbx), %xmm0
	movups	%xmm0, 184(%rsp)
	leaq	64(%rsp), %rax
	movq	%rax, (%rsp)
	leaq	48(%rsp), %rdi
	leaq	32(%rsp), %rsi
	leaq	24(%rsp), %rdx
	leaq	16(%rsp), %rcx
	callq	__hipPopCallConfiguration@PLT
	movq	48(%rsp), %rsi
	movl	56(%rsp), %edx
	movq	32(%rsp), %rcx
	movl	40(%rsp), %r8d
	movq	_Z8micro_tk13micro_globals@GOTPCREL(%rip), %rdi
	movq	%rsp, %r9
	pushq	16(%rsp)
	.cfi_adjust_cfa_offset 8
	pushq	32(%rsp)
	.cfi_adjust_cfa_offset 8
	callq	hipLaunchKernel@PLT
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	callq	hipDeviceSynchronize@PLT
	addq	$208, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end7:
	.size	_Z14dispatch_micro13micro_globals, .Lfunc_end7-_Z14dispatch_micro13micro_globals
	.cfi_endproc
                                        # -- End function
	.globl	PyInit_tk_kernel                # -- Begin function PyInit_tk_kernel
	.p2align	4, 0x90
	.type	PyInit_tk_kernel,@function
PyInit_tk_kernel:                       # @PyInit_tk_kernel
.Lfunc_begin4:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception4
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$80, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	callq	Py_GetVersion@PLT
	movq	%rax, %r14
	leaq	.L.str(%rip), %rsi
	movl	$4, %edx
	movq	%rax, %rdi
	callq	strncmp@PLT
	testl	%eax, %eax
	jne	.LBB8_2
# %bb.1:
	movzbl	4(%r14), %eax
	addb	$-48, %al
	cmpb	$9, %al
	ja	.LBB8_4
.LBB8_2:
	movq	PyExc_ImportError@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
	leaq	.L.str.1(%rip), %rsi
	leaq	.L.str(%rip), %rdx
	xorl	%ebx, %ebx
	movq	%r14, %rcx
	xorl	%eax, %eax
	callq	PyErr_Format@PLT
.LBB8_3:
	movq	%rbx, %rax
	addq	$80, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB8_4:
	.cfi_def_cfa_offset 128
	callq	_ZN8pybind116detail13get_internalsEv
	leaq	.L.str.2(%rip), %rsi
	leaq	_ZL29pybind11_module_def_tk_kernel(%rip), %rcx
	leaq	24(%rsp), %rdi
	xorl	%edx, %edx
	xorl	%r8d, %r8d
	callq	_ZN8pybind117module_23create_extension_moduleEPKcS2_P11PyModuleDefNS_16mod_gil_not_usedE
	movq	24(%rsp), %rax
	movq	%rax, 56(%rsp)
	leaq	.L.str.177(%rip), %rax
	movq	%rax, 64(%rsp)
	leaq	72(%rsp), %r15
	movq	$0, 72(%rsp)
.Ltmp32:
	leaq	.L.str.174(%rip), %rsi
	leaq	48(%rsp), %rdi
	callq	_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_
.Ltmp33:
# %bb.5:
.Ltmp38:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp39:
# %bb.6:                                # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit.i
	movq	24(%rsp), %rax
	movq	%rax, 40(%rsp)
.Ltmp41:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp42:
# %bb.7:                                # %.noexc
	movq	40(%rsp), %rbx
	movq	_Py_NoneStruct@GOTPCREL(%rip), %r12
	movq	%r12, 16(%rsp)
.Ltmp43:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp44:
# %bb.8:                                # %.noexc.i
	movq	16(%rsp), %r13
.Ltmp46:
	leaq	.L.str.175(%rip), %r14
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	PyObject_GetAttrString@PLT
.Ltmp47:
# %bb.9:                                # %.noexc.i.i.i
	movq	%rax, %r15
	testq	%rax, %rax
	je	.LBB8_11
# %bb.10:
	movq	%r15, 8(%rsp)
	jmp	.LBB8_14
.LBB8_11:
.Ltmp48:
	callq	PyErr_Clear@PLT
.Ltmp49:
# %bb.12:                               # %.noexc13.i.i.i
	movq	%r13, 8(%rsp)
.Ltmp50:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp51:
# %bb.13:                               # %.noexc13._crit_edge.i.i.i
	movq	8(%rsp), %r15
.LBB8_14:
	movq	$0, (%rsp)
.Ltmp53:
	leaq	48(%rsp), %rdi
	movq	%rsp, %rsi
	callq	_ZN8pybind1112cpp_function20make_function_recordEv
.Ltmp54:
# %bb.15:                               # %.noexc.i.i.i.i
	movq	48(%rsp), %rax
	leaq	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeES10_(%rip), %rcx
	movq	%rcx, 48(%rax)
	movw	$3, 94(%rax)
	andb	$63, 89(%rax)
	movq	%r14, (%rax)
	movq	%rbx, 112(%rax)
	movq	%r15, 120(%rax)
.Ltmp56:
	leaq	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E9signature(%rip), %rdx
	leaq	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E5types(%rip), %rcx
	movq	%rsp, %rdi
	leaq	48(%rsp), %rsi
	movl	$3, %r8d
	callq	_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom
.Ltmp57:
# %bb.16:
	movq	48(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB8_18
# %bb.17:
.Ltmp68:
	xorl	%esi, %esi
	callq	_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb
.Ltmp69:
.LBB8_18:
.Ltmp71:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp72:
# %bb.19:                               # %_ZN8pybind116objectD2Ev.exit.i.i.i
.Ltmp74:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp75:
# %bb.20:                               # %_ZN8pybind116objectD2Ev.exit15.i.i.i
	movq	(%rsp), %rdx
.Ltmp77:
	leaq	.L.str.175(%rip), %rsi
	leaq	40(%rsp), %rdi
	movl	$1, %ecx
	callq	_ZN8pybind117module_10add_objectEPKcNS_6handleEb
.Ltmp78:
# %bb.21:
.Ltmp86:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp87:
# %bb.22:
.Ltmp89:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp90:
# %bb.23:                               # %_ZN8pybind116objectD2Ev.exit.i
	movq	24(%rsp), %rax
	movq	%rax, 32(%rsp)
.Ltmp92:
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp93:
# %bb.24:                               # %.noexc29
	movq	32(%rsp), %rbx
	movq	%r12, 16(%rsp)
.Ltmp95:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp96:
# %bb.25:                               # %.noexc27.i
	movq	16(%rsp), %r12
.Ltmp98:
	leaq	.L.str.176(%rip), %r14
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	PyObject_GetAttrString@PLT
.Ltmp99:
# %bb.26:                               # %.noexc.i.i14.i
	movq	%rax, %r15
	testq	%rax, %rax
	je	.LBB8_28
# %bb.27:
	movq	%r15, 8(%rsp)
	jmp	.LBB8_31
.LBB8_28:
.Ltmp100:
	callq	PyErr_Clear@PLT
.Ltmp101:
# %bb.29:                               # %.noexc13.i.i24.i
	movq	%r12, 8(%rsp)
.Ltmp102:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp103:
# %bb.30:                               # %.noexc13._crit_edge.i.i25.i
	movq	8(%rsp), %r15
.LBB8_31:
	movq	$0, (%rsp)
.Ltmp105:
	leaq	48(%rsp), %rdi
	movq	%rsp, %rsi
	callq	_ZN8pybind1112cpp_function20make_function_recordEv
.Ltmp106:
# %bb.32:                               # %.noexc.i.i.i19.i
	movq	48(%rsp), %rax
	leaq	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeES10_(%rip), %rcx
	movq	%rcx, 48(%rax)
	movw	$3, 94(%rax)
	andb	$63, 89(%rax)
	movq	%r14, (%rax)
	movq	%rbx, 112(%rax)
	movq	%r15, 120(%rax)
.Ltmp108:
	leaq	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E9signature(%rip), %rdx
	leaq	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E5types(%rip), %rcx
	movq	%rsp, %rdi
	leaq	48(%rsp), %rsi
	movl	$3, %r8d
	callq	_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom
.Ltmp109:
# %bb.33:
	movq	48(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB8_35
# %bb.34:
.Ltmp120:
	xorl	%esi, %esi
	callq	_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb
.Ltmp121:
.LBB8_35:
.Ltmp123:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp124:
# %bb.36:                               # %_ZN8pybind116objectD2Ev.exit.i.i21.i
.Ltmp126:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp127:
# %bb.37:                               # %_ZN8pybind116objectD2Ev.exit15.i.i22.i
	movq	(%rsp), %rdx
.Ltmp129:
	leaq	.L.str.176(%rip), %rsi
	leaq	32(%rsp), %rdi
	movl	$1, %ecx
	callq	_ZN8pybind117module_10add_objectEPKcNS_6handleEb
.Ltmp130:
# %bb.38:
.Ltmp160:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp161:
# %bb.39:
.Ltmp163:
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp164:
# %bb.40:
	movq	24(%rsp), %rbx
.LBB8_41:
.Ltmp166:
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp167:
	jmp	.LBB8_3
.LBB8_42:
.Ltmp122:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_43:
.Ltmp70:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_44:
.Ltmp165:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_45:
.Ltmp162:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_46:
.Ltmp131:
	movq	%rdx, %r14
	movq	%rax, %rbx
.Ltmp132:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp133:
	jmp	.LBB8_76
.LBB8_47:
.Ltmp134:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_48:
.Ltmp128:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_49:
.Ltmp125:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_50:
.Ltmp110:
	movq	%rdx, %r14
	movq	%rax, %rbx
	leaq	48(%rsp), %rdi
	callq	_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev
	jmp	.LBB8_52
.LBB8_51:
.Ltmp107:
	movq	%rdx, %r14
	movq	%rax, %rbx
.LBB8_52:                               # %.body.i.i.i16.i
.Ltmp111:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp112:
# %bb.53:                               # %.body.i.i18.i
.Ltmp114:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp115:
	jmp	.LBB8_75
.LBB8_54:
.Ltmp116:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_55:
.Ltmp113:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_56:
.Ltmp97:
	movq	%rdx, %r14
	movq	%rax, %rbx
	jmp	.LBB8_76
.LBB8_57:
.Ltmp91:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_58:
.Ltmp88:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_59:
.Ltmp79:
	movq	%rdx, %r14
	movq	%rax, %rbx
.Ltmp80:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp81:
	jmp	.LBB8_81
.LBB8_60:
.Ltmp82:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_61:
.Ltmp168:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_62:
.Ltmp76:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_63:
.Ltmp73:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_64:
.Ltmp58:
	movq	%rdx, %r14
	movq	%rax, %rbx
	leaq	48(%rsp), %rdi
	callq	_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev
	jmp	.LBB8_66
.LBB8_65:
.Ltmp55:
	movq	%rdx, %r14
	movq	%rax, %rbx
.LBB8_66:                               # %.body.i.i.i.i
.Ltmp59:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp60:
# %bb.67:                               # %.body.i.i.i
.Ltmp62:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp63:
	jmp	.LBB8_80
.LBB8_68:
.Ltmp64:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_69:
.Ltmp61:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_70:
.Ltmp45:
	movq	%rdx, %r14
	movq	%rax, %rbx
	jmp	.LBB8_81
.LBB8_71:
.Ltmp40:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_72:
.Ltmp34:
	movq	%rdx, %r14
	movq	%rax, %rbx
.Ltmp35:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp36:
	jmp	.LBB8_85
.LBB8_73:
.Ltmp37:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_74:
.Ltmp104:
	movq	%rdx, %r14
	movq	%rax, %rbx
.LBB8_75:                               # %_ZN8pybind116objectD2Ev.exit17.i.i9.i
.Ltmp117:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp118:
.LBB8_76:                               # %.body28.i
.Ltmp135:
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp136:
	jmp	.LBB8_85
.LBB8_77:
.Ltmp119:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_78:
.Ltmp137:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_79:
.Ltmp52:
	movq	%rdx, %r14
	movq	%rax, %rbx
.LBB8_80:                               # %_ZN8pybind116objectD2Ev.exit17.i.i.i
.Ltmp65:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp66:
.LBB8_81:                               # %.body.i
.Ltmp83:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp84:
	jmp	.LBB8_85
.LBB8_82:
.Ltmp67:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_83:
.Ltmp85:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_84:
.Ltmp94:
	movq	%rdx, %r14
	movq	%rax, %rbx
.LBB8_85:                               # %.body
	cmpl	$2, %r14d
	jne	.LBB8_90
# %bb.86:
	movq	%rbx, %rdi
	callq	__cxa_begin_catch@PLT
	movq	PyExc_ImportError@GOTPCREL(%rip), %rcx
	movq	(%rcx), %rbx
	movq	8(%rax), %rdi
.Ltmp146:
	callq	_ZN8pybind116detail25error_fetch_and_normalize7restoreEv
.Ltmp147:
# %bb.87:                               # %.noexc30
.Ltmp148:
	leaq	.L.str.3(%rip), %rsi
	movq	%rbx, %rdi
	callq	_ZN8pybind1110raise_fromEP7_objectPKc
.Ltmp149:
# %bb.88:                               # %_ZN8pybind1110raise_fromERNS_17error_already_setEP7_objectPKc.exit
.Ltmp154:
	callq	__cxa_end_catch@PLT
.Ltmp155:
	jmp	.LBB8_89
.LBB8_90:
	cmpl	$1, %r14d
	jne	.LBB8_99
# %bb.91:
	movq	%rbx, %rdi
	callq	__cxa_begin_catch@PLT
	movq	PyExc_ImportError@GOTPCREL(%rip), %rcx
	movq	(%rcx), %rbx
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*16(%rcx)
.Ltmp138:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	PyErr_SetString@PLT
.Ltmp139:
# %bb.92:                               # %_ZN8pybind119set_errorERKNS_6handleEPKc.exit
.Ltmp143:
	callq	__cxa_end_catch@PLT
.Ltmp144:
.LBB8_89:
	xorl	%ebx, %ebx
	jmp	.LBB8_41
.LBB8_94:
.Ltmp145:
	jmp	.LBB8_97
.LBB8_95:
.Ltmp140:
	movq	%rax, %rbx
.Ltmp141:
	callq	__cxa_end_catch@PLT
.Ltmp142:
	jmp	.LBB8_99
.LBB8_96:
.Ltmp156:
.LBB8_97:
	movq	%rax, %rbx
	jmp	.LBB8_99
.LBB8_98:
.Ltmp150:
	movq	%rax, %rbx
.Ltmp151:
	callq	__cxa_end_catch@PLT
.Ltmp152:
.LBB8_99:
.Ltmp157:
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp158:
# %bb.100:                              # %_ZN8pybind116objectD2Ev.exit33
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB8_101:
.Ltmp153:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB8_102:
.Ltmp159:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end8:
	.size	PyInit_tk_kernel, .Lfunc_end8-PyInit_tk_kernel
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table8:
.Lexception4:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase3-.Lttbaseref3
.Lttbaseref3:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end4-.Lcst_begin4
.Lcst_begin4:
	.uleb128 .Lfunc_begin4-.Lfunc_begin4    # >> Call Site 1 <<
	.uleb128 .Ltmp32-.Lfunc_begin4          #   Call between .Lfunc_begin4 and .Ltmp32
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp32-.Lfunc_begin4          # >> Call Site 2 <<
	.uleb128 .Ltmp33-.Ltmp32                #   Call between .Ltmp32 and .Ltmp33
	.uleb128 .Ltmp34-.Lfunc_begin4          #     jumps to .Ltmp34
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp38-.Lfunc_begin4          # >> Call Site 3 <<
	.uleb128 .Ltmp39-.Ltmp38                #   Call between .Ltmp38 and .Ltmp39
	.uleb128 .Ltmp40-.Lfunc_begin4          #     jumps to .Ltmp40
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp41-.Lfunc_begin4          # >> Call Site 4 <<
	.uleb128 .Ltmp42-.Ltmp41                #   Call between .Ltmp41 and .Ltmp42
	.uleb128 .Ltmp94-.Lfunc_begin4          #     jumps to .Ltmp94
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp43-.Lfunc_begin4          # >> Call Site 5 <<
	.uleb128 .Ltmp44-.Ltmp43                #   Call between .Ltmp43 and .Ltmp44
	.uleb128 .Ltmp45-.Lfunc_begin4          #     jumps to .Ltmp45
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp46-.Lfunc_begin4          # >> Call Site 6 <<
	.uleb128 .Ltmp51-.Ltmp46                #   Call between .Ltmp46 and .Ltmp51
	.uleb128 .Ltmp52-.Lfunc_begin4          #     jumps to .Ltmp52
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp53-.Lfunc_begin4          # >> Call Site 7 <<
	.uleb128 .Ltmp54-.Ltmp53                #   Call between .Ltmp53 and .Ltmp54
	.uleb128 .Ltmp55-.Lfunc_begin4          #     jumps to .Ltmp55
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp56-.Lfunc_begin4          # >> Call Site 8 <<
	.uleb128 .Ltmp57-.Ltmp56                #   Call between .Ltmp56 and .Ltmp57
	.uleb128 .Ltmp58-.Lfunc_begin4          #     jumps to .Ltmp58
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp68-.Lfunc_begin4          # >> Call Site 9 <<
	.uleb128 .Ltmp69-.Ltmp68                #   Call between .Ltmp68 and .Ltmp69
	.uleb128 .Ltmp70-.Lfunc_begin4          #     jumps to .Ltmp70
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp71-.Lfunc_begin4          # >> Call Site 10 <<
	.uleb128 .Ltmp72-.Ltmp71                #   Call between .Ltmp71 and .Ltmp72
	.uleb128 .Ltmp73-.Lfunc_begin4          #     jumps to .Ltmp73
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp74-.Lfunc_begin4          # >> Call Site 11 <<
	.uleb128 .Ltmp75-.Ltmp74                #   Call between .Ltmp74 and .Ltmp75
	.uleb128 .Ltmp76-.Lfunc_begin4          #     jumps to .Ltmp76
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp77-.Lfunc_begin4          # >> Call Site 12 <<
	.uleb128 .Ltmp78-.Ltmp77                #   Call between .Ltmp77 and .Ltmp78
	.uleb128 .Ltmp79-.Lfunc_begin4          #     jumps to .Ltmp79
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp86-.Lfunc_begin4          # >> Call Site 13 <<
	.uleb128 .Ltmp87-.Ltmp86                #   Call between .Ltmp86 and .Ltmp87
	.uleb128 .Ltmp88-.Lfunc_begin4          #     jumps to .Ltmp88
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp89-.Lfunc_begin4          # >> Call Site 14 <<
	.uleb128 .Ltmp90-.Ltmp89                #   Call between .Ltmp89 and .Ltmp90
	.uleb128 .Ltmp91-.Lfunc_begin4          #     jumps to .Ltmp91
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp92-.Lfunc_begin4          # >> Call Site 15 <<
	.uleb128 .Ltmp93-.Ltmp92                #   Call between .Ltmp92 and .Ltmp93
	.uleb128 .Ltmp94-.Lfunc_begin4          #     jumps to .Ltmp94
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp95-.Lfunc_begin4          # >> Call Site 16 <<
	.uleb128 .Ltmp96-.Ltmp95                #   Call between .Ltmp95 and .Ltmp96
	.uleb128 .Ltmp97-.Lfunc_begin4          #     jumps to .Ltmp97
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp98-.Lfunc_begin4          # >> Call Site 17 <<
	.uleb128 .Ltmp103-.Ltmp98               #   Call between .Ltmp98 and .Ltmp103
	.uleb128 .Ltmp104-.Lfunc_begin4         #     jumps to .Ltmp104
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp105-.Lfunc_begin4         # >> Call Site 18 <<
	.uleb128 .Ltmp106-.Ltmp105              #   Call between .Ltmp105 and .Ltmp106
	.uleb128 .Ltmp107-.Lfunc_begin4         #     jumps to .Ltmp107
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp108-.Lfunc_begin4         # >> Call Site 19 <<
	.uleb128 .Ltmp109-.Ltmp108              #   Call between .Ltmp108 and .Ltmp109
	.uleb128 .Ltmp110-.Lfunc_begin4         #     jumps to .Ltmp110
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp120-.Lfunc_begin4         # >> Call Site 20 <<
	.uleb128 .Ltmp121-.Ltmp120              #   Call between .Ltmp120 and .Ltmp121
	.uleb128 .Ltmp122-.Lfunc_begin4         #     jumps to .Ltmp122
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp123-.Lfunc_begin4         # >> Call Site 21 <<
	.uleb128 .Ltmp124-.Ltmp123              #   Call between .Ltmp123 and .Ltmp124
	.uleb128 .Ltmp125-.Lfunc_begin4         #     jumps to .Ltmp125
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp126-.Lfunc_begin4         # >> Call Site 22 <<
	.uleb128 .Ltmp127-.Ltmp126              #   Call between .Ltmp126 and .Ltmp127
	.uleb128 .Ltmp128-.Lfunc_begin4         #     jumps to .Ltmp128
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp129-.Lfunc_begin4         # >> Call Site 23 <<
	.uleb128 .Ltmp130-.Ltmp129              #   Call between .Ltmp129 and .Ltmp130
	.uleb128 .Ltmp131-.Lfunc_begin4         #     jumps to .Ltmp131
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp160-.Lfunc_begin4         # >> Call Site 24 <<
	.uleb128 .Ltmp161-.Ltmp160              #   Call between .Ltmp160 and .Ltmp161
	.uleb128 .Ltmp162-.Lfunc_begin4         #     jumps to .Ltmp162
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp163-.Lfunc_begin4         # >> Call Site 25 <<
	.uleb128 .Ltmp164-.Ltmp163              #   Call between .Ltmp163 and .Ltmp164
	.uleb128 .Ltmp165-.Lfunc_begin4         #     jumps to .Ltmp165
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp166-.Lfunc_begin4         # >> Call Site 26 <<
	.uleb128 .Ltmp167-.Ltmp166              #   Call between .Ltmp166 and .Ltmp167
	.uleb128 .Ltmp168-.Lfunc_begin4         #     jumps to .Ltmp168
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp132-.Lfunc_begin4         # >> Call Site 27 <<
	.uleb128 .Ltmp133-.Ltmp132              #   Call between .Ltmp132 and .Ltmp133
	.uleb128 .Ltmp134-.Lfunc_begin4         #     jumps to .Ltmp134
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp111-.Lfunc_begin4         # >> Call Site 28 <<
	.uleb128 .Ltmp112-.Ltmp111              #   Call between .Ltmp111 and .Ltmp112
	.uleb128 .Ltmp113-.Lfunc_begin4         #     jumps to .Ltmp113
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp114-.Lfunc_begin4         # >> Call Site 29 <<
	.uleb128 .Ltmp115-.Ltmp114              #   Call between .Ltmp114 and .Ltmp115
	.uleb128 .Ltmp116-.Lfunc_begin4         #     jumps to .Ltmp116
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp80-.Lfunc_begin4          # >> Call Site 30 <<
	.uleb128 .Ltmp81-.Ltmp80                #   Call between .Ltmp80 and .Ltmp81
	.uleb128 .Ltmp82-.Lfunc_begin4          #     jumps to .Ltmp82
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp59-.Lfunc_begin4          # >> Call Site 31 <<
	.uleb128 .Ltmp60-.Ltmp59                #   Call between .Ltmp59 and .Ltmp60
	.uleb128 .Ltmp61-.Lfunc_begin4          #     jumps to .Ltmp61
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp62-.Lfunc_begin4          # >> Call Site 32 <<
	.uleb128 .Ltmp63-.Ltmp62                #   Call between .Ltmp62 and .Ltmp63
	.uleb128 .Ltmp64-.Lfunc_begin4          #     jumps to .Ltmp64
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp35-.Lfunc_begin4          # >> Call Site 33 <<
	.uleb128 .Ltmp36-.Ltmp35                #   Call between .Ltmp35 and .Ltmp36
	.uleb128 .Ltmp37-.Lfunc_begin4          #     jumps to .Ltmp37
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp117-.Lfunc_begin4         # >> Call Site 34 <<
	.uleb128 .Ltmp118-.Ltmp117              #   Call between .Ltmp117 and .Ltmp118
	.uleb128 .Ltmp119-.Lfunc_begin4         #     jumps to .Ltmp119
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp135-.Lfunc_begin4         # >> Call Site 35 <<
	.uleb128 .Ltmp136-.Ltmp135              #   Call between .Ltmp135 and .Ltmp136
	.uleb128 .Ltmp137-.Lfunc_begin4         #     jumps to .Ltmp137
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp65-.Lfunc_begin4          # >> Call Site 36 <<
	.uleb128 .Ltmp66-.Ltmp65                #   Call between .Ltmp65 and .Ltmp66
	.uleb128 .Ltmp67-.Lfunc_begin4          #     jumps to .Ltmp67
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp83-.Lfunc_begin4          # >> Call Site 37 <<
	.uleb128 .Ltmp84-.Ltmp83                #   Call between .Ltmp83 and .Ltmp84
	.uleb128 .Ltmp85-.Lfunc_begin4          #     jumps to .Ltmp85
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp84-.Lfunc_begin4          # >> Call Site 38 <<
	.uleb128 .Ltmp146-.Ltmp84               #   Call between .Ltmp84 and .Ltmp146
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp146-.Lfunc_begin4         # >> Call Site 39 <<
	.uleb128 .Ltmp149-.Ltmp146              #   Call between .Ltmp146 and .Ltmp149
	.uleb128 .Ltmp150-.Lfunc_begin4         #     jumps to .Ltmp150
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp154-.Lfunc_begin4         # >> Call Site 40 <<
	.uleb128 .Ltmp155-.Ltmp154              #   Call between .Ltmp154 and .Ltmp155
	.uleb128 .Ltmp156-.Lfunc_begin4         #     jumps to .Ltmp156
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp155-.Lfunc_begin4         # >> Call Site 41 <<
	.uleb128 .Ltmp138-.Ltmp155              #   Call between .Ltmp155 and .Ltmp138
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp138-.Lfunc_begin4         # >> Call Site 42 <<
	.uleb128 .Ltmp139-.Ltmp138              #   Call between .Ltmp138 and .Ltmp139
	.uleb128 .Ltmp140-.Lfunc_begin4         #     jumps to .Ltmp140
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp143-.Lfunc_begin4         # >> Call Site 43 <<
	.uleb128 .Ltmp144-.Ltmp143              #   Call between .Ltmp143 and .Ltmp144
	.uleb128 .Ltmp145-.Lfunc_begin4         #     jumps to .Ltmp145
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp141-.Lfunc_begin4         # >> Call Site 44 <<
	.uleb128 .Ltmp152-.Ltmp141              #   Call between .Ltmp141 and .Ltmp152
	.uleb128 .Ltmp153-.Lfunc_begin4         #     jumps to .Ltmp153
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp157-.Lfunc_begin4         # >> Call Site 45 <<
	.uleb128 .Ltmp158-.Ltmp157              #   Call between .Ltmp157 and .Ltmp158
	.uleb128 .Ltmp159-.Lfunc_begin4         #     jumps to .Ltmp159
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp158-.Lfunc_begin4         # >> Call Site 46 <<
	.uleb128 .Lfunc_end8-.Ltmp158           #   Call between .Ltmp158 and .Lfunc_end8
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end4:
	.byte	0                               # >> Action Record 1 <<
                                        #   Cleanup
	.byte	0                               #   No further actions
	.byte	1                               # >> Action Record 2 <<
                                        #   Catch TypeInfo 1
	.byte	125                             #   Continue to action 1
	.byte	2                               # >> Action Record 3 <<
                                        #   Catch TypeInfo 2
	.byte	125                             #   Continue to action 2
	.byte	3                               # >> Action Record 4 <<
                                        #   Catch TypeInfo 3
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 3
.Ltmp169:                               # TypeInfo 2
	.long	.L_ZTIN8pybind1117error_already_setE.DW.stub-.Ltmp169
.Ltmp170:                               # TypeInfo 1
	.long	.L_ZTISt9exception.DW.stub-.Ltmp170
.Lttbase3:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail13get_internalsEv,"axG",@progbits,_ZN8pybind116detail13get_internalsEv,comdat
	.hidden	_ZN8pybind116detail13get_internalsEv # -- Begin function _ZN8pybind116detail13get_internalsEv
	.weak	_ZN8pybind116detail13get_internalsEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail13get_internalsEv,@function
_ZN8pybind116detail13get_internalsEv:   # @_ZN8pybind116detail13get_internalsEv
.Lfunc_begin5:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception5
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$96, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	_ZZN8pybind116detail16get_internals_ppEvE12internals_pp(%rip), %rax
	testq	%rax, %rax
	je	.LBB9_2
# %bb.1:
	movq	(%rax), %r15
	testq	%r15, %r15
	jne	.LBB9_38
.LBB9_2:
	callq	PyGILState_Ensure@PLT
	movl	%eax, %ebx
	leaq	72(%rsp), %rsi
	leaq	80(%rsp), %rdx
.Ltmp171:
	leaq	64(%rsp), %rdi
	callq	PyErr_Fetch@PLT
.Ltmp172:
# %bb.3:                                # %_ZN8pybind1111error_scopeC2Ev.exit
.Ltmp174:
	leaq	16(%rsp), %rdi
	callq	_ZN8pybind116detail21get_python_state_dictEv
.Ltmp175:
# %bb.4:
.Ltmp177:
	leaq	8(%rsp), %rdi
	leaq	16(%rsp), %rsi
	callq	_ZN8pybind114dictC2EONS_6objectE
.Ltmp178:
# %bb.5:
.Ltmp183:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp184:
# %bb.6:                                # %_ZN8pybind116objectD2Ev.exit
	movq	8(%rsp), %rdi
.Ltmp186:
	leaq	.L.str.58(%rip), %rsi
	callq	_ZN8pybind116detail18dict_getitemstringEP7_objectPKc
.Ltmp187:
# %bb.7:                                # %.noexc
	testq	%rax, %rax
	je	.LBB9_15
# %bb.8:                                # %.split.i.i
	movl	(%rax), %ecx
	incl	%ecx
	je	.LBB9_10
# %bb.9:
	movl	%ecx, (%rax)
.LBB9_10:
	movq	%rax, 16(%rsp)
.Ltmp188:
	movq	%rax, %rdi
	xorl	%esi, %esi
	callq	PyCapsule_GetPointer@PLT
.Ltmp189:
# %bb.11:                               # %.noexc58
	testq	%rax, %rax
	je	.LBB9_12
# %bb.22:                               # %_ZN8pybind116detail29get_internals_pp_from_capsuleENS_6handleE.exit
	movq	%rax, _ZZN8pybind116detail16get_internals_ppEvE12internals_pp(%rip)
	jmp	.LBB9_32
.LBB9_15:
.Ltmp201:
	callq	PyErr_Occurred@PLT
.Ltmp202:
# %bb.16:                               # %.noexc56
	testq	%rax, %rax
	jne	.LBB9_17
# %bb.31:
	movq	$0, 16(%rsp)
.LBB9_32:
.Ltmp209:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp210:
# %bb.33:                               # %_ZN8pybind116objectD2Ev.exit65
	movq	_ZZN8pybind116detail16get_internals_ppEvE12internals_pp(%rip), %r14
	testq	%r14, %r14
	je	.LBB9_40
# %bb.34:
	movq	(%r14), %r15
	testq	%r15, %r15
	jne	.LBB9_35
	jmp	.LBB9_42
.LBB9_40:
.Ltmp212:
	movl	$8, %edi
	callq	_Znwm@PLT
.Ltmp213:
# %bb.41:
	movq	%rax, %r14
	movq	$0, (%rax)
	movq	%rax, _ZZN8pybind116detail16get_internals_ppEvE12internals_pp(%rip)
.LBB9_42:
.Ltmp215:
	movl	$488, %edi                      # imm = 0x1E8
	callq	_Znwm@PLT
.Ltmp216:
# %bb.43:
	movq	%rax, %r15
	movl	$488, %edx                      # imm = 0x1E8
	movq	%rax, %rdi
	xorl	%esi, %esi
	callq	memset@PLT
.Ltmp218:
	movq	%r15, %rdi
	callq	_ZN8pybind116detail9internalsC2Ev
.Ltmp219:
# %bb.44:
	movq	%r15, (%r14)
.Ltmp221:
	callq	PyThreadState_Get@PLT
.Ltmp222:
# %bb.45:
	movq	%rax, %r15
	movl	$432, %edi                      # imm = 0x1B0
	addq	(%r14), %rdi
.Ltmp223:
	callq	PyThread_tss_create@PLT
.Ltmp224:
# %bb.46:
	testl	%eax, %eax
	jne	.LBB9_47
# %bb.51:
	movl	$432, %edi                      # imm = 0x1B0
	addq	(%r14), %rdi
.Ltmp225:
	movq	%r15, %rsi
	callq	PyThread_tss_set@PLT
.Ltmp226:
# %bb.52:
	movl	$440, %edi                      # imm = 0x1B8
	addq	(%r14), %rdi
.Ltmp227:
	callq	PyThread_tss_create@PLT
.Ltmp228:
# %bb.53:
	testl	%eax, %eax
	jne	.LBB9_54
# %bb.57:
	movq	16(%r15), %rax
	movq	(%r14), %rcx
	movq	%rax, 448(%rcx)
	movq	_ZZN8pybind116detail16get_internals_ppEvE12internals_pp(%rip), %rsi
.Ltmp231:
	leaq	48(%rsp), %rdi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE
.Ltmp232:
# %bb.58:
	movq	8(%rsp), %r15
.Ltmp234:
	leaq	.L.str.58(%rip), %rsi
	leaq	56(%rsp), %rdi
	callq	_ZN8pybind113strC2EPKc
.Ltmp235:
# %bb.59:                               # %.noexc66
	movq	56(%rsp), %rax
	movq	$0, 56(%rsp)
	movq	%r15, 24(%rsp)
	movq	%rax, 32(%rsp)
	movq	$0, 88(%rsp)
	movq	$0, 40(%rsp)
.Ltmp237:
	leaq	88(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp238:
# %bb.60:                               # %_ZN8pybind116objectD2Ev.exit.i
.Ltmp240:
	leaq	56(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp241:
# %bb.61:
	movq	24(%rsp), %rdi
	movq	32(%rsp), %rsi
	movq	48(%rsp), %rdx
.Ltmp243:
	callq	PyObject_SetItem@PLT
.Ltmp244:
# %bb.62:                               # %.noexc69
	testl	%eax, %eax
	jne	.LBB9_63
# %bb.68:                               # %_ZNO8pybind116detail8accessorINS0_17accessor_policies12generic_itemEEaSINS_7capsuleEEEvOT_.exit
.Ltmp254:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp255:
# %bb.69:                               # %_ZN8pybind116objectD2Ev.exit.i73
.Ltmp257:
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp258:
# %bb.70:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev.exit
.Ltmp260:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp261:
# %bb.71:                               # %_ZN8pybind116objectD2Ev.exit74
	movq	(%r14), %r15
.Ltmp263:
	movl	$16, %edi
	callq	_Znwm@PLT
.Ltmp264:
# %bb.72:
	leaq	_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE(%rip), %rcx
	movq	%rcx, 8(%rax)
	movq	336(%r15), %rcx
	movq	%rcx, (%rax)
	movq	%rax, 336(%r15)
.Ltmp266:
	callq	_ZN8pybind116detail25make_static_property_typeEv
.Ltmp267:
# %bb.73:
	movq	(%r14), %rcx
	movq	%rax, 408(%rcx)
.Ltmp268:
	callq	_ZN8pybind116detail22make_default_metaclassEv
.Ltmp269:
# %bb.74:
	movq	(%r14), %rcx
	movq	%rax, 416(%rcx)
	movq	(%r14), %rax
	movq	416(%rax), %rdi
.Ltmp270:
	callq	_ZN8pybind116detail21make_object_base_typeEP11_typeobject
.Ltmp271:
# %bb.75:
	movq	(%r14), %rcx
	movq	%rax, 424(%rcx)
	movq	_ZZN8pybind116detail16get_internals_ppEvE12internals_pp(%rip), %rax
	movq	(%rax), %r15
.LBB9_35:
.Ltmp279:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp280:
# %bb.36:                               # %_ZN8pybind116objectD2Ev.exit77
	movq	64(%rsp), %rdi
	movq	72(%rsp), %rsi
	movq	80(%rsp), %rdx
.Ltmp282:
	callq	PyErr_Restore@PLT
.Ltmp283:
# %bb.37:                               # %_ZN8pybind1111error_scopeD2Ev.exit
.Ltmp285:
	movl	%ebx, %edi
	callq	PyGILState_Release@PLT
.Ltmp286:
.LBB9_38:                               # %_ZZN8pybind116detail13get_internalsEvEN24gil_scoped_acquire_localD2Ev.exit
	movq	%r15, %rax
	addq	$96, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB9_12:
	.cfi_def_cfa_offset 128
	movq	PyExc_SystemError@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
.Ltmp190:
	leaq	.L.str.62(%rip), %rsi
	callq	_ZN8pybind1110raise_fromEP7_objectPKc
.Ltmp191:
# %bb.13:                               # %.noexc59
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp192:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp193:
# %bb.14:
.Ltmp195:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp196:
# %bb.20:                               # %.noexc60
.LBB9_47:
	leaq	.L.str.56(%rip), %rdi
	jmp	.LBB9_55
.LBB9_54:
	leaq	.L.str.57(%rip), %rdi
.LBB9_55:                               # %.invoke
.Ltmp229:
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp230:
# %bb.56:                               # %.cont
.LBB9_63:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp245:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp246:
# %bb.64:
.Ltmp248:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp249:
# %bb.65:                               # %.noexc70
.LBB9_17:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp203:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp204:
# %bb.18:
.Ltmp206:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp207:
# %bb.19:                               # %.noexc57
.LBB9_21:
.Ltmp194:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB9_29
.LBB9_39:
.Ltmp205:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB9_88
.LBB9_66:
.Ltmp247:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB9_78
.LBB9_86:
.Ltmp214:
	jmp	.LBB9_87
.LBB9_82:
.Ltmp265:
	jmp	.LBB9_87
.LBB9_97:
.Ltmp262:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB9_96:
.Ltmp259:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB9_67:
.Ltmp256:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB9_95:
.Ltmp242:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB9_94:
.Ltmp239:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB9_76:
.Ltmp236:
	movq	%rax, %r14
	jmp	.LBB9_79
.LBB9_81:
.Ltmp233:
	jmp	.LBB9_87
.LBB9_49:
.Ltmp220:
	movq	%rax, %r14
	movl	$488, %esi                      # imm = 0x1E8
	movq	%r15, %rdi
	callq	_ZdlPvm@PLT
	jmp	.LBB9_88
.LBB9_48:
.Ltmp217:
	jmp	.LBB9_87
.LBB9_77:
.Ltmp250:
	movq	%rax, %r14
.LBB9_78:                               # %.body71
	leaq	16(%rsp), %rdi
	callq	_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev
.LBB9_79:
.Ltmp251:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp252:
	jmp	.LBB9_88
.LBB9_80:
.Ltmp253:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB9_85:
.Ltmp287:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB9_84:
.Ltmp284:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB9_83:
.Ltmp281:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB9_93:
.Ltmp211:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB9_92:
.Ltmp185:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB9_24:
.Ltmp179:
	movq	%rax, %r14
.Ltmp180:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp181:
	jmp	.LBB9_89
.LBB9_25:
.Ltmp182:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB9_26:
.Ltmp176:
	movq	%rax, %r14
	jmp	.LBB9_89
.LBB9_23:
.Ltmp173:
	movq	%rax, %r14
	jmp	.LBB9_90
.LBB9_28:
.Ltmp197:
	movq	%rax, %r14
.LBB9_29:                               # %.body61
.Ltmp198:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp199:
	jmp	.LBB9_88
.LBB9_30:
.Ltmp200:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB9_27:
.Ltmp208:
	jmp	.LBB9_87
.LBB9_50:
.Ltmp272:
.LBB9_87:
	movq	%rax, %r14
.LBB9_88:
.Ltmp273:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp274:
.LBB9_89:                               # %_ZN8pybind116objectD2Ev.exit78
	leaq	64(%rsp), %rdi
	callq	_ZN8pybind1111error_scopeD2Ev
.LBB9_90:
.Ltmp276:
	movl	%ebx, %edi
	callq	PyGILState_Release@PLT
.Ltmp277:
# %bb.91:                               # %_ZZN8pybind116detail13get_internalsEvEN24gil_scoped_acquire_localD2Ev.exit79
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB9_99:
.Ltmp278:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB9_98:
.Ltmp275:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end9:
	.size	_ZN8pybind116detail13get_internalsEv, .Lfunc_end9-_ZN8pybind116detail13get_internalsEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail13get_internalsEv,"aG",@progbits,_ZN8pybind116detail13get_internalsEv,comdat
	.p2align	2, 0x0
GCC_except_table9:
.Lexception5:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase4-.Lttbaseref4
.Lttbaseref4:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end5-.Lcst_begin5
.Lcst_begin5:
	.uleb128 .Lfunc_begin5-.Lfunc_begin5    # >> Call Site 1 <<
	.uleb128 .Ltmp171-.Lfunc_begin5         #   Call between .Lfunc_begin5 and .Ltmp171
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp171-.Lfunc_begin5         # >> Call Site 2 <<
	.uleb128 .Ltmp172-.Ltmp171              #   Call between .Ltmp171 and .Ltmp172
	.uleb128 .Ltmp173-.Lfunc_begin5         #     jumps to .Ltmp173
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp174-.Lfunc_begin5         # >> Call Site 3 <<
	.uleb128 .Ltmp175-.Ltmp174              #   Call between .Ltmp174 and .Ltmp175
	.uleb128 .Ltmp176-.Lfunc_begin5         #     jumps to .Ltmp176
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp177-.Lfunc_begin5         # >> Call Site 4 <<
	.uleb128 .Ltmp178-.Ltmp177              #   Call between .Ltmp177 and .Ltmp178
	.uleb128 .Ltmp179-.Lfunc_begin5         #     jumps to .Ltmp179
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp183-.Lfunc_begin5         # >> Call Site 5 <<
	.uleb128 .Ltmp184-.Ltmp183              #   Call between .Ltmp183 and .Ltmp184
	.uleb128 .Ltmp185-.Lfunc_begin5         #     jumps to .Ltmp185
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp186-.Lfunc_begin5         # >> Call Site 6 <<
	.uleb128 .Ltmp187-.Ltmp186              #   Call between .Ltmp186 and .Ltmp187
	.uleb128 .Ltmp208-.Lfunc_begin5         #     jumps to .Ltmp208
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp188-.Lfunc_begin5         # >> Call Site 7 <<
	.uleb128 .Ltmp189-.Ltmp188              #   Call between .Ltmp188 and .Ltmp189
	.uleb128 .Ltmp197-.Lfunc_begin5         #     jumps to .Ltmp197
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp201-.Lfunc_begin5         # >> Call Site 8 <<
	.uleb128 .Ltmp202-.Ltmp201              #   Call between .Ltmp201 and .Ltmp202
	.uleb128 .Ltmp208-.Lfunc_begin5         #     jumps to .Ltmp208
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp209-.Lfunc_begin5         # >> Call Site 9 <<
	.uleb128 .Ltmp210-.Ltmp209              #   Call between .Ltmp209 and .Ltmp210
	.uleb128 .Ltmp211-.Lfunc_begin5         #     jumps to .Ltmp211
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp212-.Lfunc_begin5         # >> Call Site 10 <<
	.uleb128 .Ltmp213-.Ltmp212              #   Call between .Ltmp212 and .Ltmp213
	.uleb128 .Ltmp214-.Lfunc_begin5         #     jumps to .Ltmp214
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp215-.Lfunc_begin5         # >> Call Site 11 <<
	.uleb128 .Ltmp216-.Ltmp215              #   Call between .Ltmp215 and .Ltmp216
	.uleb128 .Ltmp217-.Lfunc_begin5         #     jumps to .Ltmp217
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp216-.Lfunc_begin5         # >> Call Site 12 <<
	.uleb128 .Ltmp218-.Ltmp216              #   Call between .Ltmp216 and .Ltmp218
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp218-.Lfunc_begin5         # >> Call Site 13 <<
	.uleb128 .Ltmp219-.Ltmp218              #   Call between .Ltmp218 and .Ltmp219
	.uleb128 .Ltmp220-.Lfunc_begin5         #     jumps to .Ltmp220
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp221-.Lfunc_begin5         # >> Call Site 14 <<
	.uleb128 .Ltmp228-.Ltmp221              #   Call between .Ltmp221 and .Ltmp228
	.uleb128 .Ltmp272-.Lfunc_begin5         #     jumps to .Ltmp272
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp231-.Lfunc_begin5         # >> Call Site 15 <<
	.uleb128 .Ltmp232-.Ltmp231              #   Call between .Ltmp231 and .Ltmp232
	.uleb128 .Ltmp233-.Lfunc_begin5         #     jumps to .Ltmp233
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp234-.Lfunc_begin5         # >> Call Site 16 <<
	.uleb128 .Ltmp235-.Ltmp234              #   Call between .Ltmp234 and .Ltmp235
	.uleb128 .Ltmp236-.Lfunc_begin5         #     jumps to .Ltmp236
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp237-.Lfunc_begin5         # >> Call Site 17 <<
	.uleb128 .Ltmp238-.Ltmp237              #   Call between .Ltmp237 and .Ltmp238
	.uleb128 .Ltmp239-.Lfunc_begin5         #     jumps to .Ltmp239
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp240-.Lfunc_begin5         # >> Call Site 18 <<
	.uleb128 .Ltmp241-.Ltmp240              #   Call between .Ltmp240 and .Ltmp241
	.uleb128 .Ltmp242-.Lfunc_begin5         #     jumps to .Ltmp242
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp243-.Lfunc_begin5         # >> Call Site 19 <<
	.uleb128 .Ltmp244-.Ltmp243              #   Call between .Ltmp243 and .Ltmp244
	.uleb128 .Ltmp250-.Lfunc_begin5         #     jumps to .Ltmp250
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp254-.Lfunc_begin5         # >> Call Site 20 <<
	.uleb128 .Ltmp255-.Ltmp254              #   Call between .Ltmp254 and .Ltmp255
	.uleb128 .Ltmp256-.Lfunc_begin5         #     jumps to .Ltmp256
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp257-.Lfunc_begin5         # >> Call Site 21 <<
	.uleb128 .Ltmp258-.Ltmp257              #   Call between .Ltmp257 and .Ltmp258
	.uleb128 .Ltmp259-.Lfunc_begin5         #     jumps to .Ltmp259
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp260-.Lfunc_begin5         # >> Call Site 22 <<
	.uleb128 .Ltmp261-.Ltmp260              #   Call between .Ltmp260 and .Ltmp261
	.uleb128 .Ltmp262-.Lfunc_begin5         #     jumps to .Ltmp262
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp263-.Lfunc_begin5         # >> Call Site 23 <<
	.uleb128 .Ltmp264-.Ltmp263              #   Call between .Ltmp263 and .Ltmp264
	.uleb128 .Ltmp265-.Lfunc_begin5         #     jumps to .Ltmp265
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp266-.Lfunc_begin5         # >> Call Site 24 <<
	.uleb128 .Ltmp271-.Ltmp266              #   Call between .Ltmp266 and .Ltmp271
	.uleb128 .Ltmp272-.Lfunc_begin5         #     jumps to .Ltmp272
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp279-.Lfunc_begin5         # >> Call Site 25 <<
	.uleb128 .Ltmp280-.Ltmp279              #   Call between .Ltmp279 and .Ltmp280
	.uleb128 .Ltmp281-.Lfunc_begin5         #     jumps to .Ltmp281
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp282-.Lfunc_begin5         # >> Call Site 26 <<
	.uleb128 .Ltmp283-.Ltmp282              #   Call between .Ltmp282 and .Ltmp283
	.uleb128 .Ltmp284-.Lfunc_begin5         #     jumps to .Ltmp284
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp285-.Lfunc_begin5         # >> Call Site 27 <<
	.uleb128 .Ltmp286-.Ltmp285              #   Call between .Ltmp285 and .Ltmp286
	.uleb128 .Ltmp287-.Lfunc_begin5         #     jumps to .Ltmp287
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp190-.Lfunc_begin5         # >> Call Site 28 <<
	.uleb128 .Ltmp191-.Ltmp190              #   Call between .Ltmp190 and .Ltmp191
	.uleb128 .Ltmp197-.Lfunc_begin5         #     jumps to .Ltmp197
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp191-.Lfunc_begin5         # >> Call Site 29 <<
	.uleb128 .Ltmp192-.Ltmp191              #   Call between .Ltmp191 and .Ltmp192
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp192-.Lfunc_begin5         # >> Call Site 30 <<
	.uleb128 .Ltmp193-.Ltmp192              #   Call between .Ltmp192 and .Ltmp193
	.uleb128 .Ltmp194-.Lfunc_begin5         #     jumps to .Ltmp194
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp195-.Lfunc_begin5         # >> Call Site 31 <<
	.uleb128 .Ltmp196-.Ltmp195              #   Call between .Ltmp195 and .Ltmp196
	.uleb128 .Ltmp197-.Lfunc_begin5         #     jumps to .Ltmp197
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp229-.Lfunc_begin5         # >> Call Site 32 <<
	.uleb128 .Ltmp230-.Ltmp229              #   Call between .Ltmp229 and .Ltmp230
	.uleb128 .Ltmp272-.Lfunc_begin5         #     jumps to .Ltmp272
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp230-.Lfunc_begin5         # >> Call Site 33 <<
	.uleb128 .Ltmp245-.Ltmp230              #   Call between .Ltmp230 and .Ltmp245
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp245-.Lfunc_begin5         # >> Call Site 34 <<
	.uleb128 .Ltmp246-.Ltmp245              #   Call between .Ltmp245 and .Ltmp246
	.uleb128 .Ltmp247-.Lfunc_begin5         #     jumps to .Ltmp247
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp248-.Lfunc_begin5         # >> Call Site 35 <<
	.uleb128 .Ltmp249-.Ltmp248              #   Call between .Ltmp248 and .Ltmp249
	.uleb128 .Ltmp250-.Lfunc_begin5         #     jumps to .Ltmp250
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp249-.Lfunc_begin5         # >> Call Site 36 <<
	.uleb128 .Ltmp203-.Ltmp249              #   Call between .Ltmp249 and .Ltmp203
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp203-.Lfunc_begin5         # >> Call Site 37 <<
	.uleb128 .Ltmp204-.Ltmp203              #   Call between .Ltmp203 and .Ltmp204
	.uleb128 .Ltmp205-.Lfunc_begin5         #     jumps to .Ltmp205
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp206-.Lfunc_begin5         # >> Call Site 38 <<
	.uleb128 .Ltmp207-.Ltmp206              #   Call between .Ltmp206 and .Ltmp207
	.uleb128 .Ltmp208-.Lfunc_begin5         #     jumps to .Ltmp208
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp207-.Lfunc_begin5         # >> Call Site 39 <<
	.uleb128 .Ltmp251-.Ltmp207              #   Call between .Ltmp207 and .Ltmp251
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp251-.Lfunc_begin5         # >> Call Site 40 <<
	.uleb128 .Ltmp252-.Ltmp251              #   Call between .Ltmp251 and .Ltmp252
	.uleb128 .Ltmp253-.Lfunc_begin5         #     jumps to .Ltmp253
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp180-.Lfunc_begin5         # >> Call Site 41 <<
	.uleb128 .Ltmp181-.Ltmp180              #   Call between .Ltmp180 and .Ltmp181
	.uleb128 .Ltmp182-.Lfunc_begin5         #     jumps to .Ltmp182
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp198-.Lfunc_begin5         # >> Call Site 42 <<
	.uleb128 .Ltmp199-.Ltmp198              #   Call between .Ltmp198 and .Ltmp199
	.uleb128 .Ltmp200-.Lfunc_begin5         #     jumps to .Ltmp200
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp273-.Lfunc_begin5         # >> Call Site 43 <<
	.uleb128 .Ltmp274-.Ltmp273              #   Call between .Ltmp273 and .Ltmp274
	.uleb128 .Ltmp275-.Lfunc_begin5         #     jumps to .Ltmp275
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp276-.Lfunc_begin5         # >> Call Site 44 <<
	.uleb128 .Ltmp277-.Ltmp276              #   Call between .Ltmp276 and .Ltmp277
	.uleb128 .Ltmp278-.Lfunc_begin5         #     jumps to .Ltmp278
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp277-.Lfunc_begin5         # >> Call Site 45 <<
	.uleb128 .Lfunc_end9-.Ltmp277           #   Call between .Ltmp277 and .Lfunc_end9
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end5:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase4:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind117module_23create_extension_moduleEPKcS2_P11PyModuleDefNS_16mod_gil_not_usedE,"axG",@progbits,_ZN8pybind117module_23create_extension_moduleEPKcS2_P11PyModuleDefNS_16mod_gil_not_usedE,comdat
	.hidden	_ZN8pybind117module_23create_extension_moduleEPKcS2_P11PyModuleDefNS_16mod_gil_not_usedE # -- Begin function _ZN8pybind117module_23create_extension_moduleEPKcS2_P11PyModuleDefNS_16mod_gil_not_usedE
	.weak	_ZN8pybind117module_23create_extension_moduleEPKcS2_P11PyModuleDefNS_16mod_gil_not_usedE
	.p2align	4, 0x90
	.type	_ZN8pybind117module_23create_extension_moduleEPKcS2_P11PyModuleDefNS_16mod_gil_not_usedE,@function
_ZN8pybind117module_23create_extension_moduleEPKcS2_P11PyModuleDefNS_16mod_gil_not_usedE: # @_ZN8pybind117module_23create_extension_moduleEPKcS2_P11PyModuleDefNS_16mod_gil_not_usedE
.Lfunc_begin6:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception6
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	xorps	%xmm0, %xmm0
	movups	%xmm0, 24(%rcx)
	movups	%xmm0, 8(%rcx)
	movq	$1, (%rcx)
	movq	%rsi, 40(%rcx)
	xorl	%eax, %eax
	cmpb	$0, _ZZN8pybind117options12global_stateEvE8instance(%rip)
	movq	%rdi, %rbx
	cmovneq	%rdx, %rax
	movq	%rax, 48(%rcx)
	movq	$-1, 56(%rcx)
	movups	%xmm0, 64(%rcx)
	movups	%xmm0, 80(%rcx)
	movq	$0, 96(%rcx)
	movq	%rcx, %rdi
	movl	$1013, %esi                     # imm = 0x3F5
	callq	PyModule_Create2@PLT
	testq	%rax, %rax
	je	.LBB10_1
# %bb.6:
	movq	%rax, (%rbx)
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB10_1:
	.cfi_def_cfa_offset 32
	callq	PyErr_Occurred@PLT
	testq	%rax, %rax
	jne	.LBB10_2
# %bb.5:
	leaq	.L.str.173(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.LBB10_2:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp288:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp289:
# %bb.3:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.LBB10_4:
.Ltmp290:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end10:
	.size	_ZN8pybind117module_23create_extension_moduleEPKcS2_P11PyModuleDefNS_16mod_gil_not_usedE, .Lfunc_end10-_ZN8pybind117module_23create_extension_moduleEPKcS2_P11PyModuleDefNS_16mod_gil_not_usedE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind117module_23create_extension_moduleEPKcS2_P11PyModuleDefNS_16mod_gil_not_usedE,"aG",@progbits,_ZN8pybind117module_23create_extension_moduleEPKcS2_P11PyModuleDefNS_16mod_gil_not_usedE,comdat
	.p2align	2, 0x0
GCC_except_table10:
.Lexception6:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end6-.Lcst_begin6
.Lcst_begin6:
	.uleb128 .Lfunc_begin6-.Lfunc_begin6    # >> Call Site 1 <<
	.uleb128 .Ltmp288-.Lfunc_begin6         #   Call between .Lfunc_begin6 and .Ltmp288
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp288-.Lfunc_begin6         # >> Call Site 2 <<
	.uleb128 .Ltmp289-.Ltmp288              #   Call between .Ltmp288 and .Ltmp289
	.uleb128 .Ltmp290-.Lfunc_begin6         #     jumps to .Ltmp290
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp289-.Lfunc_begin6         # >> Call Site 3 <<
	.uleb128 .Lfunc_end10-.Ltmp289          #   Call between .Ltmp289 and .Lfunc_end10
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end6:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1117error_already_setD2Ev,"axG",@progbits,_ZN8pybind1117error_already_setD2Ev,comdat
	.hidden	_ZN8pybind1117error_already_setD2Ev # -- Begin function _ZN8pybind1117error_already_setD2Ev
	.weak	_ZN8pybind1117error_already_setD2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind1117error_already_setD2Ev,@function
_ZN8pybind1117error_already_setD2Ev:    # @_ZN8pybind1117error_already_setD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	leaq	_ZTVN8pybind1117error_already_setE+16(%rip), %rax
	movq	%rax, (%rdi)
	movq	16(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB11_9
# %bb.1:
	movq	8(%rbx), %rax
	movabsq	$4294967297, %rcx               # imm = 0x100000001
	cmpq	%rcx, %rax
	jne	.LBB11_3
# %bb.2:
	movq	$0, 8(%rbx)
	movq	(%rbx), %rax
	movq	%rdi, %r14
	movq	%rbx, %rdi
	callq	*16(%rax)
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB11_8:                               # %_ZNSt12__shared_ptrIN8pybind116detail25error_fetch_and_normalizeELN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	movq	%r14, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZNSt9exceptionD2Ev@PLT         # TAILCALL
.LBB11_3:
	.cfi_def_cfa_offset 32
	movq	__libc_single_threaded@GOTPCREL(%rip), %rcx
	cmpb	$0, (%rcx)
	je	.LBB11_5
# %bb.4:
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB11_7
.LBB11_9:                               # %_ZNSt12__shared_ptrIN8pybind116detail25error_fetch_and_normalizeELN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZNSt9exceptionD2Ev@PLT         # TAILCALL
.LBB11_5:
	.cfi_def_cfa_offset 32
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB11_9
.LBB11_7:
	movq	%rdi, %r14
	movq	%rbx, %rdi
	callq	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv@PLT
	jmp	.LBB11_8
.Lfunc_end11:
	.size	_ZN8pybind1117error_already_setD2Ev, .Lfunc_end11-_ZN8pybind1117error_already_setD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind1117error_already_setD0Ev,"axG",@progbits,_ZN8pybind1117error_already_setD0Ev,comdat
	.hidden	_ZN8pybind1117error_already_setD0Ev # -- Begin function _ZN8pybind1117error_already_setD0Ev
	.weak	_ZN8pybind1117error_already_setD0Ev
	.p2align	4, 0x90
	.type	_ZN8pybind1117error_already_setD0Ev,@function
_ZN8pybind1117error_already_setD0Ev:    # @_ZN8pybind1117error_already_setD0Ev
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	leaq	_ZTVN8pybind1117error_already_setE+16(%rip), %rax
	movq	%rax, (%rdi)
	movq	16(%rdi), %r14
	testq	%r14, %r14
	je	.LBB12_8
# %bb.1:
	movq	8(%r14), %rax
	movabsq	$4294967297, %rcx               # imm = 0x100000001
	cmpq	%rcx, %rax
	jne	.LBB12_3
# %bb.2:
	movq	$0, 8(%r14)
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*24(%rax)
	jmp	.LBB12_8
.LBB12_3:
	movq	__libc_single_threaded@GOTPCREL(%rip), %rcx
	cmpb	$0, (%rcx)
	je	.LBB12_5
# %bb.4:
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r14)
	cmpl	$1, %eax
	je	.LBB12_7
.LBB12_8:                               # %_ZN8pybind1117error_already_setD2Ev.exit
	movq	%rbx, %rdi
	callq	_ZNSt9exceptionD2Ev@PLT
	movl	$24, %esi
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB12_5:
	.cfi_def_cfa_offset 32
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r14)
	cmpl	$1, %eax
	jne	.LBB12_8
.LBB12_7:
	movq	%r14, %rdi
	callq	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv@PLT
	jmp	.LBB12_8
.Lfunc_end12:
	.size	_ZN8pybind1117error_already_setD0Ev, .Lfunc_end12-_ZN8pybind1117error_already_setD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind1113pybind11_failEPKc,"axG",@progbits,_ZN8pybind1113pybind11_failEPKc,comdat
	.hidden	_ZN8pybind1113pybind11_failEPKc # -- Begin function _ZN8pybind1113pybind11_failEPKc
	.weak	_ZN8pybind1113pybind11_failEPKc
	.p2align	4, 0x90
	.type	_ZN8pybind1113pybind11_failEPKc,@function
_ZN8pybind1113pybind11_failEPKc:        # @_ZN8pybind1113pybind11_failEPKc
.Lfunc_begin7:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception7
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	callq	PyErr_Occurred@PLT
	testq	%rax, %rax
	jne	.LBB13_4
# %bb.1:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp291:
	movq	%rax, %rdi
	movq	%r14, %rsi
	callq	_ZNSt13runtime_errorC1EPKc@PLT
.Ltmp292:
# %bb.2:
	movq	_ZTISt13runtime_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt13runtime_errorD1Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.LBB13_4:
	leaq	.L.str.5(%rip), %rdi
	leaq	.L.str.6(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failEPKc(%rip), %rcx
	movl	$1046, %edx                     # imm = 0x416
	callq	__assert_fail@PLT
.LBB13_3:
.Ltmp293:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end13:
	.size	_ZN8pybind1113pybind11_failEPKc, .Lfunc_end13-_ZN8pybind1113pybind11_failEPKc
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1113pybind11_failEPKc,"aG",@progbits,_ZN8pybind1113pybind11_failEPKc,comdat
	.p2align	2, 0x0
GCC_except_table13:
.Lexception7:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end7-.Lcst_begin7
.Lcst_begin7:
	.uleb128 .Lfunc_begin7-.Lfunc_begin7    # >> Call Site 1 <<
	.uleb128 .Ltmp291-.Lfunc_begin7         #   Call between .Lfunc_begin7 and .Ltmp291
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp291-.Lfunc_begin7         # >> Call Site 2 <<
	.uleb128 .Ltmp292-.Ltmp291              #   Call between .Ltmp291 and .Ltmp292
	.uleb128 .Ltmp293-.Lfunc_begin7         #     jumps to .Ltmp293
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp292-.Lfunc_begin7         # >> Call Site 3 <<
	.uleb128 .Lfunc_end13-.Ltmp292          #   Call between .Ltmp292 and .Lfunc_end13
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end7:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	strlen@PLT
	movq	%r14, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	movq	%r15, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
	movq	%rax, %r14
	leaq	16(%rbx), %rdi
	movq	%rdi, (%rbx)
	movq	(%rax), %rax
	movq	%r14, %r15
	addq	$16, %r15
	cmpq	%r15, %rax
	je	.LBB14_1
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	%rax, (%rbx)
	movq	16(%r14), %rax
	movq	%rax, 16(%rbx)
	movq	8(%r14), %r12
	jmp	.LBB14_3
.LBB14_1:
	movq	8(%r14), %r12
	leaq	1(%r12), %rdx
	movq	%r15, %rsi
	callq	memcpy@PLT
.LBB14_3:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	%r12, 8(%rbx)
	movq	%r15, (%r14)
	movq	$0, 8(%r14)
	movb	$0, 16(%r14)
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end14:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_, .Lfunc_end14-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev,"axG",@progbits,_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev,comdat
	.hidden	_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev # -- Begin function _ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev
	.weak	_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev
	.p2align	4, 0x90
	.type	_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev,@function
_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev: # @_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev
.Lfunc_begin8:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception8
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$280, %rsp                      # imm = 0x118
	.cfi_def_cfa_offset 336
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %rax
	movq	%rax, 40(%rsp)                  # 8-byte Spill
	movq	%rax, (%rdi)
	movq	$0, 8(%rdi)
	movb	$0, 16(%rdi)
	leaq	168(%rsp), %rax
	movq	%rax, 152(%rsp)
	movq	$0, 160(%rsp)
	movb	$0, 168(%rsp)
	movq	%rsi, 240(%rsp)                 # 8-byte Spill
	movq	8(%rsi), %rdi
	testq	%rdi, %rdi
	movq	%rbx, (%rsp)                    # 8-byte Spill
	je	.LBB15_16
# %bb.1:
.Ltmp294:
	callq	PyObject_Str@PLT
.Ltmp295:
# %bb.2:
	movq	%rax, 272(%rsp)
	testq	%rax, %rax
	je	.LBB15_19
# %bb.3:
.Ltmp297:
	leaq	.L.str.13(%rip), %rsi
	leaq	.L.str.14(%rip), %rdx
	movq	%rax, %rdi
	callq	PyUnicode_AsEncodedString@PLT
.Ltmp298:
# %bb.4:
	movq	%rax, 48(%rsp)
	testq	%rax, %rax
	je	.LBB15_24
# %bb.5:
	movq	$0, 80(%rsp)
	movq	$0, 112(%rsp)
.Ltmp300:
	leaq	80(%rsp), %rsi
	leaq	112(%rsp), %rdx
	movq	%rax, %rdi
	callq	PyBytes_AsStringAndSize@PLT
.Ltmp301:
# %bb.6:
	cmpl	$-1, %eax
	je	.LBB15_29
# %bb.7:
	movq	80(%rsp), %r15
	movq	112(%rsp), %r14
	leaq	24(%rsp), %rbx
	movq	%rbx, 8(%rsp)
	testq	%r15, %r15
	setne	%al
	testq	%r14, %r14
	sete	%cl
	orb	%al, %cl
	je	.LBB15_577
# %bb.8:
	movq	%rbx, %r12
	cmpq	$16, %r14
	jb	.LBB15_13
# %bb.9:
	testq	%r14, %r14
	js	.LBB15_585
# %bb.10:
	movq	%r14, %rdi
	incq	%rdi
	js	.LBB15_530
# %bb.11:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
.Ltmp302:
	callq	_Znwm@PLT
.Ltmp303:
# %bb.12:                               # %.noexc153
	movq	%rax, %r12
	movq	%rax, 8(%rsp)
	movq	%r14, 24(%rsp)
.LBB15_13:                              # %._crit_edge.i.i
	testq	%r14, %r14
	je	.LBB15_47
# %bb.14:                               # %._crit_edge.i.i
	cmpq	$1, %r14
	jne	.LBB15_46
# %bb.15:
	movzbl	(%r15), %eax
	movb	%al, (%r12)
	jmp	.LBB15_47
.LBB15_16:
.Ltmp487:
	leaq	.L.str.24(%rip), %rcx
	movl	$21, %r8d
	movq	%rbx, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp488:
# %bb.17:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm.exit865
	movq	$21, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, 21(%rax)
	cmpq	$0, 8(%rbx)
	jne	.LBB15_18
.LBB15_382:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i866
	movq	(%rsp), %rbx                    # 8-byte Reload
	movq	(%rbx), %rsi
	cmpq	40(%rsp), %rsi                  # 8-byte Folded Reload
	je	.LBB15_385
# %bb.383:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i866
	cmpq	$15, 16(%rbx)
	jae	.LBB15_385
# %bb.384:
.Ltmp491:
	leaq	.L.str.25(%rip), %rcx
	movl	$15, %r8d
	movq	%rbx, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp492:
	jmp	.LBB15_387
.LBB15_19:
.Ltmp329:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind116detail12error_stringB5cxx11Ev
.Ltmp330:
# %bb.20:
	movq	152(%rsp), %rdi
	leaq	168(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_34
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	movq	8(%rsp), %rsi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rsi
	je	.LBB15_37
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	movq	168(%rsp), %rcx
	movq	%rsi, 152(%rsp)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 160(%rsp)
	testq	%rdi, %rdi
	je	.LBB15_36
# %bb.23:
	movq	%rdi, 8(%rsp)
	movq	%rcx, 24(%rsp)
	jmp	.LBB15_66
.LBB15_385:
	leaq	.L.str.25(%rip), %rax
	cmpq	%rax, %rsi
	je	.LBB15_525
# %bb.386:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm.exit.i872
	movabsq	$4487070949640979789, %rax      # imm = 0x3E4547415353454D
	movq	%rax, 7(%rsi)
	movabsq	$5557540158834558268, %rax      # imm = 0x4D205954504D453C
	movq	%rax, (%rsi)
	movq	(%rsp), %rbx                    # 8-byte Reload
.LBB15_387:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm.exit876
	movq	$15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, 15(%rax)
	movq	240(%rsp), %rax                 # 8-byte Reload
	movq	16(%rax), %rax
	testq	%rax, %rax
	jne	.LBB15_388
	jmp	.LBB15_397
.LBB15_24:
.Ltmp317:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind116detail12error_stringB5cxx11Ev
.Ltmp318:
# %bb.25:
	movq	152(%rsp), %rdi
	leaq	168(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_40
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i124
	movq	8(%rsp), %rsi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rsi
	je	.LBB15_43
# %bb.27:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i125
	movq	168(%rsp), %rcx
	movq	%rsi, 152(%rsp)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 160(%rsp)
	testq	%rdi, %rdi
	je	.LBB15_42
# %bb.28:
	movq	%rdi, 8(%rsp)
	movq	%rcx, 24(%rsp)
	jmp	.LBB15_75
.LBB15_29:
.Ltmp311:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind116detail12error_stringB5cxx11Ev
.Ltmp312:
# %bb.30:
	movq	152(%rsp), %rdi
	leaq	168(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_58
# %bb.31:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i137
	movq	8(%rsp), %rsi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rsi
	je	.LBB15_61
# %bb.32:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i138
	movq	168(%rsp), %rcx
	movq	%rsi, 152(%rsp)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 160(%rsp)
	testq	%rdi, %rdi
	je	.LBB15_60
# %bb.33:
	movq	%rdi, 8(%rsp)
	movq	%rcx, 24(%rsp)
	jmp	.LBB15_80
.LBB15_34:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	8(%rsp), %rsi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rsi
	je	.LBB15_37
# %bb.35:                               # %.thread.i
	movq	%rsi, 152(%rsp)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 160(%rsp)
.LBB15_36:
	movq	%rax, 8(%rsp)
	movq	%rax, %rdi
	jmp	.LBB15_66
.LBB15_37:
	movq	16(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB15_65
# %bb.38:
	cmpq	$1, %rdx
	jne	.LBB15_64
# %bb.39:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_65
.LBB15_40:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i129
	movq	8(%rsp), %rsi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rsi
	je	.LBB15_43
# %bb.41:                               # %.thread.i130
	movq	%rsi, 152(%rsp)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 160(%rsp)
.LBB15_42:
	movq	%rax, 8(%rsp)
	movq	%rax, %rdi
	jmp	.LBB15_75
.LBB15_43:
	movq	16(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB15_74
# %bb.44:
	cmpq	$1, %rdx
	jne	.LBB15_73
# %bb.45:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_74
.LBB15_46:
	movq	%r12, %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
.LBB15_47:
	movq	%r14, 16(%rsp)
	movb	$0, (%r12,%r14)
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %rdi
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB15_51
# %bb.48:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i154
	movq	8(%rsp), %rsi
	cmpq	%rbx, %rsi
	je	.LBB15_54
# %bb.49:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i155
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	16(%rcx), %rax
	movq	%rsi, (%rcx)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 8(%rcx)
	testq	%rdi, %rdi
	je	.LBB15_53
# %bb.50:
	movq	%rdi, 8(%rsp)
	movq	%rax, 24(%rsp)
	jmp	.LBB15_71
.LBB15_51:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i159
	movq	8(%rsp), %rsi
	cmpq	%rbx, %rsi
	je	.LBB15_54
# %bb.52:                               # %.thread.i160
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%rsi, (%rax)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 8(%rax)
.LBB15_53:
	movq	%rbx, 8(%rsp)
	movq	%rbx, %rdi
	jmp	.LBB15_71
.LBB15_54:
	leaq	8(%rsp), %rax
	cmpq	(%rsp), %rax                    # 8-byte Folded Reload
	je	.LBB15_533
# %bb.55:
	movq	16(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB15_70
# %bb.56:
	cmpq	$1, %rdx
	jne	.LBB15_69
# %bb.57:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_70
.LBB15_58:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i142
	movq	8(%rsp), %rsi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rsi
	je	.LBB15_61
# %bb.59:                               # %.thread.i143
	movq	%rsi, 152(%rsp)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 160(%rsp)
.LBB15_60:
	movq	%rax, 8(%rsp)
	movq	%rax, %rdi
	jmp	.LBB15_80
.LBB15_61:
	movq	16(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB15_79
# %bb.62:
	cmpq	$1, %rdx
	jne	.LBB15_78
# %bb.63:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_79
.LBB15_64:
	callq	memcpy@PLT
.LBB15_65:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	movq	16(%rsp), %rax
	movq	%rax, 160(%rsp)
	movq	152(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rsp), %rdi
.LBB15_66:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	movq	$0, 16(%rsp)
	movb	$0, (%rdi)
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_68
# %bb.67:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_68:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	8(%rdi), %rdx
.Ltmp332:
	leaq	.L.str.12(%rip), %rcx
	movl	$46, %r8d
	xorl	%esi, %esi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.Ltmp333:
	jmp	.LBB15_84
.LBB15_69:
	callq	memcpy@PLT
.LBB15_70:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i157
	movq	16(%rsp), %rax
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	%rax, 8(%rcx)
	movq	(%rcx), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rsp), %rdi
.LBB15_71:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit161
	movq	$0, 16(%rsp)
	movb	$0, (%rdi)
	movq	8(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB15_83
# %bb.72:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i162
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB15_83
.LBB15_73:
	callq	memcpy@PLT
.LBB15_74:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i127
	movq	16(%rsp), %rax
	movq	%rax, 160(%rsp)
	movq	152(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rsp), %rdi
.LBB15_75:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit131
	movq	$0, 16(%rsp)
	movb	$0, (%rdi)
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_77
# %bb.76:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i132
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_77:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit134
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	8(%rdi), %rdx
.Ltmp320:
	leaq	.L.str.12(%rip), %rcx
	movl	$46, %r8d
	xorl	%esi, %esi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.Ltmp321:
	jmp	.LBB15_83
.LBB15_78:
	callq	memcpy@PLT
.LBB15_79:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i140
	movq	16(%rsp), %rax
	movq	%rax, 160(%rsp)
	movq	152(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rsp), %rdi
.LBB15_80:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit144
	movq	$0, 16(%rsp)
	movb	$0, (%rdi)
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_82
# %bb.81:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i145
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_82:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit147
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	8(%rdi), %rdx
.Ltmp314:
	leaq	.L.str.12(%rip), %rcx
	movl	$46, %r8d
	xorl	%esi, %esi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.Ltmp315:
.LBB15_83:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit136
.Ltmp326:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp327:
.LBB15_84:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit
	movq	240(%rsp), %rax                 # 8-byte Reload
	movq	8(%rax), %rdi
.Ltmp335:
	leaq	.L.str.15(%rip), %rsi
	callq	PyObject_GetAttrString@PLT
.Ltmp336:
# %bb.85:
	movq	%rax, 200(%rsp)
	testq	%rax, %rax
	je	.LBB15_91
# %bb.86:
.Ltmp338:
	movq	%rax, %rdi
	callq	PyList_Size@PLT
.Ltmp339:
# %bb.87:
	testq	%rax, %rax
	js	.LBB15_92
# %bb.88:
	movabsq	$3777893186295716171, %rsi      # imm = 0x346DC5D63886594B
	cmpq	$10, %rax
	movq	%rax, 184(%rsp)                 # 8-byte Spill
	leaq	96(%rsp), %rbx
	jae	.LBB15_100
# %bb.89:                               # %.thread781
	movq	%rbx, 80(%rsp)
.LBB15_90:
	movb	$45, 96(%rsp)
	movl	$1, %r12d
	movl	$1, %r14d
	movq	%rbx, %r15
	jmp	.LBB15_125
.LBB15_91:
.Ltmp472:
	callq	PyErr_Clear@PLT
.Ltmp473:
	jmp	.LBB15_379
.LBB15_92:
.Ltmp455:
	leaq	48(%rsp), %rdi
	callq	_ZN8pybind116detail12error_stringB5cxx11Ev
.Ltmp456:
# %bb.93:
	movq	56(%rsp), %r12
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-35, %rax
	cmpq	%rax, %r12
	jg	.LBB15_579
# %bb.94:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	leaq	35(%r12), %rbx
	movq	48(%rsp), %r15
	leaq	64(%rsp), %r14
	cmpq	%r14, %r15
	je	.LBB15_106
# %bb.95:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.thread
	movq	64(%rsp), %r13
	movq	%r13, %rax
	cmpq	%r13, %rbx
	ja	.LBB15_107
# %bb.96:
	leaq	.L.str.16(%rip), %rax
	cmpq	%rax, %r15
	seta	%cl
	leaq	(%r15,%r12), %rdx
	cmpq	%rax, %rdx
	setb	%al
	orb	%cl, %al
	cmpb	$1, %al
	jne	.LBB15_536
# %bb.97:
	testq	%r12, %r12
	je	.LBB15_362
# %bb.98:
	cmpq	$1, %r12
	jne	.LBB15_361
# %bb.99:
	movzbl	(%r15), %eax
	movb	%al, 35(%r15)
	jmp	.LBB15_362
.LBB15_100:                             # %.lr.ph.i.i.preheader
	movl	$4, %r12d
	movq	%rax, %rcx
	.p2align	4, 0x90
.LBB15_101:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	cmpq	$99, %rcx
	jbe	.LBB15_113
# %bb.102:                              #   in Loop: Header=BB15_101 Depth=1
	cmpq	$999, %rcx                      # imm = 0x3E7
	jbe	.LBB15_121
# %bb.103:                              #   in Loop: Header=BB15_101 Depth=1
	cmpq	$10000, %rcx                    # imm = 0x2710
	jb	.LBB15_114
# %bb.104:                              #   in Loop: Header=BB15_101 Depth=1
	movq	%rcx, %rax
	mulq	%rsi
	shrq	$11, %rdx
	addl	$4, %r12d
	cmpq	$99999, %rcx                    # imm = 0x1869F
	movq	%rdx, %rcx
	ja	.LBB15_101
# %bb.105:                              # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit.i.loopexit
	addl	$-3, %r12d
	movl	%r12d, %r14d
	movq	%rbx, 80(%rsp)
	cmpl	$16, %r12d
	jae	.LBB15_115
	jmp	.LBB15_122
.LBB15_106:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i
	movl	$15, %eax
	movq	64(%rsp), %r13
.LBB15_107:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i877
	cmpq	$-36, %r12
	jle	.LBB15_582
# %bb.108:
	addq	%rax, %rax
	movabsq	$9223372036854775807, %r14      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%r14, %rax
	cmovbq	%rax, %r14
	cmpq	%rax, %rbx
	cmovaeq	%rbx, %r14
	movq	%r14, %rdi
	incq	%rdi
	js	.LBB15_528
# %bb.109:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i
.Ltmp460:
	callq	_Znwm@PLT
.Ltmp461:
# %bb.110:                              # %.noexc883
	movq	%rax, %rbp
	movups	.L.str.16+16(%rip), %xmm0
	movups	%xmm0, 16(%rax)
	movups	.L.str.16(%rip), %xmm0
	movups	%xmm0, (%rax)
	movl	$540682591, 31(%rax)            # imm = 0x203A295F
	testq	%r12, %r12
	je	.LBB15_118
# %bb.111:
	movq	%rbp, %rdi
	addq	$35, %rdi
	cmpq	$1, %r12
	jne	.LBB15_117
# %bb.112:
	movzbl	(%r15), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_118
.LBB15_113:
	addl	$-2, %r12d
.LBB15_114:                             # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit.i
	movl	%r12d, %r14d
	movq	%rbx, 80(%rsp)
	cmpl	$16, %r12d
	jb	.LBB15_122
.LBB15_115:                             # %.noexc.i184
	leaq	1(%r14), %rdi
.Ltmp341:
	callq	_Znwm@PLT
.Ltmp342:
# %bb.116:                              # %.noexc185
	movq	%rax, %r15
	movq	%rax, 80(%rsp)
	movq	%r14, 96(%rsp)
	jmp	.LBB15_124
.LBB15_117:
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB15_118:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit27.i
	leaq	64(%rsp), %rax
	cmpq	%rax, %r15
	je	.LBB15_120
# %bb.119:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i879
	incq	%r13
	movq	%r15, %rdi
	movq	%r13, %rsi
	callq	_ZdlPvm@PLT
.LBB15_120:                             # %.noexc821
	movq	%rbp, 48(%rsp)
	movq	%r14, 64(%rsp)
	movq	%rbp, %r15
	leaq	64(%rsp), %r14
	jmp	.LBB15_363
.LBB15_121:
	decl	%r12d
	movl	%r12d, %r14d
	movq	%rbx, 80(%rsp)
	cmpl	$16, %r12d
	jae	.LBB15_115
.LBB15_122:
	movq	%rbx, %r15
	testl	%r12d, %r12d
	je	.LBB15_125
# %bb.123:
	cmpl	$1, %r12d
	je	.LBB15_90
.LBB15_124:
	movq	%r15, %rdi
	movl	$45, %esi
	movq	%r14, %rdx
	callq	memset@PLT
.LBB15_125:
	movq	%r14, 88(%rsp)
	movb	$0, (%r15,%r14)
	movq	80(%rsp), %rcx
	movabsq	$2951479051793528259, %r9       # imm = 0x28F5C28F5C28F5C3
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %r10
	movq	184(%rsp), %rsi                 # 8-byte Reload
	cmpq	$100, %rsi
	jb	.LBB15_130
# %bb.126:                              # %.lr.ph.preheader.i.i
	addl	$-2, %r12d
	.p2align	4, 0x90
.LBB15_127:                             # %.lr.ph.i13.i
                                        # =>This Inner Loop Header: Depth=1
	leal	1(%r12), %edi
	movq	%rsi, %rax
	shrq	$2, %rax
	mulq	%r9
	shrq	$2, %rdx
	imull	$100, %edx, %eax
	movl	%esi, %r8d
	subl	%eax, %r8d
	movzbl	(%r10,%r8,2), %eax
	movzbl	1(%r10,%r8,2), %r8d
	movb	%r8b, (%rcx,%rdi)
	movl	%r12d, %edi
	movb	%al, (%rcx,%rdi)
	addl	$-2, %r12d
	cmpq	$9999, %rsi                     # imm = 0x270F
	movq	%rdx, %rsi
	ja	.LBB15_127
# %bb.128:                              # %._crit_edge.i.i183
	cmpq	$10, %rdx
	jb	.LBB15_131
.LBB15_129:
	movzbl	(%r10,%rdx,2), %eax
	movzbl	1(%r10,%rdx,2), %edx
	movb	%dl, 1(%rcx)
	jmp	.LBB15_132
.LBB15_130:
	movq	%rsi, %rdx
	cmpq	$10, %rdx
	jae	.LBB15_129
.LBB15_131:
	orb	$48, %dl
	movl	%edx, %eax
.LBB15_132:
	movq	%rbx, 144(%rsp)                 # 8-byte Spill
	movb	%al, (%rcx)
	movq	88(%rsp), %r12
	movq	%r12, %rax
	andq	$-16, %rax
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-15, %rcx
	cmpq	%rcx, %rax
	je	.LBB15_569
# %bb.133:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i822
	leaq	16(%r12), %rbp
	movq	80(%rsp), %r14
	leaq	96(%rsp), %rax
	cmpq	%rax, %r14
	je	.LBB15_139
# %bb.134:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i823.thread
	movq	96(%rsp), %r15
	movq	%r15, %rax
	cmpq	%r15, %rbp
	ja	.LBB15_140
# %bb.135:
	leaq	.L.str.17(%rip), %rax
	cmpq	%rax, %r14
	seta	%cl
	leaq	(%r14,%r12), %rdx
	cmpq	%rax, %rdx
	setb	%al
	orb	%cl, %al
	cmpb	$1, %al
	jne	.LBB15_532
# %bb.136:
	testq	%r12, %r12
	je	.LBB15_151
# %bb.137:
	cmpq	$1, %r12
	jne	.LBB15_150
# %bb.138:
	movzbl	(%r14), %eax
	movb	%al, 16(%r14)
	jmp	.LBB15_151
.LBB15_139:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i823
	movl	$15, %eax
	movq	96(%rsp), %r15
.LBB15_140:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i884
	cmpq	$-17, %r12
	jle	.LBB15_574
# %bb.141:
	addq	%rax, %rax
	movabsq	$9223372036854775807, %rbx      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rbx, %rax
	cmovbq	%rax, %rbx
	cmpq	%rax, %rbp
	cmovaeq	%rbp, %rbx
	movq	%rbx, %rdi
	incq	%rdi
	js	.LBB15_526
# %bb.142:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i886
.Ltmp346:
	callq	_Znwm@PLT
.Ltmp347:
# %bb.143:                              # %.noexc895
	movq	%rax, %r13
	movups	.L.str.17(%rip), %xmm0
	movups	%xmm0, (%rax)
	testq	%r12, %r12
	je	.LBB15_147
# %bb.144:
	movq	%r13, %rdi
	addq	$16, %rdi
	cmpq	$1, %r12
	jne	.LBB15_146
# %bb.145:
	movzbl	(%r14), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_147
.LBB15_146:
	movq	%r14, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB15_147:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit27.i889
	leaq	96(%rsp), %rax
	cmpq	%rax, %r14
	je	.LBB15_149
# %bb.148:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i890
	incq	%r15
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	_ZdlPvm@PLT
.LBB15_149:                             # %.noexc831
	movq	%r13, 80(%rsp)
	movq	%rbx, 96(%rsp)
	jmp	.LBB15_152
.LBB15_150:
	leaq	16(%r14), %rdi
	movq	%r14, %rsi
	movq	%r12, %rdx
	callq	memmove@PLT
.LBB15_151:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm.exit.i828
	movups	.L.str.17(%rip), %xmm0
	movups	%xmm0, (%r14)
.LBB15_152:                             # %.noexc189
	movq	%rbp, 88(%rsp)
	movq	80(%rsp), %rax
	movb	$0, (%rax,%rbp)
	leaq	64(%rsp), %r14
	movq	%r14, 48(%rsp)
	movq	80(%rsp), %rax
	leaq	96(%rsp), %rbx
	cmpq	%rbx, %rax
	je	.LBB15_154
# %bb.153:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i186
	movq	%rax, 48(%rsp)
	movq	88(%rsp), %r15
	movq	96(%rsp), %rcx
	movq	%rcx, 64(%rsp)
	jmp	.LBB15_155
.LBB15_154:
	movq	88(%rsp), %r15
	leaq	1(%r15), %rdx
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	memcpy@PLT
	movq	%r14, %rax
.LBB15_155:
	movq	144(%rsp), %r13                 # 8-byte Reload
	movq	%r15, 56(%rsp)
	movq	%rbx, 80(%rsp)
	movq	$0, 88(%rsp)
	movb	$0, 96(%rsp)
	movq	%r15, %rcx
	andq	$-2, %rcx
	movabsq	$9223372036854775807, %rdx      # imm = 0x7FFFFFFFFFFFFFFF
	decq	%rdx
	cmpq	%rdx, %rcx
	je	.LBB15_570
# %bb.156:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	leaq	2(%r15), %rbx
	movl	$15, %ecx
	cmpq	%r14, %rax
	je	.LBB15_158
# %bb.157:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	64(%rsp), %rcx
.LBB15_158:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	cmpq	%rcx, %rbx
	jbe	.LBB15_160
# %bb.159:
.Ltmp348:
	leaq	.L.str.18(%rip), %rcx
	leaq	48(%rsp), %rdi
	movl	$2, %r8d
	movq	%r15, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp349:
	jmp	.LBB15_161
.LBB15_160:
	movw	$14889, (%rax,%r15)             # imm = 0x3A29
.LBB15_161:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
	movq	%rbx, 56(%rsp)
	movq	48(%rsp), %rax
	movb	$0, (%rax,%rbx)
	leaq	24(%rsp), %r12
	movq	%r12, 8(%rsp)
	movq	48(%rsp), %rcx
	cmpq	%r14, %rcx
	je	.LBB15_163
# %bb.162:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i191
	movq	%rcx, 8(%rsp)
	movq	56(%rsp), %r15
	movq	64(%rsp), %rax
	movq	%rax, 24(%rsp)
	jmp	.LBB15_164
.LBB15_163:
	movq	56(%rsp), %r15
	leaq	1(%r15), %rdx
	movq	%r12, %rdi
	movq	%r14, %rsi
	callq	memcpy@PLT
	movq	%r12, %rcx
.LBB15_164:
	movq	%r15, 16(%rsp)
	movq	%r14, 48(%rsp)
	movq	$0, 56(%rsp)
	movb	$0, 64(%rsp)
	movq	(%rsp), %rdx                    # 8-byte Reload
	movq	8(%rdx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r15, %rax
	jb	.LBB15_572
# %bb.165:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i195
	leaq	(%rsi,%r15), %rbx
	movq	(%rdx), %rdi
	movl	$15, %eax
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB15_167
# %bb.166:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i195
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
.LBB15_167:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i195
	cmpq	%rax, %rbx
	jbe	.LBB15_169
# %bb.168:
.Ltmp350:
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	movq	%r15, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp351:
	jmp	.LBB15_173
.LBB15_169:
	testq	%r15, %r15
	je	.LBB15_173
# %bb.170:
	addq	%rsi, %rdi
	cmpq	$1, %r15
	jne	.LBB15_172
# %bb.171:
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_173
.LBB15_172:
	movq	%rcx, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB15_173:
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%rbx, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%rbx)
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB15_175
# %bb.174:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i203
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_175:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit205
	movq	48(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB15_177
# %bb.176:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i206
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_177:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit208
	movq	80(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB15_179
# %bb.178:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i209
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_179:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit211
	cmpq	$0, 184(%rsp)                   # 8-byte Folded Reload
	je	.LBB15_379
# %bb.180:                              # %.lr.ph.preheader
	leaq	24(%rsp), %r15
	movq	$0, 144(%rsp)                   # 8-byte Folded Spill
	leaq	.L.str.9(%rip), %rax
	movq	%rax, 192(%rsp)                 # 8-byte Spill
	.p2align	4, 0x90
.LBB15_181:                             # %.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB15_222 Depth 2
                                        #     Child Loop BB15_297 Depth 2
                                        #     Child Loop BB15_207 Depth 2
                                        #     Child Loop BB15_241 Depth 2
	movq	200(%rsp), %rax
	movq	8(%rax), %rcx
	testb	$2, 171(%rcx)
	je	.LBB15_544
# %bb.182:                              #   in Loop: Header=BB15_181 Depth=1
	movq	24(%rax), %rax
	movq	144(%rsp), %rcx                 # 8-byte Reload
	movq	(%rax,%rcx,8), %rdi
.Ltmp352:
	leaq	.L.str.13(%rip), %rsi
	leaq	.L.str.14(%rip), %rdx
	callq	PyUnicode_AsEncodedString@PLT
.Ltmp353:
# %bb.183:                              #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, 264(%rsp)
	testq	%rax, %rax
	je	.LBB15_200
# %bb.184:                              #   in Loop: Header=BB15_181 Depth=1
	movq	$0, 256(%rsp)
	movq	$0, 248(%rsp)
.Ltmp355:
	movq	%rax, %rdi
	leaq	256(%rsp), %rsi
	leaq	248(%rsp), %rdx
	callq	PyBytes_AsStringAndSize@PLT
.Ltmp356:
# %bb.185:                              #   in Loop: Header=BB15_181 Depth=1
	cmpl	$-1, %eax
	movabsq	$3777893186295716171, %rsi      # imm = 0x346DC5D63886594B
	je	.LBB15_203
# %bb.186:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %rax
	movl	$15, %ecx
	cmpq	40(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB15_188
# %bb.187:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	(%rcx), %rcx
.LBB15_188:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	8(%rdi), %r14
	leaq	1(%r14), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB15_191
# %bb.189:                              #   in Loop: Header=BB15_181 Depth=1
.Ltmp357:
	movl	$1, %r8d
	movq	%r14, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp358:
# %bb.190:                              # %.noexc361
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	(%rdi), %rax
.LBB15_191:                             #   in Loop: Header=BB15_181 Depth=1
	movb	$10, (%rax,%r14)
	movq	%rbx, 8(%rdi)
	movq	(%rdi), %rax
	movb	$0, 1(%rax,%r14)
	movq	%r15, %r12
	movq	256(%rsp), %r15
	movq	248(%rsp), %r14
	movq	%r12, 8(%rsp)
	testq	%r15, %r15
	setne	%al
	testq	%r14, %r14
	sete	%cl
	orb	%al, %cl
	je	.LBB15_545
# %bb.192:                              #   in Loop: Header=BB15_181 Depth=1
	cmpq	$16, %r14
	jb	.LBB15_197
# %bb.193:                              #   in Loop: Header=BB15_181 Depth=1
	testq	%r14, %r14
	js	.LBB15_555
# %bb.194:                              #   in Loop: Header=BB15_181 Depth=1
	movq	%r14, %rdi
	incq	%rdi
	js	.LBB15_519
# %bb.195:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i364
                                        #   in Loop: Header=BB15_181 Depth=1
.Ltmp360:
	callq	_Znwm@PLT
.Ltmp361:
# %bb.196:                              # %.noexc370
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, %r12
	movq	%rax, 8(%rsp)
	movq	%r14, 24(%rsp)
.LBB15_197:                             # %._crit_edge.i.i363
                                        #   in Loop: Header=BB15_181 Depth=1
	testq	%r14, %r14
	je	.LBB15_213
# %bb.198:                              # %._crit_edge.i.i363
                                        #   in Loop: Header=BB15_181 Depth=1
	cmpq	$1, %r14
	jne	.LBB15_212
# %bb.199:                              #   in Loop: Header=BB15_181 Depth=1
	movzbl	(%r15), %eax
	movb	%al, (%r12)
	jmp	.LBB15_213
	.p2align	4, 0x90
.LBB15_200:                             #   in Loop: Header=BB15_181 Depth=1
	movq	144(%rsp), %rcx                 # 8-byte Reload
	cmpq	$10, %rcx
	jae	.LBB15_206
# %bb.201:                              # %.thread788
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	128(%rsp), %rax
	movq	%rax, 112(%rsp)
.LBB15_202:                             #   in Loop: Header=BB15_181 Depth=1
	movb	$45, 128(%rsp)
	movl	$1, %ebx
	movl	$1, %r14d
	movq	%rax, %r15
	jmp	.LBB15_239
	.p2align	4, 0x90
.LBB15_203:                             #   in Loop: Header=BB15_181 Depth=1
	movq	144(%rsp), %rcx                 # 8-byte Reload
	cmpq	$10, %rcx
	jae	.LBB15_221
# %bb.204:                              # %.thread795
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	128(%rsp), %rax
	movq	%rax, 112(%rsp)
.LBB15_205:                             #   in Loop: Header=BB15_181 Depth=1
	movb	$45, 128(%rsp)
	movl	$1, %ebx
	movl	$1, %r14d
	movq	%rax, %r15
	jmp	.LBB15_295
.LBB15_206:                             # %.lr.ph.i.i221.preheader
                                        #   in Loop: Header=BB15_181 Depth=1
	movl	$4, %ebx
	movabsq	$3777893186295716171, %rsi      # imm = 0x346DC5D63886594B
	.p2align	4, 0x90
.LBB15_207:                             # %.lr.ph.i.i221
                                        #   Parent Loop BB15_181 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpq	$99, %rcx
	jbe	.LBB15_230
# %bb.208:                              #   in Loop: Header=BB15_207 Depth=2
	cmpq	$999, %rcx                      # imm = 0x3E7
	jbe	.LBB15_231
# %bb.209:                              #   in Loop: Header=BB15_207 Depth=2
	cmpq	$10000, %rcx                    # imm = 0x2710
	jb	.LBB15_232
# %bb.210:                              #   in Loop: Header=BB15_207 Depth=2
	movq	%rcx, %rax
	mulq	%rsi
	shrq	$11, %rdx
	addl	$4, %ebx
	cmpq	$99999, %rcx                    # imm = 0x1869F
	movq	%rdx, %rcx
	ja	.LBB15_207
# %bb.211:                              # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit.i224.loopexit
                                        #   in Loop: Header=BB15_181 Depth=1
	addl	$-3, %ebx
	jmp	.LBB15_232
.LBB15_212:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%r12, %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
.LBB15_213:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%r14, 16(%rsp)
	movb	$0, (%r12,%r14)
	movq	16(%rsp), %r8
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	8(%rcx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB15_547
# %bb.214:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i372
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	(%rcx), %rdi
	movl	$15, %eax
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	leaq	24(%rsp), %r15
	je	.LBB15_216
# %bb.215:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i372
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
.LBB15_216:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i372
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	8(%rsp), %rcx
	leaq	(%rsi,%r8), %rbx
	cmpq	%rax, %rbx
	jbe	.LBB15_218
# %bb.217:                              #   in Loop: Header=BB15_181 Depth=1
.Ltmp363:
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp364:
	jmp	.LBB15_228
.LBB15_218:                             #   in Loop: Header=BB15_181 Depth=1
	testq	%r8, %r8
	je	.LBB15_228
# %bb.219:                              #   in Loop: Header=BB15_181 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB15_227
# %bb.220:                              #   in Loop: Header=BB15_181 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_228
.LBB15_221:                             # %.lr.ph.i.i291.preheader
                                        #   in Loop: Header=BB15_181 Depth=1
	movl	$4, %ebx
	.p2align	4, 0x90
.LBB15_222:                             # %.lr.ph.i.i291
                                        #   Parent Loop BB15_181 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpq	$99, %rcx
	jbe	.LBB15_286
# %bb.223:                              #   in Loop: Header=BB15_222 Depth=2
	cmpq	$999, %rcx                      # imm = 0x3E7
	jbe	.LBB15_287
# %bb.224:                              #   in Loop: Header=BB15_222 Depth=2
	cmpq	$10000, %rcx                    # imm = 0x2710
	jb	.LBB15_288
# %bb.225:                              #   in Loop: Header=BB15_222 Depth=2
	movq	%rcx, %rax
	mulq	%rsi
	shrq	$11, %rdx
	addl	$4, %ebx
	cmpq	$99999, %rcx                    # imm = 0x1869F
	movq	%rdx, %rcx
	ja	.LBB15_222
# %bb.226:                              # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit.i294.loopexit
                                        #   in Loop: Header=BB15_181 Depth=1
	addl	$-3, %ebx
	jmp	.LBB15_288
.LBB15_227:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB15_228:                             #   in Loop: Header=BB15_181 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%rbx, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%rbx)
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB15_356
# %bb.229:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i380
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	24(%rsp), %rsi
	jmp	.LBB15_355
.LBB15_230:                             #   in Loop: Header=BB15_181 Depth=1
	addl	$-2, %ebx
	jmp	.LBB15_232
.LBB15_231:                             #   in Loop: Header=BB15_181 Depth=1
	decl	%ebx
.LBB15_232:                             # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit.i224
                                        #   in Loop: Header=BB15_181 Depth=1
	movl	%ebx, %r14d
	leaq	128(%rsp), %rax
	movq	%rax, 112(%rsp)
	cmpl	$16, %ebx
	jb	.LBB15_235
# %bb.233:                              # %.noexc.i234
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	1(%r14), %rdi
.Ltmp407:
	callq	_Znwm@PLT
.Ltmp408:
# %bb.234:                              # %.noexc235
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, %r15
	movq	%rax, 112(%rsp)
	movq	%r14, 128(%rsp)
	jmp	.LBB15_237
.LBB15_235:                             #   in Loop: Header=BB15_181 Depth=1
	testl	%ebx, %ebx
	je	.LBB15_238
# %bb.236:                              #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, %r15
	cmpl	$1, %ebx
	je	.LBB15_202
.LBB15_237:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%r15, %rdi
	movl	$45, %esi
	movq	%r14, %rdx
	callq	memset@PLT
	jmp	.LBB15_239
.LBB15_238:                             #   in Loop: Header=BB15_181 Depth=1
	leaq	128(%rsp), %r15
	.p2align	4, 0x90
.LBB15_239:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%r14, 120(%rsp)
	movb	$0, (%r15,%r14)
	movq	112(%rsp), %rcx
	movq	144(%rsp), %rsi                 # 8-byte Reload
	movq	%rsi, %rdx
	cmpq	$100, %rsi
	movabsq	$2951479051793528259, %r9       # imm = 0x28F5C28F5C28F5C3
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %r10
	jb	.LBB15_242
# %bb.240:                              # %.lr.ph.preheader.i.i230
                                        #   in Loop: Header=BB15_181 Depth=1
	addl	$-2, %ebx
	.p2align	4, 0x90
.LBB15_241:                             # %.lr.ph.i13.i231
                                        #   Parent Loop BB15_181 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	leal	1(%rbx), %edi
	movq	%rsi, %rax
	shrq	$2, %rax
	mulq	%r9
	shrq	$2, %rdx
	imull	$100, %edx, %eax
	movl	%esi, %r8d
	subl	%eax, %r8d
	movzbl	(%r10,%r8,2), %eax
	movzbl	1(%r10,%r8,2), %r8d
	movb	%r8b, (%rcx,%rdi)
	movl	%ebx, %edi
	movb	%al, (%rcx,%rdi)
	addl	$-2, %ebx
	cmpq	$9999, %rsi                     # imm = 0x270F
	movq	%rdx, %rsi
	ja	.LBB15_241
.LBB15_242:                             # %._crit_edge.i.i227
                                        #   in Loop: Header=BB15_181 Depth=1
	cmpq	$10, %rdx
	jb	.LBB15_244
# %bb.243:                              #   in Loop: Header=BB15_181 Depth=1
	movzbl	(%r10,%rdx,2), %eax
	movzbl	1(%r10,%rdx,2), %edx
	movb	%dl, 1(%rcx)
	jmp	.LBB15_245
.LBB15_244:                             #   in Loop: Header=BB15_181 Depth=1
	orb	$48, %dl
	movl	%edx, %eax
.LBB15_245:                             #   in Loop: Header=BB15_181 Depth=1
	movb	%al, (%rcx)
	movq	120(%rsp), %r13
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-29, %rax
	cmpq	%rax, %r13
	jg	.LBB15_558
# %bb.246:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i833
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	29(%r13), %rbx
	movq	112(%rsp), %r14
	leaq	128(%rsp), %rax
	cmpq	%rax, %r14
	je	.LBB15_249
# %bb.247:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i834.thread
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	128(%rsp), %r15
	movq	%r15, %rax
	cmpq	%r15, %rbx
	jbe	.LBB15_259
# %bb.248:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i897
                                        #   in Loop: Header=BB15_181 Depth=1
	cmpq	$-29, %r13
	jge	.LBB15_251
	jmp	.LBB15_557
.LBB15_249:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i834
                                        #   in Loop: Header=BB15_181 Depth=1
	cmpq	$15, %rbx
	jbe	.LBB15_259
# %bb.250:                              #   in Loop: Header=BB15_181 Depth=1
	movl	$15, %eax
	movq	128(%rsp), %r15
	cmpq	$-29, %r13
	jl	.LBB15_557
.LBB15_251:                             #   in Loop: Header=BB15_181 Depth=1
	addq	%rax, %rax
	movabsq	$9223372036854775807, %rbp      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rbp, %rax
	cmovbq	%rax, %rbp
	cmpq	%rax, %rbx
	cmovaeq	%rbx, %rbp
	movq	%rbp, %rdi
	incq	%rdi
	js	.LBB15_521
# %bb.252:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i899
                                        #   in Loop: Header=BB15_181 Depth=1
.Ltmp412:
	callq	_Znwm@PLT
.Ltmp413:
# %bb.253:                              # %.noexc908
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, %r12
	movups	.L.str.21+13(%rip), %xmm0
	movups	%xmm0, 13(%rax)
	movups	.L.str.21(%rip), %xmm0
	movups	%xmm0, (%rax)
	testq	%r13, %r13
	je	.LBB15_256
# %bb.254:                              #   in Loop: Header=BB15_181 Depth=1
	movq	%r12, %rdi
	addq	$29, %rdi
	cmpq	$1, %r13
	jne	.LBB15_285
# %bb.255:                              #   in Loop: Header=BB15_181 Depth=1
	movzbl	(%r14), %eax
	movb	%al, (%rdi)
.LBB15_256:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit27.i902
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	128(%rsp), %rax
	cmpq	%rax, %r14
	je	.LBB15_258
.LBB15_257:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i903
                                        #   in Loop: Header=BB15_181 Depth=1
	incq	%r15
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	_ZdlPvm@PLT
.LBB15_258:                             # %.noexc842
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%r12, 112(%rsp)
	movq	%rbp, 128(%rsp)
	jmp	.LBB15_265
.LBB15_259:                             #   in Loop: Header=BB15_181 Depth=1
	leaq	.L.str.21(%rip), %rdx
	cmpq	%rdx, %r14
	seta	%al
	leaq	(%r14,%r13), %rcx
	cmpq	%rdx, %rcx
	setb	%cl
	orb	%al, %cl
	cmpb	$1, %cl
	jne	.LBB15_359
# %bb.260:                              #   in Loop: Header=BB15_181 Depth=1
	testq	%r13, %r13
	je	.LBB15_264
# %bb.261:                              #   in Loop: Header=BB15_181 Depth=1
	cmpq	$1, %r13
	jne	.LBB15_263
# %bb.262:                              #   in Loop: Header=BB15_181 Depth=1
	movzbl	(%r14), %eax
	movb	%al, 29(%r14)
	jmp	.LBB15_264
.LBB15_263:                             #   in Loop: Header=BB15_181 Depth=1
	leaq	29(%r14), %rdi
	movq	%r14, %rsi
	movq	%r13, %rdx
	callq	memmove@PLT
.LBB15_264:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm.exit.i839
                                        #   in Loop: Header=BB15_181 Depth=1
	movups	.L.str.21+13(%rip), %xmm0
	movups	%xmm0, 13(%r14)
	movups	.L.str.21(%rip), %xmm0
	movups	%xmm0, (%r14)
.LBB15_265:                             # %.noexc240
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rbx, 120(%rsp)
	movq	112(%rsp), %rax
	movb	$0, (%rax,%rbx)
	leaq	96(%rsp), %r15
	movq	%r15, 80(%rsp)
	movq	112(%rsp), %rax
	leaq	128(%rsp), %rsi
	cmpq	%rsi, %rax
	je	.LBB15_269
# %bb.266:                              #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, 80(%rsp)
	movq	120(%rsp), %r14
	movq	120(%rsp), %rcx
	movq	%rcx, 88(%rsp)
	movq	128(%rsp), %rcx
	movq	%rcx, 96(%rsp)
	movq	%rsi, 112(%rsp)
	movq	$0, 120(%rsp)
	movb	$0, 128(%rsp)
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-3, %rcx
	cmpq	%rcx, %r14
	jg	.LBB15_551
# %bb.267:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i242
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	3(%r14), %rbx
	leaq	96(%rsp), %rcx
	cmpq	%rcx, %rax
	leaq	24(%rsp), %r15
	je	.LBB15_270
# %bb.268:                              #   in Loop: Header=BB15_181 Depth=1
	xorl	%ecx, %ecx
	movl	$15, %edx
	testb	%cl, %cl
	je	.LBB15_271
	jmp	.LBB15_272
.LBB15_269:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i242.thread
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	120(%rsp), %r14
	leaq	1(%r14), %rdx
	movq	%r15, %rdi
	callq	memcpy@PLT
	movq	%r14, 88(%rsp)
	movq	$0, 120(%rsp)
	movb	$0, 128(%rsp)
	leaq	3(%r14), %rbx
	movq	%r15, %rax
	leaq	24(%rsp), %r15
.LBB15_270:                             #   in Loop: Header=BB15_181 Depth=1
	movb	$1, %cl
	movl	$15, %edx
	testb	%cl, %cl
	jne	.LBB15_272
.LBB15_271:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i243
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	96(%rsp), %rdx
.LBB15_272:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i243
                                        #   in Loop: Header=BB15_181 Depth=1
	cmpq	%rdx, %rbx
	jbe	.LBB15_274
# %bb.273:                              #   in Loop: Header=BB15_181 Depth=1
.Ltmp418:
	movl	$3, %r8d
	leaq	80(%rsp), %rdi
	movq	%r14, %rsi
	xorl	%edx, %edx
	leaq	.L.str.22(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp419:
	jmp	.LBB15_275
.LBB15_274:                             #   in Loop: Header=BB15_181 Depth=1
	movb	$32, 2(%rax,%r14)
	movw	$14941, (%rax,%r14)             # imm = 0x3A5D
.LBB15_275:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i247
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rbx, 88(%rsp)
	movq	80(%rsp), %rax
	movb	$0, (%rax,%rbx)
	leaq	64(%rsp), %rdi
	movq	%rdi, 48(%rsp)
	movq	80(%rsp), %rax
	leaq	96(%rsp), %r14
	cmpq	%r14, %rax
	je	.LBB15_277
# %bb.276:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i248
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, 48(%rsp)
	movq	88(%rsp), %rbx
	movq	96(%rsp), %rax
	movq	%rax, 64(%rsp)
	jmp	.LBB15_278
.LBB15_277:                             #   in Loop: Header=BB15_181 Depth=1
	movq	88(%rsp), %rbx
	leaq	1(%rbx), %rdx
	movq	%r14, %rsi
	callq	memcpy@PLT
.LBB15_278:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%rbx, 56(%rsp)
	movq	%r14, 80(%rsp)
	movq	$0, 88(%rsp)
	movb	$0, 96(%rsp)
.Ltmp421:
	leaq	208(%rsp), %rbx
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail12error_stringB5cxx11Ev
.Ltmp422:
# %bb.279:                              #   in Loop: Header=BB15_181 Depth=1
.Ltmp424:
	leaq	8(%rsp), %rdi
	leaq	48(%rsp), %rsi
	movq	%rbx, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp425:
# %bb.280:                              #   in Loop: Header=BB15_181 Depth=1
	movq	16(%rsp), %r8
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	8(%rcx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB15_549
# %bb.281:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i253
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	(%rcx), %rdi
	movl	$15, %eax
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB15_283
# %bb.282:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i253
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
.LBB15_283:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i253
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	8(%rsp), %rcx
	leaq	(%rsi,%r8), %rbx
	cmpq	%rax, %rbx
	jbe	.LBB15_341
# %bb.284:                              #   in Loop: Header=BB15_181 Depth=1
.Ltmp427:
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp428:
	jmp	.LBB15_345
.LBB15_285:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%r14, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
	leaq	128(%rsp), %rax
	cmpq	%rax, %r14
	jne	.LBB15_257
	jmp	.LBB15_258
.LBB15_286:                             #   in Loop: Header=BB15_181 Depth=1
	addl	$-2, %ebx
	jmp	.LBB15_288
.LBB15_287:                             #   in Loop: Header=BB15_181 Depth=1
	decl	%ebx
.LBB15_288:                             # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit.i294
                                        #   in Loop: Header=BB15_181 Depth=1
	movl	%ebx, %r14d
	leaq	128(%rsp), %rax
	movq	%rax, 112(%rsp)
	cmpl	$16, %ebx
	jb	.LBB15_291
# %bb.289:                              # %.noexc.i304
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	1(%r14), %rdi
.Ltmp376:
	callq	_Znwm@PLT
.Ltmp377:
# %bb.290:                              # %.noexc305
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, %r15
	movq	%rax, 112(%rsp)
	movq	%r14, 128(%rsp)
	jmp	.LBB15_293
.LBB15_291:                             #   in Loop: Header=BB15_181 Depth=1
	testl	%ebx, %ebx
	je	.LBB15_294
# %bb.292:                              #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, %r15
	cmpl	$1, %ebx
	je	.LBB15_205
.LBB15_293:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%r15, %rdi
	movl	$45, %esi
	movq	%r14, %rdx
	callq	memset@PLT
	jmp	.LBB15_295
.LBB15_294:                             #   in Loop: Header=BB15_181 Depth=1
	leaq	128(%rsp), %r15
	.p2align	4, 0x90
.LBB15_295:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%r14, 120(%rsp)
	movb	$0, (%r15,%r14)
	movq	112(%rsp), %rcx
	movq	144(%rsp), %rsi                 # 8-byte Reload
	movq	%rsi, %rdx
	cmpq	$100, %rsi
	movabsq	$2951479051793528259, %r9       # imm = 0x28F5C28F5C28F5C3
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %r10
	jb	.LBB15_298
# %bb.296:                              # %.lr.ph.preheader.i.i300
                                        #   in Loop: Header=BB15_181 Depth=1
	addl	$-2, %ebx
	.p2align	4, 0x90
.LBB15_297:                             # %.lr.ph.i13.i301
                                        #   Parent Loop BB15_181 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	leal	1(%rbx), %edi
	movq	%rsi, %rax
	shrq	$2, %rax
	mulq	%r9
	shrq	$2, %rdx
	imull	$100, %edx, %eax
	movl	%esi, %r8d
	subl	%eax, %r8d
	movzbl	(%r10,%r8,2), %eax
	movzbl	1(%r10,%r8,2), %r8d
	movb	%r8b, (%rcx,%rdi)
	movl	%ebx, %edi
	movb	%al, (%rcx,%rdi)
	addl	$-2, %ebx
	cmpq	$9999, %rsi                     # imm = 0x270F
	movq	%rdx, %rsi
	ja	.LBB15_297
.LBB15_298:                             # %._crit_edge.i.i297
                                        #   in Loop: Header=BB15_181 Depth=1
	cmpq	$10, %rdx
	jb	.LBB15_300
# %bb.299:                              #   in Loop: Header=BB15_181 Depth=1
	movzbl	(%r10,%rdx,2), %eax
	movzbl	1(%r10,%rdx,2), %edx
	movb	%dl, 1(%rcx)
	jmp	.LBB15_301
.LBB15_300:                             #   in Loop: Header=BB15_181 Depth=1
	orb	$48, %dl
	movl	%edx, %eax
.LBB15_301:                             #   in Loop: Header=BB15_181 Depth=1
	movb	%al, (%rcx)
	movq	120(%rsp), %r13
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-30, %rax
	cmpq	%rax, %r13
	jg	.LBB15_567
# %bb.302:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i844
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	30(%r13), %rbx
	movq	112(%rsp), %r14
	leaq	128(%rsp), %rax
	cmpq	%rax, %r14
	je	.LBB15_305
# %bb.303:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i845.thread
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	128(%rsp), %r15
	movq	%r15, %rax
	cmpq	%r15, %rbx
	jbe	.LBB15_315
# %bb.304:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i910
                                        #   in Loop: Header=BB15_181 Depth=1
	cmpq	$-30, %r13
	jge	.LBB15_307
	jmp	.LBB15_566
.LBB15_305:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i845
                                        #   in Loop: Header=BB15_181 Depth=1
	cmpq	$15, %rbx
	jbe	.LBB15_315
# %bb.306:                              #   in Loop: Header=BB15_181 Depth=1
	movl	$15, %eax
	movq	128(%rsp), %r15
	cmpq	$-30, %r13
	jl	.LBB15_566
.LBB15_307:                             #   in Loop: Header=BB15_181 Depth=1
	addq	%rax, %rax
	movabsq	$9223372036854775807, %rbp      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rbp, %rax
	cmovbq	%rax, %rbp
	cmpq	%rax, %rbx
	cmovaeq	%rbx, %rbp
	movq	%rbp, %rdi
	incq	%rdi
	js	.LBB15_523
# %bb.308:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i912
                                        #   in Loop: Header=BB15_181 Depth=1
.Ltmp381:
	callq	_Znwm@PLT
.Ltmp382:
# %bb.309:                              # %.noexc921
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, %r12
	movups	.L.str.23+14(%rip), %xmm0
	movups	%xmm0, 14(%rax)
	movups	.L.str.23(%rip), %xmm0
	movups	%xmm0, (%rax)
	testq	%r13, %r13
	je	.LBB15_312
# %bb.310:                              #   in Loop: Header=BB15_181 Depth=1
	movq	%r12, %rdi
	addq	$30, %rdi
	cmpq	$1, %r13
	jne	.LBB15_358
# %bb.311:                              #   in Loop: Header=BB15_181 Depth=1
	movzbl	(%r14), %eax
	movb	%al, (%rdi)
.LBB15_312:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit27.i915
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	128(%rsp), %rax
	cmpq	%rax, %r14
	je	.LBB15_314
.LBB15_313:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i916
                                        #   in Loop: Header=BB15_181 Depth=1
	incq	%r15
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	_ZdlPvm@PLT
.LBB15_314:                             # %.noexc853
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%r12, 112(%rsp)
	movq	%rbp, 128(%rsp)
	jmp	.LBB15_321
.LBB15_315:                             #   in Loop: Header=BB15_181 Depth=1
	leaq	.L.str.23(%rip), %rdx
	cmpq	%rdx, %r14
	seta	%al
	leaq	(%r14,%r13), %rcx
	cmpq	%rdx, %rcx
	setb	%cl
	orb	%al, %cl
	cmpb	$1, %cl
	jne	.LBB15_360
# %bb.316:                              #   in Loop: Header=BB15_181 Depth=1
	testq	%r13, %r13
	je	.LBB15_320
# %bb.317:                              #   in Loop: Header=BB15_181 Depth=1
	cmpq	$1, %r13
	jne	.LBB15_319
# %bb.318:                              #   in Loop: Header=BB15_181 Depth=1
	movzbl	(%r14), %eax
	movb	%al, 30(%r14)
	jmp	.LBB15_320
.LBB15_319:                             #   in Loop: Header=BB15_181 Depth=1
	leaq	30(%r14), %rdi
	movq	%r14, %rsi
	movq	%r13, %rdx
	callq	memmove@PLT
.LBB15_320:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm.exit.i850
                                        #   in Loop: Header=BB15_181 Depth=1
	movups	.L.str.23+14(%rip), %xmm0
	movups	%xmm0, 14(%r14)
	movups	.L.str.23(%rip), %xmm0
	movups	%xmm0, (%r14)
.LBB15_321:                             # %.noexc310
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rbx, 120(%rsp)
	movq	112(%rsp), %rax
	movb	$0, (%rax,%rbx)
	leaq	96(%rsp), %r15
	movq	%r15, 80(%rsp)
	movq	112(%rsp), %rax
	leaq	128(%rsp), %rsi
	cmpq	%rsi, %rax
	je	.LBB15_325
# %bb.322:                              #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, 80(%rsp)
	movq	120(%rsp), %r14
	movq	120(%rsp), %rcx
	movq	%rcx, 88(%rsp)
	movq	128(%rsp), %rcx
	movq	%rcx, 96(%rsp)
	movq	%rsi, 112(%rsp)
	movq	$0, 120(%rsp)
	movb	$0, 128(%rsp)
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-3, %rcx
	cmpq	%rcx, %r14
	jg	.LBB15_560
# %bb.323:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i312
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	3(%r14), %rbx
	leaq	96(%rsp), %rcx
	cmpq	%rcx, %rax
	leaq	24(%rsp), %r15
	je	.LBB15_326
# %bb.324:                              #   in Loop: Header=BB15_181 Depth=1
	xorl	%ecx, %ecx
	movl	$15, %edx
	testb	%cl, %cl
	je	.LBB15_327
	jmp	.LBB15_328
.LBB15_325:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i312.thread
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	120(%rsp), %r14
	leaq	1(%r14), %rdx
	movq	%r15, %rdi
	callq	memcpy@PLT
	movq	%r14, 88(%rsp)
	movq	$0, 120(%rsp)
	movb	$0, 128(%rsp)
	leaq	3(%r14), %rbx
	movq	%r15, %rax
	leaq	24(%rsp), %r15
.LBB15_326:                             #   in Loop: Header=BB15_181 Depth=1
	movb	$1, %cl
	movl	$15, %edx
	testb	%cl, %cl
	jne	.LBB15_328
.LBB15_327:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i313
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	96(%rsp), %rdx
.LBB15_328:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i313
                                        #   in Loop: Header=BB15_181 Depth=1
	cmpq	%rdx, %rbx
	jbe	.LBB15_330
# %bb.329:                              #   in Loop: Header=BB15_181 Depth=1
.Ltmp387:
	movl	$3, %r8d
	leaq	80(%rsp), %rdi
	movq	%r14, %rsi
	xorl	%edx, %edx
	leaq	.L.str.22(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp388:
	jmp	.LBB15_331
.LBB15_330:                             #   in Loop: Header=BB15_181 Depth=1
	movb	$32, 2(%rax,%r14)
	movw	$14941, (%rax,%r14)             # imm = 0x3A5D
.LBB15_331:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i317
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rbx, 88(%rsp)
	movq	80(%rsp), %rax
	movb	$0, (%rax,%rbx)
	leaq	64(%rsp), %rdi
	movq	%rdi, 48(%rsp)
	movq	80(%rsp), %rax
	leaq	96(%rsp), %r14
	cmpq	%r14, %rax
	je	.LBB15_333
# %bb.332:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i318
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, 48(%rsp)
	movq	88(%rsp), %rbx
	movq	96(%rsp), %rax
	movq	%rax, 64(%rsp)
	jmp	.LBB15_334
.LBB15_333:                             #   in Loop: Header=BB15_181 Depth=1
	movq	88(%rsp), %rbx
	leaq	1(%rbx), %rdx
	movq	%r14, %rsi
	callq	memcpy@PLT
.LBB15_334:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%rbx, 56(%rsp)
	movq	%r14, 80(%rsp)
	movq	$0, 88(%rsp)
	movb	$0, 96(%rsp)
.Ltmp390:
	leaq	208(%rsp), %rbx
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail12error_stringB5cxx11Ev
.Ltmp391:
# %bb.335:                              #   in Loop: Header=BB15_181 Depth=1
.Ltmp393:
	leaq	8(%rsp), %rdi
	leaq	48(%rsp), %rsi
	movq	%rbx, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp394:
# %bb.336:                              #   in Loop: Header=BB15_181 Depth=1
	movq	16(%rsp), %r8
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	8(%rcx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB15_553
# %bb.337:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i323
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	(%rcx), %rdi
	movl	$15, %eax
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB15_339
# %bb.338:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i323
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
.LBB15_339:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i323
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	8(%rsp), %rcx
	leaq	(%rsi,%r8), %rbx
	cmpq	%rax, %rbx
	jbe	.LBB15_341
# %bb.340:                              #   in Loop: Header=BB15_181 Depth=1
.Ltmp396:
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp397:
	jmp	.LBB15_345
	.p2align	4, 0x90
.LBB15_341:                             #   in Loop: Header=BB15_181 Depth=1
	testq	%r8, %r8
	je	.LBB15_345
# %bb.342:                              #   in Loop: Header=BB15_181 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB15_344
# %bb.343:                              #   in Loop: Header=BB15_181 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_345
.LBB15_344:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB15_345:                             #   in Loop: Header=BB15_181 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%rbx, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%rbx)
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_347
# %bb.346:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i261
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_347:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit263
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_349
# %bb.348:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i264
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	224(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_349:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit266
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_351
# %bb.350:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i267
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_351:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit269
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_353
# %bb.352:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i270
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_353:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit272
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_356
# %bb.354:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i273
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	128(%rsp), %rsi
.LBB15_355:                             #   in Loop: Header=BB15_181 Depth=1
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_356:                             #   in Loop: Header=BB15_181 Depth=1
.Ltmp430:
	leaq	264(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp431:
# %bb.357:                              # %_ZN8pybind116objectD2Ev.exit386
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	144(%rsp), %rcx                 # 8-byte Reload
	incq	%rcx
	movq	%rcx, 144(%rsp)                 # 8-byte Spill
	cmpq	184(%rsp), %rcx                 # 8-byte Folded Reload
	jne	.LBB15_181
	jmp	.LBB15_379
.LBB15_358:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%r14, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
	leaq	128(%rsp), %rax
	cmpq	%rax, %r14
	jne	.LBB15_313
	jmp	.LBB15_314
.LBB15_359:                             #   in Loop: Header=BB15_181 Depth=1
.Ltmp410:
	movl	$29, %r8d
	leaq	112(%rsp), %rdi
	movq	%r14, %rsi
	xorl	%edx, %edx
	leaq	.L.str.21(%rip), %rcx
	movq	%r13, %r9
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@PLT
.Ltmp411:
	jmp	.LBB15_265
.LBB15_360:                             #   in Loop: Header=BB15_181 Depth=1
.Ltmp379:
	movl	$30, %r8d
	leaq	112(%rsp), %rdi
	movq	%r14, %rsi
	xorl	%edx, %edx
	leaq	.L.str.23(%rip), %rcx
	movq	%r13, %r9
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@PLT
.Ltmp380:
	jmp	.LBB15_321
.LBB15_361:
	leaq	35(%r15), %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memmove@PLT
.LBB15_362:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm.exit.i
	movups	.L.str.16+16(%rip), %xmm0
	movups	%xmm0, 16(%r15)
	movups	.L.str.16(%rip), %xmm0
	movups	%xmm0, (%r15)
	movl	$540682591, 31(%r15)            # imm = 0x203A295F
.LBB15_363:                             # %.noexc168
	movq	%rbx, 56(%rsp)
	movb	$0, (%r15,%rbx)
	leaq	24(%rsp), %r15
	movq	%r15, 8(%rsp)
	movq	48(%rsp), %rcx
	cmpq	%r14, %rcx
	je	.LBB15_365
# %bb.364:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i166
	movq	%rcx, 8(%rsp)
	movq	56(%rsp), %r12
	movq	64(%rsp), %rax
	movq	%rax, 24(%rsp)
	jmp	.LBB15_366
.LBB15_365:
	movq	56(%rsp), %r12
	leaq	1(%r12), %rdx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	memcpy@PLT
	movq	%r15, %rcx
.LBB15_366:
	movq	%r12, 16(%rsp)
	movq	%r14, 48(%rsp)
	movq	$0, 56(%rsp)
	movb	$0, 64(%rsp)
	movq	(%rsp), %rdx                    # 8-byte Reload
	movq	8(%rdx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r12, %rax
	jb	.LBB15_580
# %bb.367:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	leaq	(%rsi,%r12), %rbx
	movq	(%rdx), %rdi
	movl	$15, %eax
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB15_369
# %bb.368:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
.LBB15_369:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	cmpq	%rax, %rbx
	jbe	.LBB15_371
# %bb.370:
.Ltmp462:
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	movq	%r12, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp463:
	jmp	.LBB15_375
.LBB15_371:
	testq	%r12, %r12
	je	.LBB15_375
# %bb.372:
	addq	%rsi, %rdi
	cmpq	$1, %r12
	jne	.LBB15_374
# %bb.373:
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_375
.LBB15_374:
	movq	%rcx, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB15_375:
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%rbx, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%rbx)
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB15_377
# %bb.376:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i171
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_377:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit173
	movq	48(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB15_379
# %bb.378:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i174
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_379:                             # %.loopexit
.Ltmp481:
	leaq	200(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp482:
# %bb.380:                              # %_ZN8pybind116objectD2Ev.exit388
.Ltmp484:
	leaq	272(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp485:
# %bb.381:                              # %_ZN8pybind116objectD2Ev.exit389
	movq	(%rsp), %rbx                    # 8-byte Reload
	cmpq	$0, 8(%rbx)
	je	.LBB15_382
.LBB15_18:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit395
	movq	240(%rsp), %rax                 # 8-byte Reload
	movq	16(%rax), %rax
	testq	%rax, %rax
	je	.LBB15_397
	.p2align	4, 0x90
.LBB15_388:                             # %.preheader550
                                        # =>This Inner Loop Header: Depth=1
	movq	%rax, %rcx
	movq	16(%rax), %rax
	testq	%rax, %rax
	jne	.LBB15_388
# %bb.389:
	movq	24(%rcx), %r12
	testq	%r12, %r12
	je	.LBB15_392
# %bb.390:
	movl	(%r12), %eax
	incl	%eax
	je	.LBB15_392
# %bb.391:
	movl	%eax, (%r12)
.LBB15_392:                             # %_ZL10Py_XINCREFP7_object.exit
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	8(%rcx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-6, %rax
	cmpq	%rax, %rsi
	jg	.LBB15_562
# %bb.393:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i397
	leaq	6(%rsi), %rbx
	movq	(%rcx), %rax
	movl	$15, %ecx
	cmpq	40(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB15_395
# %bb.394:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i397
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	(%rcx), %rcx
.LBB15_395:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i397
	cmpq	%rcx, %rbx
	jbe	.LBB15_404
# %bb.396:
.Ltmp494:
	leaq	.L.str.26(%rip), %rcx
	movl	$6, %r8d
	movq	(%rsp), %r14                    # 8-byte Reload
	movq	%r14, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp495:
	jmp	.LBB15_405
.LBB15_397:                             # %.thread
	cmpq	$0, 160(%rsp)
	je	.LBB15_516
# %bb.398:                              # %.thread115
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	(%rcx), %rax
	movq	8(%rcx), %r14
	leaq	1(%r14), %rbx
	movl	$15, %ecx
	cmpq	40(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB15_400
# %bb.399:                              # %.thread115
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	(%rcx), %rcx
.LBB15_400:                             # %.thread115
	cmpq	%rcx, %rbx
	jbe	.LBB15_403
# %bb.401:
.Ltmp550:
	movl	$1, %r8d
	movq	(%rsp), %r15                    # 8-byte Reload
	movq	%r15, %rdi
	movq	%r14, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp551:
# %bb.402:                              # %.noexc493
	movq	(%r15), %rax
.LBB15_403:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit494
	movb	$10, (%rax,%r14)
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%rbx, 8(%rax)
	movq	(%rax), %rax
	movb	$0, 1(%rax,%r14)
	movq	160(%rsp), %r8
	jmp	.LBB15_504
.LBB15_404:
	movw	$2618, 4(%rax,%rsi)             # imm = 0xA3A
	movl	$1950419466, (%rax,%rsi)        # imm = 0x74410A0A
	movq	(%rsp), %r14                    # 8-byte Reload
.LBB15_405:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit
	movq	%rbx, 8(%r14)
	movq	(%r14), %rax
	movb	$0, (%rax,%rbx)
	testq	%r12, %r12
	je	.LBB15_503
# %bb.406:                              # %.lr.ph755
	leaq	24(%rsp), %rbp
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	decq	%rax
	movq	%rax, 184(%rsp)                 # 8-byte Spill
	jmp	.LBB15_408
	.p2align	4, 0x90
.LBB15_407:                             # %_ZL9Py_DECREFP7_object.exit122
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	%r15, %r12
	testq	%r15, %r15
	je	.LBB15_503
.LBB15_408:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB15_438 Depth 2
                                        #     Child Loop BB15_454 Depth 2
.Ltmp496:
	movq	%r12, %rdi
	callq	PyFrame_GetCode@PLT
.Ltmp497:
# %bb.409:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp499:
	movq	%rax, %rbx
	movq	%r12, 144(%rsp)                 # 8-byte Spill
	movq	%r12, %rdi
	callq	PyFrame_GetLineNumber@PLT
.Ltmp500:
# %bb.410:                              #   in Loop: Header=BB15_408 Depth=1
	movl	%eax, %r12d
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	%rsi, %rax
	andq	$-2, %rax
	cmpq	184(%rsp), %rax                 # 8-byte Folded Reload
	je	.LBB15_534
# %bb.411:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i405
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rcx), %rax
	movl	$15, %ecx
	cmpq	40(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB15_413
# %bb.412:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i405
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	(%rcx), %rcx
.LBB15_413:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i405
                                        #   in Loop: Header=BB15_408 Depth=1
	leaq	2(%rsi), %r14
	cmpq	%rcx, %r14
	jbe	.LBB15_415
# %bb.414:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp501:
	movl	$2, %r8d
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	leaq	.L.str.27(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp502:
	jmp	.LBB15_416
	.p2align	4, 0x90
.LBB15_415:                             #   in Loop: Header=BB15_408 Depth=1
	movw	$8224, (%rax,%rsi)              # imm = 0x2020
.LBB15_416:                             #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%r14, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%r14)
	movq	112(%rbx), %rax
	movq	%rax, 80(%rsp)
	movq	%rbp, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp503:
	leaq	8(%rsp), %rdi
	leaq	80(%rsp), %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp504:
# %bb.417:                              # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i
                                        #   in Loop: Header=BB15_408 Depth=1
	leaq	64(%rsp), %rdi
	movq	%rdi, 48(%rsp)
	movq	8(%rsp), %rcx
	cmpq	%rbp, %rcx
	je	.LBB15_419
# %bb.418:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	%rcx, 48(%rsp)
	movq	16(%rsp), %r13
	movq	24(%rsp), %rax
	movq	%rax, 64(%rsp)
	jmp	.LBB15_420
	.p2align	4, 0x90
.LBB15_419:                             #   in Loop: Header=BB15_408 Depth=1
	movq	16(%rsp), %r13
	leaq	1(%r13), %rdx
	movq	%rbp, %rsi
	movq	%rdi, %r14
	callq	memcpy@PLT
	movq	%r14, %rcx
.LBB15_420:                             #   in Loop: Header=BB15_408 Depth=1
	movq	%r13, 56(%rsp)
	movq	(%rsp), %rdx                    # 8-byte Reload
	movq	8(%rdx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r13, %rax
	jb	.LBB15_538
# %bb.421:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i414
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rdx), %rdi
	movl	$15, %eax
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB15_423
# %bb.422:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i414
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
.LBB15_423:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i414
                                        #   in Loop: Header=BB15_408 Depth=1
	leaq	(%rsi,%r13), %r14
	cmpq	%rax, %r14
	jbe	.LBB15_425
# %bb.424:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp506:
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	movq	%r13, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp507:
	jmp	.LBB15_429
	.p2align	4, 0x90
.LBB15_425:                             #   in Loop: Header=BB15_408 Depth=1
	testq	%r13, %r13
	je	.LBB15_429
# %bb.426:                              #   in Loop: Header=BB15_408 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r13
	jne	.LBB15_428
# %bb.427:                              #   in Loop: Header=BB15_408 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_429
.LBB15_428:                             #   in Loop: Header=BB15_408 Depth=1
	movq	%rcx, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB15_429:                             #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%r14, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%r14)
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_431
# %bb.430:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i422
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_431:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit424
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	(%rcx), %rax
	movq	8(%rcx), %r13
	movl	$15, %ecx
	cmpq	40(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB15_433
# %bb.432:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit424
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	(%rcx), %rcx
.LBB15_433:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit424
                                        #   in Loop: Header=BB15_408 Depth=1
	leaq	1(%r13), %r14
	cmpq	%rcx, %r14
	jbe	.LBB15_436
# %bb.434:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp509:
	movl	$1, %r8d
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	%r13, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp510:
# %bb.435:                              # %.noexc427
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %rax
.LBB15_436:                             #   in Loop: Header=BB15_408 Depth=1
	movb	$40, (%rax,%r13)
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%r14, 8(%rax)
	movq	(%rax), %rax
	movb	$0, 1(%rax,%r13)
	movl	%r12d, %ebp
	negl	%ebp
	cmovsl	%r12d, %ebp
	movl	$1, %r14d
	cmpl	$10, %ebp
	jb	.LBB15_445
# %bb.437:                              # %.lr.ph.i.i429.preheader
                                        #   in Loop: Header=BB15_408 Depth=1
	movl	$4, %r14d
	movl	%ebp, %eax
	.p2align	4, 0x90
.LBB15_438:                             # %.lr.ph.i.i429
                                        #   Parent Loop BB15_408 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpl	$99, %eax
	jbe	.LBB15_443
# %bb.439:                              #   in Loop: Header=BB15_438 Depth=2
	cmpl	$999, %eax                      # imm = 0x3E7
	jbe	.LBB15_444
# %bb.440:                              #   in Loop: Header=BB15_438 Depth=2
	cmpl	$10000, %eax                    # imm = 0x2710
	jb	.LBB15_445
# %bb.441:                              #   in Loop: Header=BB15_438 Depth=2
	movl	%eax, %ecx
	movl	$3518437209, %edx               # imm = 0xD1B71759
	imulq	%rdx, %rcx
	shrq	$45, %rcx
	addl	$4, %r14d
	cmpl	$99999, %eax                    # imm = 0x1869F
	movl	%ecx, %eax
	ja	.LBB15_438
# %bb.442:                              # %_ZNSt8__detail14__to_chars_lenIjEEjT_i.exit.i.loopexit
                                        #   in Loop: Header=BB15_408 Depth=1
	addl	$-3, %r14d
	jmp	.LBB15_445
.LBB15_443:                             #   in Loop: Header=BB15_408 Depth=1
	addl	$-2, %r14d
	jmp	.LBB15_445
.LBB15_444:                             #   in Loop: Header=BB15_408 Depth=1
	decl	%r14d
	.p2align	4, 0x90
.LBB15_445:                             # %_ZNSt8__detail14__to_chars_lenIjEEjT_i.exit.i
                                        #   in Loop: Header=BB15_408 Depth=1
	shrl	$31, %r12d
	leal	(%r14,%r12), %r13d
	leaq	24(%rsp), %r15
	movq	%r15, 8(%rsp)
	cmpl	$16, %r13d
	jb	.LBB15_448
# %bb.446:                              #   in Loop: Header=BB15_408 Depth=1
	leaq	1(%r13), %rdi
.Ltmp511:
	callq	_Znwm@PLT
.Ltmp512:
# %bb.447:                              # %.noexc.i438
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	%rax, %r15
	movq	%rax, 8(%rsp)
	movq	%r13, 24(%rsp)
	jmp	.LBB15_451
	.p2align	4, 0x90
.LBB15_448:                             #   in Loop: Header=BB15_408 Depth=1
	testq	%r13, %r13
	je	.LBB15_452
# %bb.449:                              #   in Loop: Header=BB15_408 Depth=1
	cmpl	$1, %r13d
	jne	.LBB15_451
# %bb.450:                              #   in Loop: Header=BB15_408 Depth=1
	movb	$45, 24(%rsp)
	jmp	.LBB15_452
	.p2align	4, 0x90
.LBB15_451:                             #   in Loop: Header=BB15_408 Depth=1
	movq	%r15, %rdi
	movl	$45, %esi
	movq	%r13, %rdx
	callq	memset@PLT
.LBB15_452:                             #   in Loop: Header=BB15_408 Depth=1
	movq	%r13, 16(%rsp)
	movb	$0, (%r15,%r13)
	movl	%r12d, %eax
	addq	8(%rsp), %rax
	cmpl	$100, %ebp
	jb	.LBB15_457
# %bb.453:                              # %.lr.ph.preheader.i.i435
                                        #   in Loop: Header=BB15_408 Depth=1
	addl	$-2, %r14d
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %r8
	.p2align	4, 0x90
.LBB15_454:                             # %.lr.ph.i11.i
                                        #   Parent Loop BB15_408 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	leal	1(%r14), %edx
	movl	%ebp, %ecx
	imulq	$1374389535, %rcx, %rcx         # imm = 0x51EB851F
	shrq	$37, %rcx
	imull	$100, %ecx, %esi
	movl	%ebp, %edi
	subl	%esi, %edi
	movzbl	(%r8,%rdi,2), %esi
	movzbl	1(%r8,%rdi,2), %edi
	movb	%dil, (%rax,%rdx)
	movl	%r14d, %edx
	movb	%sil, (%rax,%rdx)
	addl	$-2, %r14d
	cmpl	$9999, %ebp                     # imm = 0x270F
	movl	%ecx, %ebp
	ja	.LBB15_454
# %bb.455:                              # %._crit_edge.i.i432
                                        #   in Loop: Header=BB15_408 Depth=1
	cmpl	$10, %ecx
	jb	.LBB15_458
.LBB15_456:                             #   in Loop: Header=BB15_408 Depth=1
	movl	%ecx, %ecx
	leaq	(%rcx,%rcx), %rdx
	movl	%edx, %edx
	movzbl	1(%rdx,%r8), %edx
	movb	%dl, 1(%rax)
	movzbl	(%r8,%rcx,2), %ecx
	jmp	.LBB15_459
	.p2align	4, 0x90
.LBB15_457:                             #   in Loop: Header=BB15_408 Depth=1
	movl	%ebp, %ecx
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %r8
	cmpl	$10, %ecx
	jae	.LBB15_456
.LBB15_458:                             #   in Loop: Header=BB15_408 Depth=1
	orb	$48, %cl
.LBB15_459:                             # %_ZNSt7__cxx119to_stringEi.exit
                                        #   in Loop: Header=BB15_408 Depth=1
	leaq	24(%rsp), %rbp
	movb	%cl, (%rax)
	movq	16(%rsp), %r8
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	8(%rcx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB15_540
# %bb.460:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i439
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rcx), %rdi
	movl	$15, %eax
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB15_462
# %bb.461:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i439
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
.LBB15_462:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i439
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	8(%rsp), %rcx
	leaq	(%rsi,%r8), %r14
	cmpq	%rax, %r14
	jbe	.LBB15_464
# %bb.463:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp514:
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp515:
	jmp	.LBB15_468
	.p2align	4, 0x90
.LBB15_464:                             #   in Loop: Header=BB15_408 Depth=1
	testq	%r8, %r8
	je	.LBB15_468
# %bb.465:                              #   in Loop: Header=BB15_408 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB15_467
# %bb.466:                              #   in Loop: Header=BB15_408 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_468
.LBB15_467:                             #   in Loop: Header=BB15_408 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB15_468:                             #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%r14, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%r14)
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB15_470
# %bb.469:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i447
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_470:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit449
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	8(%rcx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-3, %rax
	cmpq	%rax, %rsi
	jg	.LBB15_534
# %bb.471:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i450
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rcx), %rax
	movl	$15, %ecx
	cmpq	40(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB15_473
# %bb.472:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i450
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	(%rcx), %rcx
.LBB15_473:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i450
                                        #   in Loop: Header=BB15_408 Depth=1
	leaq	3(%rsi), %r14
	cmpq	%rcx, %r14
	jbe	.LBB15_475
# %bb.474:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp517:
	movl	$3, %r8d
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	leaq	.L.str.28(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp518:
	jmp	.LBB15_476
	.p2align	4, 0x90
.LBB15_475:                             #   in Loop: Header=BB15_408 Depth=1
	movb	$32, 2(%rax,%rsi)
	movw	$14889, (%rax,%rsi)             # imm = 0x3A29
.LBB15_476:                             #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%r14, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%r14)
	movq	120(%rbx), %rax
	movq	%rax, 80(%rsp)
	leaq	24(%rsp), %r14
	movq	%r14, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp519:
	leaq	8(%rsp), %rdi
	leaq	80(%rsp), %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp520:
# %bb.477:                              # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i459
                                        #   in Loop: Header=BB15_408 Depth=1
	leaq	64(%rsp), %rdi
	movq	%rdi, 48(%rsp)
	movq	8(%rsp), %rcx
	cmpq	%r14, %rcx
	je	.LBB15_479
# %bb.478:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i460
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	%rcx, 48(%rsp)
	movq	16(%rsp), %r12
	movq	24(%rsp), %rax
	movq	%rax, 64(%rsp)
	jmp	.LBB15_480
	.p2align	4, 0x90
.LBB15_479:                             #   in Loop: Header=BB15_408 Depth=1
	movq	%r14, %rsi
	movq	16(%rsp), %r12
	leaq	1(%r12), %rdx
	movq	%rdi, %r14
	callq	memcpy@PLT
	movq	%r14, %rcx
.LBB15_480:                             #   in Loop: Header=BB15_408 Depth=1
	movq	%r12, 56(%rsp)
	movq	(%rsp), %rdx                    # 8-byte Reload
	movq	8(%rdx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r12, %rax
	jb	.LBB15_542
# %bb.481:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i467
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rdx), %rdi
	movl	$15, %eax
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB15_483
# %bb.482:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i467
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
.LBB15_483:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i467
                                        #   in Loop: Header=BB15_408 Depth=1
	leaq	(%rsi,%r12), %r14
	cmpq	%rax, %r14
	jbe	.LBB15_485
# %bb.484:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp522:
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	movq	%r12, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp523:
	jmp	.LBB15_489
	.p2align	4, 0x90
.LBB15_485:                             #   in Loop: Header=BB15_408 Depth=1
	testq	%r12, %r12
	je	.LBB15_489
# %bb.486:                              #   in Loop: Header=BB15_408 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r12
	jne	.LBB15_488
# %bb.487:                              #   in Loop: Header=BB15_408 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_489
.LBB15_488:                             #   in Loop: Header=BB15_408 Depth=1
	movq	%rcx, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB15_489:                             #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%r14, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%r14)
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_491
# %bb.490:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i475
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_491:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit477
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	(%rcx), %rax
	movq	8(%rcx), %r12
	movl	$15, %ecx
	cmpq	40(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB15_493
# %bb.492:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit477
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	(%rcx), %rcx
.LBB15_493:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit477
                                        #   in Loop: Header=BB15_408 Depth=1
	leaq	1(%r12), %r14
	cmpq	%rcx, %r14
	jbe	.LBB15_496
# %bb.494:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp525:
	movl	$1, %r8d
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	%r12, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp526:
# %bb.495:                              # %.noexc480
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %rax
.LBB15_496:                             #   in Loop: Header=BB15_408 Depth=1
	movb	$10, (%rax,%r12)
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%r14, 8(%rax)
	movq	(%rax), %rax
	movb	$0, 1(%rax,%r12)
	movq	(%rbx), %rax
	testl	%eax, %eax
	js	.LBB15_499
# %bb.497:                              #   in Loop: Header=BB15_408 Depth=1
	decq	%rax
	movq	%rax, (%rbx)
	jne	.LBB15_499
# %bb.498:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp527:
	movq	%rbx, %rdi
	callq	_Py_Dealloc@PLT
.Ltmp528:
	.p2align	4, 0x90
.LBB15_499:                             # %_ZL9Py_DECREFP7_object.exit
                                        #   in Loop: Header=BB15_408 Depth=1
.Ltmp530:
	movq	144(%rsp), %r14                 # 8-byte Reload
	movq	%r14, %rdi
	callq	PyFrame_GetBack@PLT
.Ltmp531:
# %bb.500:                              #   in Loop: Header=BB15_408 Depth=1
	movq	%rax, %r15
	movq	(%r14), %rax
	testl	%eax, %eax
	js	.LBB15_407
# %bb.501:                              #   in Loop: Header=BB15_408 Depth=1
	decq	%rax
	movq	%rax, (%r14)
	jne	.LBB15_407
# %bb.502:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp532:
	movq	%r14, %rdi
	callq	_Py_Dealloc@PLT
.Ltmp533:
	jmp	.LBB15_407
.LBB15_503:                             # %.preheader._crit_edge
	movq	160(%rsp), %r8
	testq	%r8, %r8
	je	.LBB15_516
.LBB15_504:
	movq	152(%rsp), %rcx
.Ltmp553:
	leaq	.L.str.29(%rip), %rsi
	leaq	8(%rsp), %rdi
	leaq	48(%rsp), %r9
	movl	$39, %edx
	callq	_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE@PLT
.Ltmp554:
# %bb.505:
	movq	16(%rsp), %r8
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	8(%rax), %rsi
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rcx
	cmpq	%r8, %rcx
	jb	.LBB15_564
# %bb.506:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i496
	leaq	(%rsi,%r8), %rbx
	movq	(%rax), %rdi
	movl	$15, %eax
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB15_508
# %bb.507:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i496
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
.LBB15_508:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i496
	movq	8(%rsp), %rcx
	cmpq	%rax, %rbx
	jbe	.LBB15_510
# %bb.509:
.Ltmp556:
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp557:
	jmp	.LBB15_514
.LBB15_510:
	testq	%r8, %r8
	je	.LBB15_514
# %bb.511:
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB15_513
# %bb.512:
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_514
.LBB15_513:
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB15_514:
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%rbx, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%rbx)
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_516
# %bb.515:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i504
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_516:
	movq	152(%rsp), %rdi
	leaq	168(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_518
# %bb.517:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i510
	movq	168(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_518:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit512
	movq	(%rsp), %rax                    # 8-byte Reload
	addq	$280, %rsp                      # imm = 0x118
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB15_519:                             # %.noexc9.i365
	.cfi_def_cfa_offset 336
.Ltmp369:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp370:
# %bb.520:                              # %.noexc369
.LBB15_521:
.Ltmp436:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp437:
# %bb.522:                              # %.noexc907
.LBB15_523:
.Ltmp402:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp403:
# %bb.524:                              # %.noexc920
.LBB15_525:
.Ltmp489:
	leaq	.L.str.25(%rip), %rcx
	movl	$15, %r8d
	movq	(%rsp), %rbx                    # 8-byte Reload
	movq	%rbx, %rdi
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@PLT
.Ltmp490:
	jmp	.LBB15_387
.LBB15_526:
.Ltmp450:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp451:
# %bb.527:                              # %.noexc894
.LBB15_528:
.Ltmp467:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp468:
# %bb.529:                              # %.noexc882
.LBB15_530:                             # %.noexc9.i
.Ltmp304:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp305:
# %bb.531:                              # %.noexc152
.LBB15_532:
.Ltmp344:
	leaq	.L.str.17(%rip), %rcx
	leaq	80(%rsp), %rdi
	movl	$16, %r8d
	movq	%r14, %rsi
	xorl	%edx, %edx
	movq	%r12, %r9
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@PLT
.Ltmp345:
	jmp	.LBB15_152
.LBB15_533:
	movq	%rsi, %rdi
	jmp	.LBB15_71
.LBB15_534:                             # %.invoke
.Ltmp544:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp545:
# %bb.535:                              # %.cont
.LBB15_536:
.Ltmp458:
	leaq	.L.str.16(%rip), %rcx
	leaq	48(%rsp), %rdi
	movl	$35, %r8d
	movq	%r15, %rsi
	xorl	%edx, %edx
	movq	%r12, %r9
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@PLT
.Ltmp459:
# %bb.537:                              # %..noexc168_crit_edge
	movq	48(%rsp), %r15
	jmp	.LBB15_363
.LBB15_538:
.Ltmp541:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp542:
# %bb.539:                              # %.noexc419
.LBB15_540:
.Ltmp538:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp539:
# %bb.541:                              # %.noexc444
.LBB15_542:
.Ltmp535:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp536:
# %bb.543:                              # %.noexc472
.LBB15_544:
	leaq	.L.str.19(%rip), %rdi
	leaq	.L.str.20(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev(%rip), %rcx
	movl	$615, %edx                      # imm = 0x267
	callq	__assert_fail@PLT
.LBB15_545:
.Ltmp373:
	leaq	.L.str.35(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.Ltmp374:
# %bb.546:                              # %.noexc367
.LBB15_547:
.Ltmp366:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp367:
# %bb.548:                              # %.noexc377
.LBB15_549:
.Ltmp433:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp434:
# %bb.550:                              # %.noexc258
.LBB15_551:
.Ltmp415:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp416:
# %bb.552:                              # %.noexc250
.LBB15_553:
.Ltmp399:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp400:
# %bb.554:                              # %.noexc328
.LBB15_555:                             # %.noexc.i366
.Ltmp371:
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp372:
# %bb.556:                              # %.noexc368
.LBB15_557:
	leaq	.L.str.10(%rip), %rax
	movq	%rax, 192(%rsp)                 # 8-byte Spill
.LBB15_558:                             # %.invoke1013
.Ltmp438:
	movq	192(%rsp), %rdi                 # 8-byte Reload
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp439:
# %bb.559:                              # %.cont1014
.LBB15_560:
.Ltmp384:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp385:
# %bb.561:                              # %.noexc320
.LBB15_562:
.Ltmp547:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp548:
# %bb.563:                              # %.noexc403
.LBB15_564:
.Ltmp558:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp559:
# %bb.565:                              # %.noexc501
.LBB15_566:
	leaq	.L.str.10(%rip), %rax
	movq	%rax, 192(%rsp)                 # 8-byte Spill
.LBB15_567:                             # %.invoke1015
.Ltmp404:
	movq	192(%rsp), %rdi                 # 8-byte Reload
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp405:
# %bb.568:                              # %.cont1016
.LBB15_569:
	leaq	.L.str.9(%rip), %rdi
	jmp	.LBB15_575
.LBB15_570:
.Ltmp447:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp448:
# %bb.571:                              # %.noexc193
.LBB15_572:
.Ltmp444:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp445:
# %bb.573:                              # %.noexc200
.LBB15_574:
	leaq	.L.str.10(%rip), %rdi
.LBB15_575:                             # %.invoke1011
.Ltmp452:
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp453:
# %bb.576:                              # %.cont1012
.LBB15_577:
.Ltmp308:
	leaq	.L.str.35(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.Ltmp309:
# %bb.578:                              # %.noexc150
.LBB15_579:
	leaq	.L.str.9(%rip), %rdi
	jmp	.LBB15_583
.LBB15_580:
.Ltmp464:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp465:
# %bb.581:                              # %.noexc169
.LBB15_582:
	leaq	.L.str.10(%rip), %rdi
.LBB15_583:                             # %.invoke1009
.Ltmp469:
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp470:
# %bb.584:                              # %.cont1010
.LBB15_585:                             # %.noexc.i
.Ltmp306:
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp307:
# %bb.586:                              # %.noexc151
.LBB15_587:
.Ltmp343:
	jmp	.LBB15_653
.LBB15_588:
.Ltmp313:
	jmp	.LBB15_676
.LBB15_589:
.Ltmp552:
	jmp	.LBB15_674
.LBB15_590:
.Ltmp457:
	jmp	.LBB15_653
.LBB15_591:
.Ltmp322:
	jmp	.LBB15_676
.LBB15_592:
.Ltmp319:
	jmp	.LBB15_676
.LBB15_593:
.Ltmp466:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB15_679
# %bb.594:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i177
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB15_679
.LBB15_595:
.Ltmp474:
	jmp	.LBB15_653
.LBB15_596:
.Ltmp334:
	jmp	.LBB15_618
.LBB15_597:
.Ltmp331:
	jmp	.LBB15_618
.LBB15_598:
.Ltmp378:
	jmp	.LBB15_690
.LBB15_599:
.Ltmp316:
	jmp	.LBB15_676
.LBB15_600:
.Ltmp446:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	jne	.LBB15_603
# %bb.601:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit214
	movq	48(%rsp), %rdi
	cmpq	%r14, %rdi
	jne	.LBB15_605
.LBB15_602:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit217
	movq	80(%rsp), %rdi
	cmpq	144(%rsp), %rdi                 # 8-byte Folded Reload
	jne	.LBB15_682
	jmp	.LBB15_692
.LBB15_603:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i212
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB15_602
	jmp	.LBB15_605
.LBB15_604:
.Ltmp449:
	movq	%rax, %rbx
	movq	48(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB15_602
.LBB15_605:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i215
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rdi
	cmpq	144(%rsp), %rdi                 # 8-byte Folded Reload
	jne	.LBB15_682
	jmp	.LBB15_692
.LBB15_606:
.Ltmp328:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB15_607:
.Ltmp340:
	jmp	.LBB15_653
.LBB15_608:
.Ltmp299:
	jmp	.LBB15_618
.LBB15_609:
.Ltmp409:
	jmp	.LBB15_690
.LBB15_610:
.Ltmp493:
	jmp	.LBB15_674
.LBB15_611:                             # %.loopexit561
.Ltmp389:
	jmp	.LBB15_623
.LBB15_612:                             # %.loopexit566
.Ltmp398:
	jmp	.LBB15_634
.LBB15_613:                             # %.loopexit941
.Ltmp383:
	jmp	.LBB15_686
.LBB15_614:
.Ltmp486:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB15_615:
.Ltmp483:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB15_616:
.Ltmp555:
	jmp	.LBB15_674
.LBB15_617:
.Ltmp337:
.LBB15_618:
	movq	%rax, %rbx
	jmp	.LBB15_693
.LBB15_619:
.Ltmp296:
	jmp	.LBB15_674
.LBB15_620:                             # %.loopexit.split-lp562
.Ltmp386:
	jmp	.LBB15_623
.LBB15_621:                             # %.loopexit576
.Ltmp429:
	jmp	.LBB15_634
.LBB15_622:                             # %.loopexit571
.Ltmp420:
	jmp	.LBB15_623
.LBB15_624:                             # %.loopexit945
.Ltmp414:
	jmp	.LBB15_686
.LBB15_625:
.Ltmp560:
	jmp	.LBB15_665
.LBB15_626:
.Ltmp549:
	jmp	.LBB15_674
.LBB15_627:                             # %.loopexit551
.Ltmp362:
	jmp	.LBB15_690
.LBB15_628:                             # %.loopexit556
.Ltmp365:
	jmp	.LBB15_648
.LBB15_629:                             # %.loopexit.split-lp567
.Ltmp401:
	jmp	.LBB15_634
.LBB15_630:                             # %.loopexit.split-lp572
.Ltmp417:
.LBB15_623:                             # %.loopexit571
	movq	%rax, %rbx
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_638
	jmp	.LBB15_646
.LBB15_631:
.Ltmp395:
	jmp	.LBB15_641
.LBB15_632:
.Ltmp392:
	jmp	.LBB15_644
.LBB15_633:                             # %.loopexit.split-lp577
.Ltmp435:
.LBB15_634:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB15_639
# %bb.635:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit278
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB15_642
.LBB15_636:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit281
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB15_645
.LBB15_637:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit284
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB15_646
.LBB15_638:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit287
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB15_687
	jmp	.LBB15_691
.LBB15_639:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i276
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_636
	jmp	.LBB15_642
.LBB15_640:
.Ltmp426:
.LBB15_641:
	movq	%rax, %rbx
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_636
.LBB15_642:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i279
	movq	224(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_637
.LBB15_645:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i282
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_638
.LBB15_646:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i285
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB15_687
	jmp	.LBB15_691
.LBB15_643:
.Ltmp423:
.LBB15_644:
	movq	%rax, %rbx
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_637
	jmp	.LBB15_645
.LBB15_647:                             # %.loopexit.split-lp557
.Ltmp368:
.LBB15_648:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_691
# %bb.649:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i383
	movq	24(%rsp), %rsi
	jmp	.LBB15_688
.LBB15_650:
.Ltmp359:
	jmp	.LBB15_690
.LBB15_651:
.Ltmp432:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB15_652:
.Ltmp354:
.LBB15_653:
	movq	%rax, %rbx
	jmp	.LBB15_692
.LBB15_654:                             # %.loopexit535
.Ltmp508:
	jmp	.LBB15_668
.LBB15_655:                             # %.loopexit540
.Ltmp516:
	jmp	.LBB15_665
.LBB15_656:
.Ltmp513:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB15_657:                             # %.loopexit545
.Ltmp524:
	jmp	.LBB15_668
.LBB15_658:
.Ltmp498:
	jmp	.LBB15_674
.LBB15_659:
.Ltmp505:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB15_694
	jmp	.LBB15_660
.LBB15_661:
.Ltmp521:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	jne	.LBB15_660
	jmp	.LBB15_694
.LBB15_663:                             # %.loopexit.split-lp546
.Ltmp537:
	jmp	.LBB15_668
.LBB15_664:                             # %.loopexit.split-lp541
.Ltmp540:
.LBB15_665:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_694
.LBB15_660:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i519
	movq	24(%rsp), %rsi
	jmp	.LBB15_670
.LBB15_667:                             # %.loopexit.split-lp536
.Ltmp543:
.LBB15_668:
	movq	%rax, %rbx
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_694
# %bb.669:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i482
	movq	64(%rsp), %rsi
.LBB15_670:                             # %.body
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB15_694
.LBB15_671:
.Ltmp534:
	jmp	.LBB15_674
.LBB15_672:                             # %.loopexit.split-lp
.Ltmp546:
	jmp	.LBB15_674
.LBB15_673:                             # %.loopexit534
.Ltmp529:
.LBB15_674:
	movq	%rax, %rbx
	jmp	.LBB15_694
.LBB15_675:
.Ltmp310:
.LBB15_676:
	movq	%rax, %rbx
.Ltmp323:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp324:
	jmp	.LBB15_693
.LBB15_677:
.Ltmp325:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB15_678:
.Ltmp471:
	movq	%rax, %rbx
.LBB15_679:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit179
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_692
# %bb.680:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i180
	movq	64(%rsp), %rsi
	jmp	.LBB15_683
.LBB15_681:
.Ltmp454:
	movq	%rax, %rbx
	movq	80(%rsp), %rdi
	cmpq	144(%rsp), %rdi                 # 8-byte Folded Reload
	je	.LBB15_692
.LBB15_682:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i218
	movq	96(%rsp), %rsi
.LBB15_683:
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB15_692
.LBB15_684:                             # %.loopexit.split-lp942
.Ltmp406:
	jmp	.LBB15_686
.LBB15_685:                             # %.loopexit.split-lp946
.Ltmp440:
.LBB15_686:                             # %.loopexit.split-lp946
	movq	%rax, %rbx
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_691
.LBB15_687:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i288
	movq	128(%rsp), %rsi
.LBB15_688:
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB15_691
.LBB15_689:                             # %.loopexit.split-lp552
.Ltmp375:
.LBB15_690:
	movq	%rax, %rbx
.LBB15_691:
.Ltmp441:
	leaq	264(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp442:
.LBB15_692:
.Ltmp475:
	leaq	200(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp476:
.LBB15_693:
.Ltmp478:
	leaq	272(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp479:
.LBB15_694:
	movq	152(%rsp), %rdi
	leaq	168(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_696
# %bb.695:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i513
	movq	168(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_696:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit515
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %rdi
	movq	40(%rsp), %rax                  # 8-byte Reload
	cmpq	%rax, %rdi
	je	.LBB15_698
# %bb.697:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i516
	movq	(%rax), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_698:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit518
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB15_699:
.Ltmp480:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB15_700:
.Ltmp477:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB15_701:
.Ltmp443:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end15:
	.size	_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev, .Lfunc_end15-_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev,"aG",@progbits,_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev,comdat
	.p2align	2, 0x0
GCC_except_table15:
.Lexception8:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase5-.Lttbaseref5
.Lttbaseref5:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end8-.Lcst_begin8
.Lcst_begin8:
	.uleb128 .Ltmp294-.Lfunc_begin8         # >> Call Site 1 <<
	.uleb128 .Ltmp295-.Ltmp294              #   Call between .Ltmp294 and .Ltmp295
	.uleb128 .Ltmp296-.Lfunc_begin8         #     jumps to .Ltmp296
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp297-.Lfunc_begin8         # >> Call Site 2 <<
	.uleb128 .Ltmp298-.Ltmp297              #   Call between .Ltmp297 and .Ltmp298
	.uleb128 .Ltmp299-.Lfunc_begin8         #     jumps to .Ltmp299
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp300-.Lfunc_begin8         # >> Call Site 3 <<
	.uleb128 .Ltmp301-.Ltmp300              #   Call between .Ltmp300 and .Ltmp301
	.uleb128 .Ltmp316-.Lfunc_begin8         #     jumps to .Ltmp316
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp302-.Lfunc_begin8         # >> Call Site 4 <<
	.uleb128 .Ltmp303-.Ltmp302              #   Call between .Ltmp302 and .Ltmp303
	.uleb128 .Ltmp310-.Lfunc_begin8         #     jumps to .Ltmp310
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp487-.Lfunc_begin8         # >> Call Site 5 <<
	.uleb128 .Ltmp492-.Ltmp487              #   Call between .Ltmp487 and .Ltmp492
	.uleb128 .Ltmp493-.Lfunc_begin8         #     jumps to .Ltmp493
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp329-.Lfunc_begin8         # >> Call Site 6 <<
	.uleb128 .Ltmp330-.Ltmp329              #   Call between .Ltmp329 and .Ltmp330
	.uleb128 .Ltmp331-.Lfunc_begin8         #     jumps to .Ltmp331
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp317-.Lfunc_begin8         # >> Call Site 7 <<
	.uleb128 .Ltmp318-.Ltmp317              #   Call between .Ltmp317 and .Ltmp318
	.uleb128 .Ltmp319-.Lfunc_begin8         #     jumps to .Ltmp319
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp311-.Lfunc_begin8         # >> Call Site 8 <<
	.uleb128 .Ltmp312-.Ltmp311              #   Call between .Ltmp311 and .Ltmp312
	.uleb128 .Ltmp313-.Lfunc_begin8         #     jumps to .Ltmp313
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp312-.Lfunc_begin8         # >> Call Site 9 <<
	.uleb128 .Ltmp332-.Ltmp312              #   Call between .Ltmp312 and .Ltmp332
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp332-.Lfunc_begin8         # >> Call Site 10 <<
	.uleb128 .Ltmp333-.Ltmp332              #   Call between .Ltmp332 and .Ltmp333
	.uleb128 .Ltmp334-.Lfunc_begin8         #     jumps to .Ltmp334
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp333-.Lfunc_begin8         # >> Call Site 11 <<
	.uleb128 .Ltmp320-.Ltmp333              #   Call between .Ltmp333 and .Ltmp320
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp320-.Lfunc_begin8         # >> Call Site 12 <<
	.uleb128 .Ltmp321-.Ltmp320              #   Call between .Ltmp320 and .Ltmp321
	.uleb128 .Ltmp322-.Lfunc_begin8         #     jumps to .Ltmp322
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp321-.Lfunc_begin8         # >> Call Site 13 <<
	.uleb128 .Ltmp314-.Ltmp321              #   Call between .Ltmp321 and .Ltmp314
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp314-.Lfunc_begin8         # >> Call Site 14 <<
	.uleb128 .Ltmp315-.Ltmp314              #   Call between .Ltmp314 and .Ltmp315
	.uleb128 .Ltmp316-.Lfunc_begin8         #     jumps to .Ltmp316
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp326-.Lfunc_begin8         # >> Call Site 15 <<
	.uleb128 .Ltmp327-.Ltmp326              #   Call between .Ltmp326 and .Ltmp327
	.uleb128 .Ltmp328-.Lfunc_begin8         #     jumps to .Ltmp328
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp335-.Lfunc_begin8         # >> Call Site 16 <<
	.uleb128 .Ltmp336-.Ltmp335              #   Call between .Ltmp335 and .Ltmp336
	.uleb128 .Ltmp337-.Lfunc_begin8         #     jumps to .Ltmp337
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp338-.Lfunc_begin8         # >> Call Site 17 <<
	.uleb128 .Ltmp339-.Ltmp338              #   Call between .Ltmp338 and .Ltmp339
	.uleb128 .Ltmp340-.Lfunc_begin8         #     jumps to .Ltmp340
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp472-.Lfunc_begin8         # >> Call Site 18 <<
	.uleb128 .Ltmp473-.Ltmp472              #   Call between .Ltmp472 and .Ltmp473
	.uleb128 .Ltmp474-.Lfunc_begin8         #     jumps to .Ltmp474
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp455-.Lfunc_begin8         # >> Call Site 19 <<
	.uleb128 .Ltmp456-.Ltmp455              #   Call between .Ltmp455 and .Ltmp456
	.uleb128 .Ltmp457-.Lfunc_begin8         #     jumps to .Ltmp457
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp460-.Lfunc_begin8         # >> Call Site 20 <<
	.uleb128 .Ltmp461-.Ltmp460              #   Call between .Ltmp460 and .Ltmp461
	.uleb128 .Ltmp471-.Lfunc_begin8         #     jumps to .Ltmp471
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp341-.Lfunc_begin8         # >> Call Site 21 <<
	.uleb128 .Ltmp342-.Ltmp341              #   Call between .Ltmp341 and .Ltmp342
	.uleb128 .Ltmp343-.Lfunc_begin8         #     jumps to .Ltmp343
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp342-.Lfunc_begin8         # >> Call Site 22 <<
	.uleb128 .Ltmp346-.Ltmp342              #   Call between .Ltmp342 and .Ltmp346
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp346-.Lfunc_begin8         # >> Call Site 23 <<
	.uleb128 .Ltmp347-.Ltmp346              #   Call between .Ltmp346 and .Ltmp347
	.uleb128 .Ltmp454-.Lfunc_begin8         #     jumps to .Ltmp454
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp347-.Lfunc_begin8         # >> Call Site 24 <<
	.uleb128 .Ltmp348-.Ltmp347              #   Call between .Ltmp347 and .Ltmp348
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp348-.Lfunc_begin8         # >> Call Site 25 <<
	.uleb128 .Ltmp349-.Ltmp348              #   Call between .Ltmp348 and .Ltmp349
	.uleb128 .Ltmp449-.Lfunc_begin8         #     jumps to .Ltmp449
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp349-.Lfunc_begin8         # >> Call Site 26 <<
	.uleb128 .Ltmp350-.Ltmp349              #   Call between .Ltmp349 and .Ltmp350
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp350-.Lfunc_begin8         # >> Call Site 27 <<
	.uleb128 .Ltmp351-.Ltmp350              #   Call between .Ltmp350 and .Ltmp351
	.uleb128 .Ltmp446-.Lfunc_begin8         #     jumps to .Ltmp446
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp351-.Lfunc_begin8         # >> Call Site 28 <<
	.uleb128 .Ltmp352-.Ltmp351              #   Call between .Ltmp351 and .Ltmp352
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp352-.Lfunc_begin8         # >> Call Site 29 <<
	.uleb128 .Ltmp353-.Ltmp352              #   Call between .Ltmp352 and .Ltmp353
	.uleb128 .Ltmp354-.Lfunc_begin8         #     jumps to .Ltmp354
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp355-.Lfunc_begin8         # >> Call Site 30 <<
	.uleb128 .Ltmp358-.Ltmp355              #   Call between .Ltmp355 and .Ltmp358
	.uleb128 .Ltmp359-.Lfunc_begin8         #     jumps to .Ltmp359
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp360-.Lfunc_begin8         # >> Call Site 31 <<
	.uleb128 .Ltmp361-.Ltmp360              #   Call between .Ltmp360 and .Ltmp361
	.uleb128 .Ltmp362-.Lfunc_begin8         #     jumps to .Ltmp362
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp361-.Lfunc_begin8         # >> Call Site 32 <<
	.uleb128 .Ltmp363-.Ltmp361              #   Call between .Ltmp361 and .Ltmp363
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp363-.Lfunc_begin8         # >> Call Site 33 <<
	.uleb128 .Ltmp364-.Ltmp363              #   Call between .Ltmp363 and .Ltmp364
	.uleb128 .Ltmp365-.Lfunc_begin8         #     jumps to .Ltmp365
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp364-.Lfunc_begin8         # >> Call Site 34 <<
	.uleb128 .Ltmp407-.Ltmp364              #   Call between .Ltmp364 and .Ltmp407
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp407-.Lfunc_begin8         # >> Call Site 35 <<
	.uleb128 .Ltmp408-.Ltmp407              #   Call between .Ltmp407 and .Ltmp408
	.uleb128 .Ltmp409-.Lfunc_begin8         #     jumps to .Ltmp409
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp408-.Lfunc_begin8         # >> Call Site 36 <<
	.uleb128 .Ltmp412-.Ltmp408              #   Call between .Ltmp408 and .Ltmp412
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp412-.Lfunc_begin8         # >> Call Site 37 <<
	.uleb128 .Ltmp413-.Ltmp412              #   Call between .Ltmp412 and .Ltmp413
	.uleb128 .Ltmp414-.Lfunc_begin8         #     jumps to .Ltmp414
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp413-.Lfunc_begin8         # >> Call Site 38 <<
	.uleb128 .Ltmp418-.Ltmp413              #   Call between .Ltmp413 and .Ltmp418
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp418-.Lfunc_begin8         # >> Call Site 39 <<
	.uleb128 .Ltmp419-.Ltmp418              #   Call between .Ltmp418 and .Ltmp419
	.uleb128 .Ltmp420-.Lfunc_begin8         #     jumps to .Ltmp420
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp419-.Lfunc_begin8         # >> Call Site 40 <<
	.uleb128 .Ltmp421-.Ltmp419              #   Call between .Ltmp419 and .Ltmp421
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp421-.Lfunc_begin8         # >> Call Site 41 <<
	.uleb128 .Ltmp422-.Ltmp421              #   Call between .Ltmp421 and .Ltmp422
	.uleb128 .Ltmp423-.Lfunc_begin8         #     jumps to .Ltmp423
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp424-.Lfunc_begin8         # >> Call Site 42 <<
	.uleb128 .Ltmp425-.Ltmp424              #   Call between .Ltmp424 and .Ltmp425
	.uleb128 .Ltmp426-.Lfunc_begin8         #     jumps to .Ltmp426
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp427-.Lfunc_begin8         # >> Call Site 43 <<
	.uleb128 .Ltmp428-.Ltmp427              #   Call between .Ltmp427 and .Ltmp428
	.uleb128 .Ltmp429-.Lfunc_begin8         #     jumps to .Ltmp429
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp428-.Lfunc_begin8         # >> Call Site 44 <<
	.uleb128 .Ltmp376-.Ltmp428              #   Call between .Ltmp428 and .Ltmp376
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp376-.Lfunc_begin8         # >> Call Site 45 <<
	.uleb128 .Ltmp377-.Ltmp376              #   Call between .Ltmp376 and .Ltmp377
	.uleb128 .Ltmp378-.Lfunc_begin8         #     jumps to .Ltmp378
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp377-.Lfunc_begin8         # >> Call Site 46 <<
	.uleb128 .Ltmp381-.Ltmp377              #   Call between .Ltmp377 and .Ltmp381
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp381-.Lfunc_begin8         # >> Call Site 47 <<
	.uleb128 .Ltmp382-.Ltmp381              #   Call between .Ltmp381 and .Ltmp382
	.uleb128 .Ltmp383-.Lfunc_begin8         #     jumps to .Ltmp383
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp382-.Lfunc_begin8         # >> Call Site 48 <<
	.uleb128 .Ltmp387-.Ltmp382              #   Call between .Ltmp382 and .Ltmp387
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp387-.Lfunc_begin8         # >> Call Site 49 <<
	.uleb128 .Ltmp388-.Ltmp387              #   Call between .Ltmp387 and .Ltmp388
	.uleb128 .Ltmp389-.Lfunc_begin8         #     jumps to .Ltmp389
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp388-.Lfunc_begin8         # >> Call Site 50 <<
	.uleb128 .Ltmp390-.Ltmp388              #   Call between .Ltmp388 and .Ltmp390
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp390-.Lfunc_begin8         # >> Call Site 51 <<
	.uleb128 .Ltmp391-.Ltmp390              #   Call between .Ltmp390 and .Ltmp391
	.uleb128 .Ltmp392-.Lfunc_begin8         #     jumps to .Ltmp392
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp393-.Lfunc_begin8         # >> Call Site 52 <<
	.uleb128 .Ltmp394-.Ltmp393              #   Call between .Ltmp393 and .Ltmp394
	.uleb128 .Ltmp395-.Lfunc_begin8         #     jumps to .Ltmp395
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp396-.Lfunc_begin8         # >> Call Site 53 <<
	.uleb128 .Ltmp397-.Ltmp396              #   Call between .Ltmp396 and .Ltmp397
	.uleb128 .Ltmp398-.Lfunc_begin8         #     jumps to .Ltmp398
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp397-.Lfunc_begin8         # >> Call Site 54 <<
	.uleb128 .Ltmp430-.Ltmp397              #   Call between .Ltmp397 and .Ltmp430
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp430-.Lfunc_begin8         # >> Call Site 55 <<
	.uleb128 .Ltmp431-.Ltmp430              #   Call between .Ltmp430 and .Ltmp431
	.uleb128 .Ltmp432-.Lfunc_begin8         #     jumps to .Ltmp432
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp431-.Lfunc_begin8         # >> Call Site 56 <<
	.uleb128 .Ltmp410-.Ltmp431              #   Call between .Ltmp431 and .Ltmp410
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp410-.Lfunc_begin8         # >> Call Site 57 <<
	.uleb128 .Ltmp411-.Ltmp410              #   Call between .Ltmp410 and .Ltmp411
	.uleb128 .Ltmp414-.Lfunc_begin8         #     jumps to .Ltmp414
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp379-.Lfunc_begin8         # >> Call Site 58 <<
	.uleb128 .Ltmp380-.Ltmp379              #   Call between .Ltmp379 and .Ltmp380
	.uleb128 .Ltmp383-.Lfunc_begin8         #     jumps to .Ltmp383
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp380-.Lfunc_begin8         # >> Call Site 59 <<
	.uleb128 .Ltmp462-.Ltmp380              #   Call between .Ltmp380 and .Ltmp462
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp462-.Lfunc_begin8         # >> Call Site 60 <<
	.uleb128 .Ltmp463-.Ltmp462              #   Call between .Ltmp462 and .Ltmp463
	.uleb128 .Ltmp466-.Lfunc_begin8         #     jumps to .Ltmp466
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp463-.Lfunc_begin8         # >> Call Site 61 <<
	.uleb128 .Ltmp481-.Ltmp463              #   Call between .Ltmp463 and .Ltmp481
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp481-.Lfunc_begin8         # >> Call Site 62 <<
	.uleb128 .Ltmp482-.Ltmp481              #   Call between .Ltmp481 and .Ltmp482
	.uleb128 .Ltmp483-.Lfunc_begin8         #     jumps to .Ltmp483
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp484-.Lfunc_begin8         # >> Call Site 63 <<
	.uleb128 .Ltmp485-.Ltmp484              #   Call between .Ltmp484 and .Ltmp485
	.uleb128 .Ltmp486-.Lfunc_begin8         #     jumps to .Ltmp486
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp494-.Lfunc_begin8         # >> Call Site 64 <<
	.uleb128 .Ltmp495-.Ltmp494              #   Call between .Ltmp494 and .Ltmp495
	.uleb128 .Ltmp549-.Lfunc_begin8         #     jumps to .Ltmp549
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp550-.Lfunc_begin8         # >> Call Site 65 <<
	.uleb128 .Ltmp551-.Ltmp550              #   Call between .Ltmp550 and .Ltmp551
	.uleb128 .Ltmp552-.Lfunc_begin8         #     jumps to .Ltmp552
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp496-.Lfunc_begin8         # >> Call Site 66 <<
	.uleb128 .Ltmp497-.Ltmp496              #   Call between .Ltmp496 and .Ltmp497
	.uleb128 .Ltmp498-.Lfunc_begin8         #     jumps to .Ltmp498
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp499-.Lfunc_begin8         # >> Call Site 67 <<
	.uleb128 .Ltmp502-.Ltmp499              #   Call between .Ltmp499 and .Ltmp502
	.uleb128 .Ltmp529-.Lfunc_begin8         #     jumps to .Ltmp529
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp503-.Lfunc_begin8         # >> Call Site 68 <<
	.uleb128 .Ltmp504-.Ltmp503              #   Call between .Ltmp503 and .Ltmp504
	.uleb128 .Ltmp505-.Lfunc_begin8         #     jumps to .Ltmp505
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp504-.Lfunc_begin8         # >> Call Site 69 <<
	.uleb128 .Ltmp506-.Ltmp504              #   Call between .Ltmp504 and .Ltmp506
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp506-.Lfunc_begin8         # >> Call Site 70 <<
	.uleb128 .Ltmp507-.Ltmp506              #   Call between .Ltmp506 and .Ltmp507
	.uleb128 .Ltmp508-.Lfunc_begin8         #     jumps to .Ltmp508
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp507-.Lfunc_begin8         # >> Call Site 71 <<
	.uleb128 .Ltmp509-.Ltmp507              #   Call between .Ltmp507 and .Ltmp509
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp509-.Lfunc_begin8         # >> Call Site 72 <<
	.uleb128 .Ltmp510-.Ltmp509              #   Call between .Ltmp509 and .Ltmp510
	.uleb128 .Ltmp529-.Lfunc_begin8         #     jumps to .Ltmp529
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp511-.Lfunc_begin8         # >> Call Site 73 <<
	.uleb128 .Ltmp512-.Ltmp511              #   Call between .Ltmp511 and .Ltmp512
	.uleb128 .Ltmp513-.Lfunc_begin8         #     jumps to .Ltmp513
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp512-.Lfunc_begin8         # >> Call Site 74 <<
	.uleb128 .Ltmp514-.Ltmp512              #   Call between .Ltmp512 and .Ltmp514
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp514-.Lfunc_begin8         # >> Call Site 75 <<
	.uleb128 .Ltmp515-.Ltmp514              #   Call between .Ltmp514 and .Ltmp515
	.uleb128 .Ltmp516-.Lfunc_begin8         #     jumps to .Ltmp516
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp515-.Lfunc_begin8         # >> Call Site 76 <<
	.uleb128 .Ltmp517-.Ltmp515              #   Call between .Ltmp515 and .Ltmp517
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp517-.Lfunc_begin8         # >> Call Site 77 <<
	.uleb128 .Ltmp518-.Ltmp517              #   Call between .Ltmp517 and .Ltmp518
	.uleb128 .Ltmp529-.Lfunc_begin8         #     jumps to .Ltmp529
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp519-.Lfunc_begin8         # >> Call Site 78 <<
	.uleb128 .Ltmp520-.Ltmp519              #   Call between .Ltmp519 and .Ltmp520
	.uleb128 .Ltmp521-.Lfunc_begin8         #     jumps to .Ltmp521
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp520-.Lfunc_begin8         # >> Call Site 79 <<
	.uleb128 .Ltmp522-.Ltmp520              #   Call between .Ltmp520 and .Ltmp522
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp522-.Lfunc_begin8         # >> Call Site 80 <<
	.uleb128 .Ltmp523-.Ltmp522              #   Call between .Ltmp522 and .Ltmp523
	.uleb128 .Ltmp524-.Lfunc_begin8         #     jumps to .Ltmp524
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp523-.Lfunc_begin8         # >> Call Site 81 <<
	.uleb128 .Ltmp525-.Ltmp523              #   Call between .Ltmp523 and .Ltmp525
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp525-.Lfunc_begin8         # >> Call Site 82 <<
	.uleb128 .Ltmp528-.Ltmp525              #   Call between .Ltmp525 and .Ltmp528
	.uleb128 .Ltmp529-.Lfunc_begin8         #     jumps to .Ltmp529
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp530-.Lfunc_begin8         # >> Call Site 83 <<
	.uleb128 .Ltmp533-.Ltmp530              #   Call between .Ltmp530 and .Ltmp533
	.uleb128 .Ltmp534-.Lfunc_begin8         #     jumps to .Ltmp534
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp553-.Lfunc_begin8         # >> Call Site 84 <<
	.uleb128 .Ltmp554-.Ltmp553              #   Call between .Ltmp553 and .Ltmp554
	.uleb128 .Ltmp555-.Lfunc_begin8         #     jumps to .Ltmp555
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp556-.Lfunc_begin8         # >> Call Site 85 <<
	.uleb128 .Ltmp557-.Ltmp556              #   Call between .Ltmp556 and .Ltmp557
	.uleb128 .Ltmp560-.Lfunc_begin8         #     jumps to .Ltmp560
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp557-.Lfunc_begin8         # >> Call Site 86 <<
	.uleb128 .Ltmp369-.Ltmp557              #   Call between .Ltmp557 and .Ltmp369
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp369-.Lfunc_begin8         # >> Call Site 87 <<
	.uleb128 .Ltmp370-.Ltmp369              #   Call between .Ltmp369 and .Ltmp370
	.uleb128 .Ltmp375-.Lfunc_begin8         #     jumps to .Ltmp375
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp436-.Lfunc_begin8         # >> Call Site 88 <<
	.uleb128 .Ltmp437-.Ltmp436              #   Call between .Ltmp436 and .Ltmp437
	.uleb128 .Ltmp440-.Lfunc_begin8         #     jumps to .Ltmp440
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp402-.Lfunc_begin8         # >> Call Site 89 <<
	.uleb128 .Ltmp403-.Ltmp402              #   Call between .Ltmp402 and .Ltmp403
	.uleb128 .Ltmp406-.Lfunc_begin8         #     jumps to .Ltmp406
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp489-.Lfunc_begin8         # >> Call Site 90 <<
	.uleb128 .Ltmp490-.Ltmp489              #   Call between .Ltmp489 and .Ltmp490
	.uleb128 .Ltmp493-.Lfunc_begin8         #     jumps to .Ltmp493
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp450-.Lfunc_begin8         # >> Call Site 91 <<
	.uleb128 .Ltmp451-.Ltmp450              #   Call between .Ltmp450 and .Ltmp451
	.uleb128 .Ltmp454-.Lfunc_begin8         #     jumps to .Ltmp454
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp467-.Lfunc_begin8         # >> Call Site 92 <<
	.uleb128 .Ltmp468-.Ltmp467              #   Call between .Ltmp467 and .Ltmp468
	.uleb128 .Ltmp471-.Lfunc_begin8         #     jumps to .Ltmp471
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp304-.Lfunc_begin8         # >> Call Site 93 <<
	.uleb128 .Ltmp305-.Ltmp304              #   Call between .Ltmp304 and .Ltmp305
	.uleb128 .Ltmp310-.Lfunc_begin8         #     jumps to .Ltmp310
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp344-.Lfunc_begin8         # >> Call Site 94 <<
	.uleb128 .Ltmp345-.Ltmp344              #   Call between .Ltmp344 and .Ltmp345
	.uleb128 .Ltmp454-.Lfunc_begin8         #     jumps to .Ltmp454
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp544-.Lfunc_begin8         # >> Call Site 95 <<
	.uleb128 .Ltmp545-.Ltmp544              #   Call between .Ltmp544 and .Ltmp545
	.uleb128 .Ltmp546-.Lfunc_begin8         #     jumps to .Ltmp546
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp458-.Lfunc_begin8         # >> Call Site 96 <<
	.uleb128 .Ltmp459-.Ltmp458              #   Call between .Ltmp458 and .Ltmp459
	.uleb128 .Ltmp471-.Lfunc_begin8         #     jumps to .Ltmp471
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp541-.Lfunc_begin8         # >> Call Site 97 <<
	.uleb128 .Ltmp542-.Ltmp541              #   Call between .Ltmp541 and .Ltmp542
	.uleb128 .Ltmp543-.Lfunc_begin8         #     jumps to .Ltmp543
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp538-.Lfunc_begin8         # >> Call Site 98 <<
	.uleb128 .Ltmp539-.Ltmp538              #   Call between .Ltmp538 and .Ltmp539
	.uleb128 .Ltmp540-.Lfunc_begin8         #     jumps to .Ltmp540
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp535-.Lfunc_begin8         # >> Call Site 99 <<
	.uleb128 .Ltmp536-.Ltmp535              #   Call between .Ltmp535 and .Ltmp536
	.uleb128 .Ltmp537-.Lfunc_begin8         #     jumps to .Ltmp537
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp373-.Lfunc_begin8         # >> Call Site 100 <<
	.uleb128 .Ltmp374-.Ltmp373              #   Call between .Ltmp373 and .Ltmp374
	.uleb128 .Ltmp375-.Lfunc_begin8         #     jumps to .Ltmp375
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp366-.Lfunc_begin8         # >> Call Site 101 <<
	.uleb128 .Ltmp367-.Ltmp366              #   Call between .Ltmp366 and .Ltmp367
	.uleb128 .Ltmp368-.Lfunc_begin8         #     jumps to .Ltmp368
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp433-.Lfunc_begin8         # >> Call Site 102 <<
	.uleb128 .Ltmp434-.Ltmp433              #   Call between .Ltmp433 and .Ltmp434
	.uleb128 .Ltmp435-.Lfunc_begin8         #     jumps to .Ltmp435
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp415-.Lfunc_begin8         # >> Call Site 103 <<
	.uleb128 .Ltmp416-.Ltmp415              #   Call between .Ltmp415 and .Ltmp416
	.uleb128 .Ltmp417-.Lfunc_begin8         #     jumps to .Ltmp417
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp399-.Lfunc_begin8         # >> Call Site 104 <<
	.uleb128 .Ltmp400-.Ltmp399              #   Call between .Ltmp399 and .Ltmp400
	.uleb128 .Ltmp401-.Lfunc_begin8         #     jumps to .Ltmp401
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp371-.Lfunc_begin8         # >> Call Site 105 <<
	.uleb128 .Ltmp372-.Ltmp371              #   Call between .Ltmp371 and .Ltmp372
	.uleb128 .Ltmp375-.Lfunc_begin8         #     jumps to .Ltmp375
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp438-.Lfunc_begin8         # >> Call Site 106 <<
	.uleb128 .Ltmp439-.Ltmp438              #   Call between .Ltmp438 and .Ltmp439
	.uleb128 .Ltmp440-.Lfunc_begin8         #     jumps to .Ltmp440
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp384-.Lfunc_begin8         # >> Call Site 107 <<
	.uleb128 .Ltmp385-.Ltmp384              #   Call between .Ltmp384 and .Ltmp385
	.uleb128 .Ltmp386-.Lfunc_begin8         #     jumps to .Ltmp386
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp547-.Lfunc_begin8         # >> Call Site 108 <<
	.uleb128 .Ltmp548-.Ltmp547              #   Call between .Ltmp547 and .Ltmp548
	.uleb128 .Ltmp549-.Lfunc_begin8         #     jumps to .Ltmp549
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp558-.Lfunc_begin8         # >> Call Site 109 <<
	.uleb128 .Ltmp559-.Ltmp558              #   Call between .Ltmp558 and .Ltmp559
	.uleb128 .Ltmp560-.Lfunc_begin8         #     jumps to .Ltmp560
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp404-.Lfunc_begin8         # >> Call Site 110 <<
	.uleb128 .Ltmp405-.Ltmp404              #   Call between .Ltmp404 and .Ltmp405
	.uleb128 .Ltmp406-.Lfunc_begin8         #     jumps to .Ltmp406
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp447-.Lfunc_begin8         # >> Call Site 111 <<
	.uleb128 .Ltmp448-.Ltmp447              #   Call between .Ltmp447 and .Ltmp448
	.uleb128 .Ltmp449-.Lfunc_begin8         #     jumps to .Ltmp449
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp444-.Lfunc_begin8         # >> Call Site 112 <<
	.uleb128 .Ltmp445-.Ltmp444              #   Call between .Ltmp444 and .Ltmp445
	.uleb128 .Ltmp446-.Lfunc_begin8         #     jumps to .Ltmp446
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp452-.Lfunc_begin8         # >> Call Site 113 <<
	.uleb128 .Ltmp453-.Ltmp452              #   Call between .Ltmp452 and .Ltmp453
	.uleb128 .Ltmp454-.Lfunc_begin8         #     jumps to .Ltmp454
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp308-.Lfunc_begin8         # >> Call Site 114 <<
	.uleb128 .Ltmp309-.Ltmp308              #   Call between .Ltmp308 and .Ltmp309
	.uleb128 .Ltmp310-.Lfunc_begin8         #     jumps to .Ltmp310
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp464-.Lfunc_begin8         # >> Call Site 115 <<
	.uleb128 .Ltmp465-.Ltmp464              #   Call between .Ltmp464 and .Ltmp465
	.uleb128 .Ltmp466-.Lfunc_begin8         #     jumps to .Ltmp466
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp469-.Lfunc_begin8         # >> Call Site 116 <<
	.uleb128 .Ltmp470-.Ltmp469              #   Call between .Ltmp469 and .Ltmp470
	.uleb128 .Ltmp471-.Lfunc_begin8         #     jumps to .Ltmp471
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp306-.Lfunc_begin8         # >> Call Site 117 <<
	.uleb128 .Ltmp307-.Ltmp306              #   Call between .Ltmp306 and .Ltmp307
	.uleb128 .Ltmp310-.Lfunc_begin8         #     jumps to .Ltmp310
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp323-.Lfunc_begin8         # >> Call Site 118 <<
	.uleb128 .Ltmp324-.Ltmp323              #   Call between .Ltmp323 and .Ltmp324
	.uleb128 .Ltmp325-.Lfunc_begin8         #     jumps to .Ltmp325
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp441-.Lfunc_begin8         # >> Call Site 119 <<
	.uleb128 .Ltmp442-.Ltmp441              #   Call between .Ltmp441 and .Ltmp442
	.uleb128 .Ltmp443-.Lfunc_begin8         #     jumps to .Ltmp443
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp475-.Lfunc_begin8         # >> Call Site 120 <<
	.uleb128 .Ltmp476-.Ltmp475              #   Call between .Ltmp475 and .Ltmp476
	.uleb128 .Ltmp477-.Lfunc_begin8         #     jumps to .Ltmp477
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp478-.Lfunc_begin8         # >> Call Site 121 <<
	.uleb128 .Ltmp479-.Ltmp478              #   Call between .Ltmp478 and .Ltmp479
	.uleb128 .Ltmp480-.Lfunc_begin8         #     jumps to .Ltmp480
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp479-.Lfunc_begin8         # >> Call Site 122 <<
	.uleb128 .Lfunc_end15-.Ltmp479          #   Call between .Ltmp479 and .Lfunc_end15
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end8:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase5:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	8(%rdi), %rax
	movq	%rdx, %rdi
	subq	%rax, %rdi
	movabsq	$9223372036854775807, %r9       # imm = 0x7FFFFFFFFFFFFFFF
	addq	%rdi, %r9
	cmpq	%r8, %r9
	jb	.LBB16_17
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit
	movq	%r8, %r15
	subq	%rdx, %r15
	addq	%rax, %r15
	movq	(%rbx), %rdi
	leaq	16(%rbx), %r10
	movl	$15, %r9d
	cmpq	%r10, %rdi
	je	.LBB16_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit
	movq	16(%rbx), %r9
.LBB16_3:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit
	cmpq	%r9, %r15
	jbe	.LBB16_4
# %bb.15:
	movq	%rbx, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
	jmp	.LBB16_16
.LBB16_4:
	leaq	(%rdi,%rsi), %r14
	addq	%rdx, %rsi
	movq	%rax, %r9
	subq	%rsi, %r9
	cmpq	%rcx, %rdi
	seta	%r10b
	addq	%rax, %rdi
	cmpq	%rcx, %rdi
	setb	%dil
	orb	%r10b, %dil
	cmpb	$1, %dil
	jne	.LBB16_14
# %bb.5:
	cmpq	%rsi, %rax
	sete	%al
	cmpq	%rdx, %r8
	sete	%sil
	orb	%al, %sil
	jne	.LBB16_10
# %bb.6:
	testq	%r9, %r9
	je	.LBB16_10
# %bb.7:
	leaq	(%r14,%r8), %rdi
	addq	%r14, %rdx
	cmpq	$1, %r9
	jne	.LBB16_9
# %bb.8:
	movzbl	(%rdx), %eax
	movb	%al, (%rdi)
.LBB16_10:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm.exit
	testq	%r8, %r8
	je	.LBB16_16
.LBB16_11:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm.exit
	cmpq	$1, %r8
	jne	.LBB16_13
# %bb.12:
	movzbl	(%rcx), %eax
	movb	%al, (%r14)
	jmp	.LBB16_16
.LBB16_13:
	movq	%r14, %rdi
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB16_16:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit
	movq	%r15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r15)
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB16_9:
	.cfi_def_cfa_offset 48
	movq	%rdx, %rsi
	movq	%r9, %rdx
	movq	%r8, %r12
	movq	%rcx, %r13
	callq	memmove@PLT
	movq	%r13, %rcx
	movq	%r12, %r8
	testq	%r8, %r8
	jne	.LBB16_11
	jmp	.LBB16_16
.LBB16_14:
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@PLT
	jmp	.LBB16_16
.LBB16_17:
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end16:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm, .Lfunc_end16-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm
	.cfi_startproc
# %bb.0:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, 16(%rsp)                  # 8-byte Spill
	movq	(%rdi), %r15
	movq	8(%rdi), %r13
	movq	%r8, %rbp
	movq	%rdx, 32(%rsp)                  # 8-byte Spill
	subq	%rdx, %rbp
	leaq	16(%rdi), %rdx
	cmpq	%rdx, %r15
	movq	16(%rdi), %rcx
	movl	$15, %eax
	cmovneq	%rcx, %rax
	addq	%r13, %rbp
	js	.LBB17_21
# %bb.1:
	movq	%r8, %r14
	movq	%rsi, %r12
	movq	%rdi, %rbx
	cmpq	%rax, %rbp
	movq	%rcx, 40(%rsp)                  # 8-byte Spill
	movq	%rdx, 48(%rsp)                  # 8-byte Spill
	jbe	.LBB17_4
# %bb.2:
	addq	%rax, %rax
	cmpq	%rax, %rbp
	jae	.LBB17_4
# %bb.3:
	movabsq	$9223372036854775807, %rbp      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rbp, %rax
	cmovbq	%rax, %rbp
.LBB17_4:
	movq	%rbp, %rdi
	incq	%rdi
	js	.LBB17_22
# %bb.5:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit
	callq	_Znwm@PLT
	movq	%rax, %rdx
	testq	%r12, %r12
	movq	%rax, 8(%rsp)                   # 8-byte Spill
	je	.LBB17_9
# %bb.6:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit
	cmpq	$1, %r12
	jne	.LBB17_8
# %bb.7:
	movzbl	(%r15), %eax
	movb	%al, (%rdx)
	jmp	.LBB17_9
.LBB17_8:
	movq	%rdx, %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
	movq	8(%rsp), %rdx                   # 8-byte Reload
.LBB17_9:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit
	movq	%r15, 24(%rsp)                  # 8-byte Spill
	movq	32(%rsp), %rax                  # 8-byte Reload
	leaq	(%rax,%r12), %r15
	cmpq	$0, 16(%rsp)                    # 8-byte Folded Reload
	sete	%al
	testq	%r14, %r14
	sete	%cl
	orb	%al, %cl
	jne	.LBB17_13
# %bb.10:
	leaq	(%rdx,%r12), %rdi
	cmpq	$1, %r14
	jne	.LBB17_12
# %bb.11:
	movq	16(%rsp), %rax                  # 8-byte Reload
	movzbl	(%rax), %eax
	movb	%al, (%rdi)
.LBB17_13:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit26
	cmpq	%r15, %r13
	je	.LBB17_18
.LBB17_14:
	subq	%r15, %r13
	je	.LBB17_18
# %bb.15:
	movq	%rdx, %rdi
	addq	%r12, %rdi
	addq	%r14, %rdi
	addq	24(%rsp), %r12                  # 8-byte Folded Reload
	addq	32(%rsp), %r12                  # 8-byte Folded Reload
	cmpq	$1, %r13
	jne	.LBB17_17
# %bb.16:
	movzbl	(%r12), %eax
	movb	%al, (%rdi)
	movq	24(%rsp), %rdi                  # 8-byte Reload
	cmpq	48(%rsp), %rdi                  # 8-byte Folded Reload
	jne	.LBB17_19
	jmp	.LBB17_20
.LBB17_12:
	movq	16(%rsp), %rsi                  # 8-byte Reload
	movq	%r14, %rdx
	callq	memcpy@PLT
	movq	8(%rsp), %rdx                   # 8-byte Reload
	cmpq	%r15, %r13
	jne	.LBB17_14
.LBB17_18:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit27
	movq	24(%rsp), %rdi                  # 8-byte Reload
	cmpq	48(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB17_20
.LBB17_19:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	40(%rsp), %rsi                  # 8-byte Reload
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	8(%rsp), %rdx                   # 8-byte Reload
.LBB17_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv.exit
	movq	%rdx, (%rbx)
	movq	%rbp, 16(%rbx)
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB17_17:
	.cfi_def_cfa_offset 112
	movq	%r12, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
	movq	8(%rsp), %rdx                   # 8-byte Reload
	movq	24(%rsp), %rdi                  # 8-byte Reload
	cmpq	48(%rsp), %rdi                  # 8-byte Folded Reload
	jne	.LBB17_19
	jmp	.LBB17_20
.LBB17_22:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB17_21:
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end17:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm, .Lfunc_end17-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail12error_stringB5cxx11Ev,"axG",@progbits,_ZN8pybind116detail12error_stringB5cxx11Ev,comdat
	.hidden	_ZN8pybind116detail12error_stringB5cxx11Ev # -- Begin function _ZN8pybind116detail12error_stringB5cxx11Ev
	.weak	_ZN8pybind116detail12error_stringB5cxx11Ev
	.p2align	4, 0x90
	.type	_ZN8pybind116detail12error_stringB5cxx11Ev,@function
_ZN8pybind116detail12error_stringB5cxx11Ev: # @_ZN8pybind116detail12error_stringB5cxx11Ev
.Lfunc_begin9:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception9
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$72, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	.L.str.30(%rip), %rsi
	leaq	8(%rsp), %r14
	movq	%r14, %rdi
	callq	_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc
.Ltmp561:
	movq	%r14, %rdi
	callq	_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev
.Ltmp562:
# %bb.1:
	leaq	16(%rbx), %r12
	movq	%r12, (%rbx)
	movq	(%rax), %r15
	movq	8(%rax), %r14
	cmpq	$16, %r14
	jb	.LBB18_10
# %bb.2:
	testq	%r14, %r14
	js	.LBB18_3
# %bb.5:
	movq	%r14, %rdi
	incq	%rdi
	js	.LBB18_6
# %bb.8:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
.Ltmp563:
	callq	_Znwm@PLT
.Ltmp564:
# %bb.9:                                # %.noexc2
	movq	%rax, %r12
	movq	%rax, (%rbx)
	movq	%r14, 16(%rbx)
.LBB18_10:                              # %._crit_edge.i.i
	testq	%r14, %r14
	je	.LBB18_14
# %bb.11:                               # %._crit_edge.i.i
	cmpq	$1, %r14
	jne	.LBB18_13
# %bb.12:
	movzbl	(%r15), %eax
	movb	%al, (%r12)
	jmp	.LBB18_14
.LBB18_13:
	movq	%r12, %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
.LBB18_14:
	movq	%r14, 8(%rbx)
	movb	$0, (%r12,%r14)
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB18_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	movq	48(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB18_16:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	leaq	24(%rsp), %rdi
.Ltmp565:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp566:
# %bb.17:                               # %_ZN8pybind116objectD2Ev.exit.i
	leaq	16(%rsp), %rdi
.Ltmp568:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp569:
# %bb.18:                               # %_ZN8pybind116objectD2Ev.exit1.i
.Ltmp571:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp572:
# %bb.19:                               # %_ZN8pybind116detail25error_fetch_and_normalizeD2Ev.exit
	movq	%rbx, %rax
	addq	$72, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB18_6:                               # %.noexc6.i
	.cfi_def_cfa_offset 112
.Ltmp574:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp575:
# %bb.7:                                # %.noexc1
.LBB18_3:                               # %.noexc.i
.Ltmp576:
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp577:
# %bb.4:                                # %.noexc
.LBB18_23:
.Ltmp573:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB18_22:
.Ltmp570:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB18_21:
.Ltmp567:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB18_20:
.Ltmp578:
	movq	%rax, %rbx
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind116detail25error_fetch_and_normalizeD2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end18:
	.size	_ZN8pybind116detail12error_stringB5cxx11Ev, .Lfunc_end18-_ZN8pybind116detail12error_stringB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail12error_stringB5cxx11Ev,"aG",@progbits,_ZN8pybind116detail12error_stringB5cxx11Ev,comdat
	.p2align	2, 0x0
GCC_except_table18:
.Lexception9:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase6-.Lttbaseref6
.Lttbaseref6:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end9-.Lcst_begin9
.Lcst_begin9:
	.uleb128 .Lfunc_begin9-.Lfunc_begin9    # >> Call Site 1 <<
	.uleb128 .Ltmp561-.Lfunc_begin9         #   Call between .Lfunc_begin9 and .Ltmp561
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp561-.Lfunc_begin9         # >> Call Site 2 <<
	.uleb128 .Ltmp564-.Ltmp561              #   Call between .Ltmp561 and .Ltmp564
	.uleb128 .Ltmp578-.Lfunc_begin9         #     jumps to .Ltmp578
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp564-.Lfunc_begin9         # >> Call Site 3 <<
	.uleb128 .Ltmp565-.Ltmp564              #   Call between .Ltmp564 and .Ltmp565
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp565-.Lfunc_begin9         # >> Call Site 4 <<
	.uleb128 .Ltmp566-.Ltmp565              #   Call between .Ltmp565 and .Ltmp566
	.uleb128 .Ltmp567-.Lfunc_begin9         #     jumps to .Ltmp567
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp568-.Lfunc_begin9         # >> Call Site 5 <<
	.uleb128 .Ltmp569-.Ltmp568              #   Call between .Ltmp568 and .Ltmp569
	.uleb128 .Ltmp570-.Lfunc_begin9         #     jumps to .Ltmp570
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp571-.Lfunc_begin9         # >> Call Site 6 <<
	.uleb128 .Ltmp572-.Ltmp571              #   Call between .Ltmp571 and .Ltmp572
	.uleb128 .Ltmp573-.Lfunc_begin9         #     jumps to .Ltmp573
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp574-.Lfunc_begin9         # >> Call Site 7 <<
	.uleb128 .Ltmp577-.Ltmp574              #   Call between .Ltmp574 and .Ltmp577
	.uleb128 .Ltmp578-.Lfunc_begin9         #     jumps to .Ltmp578
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp577-.Lfunc_begin9         # >> Call Site 8 <<
	.uleb128 .Lfunc_end18-.Ltmp577          #   Call between .Ltmp577 and .Lfunc_end18
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end9:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase6:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r12
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	%rdx, %rdi
	callq	strlen@PLT
	movq	8(%r14), %rsi
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	xorq	%rsi, %rcx
	cmpq	%rax, %rcx
	jb	.LBB19_13
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	leaq	(%rsi,%rax), %r13
	movq	(%r14), %rdi
	leaq	16(%r14), %r15
	movl	$15, %ecx
	cmpq	%r15, %rdi
	je	.LBB19_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	movq	16(%r14), %rcx
.LBB19_3:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	cmpq	%rcx, %r13
	jbe	.LBB19_4
# %bb.8:
	movq	%r14, %rdi
	xorl	%edx, %edx
	movq	%r12, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
	jmp	.LBB19_9
.LBB19_4:
	testq	%rax, %rax
	je	.LBB19_9
# %bb.5:
	addq	%rsi, %rdi
	cmpq	$1, %rax
	jne	.LBB19_7
# %bb.6:
	movzbl	(%r12), %eax
	movb	%al, (%rdi)
	jmp	.LBB19_9
.LBB19_7:
	movq	%r12, %rsi
	movq	%rax, %rdx
	callq	memcpy@PLT
.LBB19_9:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit
	movq	%r13, 8(%r14)
	movq	(%r14), %rax
	movb	$0, (%rax,%r13)
	leaq	16(%rbx), %rdi
	movq	%rdi, (%rbx)
	movq	(%r14), %rax
	cmpq	%r15, %rax
	je	.LBB19_10
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	%rax, (%rbx)
	movq	16(%r14), %rax
	movq	%rax, 16(%rbx)
	movq	8(%r14), %r12
	jmp	.LBB19_12
.LBB19_10:
	movq	8(%r14), %r12
	leaq	1(%r12), %rdx
	movq	%r15, %rsi
	callq	memcpy@PLT
.LBB19_12:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	%r12, 8(%rbx)
	movq	%r15, (%r14)
	movq	$0, 8(%r14)
	movb	$0, 16(%r14)
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB19_13:
	.cfi_def_cfa_offset 48
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end19:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_, .Lfunc_end19-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_
	.cfi_startproc
# %bb.0:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r15
	movq	%rdi, %rbx
	movq	(%rsi), %rcx
	movq	8(%rsi), %rax
	movq	8(%rdx), %r8
	leaq	(%r8,%rax), %r12
	leaq	16(%rsi), %r14
	movl	$15, %esi
	cmpq	%r14, %rcx
	je	.LBB20_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit
	movq	16(%r15), %rsi
.LBB20_2:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit
	movq	(%rdx), %r9
	cmpq	%rsi, %r12
	jbe	.LBB20_10
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit12
	leaq	16(%rdx), %r10
	movl	$15, %edi
	cmpq	%r10, %r9
	je	.LBB20_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit12
	movq	16(%rdx), %rdi
.LBB20_5:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit12
	cmpq	%rdi, %r12
	jbe	.LBB20_6
.LBB20_10:
	movabsq	$9223372036854775807, %rdx      # imm = 0x7FFFFFFFFFFFFFFF
	xorq	%rax, %rdx
	cmpq	%r8, %rdx
	jb	.LBB20_22
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	cmpq	%rsi, %r12
	jbe	.LBB20_12
# %bb.16:
	movq	%r15, %rdi
	movq	%rax, %rsi
	xorl	%edx, %edx
	movq	%r9, %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
	jmp	.LBB20_17
.LBB20_12:
	testq	%r8, %r8
	je	.LBB20_17
# %bb.13:
	addq	%rax, %rcx
	cmpq	$1, %r8
	jne	.LBB20_15
# %bb.14:
	movzbl	(%r9), %eax
	movb	%al, (%rcx)
	jmp	.LBB20_17
.LBB20_6:                               # %.critedge
	movq	%rdx, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
	movq	%rax, %r15
	leaq	16(%rbx), %rdi
	movq	%rdi, (%rbx)
	movq	(%rax), %rax
	leaq	16(%r15), %r14
	cmpq	%r14, %rax
	je	.LBB20_7
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	%rax, (%rbx)
	movq	(%r14), %rax
	movq	%rax, 16(%rbx)
	jmp	.LBB20_9
.LBB20_15:
	movq	%rcx, %rdi
	movq	%r9, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB20_17:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_.exit
	leaq	8(%r15), %r13
	movq	%r12, 8(%r15)
	movq	(%r15), %rax
	movb	$0, (%rax,%r12)
	leaq	16(%rbx), %rdi
	movq	%rdi, (%rbx)
	movq	(%r15), %rax
	cmpq	%r14, %rax
	je	.LBB20_18
# %bb.19:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i13
	movq	%rax, (%rbx)
	movq	(%r14), %rax
	movq	%rax, 16(%rbx)
	movq	(%r13), %r12
	jmp	.LBB20_20
.LBB20_18:
	movq	(%r13), %r12
	leaq	1(%r12), %rdx
	movq	%r14, %rsi
	callq	memcpy@PLT
.LBB20_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit14
	movq	%r12, 8(%rbx)
	jmp	.LBB20_21
.LBB20_7:
	movq	8(%r15), %rdx
	incq	%rdx
	movq	%r14, %rsi
	callq	memcpy@PLT
.LBB20_9:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	%r15, %r13
	addq	$8, %r13
	movq	8(%r15), %rax
	movq	%rax, 8(%rbx)
.LBB20_21:
	movq	%r14, (%r15)
	movq	$0, (%r13)
	movb	$0, (%r14)
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB20_22:
	.cfi_def_cfa_offset 48
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end20:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_, .Lfunc_end20-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	strlen@PLT
	movq	8(%rbx), %rsi
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	xorq	%rsi, %rcx
	cmpq	%rax, %rcx
	jb	.LBB21_10
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	leaq	(%rsi,%rax), %r15
	movq	(%rbx), %rdi
	leaq	16(%rbx), %rdx
	movl	$15, %ecx
	cmpq	%rdx, %rdi
	je	.LBB21_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	movq	16(%rbx), %rcx
.LBB21_3:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	cmpq	%rcx, %r15
	jbe	.LBB21_4
# %bb.8:
	movq	%rbx, %rdi
	xorl	%edx, %edx
	movq	%r14, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
	jmp	.LBB21_9
.LBB21_4:
	testq	%rax, %rax
	je	.LBB21_9
# %bb.5:
	addq	%rsi, %rdi
	cmpq	$1, %rax
	jne	.LBB21_7
# %bb.6:
	movzbl	(%r14), %eax
	movb	%al, (%rdi)
	jmp	.LBB21_9
.LBB21_7:
	movq	%r14, %rsi
	movq	%rax, %rdx
	callq	memcpy@PLT
.LBB21_9:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit
	movq	%r15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r15)
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB21_10:
	.cfi_def_cfa_offset 32
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end21:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc, .Lfunc_end21-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %rbx
	movq	%rsi, %r14
	movq	%rdi, %r15
	movq	%rsi, %rdi
	callq	strlen@PLT
	movq	(%rbx), %rcx
	movq	8(%rbx), %r8
	leaq	15(%rsp), %r9
	movq	%r15, %rdi
	movq	%r14, %rsi
	movq	%rax, %rdx
	callq	_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE@PLT
	movq	%r15, %rax
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end22:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_, .Lfunc_end22-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail25error_fetch_and_normalizeC2EPKc,"axG",@progbits,_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc,comdat
	.hidden	_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc # -- Begin function _ZN8pybind116detail25error_fetch_and_normalizeC2EPKc
	.weak	_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc
	.p2align	4, 0x90
	.type	_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc,@function
_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc: # @_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc
.Lfunc_begin10:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception10
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$120, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r13
	movq	%rdi, %rbx
	leaq	8(%rdi), %r14
	leaq	16(%rdi), %rdx
	leaq	24(%rdi), %r12
	leaq	40(%rdi), %r15
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rdi)
	movq	$0, 16(%rdi)
	movq	%r15, 24(%rdi)
	movq	$0, 32(%rdi)
	movb	$0, 40(%rdi)
	movw	$0, 56(%rdi)
.Ltmp579:
	movq	%r14, %rsi
	movq	%rdx, 112(%rsp)                 # 8-byte Spill
	callq	PyErr_Fetch@PLT
.Ltmp580:
# %bb.1:
	movq	(%rbx), %rax
	testq	%rax, %rax
	je	.LBB23_14
# %bb.2:
	movq	8(%rax), %rcx
	testb	$-128, 171(%rcx)
	cmoveq	%rcx, %rax
	movq	24(%rax), %rbp
	testq	%rbp, %rbp
	je	.LBB23_19
# %bb.3:
	movq	32(%rbx), %r13
	movq	%rbp, %rdi
	callq	strlen@PLT
.Ltmp582:
	movq	%r12, %rdi
	xorl	%esi, %esi
	movq	%r13, %rdx
	movq	%rbp, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.Ltmp583:
# %bb.4:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit
	movq	(%r14), %rdi
.Ltmp584:
	leaq	.L.str.15(%rip), %rsi
	callq	PyObject_HasAttrString@PLT
.Ltmp585:
# %bb.5:
	testl	%eax, %eax
	je	.LBB23_13
# %bb.6:
	movq	32(%rbx), %rsi
	movq	%rsi, %rax
	shrq	$4, %rax
	movabsq	$576460752303423487, %rcx       # imm = 0x7FFFFFFFFFFFFFF
	cmpq	%rcx, %rax
	je	.LBB23_24
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	leaq	16(%rsi), %r13
	movq	(%r12), %rax
	movl	$15, %ecx
	cmpq	%r15, %rax
	je	.LBB23_9
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	(%r15), %rcx
.LBB23_9:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	cmpq	%rcx, %r13
	jbe	.LBB23_11
# %bb.10:
.Ltmp586:
	leaq	.L.str.34(%rip), %rcx
	movl	$16, %r8d
	movq	%r12, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp587:
	jmp	.LBB23_12
.LBB23_11:
	movups	.L.str.34(%rip), %xmm0
	movups	%xmm0, (%rax,%rsi)
.LBB23_12:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit
	movq	%r13, 32(%rbx)
	movq	24(%rbx), %rax
	movb	$0, (%rax,%r13)
.LBB23_13:
	addq	$120, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB23_14:
	.cfi_def_cfa_offset 176
.Ltmp603:
	leaq	16(%rsp), %rdi
	leaq	15(%rsp), %rdx
	movq	%r13, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_@PLT
.Ltmp604:
# %bb.15:
.Ltmp606:
	leaq	.L.str.31(%rip), %rsi
	leaq	48(%rsp), %rdi
	leaq	16(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp607:
# %bb.16:
.Ltmp609:
	leaq	.L.str.32(%rip), %rdx
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp610:
# %bb.17:
.Ltmp612:
	leaq	80(%rsp), %rdi
	callq	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp613:
# %bb.18:
.LBB23_19:
.Ltmp591:
	leaq	16(%rsp), %rdi
	leaq	15(%rsp), %rdx
	movq	%r13, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_@PLT
.Ltmp592:
# %bb.20:
.Ltmp594:
	leaq	.L.str.31(%rip), %rsi
	leaq	48(%rsp), %rdi
	leaq	16(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp595:
# %bb.21:
.Ltmp597:
	leaq	.L.str.33(%rip), %rdx
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp598:
# %bb.22:
.Ltmp600:
	leaq	80(%rsp), %rdi
	callq	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp601:
# %bb.23:
.LBB23_24:
.Ltmp588:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp589:
# %bb.25:                               # %.noexc
.LBB23_26:
.Ltmp602:
	jmp	.LBB23_29
.LBB23_27:
.Ltmp599:
	jmp	.LBB23_40
.LBB23_28:
.Ltmp614:
.LBB23_29:
	movq	%rax, %r13
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB23_38
# %bb.30:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB23_41
.LBB23_31:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit26
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB23_45
.LBB23_32:
	movq	(%r12), %rdi
	cmpq	%r15, %rdi
	je	.LBB23_34
.LBB23_33:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i40
	movq	(%r15), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB23_34:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit42
.Ltmp615:
	movq	112(%rsp), %rdi                 # 8-byte Reload
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp616:
# %bb.35:                               # %_ZN8pybind116objectD2Ev.exit
.Ltmp618:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp619:
# %bb.36:                               # %_ZN8pybind116objectD2Ev.exit43
.Ltmp621:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp622:
# %bb.37:                               # %_ZN8pybind116objectD2Ev.exit44
	movq	%r13, %rdi
	callq	_Unwind_Resume@PLT
.LBB23_38:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB23_31
	jmp	.LBB23_41
.LBB23_39:
.Ltmp611:
.LBB23_40:
	movq	%rax, %r13
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB23_31
.LBB23_41:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i24
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB23_32
	jmp	.LBB23_45
.LBB23_42:
.Ltmp596:
	jmp	.LBB23_44
.LBB23_43:
.Ltmp608:
.LBB23_44:
	movq	%rax, %r13
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB23_32
.LBB23_45:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i27
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	(%r12), %rdi
	cmpq	%r15, %rdi
	jne	.LBB23_33
	jmp	.LBB23_34
.LBB23_46:
.Ltmp593:
	jmp	.LBB23_52
.LBB23_47:
.Ltmp605:
	jmp	.LBB23_52
.LBB23_48:
.Ltmp623:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB23_49:
.Ltmp581:
	jmp	.LBB23_52
.LBB23_50:
.Ltmp620:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB23_51:
.Ltmp590:
.LBB23_52:
	movq	%rax, %r13
	movq	(%r12), %rdi
	cmpq	%r15, %rdi
	jne	.LBB23_33
	jmp	.LBB23_34
.LBB23_53:
.Ltmp617:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end23:
	.size	_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc, .Lfunc_end23-_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail25error_fetch_and_normalizeC2EPKc,"aG",@progbits,_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc,comdat
	.p2align	2, 0x0
GCC_except_table23:
.Lexception10:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase7-.Lttbaseref7
.Lttbaseref7:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end10-.Lcst_begin10
.Lcst_begin10:
	.uleb128 .Ltmp579-.Lfunc_begin10        # >> Call Site 1 <<
	.uleb128 .Ltmp580-.Ltmp579              #   Call between .Ltmp579 and .Ltmp580
	.uleb128 .Ltmp581-.Lfunc_begin10        #     jumps to .Ltmp581
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp582-.Lfunc_begin10        # >> Call Site 2 <<
	.uleb128 .Ltmp587-.Ltmp582              #   Call between .Ltmp582 and .Ltmp587
	.uleb128 .Ltmp590-.Lfunc_begin10        #     jumps to .Ltmp590
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp603-.Lfunc_begin10        # >> Call Site 3 <<
	.uleb128 .Ltmp604-.Ltmp603              #   Call between .Ltmp603 and .Ltmp604
	.uleb128 .Ltmp605-.Lfunc_begin10        #     jumps to .Ltmp605
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp606-.Lfunc_begin10        # >> Call Site 4 <<
	.uleb128 .Ltmp607-.Ltmp606              #   Call between .Ltmp606 and .Ltmp607
	.uleb128 .Ltmp608-.Lfunc_begin10        #     jumps to .Ltmp608
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp609-.Lfunc_begin10        # >> Call Site 5 <<
	.uleb128 .Ltmp610-.Ltmp609              #   Call between .Ltmp609 and .Ltmp610
	.uleb128 .Ltmp611-.Lfunc_begin10        #     jumps to .Ltmp611
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp612-.Lfunc_begin10        # >> Call Site 6 <<
	.uleb128 .Ltmp613-.Ltmp612              #   Call between .Ltmp612 and .Ltmp613
	.uleb128 .Ltmp614-.Lfunc_begin10        #     jumps to .Ltmp614
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp591-.Lfunc_begin10        # >> Call Site 7 <<
	.uleb128 .Ltmp592-.Ltmp591              #   Call between .Ltmp591 and .Ltmp592
	.uleb128 .Ltmp593-.Lfunc_begin10        #     jumps to .Ltmp593
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp594-.Lfunc_begin10        # >> Call Site 8 <<
	.uleb128 .Ltmp595-.Ltmp594              #   Call between .Ltmp594 and .Ltmp595
	.uleb128 .Ltmp596-.Lfunc_begin10        #     jumps to .Ltmp596
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp597-.Lfunc_begin10        # >> Call Site 9 <<
	.uleb128 .Ltmp598-.Ltmp597              #   Call between .Ltmp597 and .Ltmp598
	.uleb128 .Ltmp599-.Lfunc_begin10        #     jumps to .Ltmp599
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp600-.Lfunc_begin10        # >> Call Site 10 <<
	.uleb128 .Ltmp601-.Ltmp600              #   Call between .Ltmp600 and .Ltmp601
	.uleb128 .Ltmp602-.Lfunc_begin10        #     jumps to .Ltmp602
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp588-.Lfunc_begin10        # >> Call Site 11 <<
	.uleb128 .Ltmp589-.Ltmp588              #   Call between .Ltmp588 and .Ltmp589
	.uleb128 .Ltmp590-.Lfunc_begin10        #     jumps to .Ltmp590
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp615-.Lfunc_begin10        # >> Call Site 12 <<
	.uleb128 .Ltmp616-.Ltmp615              #   Call between .Ltmp615 and .Ltmp616
	.uleb128 .Ltmp617-.Lfunc_begin10        #     jumps to .Ltmp617
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp618-.Lfunc_begin10        # >> Call Site 13 <<
	.uleb128 .Ltmp619-.Ltmp618              #   Call between .Ltmp618 and .Ltmp619
	.uleb128 .Ltmp620-.Lfunc_begin10        #     jumps to .Ltmp620
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp621-.Lfunc_begin10        # >> Call Site 14 <<
	.uleb128 .Ltmp622-.Ltmp621              #   Call between .Ltmp621 and .Ltmp622
	.uleb128 .Ltmp623-.Lfunc_begin10        #     jumps to .Ltmp623
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp622-.Lfunc_begin10        # >> Call Site 15 <<
	.uleb128 .Lfunc_end23-.Ltmp622          #   Call between .Ltmp622 and .Lfunc_end23
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end10:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase7:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail25error_fetch_and_normalizeD2Ev,"axG",@progbits,_ZN8pybind116detail25error_fetch_and_normalizeD2Ev,comdat
	.hidden	_ZN8pybind116detail25error_fetch_and_normalizeD2Ev # -- Begin function _ZN8pybind116detail25error_fetch_and_normalizeD2Ev
	.weak	_ZN8pybind116detail25error_fetch_and_normalizeD2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind116detail25error_fetch_and_normalizeD2Ev,@function
_ZN8pybind116detail25error_fetch_and_normalizeD2Ev: # @_ZN8pybind116detail25error_fetch_and_normalizeD2Ev
.Lfunc_begin11:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception11
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	24(%rdi), %rdi
	leaq	40(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB24_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	(%rax), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB24_2:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	leaq	16(%rbx), %rdi
.Ltmp624:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp625:
# %bb.3:                                # %_ZN8pybind116objectD2Ev.exit
	leaq	8(%rbx), %rdi
.Ltmp627:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp628:
# %bb.4:                                # %_ZN8pybind116objectD2Ev.exit1
.Ltmp630:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp631:
# %bb.5:                                # %_ZN8pybind116objectD2Ev.exit2
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB24_8:
	.cfi_def_cfa_offset 16
.Ltmp632:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB24_7:
.Ltmp629:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB24_6:
.Ltmp626:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end24:
	.size	_ZN8pybind116detail25error_fetch_and_normalizeD2Ev, .Lfunc_end24-_ZN8pybind116detail25error_fetch_and_normalizeD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail25error_fetch_and_normalizeD2Ev,"aG",@progbits,_ZN8pybind116detail25error_fetch_and_normalizeD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table24:
.Lexception11:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase8-.Lttbaseref8
.Lttbaseref8:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end11-.Lcst_begin11
.Lcst_begin11:
	.uleb128 .Ltmp624-.Lfunc_begin11        # >> Call Site 1 <<
	.uleb128 .Ltmp625-.Ltmp624              #   Call between .Ltmp624 and .Ltmp625
	.uleb128 .Ltmp626-.Lfunc_begin11        #     jumps to .Ltmp626
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp627-.Lfunc_begin11        # >> Call Site 2 <<
	.uleb128 .Ltmp628-.Ltmp627              #   Call between .Ltmp627 and .Ltmp628
	.uleb128 .Ltmp629-.Lfunc_begin11        #     jumps to .Ltmp629
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp630-.Lfunc_begin11        # >> Call Site 3 <<
	.uleb128 .Ltmp631-.Ltmp630              #   Call between .Ltmp630 and .Ltmp631
	.uleb128 .Ltmp632-.Lfunc_begin11        #     jumps to .Ltmp632
	.byte	1                               #   On action: 1
.Lcst_end11:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase8:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	4, 0x90
	.type	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin12:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception12
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	callq	PyErr_Occurred@PLT
	testq	%rax, %rax
	jne	.LBB25_4
# %bb.1:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp633:
	movq	%rax, %rdi
	movq	%r14, %rsi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp634:
# %bb.2:
	movq	_ZTISt13runtime_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt13runtime_errorD1Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.LBB25_4:
	leaq	.L.str.5(%rip), %rdi
	leaq	.L.str.6(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%rip), %rcx
	movl	$1050, %edx                     # imm = 0x41A
	callq	__assert_fail@PLT
.LBB25_3:
.Ltmp635:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end25:
	.size	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end25-_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table25:
.Lexception12:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end12-.Lcst_begin12
.Lcst_begin12:
	.uleb128 .Lfunc_begin12-.Lfunc_begin12  # >> Call Site 1 <<
	.uleb128 .Ltmp633-.Lfunc_begin12        #   Call between .Lfunc_begin12 and .Ltmp633
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp633-.Lfunc_begin12        # >> Call Site 2 <<
	.uleb128 .Ltmp634-.Ltmp633              #   Call between .Ltmp633 and .Ltmp634
	.uleb128 .Ltmp635-.Lfunc_begin12        #     jumps to .Ltmp635
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp634-.Lfunc_begin12        # >> Call Site 3 <<
	.uleb128 .Lfunc_end25-.Ltmp634          #   Call between .Ltmp634 and .Lfunc_end25
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end12:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_ # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	leaq	16(%rdi), %r12
	movq	%r12, (%rdi)
	testq	%rsi, %rsi
	je	.LBB26_10
# %bb.1:
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	strlen@PLT
	movq	%rax, %r15
	cmpq	$16, %rax
	jb	.LBB26_5
# %bb.2:
	testq	%r15, %r15
	js	.LBB26_11
# %bb.3:
	movq	%r15, %rdi
	incq	%rdi
	js	.LBB26_12
# %bb.4:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i
	callq	_Znwm@PLT
	movq	%rax, %r12
	movq	%rax, (%rbx)
	movq	%r15, 16(%rbx)
.LBB26_5:                               # %._crit_edge.i
	testq	%r15, %r15
	je	.LBB26_9
# %bb.6:                                # %._crit_edge.i
	cmpq	$1, %r15
	jne	.LBB26_8
# %bb.7:
	movzbl	(%r14), %eax
	movb	%al, (%r12)
	jmp	.LBB26_9
.LBB26_8:
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB26_9:
	movq	%r15, 8(%rbx)
	movb	$0, (%r12,%r15)
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB26_12:                              # %.noexc11
	.cfi_def_cfa_offset 48
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB26_10:
	leaq	.L.str.35(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.LBB26_11:                              # %.noexc
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end26:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_, .Lfunc_end26-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKR8pybind116handle7dec_refEv,"axG",@progbits,_ZNKR8pybind116handle7dec_refEv,comdat
	.hidden	_ZNKR8pybind116handle7dec_refEv # -- Begin function _ZNKR8pybind116handle7dec_refEv
	.weak	_ZNKR8pybind116handle7dec_refEv
	.p2align	4, 0x90
	.type	_ZNKR8pybind116handle7dec_refEv,@function
_ZNKR8pybind116handle7dec_refEv:        # @_ZNKR8pybind116handle7dec_refEv
.Lfunc_begin13:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception13
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$40, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	cmpq	$0, (%rdi)
	je	.LBB27_9
# %bb.1:
	callq	PyGILState_Check@PLT
	testl	%eax, %eax
	jne	.LBB27_5
# %bb.2:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
	leaq	24(%rsp), %r14
	movl	$28, %edi
	callq	_Znwm@PLT
	movq	%rax, 8(%rsp)
	movq	$27, 24(%rsp)
	movups	.L.str.36(%rip), %xmm0
	movups	%xmm0, (%rax)
	movups	.L.str.36+11(%rip), %xmm0
	movups	%xmm0, 11(%rax)
	movq	$27, 16(%rsp)
	movb	$0, 27(%rax)
.Ltmp636:
	leaq	8(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp637:
# %bb.3:
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB27_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB27_5:
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB27_9
# %bb.6:
	movq	(%rdi), %rax
	testl	%eax, %eax
	js	.LBB27_9
# %bb.7:
	decq	%rax
	movq	%rax, (%rdi)
	jne	.LBB27_9
# %bb.8:
	callq	_Py_Dealloc@PLT
.LBB27_9:                               # %_ZL10Py_XDECREFP7_object.exit
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB27_10:
	.cfi_def_cfa_offset 64
.Ltmp638:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB27_12
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i7
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB27_12:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit9
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end27:
	.size	_ZNKR8pybind116handle7dec_refEv, .Lfunc_end27-_ZNKR8pybind116handle7dec_refEv
	.cfi_endproc
	.section	.gcc_except_table._ZNKR8pybind116handle7dec_refEv,"aG",@progbits,_ZNKR8pybind116handle7dec_refEv,comdat
	.p2align	2, 0x0
GCC_except_table27:
.Lexception13:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end13-.Lcst_begin13
.Lcst_begin13:
	.uleb128 .Lfunc_begin13-.Lfunc_begin13  # >> Call Site 1 <<
	.uleb128 .Ltmp636-.Lfunc_begin13        #   Call between .Lfunc_begin13 and .Ltmp636
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp636-.Lfunc_begin13        # >> Call Site 2 <<
	.uleb128 .Ltmp637-.Ltmp636              #   Call between .Ltmp636 and .Ltmp637
	.uleb128 .Ltmp638-.Lfunc_begin13        #     jumps to .Ltmp638
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp637-.Lfunc_begin13        # >> Call Site 3 <<
	.uleb128 .Lfunc_end27-.Ltmp637          #   Call between .Ltmp637 and .Lfunc_end27
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end13:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	4, 0x90
	.type	_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin14:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception14
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$40, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	stderr@GOTPCREL(%rip), %r15
	movq	(%r15), %rdi
	movq	(%rsi), %rdx
	leaq	.L.str.37(%rip), %rsi
	xorl	%eax, %eax
	callq	fprintf@PLT
	movq	(%rbx), %rax
	movq	8(%rax), %rax
	movq	24(%rax), %rcx
	testq	%rcx, %rcx
	je	.LBB28_2
# %bb.1:
	movq	(%r15), %rdi
	movq	(%r14), %rdx
	leaq	.L.str.38(%rip), %rsi
	xorl	%eax, %eax
	callq	fprintf@PLT
.LBB28_2:
	movq	(%r15), %rsi
	movl	$10, %edi
	callq	fputc@PLT
	movq	(%r15), %rdi
	callq	fflush@PLT
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
	movq	(%r14), %rsi
	movq	8(%r14), %rdx
.Ltmp639:
	leaq	.L.str.40(%rip), %rcx
	leaq	8(%rsp), %rdi
	leaq	7(%rsp), %r9
	movl	$28, %r8d
	callq	_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE@PLT
.Ltmp640:
# %bb.3:
	movb	$1, %bpl
.Ltmp642:
	leaq	8(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp643:
# %bb.4:
	xorl	%ebp, %ebp
.Ltmp644:
	movq	_ZTISt13runtime_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt13runtime_errorD1Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp645:
# %bb.11:
.LBB28_6:
.Ltmp646:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB28_7
# %bb.8:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	testb	%bpl, %bpl
	jne	.LBB28_9
.LBB28_10:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB28_7:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	testb	%bpl, %bpl
	je	.LBB28_10
.LBB28_9:
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB28_5:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.thread
.Ltmp641:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end28:
	.size	_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end28-_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table28:
.Lexception14:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end14-.Lcst_begin14
.Lcst_begin14:
	.uleb128 .Lfunc_begin14-.Lfunc_begin14  # >> Call Site 1 <<
	.uleb128 .Ltmp639-.Lfunc_begin14        #   Call between .Lfunc_begin14 and .Ltmp639
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp639-.Lfunc_begin14        # >> Call Site 2 <<
	.uleb128 .Ltmp640-.Ltmp639              #   Call between .Ltmp639 and .Ltmp640
	.uleb128 .Ltmp641-.Lfunc_begin14        #     jumps to .Ltmp641
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp642-.Lfunc_begin14        # >> Call Site 3 <<
	.uleb128 .Ltmp645-.Ltmp642              #   Call between .Ltmp642 and .Ltmp645
	.uleb128 .Ltmp646-.Lfunc_begin14        #     jumps to .Ltmp646
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp645-.Lfunc_begin14        # >> Call Site 4 <<
	.uleb128 .Lfunc_end28-.Ltmp645          #   Call between .Ltmp645 and .Lfunc_end28
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end14:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE,"axG",@progbits,_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE,comdat
	.weak	_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE # -- Begin function _ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE
	.p2align	4, 0x90
	.type	_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE,@function
_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: # @_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE
.Lfunc_begin15:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception15
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %r14
	movq	%rcx, 8(%rsp)                   # 8-byte Spill
	movq	%rdx, %r12
	movq	%rsi, 16(%rsp)                  # 8-byte Spill
	movq	%rdi, %rbx
	leaq	16(%rdi), %rbp
	movq	%rbp, (%rdi)
	movq	$0, 8(%rdi)
	movb	$0, 16(%rdi)
	leaq	(%r8,%rdx), %rsi
.Ltmp647:
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@PLT
.Ltmp648:
# %bb.1:
	movabsq	$9223372036854775807, %r15      # imm = 0x7FFFFFFFFFFFFFFF
	movq	8(%rbx), %rsi
	movq	%r15, %rax
	subq	%rsi, %rax
	cmpq	%r12, %rax
	jb	.LBB29_11
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	leaq	(%rsi,%r12), %r13
	movq	(%rbx), %rdi
	movl	$15, %eax
	cmpq	%rbp, %rdi
	je	.LBB29_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	movq	(%rbp), %rax
.LBB29_4:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	cmpq	%rax, %r13
	jbe	.LBB29_5
# %bb.9:
.Ltmp649:
	movq	%rbx, %rdi
	xorl	%edx, %edx
	movq	16(%rsp), %rcx                  # 8-byte Reload
	movq	%r12, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp650:
	jmp	.LBB29_10
.LBB29_5:
	testq	%r12, %r12
	je	.LBB29_10
# %bb.6:
	addq	%rsi, %rdi
	cmpq	$1, %r12
	jne	.LBB29_8
# %bb.7:
	movq	16(%rsp), %rax                  # 8-byte Reload
	movzbl	(%rax), %eax
	movb	%al, (%rdi)
	jmp	.LBB29_10
.LBB29_8:
	movq	16(%rsp), %rsi                  # 8-byte Reload
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB29_10:
	movq	%r13, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r13)
	movq	8(%rbx), %rsi
	subq	%rsi, %r15
	cmpq	%r14, %r15
	jb	.LBB29_11
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i10
	leaq	(%rsi,%r14), %r15
	movq	(%rbx), %rdi
	movl	$15, %eax
	cmpq	%rbp, %rdi
	je	.LBB29_15
# %bb.14:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i10
	movq	(%rbp), %rax
.LBB29_15:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i10
	cmpq	%rax, %r15
	jbe	.LBB29_16
# %bb.19:
.Ltmp651:
	movq	%rbx, %rdi
	xorl	%edx, %edx
	movq	8(%rsp), %rcx                   # 8-byte Reload
	movq	%r14, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp652:
	jmp	.LBB29_24
.LBB29_16:
	testq	%r14, %r14
	je	.LBB29_24
# %bb.17:
	addq	%rsi, %rdi
	cmpq	$1, %r14
	jne	.LBB29_23
# %bb.18:
	movq	8(%rsp), %rax                   # 8-byte Reload
	movzbl	(%rax), %eax
	movb	%al, (%rdi)
	jmp	.LBB29_24
.LBB29_23:
	movq	8(%rsp), %rsi                   # 8-byte Reload
	movq	%r14, %rdx
	callq	memcpy@PLT
.LBB29_24:
	movq	%r15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r15)
	movq	%rbx, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB29_11:                              # %.invoke
	.cfi_def_cfa_offset 80
.Ltmp653:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp654:
# %bb.12:                               # %.cont
.LBB29_20:
.Ltmp655:
	movq	%rax, %r14
	movq	(%rbx), %rdi
	cmpq	%rbp, %rdi
	je	.LBB29_22
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	(%rbp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB29_22:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end29:
	.size	_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE, .Lfunc_end29-_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE
	.cfi_endproc
	.section	.gcc_except_table._ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE,"aG",@progbits,_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE,comdat
	.p2align	2, 0x0
GCC_except_table29:
.Lexception15:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end15-.Lcst_begin15
.Lcst_begin15:
	.uleb128 .Ltmp647-.Lfunc_begin15        # >> Call Site 1 <<
	.uleb128 .Ltmp650-.Ltmp647              #   Call between .Ltmp647 and .Ltmp650
	.uleb128 .Ltmp655-.Lfunc_begin15        #     jumps to .Ltmp655
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp650-.Lfunc_begin15        # >> Call Site 2 <<
	.uleb128 .Ltmp651-.Ltmp650              #   Call between .Ltmp650 and .Ltmp651
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp651-.Lfunc_begin15        # >> Call Site 3 <<
	.uleb128 .Ltmp652-.Ltmp651              #   Call between .Ltmp651 and .Ltmp652
	.uleb128 .Ltmp655-.Lfunc_begin15        #     jumps to .Ltmp655
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp652-.Lfunc_begin15        # >> Call Site 4 <<
	.uleb128 .Ltmp653-.Ltmp652              #   Call between .Ltmp652 and .Ltmp653
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp653-.Lfunc_begin15        # >> Call Site 5 <<
	.uleb128 .Ltmp654-.Ltmp653              #   Call between .Ltmp653 and .Ltmp654
	.uleb128 .Ltmp655-.Lfunc_begin15        #     jumps to .Ltmp655
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp654-.Lfunc_begin15        # >> Call Site 6 <<
	.uleb128 .Lfunc_end29-.Ltmp654          #   Call between .Ltmp654 and .Lfunc_end29
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end15:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm
	.cfi_startproc
# %bb.0:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	(%rdi), %r14
	movq	16(%rdi), %r15
	leaq	16(%rdi), %r13
	cmpq	%r13, %r14
	movl	$15, %eax
	cmovneq	%r15, %rax
	cmpq	%rsi, %rax
	jae	.LBB30_10
# %bb.1:
	testq	%rsi, %rsi
	js	.LBB30_11
# %bb.2:
	movq	%rdi, %rbx
	addq	%rax, %rax
	movabsq	$9223372036854775807, %rbp      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rbp, %rax
	cmovbq	%rax, %rbp
	cmpq	%rsi, %rax
	cmovbeq	%rsi, %rbp
	movq	%rbp, %rdi
	incq	%rdi
	js	.LBB30_12
# %bb.3:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit
	callq	_Znwm@PLT
	movq	%rax, %r12
	movq	8(%rbx), %rdx
	cmpq	$-1, %rdx
	je	.LBB30_7
# %bb.4:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit
	testq	%rdx, %rdx
	jne	.LBB30_6
# %bb.5:
	movzbl	(%r14), %eax
	movb	%al, (%r12)
.LBB30_7:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit
	cmpq	%r13, %r14
	je	.LBB30_9
.LBB30_8:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	incq	%r15
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	_ZdlPvm@PLT
.LBB30_9:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv.exit
	movq	%r12, (%rbx)
	movq	%rbp, 16(%rbx)
.LBB30_10:
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB30_6:
	.cfi_def_cfa_offset 64
	incq	%rdx
	movq	%r12, %rdi
	movq	%r14, %rsi
	callq	memcpy@PLT
	cmpq	%r13, %r14
	jne	.LBB30_8
	jmp	.LBB30_9
.LBB30_12:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB30_11:
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end30:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm, .Lfunc_end30-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE,"axG",@progbits,_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE,comdat
	.hidden	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE # -- Begin function _ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
	.weak	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE,@function
_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE: # @_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Lfunc_begin16:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception16
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$208, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	(%rsi), %rsi
	movl	$1, %edx
	callq	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb
	testb	%al, %al
	je	.LBB31_1
# %bb.36:
	movq	%rbx, %rax
	addq	$208, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB31_1:
	.cfi_def_cfa_offset 240
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
	movq	(%r14), %rax
	movq	8(%rax), %rsi
.Ltmp656:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2ENS_6handleE
.Ltmp657:
# %bb.2:
.Ltmp659:
	leaq	48(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE
.Ltmp660:
# %bb.3:                                # %_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v.exit
.Ltmp665:
	leaq	.L.str.42(%rip), %rsi
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp666:
# %bb.4:
.Ltmp668:
	leaq	.L.str.43(%rip), %rdx
	leaq	112(%rsp), %rdi
	leaq	80(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp669:
# %bb.5:
.Ltmp671:
	leaq	16(%rsp), %rdi
	callq	_ZN8pybind11L7type_idINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES6_v
.Ltmp672:
# %bb.6:
.Ltmp674:
	leaq	144(%rsp), %rdi
	leaq	112(%rsp), %rsi
	leaq	16(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp675:
# %bb.7:
.Ltmp677:
	leaq	.L.str.44(%rip), %rdx
	leaq	176(%rsp), %rdi
	leaq	144(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp678:
# %bb.8:
	movb	$1, %bpl
.Ltmp680:
	leaq	176(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp681:
# %bb.9:
	leaq	_ZTVN8pybind1110cast_errorE+16(%rip), %rax
	movq	%rax, (%rbx)
	xorl	%ebp, %ebp
.Ltmp682:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp683:
# %bb.34:
.LBB31_18:
.Ltmp684:
	movq	%rax, %r14
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB31_19
# %bb.20:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB31_21
.LBB31_22:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB31_23
.LBB31_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit41
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB31_25
.LBB31_26:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit44
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB31_27
.LBB31_28:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB31_30
.LBB31_29:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i48
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB31_30:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit50
.Ltmp685:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp686:
# %bb.31:                               # %_ZN8pybind116objectD2Ev.exit51
	testb	%bpl, %bpl
	jne	.LBB31_32
	jmp	.LBB31_33
.LBB31_19:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	192(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB31_22
	jmp	.LBB31_21
.LBB31_17:
.Ltmp679:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB31_22
.LBB31_21:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i36
	movq	160(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB31_24
	jmp	.LBB31_23
.LBB31_16:
.Ltmp676:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB31_24
.LBB31_23:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i39
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB31_26
	jmp	.LBB31_25
.LBB31_15:
.Ltmp673:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB31_26
.LBB31_25:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i42
	movq	128(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB31_28
	jmp	.LBB31_27
.LBB31_14:
.Ltmp670:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB31_28
.LBB31_27:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i45
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB31_29
	jmp	.LBB31_30
.LBB31_35:
.Ltmp687:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB31_13:
.Ltmp667:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB31_29
	jmp	.LBB31_30
.LBB31_12:                              # %.thread33
.Ltmp661:
	movq	%rax, %r14
.Ltmp662:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp663:
	jmp	.LBB31_32
.LBB31_11:
.Ltmp664:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB31_10:                              # %.thread
.Ltmp658:
	movq	%rax, %r14
.LBB31_32:
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
.LBB31_33:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end31:
	.size	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE, .Lfunc_end31-_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE,"aG",@progbits,_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE,comdat
	.p2align	2, 0x0
GCC_except_table31:
.Lexception16:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase9-.Lttbaseref9
.Lttbaseref9:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end16-.Lcst_begin16
.Lcst_begin16:
	.uleb128 .Lfunc_begin16-.Lfunc_begin16  # >> Call Site 1 <<
	.uleb128 .Ltmp656-.Lfunc_begin16        #   Call between .Lfunc_begin16 and .Ltmp656
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp656-.Lfunc_begin16        # >> Call Site 2 <<
	.uleb128 .Ltmp657-.Ltmp656              #   Call between .Ltmp656 and .Ltmp657
	.uleb128 .Ltmp658-.Lfunc_begin16        #     jumps to .Ltmp658
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp659-.Lfunc_begin16        # >> Call Site 3 <<
	.uleb128 .Ltmp660-.Ltmp659              #   Call between .Ltmp659 and .Ltmp660
	.uleb128 .Ltmp661-.Lfunc_begin16        #     jumps to .Ltmp661
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp665-.Lfunc_begin16        # >> Call Site 4 <<
	.uleb128 .Ltmp666-.Ltmp665              #   Call between .Ltmp665 and .Ltmp666
	.uleb128 .Ltmp667-.Lfunc_begin16        #     jumps to .Ltmp667
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp668-.Lfunc_begin16        # >> Call Site 5 <<
	.uleb128 .Ltmp669-.Ltmp668              #   Call between .Ltmp668 and .Ltmp669
	.uleb128 .Ltmp670-.Lfunc_begin16        #     jumps to .Ltmp670
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp671-.Lfunc_begin16        # >> Call Site 6 <<
	.uleb128 .Ltmp672-.Ltmp671              #   Call between .Ltmp671 and .Ltmp672
	.uleb128 .Ltmp673-.Lfunc_begin16        #     jumps to .Ltmp673
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp674-.Lfunc_begin16        # >> Call Site 7 <<
	.uleb128 .Ltmp675-.Ltmp674              #   Call between .Ltmp674 and .Ltmp675
	.uleb128 .Ltmp676-.Lfunc_begin16        #     jumps to .Ltmp676
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp677-.Lfunc_begin16        # >> Call Site 8 <<
	.uleb128 .Ltmp678-.Ltmp677              #   Call between .Ltmp677 and .Ltmp678
	.uleb128 .Ltmp679-.Lfunc_begin16        #     jumps to .Ltmp679
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp680-.Lfunc_begin16        # >> Call Site 9 <<
	.uleb128 .Ltmp683-.Ltmp680              #   Call between .Ltmp680 and .Ltmp683
	.uleb128 .Ltmp684-.Lfunc_begin16        #     jumps to .Ltmp684
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp685-.Lfunc_begin16        # >> Call Site 10 <<
	.uleb128 .Ltmp686-.Ltmp685              #   Call between .Ltmp685 and .Ltmp686
	.uleb128 .Ltmp687-.Lfunc_begin16        #     jumps to .Ltmp687
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp662-.Lfunc_begin16        # >> Call Site 11 <<
	.uleb128 .Ltmp663-.Ltmp662              #   Call between .Ltmp662 and .Ltmp663
	.uleb128 .Ltmp664-.Lfunc_begin16        #     jumps to .Ltmp664
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp663-.Lfunc_begin16        # >> Call Site 12 <<
	.uleb128 .Lfunc_end31-.Ltmp663          #   Call between .Ltmp663 and .Lfunc_end31
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end16:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase9:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb,"axG",@progbits,_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb,comdat
	.hidden	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb # -- Begin function _ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb
	.weak	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb
	.p2align	4, 0x90
	.type	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb,@function
_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb: # @_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	testq	%rsi, %rsi
	je	.LBB32_1
# %bb.2:
	movq	8(%rsi), %rax
	testb	$16, 171(%rax)
	jne	.LBB32_3
# %bb.30:
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE # TAILCALL
.LBB32_1:
	.cfi_def_cfa_offset 96
	xorl	%ebx, %ebx
	jmp	.LBB32_29
.LBB32_3:
	movq	%rdi, %r13
	movq	$-1, 32(%rsp)
	leaq	32(%rsp), %rax
	movq	%rsi, %rdi
	movq	%rax, %rsi
	callq	PyUnicode_AsUTF8AndSize@PLT
	testq	%rax, %rax
	setne	%bl
	je	.LBB32_4
# %bb.5:
	movq	32(%rsp), %r14
	leaq	16(%rsp), %r12
	movq	%r12, (%rsp)
	movq	%r12, %r15
	cmpq	$16, %r14
	jb	.LBB32_9
# %bb.6:
	testq	%r14, %r14
	js	.LBB32_31
# %bb.7:
	movq	%r14, %rdi
	incq	%rdi
	js	.LBB32_32
# %bb.8:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
	movq	%rax, %rbp
	callq	_Znwm@PLT
	movq	%rax, %r15
	movq	%rax, (%rsp)
	movq	%r14, 16(%rsp)
	movq	%rbp, %rax
.LBB32_9:                               # %._crit_edge.i.i
	testq	%r14, %r14
	movq	%r13, %rcx
	je	.LBB32_13
# %bb.10:                               # %._crit_edge.i.i
	cmpq	$1, %r14
	jne	.LBB32_12
# %bb.11:
	movzbl	(%rax), %eax
	movb	%al, (%r15)
	jmp	.LBB32_13
.LBB32_4:
	callq	PyErr_Clear@PLT
	jmp	.LBB32_29
.LBB32_12:
	movq	%r15, %rdi
	movq	%rax, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
	movq	%r13, %rcx
.LBB32_13:
	movq	%r14, 8(%rsp)
	movb	$0, (%r15,%r14)
	movq	(%rcx), %rdi
	leaq	16(%rcx), %rax
	cmpq	%rax, %rdi
	je	.LBB32_14
# %bb.17:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	movq	(%rsp), %rsi
	cmpq	%r12, %rsi
	je	.LBB32_18
# %bb.25:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	movq	16(%rcx), %rax
	movq	%rsi, (%rcx)
	movups	8(%rsp), %xmm0
	movups	%xmm0, 8(%rcx)
	testq	%rdi, %rdi
	je	.LBB32_16
# %bb.26:
	movq	%rdi, (%rsp)
	movq	%rax, 16(%rsp)
	jmp	.LBB32_27
.LBB32_14:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	(%rsp), %rsi
	cmpq	%r12, %rsi
	je	.LBB32_18
# %bb.15:                               # %.thread.i
	movq	%rsi, (%rcx)
	movups	8(%rsp), %xmm0
	movups	%xmm0, 8(%rcx)
.LBB32_16:
	movq	%r12, (%rsp)
	movq	%r12, %rdi
	jmp	.LBB32_27
.LBB32_18:
	movq	%rsp, %rax
	cmpq	%rcx, %rax
	je	.LBB32_19
# %bb.20:
	movq	8(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB32_24
# %bb.21:
	cmpq	$1, %rdx
	jne	.LBB32_23
# %bb.22:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB32_24
.LBB32_23:
	callq	memcpy@PLT
	movq	%r13, %rcx
.LBB32_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	movq	8(%rsp), %rax
	movq	%rax, 8(%rcx)
	movq	(%rcx), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%rsp), %rdi
.LBB32_27:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	movq	$0, 8(%rsp)
	movb	$0, (%rdi)
	movq	(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB32_29
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB32_29:
	movl	%ebx, %eax
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB32_32:                              # %.noexc9.i
	.cfi_def_cfa_offset 96
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB32_19:
	movq	%rsi, %rdi
	jmp	.LBB32_27
.LBB32_31:                              # %.noexc.i
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end32:
	.size	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb, .Lfunc_end32-_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind113strC2ENS_6handleE,"axG",@progbits,_ZN8pybind113strC2ENS_6handleE,comdat
	.hidden	_ZN8pybind113strC2ENS_6handleE  # -- Begin function _ZN8pybind113strC2ENS_6handleE
	.weak	_ZN8pybind113strC2ENS_6handleE
	.p2align	4, 0x90
	.type	_ZN8pybind113strC2ENS_6handleE,@function
_ZN8pybind113strC2ENS_6handleE:         # @_ZN8pybind113strC2ENS_6handleE
.Lfunc_begin17:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception17
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	PyObject_Str@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB33_1
# %bb.4:
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB33_1:
	.cfi_def_cfa_offset 32
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp688:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp689:
# %bb.2:
.Ltmp691:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp692:
# %bb.8:
.LBB33_3:
.Ltmp693:
	movq	%rax, %r14
	jmp	.LBB33_6
.LBB33_5:
.Ltmp690:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
.LBB33_6:
.Ltmp694:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp695:
# %bb.7:                                # %_ZN8pybind116objectD2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB33_9:
.Ltmp696:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end33:
	.size	_ZN8pybind113strC2ENS_6handleE, .Lfunc_end33-_ZN8pybind113strC2ENS_6handleE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind113strC2ENS_6handleE,"aG",@progbits,_ZN8pybind113strC2ENS_6handleE,comdat
	.p2align	2, 0x0
GCC_except_table33:
.Lexception17:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase10-.Lttbaseref10
.Lttbaseref10:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end17-.Lcst_begin17
.Lcst_begin17:
	.uleb128 .Lfunc_begin17-.Lfunc_begin17  # >> Call Site 1 <<
	.uleb128 .Ltmp688-.Lfunc_begin17        #   Call between .Lfunc_begin17 and .Ltmp688
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp688-.Lfunc_begin17        # >> Call Site 2 <<
	.uleb128 .Ltmp689-.Ltmp688              #   Call between .Ltmp688 and .Ltmp689
	.uleb128 .Ltmp690-.Lfunc_begin17        #     jumps to .Ltmp690
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp691-.Lfunc_begin17        # >> Call Site 3 <<
	.uleb128 .Ltmp692-.Ltmp691              #   Call between .Ltmp691 and .Ltmp692
	.uleb128 .Ltmp693-.Lfunc_begin17        #     jumps to .Ltmp693
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp692-.Lfunc_begin17        # >> Call Site 4 <<
	.uleb128 .Ltmp694-.Ltmp692              #   Call between .Ltmp692 and .Ltmp694
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp694-.Lfunc_begin17        # >> Call Site 5 <<
	.uleb128 .Ltmp695-.Ltmp694              #   Call between .Ltmp694 and .Ltmp695
	.uleb128 .Ltmp696-.Lfunc_begin17        #     jumps to .Ltmp696
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp695-.Lfunc_begin17        # >> Call Site 6 <<
	.uleb128 .Lfunc_end33-.Ltmp695          #   Call between .Ltmp695 and .Lfunc_end33
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end17:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase10:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v,"axG",@progbits,_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v,comdat
	.hidden	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v # -- Begin function _ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
	.weak	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
	.p2align	4, 0x90
	.type	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v,@function
_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v: # @_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
.Lfunc_begin18:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception18
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$32, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	(%rsi), %rax
	cmpq	$2, (%rax)
	jl	.LBB34_10
# %bb.1:
	leaq	16(%rsp), %r14
	movq	%r14, (%rsp)
	movq	$0, 8(%rsp)
	movb	$0, 16(%rsp)
.Ltmp697:
	movq	%rsp, %rdi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp698:
# %bb.2:                                # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i
	leaq	16(%rbx), %rdi
	movq	%rdi, (%rbx)
	movq	(%rsp), %rax
	cmpq	%r14, %rax
	je	.LBB34_3
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	%rax, (%rbx)
	movq	16(%rsp), %rax
	movq	%rax, 16(%rbx)
	movq	8(%rsp), %r15
	jmp	.LBB34_8
.LBB34_10:
	movq	%rbx, %rdi
	callq	_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE
	jmp	.LBB34_9
.LBB34_3:
	movq	8(%rsp), %r15
	leaq	1(%r15), %rdx
	movq	%r14, %rsi
	callq	memcpy@PLT
.LBB34_8:                               # %_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEETnNSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuentsr6detail22is_same_ignoring_cvrefIS8_P7_objectEE5valueEiE4typeELi0EEES8_RKNS_6handleE.exit
	movq	%r15, 8(%rbx)
.LBB34_9:                               # %_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEETnNSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuentsr6detail22is_same_ignoring_cvrefIS8_P7_objectEE5valueEiE4typeELi0EEES8_RKNS_6handleE.exit
	movq	%rbx, %rax
	addq	$32, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB34_4:
	.cfi_def_cfa_offset 64
.Ltmp699:
	movq	%rax, %rbx
	movq	(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB34_6
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB34_6:                               # %_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EED2Ev.exit7.i
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end34:
	.size	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v, .Lfunc_end34-_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
	.cfi_endproc
	.section	.gcc_except_table._ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v,"aG",@progbits,_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v,comdat
	.p2align	2, 0x0
GCC_except_table34:
.Lexception18:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end18-.Lcst_begin18
.Lcst_begin18:
	.uleb128 .Ltmp697-.Lfunc_begin18        # >> Call Site 1 <<
	.uleb128 .Ltmp698-.Ltmp697              #   Call between .Ltmp697 and .Ltmp698
	.uleb128 .Ltmp699-.Lfunc_begin18        #     jumps to .Ltmp699
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp698-.Lfunc_begin18        # >> Call Site 2 <<
	.uleb128 .Lfunc_end34-.Ltmp698          #   Call between .Ltmp698 and .Lfunc_end34
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end18:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZN8pybind11L7type_idINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES6_v
	.type	_ZN8pybind11L7type_idINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES6_v,@function
_ZN8pybind11L7type_idINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES6_v: # @_ZN8pybind11L7type_idINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES6_v
.Lfunc_begin19:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception19
# %bb.0:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r15
	movl	$53, %edi
	callq	_Znwm@PLT
	movq	%rax, (%rbx)
	movq	$52, 16(%rbx)
	movq	_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GOTPCREL(%rip), %rcx
	movups	(%rcx), %xmm0
	movups	16(%rcx), %xmm1
	movups	32(%rcx), %xmm2
	movups	%xmm0, (%rax)
	movups	%xmm1, 16(%rax)
	movups	%xmm2, 32(%rax)
	movl	$1162167651, 48(%rax)           # imm = 0x45454563
	movq	$52, 8(%rbx)
	movb	$0, 52(%rax)
.Ltmp700:
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp701:
# %bb.1:                                # %_ZN8pybind116detail13clean_type_idB5cxx11EPKc.exit
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB35_2:
	.cfi_def_cfa_offset 32
.Ltmp702:
	movq	%rax, %r14
	movq	(%rbx), %rdi
	cmpq	%r15, %rdi
	je	.LBB35_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	movq	(%r15), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB35_4:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end35:
	.size	_ZN8pybind11L7type_idINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES6_v, .Lfunc_end35-_ZN8pybind11L7type_idINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES6_v
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table35:
.Lexception19:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end19-.Lcst_begin19
.Lcst_begin19:
	.uleb128 .Lfunc_begin19-.Lfunc_begin19  # >> Call Site 1 <<
	.uleb128 .Ltmp700-.Lfunc_begin19        #   Call between .Lfunc_begin19 and .Ltmp700
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp700-.Lfunc_begin19        # >> Call Site 2 <<
	.uleb128 .Ltmp701-.Ltmp700              #   Call between .Ltmp700 and .Ltmp701
	.uleb128 .Ltmp702-.Lfunc_begin19        #     jumps to .Ltmp702
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp701-.Lfunc_begin19        # >> Call Site 3 <<
	.uleb128 .Lfunc_end35-.Ltmp701          #   Call between .Ltmp701 and .Lfunc_end35
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end19:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE,"axG",@progbits,_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE,comdat
	.hidden	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE # -- Begin function _ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE
	.weak	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE,@function
_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE: # @_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$32, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r15
	movq	%rdi, %rbx
	movq	8(%rsi), %rdi
	testb	$8, 171(%rdi)
	jne	.LBB36_11
# %bb.1:
	cmpq	PyByteArray_Type@GOTPCREL(%rip), %rdi
	je	.LBB36_3
# %bb.2:                                # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit
	movq	PyByteArray_Type@GOTPCREL(%rip), %rsi
	callq	PyType_IsSubtype@PLT
	testl	%eax, %eax
	je	.LBB36_33
.LBB36_3:                               # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.thread
	movq	%r15, %rdi
	callq	PyByteArray_AsString@PLT
	testq	%rax, %rax
	je	.LBB36_43
# %bb.4:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	PyByteArray_Size@PLT
	movq	%rax, %r15
	leaq	16(%rsp), %r13
	movq	%r13, (%rsp)
	movq	%r13, %r12
	cmpq	$16, %rax
	jb	.LBB36_8
# %bb.5:
	testq	%r15, %r15
	js	.LBB36_42
# %bb.6:
	movq	%r15, %rdi
	incq	%rdi
	js	.LBB36_40
# %bb.7:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i23
	callq	_Znwm@PLT
	movq	%rax, %r12
	movq	%rax, (%rsp)
	movq	%r15, 16(%rsp)
.LBB36_8:                               # %._crit_edge.i.i22
	testq	%r15, %r15
	je	.LBB36_20
# %bb.9:                                # %._crit_edge.i.i22
	cmpq	$1, %r15
	je	.LBB36_10
.LBB36_19:
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
	jmp	.LBB36_20
.LBB36_11:
	movq	%r15, %rdi
	callq	PyBytes_AsString@PLT
	testq	%rax, %rax
	je	.LBB36_41
# %bb.12:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	PyBytes_Size@PLT
	movq	%rax, %r15
	leaq	16(%rsp), %r13
	movq	%r13, (%rsp)
	movq	%r13, %r12
	cmpq	$16, %rax
	jb	.LBB36_16
# %bb.13:
	testq	%r15, %r15
	js	.LBB36_42
# %bb.14:
	movq	%r15, %rdi
	incq	%rdi
	js	.LBB36_40
# %bb.15:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
	callq	_Znwm@PLT
	movq	%rax, %r12
	movq	%rax, (%rsp)
	movq	%r15, 16(%rsp)
.LBB36_16:                              # %._crit_edge.i.i
	testq	%r15, %r15
	je	.LBB36_20
# %bb.17:                               # %._crit_edge.i.i
	cmpq	$1, %r15
	jne	.LBB36_19
.LBB36_10:
	movzbl	(%r14), %eax
	movb	%al, (%r12)
.LBB36_20:
	movq	%r15, 8(%rsp)
	movb	$0, (%r12,%r15)
	movq	(%rbx), %rdi
	leaq	16(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB36_24
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	movq	(%rsp), %rsi
	cmpq	%r13, %rsi
	je	.LBB36_25
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	movq	16(%rbx), %rax
	movq	%rsi, (%rbx)
	movups	8(%rsp), %xmm0
	movups	%xmm0, 8(%rbx)
	testq	%rdi, %rdi
	je	.LBB36_29
# %bb.23:
	movq	%rdi, (%rsp)
	movq	%rax, 16(%rsp)
	jmp	.LBB36_36
.LBB36_24:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	(%rsp), %rsi
	cmpq	%r13, %rsi
	je	.LBB36_25
# %bb.28:                               # %.thread.i
	movq	%rsi, (%rbx)
	movups	8(%rsp), %xmm0
	movups	%xmm0, 8(%rbx)
.LBB36_29:
	movq	%r13, (%rsp)
	movq	%r13, %rdi
	jmp	.LBB36_36
.LBB36_25:
	movq	%rsp, %rax
	cmpq	%rbx, %rax
	je	.LBB36_26
# %bb.30:
	movq	8(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB36_35
# %bb.31:
	cmpq	$1, %rdx
	jne	.LBB36_34
# %bb.32:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB36_35
.LBB36_33:
	xorl	%eax, %eax
	jmp	.LBB36_39
.LBB36_34:
	callq	memcpy@PLT
.LBB36_35:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	movq	8(%rsp), %rax
	movq	%rax, 8(%rbx)
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%rsp), %rdi
.LBB36_36:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit39
	movq	$0, 8(%rsp)
	movb	$0, (%rdi)
	movq	(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB36_38
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i40
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB36_38:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit42
	movb	$1, %al
.LBB36_39:
                                        # kill: def $al killed $al killed $eax
	addq	$32, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB36_40:                              # %.noexc9.i
	.cfi_def_cfa_offset 80
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB36_26:
	movq	%rsi, %rdi
	jmp	.LBB36_36
.LBB36_41:
	leaq	.L.str.45(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.LBB36_42:                              # %.noexc.i
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB36_43:
	leaq	.L.str.46(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Lfunc_end36:
	.size	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE, .Lfunc_end36-_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind1117error_already_setC2Ev,"axG",@progbits,_ZN8pybind1117error_already_setC2Ev,comdat
	.hidden	_ZN8pybind1117error_already_setC2Ev # -- Begin function _ZN8pybind1117error_already_setC2Ev
	.weak	_ZN8pybind1117error_already_setC2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind1117error_already_setC2Ev,@function
_ZN8pybind1117error_already_setC2Ev:    # @_ZN8pybind1117error_already_setC2Ev
.Lfunc_begin20:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception20
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	_ZTVN8pybind1117error_already_setE+16(%rip), %rax
	movq	%rax, (%rdi)
.Ltmp703:
	movl	$64, %edi
	callq	_Znwm@PLT
.Ltmp704:
# %bb.1:
.Ltmp706:
	movq	%rax, %r14
	leaq	.L.str.47(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc
.Ltmp707:
# %bb.2:
	movq	%r14, 8(%rbx)
	movq	$0, 16(%rbx)
.Ltmp709:
	movl	$32, %edi
	callq	_Znwm@PLT
.Ltmp710:
# %bb.3:
	movabsq	$4294967297, %rcx               # imm = 0x100000001
	movq	%rcx, 8(%rax)
	leaq	_ZTVSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE+16(%rip), %rcx
	movq	%rcx, (%rax)
	leaq	_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE(%rip), %rcx
	movq	%rcx, 16(%rax)
	movq	%r14, 24(%rax)
	movq	%rax, 16(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB37_4:
	.cfi_def_cfa_offset 32
.Ltmp711:
	movq	%rax, %rdi
	callq	__cxa_begin_catch@PLT
.Ltmp712:
	movq	%r14, %rdi
	callq	_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE
.Ltmp713:
# %bb.5:
.Ltmp714:
	callq	__cxa_rethrow@PLT
.Ltmp715:
# %bb.8:
.LBB37_6:
.Ltmp716:
	movq	%rax, %r15
.Ltmp717:
	callq	__cxa_end_catch@PLT
.Ltmp718:
	jmp	.LBB37_11
.LBB37_7:
.Ltmp719:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB37_10:
.Ltmp708:
	movq	%rax, %r15
	movl	$64, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%rbx, %rdi
	callq	_ZNSt9exceptionD2Ev@PLT
	movq	%r15, %rdi
	callq	_Unwind_Resume@PLT
.LBB37_9:
.Ltmp705:
	movq	%rax, %r15
.LBB37_11:                              # %.body
	movq	%rbx, %rdi
	callq	_ZNSt9exceptionD2Ev@PLT
	movq	%r15, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end37:
	.size	_ZN8pybind1117error_already_setC2Ev, .Lfunc_end37-_ZN8pybind1117error_already_setC2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1117error_already_setC2Ev,"aG",@progbits,_ZN8pybind1117error_already_setC2Ev,comdat
	.p2align	2, 0x0
GCC_except_table37:
.Lexception20:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase11-.Lttbaseref11
.Lttbaseref11:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end20-.Lcst_begin20
.Lcst_begin20:
	.uleb128 .Ltmp703-.Lfunc_begin20        # >> Call Site 1 <<
	.uleb128 .Ltmp704-.Ltmp703              #   Call between .Ltmp703 and .Ltmp704
	.uleb128 .Ltmp705-.Lfunc_begin20        #     jumps to .Ltmp705
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp706-.Lfunc_begin20        # >> Call Site 2 <<
	.uleb128 .Ltmp707-.Ltmp706              #   Call between .Ltmp706 and .Ltmp707
	.uleb128 .Ltmp708-.Lfunc_begin20        #     jumps to .Ltmp708
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp709-.Lfunc_begin20        # >> Call Site 3 <<
	.uleb128 .Ltmp710-.Ltmp709              #   Call between .Ltmp709 and .Ltmp710
	.uleb128 .Ltmp711-.Lfunc_begin20        #     jumps to .Ltmp711
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp710-.Lfunc_begin20        # >> Call Site 4 <<
	.uleb128 .Ltmp712-.Ltmp710              #   Call between .Ltmp710 and .Ltmp712
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp712-.Lfunc_begin20        # >> Call Site 5 <<
	.uleb128 .Ltmp715-.Ltmp712              #   Call between .Ltmp712 and .Ltmp715
	.uleb128 .Ltmp716-.Lfunc_begin20        #     jumps to .Ltmp716
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp717-.Lfunc_begin20        # >> Call Site 6 <<
	.uleb128 .Ltmp718-.Ltmp717              #   Call between .Ltmp717 and .Ltmp718
	.uleb128 .Ltmp719-.Lfunc_begin20        #     jumps to .Ltmp719
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp718-.Lfunc_begin20        # >> Call Site 7 <<
	.uleb128 .Lfunc_end37-.Ltmp718          #   Call between .Ltmp718 and .Lfunc_end37
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end20:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase11:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE,"axG",@progbits,_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE,comdat
	.hidden	_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE # -- Begin function _ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE
	.weak	_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE
	.p2align	4, 0x90
	.type	_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE,@function
_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE: # @_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE
.Lfunc_begin21:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception21
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$48, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind1118gil_scoped_acquireC2Ev
	leaq	16(%rsp), %rsi
	leaq	24(%rsp), %rdx
.Ltmp720:
	leaq	8(%rsp), %rdi
	callq	PyErr_Fetch@PLT
.Ltmp721:
# %bb.1:                                # %_ZN8pybind1111error_scopeC2Ev.exit
	testq	%rbx, %rbx
	je	.LBB38_8
# %bb.2:
	movq	24(%rbx), %rdi
	leaq	40(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB38_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	movq	(%rax), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB38_4:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	leaq	16(%rbx), %rdi
.Ltmp723:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp724:
# %bb.5:                                # %_ZN8pybind116objectD2Ev.exit.i
	leaq	8(%rbx), %rdi
.Ltmp726:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp727:
# %bb.6:                                # %_ZN8pybind116objectD2Ev.exit1.i
.Ltmp729:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp730:
# %bb.7:                                # %_ZN8pybind116detail25error_fetch_and_normalizeD2Ev.exit
	movl	$64, %esi
	movq	%rbx, %rdi
	callq	_ZdlPvm@PLT
.LBB38_8:
	movq	8(%rsp), %rdi
	movq	16(%rsp), %rsi
	movq	24(%rsp), %rdx
.Ltmp732:
	callq	PyErr_Restore@PLT
.Ltmp733:
# %bb.9:                                # %_ZN8pybind1111error_scopeD2Ev.exit
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind1118gil_scoped_acquireD2Ev
	addq	$48, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB38_13:
	.cfi_def_cfa_offset 64
.Ltmp731:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB38_12:
.Ltmp728:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB38_11:
.Ltmp725:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB38_14:
.Ltmp734:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB38_10:
.Ltmp722:
	movq	%rax, %rbx
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind1118gil_scoped_acquireD2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end38:
	.size	_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE, .Lfunc_end38-_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE,"aG",@progbits,_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE,comdat
	.p2align	2, 0x0
GCC_except_table38:
.Lexception21:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase12-.Lttbaseref12
.Lttbaseref12:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end21-.Lcst_begin21
.Lcst_begin21:
	.uleb128 .Lfunc_begin21-.Lfunc_begin21  # >> Call Site 1 <<
	.uleb128 .Ltmp720-.Lfunc_begin21        #   Call between .Lfunc_begin21 and .Ltmp720
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp720-.Lfunc_begin21        # >> Call Site 2 <<
	.uleb128 .Ltmp721-.Ltmp720              #   Call between .Ltmp720 and .Ltmp721
	.uleb128 .Ltmp722-.Lfunc_begin21        #     jumps to .Ltmp722
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp723-.Lfunc_begin21        # >> Call Site 3 <<
	.uleb128 .Ltmp724-.Ltmp723              #   Call between .Ltmp723 and .Ltmp724
	.uleb128 .Ltmp725-.Lfunc_begin21        #     jumps to .Ltmp725
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp726-.Lfunc_begin21        # >> Call Site 4 <<
	.uleb128 .Ltmp727-.Ltmp726              #   Call between .Ltmp726 and .Ltmp727
	.uleb128 .Ltmp728-.Lfunc_begin21        #     jumps to .Ltmp728
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp729-.Lfunc_begin21        # >> Call Site 5 <<
	.uleb128 .Ltmp730-.Ltmp729              #   Call between .Ltmp729 and .Ltmp730
	.uleb128 .Ltmp731-.Lfunc_begin21        #     jumps to .Ltmp731
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp732-.Lfunc_begin21        # >> Call Site 6 <<
	.uleb128 .Ltmp733-.Ltmp732              #   Call between .Ltmp732 and .Ltmp733
	.uleb128 .Ltmp734-.Lfunc_begin21        #     jumps to .Ltmp734
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp733-.Lfunc_begin21        # >> Call Site 7 <<
	.uleb128 .Lfunc_end38-.Ltmp733          #   Call between .Ltmp733 and .Lfunc_end38
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end21:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase12:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.weak	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:
	retq
.Lfunc_end39:
	.size	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end39-_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev,"axG",@progbits,_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev,comdat
	.hidden	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev # -- Begin function _ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.weak	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.p2align	4, 0x90
	.type	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev,@function
_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev: # @_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_startproc
# %bb.0:
	movl	$32, %esi
	jmp	_ZdlPvm@PLT                     # TAILCALL
.Lfunc_end40:
	.size	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev, .Lfunc_end40-_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,"axG",@progbits,_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,comdat
	.hidden	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv # -- Begin function _ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.weak	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.p2align	4, 0x90
	.type	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,@function
_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv: # @_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
.Lfunc_begin22:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception22
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	movq	%rdi, %rax
	movq	24(%rdi), %rdi
.Ltmp735:
	callq	*16(%rax)
.Ltmp736:
# %bb.1:
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.LBB41_2:
	.cfi_def_cfa_offset 16
.Ltmp737:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end41:
	.size	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv, .Lfunc_end41-_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,"aG",@progbits,_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,comdat
	.p2align	2, 0x0
GCC_except_table41:
.Lexception22:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase13-.Lttbaseref13
.Lttbaseref13:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end22-.Lcst_begin22
.Lcst_begin22:
	.uleb128 .Ltmp735-.Lfunc_begin22        # >> Call Site 1 <<
	.uleb128 .Ltmp736-.Ltmp735              #   Call between .Ltmp735 and .Ltmp736
	.uleb128 .Ltmp737-.Lfunc_begin22        #     jumps to .Ltmp737
	.byte	1                               #   On action: 1
.Lcst_end22:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase13:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,"axG",@progbits,_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,comdat
	.hidden	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv # -- Begin function _ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.weak	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.p2align	4, 0x90
	.type	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,@function
_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv: # @_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_startproc
# %bb.0:                                # %_ZNSt15__allocated_ptrISaISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS4_ESaIvELN9__gnu_cxx12_Lock_policyE2EEEED2Ev.exit
	movl	$32, %esi
	jmp	_ZdlPvm@PLT                     # TAILCALL
.Lfunc_end42:
	.size	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv, .Lfunc_end42-_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,"axG",@progbits,_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,comdat
	.hidden	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info # -- Begin function _ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.weak	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.p2align	4, 0x90
	.type	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,@function
_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info: # @_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_startproc
# %bb.0:
	movq	%rdi, %rax
	movq	8(%rsi), %rdi
	leaq	_ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE(%rip), %rcx
	cmpq	%rcx, %rdi
	je	.LBB43_5
# %bb.1:
	cmpb	$42, (%rdi)
	jne	.LBB43_3
# %bb.2:
	xorl	%eax, %eax
	retq
.LBB43_3:                               # %_ZNKSt9type_infoeqERKS_.exit
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	leaq	_ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE(%rip), %rsi
	movq	%rax, %rbx
	callq	strcmp@PLT
	movl	%eax, %ecx
	movq	%rbx, %rax
	testl	%ecx, %ecx
	popq	%rbx
	.cfi_def_cfa_offset 8
	.cfi_restore %rbx
	je	.LBB43_5
# %bb.4:
	xorl	%eax, %eax
	retq
.LBB43_5:                               # %_ZNKSt9type_infoeqERKS_.exit.thread
	addq	$16, %rax
	retq
.Lfunc_end43:
	.size	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info, .Lfunc_end43-_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE,"axG",@progbits,_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE,comdat
	.hidden	_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE # -- Begin function _ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE
	.weak	_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE
	.p2align	4, 0x90
	.type	_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE,@function
_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE: # @_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE
.Lfunc_begin23:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception23
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$32, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	(%rsi), %rax
	cmpq	$2, (%rax)
	jl	.LBB44_10
# %bb.1:
	leaq	16(%rsp), %r14
	movq	%r14, (%rsp)
	movq	$0, 8(%rsp)
	movb	$0, 16(%rsp)
.Ltmp738:
	movq	%rsp, %rdi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp739:
# %bb.2:                                # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i
	leaq	16(%rbx), %rdi
	movq	%rdi, (%rbx)
	movq	(%rsp), %rax
	cmpq	%r14, %rax
	je	.LBB44_3
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	%rax, (%rbx)
	movq	16(%rsp), %rax
	movq	%rax, 16(%rbx)
	movq	8(%rsp), %r15
	jmp	.LBB44_8
.LBB44_10:
	movq	%rbx, %rdi
	callq	_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE
	jmp	.LBB44_9
.LBB44_3:
	movq	8(%rsp), %r15
	leaq	1(%r15), %rdx
	movq	%r14, %rsi
	callq	memcpy@PLT
.LBB44_8:                               # %_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEETnNSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuentsr6detail22is_same_ignoring_cvrefIS8_P7_objectEE5valueEiE4typeELi0EEES8_RKNS_6handleE.exit
	movq	%r15, 8(%rbx)
.LBB44_9:                               # %_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEETnNSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuentsr6detail22is_same_ignoring_cvrefIS8_P7_objectEE5valueEiE4typeELi0EEES8_RKNS_6handleE.exit
	movq	%rbx, %rax
	addq	$32, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB44_4:
	.cfi_def_cfa_offset 64
.Ltmp740:
	movq	%rax, %rbx
	movq	(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB44_6
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB44_6:                               # %_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EED2Ev.exit
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end44:
	.size	_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE, .Lfunc_end44-_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE,"aG",@progbits,_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE,comdat
	.p2align	2, 0x0
GCC_except_table44:
.Lexception23:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end23-.Lcst_begin23
.Lcst_begin23:
	.uleb128 .Ltmp738-.Lfunc_begin23        # >> Call Site 1 <<
	.uleb128 .Ltmp739-.Ltmp738              #   Call between .Ltmp738 and .Ltmp739
	.uleb128 .Ltmp740-.Lfunc_begin23        #     jumps to .Ltmp740
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp739-.Lfunc_begin23        # >> Call Site 2 <<
	.uleb128 .Lfunc_end44-.Ltmp739          #   Call between .Ltmp739 and .Lfunc_end44
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end23:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE,"axG",@progbits,_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE,comdat
	.hidden	_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE # -- Begin function _ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE
	.weak	_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE
	.p2align	4, 0x90
	.type	_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE,@function
_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE: # @_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE
.Lfunc_begin24:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception24
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$200, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	(%rsi), %rax
	cmpq	$2, (%rax)
	jge	.LBB45_1
# %bb.36:
	movq	%rdi, %rbx
	leaq	24(%rsp), %r15
	movq	%r15, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp741:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp742:
# %bb.37:                               # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit
	leaq	16(%rbx), %rdi
	movq	%rdi, (%rbx)
	movq	8(%rsp), %rax
	cmpq	%r15, %rax
	je	.LBB45_38
# %bb.39:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	%rax, (%rbx)
	movq	24(%rsp), %rax
	movq	%rax, 16(%rbx)
	movq	16(%rsp), %r14
	jmp	.LBB45_40
.LBB45_38:
	movq	16(%rsp), %r14
	leaq	1(%r14), %rdx
	movq	%r15, %rsi
	callq	memcpy@PLT
.LBB45_40:                              # %_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EED2Ev.exit
	movq	%r14, 8(%rbx)
	movq	%rbx, %rax
	addq	$200, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB45_1:
	.cfi_def_cfa_offset 240
	movl	$16, %edi
	movq	%rsi, %r14
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
	movq	(%r14), %rax
	movq	8(%rax), %rsi
.Ltmp744:
	movq	%rsp, %rdi
	callq	_ZN8pybind113strC2ENS_6handleE
.Ltmp745:
# %bb.2:
.Ltmp747:
	leaq	72(%rsp), %rdi
	movq	%rsp, %rsi
	callq	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
.Ltmp748:
# %bb.3:
.Ltmp753:
	leaq	.L.str.48(%rip), %rsi
	leaq	104(%rsp), %rdi
	leaq	72(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp754:
# %bb.4:
.Ltmp756:
	leaq	.L.str.49(%rip), %rdx
	leaq	136(%rsp), %rdi
	leaq	104(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp757:
# %bb.5:
.Ltmp759:
	leaq	40(%rsp), %rdi
	callq	_ZN8pybind11L7type_idINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES6_v
.Ltmp760:
# %bb.6:
.Ltmp762:
	leaq	168(%rsp), %rdi
	leaq	136(%rsp), %rsi
	leaq	40(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp763:
# %bb.7:
.Ltmp765:
	leaq	.L.str.50(%rip), %rdx
	leaq	8(%rsp), %rdi
	leaq	168(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp766:
# %bb.8:
	movb	$1, %bpl
.Ltmp768:
	leaq	8(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp769:
# %bb.9:
	leaq	_ZTVN8pybind1110cast_errorE+16(%rip), %rax
	movq	%rax, (%rbx)
	xorl	%ebp, %ebp
.Ltmp770:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp771:
# %bb.41:
.LBB45_18:
.Ltmp772:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB45_19
# %bb.20:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB45_21
.LBB45_22:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB45_23
.LBB45_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit41
	movq	136(%rsp), %rdi
	leaq	152(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB45_25
.LBB45_26:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit44
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB45_27
.LBB45_28:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB45_30
.LBB45_29:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i48
	movq	88(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB45_30:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit50
.Ltmp773:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp774:
# %bb.31:                               # %_ZN8pybind116objectD2Ev.exit51
	testb	%bpl, %bpl
	jne	.LBB45_32
	jmp	.LBB45_35
.LBB45_19:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB45_22
	jmp	.LBB45_21
.LBB45_17:
.Ltmp767:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB45_22
.LBB45_21:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i36
	movq	184(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB45_24
	jmp	.LBB45_23
.LBB45_16:
.Ltmp764:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB45_24
.LBB45_23:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i39
	movq	56(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	136(%rsp), %rdi
	leaq	152(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB45_26
	jmp	.LBB45_25
.LBB45_15:
.Ltmp761:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	136(%rsp), %rdi
	leaq	152(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB45_26
.LBB45_25:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i42
	movq	152(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB45_28
	jmp	.LBB45_27
.LBB45_14:
.Ltmp758:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB45_28
.LBB45_27:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i45
	movq	120(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB45_29
	jmp	.LBB45_30
.LBB45_42:
.Ltmp775:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB45_13:
.Ltmp755:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB45_29
	jmp	.LBB45_30
.LBB45_12:                              # %.thread32
.Ltmp749:
	movq	%rax, %r14
.Ltmp750:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp751:
	jmp	.LBB45_32
.LBB45_11:
.Ltmp752:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB45_10:                              # %.thread
.Ltmp746:
	movq	%rax, %r14
.LBB45_32:
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB45_33:
.Ltmp743:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB45_35
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB45_35:                              # %common.resume
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end45:
	.size	_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE, .Lfunc_end45-_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE,"aG",@progbits,_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE,comdat
	.p2align	2, 0x0
GCC_except_table45:
.Lexception24:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase14-.Lttbaseref14
.Lttbaseref14:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end24-.Lcst_begin24
.Lcst_begin24:
	.uleb128 .Ltmp741-.Lfunc_begin24        # >> Call Site 1 <<
	.uleb128 .Ltmp742-.Ltmp741              #   Call between .Ltmp741 and .Ltmp742
	.uleb128 .Ltmp743-.Lfunc_begin24        #     jumps to .Ltmp743
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp742-.Lfunc_begin24        # >> Call Site 2 <<
	.uleb128 .Ltmp744-.Ltmp742              #   Call between .Ltmp742 and .Ltmp744
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp744-.Lfunc_begin24        # >> Call Site 3 <<
	.uleb128 .Ltmp745-.Ltmp744              #   Call between .Ltmp744 and .Ltmp745
	.uleb128 .Ltmp746-.Lfunc_begin24        #     jumps to .Ltmp746
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp747-.Lfunc_begin24        # >> Call Site 4 <<
	.uleb128 .Ltmp748-.Ltmp747              #   Call between .Ltmp747 and .Ltmp748
	.uleb128 .Ltmp749-.Lfunc_begin24        #     jumps to .Ltmp749
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp753-.Lfunc_begin24        # >> Call Site 5 <<
	.uleb128 .Ltmp754-.Ltmp753              #   Call between .Ltmp753 and .Ltmp754
	.uleb128 .Ltmp755-.Lfunc_begin24        #     jumps to .Ltmp755
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp756-.Lfunc_begin24        # >> Call Site 6 <<
	.uleb128 .Ltmp757-.Ltmp756              #   Call between .Ltmp756 and .Ltmp757
	.uleb128 .Ltmp758-.Lfunc_begin24        #     jumps to .Ltmp758
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp759-.Lfunc_begin24        # >> Call Site 7 <<
	.uleb128 .Ltmp760-.Ltmp759              #   Call between .Ltmp759 and .Ltmp760
	.uleb128 .Ltmp761-.Lfunc_begin24        #     jumps to .Ltmp761
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp762-.Lfunc_begin24        # >> Call Site 8 <<
	.uleb128 .Ltmp763-.Ltmp762              #   Call between .Ltmp762 and .Ltmp763
	.uleb128 .Ltmp764-.Lfunc_begin24        #     jumps to .Ltmp764
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp765-.Lfunc_begin24        # >> Call Site 9 <<
	.uleb128 .Ltmp766-.Ltmp765              #   Call between .Ltmp765 and .Ltmp766
	.uleb128 .Ltmp767-.Lfunc_begin24        #     jumps to .Ltmp767
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp768-.Lfunc_begin24        # >> Call Site 10 <<
	.uleb128 .Ltmp771-.Ltmp768              #   Call between .Ltmp768 and .Ltmp771
	.uleb128 .Ltmp772-.Lfunc_begin24        #     jumps to .Ltmp772
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp773-.Lfunc_begin24        # >> Call Site 11 <<
	.uleb128 .Ltmp774-.Ltmp773              #   Call between .Ltmp773 and .Ltmp774
	.uleb128 .Ltmp775-.Lfunc_begin24        #     jumps to .Ltmp775
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp750-.Lfunc_begin24        # >> Call Site 12 <<
	.uleb128 .Ltmp751-.Ltmp750              #   Call between .Ltmp750 and .Ltmp751
	.uleb128 .Ltmp752-.Lfunc_begin24        #     jumps to .Ltmp752
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp751-.Lfunc_begin24        # >> Call Site 13 <<
	.uleb128 .Lfunc_end45-.Ltmp751          #   Call between .Ltmp751 and .Lfunc_end45
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end24:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase14:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail13clean_type_idB5cxx11EPKc,"axG",@progbits,_ZN8pybind116detail13clean_type_idB5cxx11EPKc,comdat
	.hidden	_ZN8pybind116detail13clean_type_idB5cxx11EPKc # -- Begin function _ZN8pybind116detail13clean_type_idB5cxx11EPKc
	.weak	_ZN8pybind116detail13clean_type_idB5cxx11EPKc
	.p2align	4, 0x90
	.type	_ZN8pybind116detail13clean_type_idB5cxx11EPKc,@function
_ZN8pybind116detail13clean_type_idB5cxx11EPKc: # @_ZN8pybind116detail13clean_type_idB5cxx11EPKc
.Lfunc_begin25:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception25
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	leaq	16(%rdi), %r13
	movq	%r13, (%rdi)
	testq	%rsi, %rsi
	je	.LBB46_14
# %bb.1:
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	strlen@PLT
	movq	%rax, %r15
	movq	%r13, %r12
	cmpq	$16, %rax
	jb	.LBB46_5
# %bb.2:
	testq	%r15, %r15
	js	.LBB46_15
# %bb.3:
	movq	%r15, %rdi
	incq	%rdi
	js	.LBB46_16
# %bb.4:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
	callq	_Znwm@PLT
	movq	%rax, %r12
	movq	%rax, (%rbx)
	movq	%r15, 16(%rbx)
.LBB46_5:                               # %._crit_edge.i.i
	testq	%r15, %r15
	je	.LBB46_9
# %bb.6:                                # %._crit_edge.i.i
	cmpq	$1, %r15
	jne	.LBB46_8
# %bb.7:
	movzbl	(%r14), %eax
	movb	%al, (%r12)
	jmp	.LBB46_9
.LBB46_8:
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB46_9:
	movq	%r15, 8(%rbx)
	movb	$0, (%r12,%r15)
.Ltmp776:
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp777:
# %bb.10:
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB46_16:                              # %.noexc11.i
	.cfi_def_cfa_offset 48
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB46_14:                              # %.noexc
	leaq	.L.str.35(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.LBB46_15:                              # %.noexc.i
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB46_11:
.Ltmp778:
	movq	%rax, %r14
	movq	(%rbx), %rdi
	cmpq	%r13, %rdi
	je	.LBB46_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	(%r13), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB46_13:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end46:
	.size	_ZN8pybind116detail13clean_type_idB5cxx11EPKc, .Lfunc_end46-_ZN8pybind116detail13clean_type_idB5cxx11EPKc
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail13clean_type_idB5cxx11EPKc,"aG",@progbits,_ZN8pybind116detail13clean_type_idB5cxx11EPKc,comdat
	.p2align	2, 0x0
GCC_except_table46:
.Lexception25:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end25-.Lcst_begin25
.Lcst_begin25:
	.uleb128 .Lfunc_begin25-.Lfunc_begin25  # >> Call Site 1 <<
	.uleb128 .Ltmp776-.Lfunc_begin25        #   Call between .Lfunc_begin25 and .Ltmp776
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp776-.Lfunc_begin25        # >> Call Site 2 <<
	.uleb128 .Ltmp777-.Ltmp776              #   Call between .Ltmp776 and .Ltmp777
	.uleb128 .Ltmp778-.Lfunc_begin25        #     jumps to .Ltmp778
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp777-.Lfunc_begin25        # >> Call Site 3 <<
	.uleb128 .Lfunc_end46-.Ltmp777          #   Call between .Ltmp777 and .Lfunc_end46
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end25:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin26:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception26
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$48, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	movl	$0, 12(%rsp)
	movq	(%rdi), %rdi
	leaq	12(%rsp), %rcx
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	__cxa_demangle@PLT
	movq	%rax, %rbx
	cmpl	$0, 12(%rsp)
	jne	.LBB47_2
# %bb.1:
	movq	8(%r14), %r15
	movq	%rbx, %rdi
	callq	strlen@PLT
.Ltmp779:
	movq	%r14, %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	movq	%rbx, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.Ltmp780:
.LBB47_2:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit
	leaq	32(%rsp), %r15
	movq	%r15, 16(%rsp)
	movabsq	$3544724807094532464, %rax      # imm = 0x3131646E69627970
	movq	%rax, 32(%rsp)
	movw	$14906, 40(%rsp)                # imm = 0x3A3A
	movq	$10, 24(%rsp)
	movb	$0, 42(%rsp)
.Ltmp782:
	leaq	16(%rsp), %rsi
	movq	%r14, %rdi
	callq	_ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_
.Ltmp783:
# %bb.3:
	movq	16(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB47_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB47_5:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	testq	%rbx, %rbx
	je	.LBB47_7
# %bb.6:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB47_7:                               # %_ZNSt10unique_ptrIcPFvPvEED2Ev.exit
	addq	$48, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB47_13:
	.cfi_def_cfa_offset 80
.Ltmp781:
	movq	%rax, %r14
	testq	%rbx, %rbx
	je	.LBB47_12
	jmp	.LBB47_11
.LBB47_8:
.Ltmp784:
	movq	%rax, %r14
	movq	16(%rsp), %rdi
	cmpq	%r15, %rdi
	jne	.LBB47_9
# %bb.10:
	testq	%rbx, %rbx
	jne	.LBB47_11
.LBB47_12:                              # %_ZNSt10unique_ptrIcPFvPvEED2Ev.exit14
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB47_9:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i10
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	testq	%rbx, %rbx
	je	.LBB47_12
.LBB47_11:
	movq	%rbx, %rdi
	callq	free@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end47:
	.size	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end47-_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table47:
.Lexception26:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end26-.Lcst_begin26
.Lcst_begin26:
	.uleb128 .Lfunc_begin26-.Lfunc_begin26  # >> Call Site 1 <<
	.uleb128 .Ltmp779-.Lfunc_begin26        #   Call between .Lfunc_begin26 and .Ltmp779
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp779-.Lfunc_begin26        # >> Call Site 2 <<
	.uleb128 .Ltmp780-.Ltmp779              #   Call between .Ltmp779 and .Ltmp780
	.uleb128 .Ltmp781-.Lfunc_begin26        #     jumps to .Ltmp781
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp782-.Lfunc_begin26        # >> Call Site 3 <<
	.uleb128 .Ltmp783-.Ltmp782              #   Call between .Ltmp782 and .Ltmp783
	.uleb128 .Ltmp784-.Lfunc_begin26        #     jumps to .Ltmp784
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp783-.Lfunc_begin26        # >> Call Site 4 <<
	.uleb128 .Lfunc_end47-.Ltmp783          #   Call between .Ltmp783 and .Lfunc_end47
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end26:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_,"axG",@progbits,_ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_,comdat
	.hidden	_ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_ # -- Begin function _ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_
	.weak	_ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_
	.p2align	4, 0x90
	.type	_ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_,@function
_ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_: # @_ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, 8(%rsp)                   # 8-byte Spill
	xorl	%ebx, %ebx
	movq	%rdi, (%rsp)                    # 8-byte Spill
.LBB48_1:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm.exit
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB48_6 Depth 2
	movq	8(%rsp), %rax                   # 8-byte Reload
	movq	8(%rax), %r12
	movq	8(%rdi), %rdx
	movq	%rdx, %r15
	testq	%r12, %r12
	je	.LBB48_2
# %bb.3:                                #   in Loop: Header=BB48_1 Depth=1
	subq	%rbx, %rdx
	jbe	.LBB48_10
# %bb.4:                                #   in Loop: Header=BB48_1 Depth=1
	cmpq	%r12, %rdx
	jb	.LBB48_10
# %bb.5:                                # %.lr.ph.i.i
                                        #   in Loop: Header=BB48_1 Depth=1
	movq	8(%rsp), %rax                   # 8-byte Reload
	movq	(%rax), %rbp
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %rax
	leaq	(%rax,%r15), %r13
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	addq	%rax, %rbx
	movsbl	(%rbp), %r14d
	.p2align	4, 0x90
.LBB48_6:                               #   Parent Loop BB48_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	subq	%r12, %rdx
	incq	%rdx
	je	.LBB48_10
# %bb.7:                                # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i
                                        #   in Loop: Header=BB48_6 Depth=2
	movq	%rbx, %rdi
	movl	%r14d, %esi
	callq	memchr@PLT
	testq	%rax, %rax
	je	.LBB48_10
# %bb.8:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i
                                        #   in Loop: Header=BB48_6 Depth=2
	movq	%rax, %rbx
	movq	%rax, %rdi
	movq	%rbp, %rsi
	movq	%r12, %rdx
	callq	bcmp@PLT
	testl	%eax, %eax
	je	.LBB48_11
# %bb.9:                                #   in Loop: Header=BB48_6 Depth=2
	incq	%rbx
	movq	%r13, %rdx
	subq	%rbx, %rdx
	cmpq	%r12, %rdx
	jae	.LBB48_6
	jmp	.LBB48_10
	.p2align	4, 0x90
.LBB48_2:                               #   in Loop: Header=BB48_1 Depth=1
	cmpq	%rbx, %rdx
	jae	.LBB48_12
	jmp	.LBB48_10
.LBB48_11:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_m.exit
                                        #   in Loop: Header=BB48_1 Depth=1
	subq	16(%rsp), %rbx                  # 8-byte Folded Reload
	cmpq	$-1, %rbx
	je	.LBB48_10
.LBB48_12:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_m.exit.thread8
                                        #   in Loop: Header=BB48_1 Depth=1
	movq	%r15, %rax
	subq	%rbx, %rax
	jb	.LBB48_23
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i
                                        #   in Loop: Header=BB48_1 Depth=1
	movq	%rbx, %rcx
	cmpq	$-1, %r12
	movq	(%rsp), %rdi                    # 8-byte Reload
	je	.LBB48_22
# %bb.14:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i
                                        #   in Loop: Header=BB48_1 Depth=1
	testq	%r12, %r12
	je	.LBB48_1
# %bb.15:                               #   in Loop: Header=BB48_1 Depth=1
	cmpq	%r12, %rax
	cmovbq	%rax, %r12
	leaq	(%r12,%rbx), %rax
	cmpq	%rax, %r15
	sete	%cl
	testq	%r12, %r12
	sete	%dl
	orb	%cl, %dl
	jne	.LBB48_21
# %bb.16:                               #   in Loop: Header=BB48_1 Depth=1
	subq	%rax, %r15
	je	.LBB48_21
# %bb.17:                               #   in Loop: Header=BB48_1 Depth=1
	movq	%rdi, %r14
	movq	(%rdi), %rdi
	addq	%rbx, %rdi
	leaq	(%rdi,%r12), %rsi
	cmpq	$1, %r15
	jne	.LBB48_19
# %bb.18:                               #   in Loop: Header=BB48_1 Depth=1
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB48_20
.LBB48_19:                              #   in Loop: Header=BB48_1 Depth=1
	movq	%r15, %rdx
	callq	memmove@PLT
.LBB48_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm.exit.i
                                        #   in Loop: Header=BB48_1 Depth=1
	movq	%r14, %rdi
.LBB48_21:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm.exit.i
                                        #   in Loop: Header=BB48_1 Depth=1
	movq	8(%rdi), %rcx
	subq	%r12, %rcx
.LBB48_22:                              # %.sink.split.i
                                        #   in Loop: Header=BB48_1 Depth=1
	movq	%rcx, 8(%rdi)
	movq	(%rdi), %rax
	movb	$0, (%rax,%rcx)
	jmp	.LBB48_1
.LBB48_10:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_m.exit.thread
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB48_23:
	.cfi_def_cfa_offset 80
	leaq	.L.str.11(%rip), %rdi
	leaq	.L.str.52(%rip), %rsi
	movq	%rbx, %rdx
	movq	%r15, %rcx
	xorl	%eax, %eax
	callq	_ZSt24__throw_out_of_range_fmtPKcz@PLT
.Lfunc_end48:
	.size	_ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_, .Lfunc_end48-_ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind1110cast_errorD0Ev,"axG",@progbits,_ZN8pybind1110cast_errorD0Ev,comdat
	.hidden	_ZN8pybind1110cast_errorD0Ev    # -- Begin function _ZN8pybind1110cast_errorD0Ev
	.weak	_ZN8pybind1110cast_errorD0Ev
	.p2align	4, 0x90
	.type	_ZN8pybind1110cast_errorD0Ev,@function
_ZN8pybind1110cast_errorD0Ev:           # @_ZN8pybind1110cast_errorD0Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	callq	_ZNSt13runtime_errorD2Ev@PLT
	movl	$16, %esi
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.Lfunc_end49:
	.size	_ZN8pybind1110cast_errorD0Ev, .Lfunc_end49-_ZN8pybind1110cast_errorD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK8pybind1110cast_error9set_errorEv,"axG",@progbits,_ZNK8pybind1110cast_error9set_errorEv,comdat
	.hidden	_ZNK8pybind1110cast_error9set_errorEv # -- Begin function _ZNK8pybind1110cast_error9set_errorEv
	.weak	_ZNK8pybind1110cast_error9set_errorEv
	.p2align	4, 0x90
	.type	_ZNK8pybind1110cast_error9set_errorEv,@function
_ZNK8pybind1110cast_error9set_errorEv:  # @_ZNK8pybind1110cast_error9set_errorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	PyExc_RuntimeError@GOTPCREL(%rip), %rax
	movq	(%rax), %rbx
	movq	(%rdi), %rax
	callq	*16(%rax)
	movq	%rbx, %rdi
	movq	%rax, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	PyErr_SetString@PLT             # TAILCALL
.Lfunc_end50:
	.size	_ZNK8pybind1110cast_error9set_errorEv, .Lfunc_end50-_ZNK8pybind1110cast_error9set_errorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind1118gil_scoped_acquire7dec_refEv,"axG",@progbits,_ZN8pybind1118gil_scoped_acquire7dec_refEv,comdat
	.hidden	_ZN8pybind1118gil_scoped_acquire7dec_refEv # -- Begin function _ZN8pybind1118gil_scoped_acquire7dec_refEv
	.weak	_ZN8pybind1118gil_scoped_acquire7dec_refEv
	.p2align	4, 0x90
	.type	_ZN8pybind1118gil_scoped_acquire7dec_refEv,@function
_ZN8pybind1118gil_scoped_acquire7dec_refEv: # @_ZN8pybind1118gil_scoped_acquire7dec_refEv
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	(%rdi), %rax
	decl	120(%rax)
	callq	_PyThreadState_UncheckedGet@PLT
	movq	(%rbx), %rdi
	cmpq	%rdi, %rax
	jne	.LBB51_8
# %bb.1:
	cmpl	$0, 120(%rdi)
	js	.LBB51_9
# %bb.2:
	je	.LBB51_3
# %bb.7:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB51_3:
	.cfi_def_cfa_offset 16
	cmpb	$0, 8(%rbx)
	je	.LBB51_10
# %bb.4:
	callq	PyThreadState_Clear@PLT
	cmpb	$1, 9(%rbx)
	jne	.LBB51_6
# %bb.5:
	callq	PyThreadState_DeleteCurrent@PLT
.LBB51_6:
	callq	_ZN8pybind116detail13get_internalsEv
	leaq	432(%rax), %rdi
	xorl	%esi, %esi
	callq	PyThread_tss_set@PLT
	movb	$0, 8(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB51_8:
	.cfi_def_cfa_offset 16
	leaq	.L.str.53(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.LBB51_9:
	leaq	.L.str.54(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.LBB51_10:
	leaq	.L.str.55(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Lfunc_end51:
	.size	_ZN8pybind1118gil_scoped_acquire7dec_refEv, .Lfunc_end51-_ZN8pybind1118gil_scoped_acquire7dec_refEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail21get_python_state_dictEv,"axG",@progbits,_ZN8pybind116detail21get_python_state_dictEv,comdat
	.hidden	_ZN8pybind116detail21get_python_state_dictEv # -- Begin function _ZN8pybind116detail21get_python_state_dictEv
	.weak	_ZN8pybind116detail21get_python_state_dictEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail21get_python_state_dictEv,@function
_ZN8pybind116detail21get_python_state_dictEv: # @_ZN8pybind116detail21get_python_state_dictEv
.Lfunc_begin27:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception27
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	$0, (%rdi)
.Ltmp785:
	callq	PyInterpreterState_Get@PLT
.Ltmp786:
# %bb.1:
	testq	%rax, %rax
	je	.LBB52_9
# %bb.2:
.Ltmp787:
	movq	%rax, %rdi
	callq	PyInterpreterState_GetDict@PLT
.Ltmp788:
# %bb.3:
	movq	%rax, (%rsp)
.Ltmp789:
	movq	%rsp, %r14
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp790:
# %bb.4:                                # %_ZN8pybind1118reinterpret_borrowINS_6objectEEET_NS_6handleE.exit
	cmpq	%rbx, %r14
	je	.LBB52_6
# %bb.5:
	movq	(%rbx), %rax
	movq	%rax, 8(%rsp)
	movq	(%rsp), %rax
	movq	%rax, (%rbx)
	movq	$0, (%rsp)
.Ltmp792:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp793:
.LBB52_6:                               # %_ZN8pybind116objectaSEOS0_.exit
.Ltmp795:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp796:
# %bb.7:
	cmpq	$0, (%rbx)
	je	.LBB52_9
# %bb.8:
	movq	%rbx, %rax
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB52_9:                               # %.thread
	.cfi_def_cfa_offset 48
	movq	PyExc_SystemError@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
.Ltmp798:
	leaq	.L.str.59(%rip), %rsi
	callq	_ZN8pybind1110raise_fromEP7_objectPKc
.Ltmp799:
# %bb.10:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp800:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp801:
# %bb.11:
.Ltmp803:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp804:
# %bb.12:
.LBB52_13:
.Ltmp802:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB52_19
.LBB52_14:
.Ltmp794:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB52_15:
.Ltmp797:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB52_16:
.Ltmp791:
	jmp	.LBB52_18
.LBB52_17:
.Ltmp805:
.LBB52_18:
	movq	%rax, %r14
.LBB52_19:
.Ltmp806:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp807:
# %bb.20:                               # %_ZN8pybind116objectD2Ev.exit7
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB52_21:
.Ltmp808:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end52:
	.size	_ZN8pybind116detail21get_python_state_dictEv, .Lfunc_end52-_ZN8pybind116detail21get_python_state_dictEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail21get_python_state_dictEv,"aG",@progbits,_ZN8pybind116detail21get_python_state_dictEv,comdat
	.p2align	2, 0x0
GCC_except_table52:
.Lexception27:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase15-.Lttbaseref15
.Lttbaseref15:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end27-.Lcst_begin27
.Lcst_begin27:
	.uleb128 .Ltmp785-.Lfunc_begin27        # >> Call Site 1 <<
	.uleb128 .Ltmp786-.Ltmp785              #   Call between .Ltmp785 and .Ltmp786
	.uleb128 .Ltmp805-.Lfunc_begin27        #     jumps to .Ltmp805
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp787-.Lfunc_begin27        # >> Call Site 2 <<
	.uleb128 .Ltmp790-.Ltmp787              #   Call between .Ltmp787 and .Ltmp790
	.uleb128 .Ltmp791-.Lfunc_begin27        #     jumps to .Ltmp791
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp792-.Lfunc_begin27        # >> Call Site 3 <<
	.uleb128 .Ltmp793-.Ltmp792              #   Call between .Ltmp792 and .Ltmp793
	.uleb128 .Ltmp794-.Lfunc_begin27        #     jumps to .Ltmp794
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp795-.Lfunc_begin27        # >> Call Site 4 <<
	.uleb128 .Ltmp796-.Ltmp795              #   Call between .Ltmp795 and .Ltmp796
	.uleb128 .Ltmp797-.Lfunc_begin27        #     jumps to .Ltmp797
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp798-.Lfunc_begin27        # >> Call Site 5 <<
	.uleb128 .Ltmp799-.Ltmp798              #   Call between .Ltmp798 and .Ltmp799
	.uleb128 .Ltmp805-.Lfunc_begin27        #     jumps to .Ltmp805
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp799-.Lfunc_begin27        # >> Call Site 6 <<
	.uleb128 .Ltmp800-.Ltmp799              #   Call between .Ltmp799 and .Ltmp800
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp800-.Lfunc_begin27        # >> Call Site 7 <<
	.uleb128 .Ltmp801-.Ltmp800              #   Call between .Ltmp800 and .Ltmp801
	.uleb128 .Ltmp802-.Lfunc_begin27        #     jumps to .Ltmp802
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp803-.Lfunc_begin27        # >> Call Site 8 <<
	.uleb128 .Ltmp804-.Ltmp803              #   Call between .Ltmp803 and .Ltmp804
	.uleb128 .Ltmp805-.Lfunc_begin27        #     jumps to .Ltmp805
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp804-.Lfunc_begin27        # >> Call Site 9 <<
	.uleb128 .Ltmp806-.Ltmp804              #   Call between .Ltmp804 and .Ltmp806
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp806-.Lfunc_begin27        # >> Call Site 10 <<
	.uleb128 .Ltmp807-.Ltmp806              #   Call between .Ltmp806 and .Ltmp807
	.uleb128 .Ltmp808-.Lfunc_begin27        #     jumps to .Ltmp808
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp807-.Lfunc_begin27        # >> Call Site 11 <<
	.uleb128 .Lfunc_end52-.Ltmp807          #   Call between .Ltmp807 and .Lfunc_end52
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end27:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase15:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind114dictC2EONS_6objectE,"axG",@progbits,_ZN8pybind114dictC2EONS_6objectE,comdat
	.hidden	_ZN8pybind114dictC2EONS_6objectE # -- Begin function _ZN8pybind114dictC2EONS_6objectE
	.weak	_ZN8pybind114dictC2EONS_6objectE
	.p2align	4, 0x90
	.type	_ZN8pybind114dictC2EONS_6objectE,@function
_ZN8pybind114dictC2EONS_6objectE:       # @_ZN8pybind114dictC2EONS_6objectE
.Lfunc_begin28:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception28
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %rax
	movq	%rdi, %rbx
	movq	(%rsi), %rsi
	testq	%rsi, %rsi
	je	.LBB53_1
# %bb.4:                                # %_ZN8pybind114dict6check_ENS_6handleE.exit
	movq	8(%rsi), %rcx
	movq	168(%rcx), %rcx
	testl	$536870912, %ecx                # imm = 0x20000000
	je	.LBB53_2
# %bb.5:                                # %_ZN8pybind114dict8raw_dictEP7_object.exit.thread
	movq	$0, (%rax)
	movq	%rsi, (%rbx)
	jmp	.LBB53_6
.LBB53_1:                               # %._ZN8pybind114dict6check_ENS_6handleE.exit.thread_crit_edge
	movq	8, %rax
	movq	168(%rax), %rcx
.LBB53_2:                               # %_ZN8pybind114dict6check_ENS_6handleE.exit.thread
	testl	$536870912, %ecx                # imm = 0x20000000
	jne	.LBB53_3
# %bb.7:
	movq	PyDict_Type@GOTPCREL(%rip), %rdi
	xorl	%edx, %edx
	xorl	%eax, %eax
	callq	PyObject_CallFunctionObjArgs@PLT
	jmp	.LBB53_8
.LBB53_3:
	movq	%rsi, 8(%rsp)
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rax), %rax
.LBB53_8:                               # %_ZN8pybind114dict8raw_dictEP7_object.exit
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB53_9
.LBB53_6:
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB53_9:
	.cfi_def_cfa_offset 48
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp809:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp810:
# %bb.10:
.Ltmp812:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp813:
# %bb.15:
.LBB53_11:
.Ltmp814:
	movq	%rax, %r14
	jmp	.LBB53_13
.LBB53_12:
.Ltmp811:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
.LBB53_13:
.Ltmp815:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp816:
# %bb.14:                               # %_ZN8pybind116objectD2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB53_16:
.Ltmp817:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end53:
	.size	_ZN8pybind114dictC2EONS_6objectE, .Lfunc_end53-_ZN8pybind114dictC2EONS_6objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind114dictC2EONS_6objectE,"aG",@progbits,_ZN8pybind114dictC2EONS_6objectE,comdat
	.p2align	2, 0x0
GCC_except_table53:
.Lexception28:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase16-.Lttbaseref16
.Lttbaseref16:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end28-.Lcst_begin28
.Lcst_begin28:
	.uleb128 .Lfunc_begin28-.Lfunc_begin28  # >> Call Site 1 <<
	.uleb128 .Ltmp809-.Lfunc_begin28        #   Call between .Lfunc_begin28 and .Ltmp809
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp809-.Lfunc_begin28        # >> Call Site 2 <<
	.uleb128 .Ltmp810-.Ltmp809              #   Call between .Ltmp809 and .Ltmp810
	.uleb128 .Ltmp811-.Lfunc_begin28        #     jumps to .Ltmp811
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp812-.Lfunc_begin28        # >> Call Site 3 <<
	.uleb128 .Ltmp813-.Ltmp812              #   Call between .Ltmp812 and .Ltmp813
	.uleb128 .Ltmp814-.Lfunc_begin28        #     jumps to .Ltmp814
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp813-.Lfunc_begin28        # >> Call Site 4 <<
	.uleb128 .Ltmp815-.Ltmp813              #   Call between .Ltmp813 and .Ltmp815
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp815-.Lfunc_begin28        # >> Call Site 5 <<
	.uleb128 .Ltmp816-.Ltmp815              #   Call between .Ltmp815 and .Ltmp816
	.uleb128 .Ltmp817-.Lfunc_begin28        #     jumps to .Ltmp817
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp816-.Lfunc_begin28        # >> Call Site 6 <<
	.uleb128 .Lfunc_end53-.Ltmp816          #   Call between .Ltmp816 and .Lfunc_end53
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end28:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase16:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail9internalsC2Ev,"axG",@progbits,_ZN8pybind116detail9internalsC2Ev,comdat
	.hidden	_ZN8pybind116detail9internalsC2Ev # -- Begin function _ZN8pybind116detail9internalsC2Ev
	.weak	_ZN8pybind116detail9internalsC2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind116detail9internalsC2Ev,@function
_ZN8pybind116detail9internalsC2Ev:      # @_ZN8pybind116detail9internalsC2Ev
.Lfunc_begin29:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception29
# %bb.0:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	leaq	48(%rdi), %rax
	movq	%rax, (%rdi)
	movq	$1, 8(%rdi)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rdi)
	movl	$1065353216, 32(%rdi)           # imm = 0x3F800000
	movups	%xmm0, 40(%rdi)
	leaq	56(%rdi), %rax
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	leaq	104(%rdi), %rax
	movq	%rax, 56(%rdi)
	movq	$1, 64(%rdi)
	movups	%xmm0, 72(%rdi)
	movl	$1065353216, 88(%rdi)           # imm = 0x3F800000
	movups	%xmm0, 96(%rdi)
	leaq	112(%rdi), %r12
	leaq	160(%rdi), %rax
	movq	%rax, 112(%rdi)
	movq	$1, 120(%rdi)
	movups	%xmm0, 128(%rdi)
	movl	$1065353216, 144(%rdi)          # imm = 0x3F800000
	movups	%xmm0, 152(%rdi)
	leaq	168(%rdi), %r13
	leaq	216(%rdi), %rax
	movq	%rax, 168(%rdi)
	movq	$1, 176(%rdi)
	movups	%xmm0, 184(%rdi)
	movl	$1065353216, 200(%rdi)          # imm = 0x3F800000
	movups	%xmm0, 208(%rdi)
	leaq	224(%rdi), %rbp
	leaq	272(%rdi), %rax
	movq	%rax, 224(%rdi)
	movq	$1, 232(%rdi)
	movups	%xmm0, 240(%rdi)
	movl	$1065353216, 256(%rdi)          # imm = 0x3F800000
	movups	%xmm0, 264(%rdi)
	leaq	280(%rdi), %r15
	leaq	328(%rdi), %rax
	movq	%rax, 280(%rdi)
	movq	$1, 288(%rdi)
	movups	%xmm0, 296(%rdi)
	movl	$1065353216, 312(%rdi)          # imm = 0x3F800000
	leaq	344(%rdi), %r14
	leaq	392(%rdi), %rax
	movups	%xmm0, 320(%rdi)
	movq	$0, 336(%rdi)
	movq	%rax, 344(%rdi)
	movq	$1, 352(%rdi)
	movups	%xmm0, 360(%rdi)
	movl	$1065353216, 376(%rdi)          # imm = 0x3F800000
	leaq	472(%rdi), %rax
	movups	%xmm0, 384(%rdi)
	movq	$0, 400(%rdi)
	movups	%xmm0, 432(%rdi)
	movq	$0, 448(%rdi)
	movq	%rax, 456(%rdi)
.Ltmp818:
	movl	$33, %edi
	callq	_Znwm@PLT
.Ltmp819:
# %bb.1:                                # %.noexc3
	movq	%rax, 456(%rbx)
	movq	$32, 472(%rbx)
	movups	.L.str.63+16(%rip), %xmm0
	movups	%xmm0, 16(%rax)
	movups	.L.str.63(%rip), %xmm0
	movups	%xmm0, (%rax)
	movq	$32, 464(%rbx)
	movb	$0, 32(%rax)
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB54_2:
	.cfi_def_cfa_offset 96
.Ltmp820:
	movq	%r15, (%rsp)                    # 8-byte Spill
	movq	%rbp, 8(%rsp)                   # 8-byte Spill
	movq	%r13, 16(%rsp)                  # 8-byte Spill
	movq	%r12, 24(%rsp)                  # 8-byte Spill
	movq	%rax, %r15
	leaq	400(%rbx), %rdi
	callq	_ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@PLT
	movq	%r14, %rdi
	callq	_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev@PLT
	movq	336(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB54_4
	.p2align	4, 0x90
.LBB54_3:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r14
	movl	$16, %esi
	callq	_ZdlPvm@PLT
	movq	%r14, %rdi
	testq	%r14, %r14
	jne	.LBB54_3
.LBB54_4:                               # %_ZNSt14_Fwd_list_baseIPFvNSt15__exception_ptr13exception_ptrEESaIS3_EED2Ev.exit
	movq	$0, 336(%rbx)
	movq	(%rsp), %rdi                    # 8-byte Reload
	callq	_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev@PLT
	movq	8(%rsp), %rdi                   # 8-byte Reload
	callq	_ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev@PLT
	movq	16(%rsp), %rdi                  # 8-byte Reload
	callq	_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev
	movq	24(%rsp), %rdi                  # 8-byte Reload
	callq	_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev
	movq	32(%rsp), %rdi                  # 8-byte Reload
	callq	_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev
	movq	%rbx, %rdi
	callq	_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev
	movq	%r15, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end54:
	.size	_ZN8pybind116detail9internalsC2Ev, .Lfunc_end54-_ZN8pybind116detail9internalsC2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail9internalsC2Ev,"aG",@progbits,_ZN8pybind116detail9internalsC2Ev,comdat
	.p2align	2, 0x0
GCC_except_table54:
.Lexception29:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end29-.Lcst_begin29
.Lcst_begin29:
	.uleb128 .Ltmp818-.Lfunc_begin29        # >> Call Site 1 <<
	.uleb128 .Ltmp819-.Ltmp818              #   Call between .Ltmp818 and .Ltmp819
	.uleb128 .Ltmp820-.Lfunc_begin29        #     jumps to .Ltmp820
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp819-.Lfunc_begin29        # >> Call Site 2 <<
	.uleb128 .Lfunc_end54-.Ltmp819          #   Call between .Ltmp819 and .Lfunc_end54
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end29:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE,"axG",@progbits,_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE,comdat
	.hidden	_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE # -- Begin function _ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE
	.weak	_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE
	.p2align	4, 0x90
	.type	_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE,@function
_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE: # @_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE
.Lfunc_begin30:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception30
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	movq	%rdx, %rsi
	movq	%rcx, %rdx
	callq	PyCapsule_New@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB55_1
# %bb.4:
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB55_1:
	.cfi_def_cfa_offset 32
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp821:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp822:
# %bb.2:
.Ltmp824:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp825:
# %bb.8:
.LBB55_3:
.Ltmp826:
	movq	%rax, %r14
	jmp	.LBB55_6
.LBB55_5:
.Ltmp823:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
.LBB55_6:
.Ltmp827:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp828:
# %bb.7:                                # %_ZN8pybind116objectD2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB55_9:
.Ltmp829:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end55:
	.size	_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE, .Lfunc_end55-_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE,"aG",@progbits,_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE,comdat
	.p2align	2, 0x0
GCC_except_table55:
.Lexception30:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase17-.Lttbaseref17
.Lttbaseref17:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end30-.Lcst_begin30
.Lcst_begin30:
	.uleb128 .Lfunc_begin30-.Lfunc_begin30  # >> Call Site 1 <<
	.uleb128 .Ltmp821-.Lfunc_begin30        #   Call between .Lfunc_begin30 and .Ltmp821
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp821-.Lfunc_begin30        # >> Call Site 2 <<
	.uleb128 .Ltmp822-.Ltmp821              #   Call between .Ltmp821 and .Ltmp822
	.uleb128 .Ltmp823-.Lfunc_begin30        #     jumps to .Ltmp823
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp824-.Lfunc_begin30        # >> Call Site 3 <<
	.uleb128 .Ltmp825-.Ltmp824              #   Call between .Ltmp824 and .Ltmp825
	.uleb128 .Ltmp826-.Lfunc_begin30        #     jumps to .Ltmp826
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp825-.Lfunc_begin30        # >> Call Site 4 <<
	.uleb128 .Ltmp827-.Ltmp825              #   Call between .Ltmp825 and .Ltmp827
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp827-.Lfunc_begin30        # >> Call Site 5 <<
	.uleb128 .Ltmp828-.Ltmp827              #   Call between .Ltmp827 and .Ltmp828
	.uleb128 .Ltmp829-.Lfunc_begin30        #     jumps to .Ltmp829
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp828-.Lfunc_begin30        # >> Call Site 6 <<
	.uleb128 .Lfunc_end55-.Ltmp828          #   Call between .Ltmp828 and .Lfunc_end55
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end30:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase17:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev,"axG",@progbits,_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev,comdat
	.hidden	_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev # -- Begin function _ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev
	.weak	_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev,@function
_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev: # @_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev
.Lfunc_begin31:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception31
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	addq	$24, %rdi
.Ltmp830:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp831:
# %bb.1:                                # %_ZN8pybind116objectD2Ev.exit
	addq	$16, %rbx
.Ltmp833:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp834:
# %bb.2:                                # %_ZN8pybind116objectD2Ev.exit1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB56_4:
	.cfi_def_cfa_offset 16
.Ltmp835:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB56_3:
.Ltmp832:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end56:
	.size	_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev, .Lfunc_end56-_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev,"aG",@progbits,_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table56:
.Lexception31:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase18-.Lttbaseref18
.Lttbaseref18:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end31-.Lcst_begin31
.Lcst_begin31:
	.uleb128 .Ltmp830-.Lfunc_begin31        # >> Call Site 1 <<
	.uleb128 .Ltmp831-.Ltmp830              #   Call between .Ltmp830 and .Ltmp831
	.uleb128 .Ltmp832-.Lfunc_begin31        #     jumps to .Ltmp832
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp833-.Lfunc_begin31        # >> Call Site 2 <<
	.uleb128 .Ltmp834-.Ltmp833              #   Call between .Ltmp833 and .Ltmp834
	.uleb128 .Ltmp835-.Lfunc_begin31        #     jumps to .Ltmp835
	.byte	1                               #   On action: 1
.Lcst_end31:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase18:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE
.Lfunc_begin32:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception32
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	(%rdi), %rax
	testq	%rax, %rax
	jne	.LBB57_1
.LBB57_57:
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB57_1:                               # %_ZNSt15__exception_ptr13exception_ptrC2ERKS0_.exit
	.cfi_def_cfa_offset 48
	movq	%rdi, %rbx
	movq	%rax, 8(%rsp)
	leaq	8(%rsp), %r14
	movq	%r14, %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv@PLT
.Ltmp836:
	movq	%r14, %rdi
	callq	_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE@PLT
.Ltmp837:
# %bb.2:
.LBB57_3:
.Ltmp838:
	movq	%rdx, %r15
	movq	%rax, %r14
	cmpq	$0, 8(%rsp)
	je	.LBB57_5
# %bb.4:
	leaq	8(%rsp), %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
.LBB57_5:                               # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit
	movq	%r14, %rdi
	cmpl	$12, %r15d
	jne	.LBB57_8
# %bb.6:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
.Ltmp915:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
.Ltmp916:
# %bb.7:
	movq	8(%r14), %rdi
.Ltmp917:
	callq	_ZN8pybind116detail25error_fetch_and_normalize7restoreEv
.Ltmp918:
	jmp	.LBB57_56
.LBB57_8:
	cmpl	$11, %r15d
	jne	.LBB57_13
# %bb.9:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB57_12
# %bb.10:
	leaq	_ZTIN8pybind1117builtin_exceptionE(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	%r14, %rdi
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	testq	%rax, %rax
	je	.LBB57_12
# %bb.11:
.Ltmp907:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
.Ltmp908:
.LBB57_12:                              # %.thread
	movq	(%r14), %rax
.Ltmp910:
	movq	%r14, %rdi
	callq	*24(%rax)
.Ltmp911:
	jmp	.LBB57_56
.LBB57_13:
	cmpl	$10, %r15d
	jne	.LBB57_16
# %bb.14:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
.Ltmp900:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
.Ltmp901:
# %bb.15:
	movq	PyExc_MemoryError@GOTPCREL(%rip), %rax
	movq	(%rax), %rbx
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
.Ltmp902:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp903:
	jmp	.LBB57_56
.LBB57_16:
	cmpl	$9, %r15d
	jne	.LBB57_19
# %bb.17:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
.Ltmp893:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
.Ltmp894:
# %bb.18:
	movq	PyExc_ValueError@GOTPCREL(%rip), %rax
	movq	(%rax), %rbx
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
.Ltmp895:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp896:
	jmp	.LBB57_56
.LBB57_19:
	cmpl	$8, %r15d
	jne	.LBB57_22
# %bb.20:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
.Ltmp886:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
.Ltmp887:
# %bb.21:
	movq	PyExc_ValueError@GOTPCREL(%rip), %rax
	movq	(%rax), %rbx
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
.Ltmp888:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp889:
	jmp	.LBB57_56
.LBB57_22:
	cmpl	$7, %r15d
	jne	.LBB57_25
# %bb.23:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
.Ltmp879:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
.Ltmp880:
# %bb.24:
	movq	PyExc_ValueError@GOTPCREL(%rip), %rax
	movq	(%rax), %rbx
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
.Ltmp881:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp882:
	jmp	.LBB57_56
.LBB57_25:
	cmpl	$6, %r15d
	jne	.LBB57_28
# %bb.26:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
.Ltmp872:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
.Ltmp873:
# %bb.27:
	movq	PyExc_IndexError@GOTPCREL(%rip), %rax
	movq	(%rax), %rbx
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
.Ltmp874:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp875:
	jmp	.LBB57_56
.LBB57_28:
	cmpl	$5, %r15d
	jne	.LBB57_31
# %bb.29:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
.Ltmp865:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
.Ltmp866:
# %bb.30:
	movq	PyExc_ValueError@GOTPCREL(%rip), %rax
	movq	(%rax), %rbx
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
.Ltmp867:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp868:
	jmp	.LBB57_56
.LBB57_31:
	cmpl	$4, %r15d
	jne	.LBB57_34
# %bb.32:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
.Ltmp858:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
.Ltmp859:
# %bb.33:
	movq	PyExc_OverflowError@GOTPCREL(%rip), %rax
	movq	(%rax), %rbx
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
.Ltmp860:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp861:
	jmp	.LBB57_56
.LBB57_34:
	cmpl	$3, %r15d
	jne	.LBB57_37
# %bb.35:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
.Ltmp851:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
.Ltmp852:
# %bb.36:
	movq	PyExc_RuntimeError@GOTPCREL(%rip), %rax
	movq	(%rax), %rbx
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
.Ltmp853:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp854:
	jmp	.LBB57_56
.LBB57_37:
	callq	__cxa_begin_catch@PLT
	cmpl	$2, %r15d
	jne	.LBB57_55
# %bb.38:
.Ltmp844:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
.Ltmp845:
# %bb.39:
	movq	PyExc_RuntimeError@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
.Ltmp846:
	leaq	.L.str.66(%rip), %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp847:
	jmp	.LBB57_56
.LBB57_55:
	movq	PyExc_RuntimeError@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
.Ltmp839:
	leaq	.L.str.65(%rip), %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp840:
.LBB57_56:                              # %.sink.split
	callq	__cxa_end_catch@PLT
	jmp	.LBB57_57
.LBB57_40:
.Ltmp841:
	movq	%rax, %rbx
.Ltmp842:
	callq	__cxa_end_catch@PLT
.Ltmp843:
	jmp	.LBB57_41
.LBB57_42:
.Ltmp848:
	movq	%rax, %rbx
.Ltmp849:
	callq	__cxa_end_catch@PLT
.Ltmp850:
	jmp	.LBB57_41
.LBB57_43:
.Ltmp855:
	movq	%rax, %rbx
.Ltmp856:
	callq	__cxa_end_catch@PLT
.Ltmp857:
	jmp	.LBB57_41
.LBB57_44:
.Ltmp862:
	movq	%rax, %rbx
.Ltmp863:
	callq	__cxa_end_catch@PLT
.Ltmp864:
	jmp	.LBB57_41
.LBB57_45:
.Ltmp869:
	movq	%rax, %rbx
.Ltmp870:
	callq	__cxa_end_catch@PLT
.Ltmp871:
	jmp	.LBB57_41
.LBB57_46:
.Ltmp876:
	movq	%rax, %rbx
.Ltmp877:
	callq	__cxa_end_catch@PLT
.Ltmp878:
	jmp	.LBB57_41
.LBB57_47:
.Ltmp883:
	movq	%rax, %rbx
.Ltmp884:
	callq	__cxa_end_catch@PLT
.Ltmp885:
	jmp	.LBB57_41
.LBB57_48:
.Ltmp890:
	movq	%rax, %rbx
.Ltmp891:
	callq	__cxa_end_catch@PLT
.Ltmp892:
	jmp	.LBB57_41
.LBB57_51:
.Ltmp909:
	jmp	.LBB57_53
.LBB57_49:
.Ltmp897:
	movq	%rax, %rbx
.Ltmp898:
	callq	__cxa_end_catch@PLT
.Ltmp899:
	jmp	.LBB57_41
.LBB57_50:
.Ltmp904:
	movq	%rax, %rbx
.Ltmp905:
	callq	__cxa_end_catch@PLT
.Ltmp906:
	jmp	.LBB57_41
.LBB57_52:
.Ltmp912:
.LBB57_53:
	movq	%rax, %rbx
.Ltmp913:
	callq	__cxa_end_catch@PLT
.Ltmp914:
	jmp	.LBB57_41
.LBB57_54:
.Ltmp919:
	movq	%rax, %rbx
.Ltmp920:
	callq	__cxa_end_catch@PLT
.Ltmp921:
.LBB57_41:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB57_58:
.Ltmp922:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end57:
	.size	_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE, .Lfunc_end57-_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE,"aG",@progbits,_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE,comdat
	.p2align	2, 0x0
GCC_except_table57:
.Lexception32:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase19-.Lttbaseref19
.Lttbaseref19:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end32-.Lcst_begin32
.Lcst_begin32:
	.uleb128 .Ltmp836-.Lfunc_begin32        # >> Call Site 1 <<
	.uleb128 .Ltmp837-.Ltmp836              #   Call between .Ltmp836 and .Ltmp837
	.uleb128 .Ltmp838-.Lfunc_begin32        #     jumps to .Ltmp838
	.byte	23                              #   On action: 12
	.uleb128 .Ltmp837-.Lfunc_begin32        # >> Call Site 2 <<
	.uleb128 .Ltmp915-.Ltmp837              #   Call between .Ltmp837 and .Ltmp915
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp915-.Lfunc_begin32        # >> Call Site 3 <<
	.uleb128 .Ltmp918-.Ltmp915              #   Call between .Ltmp915 and .Ltmp918
	.uleb128 .Ltmp919-.Lfunc_begin32        #     jumps to .Ltmp919
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp918-.Lfunc_begin32        # >> Call Site 4 <<
	.uleb128 .Ltmp907-.Ltmp918              #   Call between .Ltmp918 and .Ltmp907
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp907-.Lfunc_begin32        # >> Call Site 5 <<
	.uleb128 .Ltmp908-.Ltmp907              #   Call between .Ltmp907 and .Ltmp908
	.uleb128 .Ltmp909-.Lfunc_begin32        #     jumps to .Ltmp909
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp910-.Lfunc_begin32        # >> Call Site 6 <<
	.uleb128 .Ltmp911-.Ltmp910              #   Call between .Ltmp910 and .Ltmp911
	.uleb128 .Ltmp912-.Lfunc_begin32        #     jumps to .Ltmp912
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp911-.Lfunc_begin32        # >> Call Site 7 <<
	.uleb128 .Ltmp900-.Ltmp911              #   Call between .Ltmp911 and .Ltmp900
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp900-.Lfunc_begin32        # >> Call Site 8 <<
	.uleb128 .Ltmp901-.Ltmp900              #   Call between .Ltmp900 and .Ltmp901
	.uleb128 .Ltmp904-.Lfunc_begin32        #     jumps to .Ltmp904
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp901-.Lfunc_begin32        # >> Call Site 9 <<
	.uleb128 .Ltmp902-.Ltmp901              #   Call between .Ltmp901 and .Ltmp902
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp902-.Lfunc_begin32        # >> Call Site 10 <<
	.uleb128 .Ltmp903-.Ltmp902              #   Call between .Ltmp902 and .Ltmp903
	.uleb128 .Ltmp904-.Lfunc_begin32        #     jumps to .Ltmp904
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp903-.Lfunc_begin32        # >> Call Site 11 <<
	.uleb128 .Ltmp893-.Ltmp903              #   Call between .Ltmp903 and .Ltmp893
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp893-.Lfunc_begin32        # >> Call Site 12 <<
	.uleb128 .Ltmp894-.Ltmp893              #   Call between .Ltmp893 and .Ltmp894
	.uleb128 .Ltmp897-.Lfunc_begin32        #     jumps to .Ltmp897
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp894-.Lfunc_begin32        # >> Call Site 13 <<
	.uleb128 .Ltmp895-.Ltmp894              #   Call between .Ltmp894 and .Ltmp895
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp895-.Lfunc_begin32        # >> Call Site 14 <<
	.uleb128 .Ltmp896-.Ltmp895              #   Call between .Ltmp895 and .Ltmp896
	.uleb128 .Ltmp897-.Lfunc_begin32        #     jumps to .Ltmp897
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp896-.Lfunc_begin32        # >> Call Site 15 <<
	.uleb128 .Ltmp886-.Ltmp896              #   Call between .Ltmp896 and .Ltmp886
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp886-.Lfunc_begin32        # >> Call Site 16 <<
	.uleb128 .Ltmp887-.Ltmp886              #   Call between .Ltmp886 and .Ltmp887
	.uleb128 .Ltmp890-.Lfunc_begin32        #     jumps to .Ltmp890
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp887-.Lfunc_begin32        # >> Call Site 17 <<
	.uleb128 .Ltmp888-.Ltmp887              #   Call between .Ltmp887 and .Ltmp888
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp888-.Lfunc_begin32        # >> Call Site 18 <<
	.uleb128 .Ltmp889-.Ltmp888              #   Call between .Ltmp888 and .Ltmp889
	.uleb128 .Ltmp890-.Lfunc_begin32        #     jumps to .Ltmp890
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp889-.Lfunc_begin32        # >> Call Site 19 <<
	.uleb128 .Ltmp879-.Ltmp889              #   Call between .Ltmp889 and .Ltmp879
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp879-.Lfunc_begin32        # >> Call Site 20 <<
	.uleb128 .Ltmp880-.Ltmp879              #   Call between .Ltmp879 and .Ltmp880
	.uleb128 .Ltmp883-.Lfunc_begin32        #     jumps to .Ltmp883
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp880-.Lfunc_begin32        # >> Call Site 21 <<
	.uleb128 .Ltmp881-.Ltmp880              #   Call between .Ltmp880 and .Ltmp881
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp881-.Lfunc_begin32        # >> Call Site 22 <<
	.uleb128 .Ltmp882-.Ltmp881              #   Call between .Ltmp881 and .Ltmp882
	.uleb128 .Ltmp883-.Lfunc_begin32        #     jumps to .Ltmp883
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp882-.Lfunc_begin32        # >> Call Site 23 <<
	.uleb128 .Ltmp872-.Ltmp882              #   Call between .Ltmp882 and .Ltmp872
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp872-.Lfunc_begin32        # >> Call Site 24 <<
	.uleb128 .Ltmp873-.Ltmp872              #   Call between .Ltmp872 and .Ltmp873
	.uleb128 .Ltmp876-.Lfunc_begin32        #     jumps to .Ltmp876
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp873-.Lfunc_begin32        # >> Call Site 25 <<
	.uleb128 .Ltmp874-.Ltmp873              #   Call between .Ltmp873 and .Ltmp874
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp874-.Lfunc_begin32        # >> Call Site 26 <<
	.uleb128 .Ltmp875-.Ltmp874              #   Call between .Ltmp874 and .Ltmp875
	.uleb128 .Ltmp876-.Lfunc_begin32        #     jumps to .Ltmp876
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp875-.Lfunc_begin32        # >> Call Site 27 <<
	.uleb128 .Ltmp865-.Ltmp875              #   Call between .Ltmp875 and .Ltmp865
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp865-.Lfunc_begin32        # >> Call Site 28 <<
	.uleb128 .Ltmp866-.Ltmp865              #   Call between .Ltmp865 and .Ltmp866
	.uleb128 .Ltmp869-.Lfunc_begin32        #     jumps to .Ltmp869
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp866-.Lfunc_begin32        # >> Call Site 29 <<
	.uleb128 .Ltmp867-.Ltmp866              #   Call between .Ltmp866 and .Ltmp867
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp867-.Lfunc_begin32        # >> Call Site 30 <<
	.uleb128 .Ltmp868-.Ltmp867              #   Call between .Ltmp867 and .Ltmp868
	.uleb128 .Ltmp869-.Lfunc_begin32        #     jumps to .Ltmp869
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp868-.Lfunc_begin32        # >> Call Site 31 <<
	.uleb128 .Ltmp858-.Ltmp868              #   Call between .Ltmp868 and .Ltmp858
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp858-.Lfunc_begin32        # >> Call Site 32 <<
	.uleb128 .Ltmp859-.Ltmp858              #   Call between .Ltmp858 and .Ltmp859
	.uleb128 .Ltmp862-.Lfunc_begin32        #     jumps to .Ltmp862
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp859-.Lfunc_begin32        # >> Call Site 33 <<
	.uleb128 .Ltmp860-.Ltmp859              #   Call between .Ltmp859 and .Ltmp860
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp860-.Lfunc_begin32        # >> Call Site 34 <<
	.uleb128 .Ltmp861-.Ltmp860              #   Call between .Ltmp860 and .Ltmp861
	.uleb128 .Ltmp862-.Lfunc_begin32        #     jumps to .Ltmp862
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp861-.Lfunc_begin32        # >> Call Site 35 <<
	.uleb128 .Ltmp851-.Ltmp861              #   Call between .Ltmp861 and .Ltmp851
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp851-.Lfunc_begin32        # >> Call Site 36 <<
	.uleb128 .Ltmp852-.Ltmp851              #   Call between .Ltmp851 and .Ltmp852
	.uleb128 .Ltmp855-.Lfunc_begin32        #     jumps to .Ltmp855
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp852-.Lfunc_begin32        # >> Call Site 37 <<
	.uleb128 .Ltmp853-.Ltmp852              #   Call between .Ltmp852 and .Ltmp853
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp853-.Lfunc_begin32        # >> Call Site 38 <<
	.uleb128 .Ltmp854-.Ltmp853              #   Call between .Ltmp853 and .Ltmp854
	.uleb128 .Ltmp855-.Lfunc_begin32        #     jumps to .Ltmp855
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp854-.Lfunc_begin32        # >> Call Site 39 <<
	.uleb128 .Ltmp844-.Ltmp854              #   Call between .Ltmp854 and .Ltmp844
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp844-.Lfunc_begin32        # >> Call Site 40 <<
	.uleb128 .Ltmp847-.Ltmp844              #   Call between .Ltmp844 and .Ltmp847
	.uleb128 .Ltmp848-.Lfunc_begin32        #     jumps to .Ltmp848
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp839-.Lfunc_begin32        # >> Call Site 41 <<
	.uleb128 .Ltmp840-.Ltmp839              #   Call between .Ltmp839 and .Ltmp840
	.uleb128 .Ltmp841-.Lfunc_begin32        #     jumps to .Ltmp841
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp840-.Lfunc_begin32        # >> Call Site 42 <<
	.uleb128 .Ltmp842-.Ltmp840              #   Call between .Ltmp840 and .Ltmp842
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp842-.Lfunc_begin32        # >> Call Site 43 <<
	.uleb128 .Ltmp921-.Ltmp842              #   Call between .Ltmp842 and .Ltmp921
	.uleb128 .Ltmp922-.Lfunc_begin32        #     jumps to .Ltmp922
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp921-.Lfunc_begin32        # >> Call Site 44 <<
	.uleb128 .Lfunc_end57-.Ltmp921          #   Call between .Ltmp921 and .Lfunc_end57
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end32:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.byte	2                               # >> Action Record 2 <<
                                        #   Catch TypeInfo 2
	.byte	125                             #   Continue to action 1
	.byte	3                               # >> Action Record 3 <<
                                        #   Catch TypeInfo 3
	.byte	125                             #   Continue to action 2
	.byte	4                               # >> Action Record 4 <<
                                        #   Catch TypeInfo 4
	.byte	125                             #   Continue to action 3
	.byte	5                               # >> Action Record 5 <<
                                        #   Catch TypeInfo 5
	.byte	125                             #   Continue to action 4
	.byte	6                               # >> Action Record 6 <<
                                        #   Catch TypeInfo 6
	.byte	125                             #   Continue to action 5
	.byte	7                               # >> Action Record 7 <<
                                        #   Catch TypeInfo 7
	.byte	125                             #   Continue to action 6
	.byte	8                               # >> Action Record 8 <<
                                        #   Catch TypeInfo 8
	.byte	125                             #   Continue to action 7
	.byte	9                               # >> Action Record 9 <<
                                        #   Catch TypeInfo 9
	.byte	125                             #   Continue to action 8
	.byte	10                              # >> Action Record 10 <<
                                        #   Catch TypeInfo 10
	.byte	125                             #   Continue to action 9
	.byte	11                              # >> Action Record 11 <<
                                        #   Catch TypeInfo 11
	.byte	125                             #   Continue to action 10
	.byte	12                              # >> Action Record 12 <<
                                        #   Catch TypeInfo 12
	.byte	125                             #   Continue to action 11
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
.Ltmp923:                               # TypeInfo 12
	.long	.L_ZTIN8pybind1117error_already_setE.DW.stub-.Ltmp923
.Ltmp924:                               # TypeInfo 11
	.long	.L_ZTIN8pybind1117builtin_exceptionE.DW.stub-.Ltmp924
.Ltmp925:                               # TypeInfo 10
	.long	.L_ZTISt9bad_alloc.DW.stub-.Ltmp925
.Ltmp926:                               # TypeInfo 9
	.long	.L_ZTISt12domain_error.DW.stub-.Ltmp926
.Ltmp927:                               # TypeInfo 8
	.long	.L_ZTISt16invalid_argument.DW.stub-.Ltmp927
.Ltmp928:                               # TypeInfo 7
	.long	.L_ZTISt12length_error.DW.stub-.Ltmp928
.Ltmp929:                               # TypeInfo 6
	.long	.L_ZTISt12out_of_range.DW.stub-.Ltmp929
.Ltmp930:                               # TypeInfo 5
	.long	.L_ZTISt11range_error.DW.stub-.Ltmp930
.Ltmp931:                               # TypeInfo 4
	.long	.L_ZTISt14overflow_error.DW.stub-.Ltmp931
.Ltmp932:                               # TypeInfo 3
	.long	.L_ZTISt9exception.DW.stub-.Ltmp932
.Ltmp933:                               # TypeInfo 2
	.long	.L_ZTISt16nested_exception.DW.stub-.Ltmp933
	.long	0                               # TypeInfo 1
.Lttbase19:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail25make_static_property_typeEv,"axG",@progbits,_ZN8pybind116detail25make_static_property_typeEv,comdat
	.hidden	_ZN8pybind116detail25make_static_property_typeEv # -- Begin function _ZN8pybind116detail25make_static_property_typeEv
	.weak	_ZN8pybind116detail25make_static_property_typeEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail25make_static_property_typeEv,@function
_ZN8pybind116detail25make_static_property_typeEv: # @_ZN8pybind116detail25make_static_property_typeEv
.Lfunc_begin33:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception33
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$24, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	leaq	.L.str.68(%rip), %r14
	movq	%r14, %rdi
	callq	PyUnicode_FromString@PLT
	movq	%rax, 8(%rsp)
	movq	PyType_Type@GOTPCREL(%rip), %rdi
.Ltmp934:
	xorl	%esi, %esi
	callq	*304(%rdi)
.Ltmp935:
# %bb.1:
	movq	%rax, %rbx
	testq	%rax, %rax
	je	.LBB58_2
# %bb.5:
.Ltmp936:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp937:
# %bb.6:
	movq	(%rax), %rax
	movq	%rax, 856(%rbx)
.Ltmp938:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp939:
# %bb.7:
	movq	(%rax), %rax
	movq	%rax, 872(%rbx)
	movq	%r14, 24(%rbx)
	movq	PyProperty_Type@GOTPCREL(%rip), %rax
	movl	(%rax), %ecx
	incl	%ecx
	je	.LBB58_9
# %bb.8:
	movl	%ecx, (%rax)
.LBB58_9:                               # %_ZN8pybind116detail11type_increfEP11_typeobject.exit
	movq	%rax, 256(%rbx)
	leaq	pybind11_static_get(%rip), %rax
	movq	%rax, 272(%rbx)
	leaq	pybind11_static_set(%rip), %rax
	movq	%rax, 280(%rbx)
	movq	$17936, 168(%rbx)               # imm = 0x4610
	leaq	pybind11_traverse(%rip), %rax
	movq	%rax, 184(%rbx)
	leaq	pybind11_clear(%rip), %rax
	movq	%rax, 192(%rbx)
	leaq	_ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset(%rip), %rax
	movq	%rax, 248(%rbx)
.Ltmp940:
	movq	%rbx, %rdi
	callq	PyType_Ready@PLT
.Ltmp941:
# %bb.10:
	testl	%eax, %eax
	js	.LBB58_11
# %bb.14:
.Ltmp942:
	leaq	.L.str.72(%rip), %rsi
	leaq	16(%rsp), %rdi
	callq	_ZN8pybind113strC2EPKc
.Ltmp943:
# %bb.15:
	movq	16(%rsp), %rdx
.Ltmp945:
	leaq	.L.str.71(%rip), %rsi
	movq	%rbx, %rdi
	callq	PyObject_SetAttrString@PLT
.Ltmp946:
# %bb.16:                               # %.noexc
	testl	%eax, %eax
	jne	.LBB58_17
# %bb.22:                               # %_ZN8pybind117setattrENS_6handleEPKcS0_.exit
.Ltmp956:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp957:
# %bb.23:                               # %_ZN8pybind116objectD2Ev.exit
.Ltmp959:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp960:
# %bb.24:                               # %_ZN8pybind116objectD2Ev.exit23
	movq	%rbx, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB58_2:
	.cfi_def_cfa_offset 48
.Ltmp965:
	leaq	.L.str.69(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp966:
# %bb.3:
.LBB58_11:
.Ltmp962:
	leaq	.L.str.70(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp963:
# %bb.12:
.LBB58_17:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp947:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp948:
# %bb.18:
.Ltmp950:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp951:
# %bb.19:                               # %.noexc22
.LBB58_20:
.Ltmp949:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB58_26
.LBB58_32:
.Ltmp961:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB58_21:
.Ltmp958:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB58_28:
.Ltmp944:
	jmp	.LBB58_29
.LBB58_25:
.Ltmp952:
	movq	%rax, %rbx
.LBB58_26:                              # %.body
.Ltmp953:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp954:
	jmp	.LBB58_30
.LBB58_27:
.Ltmp955:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB58_13:
.Ltmp964:
	jmp	.LBB58_29
.LBB58_4:
.Ltmp967:
.LBB58_29:
	movq	%rax, %rbx
.LBB58_30:
.Ltmp968:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp969:
# %bb.31:                               # %_ZN8pybind116objectD2Ev.exit25
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB58_33:
.Ltmp970:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end58:
	.size	_ZN8pybind116detail25make_static_property_typeEv, .Lfunc_end58-_ZN8pybind116detail25make_static_property_typeEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail25make_static_property_typeEv,"aG",@progbits,_ZN8pybind116detail25make_static_property_typeEv,comdat
	.p2align	2, 0x0
GCC_except_table58:
.Lexception33:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase20-.Lttbaseref20
.Lttbaseref20:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end33-.Lcst_begin33
.Lcst_begin33:
	.uleb128 .Lfunc_begin33-.Lfunc_begin33  # >> Call Site 1 <<
	.uleb128 .Ltmp934-.Lfunc_begin33        #   Call between .Lfunc_begin33 and .Ltmp934
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp934-.Lfunc_begin33        # >> Call Site 2 <<
	.uleb128 .Ltmp939-.Ltmp934              #   Call between .Ltmp934 and .Ltmp939
	.uleb128 .Ltmp967-.Lfunc_begin33        #     jumps to .Ltmp967
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp940-.Lfunc_begin33        # >> Call Site 3 <<
	.uleb128 .Ltmp941-.Ltmp940              #   Call between .Ltmp940 and .Ltmp941
	.uleb128 .Ltmp964-.Lfunc_begin33        #     jumps to .Ltmp964
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp942-.Lfunc_begin33        # >> Call Site 4 <<
	.uleb128 .Ltmp943-.Ltmp942              #   Call between .Ltmp942 and .Ltmp943
	.uleb128 .Ltmp944-.Lfunc_begin33        #     jumps to .Ltmp944
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp945-.Lfunc_begin33        # >> Call Site 5 <<
	.uleb128 .Ltmp946-.Ltmp945              #   Call between .Ltmp945 and .Ltmp946
	.uleb128 .Ltmp952-.Lfunc_begin33        #     jumps to .Ltmp952
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp956-.Lfunc_begin33        # >> Call Site 6 <<
	.uleb128 .Ltmp957-.Ltmp956              #   Call between .Ltmp956 and .Ltmp957
	.uleb128 .Ltmp958-.Lfunc_begin33        #     jumps to .Ltmp958
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp959-.Lfunc_begin33        # >> Call Site 7 <<
	.uleb128 .Ltmp960-.Ltmp959              #   Call between .Ltmp959 and .Ltmp960
	.uleb128 .Ltmp961-.Lfunc_begin33        #     jumps to .Ltmp961
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp965-.Lfunc_begin33        # >> Call Site 8 <<
	.uleb128 .Ltmp966-.Ltmp965              #   Call between .Ltmp965 and .Ltmp966
	.uleb128 .Ltmp967-.Lfunc_begin33        #     jumps to .Ltmp967
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp962-.Lfunc_begin33        # >> Call Site 9 <<
	.uleb128 .Ltmp963-.Ltmp962              #   Call between .Ltmp962 and .Ltmp963
	.uleb128 .Ltmp964-.Lfunc_begin33        #     jumps to .Ltmp964
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp963-.Lfunc_begin33        # >> Call Site 10 <<
	.uleb128 .Ltmp947-.Ltmp963              #   Call between .Ltmp963 and .Ltmp947
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp947-.Lfunc_begin33        # >> Call Site 11 <<
	.uleb128 .Ltmp948-.Ltmp947              #   Call between .Ltmp947 and .Ltmp948
	.uleb128 .Ltmp949-.Lfunc_begin33        #     jumps to .Ltmp949
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp950-.Lfunc_begin33        # >> Call Site 12 <<
	.uleb128 .Ltmp951-.Ltmp950              #   Call between .Ltmp950 and .Ltmp951
	.uleb128 .Ltmp952-.Lfunc_begin33        #     jumps to .Ltmp952
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp951-.Lfunc_begin33        # >> Call Site 13 <<
	.uleb128 .Ltmp953-.Ltmp951              #   Call between .Ltmp951 and .Ltmp953
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp953-.Lfunc_begin33        # >> Call Site 14 <<
	.uleb128 .Ltmp954-.Ltmp953              #   Call between .Ltmp953 and .Ltmp954
	.uleb128 .Ltmp955-.Lfunc_begin33        #     jumps to .Ltmp955
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp968-.Lfunc_begin33        # >> Call Site 15 <<
	.uleb128 .Ltmp969-.Ltmp968              #   Call between .Ltmp968 and .Ltmp969
	.uleb128 .Ltmp970-.Lfunc_begin33        #     jumps to .Ltmp970
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp969-.Lfunc_begin33        # >> Call Site 16 <<
	.uleb128 .Lfunc_end58-.Ltmp969          #   Call between .Ltmp969 and .Lfunc_end58
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end33:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase20:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail22make_default_metaclassEv,"axG",@progbits,_ZN8pybind116detail22make_default_metaclassEv,comdat
	.hidden	_ZN8pybind116detail22make_default_metaclassEv # -- Begin function _ZN8pybind116detail22make_default_metaclassEv
	.weak	_ZN8pybind116detail22make_default_metaclassEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail22make_default_metaclassEv,@function
_ZN8pybind116detail22make_default_metaclassEv: # @_ZN8pybind116detail22make_default_metaclassEv
.Lfunc_begin34:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception34
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	leaq	.L.str.74(%rip), %r15
	movq	%r15, %rdi
	callq	PyUnicode_FromString@PLT
	movq	%rax, (%rsp)
	movq	PyType_Type@GOTPCREL(%rip), %r14
.Ltmp971:
	movq	%r14, %rdi
	xorl	%esi, %esi
	callq	*304(%r14)
.Ltmp972:
# %bb.1:
	movq	%rax, %rbx
	testq	%rax, %rax
	je	.LBB59_2
# %bb.5:
.Ltmp973:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp974:
# %bb.6:
	movq	(%rax), %rax
	movq	%rax, 856(%rbx)
.Ltmp975:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp976:
# %bb.7:
	movq	(%rax), %rax
	movq	%rax, 872(%rbx)
	movq	%r15, 24(%rbx)
	movl	(%r14), %eax
	incl	%eax
	je	.LBB59_9
# %bb.8:
	movl	%eax, (%r14)
.LBB59_9:                               # %_ZN8pybind116detail11type_increfEP11_typeobject.exit
	movq	%r14, 256(%rbx)
	movq	$1536, 168(%rbx)                # imm = 0x600
	leaq	pybind11_meta_call(%rip), %rax
	movq	%rax, 128(%rbx)
	leaq	pybind11_meta_setattro(%rip), %rax
	movq	%rax, 152(%rbx)
	leaq	pybind11_meta_getattro(%rip), %rax
	movq	%rax, 144(%rbx)
	leaq	pybind11_meta_dealloc(%rip), %rax
	movq	%rax, 48(%rbx)
.Ltmp977:
	movq	%rbx, %rdi
	callq	PyType_Ready@PLT
.Ltmp978:
# %bb.10:
	testl	%eax, %eax
	js	.LBB59_11
# %bb.14:
.Ltmp979:
	leaq	.L.str.72(%rip), %rsi
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2EPKc
.Ltmp980:
# %bb.15:
	movq	8(%rsp), %rdx
.Ltmp982:
	leaq	.L.str.71(%rip), %rsi
	movq	%rbx, %rdi
	callq	PyObject_SetAttrString@PLT
.Ltmp983:
# %bb.16:                               # %.noexc
	testl	%eax, %eax
	jne	.LBB59_17
# %bb.22:                               # %_ZN8pybind117setattrENS_6handleEPKcS0_.exit
.Ltmp993:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp994:
# %bb.23:                               # %_ZN8pybind116objectD2Ev.exit
.Ltmp996:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp997:
# %bb.24:                               # %_ZN8pybind116objectD2Ev.exit24
	movq	%rbx, %rax
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB59_2:
	.cfi_def_cfa_offset 48
.Ltmp1002:
	leaq	.L.str.75(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1003:
# %bb.3:
.LBB59_11:
.Ltmp999:
	leaq	.L.str.76(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1000:
# %bb.12:
.LBB59_17:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp984:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp985:
# %bb.18:
.Ltmp987:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp988:
# %bb.19:                               # %.noexc23
.LBB59_20:
.Ltmp986:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB59_26
.LBB59_32:
.Ltmp998:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB59_21:
.Ltmp995:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB59_28:
.Ltmp981:
	jmp	.LBB59_29
.LBB59_25:
.Ltmp989:
	movq	%rax, %rbx
.LBB59_26:                              # %.body
.Ltmp990:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp991:
	jmp	.LBB59_30
.LBB59_27:
.Ltmp992:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB59_13:
.Ltmp1001:
	jmp	.LBB59_29
.LBB59_4:
.Ltmp1004:
.LBB59_29:
	movq	%rax, %rbx
.LBB59_30:
.Ltmp1005:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1006:
# %bb.31:                               # %_ZN8pybind116objectD2Ev.exit26
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB59_33:
.Ltmp1007:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end59:
	.size	_ZN8pybind116detail22make_default_metaclassEv, .Lfunc_end59-_ZN8pybind116detail22make_default_metaclassEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail22make_default_metaclassEv,"aG",@progbits,_ZN8pybind116detail22make_default_metaclassEv,comdat
	.p2align	2, 0x0
GCC_except_table59:
.Lexception34:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase21-.Lttbaseref21
.Lttbaseref21:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end34-.Lcst_begin34
.Lcst_begin34:
	.uleb128 .Lfunc_begin34-.Lfunc_begin34  # >> Call Site 1 <<
	.uleb128 .Ltmp971-.Lfunc_begin34        #   Call between .Lfunc_begin34 and .Ltmp971
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp971-.Lfunc_begin34        # >> Call Site 2 <<
	.uleb128 .Ltmp976-.Ltmp971              #   Call between .Ltmp971 and .Ltmp976
	.uleb128 .Ltmp1004-.Lfunc_begin34       #     jumps to .Ltmp1004
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp977-.Lfunc_begin34        # >> Call Site 3 <<
	.uleb128 .Ltmp978-.Ltmp977              #   Call between .Ltmp977 and .Ltmp978
	.uleb128 .Ltmp1001-.Lfunc_begin34       #     jumps to .Ltmp1001
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp979-.Lfunc_begin34        # >> Call Site 4 <<
	.uleb128 .Ltmp980-.Ltmp979              #   Call between .Ltmp979 and .Ltmp980
	.uleb128 .Ltmp981-.Lfunc_begin34        #     jumps to .Ltmp981
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp982-.Lfunc_begin34        # >> Call Site 5 <<
	.uleb128 .Ltmp983-.Ltmp982              #   Call between .Ltmp982 and .Ltmp983
	.uleb128 .Ltmp989-.Lfunc_begin34        #     jumps to .Ltmp989
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp993-.Lfunc_begin34        # >> Call Site 6 <<
	.uleb128 .Ltmp994-.Ltmp993              #   Call between .Ltmp993 and .Ltmp994
	.uleb128 .Ltmp995-.Lfunc_begin34        #     jumps to .Ltmp995
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp996-.Lfunc_begin34        # >> Call Site 7 <<
	.uleb128 .Ltmp997-.Ltmp996              #   Call between .Ltmp996 and .Ltmp997
	.uleb128 .Ltmp998-.Lfunc_begin34        #     jumps to .Ltmp998
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1002-.Lfunc_begin34       # >> Call Site 8 <<
	.uleb128 .Ltmp1003-.Ltmp1002            #   Call between .Ltmp1002 and .Ltmp1003
	.uleb128 .Ltmp1004-.Lfunc_begin34       #     jumps to .Ltmp1004
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp999-.Lfunc_begin34        # >> Call Site 9 <<
	.uleb128 .Ltmp1000-.Ltmp999             #   Call between .Ltmp999 and .Ltmp1000
	.uleb128 .Ltmp1001-.Lfunc_begin34       #     jumps to .Ltmp1001
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1000-.Lfunc_begin34       # >> Call Site 10 <<
	.uleb128 .Ltmp984-.Ltmp1000             #   Call between .Ltmp1000 and .Ltmp984
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp984-.Lfunc_begin34        # >> Call Site 11 <<
	.uleb128 .Ltmp985-.Ltmp984              #   Call between .Ltmp984 and .Ltmp985
	.uleb128 .Ltmp986-.Lfunc_begin34        #     jumps to .Ltmp986
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp987-.Lfunc_begin34        # >> Call Site 12 <<
	.uleb128 .Ltmp988-.Ltmp987              #   Call between .Ltmp987 and .Ltmp988
	.uleb128 .Ltmp989-.Lfunc_begin34        #     jumps to .Ltmp989
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp988-.Lfunc_begin34        # >> Call Site 13 <<
	.uleb128 .Ltmp990-.Ltmp988              #   Call between .Ltmp988 and .Ltmp990
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp990-.Lfunc_begin34        # >> Call Site 14 <<
	.uleb128 .Ltmp991-.Ltmp990              #   Call between .Ltmp990 and .Ltmp991
	.uleb128 .Ltmp992-.Lfunc_begin34        #     jumps to .Ltmp992
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1005-.Lfunc_begin34       # >> Call Site 15 <<
	.uleb128 .Ltmp1006-.Ltmp1005            #   Call between .Ltmp1005 and .Ltmp1006
	.uleb128 .Ltmp1007-.Lfunc_begin34       #     jumps to .Ltmp1007
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1006-.Lfunc_begin34       # >> Call Site 16 <<
	.uleb128 .Lfunc_end59-.Ltmp1006         #   Call between .Ltmp1006 and .Lfunc_end59
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end34:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase21:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail21make_object_base_typeEP11_typeobject,"axG",@progbits,_ZN8pybind116detail21make_object_base_typeEP11_typeobject,comdat
	.hidden	_ZN8pybind116detail21make_object_base_typeEP11_typeobject # -- Begin function _ZN8pybind116detail21make_object_base_typeEP11_typeobject
	.weak	_ZN8pybind116detail21make_object_base_typeEP11_typeobject
	.p2align	4, 0x90
	.type	_ZN8pybind116detail21make_object_base_typeEP11_typeobject,@function
_ZN8pybind116detail21make_object_base_typeEP11_typeobject: # @_ZN8pybind116detail21make_object_base_typeEP11_typeobject
.Lfunc_begin35:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception35
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$72, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	leaq	.L.str.164(%rip), %r14
	movq	%r14, %rdi
	callq	PyUnicode_FromString@PLT
	movq	%rax, (%rsp)
.Ltmp1008:
	movq	%rbx, %rdi
	xorl	%esi, %esi
	callq	*304(%rbx)
.Ltmp1009:
# %bb.1:
	movq	%rax, %rbx
	testq	%rax, %rax
	je	.LBB60_2
# %bb.4:
.Ltmp1010:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1011:
# %bb.5:
	movq	(%rax), %rax
	movq	%rax, 856(%rbx)
.Ltmp1012:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1013:
# %bb.6:
	movq	(%rax), %rax
	movq	%rax, 872(%rbx)
	movq	%r14, 24(%rbx)
	movq	PyBaseObject_Type@GOTPCREL(%rip), %rax
	movl	(%rax), %ecx
	incl	%ecx
	je	.LBB60_8
# %bb.7:
	movl	%ecx, (%rax)
.LBB60_8:                               # %_ZN8pybind116detail11type_increfEP11_typeobject.exit
	movq	%rax, 256(%rbx)
	movq	$56, 32(%rbx)
	movq	$1536, 168(%rbx)                # imm = 0x600
	leaq	pybind11_object_new(%rip), %rax
	movq	%rax, 312(%rbx)
	leaq	pybind11_object_init(%rip), %rax
	movq	%rax, 296(%rbx)
	leaq	pybind11_object_dealloc(%rip), %rax
	movq	%rax, 48(%rbx)
	movq	$40, 208(%rbx)
.Ltmp1014:
	movq	%rbx, %rdi
	callq	PyType_Ready@PLT
.Ltmp1015:
# %bb.9:
	testl	%eax, %eax
	js	.LBB60_10
# %bb.21:
.Ltmp1017:
	leaq	.L.str.72(%rip), %rsi
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2EPKc
.Ltmp1018:
# %bb.22:
	movq	8(%rsp), %rdx
.Ltmp1020:
	leaq	.L.str.71(%rip), %rsi
	movq	%rbx, %rdi
	callq	PyObject_SetAttrString@PLT
.Ltmp1021:
# %bb.23:                               # %.noexc
	testl	%eax, %eax
	jne	.LBB60_24
# %bb.29:                               # %_ZN8pybind117setattrENS_6handleEPKcS0_.exit
.Ltmp1031:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1032:
# %bb.30:                               # %_ZN8pybind116objectD2Ev.exit
	testb	$64, 169(%rbx)
	jne	.LBB60_31
# %bb.37:
.Ltmp1034:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1035:
# %bb.38:                               # %_ZN8pybind116objectD2Ev.exit37
	movq	%rbx, %rax
	addq	$72, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB60_2:
	.cfi_def_cfa_offset 96
.Ltmp1046:
	leaq	.L.str.165(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1047:
# %bb.3:
.LBB60_10:
.Ltmp1037:
	leaq	40(%rsp), %rdi
	callq	_ZN8pybind116detail12error_stringB5cxx11Ev
.Ltmp1038:
# %bb.11:
.Ltmp1040:
	leaq	.L.str.166(%rip), %rsi
	leaq	8(%rsp), %rdi
	leaq	40(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp1041:
# %bb.12:
.Ltmp1043:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1044:
# %bb.13:
.LBB60_24:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp1022:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1023:
# %bb.25:
.Ltmp1025:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp1026:
# %bb.26:                               # %.noexc35
.LBB60_31:
	leaq	.L.str.167(%rip), %rdi
	leaq	.L.str.168(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind116detail21make_object_base_typeEP11_typeobject(%rip), %rcx
	movl	$529, %edx                      # imm = 0x211
	callq	__assert_fail@PLT
.LBB60_17:
.Ltmp1045:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB60_19
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB60_19
.LBB60_16:
.Ltmp1042:
	movq	%rax, %rbx
.LBB60_19:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB60_41
# %bb.20:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i32
	movq	56(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB60_41
.LBB60_27:
.Ltmp1024:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB60_33
.LBB60_15:
.Ltmp1039:
	jmp	.LBB60_40
.LBB60_36:
.Ltmp1036:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB60_28:
.Ltmp1033:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB60_35:
.Ltmp1019:
	jmp	.LBB60_40
.LBB60_14:
.Ltmp1016:
	jmp	.LBB60_40
.LBB60_32:
.Ltmp1027:
	movq	%rax, %rbx
.LBB60_33:                              # %.body
.Ltmp1028:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1029:
	jmp	.LBB60_41
.LBB60_34:
.Ltmp1030:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB60_39:
.Ltmp1048:
.LBB60_40:
	movq	%rax, %rbx
.LBB60_41:
.Ltmp1049:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1050:
# %bb.42:                               # %_ZN8pybind116objectD2Ev.exit38
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB60_43:
.Ltmp1051:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end60:
	.size	_ZN8pybind116detail21make_object_base_typeEP11_typeobject, .Lfunc_end60-_ZN8pybind116detail21make_object_base_typeEP11_typeobject
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail21make_object_base_typeEP11_typeobject,"aG",@progbits,_ZN8pybind116detail21make_object_base_typeEP11_typeobject,comdat
	.p2align	2, 0x0
GCC_except_table60:
.Lexception35:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase22-.Lttbaseref22
.Lttbaseref22:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end35-.Lcst_begin35
.Lcst_begin35:
	.uleb128 .Lfunc_begin35-.Lfunc_begin35  # >> Call Site 1 <<
	.uleb128 .Ltmp1008-.Lfunc_begin35       #   Call between .Lfunc_begin35 and .Ltmp1008
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1008-.Lfunc_begin35       # >> Call Site 2 <<
	.uleb128 .Ltmp1013-.Ltmp1008            #   Call between .Ltmp1008 and .Ltmp1013
	.uleb128 .Ltmp1048-.Lfunc_begin35       #     jumps to .Ltmp1048
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1014-.Lfunc_begin35       # >> Call Site 3 <<
	.uleb128 .Ltmp1015-.Ltmp1014            #   Call between .Ltmp1014 and .Ltmp1015
	.uleb128 .Ltmp1016-.Lfunc_begin35       #     jumps to .Ltmp1016
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1017-.Lfunc_begin35       # >> Call Site 4 <<
	.uleb128 .Ltmp1018-.Ltmp1017            #   Call between .Ltmp1017 and .Ltmp1018
	.uleb128 .Ltmp1019-.Lfunc_begin35       #     jumps to .Ltmp1019
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1020-.Lfunc_begin35       # >> Call Site 5 <<
	.uleb128 .Ltmp1021-.Ltmp1020            #   Call between .Ltmp1020 and .Ltmp1021
	.uleb128 .Ltmp1027-.Lfunc_begin35       #     jumps to .Ltmp1027
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1031-.Lfunc_begin35       # >> Call Site 6 <<
	.uleb128 .Ltmp1032-.Ltmp1031            #   Call between .Ltmp1031 and .Ltmp1032
	.uleb128 .Ltmp1033-.Lfunc_begin35       #     jumps to .Ltmp1033
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1034-.Lfunc_begin35       # >> Call Site 7 <<
	.uleb128 .Ltmp1035-.Ltmp1034            #   Call between .Ltmp1034 and .Ltmp1035
	.uleb128 .Ltmp1036-.Lfunc_begin35       #     jumps to .Ltmp1036
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1046-.Lfunc_begin35       # >> Call Site 8 <<
	.uleb128 .Ltmp1047-.Ltmp1046            #   Call between .Ltmp1046 and .Ltmp1047
	.uleb128 .Ltmp1048-.Lfunc_begin35       #     jumps to .Ltmp1048
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1037-.Lfunc_begin35       # >> Call Site 9 <<
	.uleb128 .Ltmp1038-.Ltmp1037            #   Call between .Ltmp1037 and .Ltmp1038
	.uleb128 .Ltmp1039-.Lfunc_begin35       #     jumps to .Ltmp1039
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1040-.Lfunc_begin35       # >> Call Site 10 <<
	.uleb128 .Ltmp1041-.Ltmp1040            #   Call between .Ltmp1040 and .Ltmp1041
	.uleb128 .Ltmp1042-.Lfunc_begin35       #     jumps to .Ltmp1042
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1043-.Lfunc_begin35       # >> Call Site 11 <<
	.uleb128 .Ltmp1044-.Ltmp1043            #   Call between .Ltmp1043 and .Ltmp1044
	.uleb128 .Ltmp1045-.Lfunc_begin35       #     jumps to .Ltmp1045
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1044-.Lfunc_begin35       # >> Call Site 12 <<
	.uleb128 .Ltmp1022-.Ltmp1044            #   Call between .Ltmp1044 and .Ltmp1022
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1022-.Lfunc_begin35       # >> Call Site 13 <<
	.uleb128 .Ltmp1023-.Ltmp1022            #   Call between .Ltmp1022 and .Ltmp1023
	.uleb128 .Ltmp1024-.Lfunc_begin35       #     jumps to .Ltmp1024
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1025-.Lfunc_begin35       # >> Call Site 14 <<
	.uleb128 .Ltmp1026-.Ltmp1025            #   Call between .Ltmp1025 and .Ltmp1026
	.uleb128 .Ltmp1027-.Lfunc_begin35       #     jumps to .Ltmp1027
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1026-.Lfunc_begin35       # >> Call Site 15 <<
	.uleb128 .Ltmp1028-.Ltmp1026            #   Call between .Ltmp1026 and .Ltmp1028
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1028-.Lfunc_begin35       # >> Call Site 16 <<
	.uleb128 .Ltmp1029-.Ltmp1028            #   Call between .Ltmp1028 and .Ltmp1029
	.uleb128 .Ltmp1030-.Lfunc_begin35       #     jumps to .Ltmp1030
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1049-.Lfunc_begin35       # >> Call Site 17 <<
	.uleb128 .Ltmp1050-.Ltmp1049            #   Call between .Ltmp1049 and .Ltmp1050
	.uleb128 .Ltmp1051-.Lfunc_begin35       #     jumps to .Ltmp1051
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1050-.Lfunc_begin35       # >> Call Site 18 <<
	.uleb128 .Lfunc_end60-.Ltmp1050         #   Call between .Ltmp1050 and .Lfunc_end60
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end35:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase22:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1110raise_fromEP7_objectPKc,"axG",@progbits,_ZN8pybind1110raise_fromEP7_objectPKc,comdat
	.hidden	_ZN8pybind1110raise_fromEP7_objectPKc # -- Begin function _ZN8pybind1110raise_fromEP7_objectPKc
	.weak	_ZN8pybind1110raise_fromEP7_objectPKc
	.p2align	4, 0x90
	.type	_ZN8pybind1110raise_fromEP7_objectPKc,@function
_ZN8pybind1110raise_fromEP7_objectPKc:  # @_ZN8pybind1110raise_fromEP7_objectPKc
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$32, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	$0, 24(%rsp)
	movq	$0, 8(%rsp)
	movq	$0, 16(%rsp)
	movq	$0, (%rsp)
	callq	PyErr_Occurred@PLT
	testq	%rax, %rax
	je	.LBB61_12
# %bb.1:
	leaq	24(%rsp), %r15
	leaq	8(%rsp), %r12
	movq	%rsp, %r13
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%r13, %rdx
	callq	PyErr_Fetch@PLT
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%r13, %rdx
	callq	PyErr_NormalizeException@PLT
	movq	(%rsp), %rsi
	testq	%rsi, %rsi
	je	.LBB61_5
# %bb.2:
	movq	8(%rsp), %rdi
	callq	PyException_SetTraceback@PLT
	movq	(%rsp), %rdi
	movq	(%rdi), %rax
	testl	%eax, %eax
	js	.LBB61_5
# %bb.3:
	decq	%rax
	movq	%rax, (%rdi)
	jne	.LBB61_5
# %bb.4:
	callq	_Py_Dealloc@PLT
.LBB61_5:                               # %_ZL9Py_DECREFP7_object.exit
	movq	24(%rsp), %rdi
	movq	(%rdi), %rax
	testl	%eax, %eax
	js	.LBB61_8
# %bb.6:
	decq	%rax
	movq	%rax, (%rdi)
	jne	.LBB61_8
# %bb.7:
	callq	_Py_Dealloc@PLT
.LBB61_8:                               # %_ZL9Py_DECREFP7_object.exit6
	callq	PyErr_Occurred@PLT
	testq	%rax, %rax
	jne	.LBB61_13
# %bb.9:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	PyErr_SetString@PLT
	leaq	24(%rsp), %rbx
	leaq	16(%rsp), %r14
	movq	%rsp, %r15
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	PyErr_Fetch@PLT
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	PyErr_NormalizeException@PLT
	movq	8(%rsp), %rsi
	movl	(%rsi), %eax
	incl	%eax
	je	.LBB61_11
# %bb.10:
	movl	%eax, (%rsi)
	movq	8(%rsp), %rsi
.LBB61_11:                              # %_ZL9Py_INCREFP7_object.exit
	movq	16(%rsp), %rdi
	callq	PyException_SetCause@PLT
	movq	16(%rsp), %rdi
	movq	8(%rsp), %rsi
	callq	PyException_SetContext@PLT
	movq	24(%rsp), %rdi
	movq	16(%rsp), %rsi
	movq	(%rsp), %rdx
	callq	PyErr_Restore@PLT
	addq	$32, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB61_12:
	.cfi_def_cfa_offset 80
	leaq	.L.str.61(%rip), %rdi
	leaq	.L.str.20(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1110raise_fromEP7_objectPKc(%rip), %rcx
	movl	$803, %edx                      # imm = 0x323
	callq	__assert_fail@PLT
.LBB61_13:
	leaq	.L.str.5(%rip), %rdi
	leaq	.L.str.20(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1110raise_fromEP7_objectPKc(%rip), %rcx
	movl	$811, %edx                      # imm = 0x32B
	callq	__assert_fail@PLT
.Lfunc_end61:
	.size	_ZN8pybind1110raise_fromEP7_objectPKc, .Lfunc_end61-_ZN8pybind1110raise_fromEP7_objectPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKR8pybind116handle7inc_refEv,"axG",@progbits,_ZNKR8pybind116handle7inc_refEv,comdat
	.hidden	_ZNKR8pybind116handle7inc_refEv # -- Begin function _ZNKR8pybind116handle7inc_refEv
	.weak	_ZNKR8pybind116handle7inc_refEv
	.p2align	4, 0x90
	.type	_ZNKR8pybind116handle7inc_refEv,@function
_ZNKR8pybind116handle7inc_refEv:        # @_ZNKR8pybind116handle7inc_refEv
.Lfunc_begin36:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception36
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$40, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	leaq	_ZZN8pybind116handle15inc_ref_counterEmE7counter@TLSLD(%rip), %rdi
	callq	__tls_get_addr@PLT
	incq	_ZZN8pybind116handle15inc_ref_counterEmE7counter@DTPOFF(%rax)
	cmpq	$0, (%rbx)
	je	.LBB62_8
# %bb.1:
	callq	PyGILState_Check@PLT
	testl	%eax, %eax
	jne	.LBB62_5
# %bb.2:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
	leaq	24(%rsp), %r14
	movl	$28, %edi
	callq	_Znwm@PLT
	movq	%rax, 8(%rsp)
	movq	$27, 24(%rsp)
	movups	.L.str.60(%rip), %xmm0
	movups	%xmm0, (%rax)
	movups	.L.str.60+11(%rip), %xmm0
	movups	%xmm0, 11(%rax)
	movq	$27, 16(%rsp)
	movb	$0, 27(%rax)
.Ltmp1052:
	leaq	8(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1053:
# %bb.3:
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB62_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB62_5:
	movq	(%rbx), %rax
	testq	%rax, %rax
	je	.LBB62_8
# %bb.6:
	movl	(%rax), %ecx
	incl	%ecx
	je	.LBB62_8
# %bb.7:
	movl	%ecx, (%rax)
.LBB62_8:                               # %_ZL10Py_XINCREFP7_object.exit
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB62_9:
	.cfi_def_cfa_offset 64
.Ltmp1054:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB62_11
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i7
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB62_11:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit9
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end62:
	.size	_ZNKR8pybind116handle7inc_refEv, .Lfunc_end62-_ZNKR8pybind116handle7inc_refEv
	.cfi_endproc
	.section	.gcc_except_table._ZNKR8pybind116handle7inc_refEv,"aG",@progbits,_ZNKR8pybind116handle7inc_refEv,comdat
	.p2align	2, 0x0
GCC_except_table62:
.Lexception36:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end36-.Lcst_begin36
.Lcst_begin36:
	.uleb128 .Lfunc_begin36-.Lfunc_begin36  # >> Call Site 1 <<
	.uleb128 .Ltmp1052-.Lfunc_begin36       #   Call between .Lfunc_begin36 and .Ltmp1052
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1052-.Lfunc_begin36       # >> Call Site 2 <<
	.uleb128 .Ltmp1053-.Ltmp1052            #   Call between .Ltmp1052 and .Ltmp1053
	.uleb128 .Ltmp1054-.Lfunc_begin36       #     jumps to .Ltmp1054
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1053-.Lfunc_begin36       # >> Call Site 3 <<
	.uleb128 .Lfunc_end62-.Ltmp1053         #   Call between .Ltmp1053 and .Lfunc_end62
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end36:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail18dict_getitemstringEP7_objectPKc,"axG",@progbits,_ZN8pybind116detail18dict_getitemstringEP7_objectPKc,comdat
	.hidden	_ZN8pybind116detail18dict_getitemstringEP7_objectPKc # -- Begin function _ZN8pybind116detail18dict_getitemstringEP7_objectPKc
	.weak	_ZN8pybind116detail18dict_getitemstringEP7_objectPKc
	.p2align	4, 0x90
	.type	_ZN8pybind116detail18dict_getitemstringEP7_objectPKc,@function
_ZN8pybind116detail18dict_getitemstringEP7_objectPKc: # @_ZN8pybind116detail18dict_getitemstringEP7_objectPKc
.Lfunc_begin37:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception37
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	movq	%rsi, %rdi
	callq	PyUnicode_FromString@PLT
	testq	%rax, %rax
	je	.LBB63_1
# %bb.3:
	movq	%rax, %rbx
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	PyDict_GetItemWithError@PLT
	movq	(%rbx), %rcx
	testl	%ecx, %ecx
	js	.LBB63_6
# %bb.4:
	decq	%rcx
	movq	%rcx, (%rbx)
	je	.LBB63_5
.LBB63_6:                               # %_ZL9Py_DECREFP7_object.exit
	testq	%rax, %rax
	jne	.LBB63_10
.LBB63_7:
	movq	%rax, %rbx
	callq	PyErr_Occurred@PLT
	movq	%rax, %rcx
	movq	%rbx, %rax
	testq	%rcx, %rcx
	je	.LBB63_10
# %bb.8:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp1055:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1056:
	jmp	.LBB63_2
.LBB63_5:
	movq	%rbx, %rdi
	movq	%rax, %rbx
	callq	_Py_Dealloc@PLT
	movq	%rbx, %rax
	testq	%rax, %rax
	je	.LBB63_7
.LBB63_10:
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB63_1:
	.cfi_def_cfa_offset 32
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp1058:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1059:
.LBB63_2:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.LBB63_9:
.Ltmp1057:
	jmp	.LBB63_12
.LBB63_11:
.Ltmp1060:
.LBB63_12:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end63:
	.size	_ZN8pybind116detail18dict_getitemstringEP7_objectPKc, .Lfunc_end63-_ZN8pybind116detail18dict_getitemstringEP7_objectPKc
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail18dict_getitemstringEP7_objectPKc,"aG",@progbits,_ZN8pybind116detail18dict_getitemstringEP7_objectPKc,comdat
	.p2align	2, 0x0
GCC_except_table63:
.Lexception37:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end37-.Lcst_begin37
.Lcst_begin37:
	.uleb128 .Lfunc_begin37-.Lfunc_begin37  # >> Call Site 1 <<
	.uleb128 .Ltmp1055-.Lfunc_begin37       #   Call between .Lfunc_begin37 and .Ltmp1055
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1055-.Lfunc_begin37       # >> Call Site 2 <<
	.uleb128 .Ltmp1056-.Ltmp1055            #   Call between .Ltmp1055 and .Ltmp1056
	.uleb128 .Ltmp1057-.Lfunc_begin37       #     jumps to .Ltmp1057
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1056-.Lfunc_begin37       # >> Call Site 3 <<
	.uleb128 .Ltmp1058-.Ltmp1056            #   Call between .Ltmp1056 and .Ltmp1058
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1058-.Lfunc_begin37       # >> Call Site 4 <<
	.uleb128 .Ltmp1059-.Ltmp1058            #   Call between .Ltmp1058 and .Ltmp1059
	.uleb128 .Ltmp1060-.Lfunc_begin37       #     jumps to .Ltmp1060
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1059-.Lfunc_begin37       # >> Call Site 5 <<
	.uleb128 .Lfunc_end63-.Ltmp1059         #   Call between .Ltmp1059 and .Lfunc_end63
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end37:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,"axG",@progbits,_ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,comdat
	.weak	_ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev # -- Begin function _ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,@function
_ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev: # @_ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	(%rdi), %r14
	testq	%r14, %r14
	jne	.LBB64_1
.LBB64_4:                               # %.loopexit
	movq	$0, (%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
	.p2align	4, 0x90
.LBB64_3:                               # %_ZNSt16allocator_traitsISaISt14_Fwd_list_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7destroyIS6_EEvRS8_PT_.exit.i
                                        #   in Loop: Header=BB64_1 Depth=1
	.cfi_def_cfa_offset 32
	movl	$40, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%r15, %r14
	testq	%r15, %r15
	je	.LBB64_4
.LBB64_1:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r15
	movq	8(%r14), %rdi
	leaq	24(%r14), %rax
	cmpq	%rax, %rdi
	je	.LBB64_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB64_1 Depth=1
	movq	(%rax), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB64_3
.Lfunc_end64:
	.size	_ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev, .Lfunc_end64-_ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev,"axG",@progbits,_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev,comdat
	.weak	_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev # -- Begin function _ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev,@function
_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev: # @_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r15
	movq	16(%rdi), %r14
	testq	%r14, %r14
	jne	.LBB65_1
.LBB65_4:                               # %_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PvESaIS9_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSB_18_Mod_range_hashingENSB_20_Default_ranged_hashENSB_20_Prime_rehash_policyENSB_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv.exit.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r15)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB65_5
# %bb.6:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
	.p2align	4, 0x90
.LBB65_3:                               # %_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvELb1EEEEE18_M_deallocate_nodeEPSC_.exit.i.i.i
                                        #   in Loop: Header=BB65_1 Depth=1
	.cfi_def_cfa_offset 48
	movl	$56, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%r12, %r14
	testq	%r12, %r12
	je	.LBB65_4
.LBB65_1:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r12
	movq	8(%r14), %rdi
	leaq	24(%r14), %rax
	cmpq	%rax, %rdi
	je	.LBB65_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB65_1 Depth=1
	movq	(%rax), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB65_3
.LBB65_5:                               # %_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PvESaIS9_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSB_18_Mod_range_hashingENSB_20_Default_ranged_hashENSB_20_Prime_rehash_policyENSB_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end65:
	.size	_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev, .Lfunc_end65-_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev,"axG",@progbits,_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev,comdat
	.weak	_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev # -- Begin function _ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev,@function
_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev: # @_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r15
	movq	16(%rdi), %r14
	testq	%r14, %r14
	jne	.LBB66_1
.LBB66_4:                               # %_ZNSt10_HashtableIPK7_objectSt4pairIKS2_St6vectorIPS0_SaIS6_EEESaIS9_ENSt8__detail10_Select1stESt8equal_toIS2_ESt4hashIS2_ENSB_18_Mod_range_hashingENSB_20_Default_ranged_hashENSB_20_Prime_rehash_policyENSB_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv.exit.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r15)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB66_5
# %bb.6:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
	.p2align	4, 0x90
.LBB66_3:                               # %_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKPK7_objectSt6vectorIPS3_SaIS8_EEELb0EEEEE18_M_deallocate_nodeEPSC_.exit.i.i.i
                                        #   in Loop: Header=BB66_1 Depth=1
	.cfi_def_cfa_offset 48
	movl	$40, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%r12, %r14
	testq	%r12, %r12
	je	.LBB66_4
.LBB66_1:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r12
	movq	16(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB66_3
# %bb.2:                                #   in Loop: Header=BB66_1 Depth=1
	movq	32(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB66_3
.LBB66_5:                               # %_ZNSt10_HashtableIPK7_objectSt4pairIKS2_St6vectorIPS0_SaIS6_EEESaIS9_ENSt8__detail10_Select1stESt8equal_toIS2_ESt4hashIS2_ENSB_18_Mod_range_hashingENSB_20_Default_ranged_hashENSB_20_Prime_rehash_policyENSB_17_Hashtable_traitsILb0ELb0ELb1EEEED2Ev.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end66:
	.size	_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev, .Lfunc_end66-_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev,"axG",@progbits,_ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev,comdat
	.weak	_ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev # -- Begin function _ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev,@function
_ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev: # @_ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r15
	movq	16(%rdi), %r14
	testq	%r14, %r14
	jne	.LBB67_1
.LBB67_4:                               # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv.exit.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r15)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB67_5
# %bb.6:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
	.p2align	4, 0x90
.LBB67_3:                               # %_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt10type_indexSt6vectorIPFbP7_objectRPvESaISB_EEELb0EEEEE18_M_deallocate_nodeEPSF_.exit.i.i.i
                                        #   in Loop: Header=BB67_1 Depth=1
	.cfi_def_cfa_offset 48
	movl	$40, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%r12, %r14
	testq	%r12, %r12
	je	.LBB67_4
.LBB67_1:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r12
	movq	16(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB67_3
# %bb.2:                                #   in Loop: Header=BB67_1 Depth=1
	movq	32(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB67_3
.LBB67_5:                               # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEED2Ev.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end67:
	.size	_ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev, .Lfunc_end67-_ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev,"axG",@progbits,_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev,comdat
	.hidden	_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev # -- Begin function _ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev
	.weak	_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev,@function
_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev: # @_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r14
	movq	16(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB68_2
	.p2align	4, 0x90
.LBB68_1:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r15
	movl	$32, %esi
	callq	_ZdlPvm@PLT
	movq	%r15, %rdi
	testq	%r15, %r15
	jne	.LBB68_1
.LBB68_2:                               # %_ZNSt10_HashtableISt4pairIPK7_objectPKcES6_SaIS6_ENSt8__detail9_IdentityESt8equal_toIS6_EN8pybind116detail13override_hashENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb1ELb1ELb1EEEE5clearEv.exit.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r14)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB68_3
# %bb.4:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB68_3:                               # %_ZNSt10_HashtableISt4pairIPK7_objectPKcES6_SaIS6_ENSt8__detail9_IdentityESt8equal_toIS6_EN8pybind116detail13override_hashENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb1ELb1ELb1EEEED2Ev.exit
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end68:
	.size	_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev, .Lfunc_end68-_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev,"axG",@progbits,_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev,comdat
	.hidden	_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev # -- Begin function _ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev
	.weak	_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev,@function
_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev: # @_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r14
	movq	16(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB69_2
	.p2align	4, 0x90
.LBB69_1:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r15
	movl	$24, %esi
	callq	_ZdlPvm@PLT
	movq	%r15, %rdi
	testq	%r15, %r15
	jne	.LBB69_1
.LBB69_2:                               # %_ZNSt10_HashtableIPKvSt4pairIKS1_PN8pybind116detail8instanceEESaIS8_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb0ELb0ELb0EEEE5clearEv.exit.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r14)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB69_3
# %bb.4:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB69_3:                               # %_ZNSt10_HashtableIPKvSt4pairIKS1_PN8pybind116detail8instanceEESaIS8_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb0ELb0ELb0EEEED2Ev.exit
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end69:
	.size	_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev, .Lfunc_end69-_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev,"axG",@progbits,_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev,comdat
	.hidden	_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev # -- Begin function _ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev
	.weak	_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev,@function
_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev: # @_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r15
	movq	16(%rdi), %r14
	testq	%r14, %r14
	jne	.LBB70_1
.LBB70_4:                               # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv.exit.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r15)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB70_5
# %bb.6:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
	.p2align	4, 0x90
.LBB70_3:                               # %_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaISA_EEELb0EEEEE18_M_deallocate_nodeEPSE_.exit.i.i.i
                                        #   in Loop: Header=BB70_1 Depth=1
	.cfi_def_cfa_offset 48
	movl	$40, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%r12, %r14
	testq	%r12, %r12
	je	.LBB70_4
.LBB70_1:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r12
	movq	16(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB70_3
# %bb.2:                                #   in Loop: Header=BB70_1 Depth=1
	movq	32(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB70_3
.LBB70_5:                               # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEED2Ev.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end70:
	.size	_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev, .Lfunc_end70-_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev,"axG",@progbits,_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev,comdat
	.hidden	_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev # -- Begin function _ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev
	.weak	_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev,@function
_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev: # @_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r14
	movq	16(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB71_2
	.p2align	4, 0x90
.LBB71_1:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r15
	movl	$24, %esi
	callq	_ZdlPvm@PLT
	movq	%r15, %rdi
	testq	%r15, %r15
	jne	.LBB71_1
.LBB71_2:                               # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv.exit.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r14)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB71_3
# %bb.4:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB71_3:                               # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEED2Ev.exit
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end71:
	.size	_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev, .Lfunc_end71-_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind113strC2EPKc,"axG",@progbits,_ZN8pybind113strC2EPKc,comdat
	.hidden	_ZN8pybind113strC2EPKc          # -- Begin function _ZN8pybind113strC2EPKc
	.weak	_ZN8pybind113strC2EPKc
	.p2align	4, 0x90
	.type	_ZN8pybind113strC2EPKc,@function
_ZN8pybind113strC2EPKc:                 # @_ZN8pybind113strC2EPKc
.Lfunc_begin38:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception38
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	PyUnicode_FromString@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB72_1
# %bb.8:
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB72_1:
	.cfi_def_cfa_offset 32
.Ltmp1061:
	callq	PyErr_Occurred@PLT
.Ltmp1062:
# %bb.2:
	testq	%rax, %rax
	jne	.LBB72_3
# %bb.6:
.Ltmp1068:
	leaq	.L.str.64(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1069:
# %bb.7:
.LBB72_3:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp1063:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1064:
# %bb.4:
.Ltmp1066:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp1067:
# %bb.12:
.LBB72_5:
.Ltmp1065:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB72_10
.LBB72_9:
.Ltmp1070:
	movq	%rax, %r14
.LBB72_10:
.Ltmp1071:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1072:
# %bb.11:                               # %_ZN8pybind116objectD2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB72_13:
.Ltmp1073:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end72:
	.size	_ZN8pybind113strC2EPKc, .Lfunc_end72-_ZN8pybind113strC2EPKc
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind113strC2EPKc,"aG",@progbits,_ZN8pybind113strC2EPKc,comdat
	.p2align	2, 0x0
GCC_except_table72:
.Lexception38:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase23-.Lttbaseref23
.Lttbaseref23:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end38-.Lcst_begin38
.Lcst_begin38:
	.uleb128 .Lfunc_begin38-.Lfunc_begin38  # >> Call Site 1 <<
	.uleb128 .Ltmp1061-.Lfunc_begin38       #   Call between .Lfunc_begin38 and .Ltmp1061
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1061-.Lfunc_begin38       # >> Call Site 2 <<
	.uleb128 .Ltmp1069-.Ltmp1061            #   Call between .Ltmp1061 and .Ltmp1069
	.uleb128 .Ltmp1070-.Lfunc_begin38       #     jumps to .Ltmp1070
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1069-.Lfunc_begin38       # >> Call Site 3 <<
	.uleb128 .Ltmp1063-.Ltmp1069            #   Call between .Ltmp1069 and .Ltmp1063
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1063-.Lfunc_begin38       # >> Call Site 4 <<
	.uleb128 .Ltmp1064-.Ltmp1063            #   Call between .Ltmp1063 and .Ltmp1064
	.uleb128 .Ltmp1065-.Lfunc_begin38       #     jumps to .Ltmp1065
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1066-.Lfunc_begin38       # >> Call Site 5 <<
	.uleb128 .Ltmp1067-.Ltmp1066            #   Call between .Ltmp1066 and .Ltmp1067
	.uleb128 .Ltmp1070-.Lfunc_begin38       #     jumps to .Ltmp1070
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1067-.Lfunc_begin38       # >> Call Site 6 <<
	.uleb128 .Ltmp1071-.Ltmp1067            #   Call between .Ltmp1067 and .Ltmp1071
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1071-.Lfunc_begin38       # >> Call Site 7 <<
	.uleb128 .Ltmp1072-.Ltmp1071            #   Call between .Ltmp1071 and .Ltmp1072
	.uleb128 .Ltmp1073-.Lfunc_begin38       #     jumps to .Ltmp1073
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1072-.Lfunc_begin38       # >> Call Site 8 <<
	.uleb128 .Lfunc_end72-.Ltmp1072         #   Call between .Ltmp1072 and .Lfunc_end72
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end38:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase23:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail9raise_errEP7_objectPKc,"axG",@progbits,_ZN8pybind116detail9raise_errEP7_objectPKc,comdat
	.hidden	_ZN8pybind116detail9raise_errEP7_objectPKc # -- Begin function _ZN8pybind116detail9raise_errEP7_objectPKc
	.weak	_ZN8pybind116detail9raise_errEP7_objectPKc
	.p2align	4, 0x90
	.type	_ZN8pybind116detail9raise_errEP7_objectPKc,@function
_ZN8pybind116detail9raise_errEP7_objectPKc: # @_ZN8pybind116detail9raise_errEP7_objectPKc
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %r15
	callq	PyErr_Occurred@PLT
	movq	%rax, %rbx
	movq	%r15, %rdi
	movq	%r14, %rsi
	testq	%rax, %rax
	je	.LBB73_2
# %bb.1:
	callq	_ZN8pybind1110raise_fromEP7_objectPKc
	jmp	.LBB73_3
.LBB73_2:
	callq	PyErr_SetString@PLT
.LBB73_3:
	testq	%rbx, %rbx
	setne	%al
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end73:
	.size	_ZN8pybind116detail9raise_errEP7_objectPKc, .Lfunc_end73-_ZN8pybind116detail9raise_errEP7_objectPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
.Lfunc_begin39:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception39
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$24, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	8(%rdi), %rax
	movq	%rax, 8(%rsp)
	testq	%rax, %rax
	je	.LBB74_1
# %bb.2:                                # %_ZNKSt16nested_exception10nested_ptrEv.exit
	movq	%rsi, %rbx
	leaq	8(%rsp), %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv@PLT
	movq	8(%rsp), %rax
	testq	%rax, %rax
	setne	%cl
	cmpq	(%rbx), %rax
	setne	%bl
	andb	%cl, %bl
	cmpb	$1, %bl
	jne	.LBB74_7
# %bb.3:                                # %_ZNSt15__exception_ptr13exception_ptrC2ERKS0_.exit
	movq	%rax, 16(%rsp)
	leaq	16(%rsp), %r14
	movq	%r14, %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv@PLT
.Ltmp1074:
	movq	%r14, %rdi
	callq	_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE
.Ltmp1075:
# %bb.4:
	cmpq	$0, 16(%rsp)
	je	.LBB74_6
# %bb.5:
	leaq	16(%rsp), %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
.LBB74_6:                               # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit6thread-pre-split
	movq	8(%rsp), %rax
.LBB74_7:                               # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit6
	testq	%rax, %rax
	je	.LBB74_9
# %bb.8:
	leaq	8(%rsp), %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
	jmp	.LBB74_9
.LBB74_1:
	xorl	%ebx, %ebx
.LBB74_9:                               # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit14
	movl	%ebx, %eax
	addq	$24, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB74_10:
	.cfi_def_cfa_offset 48
.Ltmp1076:
	movq	%rax, %rbx
	cmpq	$0, 16(%rsp)
	jne	.LBB74_11
# %bb.12:                               # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit8
	cmpq	$0, 8(%rsp)
	jne	.LBB74_13
.LBB74_14:                              # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit10
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB74_11:
	leaq	16(%rsp), %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
	cmpq	$0, 8(%rsp)
	je	.LBB74_14
.LBB74_13:
	leaq	8(%rsp), %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end74:
	.size	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end74-_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE,"aG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE,comdat
	.p2align	2, 0x0
GCC_except_table74:
.Lexception39:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end39-.Lcst_begin39
.Lcst_begin39:
	.uleb128 .Ltmp1074-.Lfunc_begin39       # >> Call Site 1 <<
	.uleb128 .Ltmp1075-.Ltmp1074            #   Call between .Ltmp1074 and .Ltmp1075
	.uleb128 .Ltmp1076-.Lfunc_begin39       #     jumps to .Ltmp1076
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1075-.Lfunc_begin39       # >> Call Site 2 <<
	.uleb128 .Lfunc_end74-.Ltmp1075         #   Call between .Ltmp1075 and .Lfunc_end74
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end39:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	_ZTISt9exception@GOTPCREL(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB75_1
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	jmp	.LBB75_3
.LBB75_1:
                                        # implicit-def: $al
.LBB75_3:
	testq	%r14, %r14
	setne	%cl
	andb	%al, %cl
	movl	%ecx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end75:
	.size	_ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end75-_ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	_ZTISt14overflow_error@GOTPCREL(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB76_1
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	jmp	.LBB76_3
.LBB76_1:
                                        # implicit-def: $al
.LBB76_3:
	testq	%r14, %r14
	setne	%cl
	andb	%al, %cl
	movl	%ecx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end76:
	.size	_ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end76-_ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	_ZTISt11range_error@GOTPCREL(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB77_1
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	jmp	.LBB77_3
.LBB77_1:
                                        # implicit-def: $al
.LBB77_3:
	testq	%r14, %r14
	setne	%cl
	andb	%al, %cl
	movl	%ecx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end77:
	.size	_ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end77-_ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	_ZTISt12out_of_range@GOTPCREL(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB78_1
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	jmp	.LBB78_3
.LBB78_1:
                                        # implicit-def: $al
.LBB78_3:
	testq	%r14, %r14
	setne	%cl
	andb	%al, %cl
	movl	%ecx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end78:
	.size	_ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end78-_ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	_ZTISt12length_error@GOTPCREL(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB79_1
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	jmp	.LBB79_3
.LBB79_1:
                                        # implicit-def: $al
.LBB79_3:
	testq	%r14, %r14
	setne	%cl
	andb	%al, %cl
	movl	%ecx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end79:
	.size	_ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end79-_ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB80_1
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	jmp	.LBB80_3
.LBB80_1:
                                        # implicit-def: $al
.LBB80_3:
	testq	%r14, %r14
	setne	%cl
	andb	%al, %cl
	movl	%ecx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end80:
	.size	_ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end80-_ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	_ZTISt12domain_error@GOTPCREL(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB81_1
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	jmp	.LBB81_3
.LBB81_1:
                                        # implicit-def: $al
.LBB81_3:
	testq	%r14, %r14
	setne	%cl
	andb	%al, %cl
	movl	%ecx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end81:
	.size	_ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end81-_ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	_ZTISt9bad_alloc@GOTPCREL(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB82_1
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	jmp	.LBB82_3
.LBB82_1:
                                        # implicit-def: $al
.LBB82_3:
	testq	%r14, %r14
	setne	%cl
	andb	%al, %cl
	movl	%ecx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end82:
	.size	_ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end82-_ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB83_1
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	jmp	.LBB83_3
.LBB83_1:
                                        # implicit-def: $al
.LBB83_3:
	testq	%r14, %r14
	setne	%cl
	andb	%al, %cl
	movl	%ecx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end83:
	.size	_ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end83-_ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail25error_fetch_and_normalize7restoreEv,"axG",@progbits,_ZN8pybind116detail25error_fetch_and_normalize7restoreEv,comdat
	.hidden	_ZN8pybind116detail25error_fetch_and_normalize7restoreEv # -- Begin function _ZN8pybind116detail25error_fetch_and_normalize7restoreEv
	.weak	_ZN8pybind116detail25error_fetch_and_normalize7restoreEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail25error_fetch_and_normalize7restoreEv,@function
_ZN8pybind116detail25error_fetch_and_normalize7restoreEv: # @_ZN8pybind116detail25error_fetch_and_normalize7restoreEv
.Lfunc_begin40:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception40
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$32, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	cmpb	$1, 57(%rdi)
	je	.LBB84_1
# %bb.6:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rax), %r14
	leaq	8(%rbx), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rax), %r15
	leaq	16(%rbx), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rax), %rdx
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	PyErr_Restore@PLT
	movb	$1, 57(%rbx)
	addq	$32, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB84_1:
	.cfi_def_cfa_offset 64
	movq	%rbx, %rdi
	callq	_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev
	leaq	.L.str.67(%rip), %rsi
	movq	%rsp, %rbx
	movq	%rbx, %rdi
	movq	%rax, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_@PLT
.Ltmp1077:
	movq	%rbx, %rdi
	callq	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1078:
# %bb.2:
.LBB84_3:
.Ltmp1079:
	movq	%rax, %rbx
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB84_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB84_5:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end84:
	.size	_ZN8pybind116detail25error_fetch_and_normalize7restoreEv, .Lfunc_end84-_ZN8pybind116detail25error_fetch_and_normalize7restoreEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail25error_fetch_and_normalize7restoreEv,"aG",@progbits,_ZN8pybind116detail25error_fetch_and_normalize7restoreEv,comdat
	.p2align	2, 0x0
GCC_except_table84:
.Lexception40:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end40-.Lcst_begin40
.Lcst_begin40:
	.uleb128 .Lfunc_begin40-.Lfunc_begin40  # >> Call Site 1 <<
	.uleb128 .Ltmp1077-.Lfunc_begin40       #   Call between .Lfunc_begin40 and .Ltmp1077
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1077-.Lfunc_begin40       # >> Call Site 2 <<
	.uleb128 .Ltmp1078-.Ltmp1077            #   Call between .Ltmp1077 and .Ltmp1078
	.uleb128 .Ltmp1079-.Lfunc_begin40       #     jumps to .Ltmp1079
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1078-.Lfunc_begin40       # >> Call Site 3 <<
	.uleb128 .Lfunc_end84-.Ltmp1078         #   Call between .Ltmp1078 and .Lfunc_end84
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end40:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text.pybind11_static_get,"axG",@progbits,pybind11_static_get,comdat
	.hidden	pybind11_static_get             # -- Begin function pybind11_static_get
	.weak	pybind11_static_get
	.p2align	4, 0x90
	.type	pybind11_static_get,@function
pybind11_static_get:                    # @pybind11_static_get
	.cfi_startproc
# %bb.0:
	movq	PyProperty_Type@GOTPCREL(%rip), %rax
	movq	272(%rax), %rax
	movq	%rdx, %rsi
	jmpq	*%rax                           # TAILCALL
.Lfunc_end85:
	.size	pybind11_static_get, .Lfunc_end85-pybind11_static_get
	.cfi_endproc
                                        # -- End function
	.section	.text.pybind11_static_set,"axG",@progbits,pybind11_static_set,comdat
	.hidden	pybind11_static_set             # -- Begin function pybind11_static_set
	.weak	pybind11_static_set
	.p2align	4, 0x90
	.type	pybind11_static_set,@function
pybind11_static_set:                    # @pybind11_static_set
	.cfi_startproc
# %bb.0:
	movq	8(%rsi), %rax
	cmpl	$0, 168(%rax)
	cmovnsq	%rax, %rsi
	movq	PyProperty_Type@GOTPCREL(%rip), %rax
	movq	280(%rax), %rax
	jmpq	*%rax                           # TAILCALL
.Lfunc_end86:
	.size	pybind11_static_set, .Lfunc_end86-pybind11_static_set
	.cfi_endproc
                                        # -- End function
	.section	.text.pybind11_traverse,"axG",@progbits,pybind11_traverse,comdat
	.hidden	pybind11_traverse               # -- Begin function pybind11_traverse
	.weak	pybind11_traverse
	.p2align	4, 0x90
	.type	pybind11_traverse,@function
pybind11_traverse:                      # @pybind11_traverse
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %rbx
	movq	%rdi, %r15
	callq	_PyObject_GetDictPtr@PLT
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB87_2
# %bb.1:
	movq	%r14, %rsi
	callq	*%rbx
	testl	%eax, %eax
	je	.LBB87_2
.LBB87_5:
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB87_2:
	.cfi_def_cfa_offset 32
	movq	8(%r15), %rdi
	testq	%rdi, %rdi
	je	.LBB87_4
# %bb.3:
	movq	%r14, %rsi
	callq	*%rbx
	testl	%eax, %eax
	jne	.LBB87_5
.LBB87_4:
	xorl	%eax, %eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end87:
	.size	pybind11_traverse, .Lfunc_end87-pybind11_traverse
	.cfi_endproc
                                        # -- End function
	.section	.text.pybind11_clear,"axG",@progbits,pybind11_clear,comdat
	.hidden	pybind11_clear                  # -- Begin function pybind11_clear
	.weak	pybind11_clear
	.p2align	4, 0x90
	.type	pybind11_clear,@function
pybind11_clear:                         # @pybind11_clear
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	callq	_PyObject_GetDictPtr@PLT
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB88_4
# %bb.1:
	movq	$0, (%rax)
	movq	(%rdi), %rax
	testl	%eax, %eax
	js	.LBB88_4
# %bb.2:
	decq	%rax
	movq	%rax, (%rdi)
	je	.LBB88_3
.LBB88_4:                               # %_ZL9Py_DECREFP7_object.exit
	xorl	%eax, %eax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.LBB88_3:
	.cfi_def_cfa_offset 16
	callq	_Py_Dealloc@PLT
	xorl	%eax, %eax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end88:
	.size	pybind11_clear, .Lfunc_end88-pybind11_clear
	.cfi_endproc
                                        # -- End function
	.section	.text.pybind11_meta_call,"axG",@progbits,pybind11_meta_call,comdat
	.hidden	pybind11_meta_call              # -- Begin function pybind11_meta_call
	.weak	pybind11_meta_call
	.p2align	4, 0x90
	.type	pybind11_meta_call,@function
pybind11_meta_call:                     # @pybind11_meta_call
.Lfunc_begin41:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception41
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	PyType_Type@GOTPCREL(%rip), %rax
	callq	*128(%rax)
	testq	%rax, %rax
	je	.LBB89_34
# %bb.1:
	movq	%rax, %rbx
	movq	8(%rax), %r15
	movq	%r15, %rdi
	callq	_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
	movq	%rax, %r14
	testb	$1, %dl
	je	.LBB89_3
# %bb.2:
	movq	%r14, %rsi
	addq	$16, %rsi
	movq	%r15, %rdi
	callq	_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE
.LBB89_3:                               # %_ZN8pybind116detail13all_type_infoEP11_typeobject.exit.i
	movq	16(%r14), %rax
	movq	24(%r14), %r15
	cmpq	%r15, %rax
	je	.LBB89_35
# %bb.4:                                # %.lr.ph
	movq	(%rax), %r13
	subq	%rax, %r15
	sarq	$3, %r15
	movzbl	48(%rbx), %eax
	xorl	%r12d, %r12d
	jmp	.LBB89_6
	.p2align	4, 0x90
.LBB89_5:                               #   in Loop: Header=BB89_6 Depth=1
	movq	(%rcx,%r12,8), %r13
	cmpq	%r15, %r12
	je	.LBB89_35
.LBB89_6:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB89_11 Depth 2
	testb	$2, %al
	jne	.LBB89_8
# %bb.7:                                #   in Loop: Header=BB89_6 Depth=1
	movq	24(%rbx), %rcx
	movzbl	(%rcx,%r12), %ecx
	andb	$1, %cl
	testb	%cl, %cl
	jne	.LBB89_14
	jmp	.LBB89_9
	.p2align	4, 0x90
.LBB89_8:                               #   in Loop: Header=BB89_6 Depth=1
	movl	%eax, %ecx
	andb	$4, %cl
	testb	%cl, %cl
	jne	.LBB89_14
.LBB89_9:                               #   in Loop: Header=BB89_6 Depth=1
	testq	%r12, %r12
	je	.LBB89_17
# %bb.10:                               # %.lr.ph.i.preheader
                                        #   in Loop: Header=BB89_6 Depth=1
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB89_11:                              # %.lr.ph.i
                                        #   Parent Loop BB89_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	16(%r14), %rax
	movq	(%rax,%rbp,8), %rcx
	movq	(%rcx), %rdi
	movq	(%rax,%r12,8), %rax
	movq	(%rax), %rsi
	callq	PyType_IsSubtype@PLT
	testl	%eax, %eax
	jne	.LBB89_13
# %bb.12:                               #   in Loop: Header=BB89_11 Depth=2
	incq	%rbp
	cmpq	%rbp, %r12
	jne	.LBB89_11
	jmp	.LBB89_17
.LBB89_13:                              # %_ZN8pybind116detail18values_and_holders29is_redundant_value_and_holderERKNS0_16value_and_holderE.exit.loopexit
                                        #   in Loop: Header=BB89_6 Depth=1
	movzbl	48(%rbx), %eax
.LBB89_14:                              # %._crit_edge.i
                                        #   in Loop: Header=BB89_6 Depth=1
	movq	16(%r14), %rcx
	movq	24(%r14), %rdx
	incq	%r12
	subq	%rcx, %rdx
	sarq	$3, %rdx
	cmpq	%rdx, %r12
	jb	.LBB89_5
# %bb.15:                               #   in Loop: Header=BB89_6 Depth=1
	xorl	%r13d, %r13d
	cmpq	%r15, %r12
	jne	.LBB89_6
	jmp	.LBB89_35
.LBB89_17:                              # %.loopexit
	movq	PyExc_TypeError@GOTPCREL(%rip), %rax
	movq	(%rax), %r14
	movq	(%r13), %rax
	movq	24(%rax), %r15
	leaq	24(%rsp), %rbp
	movq	%rbp, 8(%rsp)
	testq	%r15, %r15
	je	.LBB89_37
# %bb.18:
	movq	%r15, %rdi
	callq	strlen@PLT
	movq	%rax, %r12
	movq	%rbp, %r13
	cmpq	$16, %rax
	jb	.LBB89_22
# %bb.19:
	testq	%r12, %r12
	js	.LBB89_38
# %bb.20:
	movq	%r12, %rdi
	incq	%rdi
	js	.LBB89_36
# %bb.21:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i
	callq	_Znwm@PLT
	movq	%rax, %r13
	movq	%rax, 8(%rsp)
	movq	%r12, 24(%rsp)
.LBB89_22:                              # %._crit_edge.i.i.i
	testq	%r12, %r12
	je	.LBB89_26
# %bb.23:                               # %._crit_edge.i.i.i
	cmpq	$1, %r12
	jne	.LBB89_25
# %bb.24:
	movzbl	(%r15), %eax
	movb	%al, (%r13)
	jmp	.LBB89_26
.LBB89_25:
	movq	%r13, %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB89_26:                              # %_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject.exit
	movq	%r12, 16(%rsp)
	movb	$0, (%r13,%r12)
	movq	8(%rsp), %rdx
.Ltmp1080:
	leaq	.L.str.77(%rip), %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	callq	PyErr_Format@PLT
.Ltmp1081:
# %bb.27:                               # %.critedge
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB89_29
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB89_29:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	(%rbx), %rax
	testl	%eax, %eax
	js	.LBB89_34
# %bb.30:
	decq	%rax
	movq	%rax, (%rbx)
	jne	.LBB89_34
# %bb.33:
	movq	%rbx, %rdi
	callq	_Py_Dealloc@PLT
.LBB89_34:                              # %_ZL9Py_DECREFP7_object.exit
	xorl	%ebx, %ebx
.LBB89_35:                              # %_ZL9Py_DECREFP7_object.exit
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB89_36:                              # %.noexc11.i.i
	.cfi_def_cfa_offset 96
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB89_37:                              # %.noexc.i
	leaq	.L.str.35(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.LBB89_38:                              # %.noexc.i.i
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB89_39:
.Ltmp1082:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB89_41
# %bb.40:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i21
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB89_41:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit23
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end89:
	.size	pybind11_meta_call, .Lfunc_end89-pybind11_meta_call
	.cfi_endproc
	.section	.gcc_except_table.pybind11_meta_call,"aG",@progbits,pybind11_meta_call,comdat
	.p2align	2, 0x0
GCC_except_table89:
.Lexception41:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end41-.Lcst_begin41
.Lcst_begin41:
	.uleb128 .Lfunc_begin41-.Lfunc_begin41  # >> Call Site 1 <<
	.uleb128 .Ltmp1080-.Lfunc_begin41       #   Call between .Lfunc_begin41 and .Ltmp1080
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1080-.Lfunc_begin41       # >> Call Site 2 <<
	.uleb128 .Ltmp1081-.Ltmp1080            #   Call between .Ltmp1080 and .Ltmp1081
	.uleb128 .Ltmp1082-.Lfunc_begin41       #     jumps to .Ltmp1082
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1081-.Lfunc_begin41       # >> Call Site 3 <<
	.uleb128 .Lfunc_end89-.Ltmp1081         #   Call between .Ltmp1081 and .Lfunc_end89
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end41:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text.pybind11_meta_setattro,"axG",@progbits,pybind11_meta_setattro,comdat
	.hidden	pybind11_meta_setattro          # -- Begin function pybind11_meta_setattro
	.weak	pybind11_meta_setattro
	.p2align	4, 0x90
	.type	pybind11_meta_setattro,@function
pybind11_meta_setattro:                 # @pybind11_meta_setattro
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %rbx
	movq	%rsi, %r15
	movq	%rdi, %r14
	callq	_PyType_Lookup@PLT
	movq	%rax, %r12
	callq	_ZN8pybind116detail13get_internalsEv
	testq	%r12, %r12
	sete	%cl
	testq	%rbx, %rbx
	sete	%dl
	orb	%cl, %dl
	jne	.LBB90_5
# %bb.1:
	movq	408(%rax), %r13
	movq	%r12, %rdi
	movq	%r13, %rsi
	callq	PyObject_IsInstance@PLT
	testl	%eax, %eax
	je	.LBB90_5
# %bb.2:
	movq	%rbx, %rdi
	movq	%r13, %rsi
	callq	PyObject_IsInstance@PLT
	testl	%eax, %eax
	je	.LBB90_3
.LBB90_5:                               # %.critedge
	movq	PyType_Type@GOTPCREL(%rip), %rax
	movq	152(%rax), %rax
	movq	%r14, %rdi
	movq	%r15, %rsi
.LBB90_4:
	movq	%rbx, %rdx
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmpq	*%rax                           # TAILCALL
.LBB90_3:
	.cfi_def_cfa_offset 48
	movq	8(%r12), %rax
	movq	280(%rax), %rax
	movq	%r12, %rdi
	movq	%r14, %rsi
	jmp	.LBB90_4
.Lfunc_end90:
	.size	pybind11_meta_setattro, .Lfunc_end90-pybind11_meta_setattro
	.cfi_endproc
                                        # -- End function
	.section	.text.pybind11_meta_getattro,"axG",@progbits,pybind11_meta_getattro,comdat
	.hidden	pybind11_meta_getattro          # -- Begin function pybind11_meta_getattro
	.weak	pybind11_meta_getattro
	.p2align	4, 0x90
	.type	pybind11_meta_getattro,@function
pybind11_meta_getattro:                 # @pybind11_meta_getattro
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	callq	_PyType_Lookup@PLT
	testq	%rax, %rax
	je	.LBB91_5
# %bb.1:
	movq	8(%rax), %rcx
	cmpq	PyInstanceMethod_Type@GOTPCREL(%rip), %rcx
	je	.LBB91_2
.LBB91_5:
	movq	PyType_Type@GOTPCREL(%rip), %rax
	movq	144(%rax), %rax
	movq	%r14, %rdi
	movq	%rbx, %rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmpq	*%rax                           # TAILCALL
.LBB91_2:
	.cfi_def_cfa_offset 32
	movl	(%rax), %ecx
	incl	%ecx
	je	.LBB91_4
# %bb.3:
	movl	%ecx, (%rax)
.LBB91_4:                               # %_ZL9Py_INCREFP7_object.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end91:
	.size	pybind11_meta_getattro, .Lfunc_end91-pybind11_meta_getattro
	.cfi_endproc
                                        # -- End function
	.section	.text.pybind11_meta_dealloc,"axG",@progbits,pybind11_meta_dealloc,comdat
	.hidden	pybind11_meta_dealloc           # -- Begin function pybind11_meta_dealloc
	.weak	pybind11_meta_dealloc
	.p2align	4, 0x90
	.type	pybind11_meta_dealloc,@function
pybind11_meta_dealloc:                  # @pybind11_meta_dealloc
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	%rdi, 8(%rsp)
	callq	_ZN8pybind116detail13get_internalsEv
	leaq	8(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_
	movq	PyType_Type@GOTPCREL(%rip), %rax
	movq	%rbx, %rdi
	callq	*48(%rax)
	addq	$16, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end92:
	.size	pybind11_meta_dealloc, .Lfunc_end92-pybind11_meta_dealloc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject,"axG",@progbits,_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject,comdat
	.hidden	_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject # -- Begin function _ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject
	.weak	_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject
	.p2align	4, 0x90
	.type	_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject,@function
_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject: # @_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	24(%rsi), %r14
	leaq	16(%rdi), %r12
	movq	%r12, (%rdi)
	testq	%r14, %r14
	je	.LBB93_10
# %bb.1:
	movq	%rdi, %rbx
	movq	%r14, %rdi
	callq	strlen@PLT
	movq	%rax, %r15
	cmpq	$16, %rax
	jb	.LBB93_5
# %bb.2:
	testq	%r15, %r15
	js	.LBB93_11
# %bb.3:
	movq	%r15, %rdi
	incq	%rdi
	js	.LBB93_12
# %bb.4:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
	callq	_Znwm@PLT
	movq	%rax, %r12
	movq	%rax, (%rbx)
	movq	%r15, 16(%rbx)
.LBB93_5:                               # %._crit_edge.i.i
	testq	%r15, %r15
	je	.LBB93_9
# %bb.6:                                # %._crit_edge.i.i
	cmpq	$1, %r15
	jne	.LBB93_8
# %bb.7:
	movzbl	(%r14), %eax
	movb	%al, (%r12)
	jmp	.LBB93_9
.LBB93_8:
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB93_9:
	movq	%r15, 8(%rbx)
	movb	$0, (%r12,%r15)
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB93_12:                              # %.noexc11.i
	.cfi_def_cfa_offset 48
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB93_10:                              # %.noexc
	leaq	.L.str.35(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.LBB93_11:                              # %.noexc.i
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end93:
	.size	_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject, .Lfunc_end93-_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject,"axG",@progbits,_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject,comdat
	.hidden	_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject # -- Begin function _ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
	.weak	_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject,@function
_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject: # @_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
.Lfunc_begin42:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception42
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$40, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	callq	_ZN8pybind116detail13get_internalsEv
	movq	%rax, %r15
	movq	64(%rax), %rsi
	addq	$56, %r15
	movq	%rbx, %rax
	orq	%rsi, %rax
	shrq	$32, %rax
	je	.LBB94_2
# %bb.1:
	movq	%rbx, %rax
	xorl	%edx, %edx
	divq	%rsi
	movq	%rdx, %r12
	movq	(%r15), %rax
	movq	(%rax,%r12,8), %rax
	testq	%rax, %rax
	jne	.LBB94_3
	jmp	.LBB94_10
.LBB94_2:
	movl	%ebx, %eax
	xorl	%edx, %edx
	divl	%esi
	movl	%edx, %r12d
	movq	(%r15), %rax
	movq	(%rax,%r12,8), %rax
	testq	%rax, %rax
	je	.LBB94_10
.LBB94_3:
	movq	(%rax), %r14
	cmpq	%rbx, 8(%r14)
	jne	.LBB94_4
.LBB94_15:
	xorl	%edx, %edx
	jmp	.LBB94_16
	.p2align	4, 0x90
.LBB94_7:                               #   in Loop: Header=BB94_4 Depth=1
	movl	%ecx, %eax
	xorl	%edx, %edx
	divl	%esi
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%r12, %rdx
	jne	.LBB94_10
.LBB94_8:                               #   in Loop: Header=BB94_4 Depth=1
	cmpq	%rbx, %rcx
	je	.LBB94_15
.LBB94_4:                               # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB94_10
# %bb.5:                                #   in Loop: Header=BB94_4 Depth=1
	movq	8(%r14), %rcx
	movq	%rcx, %rax
	orq	%rsi, %rax
	shrq	$32, %rax
	je	.LBB94_7
# %bb.6:                                #   in Loop: Header=BB94_4 Depth=1
	movq	%rcx, %rax
	xorl	%edx, %edx
	divq	%rsi
	cmpq	%r12, %rdx
	je	.LBB94_8
.LBB94_10:                              # %.critedge.i.i.i.i
	movq	%r15, 16(%rsp)
	movl	$40, %edi
	callq	_Znwm@PLT
	movq	$0, (%rax)
	movq	%rbx, 8(%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rax)
	movq	$0, 32(%rax)
	movq	%rax, 24(%rsp)
.Ltmp1083:
	movl	$1, %r8d
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%rbx, %rdx
	movq	%rax, %rcx
	callq	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm
.Ltmp1084:
# %bb.11:
	movq	%rax, %r14
	movq	%rbx, 32(%rsp)
	leaq	8(%rsp), %rdi
	leaq	32(%rsp), %rsi
	callq	_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_
	movq	8(%rsp), %rdx
.Ltmp1086:
	leaq	16(%rsp), %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind117weakrefC2ENS_6handleES1_
.Ltmp1087:
# %bb.12:
	movq	$0, 16(%rsp)
.Ltmp1092:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1093:
# %bb.13:                               # %_ZN8pybind116objectD2Ev.exit
.Ltmp1095:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1096:
# %bb.14:                               # %_ZN8pybind116objectD2Ev.exit9
	movb	$1, %dl
.LBB94_16:                              # %_ZN8pybind116detail14with_internalsIZNS0_23all_type_info_get_cacheEP11_typeobjectEUlRNS0_9internalsEE_EEDTclfp_clL_ZNS0_13get_internalsEvEEEERKT_.exit.thread
	movq	%r14, %rax
                                        # kill: def $dl killed $dl killed $edx
	addq	$40, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB94_17:
	.cfi_def_cfa_offset 80
.Ltmp1097:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB94_18:
.Ltmp1094:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB94_19:
.Ltmp1088:
	movq	%rax, %rbx
.Ltmp1089:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1090:
	jmp	.LBB94_22
.LBB94_20:
.Ltmp1091:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB94_21:
.Ltmp1085:
	movq	%rax, %rbx
	leaq	16(%rsp), %rdi
	callq	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev
.LBB94_22:                              # %common.resume
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end94:
	.size	_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject, .Lfunc_end94-_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject,"aG",@progbits,_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject,comdat
	.p2align	2, 0x0
GCC_except_table94:
.Lexception42:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase24-.Lttbaseref24
.Lttbaseref24:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end42-.Lcst_begin42
.Lcst_begin42:
	.uleb128 .Lfunc_begin42-.Lfunc_begin42  # >> Call Site 1 <<
	.uleb128 .Ltmp1083-.Lfunc_begin42       #   Call between .Lfunc_begin42 and .Ltmp1083
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1083-.Lfunc_begin42       # >> Call Site 2 <<
	.uleb128 .Ltmp1084-.Ltmp1083            #   Call between .Ltmp1083 and .Ltmp1084
	.uleb128 .Ltmp1085-.Lfunc_begin42       #     jumps to .Ltmp1085
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1084-.Lfunc_begin42       # >> Call Site 3 <<
	.uleb128 .Ltmp1086-.Ltmp1084            #   Call between .Ltmp1084 and .Ltmp1086
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1086-.Lfunc_begin42       # >> Call Site 4 <<
	.uleb128 .Ltmp1087-.Ltmp1086            #   Call between .Ltmp1086 and .Ltmp1087
	.uleb128 .Ltmp1088-.Lfunc_begin42       #     jumps to .Ltmp1088
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1092-.Lfunc_begin42       # >> Call Site 5 <<
	.uleb128 .Ltmp1093-.Ltmp1092            #   Call between .Ltmp1092 and .Ltmp1093
	.uleb128 .Ltmp1094-.Lfunc_begin42       #     jumps to .Ltmp1094
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1095-.Lfunc_begin42       # >> Call Site 6 <<
	.uleb128 .Ltmp1096-.Ltmp1095            #   Call between .Ltmp1095 and .Ltmp1096
	.uleb128 .Ltmp1097-.Lfunc_begin42       #     jumps to .Ltmp1097
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1089-.Lfunc_begin42       # >> Call Site 7 <<
	.uleb128 .Ltmp1090-.Ltmp1089            #   Call between .Ltmp1089 and .Ltmp1090
	.uleb128 .Ltmp1091-.Lfunc_begin42       #     jumps to .Ltmp1091
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1090-.Lfunc_begin42       # >> Call Site 8 <<
	.uleb128 .Lfunc_end94-.Ltmp1090         #   Call between .Ltmp1090 and .Lfunc_end94
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end42:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase24:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE,"axG",@progbits,_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE,comdat
	.hidden	_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE # -- Begin function _ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE
	.weak	_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE,@function
_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE: # @_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE
.Lfunc_begin43:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception43
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	(%rsi), %rax
	cmpq	8(%rsi), %rax
	jne	.LBB95_112
# %bb.1:                                # %_ZN8pybind1118reinterpret_borrowINS_5tupleEEET_NS_6handleE.exit
	movq	%rsi, %r15
	movq	336(%rdi), %rax
	movq	%rax, 16(%rsp)
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	16(%rsp), %rcx
	movq	8(%rcx), %rsi
	movq	168(%rsi), %rdx
	leaq	24(%rcx), %rax
	movq	%rax, %rbx
	testl	$33554432, %edx                 # imm = 0x2000000
	je	.LBB95_3
# %bb.2:
	movq	(%rax), %rbx
.LBB95_3:                               # %_ZNK8pybind115tuple5beginEv.exit
	testl	$67108864, %edx                 # imm = 0x4000000
	je	.LBB95_109
# %bb.4:
	cmpq	PyLong_Type@GOTPCREL(%rip), %rsi
	je	.LBB95_110
# %bb.5:
	cmpq	PyBool_Type@GOTPCREL(%rip), %rsi
	je	.LBB95_111
# %bb.6:                                # %_ZL16PyTuple_GET_SIZEP7_object.exit.i
	movq	16(%rcx), %rcx
	testl	$33554432, %edx                 # imm = 0x2000000
	je	.LBB95_8
# %bb.7:
	movq	(%rax), %rax
.LBB95_8:
	leaq	(%rax,%rcx,8), %rax
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	cmpq	%rax, %rbx
	movq	%r15, 40(%rsp)                  # 8-byte Spill
	je	.LBB95_26
# %bb.9:                                # %.lr.ph.preheader
	xorl	%eax, %eax
	xorl	%r12d, %r12d
	xorl	%r13d, %r13d
	jmp	.LBB95_12
	.p2align	4, 0x90
.LBB95_10:                              #   in Loop: Header=BB95_12 Depth=1
	movq	%r14, (%r12)
	movq	8(%rsp), %rax                   # 8-byte Reload
	movq	%rax, %rbp
	addq	$8, %r12
	addq	$8, %rbx
	cmpq	32(%rsp), %rbx                  # 8-byte Folded Reload
	je	.LBB95_27
.LBB95_12:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	%rax, 8(%rsp)                   # 8-byte Spill
	movq	(%rbx), %r14
	cmpq	%r13, %r12
	jne	.LBB95_10
# %bb.13:                               #   in Loop: Header=BB95_12 Depth=1
	movq	%r12, 24(%rsp)                  # 8-byte Spill
	subq	8(%rsp), %r12                   # 8-byte Folded Reload
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %r12
	je	.LBB95_107
# %bb.14:                               # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i
                                        #   in Loop: Header=BB95_12 Depth=1
	movq	%r12, %r15
	sarq	$3, %r15
	cmpq	$1, %r15
	movq	%r15, %rax
	adcq	$0, %rax
	leaq	(%rax,%r15), %rcx
	movabsq	$1152921504606846975, %rdx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rdx, %rcx
	jb	.LBB95_15
# %bb.23:                               # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i
                                        #   in Loop: Header=BB95_12 Depth=1
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	movabsq	$1152921504606846975, %r13      # imm = 0xFFFFFFFFFFFFFFF
	addq	%r15, %rax
	jae	.LBB95_24
.LBB95_16:                              # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i
                                        #   in Loop: Header=BB95_12 Depth=1
	testq	%r13, %r13
	je	.LBB95_25
.LBB95_17:                              #   in Loop: Header=BB95_12 Depth=1
	leaq	(,%r13,8), %rdi
.Ltmp1098:
	callq	_Znwm@PLT
.Ltmp1099:
# %bb.18:                               #   in Loop: Header=BB95_12 Depth=1
	movq	%rax, %rbp
	movq	%r14, (%rbp,%r15,8)
	testq	%r12, %r12
	movq	8(%rsp), %r14                   # 8-byte Reload
	jle	.LBB95_20
.LBB95_19:                              #   in Loop: Header=BB95_12 Depth=1
	movq	%rbp, %rdi
	movq	%r14, %rsi
	movq	%r12, %rdx
	callq	memmove@PLT
.LBB95_20:                              # %_ZNSt6vectorIP11_typeobjectSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit16.i.i.i
                                        #   in Loop: Header=BB95_12 Depth=1
	testq	%r14, %r14
	movq	40(%rsp), %r15                  # 8-byte Reload
	je	.LBB95_22
# %bb.21:                               #   in Loop: Header=BB95_12 Depth=1
	movq	%r14, %rdi
	movq	%r12, %rsi
	callq	_ZdlPvm@PLT
.LBB95_22:                              # %_ZNSt6vectorIP11_typeobjectSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_.exit.i.i
                                        #   in Loop: Header=BB95_12 Depth=1
	addq	%rbp, %r12
	leaq	(,%r13,8), %r13
	addq	%rbp, %r13
	movq	%rbp, %rax
	addq	$8, %r12
	addq	$8, %rbx
	cmpq	32(%rsp), %rbx                  # 8-byte Folded Reload
	jne	.LBB95_12
	jmp	.LBB95_27
	.p2align	4, 0x90
.LBB95_15:                              # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i
                                        #   in Loop: Header=BB95_12 Depth=1
	movabsq	$1152921504606846975, %r13      # imm = 0xFFFFFFFFFFFFFFF
	addq	%r15, %rax
	jb	.LBB95_16
.LBB95_24:                              # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i
                                        #   in Loop: Header=BB95_12 Depth=1
	movq	%rcx, %r13
	testq	%r13, %r13
	jne	.LBB95_17
.LBB95_25:                              #   in Loop: Header=BB95_12 Depth=1
	xorl	%ebp, %ebp
	movq	%r14, (%rbp,%r15,8)
	testq	%r12, %r12
	movq	8(%rsp), %r14                   # 8-byte Reload
	jg	.LBB95_19
	jmp	.LBB95_20
.LBB95_26:
	xorl	%r13d, %r13d
	xorl	%r12d, %r12d
	xorl	%ebp, %ebp
.LBB95_27:                              # %._crit_edge
.Ltmp1107:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1108:
# %bb.28:                               # %_ZN8pybind116objectD2Ev.exit
.Ltmp1110:
	callq	_ZN8pybind116detail13get_internalsEv
.Ltmp1111:
# %bb.29:
	movq	%r12, %r8
	subq	%rbp, %r8
	je	.LBB95_100
# %bb.30:                               # %.lr.ph268
	movq	%rax, %r11
	sarq	$3, %r8
	addq	$72, %rax
	movq	%rax, 72(%rsp)                  # 8-byte Spill
	xorl	%r14d, %r14d
	movq	%r12, %rax
	movq	%r13, %r12
	movq	%rax, %r13
	movq	%r11, 64(%rsp)                  # 8-byte Spill
	jmp	.LBB95_33
.LBB95_31:                              #   in Loop: Header=BB95_33 Depth=1
	movq	8(%rsp), %rbp                   # 8-byte Reload
	movq	64(%rsp), %r11                  # 8-byte Reload
	movq	48(%rsp), %r14                  # 8-byte Reload
	movq	56(%rsp), %r13                  # 8-byte Reload
	.p2align	4, 0x90
.LBB95_32:                              # %.loopexit169
                                        #   in Loop: Header=BB95_33 Depth=1
	incq	%r14
	movq	%r13, %r8
	subq	%rbp, %r8
	sarq	$3, %r8
	cmpq	%r8, %r14
	jae	.LBB95_99
.LBB95_33:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB95_42 Depth 2
                                        #     Child Loop BB95_38 Depth 2
                                        #     Child Loop BB95_52 Depth 2
                                        #       Child Loop BB95_53 Depth 3
                                        #       Child Loop BB95_56 Depth 3
                                        #     Child Loop BB95_85 Depth 2
	movq	(%rbp,%r14,8), %rcx
	movq	8(%rcx), %rax
	testb	$-128, 171(%rax)
	je	.LBB95_32
# %bb.34:                               #   in Loop: Header=BB95_33 Depth=1
	cmpq	$0, 80(%r11)
	je	.LBB95_37
# %bb.35:                               #   in Loop: Header=BB95_33 Depth=1
	movq	64(%r11), %r9
	movq	%rcx, %rax
	orq	%r9, %rax
	shrq	$32, %rax
	je	.LBB95_40
# %bb.36:                               #   in Loop: Header=BB95_33 Depth=1
	movq	%rcx, %rax
	xorl	%edx, %edx
	divq	%r9
	movq	%rdx, %rsi
	movq	56(%r11), %rax
	movq	(%rax,%rsi,8), %rax
	testq	%rax, %rax
	jne	.LBB95_41
	jmp	.LBB95_71
.LBB95_37:                              # %.preheader.preheader
                                        #   in Loop: Header=BB95_33 Depth=1
	movq	72(%rsp), %r10                  # 8-byte Reload
	.p2align	4, 0x90
.LBB95_38:                              # %.preheader
                                        #   Parent Loop BB95_33 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	(%r10), %r10
	testq	%r10, %r10
	je	.LBB95_71
# %bb.39:                               #   in Loop: Header=BB95_38 Depth=2
	cmpq	8(%r10), %rcx
	jne	.LBB95_38
	jmp	.LBB95_47
.LBB95_40:                              #   in Loop: Header=BB95_33 Depth=1
	movl	%ecx, %eax
	xorl	%edx, %edx
	divl	%r9d
	movl	%edx, %esi
	movq	56(%r11), %rax
	movq	(%rax,%rsi,8), %rax
	testq	%rax, %rax
	je	.LBB95_71
.LBB95_41:                              #   in Loop: Header=BB95_33 Depth=1
	movq	(%rax), %r10
	cmpq	8(%r10), %rcx
	jne	.LBB95_42
.LBB95_47:                              # %_ZNKSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEE4findERSE_.exit
                                        #   in Loop: Header=BB95_33 Depth=1
	movq	16(%r10), %rbx
	movq	24(%r10), %rax
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	cmpq	%rax, %rbx
	je	.LBB95_32
# %bb.48:                               # %.lr.ph249.preheader
                                        #   in Loop: Header=BB95_33 Depth=1
	movq	%r13, 56(%rsp)                  # 8-byte Spill
	movq	%r14, 48(%rsp)                  # 8-byte Spill
	movq	%rbp, 8(%rsp)                   # 8-byte Spill
	movq	%r12, 24(%rsp)                  # 8-byte Spill
	jmp	.LBB95_52
	.p2align	4, 0x90
.LBB95_60:                              # %.critedge.thread
                                        #   in Loop: Header=BB95_52 Depth=2
	movq	%r14, 16(%rsp)
	cmpq	16(%r15), %r13
	je	.LBB95_61
.LBB95_49:                              #   in Loop: Header=BB95_52 Depth=2
	movq	%r14, (%r13)
	addq	$8, 8(%r15)
.LBB95_50:                              # %_ZN8pybind116detail41all_type_info_add_base_most_derived_firstERSt6vectorIPNS0_9type_infoESaIS3_EES3_.exit
                                        #   in Loop: Header=BB95_52 Depth=2
	movq	40(%rsp), %r15                  # 8-byte Reload
	movq	24(%rsp), %r12                  # 8-byte Reload
.LBB95_51:                              # %.loopexit314
                                        #   in Loop: Header=BB95_52 Depth=2
	addq	$8, %rbx
	cmpq	32(%rsp), %rbx                  # 8-byte Folded Reload
	je	.LBB95_31
.LBB95_52:                              # %.lr.ph249
                                        #   Parent Loop BB95_33 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB95_53 Depth 3
                                        #       Child Loop BB95_56 Depth 3
	movq	(%rbx), %r14
	movq	(%r15), %rbp
	movq	8(%r15), %r13
	movq	%rbp, %rax
	cmpq	%r13, %rbp
	je	.LBB95_60
	.p2align	4, 0x90
.LBB95_53:                              # %.lr.ph247
                                        #   Parent Loop BB95_33 Depth=1
                                        #     Parent Loop BB95_52 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	cmpq	%r14, (%rax)
	je	.LBB95_51
# %bb.54:                               #   in Loop: Header=BB95_53 Depth=3
	addq	$8, %rax
	cmpq	%r13, %rax
	jne	.LBB95_53
# %bb.55:                               # %.critedge
                                        #   in Loop: Header=BB95_52 Depth=2
	movq	%r14, 16(%rsp)
	cmpq	%r13, %rbp
	je	.LBB95_59
	.p2align	4, 0x90
.LBB95_56:                              # %.lr.ph.i
                                        #   Parent Loop BB95_33 Depth=1
                                        #     Parent Loop BB95_52 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	(%rbp), %rax
	movq	(%r14), %rdi
	movq	(%rax), %rsi
.Ltmp1113:
	callq	PyType_IsSubtype@PLT
.Ltmp1114:
# %bb.57:                               # %.noexc74
                                        #   in Loop: Header=BB95_56 Depth=3
	testl	%eax, %eax
	jne	.LBB95_69
# %bb.58:                               # %.critedge.i
                                        #   in Loop: Header=BB95_56 Depth=3
	addq	$8, %rbp
	movq	8(%r15), %r13
	cmpq	%r13, %rbp
	jne	.LBB95_56
.LBB95_59:                              # %._crit_edge.i
                                        #   in Loop: Header=BB95_52 Depth=2
	cmpq	16(%r15), %r13
	jne	.LBB95_49
.LBB95_61:                              #   in Loop: Header=BB95_52 Depth=2
	movq	(%r15), %rax
	movq	%rax, 80(%rsp)                  # 8-byte Spill
	subq	%rax, %r13
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %r13
	je	.LBB95_105
# %bb.62:                               # %_ZNKSt6vectorIPN8pybind116detail9type_infoESaIS3_EE12_M_check_lenEmPKc.exit.i.i.i
                                        #   in Loop: Header=BB95_52 Depth=2
	movq	%r13, %rbp
	sarq	$3, %rbp
	cmpq	$1, %rbp
	movq	%rbp, %rax
	adcq	$0, %rax
	leaq	(%rax,%rbp), %r15
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rcx, %r15
	cmovaeq	%rcx, %r15
	addq	%rbp, %rax
	movabsq	$1152921504606846975, %rax      # imm = 0xFFFFFFFFFFFFFFF
	cmovbq	%rax, %r15
	testq	%r15, %r15
	je	.LBB95_70
# %bb.63:                               #   in Loop: Header=BB95_52 Depth=2
	leaq	(,%r15,8), %rdi
.Ltmp1118:
	callq	_Znwm@PLT
.Ltmp1119:
# %bb.64:                               #   in Loop: Header=BB95_52 Depth=2
	movq	%rax, %r12
	movq	%r14, (%r12,%rbp,8)
	testq	%r13, %r13
	movq	80(%rsp), %r14                  # 8-byte Reload
	jle	.LBB95_66
.LBB95_65:                              #   in Loop: Header=BB95_52 Depth=2
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%r13, %rdx
	callq	memmove@PLT
.LBB95_66:                              # %_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_.exit16.i.i.i
                                        #   in Loop: Header=BB95_52 Depth=2
	testq	%r14, %r14
	je	.LBB95_68
# %bb.67:                               #   in Loop: Header=BB95_52 Depth=2
	movq	%r14, %rdi
	movq	%r13, %rsi
	callq	_ZdlPvm@PLT
.LBB95_68:                              # %_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_.exit.i.i
                                        #   in Loop: Header=BB95_52 Depth=2
	leaq	(%r12,%r13), %rax
	addq	$8, %rax
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	%r12, (%rcx)
	movq	%rax, 8(%rcx)
	leaq	(%r12,%r15,8), %rax
	movq	%rax, 16(%rcx)
	jmp	.LBB95_50
.LBB95_69:                              #   in Loop: Header=BB95_52 Depth=2
.Ltmp1116:
	movq	%r15, %rdi
	movq	%rbp, %rsi
	leaq	16(%rsp), %rdx
	callq	_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_
.Ltmp1117:
	jmp	.LBB95_50
.LBB95_70:                              #   in Loop: Header=BB95_52 Depth=2
	xorl	%r12d, %r12d
	movq	%r14, (%r12,%rbp,8)
	testq	%r13, %r13
	movq	80(%rsp), %r14                  # 8-byte Reload
	jg	.LBB95_65
	jmp	.LBB95_66
	.p2align	4, 0x90
.LBB95_45:                              #   in Loop: Header=BB95_42 Depth=2
	movl	%edi, %eax
	xorl	%edx, %edx
	divl	%r9d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rsi, %rdx
	jne	.LBB95_71
.LBB95_46:                              #   in Loop: Header=BB95_42 Depth=2
	cmpq	%rdi, %rcx
	je	.LBB95_47
.LBB95_42:                              # %.lr.ph.i.i.i.i
                                        #   Parent Loop BB95_33 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	(%r10), %r10
	testq	%r10, %r10
	je	.LBB95_71
# %bb.43:                               #   in Loop: Header=BB95_42 Depth=2
	movq	8(%r10), %rdi
	movq	%rdi, %rax
	orq	%r9, %rax
	shrq	$32, %rax
	je	.LBB95_45
# %bb.44:                               #   in Loop: Header=BB95_42 Depth=2
	movq	%rdi, %rax
	xorl	%edx, %edx
	divq	%r9
	cmpq	%rsi, %rdx
	je	.LBB95_46
	.p2align	4, 0x90
.LBB95_71:                              # %.loopexit173
                                        #   in Loop: Header=BB95_33 Depth=1
	movq	336(%rcx), %rax
	testq	%rax, %rax
	je	.LBB95_32
# %bb.72:                               #   in Loop: Header=BB95_33 Depth=1
	movq	%rbp, 8(%rsp)                   # 8-byte Spill
	movq	%r14, 48(%rsp)                  # 8-byte Spill
	leaq	1(%r14), %rcx
	xorl	%r14d, %r14d
	cmpq	%r8, %rcx
	sete	24(%rsp)                        # 1-byte Folded Spill
	setne	%bpl
	movq	%rax, 16(%rsp)
.Ltmp1124:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1125:
# %bb.73:                               # %_ZN8pybind1118reinterpret_borrowINS_5tupleEEET_NS_6handleE.exit79
                                        #   in Loop: Header=BB95_33 Depth=1
	movq	16(%rsp), %rax
	movq	8(%rax), %rsi
	movq	168(%rsi), %rdx
	leaq	24(%rax), %rcx
	movq	%rcx, %rbx
	testl	$33554432, %edx                 # imm = 0x2000000
	je	.LBB95_75
# %bb.74:                               #   in Loop: Header=BB95_33 Depth=1
	movq	(%rcx), %rbx
.LBB95_75:                              # %_ZNK8pybind115tuple5beginEv.exit84
                                        #   in Loop: Header=BB95_33 Depth=1
	testl	$67108864, %edx                 # imm = 0x4000000
	je	.LBB95_109
# %bb.76:                               #   in Loop: Header=BB95_33 Depth=1
	cmpq	PyLong_Type@GOTPCREL(%rip), %rsi
	je	.LBB95_110
# %bb.77:                               #   in Loop: Header=BB95_33 Depth=1
	cmpq	PyBool_Type@GOTPCREL(%rip), %rsi
	je	.LBB95_111
# %bb.78:                               # %_ZL16PyTuple_GET_SIZEP7_object.exit.i91
                                        #   in Loop: Header=BB95_33 Depth=1
	testl	$33554432, %edx                 # imm = 0x2000000
	je	.LBB95_80
# %bb.79:                               #   in Loop: Header=BB95_33 Depth=1
	movq	(%rcx), %rcx
.LBB95_80:                              #   in Loop: Header=BB95_33 Depth=1
	movb	%bpl, %r14b
	leaq	-8(%r13,%r14,8), %r13
	movq	16(%rax), %rax
	leaq	(%rcx,%rax,8), %rsi
	cmpq	%rsi, %rbx
	movq	%rsi, 32(%rsp)                  # 8-byte Spill
	jne	.LBB95_85
.LBB95_81:                              # %._crit_edge257
                                        #   in Loop: Header=BB95_33 Depth=1
.Ltmp1136:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1137:
	movq	8(%rsp), %rbp                   # 8-byte Reload
	movq	64(%rsp), %r11                  # 8-byte Reload
# %bb.82:                               # %_ZN8pybind116objectD2Ev.exit94
                                        #   in Loop: Header=BB95_33 Depth=1
	xorl	%eax, %eax
	movzbl	24(%rsp), %ecx                  # 1-byte Folded Reload
	movb	%cl, %al
	movq	48(%rsp), %r14                  # 8-byte Reload
	subq	%rax, %r14
	jmp	.LBB95_32
	.p2align	4, 0x90
.LBB95_83:                              #   in Loop: Header=BB95_85 Depth=2
	movq	%r14, (%r13)
	addq	$8, %r13
	addq	$8, %rbx
	cmpq	%rsi, %rbx
	je	.LBB95_81
.LBB95_85:                              # %.lr.ph256
                                        #   Parent Loop BB95_33 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	(%rbx), %r14
	cmpq	%r12, %r13
	jne	.LBB95_83
# %bb.86:                               #   in Loop: Header=BB95_85 Depth=2
	movq	%r13, 56(%rsp)                  # 8-byte Spill
	subq	8(%rsp), %r13                   # 8-byte Folded Reload
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %r13
	je	.LBB95_103
# %bb.87:                               # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i96
                                        #   in Loop: Header=BB95_85 Depth=2
	movq	%r13, %r12
	sarq	$3, %r12
	cmpq	$1, %r12
	movq	%r12, %rax
	adcq	$0, %rax
	leaq	(%rax,%r12), %rcx
	movabsq	$1152921504606846975, %rdx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rdx, %rcx
	jb	.LBB95_88
# %bb.96:                               # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i96
                                        #   in Loop: Header=BB95_85 Depth=2
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	movabsq	$1152921504606846975, %r15      # imm = 0xFFFFFFFFFFFFFFF
	addq	%r12, %rax
	jae	.LBB95_97
.LBB95_89:                              # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i96
                                        #   in Loop: Header=BB95_85 Depth=2
	testq	%r15, %r15
	je	.LBB95_98
.LBB95_90:                              #   in Loop: Header=BB95_85 Depth=2
	leaq	(,%r15,8), %rdi
.Ltmp1127:
	callq	_Znwm@PLT
.Ltmp1128:
# %bb.91:                               #   in Loop: Header=BB95_85 Depth=2
	movq	%rax, %rbp
	movq	%r14, (%rbp,%r12,8)
	testq	%r13, %r13
	movq	8(%rsp), %r14                   # 8-byte Reload
	jle	.LBB95_93
.LBB95_92:                              #   in Loop: Header=BB95_85 Depth=2
	movq	%rbp, %rdi
	movq	%r14, %rsi
	movq	%r13, %rdx
	callq	memmove@PLT
.LBB95_93:                              # %_ZNSt6vectorIP11_typeobjectSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit16.i.i.i100
                                        #   in Loop: Header=BB95_85 Depth=2
	testq	%r14, %r14
	je	.LBB95_95
# %bb.94:                               #   in Loop: Header=BB95_85 Depth=2
	movq	%r14, %rdi
	movq	%r13, %rsi
	callq	_ZdlPvm@PLT
.LBB95_95:                              # %_ZNSt6vectorIP11_typeobjectSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_.exit.i.i102
                                        #   in Loop: Header=BB95_85 Depth=2
	addq	%rbp, %r13
	leaq	(,%r15,8), %r12
	addq	%rbp, %r12
	movq	%rbp, 8(%rsp)                   # 8-byte Spill
	movq	40(%rsp), %r15                  # 8-byte Reload
	movq	32(%rsp), %rsi                  # 8-byte Reload
	addq	$8, %r13
	addq	$8, %rbx
	cmpq	%rsi, %rbx
	jne	.LBB95_85
	jmp	.LBB95_81
	.p2align	4, 0x90
.LBB95_88:                              # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i96
                                        #   in Loop: Header=BB95_85 Depth=2
	movabsq	$1152921504606846975, %r15      # imm = 0xFFFFFFFFFFFFFFF
	addq	%r12, %rax
	jb	.LBB95_89
.LBB95_97:                              # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i96
                                        #   in Loop: Header=BB95_85 Depth=2
	movq	%rcx, %r15
	testq	%r15, %r15
	jne	.LBB95_90
.LBB95_98:                              #   in Loop: Header=BB95_85 Depth=2
	xorl	%ebp, %ebp
	movq	%r14, (%rbp,%r12,8)
	testq	%r13, %r13
	movq	8(%rsp), %r14                   # 8-byte Reload
	jg	.LBB95_92
	jmp	.LBB95_93
.LBB95_99:
	movq	%r12, %r13
.LBB95_100:                             # %._crit_edge269
	testq	%rbp, %rbp
	je	.LBB95_102
# %bb.101:
	subq	%rbp, %r13
	movq	%rbp, %rdi
	movq	%r13, %rsi
	callq	_ZdlPvm@PLT
.LBB95_102:                             # %_ZNSt6vectorIP11_typeobjectSaIS1_EED2Ev.exit
	addq	$88, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB95_103:
	.cfi_def_cfa_offset 144
.Ltmp1130:
	leaq	.L.str.106(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1131:
# %bb.104:                              # %.noexc103
.LBB95_105:
.Ltmp1121:
	leaq	.L.str.106(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1122:
# %bb.106:                              # %.noexc76
.LBB95_107:
.Ltmp1101:
	leaq	.L.str.106(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1102:
# %bb.108:                              # %.noexc
.LBB95_109:
	leaq	.L.str.137(%rip), %rdi
	leaq	.L.str.138(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL16PyTuple_GET_SIZEP7_object(%rip), %rcx
	movl	$23, %edx
	callq	__assert_fail@PLT
.LBB95_110:
	leaq	.L.str.139(%rip), %rdi
	leaq	.L.str.140(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object(%rip), %rcx
	movl	$231, %edx
	callq	__assert_fail@PLT
.LBB95_111:
	leaq	.L.str.141(%rip), %rdi
	leaq	.L.str.140(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object(%rip), %rcx
	movl	$232, %edx
	callq	__assert_fail@PLT
.LBB95_112:
	leaq	.L.str.161(%rip), %rdi
	leaq	.L.str.162(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE(%rip), %rcx
	movl	$115, %edx
	callq	__assert_fail@PLT
.LBB95_113:
.Ltmp1112:
	movq	%rax, %r14
	movq	%r13, %r12
	movq	%rbp, 8(%rsp)                   # 8-byte Spill
	jmp	.LBB95_132
.LBB95_114:
.Ltmp1109:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB95_115:
.Ltmp1126:
	jmp	.LBB95_131
.LBB95_116:
.Ltmp1138:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB95_117:                             # %.loopexit176
.Ltmp1100:
	jmp	.LBB95_119
.LBB95_118:                             # %.loopexit.split-lp177
.Ltmp1103:
.LBB95_119:
	movq	%rax, %r14
.Ltmp1104:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1105:
# %bb.120:                              # %_ZN8pybind116objectD2Ev.exit67
	movq	24(%rsp), %r12                  # 8-byte Reload
	jmp	.LBB95_132
.LBB95_121:
.Ltmp1106:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB95_122:                             # %.loopexit164
.Ltmp1129:
	jmp	.LBB95_127
.LBB95_123:                             # %.loopexit.split-lp.loopexit.split-lp
.Ltmp1123:
	jmp	.LBB95_125
.LBB95_124:                             # %.loopexit.split-lp.loopexit
.Ltmp1120:
.LBB95_125:                             # %.loopexit.split-lp
	movq	%rax, %r14
	movq	24(%rsp), %r12                  # 8-byte Reload
	jmp	.LBB95_132
.LBB95_126:                             # %.loopexit.split-lp165
.Ltmp1132:
.LBB95_127:
	movq	%rax, %r14
.Ltmp1133:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1134:
# %bb.128:                              # %_ZN8pybind116objectD2Ev.exit106
	movq	56(%rsp), %r12                  # 8-byte Reload
	jmp	.LBB95_132
.LBB95_129:
.Ltmp1135:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB95_130:                             # %.loopexit
.Ltmp1115:
.LBB95_131:                             # %.loopexit.split-lp
	movq	%rax, %r14
.LBB95_132:                             # %.loopexit.split-lp
	movq	8(%rsp), %rdi                   # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB95_134
# %bb.133:
	subq	%rdi, %r12
	movq	%r12, %rsi
	callq	_ZdlPvm@PLT
.LBB95_134:                             # %_ZNSt6vectorIP11_typeobjectSaIS1_EED2Ev.exit108
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end95:
	.size	_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE, .Lfunc_end95-_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE,"aG",@progbits,_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE,comdat
	.p2align	2, 0x0
GCC_except_table95:
.Lexception43:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase25-.Lttbaseref25
.Lttbaseref25:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end43-.Lcst_begin43
.Lcst_begin43:
	.uleb128 .Lfunc_begin43-.Lfunc_begin43  # >> Call Site 1 <<
	.uleb128 .Ltmp1098-.Lfunc_begin43       #   Call between .Lfunc_begin43 and .Ltmp1098
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1098-.Lfunc_begin43       # >> Call Site 2 <<
	.uleb128 .Ltmp1099-.Ltmp1098            #   Call between .Ltmp1098 and .Ltmp1099
	.uleb128 .Ltmp1100-.Lfunc_begin43       #     jumps to .Ltmp1100
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1099-.Lfunc_begin43       # >> Call Site 3 <<
	.uleb128 .Ltmp1107-.Ltmp1099            #   Call between .Ltmp1099 and .Ltmp1107
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1107-.Lfunc_begin43       # >> Call Site 4 <<
	.uleb128 .Ltmp1108-.Ltmp1107            #   Call between .Ltmp1107 and .Ltmp1108
	.uleb128 .Ltmp1109-.Lfunc_begin43       #     jumps to .Ltmp1109
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1110-.Lfunc_begin43       # >> Call Site 5 <<
	.uleb128 .Ltmp1111-.Ltmp1110            #   Call between .Ltmp1110 and .Ltmp1111
	.uleb128 .Ltmp1112-.Lfunc_begin43       #     jumps to .Ltmp1112
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1113-.Lfunc_begin43       # >> Call Site 6 <<
	.uleb128 .Ltmp1114-.Ltmp1113            #   Call between .Ltmp1113 and .Ltmp1114
	.uleb128 .Ltmp1115-.Lfunc_begin43       #     jumps to .Ltmp1115
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1118-.Lfunc_begin43       # >> Call Site 7 <<
	.uleb128 .Ltmp1119-.Ltmp1118            #   Call between .Ltmp1118 and .Ltmp1119
	.uleb128 .Ltmp1120-.Lfunc_begin43       #     jumps to .Ltmp1120
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1119-.Lfunc_begin43       # >> Call Site 8 <<
	.uleb128 .Ltmp1116-.Ltmp1119            #   Call between .Ltmp1119 and .Ltmp1116
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1116-.Lfunc_begin43       # >> Call Site 9 <<
	.uleb128 .Ltmp1117-.Ltmp1116            #   Call between .Ltmp1116 and .Ltmp1117
	.uleb128 .Ltmp1120-.Lfunc_begin43       #     jumps to .Ltmp1120
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1124-.Lfunc_begin43       # >> Call Site 10 <<
	.uleb128 .Ltmp1125-.Ltmp1124            #   Call between .Ltmp1124 and .Ltmp1125
	.uleb128 .Ltmp1126-.Lfunc_begin43       #     jumps to .Ltmp1126
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1136-.Lfunc_begin43       # >> Call Site 11 <<
	.uleb128 .Ltmp1137-.Ltmp1136            #   Call between .Ltmp1136 and .Ltmp1137
	.uleb128 .Ltmp1138-.Lfunc_begin43       #     jumps to .Ltmp1138
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1127-.Lfunc_begin43       # >> Call Site 12 <<
	.uleb128 .Ltmp1128-.Ltmp1127            #   Call between .Ltmp1127 and .Ltmp1128
	.uleb128 .Ltmp1129-.Lfunc_begin43       #     jumps to .Ltmp1129
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1128-.Lfunc_begin43       # >> Call Site 13 <<
	.uleb128 .Ltmp1130-.Ltmp1128            #   Call between .Ltmp1128 and .Ltmp1130
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1130-.Lfunc_begin43       # >> Call Site 14 <<
	.uleb128 .Ltmp1131-.Ltmp1130            #   Call between .Ltmp1130 and .Ltmp1131
	.uleb128 .Ltmp1132-.Lfunc_begin43       #     jumps to .Ltmp1132
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1121-.Lfunc_begin43       # >> Call Site 15 <<
	.uleb128 .Ltmp1122-.Ltmp1121            #   Call between .Ltmp1121 and .Ltmp1122
	.uleb128 .Ltmp1123-.Lfunc_begin43       #     jumps to .Ltmp1123
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1101-.Lfunc_begin43       # >> Call Site 16 <<
	.uleb128 .Ltmp1102-.Ltmp1101            #   Call between .Ltmp1101 and .Ltmp1102
	.uleb128 .Ltmp1103-.Lfunc_begin43       #     jumps to .Ltmp1103
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1104-.Lfunc_begin43       # >> Call Site 17 <<
	.uleb128 .Ltmp1105-.Ltmp1104            #   Call between .Ltmp1104 and .Ltmp1105
	.uleb128 .Ltmp1106-.Lfunc_begin43       #     jumps to .Ltmp1106
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1133-.Lfunc_begin43       # >> Call Site 18 <<
	.uleb128 .Ltmp1134-.Ltmp1133            #   Call between .Ltmp1133 and .Ltmp1134
	.uleb128 .Ltmp1135-.Lfunc_begin43       #     jumps to .Ltmp1135
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1134-.Lfunc_begin43       # >> Call Site 19 <<
	.uleb128 .Lfunc_end95-.Ltmp1134         #   Call between .Ltmp1134 and .Lfunc_end95
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end43:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase25:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_,"axG",@progbits,_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_,comdat
	.hidden	_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_ # -- Begin function _ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_
	.weak	_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_
	.p2align	4, 0x90
	.type	_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_,@function
_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_: # @_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_
.Lfunc_begin44:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception44
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	$0, (%rdi)
.Ltmp1139:
	movq	%rsp, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind1112cpp_function20make_function_recordEv
.Ltmp1140:
# %bb.1:                                # %.noexc
	movq	(%rsp), %rax
	movq	(%r14), %rcx
	movq	%rcx, 56(%rax)
	leaq	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_(%rip), %rcx
	movq	%rcx, 48(%rax)
	movw	$1, 94(%rax)
	andb	$63, 89(%rax)
.Ltmp1142:
	leaq	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature(%rip), %rdx
	leaq	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types(%rip), %rcx
	movq	%rsp, %rsi
	movl	$1, %r8d
	movq	%rbx, %rdi
	callq	_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom
.Ltmp1143:
# %bb.2:
	movq	(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB96_4
# %bb.3:
.Ltmp1148:
	xorl	%esi, %esi
	callq	_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb
.Ltmp1149:
.LBB96_4:
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB96_5:
	.cfi_def_cfa_offset 32
.Ltmp1150:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB96_6:
.Ltmp1144:
	movq	%rax, %r14
	movq	%rsp, %rdi
	callq	_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev
	jmp	.LBB96_8
.LBB96_7:
.Ltmp1141:
	movq	%rax, %r14
.LBB96_8:                               # %.body
.Ltmp1145:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1146:
# %bb.9:                                # %_ZN8pybind116objectD2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB96_10:
.Ltmp1147:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end96:
	.size	_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_, .Lfunc_end96-_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_,"aG",@progbits,_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_,comdat
	.p2align	2, 0x0
GCC_except_table96:
.Lexception44:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase26-.Lttbaseref26
.Lttbaseref26:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end44-.Lcst_begin44
.Lcst_begin44:
	.uleb128 .Ltmp1139-.Lfunc_begin44       # >> Call Site 1 <<
	.uleb128 .Ltmp1140-.Ltmp1139            #   Call between .Ltmp1139 and .Ltmp1140
	.uleb128 .Ltmp1141-.Lfunc_begin44       #     jumps to .Ltmp1141
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1142-.Lfunc_begin44       # >> Call Site 2 <<
	.uleb128 .Ltmp1143-.Ltmp1142            #   Call between .Ltmp1142 and .Ltmp1143
	.uleb128 .Ltmp1144-.Lfunc_begin44       #     jumps to .Ltmp1144
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1148-.Lfunc_begin44       # >> Call Site 3 <<
	.uleb128 .Ltmp1149-.Ltmp1148            #   Call between .Ltmp1148 and .Ltmp1149
	.uleb128 .Ltmp1150-.Lfunc_begin44       #     jumps to .Ltmp1150
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1145-.Lfunc_begin44       # >> Call Site 4 <<
	.uleb128 .Ltmp1146-.Ltmp1145            #   Call between .Ltmp1145 and .Ltmp1146
	.uleb128 .Ltmp1147-.Lfunc_begin44       #     jumps to .Ltmp1147
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1146-.Lfunc_begin44       # >> Call Site 5 <<
	.uleb128 .Lfunc_end96-.Ltmp1146         #   Call between .Ltmp1146 and .Lfunc_end96
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end44:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase26:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind117weakrefC2ENS_6handleES1_,"axG",@progbits,_ZN8pybind117weakrefC2ENS_6handleES1_,comdat
	.hidden	_ZN8pybind117weakrefC2ENS_6handleES1_ # -- Begin function _ZN8pybind117weakrefC2ENS_6handleES1_
	.weak	_ZN8pybind117weakrefC2ENS_6handleES1_
	.p2align	4, 0x90
	.type	_ZN8pybind117weakrefC2ENS_6handleES1_,@function
_ZN8pybind117weakrefC2ENS_6handleES1_:  # @_ZN8pybind117weakrefC2ENS_6handleES1_
.Lfunc_begin45:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception45
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	movq	%rdx, %rsi
	callq	PyWeakref_NewRef@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB97_1
# %bb.8:
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB97_1:
	.cfi_def_cfa_offset 32
.Ltmp1151:
	callq	PyErr_Occurred@PLT
.Ltmp1152:
# %bb.2:
	testq	%rax, %rax
	jne	.LBB97_3
# %bb.6:
.Ltmp1158:
	leaq	.L.str.160(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1159:
# %bb.7:
.LBB97_3:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp1153:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1154:
# %bb.4:
.Ltmp1156:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp1157:
# %bb.12:
.LBB97_5:
.Ltmp1155:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB97_10
.LBB97_9:
.Ltmp1160:
	movq	%rax, %r14
.LBB97_10:
.Ltmp1161:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1162:
# %bb.11:                               # %_ZN8pybind116objectD2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB97_13:
.Ltmp1163:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end97:
	.size	_ZN8pybind117weakrefC2ENS_6handleES1_, .Lfunc_end97-_ZN8pybind117weakrefC2ENS_6handleES1_
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind117weakrefC2ENS_6handleES1_,"aG",@progbits,_ZN8pybind117weakrefC2ENS_6handleES1_,comdat
	.p2align	2, 0x0
GCC_except_table97:
.Lexception45:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase27-.Lttbaseref27
.Lttbaseref27:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end45-.Lcst_begin45
.Lcst_begin45:
	.uleb128 .Lfunc_begin45-.Lfunc_begin45  # >> Call Site 1 <<
	.uleb128 .Ltmp1151-.Lfunc_begin45       #   Call between .Lfunc_begin45 and .Ltmp1151
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1151-.Lfunc_begin45       # >> Call Site 2 <<
	.uleb128 .Ltmp1159-.Ltmp1151            #   Call between .Ltmp1151 and .Ltmp1159
	.uleb128 .Ltmp1160-.Lfunc_begin45       #     jumps to .Ltmp1160
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1159-.Lfunc_begin45       # >> Call Site 3 <<
	.uleb128 .Ltmp1153-.Ltmp1159            #   Call between .Ltmp1159 and .Ltmp1153
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1153-.Lfunc_begin45       # >> Call Site 4 <<
	.uleb128 .Ltmp1154-.Ltmp1153            #   Call between .Ltmp1153 and .Ltmp1154
	.uleb128 .Ltmp1155-.Lfunc_begin45       #     jumps to .Ltmp1155
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1156-.Lfunc_begin45       # >> Call Site 5 <<
	.uleb128 .Ltmp1157-.Ltmp1156            #   Call between .Ltmp1156 and .Ltmp1157
	.uleb128 .Ltmp1160-.Lfunc_begin45       #     jumps to .Ltmp1160
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1157-.Lfunc_begin45       # >> Call Site 6 <<
	.uleb128 .Ltmp1161-.Ltmp1157            #   Call between .Ltmp1157 and .Ltmp1161
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1161-.Lfunc_begin45       # >> Call Site 7 <<
	.uleb128 .Ltmp1162-.Ltmp1161            #   Call between .Ltmp1161 and .Ltmp1162
	.uleb128 .Ltmp1163-.Lfunc_begin45       #     jumps to .Ltmp1163
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1162-.Lfunc_begin45       # >> Call Site 8 <<
	.uleb128 .Lfunc_end97-.Ltmp1162         #   Call between .Ltmp1162 and .Lfunc_end97
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end45:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase27:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm,"axG",@progbits,_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm,comdat
	.hidden	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm # -- Begin function _ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm
	.weak	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm,@function
_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm: # @_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm
.Lfunc_begin46:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception46
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rcx, %r14
	movq	%rdx, %r12
	movq	%rsi, %r15
	movq	%rdi, %rbx
	addq	$32, %rdi
	movq	40(%rbx), %r13
	movq	8(%rbx), %rsi
	movq	24(%rbx), %rdx
	movq	%r8, %rcx
	callq	_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm@PLT
	testb	$1, %al
	je	.LBB98_10
# %bb.1:
.Ltmp1164:
	movq	%rbx, %rdi
	movq	%rdx, %rsi
	callq	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE
.Ltmp1165:
# %bb.2:                                # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_rehashEmRKm.exit
	movq	8(%rbx), %rcx
	movq	%r12, %rax
	orq	%rcx, %rax
	shrq	$32, %rax
	je	.LBB98_3
# %bb.9:
	movq	%r12, %rax
	xorl	%edx, %edx
	divq	%rcx
	movq	%rdx, %r15
.LBB98_10:
	movq	(%rbx), %rcx
	movq	(%rcx,%r15,8), %rax
	testq	%rax, %rax
	je	.LBB98_12
.LBB98_11:
	movq	(%rax), %rax
	movq	%rax, (%r14)
	movq	(%rcx,%r15,8), %rax
	movq	%r14, (%rax)
	jmp	.LBB98_18
.LBB98_3:
	movl	%r12d, %eax
	xorl	%edx, %edx
	divl	%ecx
	movl	%edx, %r15d
	movq	(%rbx), %rcx
	movq	(%rcx,%r15,8), %rax
	testq	%rax, %rax
	jne	.LBB98_11
.LBB98_12:
	leaq	16(%rbx), %rsi
	movq	16(%rbx), %rax
	movq	%rax, (%r14)
	movq	%r14, 16(%rbx)
	movq	(%r14), %rax
	testq	%rax, %rax
	je	.LBB98_17
# %bb.13:
	movq	8(%rbx), %rdi
	movq	8(%rax), %rax
	movq	%rax, %rdx
	orq	%rdi, %rdx
	shrq	$32, %rdx
	je	.LBB98_14
# %bb.15:
	xorl	%edx, %edx
	divq	%rdi
	jmp	.LBB98_16
.LBB98_14:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%edi
                                        # kill: def $edx killed $edx def $rdx
.LBB98_16:
	movq	%r14, (%rcx,%rdx,8)
	movq	(%rbx), %rcx
.LBB98_17:
	movq	%rsi, (%rcx,%r15,8)
.LBB98_18:                              # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE22_M_insert_bucket_beginEmPNSD_10_Hash_nodeISB_Lb0EEE.exit
	incq	24(%rbx)
	movq	%r14, %rax
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB98_7:
	.cfi_def_cfa_offset 48
.Ltmp1166:
	movq	%rax, %rdi
	callq	__cxa_begin_catch@PLT
	movq	%r13, 40(%rbx)
.Ltmp1167:
	callq	__cxa_rethrow@PLT
.Ltmp1168:
# %bb.8:
.LBB98_4:
.Ltmp1169:
	movq	%rax, %rbx
.Ltmp1170:
	callq	__cxa_end_catch@PLT
.Ltmp1171:
# %bb.5:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB98_6:
.Ltmp1172:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end98:
	.size	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm, .Lfunc_end98-_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm,"aG",@progbits,_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm,comdat
	.p2align	2, 0x0
GCC_except_table98:
.Lexception46:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase28-.Lttbaseref28
.Lttbaseref28:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end46-.Lcst_begin46
.Lcst_begin46:
	.uleb128 .Lfunc_begin46-.Lfunc_begin46  # >> Call Site 1 <<
	.uleb128 .Ltmp1164-.Lfunc_begin46       #   Call between .Lfunc_begin46 and .Ltmp1164
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1164-.Lfunc_begin46       # >> Call Site 2 <<
	.uleb128 .Ltmp1165-.Ltmp1164            #   Call between .Ltmp1164 and .Ltmp1165
	.uleb128 .Ltmp1166-.Lfunc_begin46       #     jumps to .Ltmp1166
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1165-.Lfunc_begin46       # >> Call Site 3 <<
	.uleb128 .Ltmp1167-.Ltmp1165            #   Call between .Ltmp1165 and .Ltmp1167
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1167-.Lfunc_begin46       # >> Call Site 4 <<
	.uleb128 .Ltmp1168-.Ltmp1167            #   Call between .Ltmp1167 and .Ltmp1168
	.uleb128 .Ltmp1169-.Lfunc_begin46       #     jumps to .Ltmp1169
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1170-.Lfunc_begin46       # >> Call Site 5 <<
	.uleb128 .Ltmp1171-.Ltmp1170            #   Call between .Ltmp1170 and .Ltmp1171
	.uleb128 .Ltmp1172-.Lfunc_begin46       #     jumps to .Ltmp1172
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1171-.Lfunc_begin46       # >> Call Site 6 <<
	.uleb128 .Lfunc_end98-.Ltmp1171         #   Call between .Ltmp1171 and .Lfunc_end98
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end46:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase28:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev,"axG",@progbits,_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev,comdat
	.hidden	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev # -- Begin function _ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev
	.weak	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev,@function
_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev: # @_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	8(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB99_4
# %bb.1:
	movq	16(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB99_3
# %bb.2:
	movq	32(%rbx), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB99_3:                               # %_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaISA_EEELb0EEEEE18_M_deallocate_nodeEPSE_.exit
	movl	$40, %esi
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB99_4:
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end99:
	.size	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev, .Lfunc_end99-_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE,"axG",@progbits,_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE,comdat
	.hidden	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE # -- Begin function _ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE
	.weak	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE,@function
_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE: # @_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	cmpq	$1, %rsi
	je	.LBB100_1
# %bb.2:
	movq	%rbx, %rax
	shrq	$60, %rax
	jne	.LBB100_3
# %bb.5:                                # %_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaISA_EEELb0EEEEE19_M_allocate_bucketsEm.exit.i
	leaq	(,%rbx,8), %r12
	movq	%r12, %rdi
	callq	_Znwm@PLT
	movq	%rax, %r15
	movq	%rax, %rdi
	xorl	%esi, %esi
	movq	%r12, %rdx
	callq	memset@PLT
	movq	16(%r14), %rsi
	movq	$0, 16(%r14)
	testq	%rsi, %rsi
	je	.LBB100_17
.LBB100_7:                              # %.lr.ph.preheader
	leaq	16(%r14), %rcx
	xorl	%r8d, %r8d
	jmp	.LBB100_8
	.p2align	4, 0x90
.LBB100_14:                             #   in Loop: Header=BB100_8 Depth=1
	movq	(%rax), %rax
	movq	%rax, (%rsi)
	movq	(%r15,%rdx,8), %rax
	movq	%r8, %rdx
.LBB100_15:                             # %.sink.split
                                        #   in Loop: Header=BB100_8 Depth=1
	movq	%rsi, (%rax)
.LBB100_16:                             #   in Loop: Header=BB100_8 Depth=1
	movq	%rdi, %rsi
	movq	%rdx, %r8
	testq	%rdi, %rdi
	je	.LBB100_17
.LBB100_8:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rsi), %rdi
	movq	8(%rsi), %rax
	movq	%rax, %rdx
	orq	%rbx, %rdx
	shrq	$32, %rdx
	je	.LBB100_9
# %bb.10:                               #   in Loop: Header=BB100_8 Depth=1
	xorl	%edx, %edx
	divq	%rbx
	movq	(%r15,%rdx,8), %rax
	testq	%rax, %rax
	jne	.LBB100_14
	jmp	.LBB100_12
	.p2align	4, 0x90
.LBB100_9:                              #   in Loop: Header=BB100_8 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%ebx
                                        # kill: def $edx killed $edx def $rdx
	movq	(%r15,%rdx,8), %rax
	testq	%rax, %rax
	jne	.LBB100_14
.LBB100_12:                             #   in Loop: Header=BB100_8 Depth=1
	movq	(%rcx), %rax
	movq	%rax, (%rsi)
	movq	%rsi, (%rcx)
	movq	%rcx, (%r15,%rdx,8)
	cmpq	$0, (%rsi)
	je	.LBB100_16
# %bb.13:                               #   in Loop: Header=BB100_8 Depth=1
	leaq	(%r15,%r8,8), %rax
	jmp	.LBB100_15
.LBB100_1:
	leaq	48(%r14), %r15
	movq	$0, 48(%r14)
	movq	16(%r14), %rsi
	movq	$0, 16(%r14)
	testq	%rsi, %rsi
	jne	.LBB100_7
.LBB100_17:                             # %._crit_edge
	movq	(%r14), %rdi
	leaq	48(%r14), %rax
	cmpq	%rdi, %rax
	je	.LBB100_19
# %bb.18:
	movq	8(%r14), %rsi
	shlq	$3, %rsi
	callq	_ZdlPvm@PLT
.LBB100_19:                             # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEv.exit
	movq	%rbx, 8(%r14)
	movq	%r15, (%r14)
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB100_3:
	.cfi_def_cfa_offset 48
	shrq	$61, %rbx
	je	.LBB100_4
# %bb.20:
	callq	_ZSt28__throw_bad_array_new_lengthv@PLT
.LBB100_4:
	callq	_ZSt17__throw_bad_allocv@PLT
.Lfunc_end100:
	.size	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE, .Lfunc_end100-_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind1112cpp_function20make_function_recordEv,"axG",@progbits,_ZN8pybind1112cpp_function20make_function_recordEv,comdat
	.hidden	_ZN8pybind1112cpp_function20make_function_recordEv # -- Begin function _ZN8pybind1112cpp_function20make_function_recordEv
	.weak	_ZN8pybind1112cpp_function20make_function_recordEv
	.p2align	4, 0x90
	.type	_ZN8pybind1112cpp_function20make_function_recordEv,@function
_ZN8pybind1112cpp_function20make_function_recordEv: # @_ZN8pybind1112cpp_function20make_function_recordEv
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	$136, %edi
	callq	_Znwm@PLT
	movl	$0, 94(%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 104(%rax)
	movups	%xmm0, 120(%rax)
	movups	%xmm0, (%rax)
	movups	%xmm0, 16(%rax)
	movups	%xmm0, 32(%rax)
	movups	%xmm0, 48(%rax)
	movups	%xmm0, 64(%rax)
	movups	%xmm0, 75(%rax)
	movq	%rax, (%rbx)
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end101:
	.size	_ZN8pybind1112cpp_function20make_function_recordEv, .Lfunc_end101-_ZN8pybind1112cpp_function20make_function_recordEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom,"axG",@progbits,_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom,comdat
	.hidden	_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom # -- Begin function _ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom
	.weak	_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom
	.p2align	4, 0x90
	.type	_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom,@function
_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom: # @_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom
.Lfunc_begin47:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception47
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$488, %rsp                      # imm = 0x1E8
	.cfi_def_cfa_offset 544
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, 368(%rsp)                  # 8-byte Spill
	movq	%rcx, 376(%rsp)                 # 8-byte Spill
	movq	%rdx, 184(%rsp)                 # 8-byte Spill
	movq	%rdi, 312(%rsp)                 # 8-byte Spill
	movq	%rsi, 360(%rsp)                 # 8-byte Spill
	movq	(%rsi), %rbx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 192(%rsp)
	movq	$0, 208(%rsp)
	movq	(%rbx), %rax
	testq	%rax, %rax
	leaq	.L.str.78(%rip), %rdi
	cmovneq	%rax, %rdi
	callq	strdup@PLT
	movq	%rax, %r12
.Ltmp1173:
	movl	$8, %edi
	callq	_Znwm@PLT
.Ltmp1174:
# %bb.1:                                # %_ZN8pybind1112cpp_function12strdup_guardclEPKc.exit
	movq	%rax, %r15
	movq	%r12, (%rax)
	movq	%rax, %r14
	addq	$8, %r14
	movq	%rax, 192(%rsp)
	movq	%r14, 200(%rsp)
	movq	%r14, 208(%rsp)
	movq	%r12, (%rbx)
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	movq	%rbx, %r12
	je	.LBB102_4
# %bb.2:
	callq	strdup@PLT
	movq	%r12, %rbx
	movq	%rax, %r12
.Ltmp1175:
	movl	$16, %edi
	callq	_Znwm@PLT
.Ltmp1176:
# %bb.3:                                # %_ZN8pybind1112cpp_function12strdup_guardclEPKc.exit370
	movq	%rax, %r13
	movq	%r12, 8(%rax)
	movq	(%r15), %rax
	movq	%rax, (%r13)
	movq	%r13, %r14
	addq	$16, %r14
	movl	$8, %esi
	movq	%r15, %rdi
	callq	_ZdlPvm@PLT
	movq	%r13, 192(%rsp)
	movq	%r14, 200(%rsp)
	movq	%r14, 208(%rsp)
	movq	%r12, 8(%rbx)
	movq	%rbx, %r12
.LBB102_4:
	movq	24(%r12), %rbx
	movq	32(%r12), %rax
	movq	%rax, 224(%rsp)                 # 8-byte Spill
	cmpq	%rax, %rbx
	movq	%r12, 40(%rsp)                  # 8-byte Spill
	je	.LBB102_65
# %bb.5:                                # %.lr.ph
	leaq	24(%rsp), %rbp
	leaq	64(%rsp), %r13
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-7, %rax
	movq	%rax, 264(%rsp)                 # 8-byte Spill
	jmp	.LBB102_8
	.p2align	4, 0x90
.LBB102_6:                              #   in Loop: Header=BB102_8 Depth=1
	movq	%r15, (%r14)
	movq	200(%rsp), %r14
	addq	$8, %r14
	movq	%r14, 200(%rsp)
	movq	%r15, 8(%rbx)
.LBB102_7:                              #   in Loop: Header=BB102_8 Depth=1
	addq	$32, %rbx
	cmpq	224(%rsp), %rbx                 # 8-byte Folded Reload
	je	.LBB102_65
.LBB102_8:                              # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB102_11
# %bb.9:                                #   in Loop: Header=BB102_8 Depth=1
	callq	strdup@PLT
	movq	%rax, %r15
	cmpq	208(%rsp), %r14
	je	.LBB102_23
# %bb.10:                               #   in Loop: Header=BB102_8 Depth=1
	movq	%r15, (%r14)
	movq	200(%rsp), %r14
	addq	$8, %r14
	movq	%r14, 200(%rsp)
	movq	%r15, (%rbx)
.LBB102_11:                             #   in Loop: Header=BB102_8 Depth=1
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB102_33
.LBB102_12:                             #   in Loop: Header=BB102_8 Depth=1
	callq	strdup@PLT
	movq	%rax, %r15
	cmpq	208(%rsp), %r14
	jne	.LBB102_6
# %bb.13:                               #   in Loop: Header=BB102_8 Depth=1
	movq	192(%rsp), %r13
	subq	%r13, %r14
	cmpq	264(%rsp), %r14                 # 8-byte Folded Reload
	je	.LBB102_623
# %bb.14:                               # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i383
                                        #   in Loop: Header=BB102_8 Depth=1
	movq	%r14, %rbp
	sarq	$3, %rbp
	cmpq	$1, %rbp
	movq	%rbp, %rax
	adcq	$0, %rax
	leaq	(%rax,%rbp), %rcx
	movabsq	$1152921504606846975, %rdx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rdx, %rcx
	jb	.LBB102_15
# %bb.43:                               # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i383
                                        #   in Loop: Header=BB102_8 Depth=1
	movq	%rdx, %rcx
	addq	%rbp, %rax
	jae	.LBB102_44
.LBB102_16:                             # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i383
                                        #   in Loop: Header=BB102_8 Depth=1
	testq	%rdx, %rdx
	movq	%rdx, 80(%rsp)                  # 8-byte Spill
	je	.LBB102_45
.LBB102_17:                             #   in Loop: Header=BB102_8 Depth=1
	leaq	(,%rdx,8), %rdi
.Ltmp1180:
	callq	_Znwm@PLT
.Ltmp1181:
# %bb.18:                               #   in Loop: Header=BB102_8 Depth=1
	movq	%rax, %r12
	movq	%r15, (%r12,%rbp,8)
	testq	%r14, %r14
	jle	.LBB102_20
.LBB102_19:                             #   in Loop: Header=BB102_8 Depth=1
	movq	%r12, %rdi
	movq	%r13, %rsi
	movq	%r14, %rdx
	callq	memmove@PLT
.LBB102_20:                             # %_ZNSt6vectorIPcSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exit16.i.i.i387
                                        #   in Loop: Header=BB102_8 Depth=1
	testq	%r13, %r13
	leaq	24(%rsp), %rbp
	je	.LBB102_22
# %bb.21:                               #   in Loop: Header=BB102_8 Depth=1
	movq	%r13, %rdi
	movq	%r14, %rsi
	callq	_ZdlPvm@PLT
.LBB102_22:                             # %_ZNSt6vectorIPcSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_.exit.i.i389
                                        #   in Loop: Header=BB102_8 Depth=1
	addq	%r12, %r14
	addq	$8, %r14
	movq	%r12, 192(%rsp)
	movq	%r14, 200(%rsp)
	movq	80(%rsp), %rax                  # 8-byte Reload
	leaq	(%r12,%rax,8), %rax
	movq	%rax, 208(%rsp)
	movq	%r15, 8(%rbx)
	movq	40(%rsp), %r12                  # 8-byte Reload
	leaq	64(%rsp), %r13
	jmp	.LBB102_7
	.p2align	4, 0x90
.LBB102_23:                             #   in Loop: Header=BB102_8 Depth=1
	movq	192(%rsp), %r13
	subq	%r13, %r14
	cmpq	264(%rsp), %r14                 # 8-byte Folded Reload
	je	.LBB102_623
# %bb.24:                               # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i372
                                        #   in Loop: Header=BB102_8 Depth=1
	movq	%r14, %rbp
	sarq	$3, %rbp
	cmpq	$1, %rbp
	movq	%rbp, %rax
	adcq	$0, %rax
	leaq	(%rax,%rbp), %rcx
	movabsq	$1152921504606846975, %rdx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rdx, %rcx
	jb	.LBB102_25
# %bb.40:                               # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i372
                                        #   in Loop: Header=BB102_8 Depth=1
	movq	%rdx, %rcx
	addq	%rbp, %rax
	jae	.LBB102_41
.LBB102_26:                             # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i372
                                        #   in Loop: Header=BB102_8 Depth=1
	testq	%rdx, %rdx
	movq	%rdx, 80(%rsp)                  # 8-byte Spill
	je	.LBB102_42
.LBB102_27:                             #   in Loop: Header=BB102_8 Depth=1
	leaq	(,%rdx,8), %rdi
.Ltmp1178:
	callq	_Znwm@PLT
.Ltmp1179:
# %bb.28:                               #   in Loop: Header=BB102_8 Depth=1
	movq	%rax, %r12
	movq	%r15, (%r12,%rbp,8)
	testq	%r14, %r14
	jle	.LBB102_30
.LBB102_29:                             #   in Loop: Header=BB102_8 Depth=1
	movq	%r12, %rdi
	movq	%r13, %rsi
	movq	%r14, %rdx
	callq	memmove@PLT
.LBB102_30:                             # %_ZNSt6vectorIPcSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exit16.i.i.i376
                                        #   in Loop: Header=BB102_8 Depth=1
	testq	%r13, %r13
	leaq	24(%rsp), %rbp
	je	.LBB102_32
# %bb.31:                               #   in Loop: Header=BB102_8 Depth=1
	movq	%r13, %rdi
	movq	%r14, %rsi
	callq	_ZdlPvm@PLT
.LBB102_32:                             # %_ZNSt6vectorIPcSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_.exit.i.i378
                                        #   in Loop: Header=BB102_8 Depth=1
	addq	%r12, %r14
	addq	$8, %r14
	movq	%r12, 192(%rsp)
	movq	%r14, 200(%rsp)
	movq	80(%rsp), %rax                  # 8-byte Reload
	leaq	(%r12,%rax,8), %rax
	movq	%rax, 208(%rsp)
	movq	%r15, (%rbx)
	movq	40(%rsp), %r12                  # 8-byte Reload
	leaq	64(%rsp), %r13
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	jne	.LBB102_12
.LBB102_33:                             #   in Loop: Header=BB102_8 Depth=1
	movq	16(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB102_7
# %bb.34:                               #   in Loop: Header=BB102_8 Depth=1
.Ltmp1186:
	callq	PyObject_Repr@PLT
.Ltmp1187:
# %bb.35:                               # %.noexc393
                                        #   in Loop: Header=BB102_8 Depth=1
	testq	%rax, %rax
	je	.LBB102_637
# %bb.36:                               #   in Loop: Header=BB102_8 Depth=1
	movq	%rax, 120(%rsp)
	cmpq	$2, (%rax)
	jl	.LBB102_46
# %bb.37:                               #   in Loop: Header=BB102_8 Depth=1
	movq	%rbp, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp1192:
	leaq	8(%rsp), %rdi
	leaq	120(%rsp), %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp1193:
# %bb.38:                               # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i
                                        #   in Loop: Header=BB102_8 Depth=1
	movq	%r13, 48(%rsp)
	movq	8(%rsp), %r15
	cmpq	%rbp, %r15
	je	.LBB102_51
# %bb.39:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB102_8 Depth=1
	movq	%r15, 48(%rsp)
	movq	16(%rsp), %rax
	movq	24(%rsp), %rcx
	movq	%rcx, 64(%rsp)
	movq	%rax, 56(%rsp)
	movq	%r15, %rdi
	callq	strdup@PLT
	cmpq	208(%rsp), %r14
	jne	.LBB102_48
.LBB102_52:                             #   in Loop: Header=BB102_8 Depth=1
	movq	192(%rsp), %r12
	subq	%r12, %r14
	cmpq	264(%rsp), %r14                 # 8-byte Folded Reload
	je	.LBB102_646
# %bb.53:                               # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i399
                                        #   in Loop: Header=BB102_8 Depth=1
	movq	%r14, %r13
	sarq	$3, %r13
	cmpq	$1, %r13
	movq	%r13, %rsi
	adcq	$0, %rsi
	leaq	(%rsi,%r13), %rcx
	movabsq	$1152921504606846975, %rdx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rdx, %rcx
	jb	.LBB102_54
# %bb.62:                               # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i399
                                        #   in Loop: Header=BB102_8 Depth=1
	movq	%rdx, %rcx
	addq	%r13, %rsi
	jae	.LBB102_63
.LBB102_55:                             # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i399
                                        #   in Loop: Header=BB102_8 Depth=1
	testq	%rdx, %rdx
	movq	%rax, 80(%rsp)                  # 8-byte Spill
	movq	%rdx, 320(%rsp)                 # 8-byte Spill
	je	.LBB102_64
.LBB102_56:                             #   in Loop: Header=BB102_8 Depth=1
	leaq	(,%rdx,8), %rdi
.Ltmp1195:
	callq	_Znwm@PLT
.Ltmp1196:
# %bb.57:                               #   in Loop: Header=BB102_8 Depth=1
	movq	%rax, %rbp
	movq	80(%rsp), %rax                  # 8-byte Reload
	movq	%rax, (%rbp,%r13,8)
	testq	%r14, %r14
	jle	.LBB102_59
.LBB102_58:                             #   in Loop: Header=BB102_8 Depth=1
	movq	%rbp, %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	memmove@PLT
	movq	80(%rsp), %rax                  # 8-byte Reload
.LBB102_59:                             # %_ZNSt6vectorIPcSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exit16.i.i.i403
                                        #   in Loop: Header=BB102_8 Depth=1
	testq	%r12, %r12
	leaq	64(%rsp), %r13
	je	.LBB102_61
# %bb.60:                               #   in Loop: Header=BB102_8 Depth=1
	movq	%r12, %rdi
	movq	%r14, %rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rax                  # 8-byte Reload
.LBB102_61:                             # %_ZNSt6vectorIPcSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_.exit.i.i405
                                        #   in Loop: Header=BB102_8 Depth=1
	addq	%rbp, %r14
	addq	$8, %r14
	movq	%rbp, 192(%rsp)
	movq	%r14, 200(%rsp)
	movq	320(%rsp), %rcx                 # 8-byte Reload
	leaq	(%rbp,%rcx,8), %rcx
	movq	%rcx, 208(%rsp)
	movq	40(%rsp), %r12                  # 8-byte Reload
	leaq	24(%rsp), %rbp
	movq	%rax, 8(%rbx)
	movq	48(%rsp), %rdi
	cmpq	%r13, %rdi
	jne	.LBB102_49
	jmp	.LBB102_50
	.p2align	4, 0x90
.LBB102_25:                             # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i372
                                        #   in Loop: Header=BB102_8 Depth=1
	addq	%rbp, %rax
	jb	.LBB102_26
.LBB102_41:                             # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i372
                                        #   in Loop: Header=BB102_8 Depth=1
	movq	%rcx, %rdx
	testq	%rdx, %rdx
	movq	%rdx, 80(%rsp)                  # 8-byte Spill
	jne	.LBB102_27
.LBB102_42:                             #   in Loop: Header=BB102_8 Depth=1
	xorl	%r12d, %r12d
	movq	%r15, (%r12,%rbp,8)
	testq	%r14, %r14
	jg	.LBB102_29
	jmp	.LBB102_30
	.p2align	4, 0x90
.LBB102_15:                             # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i383
                                        #   in Loop: Header=BB102_8 Depth=1
	addq	%rbp, %rax
	jb	.LBB102_16
.LBB102_44:                             # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i383
                                        #   in Loop: Header=BB102_8 Depth=1
	movq	%rcx, %rdx
	testq	%rdx, %rdx
	movq	%rdx, 80(%rsp)                  # 8-byte Spill
	jne	.LBB102_17
.LBB102_45:                             #   in Loop: Header=BB102_8 Depth=1
	xorl	%r12d, %r12d
	movq	%r15, (%r12,%rbp,8)
	testq	%r14, %r14
	jg	.LBB102_19
	jmp	.LBB102_20
.LBB102_46:                             #   in Loop: Header=BB102_8 Depth=1
.Ltmp1189:
	leaq	48(%rsp), %rdi
	leaq	120(%rsp), %rsi
	callq	_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE
.Ltmp1190:
# %bb.47:                               # %._ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v.exit_crit_edge
                                        #   in Loop: Header=BB102_8 Depth=1
	movq	48(%rsp), %r15
	movq	%r15, %rdi
	callq	strdup@PLT
	cmpq	208(%rsp), %r14
	je	.LBB102_52
.LBB102_48:                             #   in Loop: Header=BB102_8 Depth=1
	movq	%rax, (%r14)
	movq	200(%rsp), %r14
	addq	$8, %r14
	movq	%r14, 200(%rsp)
	movq	%rax, 8(%rbx)
	movq	48(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB102_50
.LBB102_49:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB102_8 Depth=1
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_50:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB102_8 Depth=1
.Ltmp1198:
	leaq	120(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1199:
	jmp	.LBB102_7
.LBB102_54:                             # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i399
                                        #   in Loop: Header=BB102_8 Depth=1
	addq	%r13, %rsi
	jb	.LBB102_55
.LBB102_63:                             # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i399
                                        #   in Loop: Header=BB102_8 Depth=1
	movq	%rcx, %rdx
	testq	%rdx, %rdx
	movq	%rax, 80(%rsp)                  # 8-byte Spill
	movq	%rdx, 320(%rsp)                 # 8-byte Spill
	jne	.LBB102_56
.LBB102_64:                             #   in Loop: Header=BB102_8 Depth=1
	xorl	%ebp, %ebp
	movq	%rax, (%rbp,%r13,8)
	testq	%r14, %r14
	jg	.LBB102_58
	jmp	.LBB102_59
.LBB102_51:                             #   in Loop: Header=BB102_8 Depth=1
	movq	16(%rsp), %r15
	leaq	1(%r15), %rdx
	movq	%r13, %rdi
	movq	%rbp, %rsi
	callq	memcpy@PLT
	movq	%r15, 56(%rsp)
	movq	%r13, %r15
	movq	%r15, %rdi
	callq	strdup@PLT
	cmpq	208(%rsp), %r14
	jne	.LBB102_48
	jmp	.LBB102_52
.LBB102_65:                             # %._crit_edge
	movq	(%r12), %r14
	leaq	.L.str.79(%rip), %rsi
	movq	%r14, %rdi
	callq	strcmp@PLT
	testl	%eax, %eax
	je	.LBB102_67
# %bb.66:
	leaq	.L.str.80(%rip), %rsi
	movq	%r14, %rdi
	callq	strcmp@PLT
	testl	%eax, %eax
	sete	%al
	jmp	.LBB102_68
.LBB102_67:
	movb	$1, %al
.LBB102_68:
	movq	184(%rsp), %rbx                 # 8-byte Reload
	movzbl	%al, %eax
	movzwl	89(%r12), %ecx
	movl	%ecx, %edx
	andl	$-2, %edx
	orl	%eax, %edx
	movw	%dx, 89(%r12)
	testb	$2, %cl
	sete	%cl
	andb	%cl, %al
	cmpb	$1, %al
	jne	.LBB102_135
# %bb.69:
	movq	112(%r12), %rax
	movq	24(%rax), %r15
	leaq	24(%rsp), %rbx
	movq	%rbx, 8(%rsp)
	testq	%r15, %r15
	je	.LBB102_650
# %bb.70:
	movq	%r15, %rdi
	callq	strlen@PLT
	movq	%rax, %r12
	movq	%rbx, %r13
	cmpq	$16, %rax
	jb	.LBB102_75
# %bb.71:
	testq	%r12, %r12
	js	.LBB102_664
# %bb.72:
	movq	%r12, %rdi
	incq	%rdi
	js	.LBB102_609
# %bb.73:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i
.Ltmp1213:
	callq	_Znwm@PLT
.Ltmp1214:
# %bb.74:                               # %.noexc416
	movq	%rax, %r13
	movq	%rax, 8(%rsp)
	movq	%r12, 24(%rsp)
.LBB102_75:                             # %._crit_edge.i.i.i
	testq	%r12, %r12
	je	.LBB102_79
# %bb.76:                               # %._crit_edge.i.i.i
	cmpq	$1, %r12
	jne	.LBB102_78
# %bb.77:
	movzbl	(%r15), %eax
	movb	%al, (%r13)
	jmp	.LBB102_79
.LBB102_78:
	movq	%r13, %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB102_79:
	movq	%r12, 16(%rsp)
	movb	$0, (%r13,%r12)
	leaq	64(%rsp), %r12
	movq	%r12, 48(%rsp)
	testq	%r14, %r14
	je	.LBB102_652
# %bb.80:
	movq	%r14, %rdi
	callq	strlen@PLT
	movq	%rax, %r15
	cmpq	$16, %rax
	jb	.LBB102_85
# %bb.81:
	testq	%r15, %r15
	js	.LBB102_666
# %bb.82:
	movq	%r15, %rdi
	incq	%rdi
	js	.LBB102_611
# %bb.83:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
.Ltmp1215:
	callq	_Znwm@PLT
.Ltmp1216:
# %bb.84:                               # %.noexc421
	movq	%rax, %r12
	movq	%rax, 48(%rsp)
	movq	%r15, 64(%rsp)
.LBB102_85:                             # %._crit_edge.i.i
	testq	%r15, %r15
	je	.LBB102_89
# %bb.86:                               # %._crit_edge.i.i
	cmpq	$1, %r15
	jne	.LBB102_88
# %bb.87:
	movzbl	(%r14), %eax
	movb	%al, (%r12)
	jmp	.LBB102_89
.LBB102_88:
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB102_89:
	movq	%r15, 56(%rsp)
	movb	$0, (%r12,%r15)
	movq	PyExc_FutureWarning@GOTPCREL(%rip), %rax
	movq	(%rax), %r12
	movq	8(%rsp), %rcx
	movq	16(%rsp), %r8
.Ltmp1217:
	leaq	.L.str.81(%rip), %rsi
	leaq	232(%rsp), %rdi
	leaq	280(%rsp), %r9
	movl	$22, %edx
	callq	_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE@PLT
.Ltmp1218:
# %bb.90:
	movq	240(%rsp), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-39, %rax
	cmpq	%rax, %rsi
	jg	.LBB102_654
# %bb.91:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	leaq	39(%rsi), %rbx
	movq	232(%rsp), %rax
	leaq	248(%rsp), %r15
	movl	$15, %ecx
	cmpq	%r15, %rax
	je	.LBB102_93
# %bb.92:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	248(%rsp), %rcx
.LBB102_93:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	cmpq	%rcx, %rbx
	jbe	.LBB102_96
# %bb.94:
.Ltmp1220:
	leaq	.L.str.82(%rip), %rcx
	leaq	232(%rsp), %rdi
	movl	$39, %r8d
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1221:
# %bb.95:                               # %._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i_crit_edge
	movq	232(%rsp), %rax
	jmp	.LBB102_97
.LBB102_96:
	movups	.L.str.82+16(%rip), %xmm0
	movups	%xmm0, 16(%rax,%rsi)
	movups	.L.str.82(%rip), %xmm0
	movups	%xmm0, (%rax,%rsi)
	movabsq	$2819384644257805422, %rcx      # imm = 0x272077656E2D746E
	movq	%rcx, 31(%rax,%rsi)
.LBB102_97:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
	movq	%rbx, 240(%rsp)
	movb	$0, (%rax,%rbx)
	leaq	168(%rsp), %r14
	movq	%r14, 152(%rsp)
	movq	232(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB102_99
# %bb.98:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i423
	movq	%rdi, 152(%rsp)
	movq	240(%rsp), %r13
	movq	248(%rsp), %rax
	movq	%rax, 168(%rsp)
	jmp	.LBB102_100
.LBB102_99:
	movq	240(%rsp), %r13
	leaq	1(%r13), %rdx
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	memcpy@PLT
	movq	%r14, %rdi
.LBB102_100:
	movq	%r13, 160(%rsp)
	movq	%r15, 232(%rsp)
	movq	$0, 240(%rsp)
	movb	$0, 248(%rsp)
	movq	56(%rsp), %r8
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%r13, %rax
	cmpq	%r8, %rax
	jb	.LBB102_656
# %bb.101:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	leaq	(%r8,%r13), %rbx
	movl	$15, %eax
	cmpq	%r14, %rdi
	je	.LBB102_103
# %bb.102:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	movq	168(%rsp), %rax
.LBB102_103:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	movq	48(%rsp), %rcx
	cmpq	%rax, %rbx
	jbe	.LBB102_105
# %bb.104:
.Ltmp1222:
	leaq	152(%rsp), %rdi
	movq	%r13, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1223:
	jmp	.LBB102_109
.LBB102_105:
	testq	%r8, %r8
	je	.LBB102_109
# %bb.106:
	addq	%r13, %rdi
	cmpq	$1, %r8
	jne	.LBB102_108
# %bb.107:
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB102_109
.LBB102_108:
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB102_109:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_.exit.i
	movq	%rbx, 160(%rsp)
	movq	152(%rsp), %rax
	movb	$0, (%rax,%rbx)
	leaq	104(%rsp), %r13
	movq	%r13, 88(%rsp)
	movq	152(%rsp), %rax
	cmpq	%r14, %rax
	je	.LBB102_111
# %bb.110:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i428
	movq	%rax, 88(%rsp)
	movq	160(%rsp), %rbp
	movq	168(%rsp), %rcx
	movq	%rcx, 104(%rsp)
	jmp	.LBB102_112
.LBB102_111:
	movq	160(%rsp), %rbp
	leaq	1(%rbp), %rdx
	movq	%r13, %rdi
	movq	%r14, %rsi
	callq	memcpy@PLT
	movq	%r13, %rax
.LBB102_112:
	movq	%rbp, 96(%rsp)
	movq	%r14, 152(%rsp)
	movq	$0, 160(%rsp)
	movb	$0, 168(%rsp)
	movq	%rbp, %rcx
	andq	$-128, %rcx
	movabsq	$9223372036854775807, %rdx      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-127, %rdx
	cmpq	%rdx, %rcx
	je	.LBB102_658
# %bb.113:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i432
	leaq	128(%rbp), %rbx
	movl	$15, %ecx
	cmpq	%r13, %rax
	je	.LBB102_115
# %bb.114:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i432
	movq	104(%rsp), %rcx
.LBB102_115:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i432
	cmpq	%rcx, %rbx
	jbe	.LBB102_118
# %bb.116:
.Ltmp1224:
	leaq	.L.str.83(%rip), %rcx
	leaq	88(%rsp), %rdi
	movl	$128, %r8d
	movq	%rbp, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1225:
# %bb.117:                              # %._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i437_crit_edge
	movq	88(%rsp), %rax
	jmp	.LBB102_119
.LBB102_118:
	movups	.L.str.83+112(%rip), %xmm0
	movups	%xmm0, 112(%rax,%rbp)
	movups	.L.str.83+96(%rip), %xmm0
	movups	%xmm0, 96(%rax,%rbp)
	movups	.L.str.83+80(%rip), %xmm0
	movups	%xmm0, 80(%rax,%rbp)
	movups	.L.str.83+64(%rip), %xmm0
	movups	%xmm0, 64(%rax,%rbp)
	movups	.L.str.83+48(%rip), %xmm0
	movups	%xmm0, 48(%rax,%rbp)
	movups	.L.str.83+32(%rip), %xmm0
	movups	%xmm0, 32(%rax,%rbp)
	movups	.L.str.83+16(%rip), %xmm0
	movups	%xmm0, 16(%rax,%rbp)
	movups	.L.str.83(%rip), %xmm0
	movups	%xmm0, (%rax,%rbp)
.LBB102_119:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i437
	movq	%rbx, 96(%rsp)
	movb	$0, (%rax,%rbx)
	leaq	136(%rsp), %rbp
	movq	%rbp, 120(%rsp)
	movq	88(%rsp), %rsi
	cmpq	%r13, %rsi
	je	.LBB102_121
# %bb.120:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i438
	movq	%rsi, 120(%rsp)
	movq	96(%rsp), %rbx
	movq	104(%rsp), %rax
	movq	%rax, 136(%rsp)
	jmp	.LBB102_122
.LBB102_121:
	movq	96(%rsp), %rbx
	leaq	1(%rbx), %rdx
	movq	%rbp, %rdi
	movq	%r13, %rsi
	callq	memcpy@PLT
	movq	%rbp, %rsi
.LBB102_122:
	movq	%rbx, 128(%rsp)
	movq	%r13, 88(%rsp)
	movq	$0, 96(%rsp)
	movb	$0, 104(%rsp)
.Ltmp1226:
	movq	%r12, %rdi
	xorl	%edx, %edx
	callq	PyErr_WarnEx@PLT
.Ltmp1227:
# %bb.123:
	movq	120(%rsp), %rdi
	cmpq	%rbp, %rdi
	movq	40(%rsp), %r12                  # 8-byte Reload
	movq	184(%rsp), %rbx                 # 8-byte Reload
	je	.LBB102_125
# %bb.124:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i443
	movq	136(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_125:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit445
	movq	88(%rsp), %rdi
	cmpq	%r13, %rdi
	leaq	24(%rsp), %r13
	je	.LBB102_127
# %bb.126:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i446
	movq	104(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_127:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit448
	movq	152(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB102_129
# %bb.128:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i449
	movq	168(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_129:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit451
	movq	232(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB102_131
# %bb.130:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i452
	movq	248(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_131:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit454
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_133
# %bb.132:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i455
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_133:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit457
	movq	8(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB102_135
# %bb.134:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i458
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_135:
	leaq	24(%r12), %rax
	movq	%rax, 320(%rsp)                 # 8-byte Spill
	leaq	64(%rsp), %rax
	movq	%rax, 48(%rsp)
	movq	$0, 56(%rsp)
	movb	$0, 64(%rsp)
	leaq	24(%rsp), %rax
	movq	%rax, 80(%rsp)                  # 8-byte Spill
	movq	$0, 224(%rsp)                   # 8-byte Folded Spill
	leaq	48(%rsp), %r12
	xorl	%r14d, %r14d
	movq	$0, 264(%rsp)                   # 8-byte Folded Spill
	jmp	.LBB102_141
.LBB102_136:                            # %.noexc731
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	48(%rsp), %rax
.LBB102_137:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit
                                        #   in Loop: Header=BB102_141 Depth=1
	movb	%bl, (%rax,%r14)
	movq	%r13, 56(%rsp)
	movq	48(%rsp), %rax
	movb	$0, 1(%rax,%r14)
.LBB102_138:                            #   in Loop: Header=BB102_141 Depth=1
	movq	184(%rsp), %rbx                 # 8-byte Reload
.LBB102_139:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%r15, %r14
.LBB102_140:                            #   in Loop: Header=BB102_141 Depth=1
	incq	%rbx
.LBB102_141:                            # =>This Loop Header: Depth=1
                                        #     Child Loop BB102_278 Depth 2
                                        #     Child Loop BB102_339 Depth 2
	movq	%rbx, 184(%rsp)                 # 8-byte Spill
	movzbl	(%rbx), %ebx
	movzbl	%bl, %eax
	cmpl	$122, %eax
	jle	.LBB102_152
# %bb.142:                              #   in Loop: Header=BB102_141 Depth=1
	cmpl	$123, %eax
	je	.LBB102_162
# %bb.143:                              #   in Loop: Header=BB102_141 Depth=1
	cmpl	$125, %eax
	jne	.LBB102_171
# %bb.144:                              #   in Loop: Header=BB102_141 Depth=1
	testb	$1, 224(%rsp)                   # 1-byte Folded Reload
	jne	.LBB102_318
# %bb.145:                              #   in Loop: Header=BB102_141 Depth=1
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	24(%rcx), %rax
	movq	32(%rcx), %rcx
	subq	%rax, %rcx
	sarq	$5, %rcx
	cmpq	%rcx, %r14
	jae	.LBB102_318
# %bb.146:                              #   in Loop: Header=BB102_141 Depth=1
	movq	%r14, %rbx
	shlq	$5, %rbx
	cmpq	$0, 8(%rax,%rbx)
	je	.LBB102_318
# %bb.147:                              #   in Loop: Header=BB102_141 Depth=1
	movq	56(%rsp), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-3, %rax
	cmpq	%rax, %rsi
	jg	.LBB102_613
# %bb.148:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i540
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%r14, %r15
	movq	48(%rsp), %rax
	movl	$15, %ecx
	leaq	64(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB102_150
# %bb.149:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i540
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	64(%rsp), %rcx
.LBB102_150:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i540
                                        #   in Loop: Header=BB102_141 Depth=1
	leaq	3(%rsi), %r14
	cmpq	%rcx, %r14
	jbe	.LBB102_226
# %bb.151:                              #   in Loop: Header=BB102_141 Depth=1
.Ltmp1330:
	movl	$3, %r8d
	movq	%r12, %rdi
	xorl	%edx, %edx
	leaq	.L.str.87(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1331:
	jmp	.LBB102_227
	.p2align	4, 0x90
.LBB102_152:                            #   in Loop: Header=BB102_141 Depth=1
	cmpl	$37, %eax
	jne	.LBB102_170
# %bb.153:                              #   in Loop: Header=BB102_141 Depth=1
	movq	376(%rsp), %rax                 # 8-byte Reload
	movq	264(%rsp), %rcx                 # 8-byte Reload
	movq	(%rax,%rcx,8), %rbx
	testq	%rbx, %rbx
	je	.LBB102_615
# %bb.154:                              #   in Loop: Header=BB102_141 Depth=1
	movq	%rbx, 8(%rsp)
.Ltmp1229:
	leaq	8(%rsp), %rdi
	xorl	%esi, %esi
	callq	_ZN8pybind116detail13get_type_infoERKSt10type_indexb
.Ltmp1230:
# %bb.155:                              #   in Loop: Header=BB102_141 Depth=1
	incq	264(%rsp)                       # 8-byte Folded Spill
	testq	%rax, %rax
	je	.LBB102_175
# %bb.156:                              #   in Loop: Header=BB102_141 Depth=1
	movq	(%rax), %rbx
	movq	%rbx, 240(%rsp)
	leaq	.L.str.71(%rip), %rax
	movq	%rax, 248(%rsp)
	movq	$0, 256(%rsp)
.Ltmp1232:
	leaq	232(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp1233:
# %bb.157:                              # %.noexc573
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%r14, %r15
	leaq	24(%rsp), %r12
	movq	%r12, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp1235:
	leaq	8(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp1236:
# %bb.158:                              # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i.i
                                        #   in Loop: Header=BB102_141 Depth=1
	leaq	168(%rsp), %r14
	movq	%r14, 152(%rsp)
	movq	8(%rsp), %rax
	cmpq	%r12, %rax
	je	.LBB102_183
# %bb.159:                              #   in Loop: Header=BB102_141 Depth=1
	movq	%rax, 152(%rsp)
	movq	16(%rsp), %rbp
	movups	16(%rsp), %xmm0
	movups	%xmm0, 160(%rsp)
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rcx, %rbp
	je	.LBB102_621
# %bb.160:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i576
                                        #   in Loop: Header=BB102_141 Depth=1
	leaq	1(%rbp), %r13
	leaq	168(%rsp), %rcx
	cmpq	%rcx, %rax
	leaq	48(%rsp), %r12
	je	.LBB102_184
# %bb.161:                              #   in Loop: Header=BB102_141 Depth=1
	xorl	%ecx, %ecx
	movl	$15, %edx
	testb	%cl, %cl
	je	.LBB102_185
	jmp	.LBB102_186
	.p2align	4, 0x90
.LBB102_162:                            #   in Loop: Header=BB102_141 Depth=1
	movb	$1, %al
	movq	%rax, 224(%rsp)                 # 8-byte Spill
	movq	184(%rsp), %rbx                 # 8-byte Reload
	cmpb	$42, 1(%rbx)
	je	.LBB102_140
# %bb.163:                              #   in Loop: Header=BB102_141 Depth=1
	movq	40(%rsp), %rcx                  # 8-byte Reload
	testb	$64, 89(%rcx)
	jne	.LBB102_261
# %bb.164:                              #   in Loop: Header=BB102_141 Depth=1
	movzwl	94(%rcx), %eax
	cmpq	%rax, %r14
	jne	.LBB102_261
# %bb.165:                              #   in Loop: Header=BB102_141 Depth=1
	movq	56(%rsp), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-3, %rax
	cmpq	%rax, %rsi
	jg	.LBB102_613
# %bb.166:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i479
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	48(%rsp), %rax
	movl	$15, %ecx
	leaq	64(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB102_168
# %bb.167:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i479
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	64(%rsp), %rcx
.LBB102_168:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i479
                                        #   in Loop: Header=BB102_141 Depth=1
	leaq	3(%rsi), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB102_259
# %bb.169:                              #   in Loop: Header=BB102_141 Depth=1
.Ltmp1343:
	movl	$3, %r8d
	movq	%r12, %rdi
	xorl	%edx, %edx
	leaq	.L.str.84(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1344:
	jmp	.LBB102_260
.LBB102_170:                            #   in Loop: Header=BB102_141 Depth=1
	testl	%eax, %eax
	je	.LBB102_368
.LBB102_171:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%r14, %r15
	movq	48(%rsp), %rax
	movl	$15, %ecx
	leaq	64(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB102_173
# %bb.172:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	64(%rsp), %rcx
.LBB102_173:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	56(%rsp), %r14
	leaq	1(%r14), %r13
	cmpq	%rcx, %r13
	jbe	.LBB102_137
# %bb.174:                              #   in Loop: Header=BB102_141 Depth=1
.Ltmp1586:
	movl	$1, %r8d
	movq	%r12, %rdi
	movq	%r14, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1587:
	jmp	.LBB102_136
.LBB102_175:                            #   in Loop: Header=BB102_141 Depth=1
	movq	40(%rsp), %rax                  # 8-byte Reload
	testb	$2, 89(%rax)
	je	.LBB102_206
# %bb.176:                              #   in Loop: Header=BB102_141 Depth=1
	testq	%r14, %r14
	jne	.LBB102_206
# %bb.177:                              #   in Loop: Header=BB102_141 Depth=1
	movq	40(%rsp), %r14                  # 8-byte Reload
	movq	112(%r14), %rax
	movq	%rax, 240(%rsp)
	leaq	.L.str.71(%rip), %rax
	movq	%rax, 248(%rsp)
	movq	$0, 256(%rsp)
.Ltmp1288:
	leaq	232(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp1289:
# %bb.178:                              # %.noexc641
                                        #   in Loop: Header=BB102_141 Depth=1
	leaq	24(%rsp), %rbx
	movq	%rbx, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp1291:
	leaq	8(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp1292:
	leaq	104(%rsp), %r15
# %bb.179:                              # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i.i638
                                        #   in Loop: Header=BB102_141 Depth=1
	leaq	168(%rsp), %r12
	movq	%r12, 152(%rsp)
	movq	8(%rsp), %rax
	cmpq	%rbx, %rax
	je	.LBB102_236
# %bb.180:                              #   in Loop: Header=BB102_141 Depth=1
	movq	%rax, 152(%rsp)
	movq	16(%rsp), %rbp
	movups	16(%rsp), %xmm0
	movups	%xmm0, 160(%rsp)
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rcx, %rbp
	je	.LBB102_640
# %bb.181:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i645
                                        #   in Loop: Header=BB102_141 Depth=1
	leaq	1(%rbp), %r13
	cmpq	%r12, %rax
	je	.LBB102_237
# %bb.182:                              #   in Loop: Header=BB102_141 Depth=1
	xorl	%ecx, %ecx
	movl	$15, %edx
	testb	%cl, %cl
	je	.LBB102_238
	jmp	.LBB102_239
.LBB102_183:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i576.thread
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	16(%rsp), %rbp
	leaq	1(%rbp), %r13
	movq	%r14, %rdi
	movq	%r12, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
	movq	%rbp, 160(%rsp)
	movq	%r14, %rax
	leaq	48(%rsp), %r12
.LBB102_184:                            #   in Loop: Header=BB102_141 Depth=1
	movb	$1, %cl
	movl	$15, %edx
	testb	%cl, %cl
	jne	.LBB102_186
.LBB102_185:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i577
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	168(%rsp), %rdx
.LBB102_186:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i577
                                        #   in Loop: Header=BB102_141 Depth=1
	cmpq	%rdx, %r13
	jbe	.LBB102_188
# %bb.187:                              #   in Loop: Header=BB102_141 Depth=1
.Ltmp1241:
	movl	$1, %r8d
	leaq	152(%rsp), %rdi
	movq	%rbp, %rsi
	xorl	%edx, %edx
	leaq	.L.str.90(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1242:
	jmp	.LBB102_189
.LBB102_188:                            #   in Loop: Header=BB102_141 Depth=1
	movb	$46, (%rax,%rbp)
.LBB102_189:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i581
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%r13, 160(%rsp)
	movq	152(%rsp), %rax
	movb	$0, (%rax,%r13)
	leaq	104(%rsp), %rdi
	movq	%rdi, 88(%rsp)
	movq	152(%rsp), %rax
	leaq	168(%rsp), %r13
	cmpq	%r13, %rax
	je	.LBB102_191
# %bb.190:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i582
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%rax, 88(%rsp)
	movq	160(%rsp), %r14
	movq	168(%rsp), %rax
	movq	%rax, 104(%rsp)
	jmp	.LBB102_192
.LBB102_191:                            #   in Loop: Header=BB102_141 Depth=1
	movq	160(%rsp), %r14
	leaq	1(%r14), %rdx
	movq	%r13, %rsi
	callq	memcpy@PLT
.LBB102_192:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%r14, 96(%rsp)
	movq	%r13, 152(%rsp)
	movq	$0, 160(%rsp)
	movb	$0, 168(%rsp)
	movq	%rbx, 336(%rsp)
	leaq	.L.str.91(%rip), %rax
	movq	%rax, 344(%rsp)
	movq	$0, 352(%rsp)
.Ltmp1244:
	leaq	328(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp1245:
# %bb.193:                              # %.noexc594
                                        #   in Loop: Header=BB102_141 Depth=1
	leaq	24(%rsp), %rbx
	movq	%rbx, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp1247:
	leaq	8(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp1248:
	leaq	296(%rsp), %rdi
# %bb.194:                              # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i.i591
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%rdi, 280(%rsp)
	movq	8(%rsp), %rax
	cmpq	%rbx, %rax
	je	.LBB102_196
# %bb.195:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i592
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%rax, 280(%rsp)
	movq	16(%rsp), %rbx
	movq	24(%rsp), %rax
	movq	%rax, 296(%rsp)
	jmp	.LBB102_197
.LBB102_196:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%rbx, %rsi
	movq	16(%rsp), %rbx
	leaq	1(%rbx), %rdx
	callq	memcpy@PLT
.LBB102_197:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%rbx, 288(%rsp)
.Ltmp1250:
	leaq	120(%rsp), %rdi
	leaq	88(%rsp), %rsi
	leaq	280(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp1251:
# %bb.198:                              #   in Loop: Header=BB102_141 Depth=1
	movq	128(%rsp), %r8
	movq	56(%rsp), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB102_619
# %bb.199:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i598
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	48(%rsp), %rdi
	movl	$15, %eax
	leaq	64(%rsp), %rcx
	cmpq	%rcx, %rdi
	je	.LBB102_201
# %bb.200:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i598
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	64(%rsp), %rax
.LBB102_201:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i598
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	120(%rsp), %rcx
	leaq	(%rsi,%r8), %rbx
	cmpq	%rax, %rbx
	jbe	.LBB102_203
# %bb.202:                              #   in Loop: Header=BB102_141 Depth=1
.Ltmp1253:
	movq	%r12, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1254:
	jmp	.LBB102_216
.LBB102_203:                            #   in Loop: Header=BB102_141 Depth=1
	testq	%r8, %r8
	je	.LBB102_216
# %bb.204:                              #   in Loop: Header=BB102_141 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB102_215
# %bb.205:                              #   in Loop: Header=BB102_141 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB102_216
.LBB102_206:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%r14, %r15
	movq	8(%rbx), %rax
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
.Ltmp1271:
	leaq	120(%rsp), %rdi
	callq	_ZN8pybind116detail13clean_type_idB5cxx11EPKc
.Ltmp1272:
# %bb.207:                              #   in Loop: Header=BB102_141 Depth=1
	leaq	24(%rsp), %r14
	movq	%r14, 8(%rsp)
	movq	120(%rsp), %rbp
	movq	128(%rsp), %r13
	cmpq	$16, %r13
	leaq	136(%rsp), %rbx
	jb	.LBB102_212
# %bb.208:                              #   in Loop: Header=BB102_141 Depth=1
	testq	%r13, %r13
	js	.LBB102_642
# %bb.209:                              #   in Loop: Header=BB102_141 Depth=1
	movq	%r13, %rdi
	incq	%rdi
	js	.LBB102_607
# %bb.210:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i705
                                        #   in Loop: Header=BB102_141 Depth=1
.Ltmp1274:
	callq	_Znwm@PLT
.Ltmp1275:
# %bb.211:                              # %.noexc709
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%rax, %r14
	movq	%rax, 8(%rsp)
	movq	%r13, 24(%rsp)
.LBB102_212:                            # %._crit_edge.i.i.i704
                                        #   in Loop: Header=BB102_141 Depth=1
	testq	%r13, %r13
	je	.LBB102_288
# %bb.213:                              # %._crit_edge.i.i.i704
                                        #   in Loop: Header=BB102_141 Depth=1
	cmpq	$1, %r13
	jne	.LBB102_287
# %bb.214:                              #   in Loop: Header=BB102_141 Depth=1
	movzbl	(%rbp), %eax
	movb	%al, (%r14)
	jmp	.LBB102_288
.LBB102_215:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB102_216:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%rbx, 56(%rsp)
	movq	48(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	120(%rsp), %rdi
	leaq	136(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_218
# %bb.217:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i607
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	136(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_218:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit609
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	280(%rsp), %rdi
	leaq	296(%rsp), %rax
	cmpq	%rax, %rdi
	movq	184(%rsp), %rbx                 # 8-byte Reload
	je	.LBB102_220
# %bb.219:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i610
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	296(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_220:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit612
                                        #   in Loop: Header=BB102_141 Depth=1
.Ltmp1256:
	leaq	352(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1257:
	leaq	168(%rsp), %r14
# %bb.221:                              # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_223
# %bb.222:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i613
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	104(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_223:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit615
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	152(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB102_225
# %bb.224:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i616
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	168(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_225:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit618
                                        #   in Loop: Header=BB102_141 Depth=1
.Ltmp1259:
	leaq	256(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1260:
	jmp	.LBB102_139
.LBB102_226:                            #   in Loop: Header=BB102_141 Depth=1
	movb	$32, 2(%rax,%rsi)
	movw	$15648, (%rax,%rsi)             # imm = 0x3D20
.LBB102_227:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%r14, 56(%rsp)
	movq	48(%rsp), %rax
	movb	$0, (%rax,%r14)
	movq	320(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rax
	movq	8(%rax,%rbx), %rsi
.Ltmp1332:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc
.Ltmp1333:
# %bb.228:                              #   in Loop: Header=BB102_141 Depth=1
	movq	16(%rsp), %r8
	movq	56(%rsp), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB102_635
# %bb.229:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i549
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%r15, %r14
	movq	48(%rsp), %rdi
	movl	$15, %eax
	leaq	64(%rsp), %rcx
	cmpq	%rcx, %rdi
	je	.LBB102_231
# %bb.230:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i549
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	64(%rsp), %rax
.LBB102_231:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i549
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	8(%rsp), %rcx
	leaq	(%rsi,%r8), %rbx
	cmpq	%rax, %rbx
	jbe	.LBB102_233
# %bb.232:                              #   in Loop: Header=BB102_141 Depth=1
.Ltmp1335:
	movq	%r12, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1336:
	jmp	.LBB102_316
.LBB102_233:                            #   in Loop: Header=BB102_141 Depth=1
	testq	%r8, %r8
	je	.LBB102_316
# %bb.234:                              #   in Loop: Header=BB102_141 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB102_315
# %bb.235:                              #   in Loop: Header=BB102_141 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB102_316
.LBB102_236:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i645.thread
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	16(%rsp), %rbp
	leaq	1(%rbp), %r13
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
	movq	%rbp, 160(%rsp)
	movq	%r12, %rax
.LBB102_237:                            #   in Loop: Header=BB102_141 Depth=1
	movb	$1, %cl
	movl	$15, %edx
	testb	%cl, %cl
	jne	.LBB102_239
.LBB102_238:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i646
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	168(%rsp), %rdx
.LBB102_239:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i646
                                        #   in Loop: Header=BB102_141 Depth=1
	cmpq	%rdx, %r13
	jbe	.LBB102_241
# %bb.240:                              #   in Loop: Header=BB102_141 Depth=1
.Ltmp1297:
	movl	$1, %r8d
	leaq	152(%rsp), %rdi
	movq	%rbp, %rsi
	xorl	%edx, %edx
	leaq	.L.str.90(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1298:
	jmp	.LBB102_242
.LBB102_241:                            #   in Loop: Header=BB102_141 Depth=1
	movb	$46, (%rax,%rbp)
.LBB102_242:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i650
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%r13, 160(%rsp)
	movq	152(%rsp), %rax
	movb	$0, (%rax,%r13)
	movq	%r15, 88(%rsp)
	movq	152(%rsp), %rax
	cmpq	%r12, %rax
	movq	%r12, %r13
	je	.LBB102_244
# %bb.243:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i651
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%rax, 88(%rsp)
	movq	160(%rsp), %rbx
	movq	168(%rsp), %rax
	movq	%rax, 104(%rsp)
	jmp	.LBB102_245
.LBB102_244:                            #   in Loop: Header=BB102_141 Depth=1
	movq	160(%rsp), %rbx
	leaq	1(%rbx), %rdx
	movq	%r15, %rdi
	movq	%r13, %rsi
	callq	memcpy@PLT
.LBB102_245:                            #   in Loop: Header=BB102_141 Depth=1
	leaq	48(%rsp), %r12
	movq	%rbx, 96(%rsp)
	movq	%r13, 152(%rsp)
	movq	$0, 160(%rsp)
	movb	$0, 168(%rsp)
	movq	112(%r14), %rax
	movq	%rax, 336(%rsp)
	leaq	.L.str.91(%rip), %rax
	movq	%rax, 344(%rsp)
	movq	$0, 352(%rsp)
.Ltmp1300:
	leaq	328(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp1301:
# %bb.246:                              # %.noexc663
                                        #   in Loop: Header=BB102_141 Depth=1
	leaq	24(%rsp), %r14
	movq	%r14, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp1303:
	leaq	8(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp1304:
	leaq	296(%rsp), %rdi
# %bb.247:                              # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i.i660
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%rdi, 280(%rsp)
	movq	8(%rsp), %rax
	cmpq	%r14, %rax
	je	.LBB102_249
# %bb.248:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i661
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%rax, 280(%rsp)
	movq	16(%rsp), %rbx
	movq	24(%rsp), %rax
	movq	%rax, 296(%rsp)
	jmp	.LBB102_250
.LBB102_249:                            #   in Loop: Header=BB102_141 Depth=1
	movq	16(%rsp), %rbx
	leaq	1(%rbx), %rdx
	movq	%r14, %rsi
	callq	memcpy@PLT
.LBB102_250:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%rbx, 288(%rsp)
.Ltmp1306:
	leaq	120(%rsp), %rdi
	leaq	88(%rsp), %rsi
	leaq	280(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp1307:
# %bb.251:                              #   in Loop: Header=BB102_141 Depth=1
	movq	128(%rsp), %r8
	movq	56(%rsp), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB102_625
# %bb.252:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i667
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	48(%rsp), %rdi
	movl	$15, %eax
	leaq	64(%rsp), %rcx
	cmpq	%rcx, %rdi
	je	.LBB102_254
# %bb.253:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i667
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	64(%rsp), %rax
.LBB102_254:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i667
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	120(%rsp), %rcx
	leaq	(%rsi,%r8), %rbx
	cmpq	%rax, %rbx
	jbe	.LBB102_256
# %bb.255:                              #   in Loop: Header=BB102_141 Depth=1
.Ltmp1309:
	movq	%r12, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1310:
	jmp	.LBB102_297
.LBB102_256:                            #   in Loop: Header=BB102_141 Depth=1
	testq	%r8, %r8
	je	.LBB102_297
# %bb.257:                              #   in Loop: Header=BB102_141 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB102_296
# %bb.258:                              #   in Loop: Header=BB102_141 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB102_297
.LBB102_259:                            #   in Loop: Header=BB102_141 Depth=1
	movb	$32, 2(%rax,%rsi)
	movw	$11306, (%rax,%rsi)             # imm = 0x2C2A
.LBB102_260:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%rbx, 56(%rsp)
	movq	48(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	40(%rsp), %rcx                  # 8-byte Reload
.LBB102_261:                            #   in Loop: Header=BB102_141 Depth=1
	movq	24(%rcx), %rax
	movq	32(%rcx), %rcx
	subq	%rax, %rcx
	sarq	$5, %rcx
	cmpq	%rcx, %r14
	jae	.LBB102_268
# %bb.262:                              #   in Loop: Header=BB102_141 Depth=1
	movq	%r14, %rcx
	shlq	$5, %rcx
	movq	(%rax,%rcx), %r13
	testq	%r13, %r13
	je	.LBB102_268
# %bb.263:                              #   in Loop: Header=BB102_141 Depth=1
	movq	%r13, %rdi
	callq	strlen@PLT
	movq	56(%rsp), %rsi
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rcx
	cmpq	%rax, %rcx
	jb	.LBB102_613
# %bb.264:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i487
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	48(%rsp), %rdi
	movl	$15, %ecx
	leaq	64(%rsp), %rdx
	cmpq	%rdx, %rdi
	je	.LBB102_266
# %bb.265:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i487
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	64(%rsp), %rcx
.LBB102_266:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i487
                                        #   in Loop: Header=BB102_141 Depth=1
	leaq	(%rsi,%rax), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB102_284
# %bb.267:                              #   in Loop: Header=BB102_141 Depth=1
.Ltmp1345:
	movq	%r12, %rdi
	xorl	%edx, %edx
	movq	%r13, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1346:
	jmp	.LBB102_314
.LBB102_268:                            #   in Loop: Header=BB102_141 Depth=1
	testq	%r14, %r14
	setne	%cl
	movq	40(%rsp), %rax                  # 8-byte Reload
	movzwl	89(%rax), %eax
	testb	$16, %al
	sete	%dl
	orb	%cl, %dl
	je	.LBB102_272
# %bb.269:                              #   in Loop: Header=BB102_141 Depth=1
	movzwl	%ax, %eax
	btl	$4, %eax
	movq	%r14, %rbx
	sbbq	$0, %rbx
	cmpq	$10, %rbx
	jae	.LBB102_277
# %bb.270:                              # %.thread.i
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%r14, %r15
	leaq	136(%rsp), %rax
	movq	%rax, 120(%rsp)
.LBB102_271:                            #   in Loop: Header=BB102_141 Depth=1
	movb	$0, 136(%rsp)
	movl	$1, %r13d
	movq	%rax, %r14
	jmp	.LBB102_337
.LBB102_272:                            #   in Loop: Header=BB102_141 Depth=1
	movq	56(%rsp), %rsi
	movq	%rsi, %rax
	andq	$-4, %rax
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-3, %rcx
	cmpq	%rcx, %rax
	je	.LBB102_613
# %bb.273:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i496
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	48(%rsp), %rax
	movl	$15, %ecx
	leaq	64(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB102_275
# %bb.274:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i496
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	64(%rsp), %rcx
.LBB102_275:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i496
                                        #   in Loop: Header=BB102_141 Depth=1
	leaq	4(%rsi), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB102_283
# %bb.276:                              #   in Loop: Header=BB102_141 Depth=1
.Ltmp1347:
	movl	$4, %r8d
	movq	%r12, %rdi
	xorl	%edx, %edx
	leaq	.L.str.85(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1348:
	jmp	.LBB102_314
.LBB102_277:                            # %.lr.ph.i.i.preheader
                                        #   in Loop: Header=BB102_141 Depth=1
	movl	$4, %esi
	movq	%rbx, %rcx
	.p2align	4, 0x90
.LBB102_278:                            # %.lr.ph.i.i
                                        #   Parent Loop BB102_141 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpq	$99, %rcx
	jbe	.LBB102_328
# %bb.279:                              #   in Loop: Header=BB102_278 Depth=2
	cmpq	$999, %rcx                      # imm = 0x3E7
	jbe	.LBB102_329
# %bb.280:                              #   in Loop: Header=BB102_278 Depth=2
	cmpq	$10000, %rcx                    # imm = 0x2710
	jb	.LBB102_330
# %bb.281:                              #   in Loop: Header=BB102_278 Depth=2
	movq	%rcx, %rax
	movabsq	$3777893186295716171, %rdx      # imm = 0x346DC5D63886594B
	mulq	%rdx
	shrq	$11, %rdx
	addl	$4, %esi
	cmpq	$99999, %rcx                    # imm = 0x1869F
	movq	%rdx, %rcx
	ja	.LBB102_278
# %bb.282:                              # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit.i.loopexit
                                        #   in Loop: Header=BB102_141 Depth=1
	addl	$-3, %esi
	jmp	.LBB102_330
.LBB102_283:                            #   in Loop: Header=BB102_141 Depth=1
	movl	$1718379891, (%rax,%rsi)        # imm = 0x666C6573
	jmp	.LBB102_314
.LBB102_284:                            #   in Loop: Header=BB102_141 Depth=1
	testq	%rax, %rax
	je	.LBB102_314
# %bb.285:                              #   in Loop: Header=BB102_141 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %rax
	jne	.LBB102_313
# %bb.286:                              #   in Loop: Header=BB102_141 Depth=1
	movzbl	(%r13), %eax
	movb	%al, (%rdi)
	jmp	.LBB102_314
.LBB102_287:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%r14, %rdi
	movq	%rbp, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
.LBB102_288:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%r13, 16(%rsp)
	movb	$0, (%r14,%r13)
	movq	16(%rsp), %r8
	movq	56(%rsp), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB102_627
# %bb.289:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i710
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	48(%rsp), %rdi
	movl	$15, %eax
	leaq	64(%rsp), %rcx
	cmpq	%rcx, %rdi
	movq	%r15, %r14
	je	.LBB102_291
# %bb.290:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i710
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	64(%rsp), %rax
.LBB102_291:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i710
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	8(%rsp), %rcx
	leaq	(%rsi,%r8), %rbx
	cmpq	%rax, %rbx
	jbe	.LBB102_293
# %bb.292:                              #   in Loop: Header=BB102_141 Depth=1
.Ltmp1277:
	movq	%r12, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1278:
	jmp	.LBB102_309
.LBB102_293:                            #   in Loop: Header=BB102_141 Depth=1
	testq	%r8, %r8
	je	.LBB102_309
# %bb.294:                              #   in Loop: Header=BB102_141 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB102_308
# %bb.295:                              #   in Loop: Header=BB102_141 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB102_309
.LBB102_296:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB102_297:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%rbx, 56(%rsp)
	movq	48(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	120(%rsp), %rdi
	leaq	136(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_299
# %bb.298:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i676
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	136(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_299:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit678
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	280(%rsp), %rdi
	leaq	296(%rsp), %rax
	cmpq	%rax, %rdi
	movq	184(%rsp), %rbx                 # 8-byte Reload
	je	.LBB102_301
# %bb.300:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i679
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	296(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_301:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit681
                                        #   in Loop: Header=BB102_141 Depth=1
.Ltmp1312:
	leaq	352(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1313:
# %bb.302:                              # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit682
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	88(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB102_304
# %bb.303:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i683
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	104(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_304:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit685
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	152(%rsp), %rdi
	leaq	168(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_306
# %bb.305:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i686
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	168(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_306:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit688
                                        #   in Loop: Header=BB102_141 Depth=1
.Ltmp1315:
	leaq	256(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1316:
# %bb.307:                              # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit689
                                        #   in Loop: Header=BB102_141 Depth=1
	xorl	%r14d, %r14d
	incq	%rbx
	jmp	.LBB102_141
.LBB102_308:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB102_309:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%rbx, 56(%rsp)
	movq	48(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_311
# %bb.310:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i719
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_311:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit721
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	120(%rsp), %rdi
	leaq	136(%rsp), %rax
	cmpq	%rax, %rdi
	movq	184(%rsp), %rbx                 # 8-byte Reload
	je	.LBB102_140
# %bb.312:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i722
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	136(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	incq	%rbx
	jmp	.LBB102_141
.LBB102_313:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%r13, %rsi
	movq	%rax, %rdx
	callq	memcpy@PLT
.LBB102_314:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit495
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%rbx, 56(%rsp)
	movq	48(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	%r14, %r15
	jmp	.LBB102_361
.LBB102_315:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB102_316:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%rbx, 56(%rsp)
	movq	48(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_318
# %bb.317:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i558
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	.p2align	4, 0x90
.LBB102_318:                            #   in Loop: Header=BB102_141 Depth=1
	movq	40(%rsp), %rax                  # 8-byte Reload
	movzwl	96(%rax), %eax
	leaq	1(%r14), %rbx
	testq	%rax, %rax
	je	.LBB102_327
# %bb.319:                              #   in Loop: Header=BB102_141 Depth=1
	cmpq	%rax, %rbx
	jne	.LBB102_327
# %bb.320:                              #   in Loop: Header=BB102_141 Depth=1
	movq	56(%rsp), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-3, %rax
	cmpq	%rax, %rsi
	jg	.LBB102_613
# %bb.321:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i564
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%r14, %r15
	movq	48(%rsp), %rax
	movl	$15, %ecx
	leaq	64(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB102_323
# %bb.322:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i564
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	64(%rsp), %rcx
.LBB102_323:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i564
                                        #   in Loop: Header=BB102_141 Depth=1
	leaq	3(%rsi), %r14
	cmpq	%rcx, %r14
	jbe	.LBB102_325
# %bb.324:                              #   in Loop: Header=BB102_141 Depth=1
.Ltmp1341:
	movl	$3, %r8d
	movq	%r12, %rdi
	xorl	%edx, %edx
	leaq	.L.str.88(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1342:
	jmp	.LBB102_326
.LBB102_325:                            #   in Loop: Header=BB102_141 Depth=1
	movb	$47, 2(%rax,%rsi)
	movw	$8236, (%rax,%rsi)              # imm = 0x202C
.LBB102_326:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit572
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%r14, 56(%rsp)
	movq	48(%rsp), %rax
	movb	$0, (%rax,%r14)
	movq	%r15, %r14
.LBB102_327:                            #   in Loop: Header=BB102_141 Depth=1
	testb	$1, 224(%rsp)                   # 1-byte Folded Reload
	cmoveq	%rbx, %r14
	movq	184(%rsp), %rbx                 # 8-byte Reload
	incq	%rbx
	jmp	.LBB102_141
.LBB102_328:                            #   in Loop: Header=BB102_141 Depth=1
	addl	$-2, %esi
	jmp	.LBB102_330
.LBB102_329:                            #   in Loop: Header=BB102_141 Depth=1
	decl	%esi
.LBB102_330:                            # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit.i
                                        #   in Loop: Header=BB102_141 Depth=1
	movl	%esi, %r13d
	leaq	136(%rsp), %rax
	movq	%rax, 120(%rsp)
	movq	%r14, %r15
	cmpl	$16, %esi
	jb	.LBB102_333
# %bb.331:                              # %.noexc.i506
                                        #   in Loop: Header=BB102_141 Depth=1
	leaq	1(%r13), %rdi
.Ltmp1349:
	callq	_Znwm@PLT
.Ltmp1350:
# %bb.332:                              # %.noexc507
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%rax, %r14
	movq	%rax, 120(%rsp)
	movq	%r13, 136(%rsp)
	jmp	.LBB102_335
.LBB102_333:                            #   in Loop: Header=BB102_141 Depth=1
	testq	%r13, %r13
	je	.LBB102_336
# %bb.334:                              #   in Loop: Header=BB102_141 Depth=1
	movq	%rax, %r14
	cmpl	$1, %r13d
	je	.LBB102_271
.LBB102_335:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%r14, %rdi
	xorl	%esi, %esi
	movq	%r13, %rdx
	callq	memset@PLT
	jmp	.LBB102_337
.LBB102_336:                            #   in Loop: Header=BB102_141 Depth=1
	leaq	136(%rsp), %r14
.LBB102_337:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%r13, 128(%rsp)
	movb	$0, (%r14,%r13)
	movq	120(%rsp), %rcx
	cmpq	$100, %rbx
	jb	.LBB102_342
# %bb.338:                              # %.lr.ph.preheader.i.i
                                        #   in Loop: Header=BB102_141 Depth=1
	movl	128(%rsp), %esi
	addl	$-2, %esi
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %r9
	movabsq	$2951479051793528259, %r10      # imm = 0x28F5C28F5C28F5C3
	.p2align	4, 0x90
.LBB102_339:                            # %.lr.ph.i4.i
                                        #   Parent Loop BB102_141 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	leal	1(%rsi), %edi
	movq	%rbx, %rax
	shrq	$2, %rax
	mulq	%r10
	shrq	$2, %rdx
	imull	$100, %edx, %eax
	movl	%ebx, %r8d
	subl	%eax, %r8d
	movzbl	(%r9,%r8,2), %eax
	movzbl	1(%r9,%r8,2), %r8d
	movb	%r8b, (%rcx,%rdi)
	movl	%esi, %edi
	movb	%al, (%rcx,%rdi)
	addl	$-2, %esi
	cmpq	$9999, %rbx                     # imm = 0x270F
	movq	%rdx, %rbx
	ja	.LBB102_339
# %bb.340:                              # %._crit_edge.i.i505
                                        #   in Loop: Header=BB102_141 Depth=1
	cmpq	$10, %rdx
	jb	.LBB102_343
.LBB102_341:                            #   in Loop: Header=BB102_141 Depth=1
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %rsi
	movzbl	(%rsi,%rdx,2), %eax
	movzbl	1(%rsi,%rdx,2), %edx
	movb	%dl, 1(%rcx)
	jmp	.LBB102_344
.LBB102_342:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%rbx, %rdx
	cmpq	$10, %rdx
	jae	.LBB102_341
.LBB102_343:                            #   in Loop: Header=BB102_141 Depth=1
	orb	$48, %dl
	movl	%edx, %eax
.LBB102_344:                            #   in Loop: Header=BB102_141 Depth=1
	movb	%al, (%rcx)
.Ltmp1352:
	movl	$3, %r8d
	leaq	120(%rsp), %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	leaq	.L.str.86(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.Ltmp1353:
# %bb.345:                              # %.noexc510
                                        #   in Loop: Header=BB102_141 Depth=1
	leaq	24(%rsp), %rdi
	movq	%rdi, 8(%rsp)
	movq	(%rax), %rcx
	movq	%rax, %r14
	addq	$16, %r14
	cmpq	%r14, %rcx
	je	.LBB102_347
# %bb.346:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i508
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%rcx, 8(%rsp)
	movq	16(%rax), %rcx
	movq	%rcx, 24(%rsp)
	movq	8(%rax), %rbx
	jmp	.LBB102_348
.LBB102_347:                            #   in Loop: Header=BB102_141 Depth=1
	movq	8(%rax), %rbx
	leaq	1(%rbx), %rdx
	movq	%r14, %rsi
	movq	%rax, %r13
	callq	memcpy@PLT
	movq	%r13, %rax
.LBB102_348:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%rbx, 16(%rsp)
	movq	%r14, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	16(%rsp), %r8
	movq	56(%rsp), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB102_629
# %bb.349:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i511
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	48(%rsp), %rdi
	movl	$15, %eax
	leaq	64(%rsp), %rcx
	cmpq	%rcx, %rdi
	je	.LBB102_351
# %bb.350:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i511
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	64(%rsp), %rax
.LBB102_351:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i511
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	8(%rsp), %rcx
	leaq	(%rsi,%r8), %rbx
	cmpq	%rax, %rbx
	jbe	.LBB102_353
# %bb.352:                              #   in Loop: Header=BB102_141 Depth=1
.Ltmp1355:
	movq	%r12, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1356:
	jmp	.LBB102_357
.LBB102_353:                            #   in Loop: Header=BB102_141 Depth=1
	testq	%r8, %r8
	je	.LBB102_357
# %bb.354:                              #   in Loop: Header=BB102_141 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB102_356
# %bb.355:                              #   in Loop: Header=BB102_141 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB102_357
.LBB102_356:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB102_357:                            #   in Loop: Header=BB102_141 Depth=1
	movq	%rbx, 56(%rsp)
	movq	48(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_359
# %bb.358:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i519
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_359:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit521
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	120(%rsp), %rdi
	leaq	136(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_361
# %bb.360:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i522
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	136(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_361:                            #   in Loop: Header=BB102_141 Depth=1
	movq	56(%rsp), %rsi
	movq	%rsi, %rax
	andq	$-2, %rax
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	decq	%rcx
	cmpq	%rcx, %rax
	je	.LBB102_613
# %bb.362:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i531
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	48(%rsp), %rax
	movl	$15, %ecx
	leaq	64(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB102_364
# %bb.363:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i531
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	64(%rsp), %rcx
.LBB102_364:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i531
                                        #   in Loop: Header=BB102_141 Depth=1
	leaq	2(%rsi), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB102_366
# %bb.365:                              #   in Loop: Header=BB102_141 Depth=1
.Ltmp1358:
	movl	$2, %r8d
	movq	%r12, %rdi
	xorl	%edx, %edx
	leaq	.L.str.7(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1359:
	jmp	.LBB102_367
.LBB102_366:                            #   in Loop: Header=BB102_141 Depth=1
	movw	$8250, (%rax,%rsi)              # imm = 0x203A
.LBB102_367:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit539
                                        #   in Loop: Header=BB102_141 Depth=1
	movq	%rbx, 56(%rsp)
	movq	48(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	$0, 224(%rsp)                   # 8-byte Folded Spill
	jmp	.LBB102_138
.LBB102_368:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movzwl	89(%rax), %eax
	movl	%eax, %ecx
	shrl	$6, %ecx
	andl	$1, %ecx
	btl	$7, %eax
	movq	368(%rsp), %r15                 # 8-byte Reload
	movq	%r15, %rax
	sbbq	%rcx, %rax
	cmpq	%rax, %r14
	jne	.LBB102_644
# %bb.369:
	movq	376(%rsp), %rax                 # 8-byte Reload
	movq	264(%rsp), %rcx                 # 8-byte Reload
	cmpq	$0, (%rax,%rcx,8)
	jne	.LBB102_644
# %bb.370:
	movq	48(%rsp), %rdi
	callq	strdup@PLT
	movq	%rax, %rbx
	movq	200(%rsp), %r14
	cmpq	208(%rsp), %r14
	je	.LBB102_393
# %bb.371:
	movq	%rbx, (%r14)
	addq	$8, %r14
	movq	%r14, 200(%rsp)
	movq	%r14, %rbp
	movq	40(%rsp), %r14                  # 8-byte Reload
	movq	%rbx, 16(%r14)
	movq	40(%r14), %rax
	cmpq	32(%r14), %rax
	je	.LBB102_373
.LBB102_372:
	movq	320(%rsp), %rdi                 # 8-byte Reload
	callq	_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_
.LBB102_373:                            # %_ZNSt6vectorIN8pybind116detail15argument_recordESaIS2_EE13shrink_to_fitEv.exit
	movw	%r15w, 92(%r14)
	movq	120(%r14), %rbx
	testq	%rbx, %rbx
	je	.LBB102_404
# %bb.374:
	movq	8(%rbx), %rax
	cmpq	PyInstanceMethod_Type@GOTPCREL(%rip), %rax
	jne	.LBB102_376
# %bb.375:                              # %thread-pre-split
	movq	16(%rbx), %rbx
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%rbx, 120(%rax)
	testq	%rbx, %rbx
	je	.LBB102_404
.LBB102_376:                            # %thread-pre-split.thread
	movq	8(%rbx), %rdi
	cmpq	PyCFunction_Type@GOTPCREL(%rip), %rdi
	je	.LBB102_382
# %bb.377:
.Ltmp1370:
	movq	PyCFunction_Type@GOTPCREL(%rip), %rsi
	callq	PyType_IsSubtype@PLT
.Ltmp1371:
# %bb.378:                              # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	120(%rcx), %rbx
	testl	%eax, %eax
	je	.LBB102_402
# %bb.379:                              # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.thread
	movq	8(%rbx), %rdi
	cmpq	PyCFunction_Type@GOTPCREL(%rip), %rdi
	je	.LBB102_382
# %bb.380:                              # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.i
.Ltmp1372:
	movq	PyCFunction_Type@GOTPCREL(%rip), %rsi
	callq	PyType_IsSubtype@PLT
.Ltmp1373:
# %bb.381:                              # %.noexc749
	testl	%eax, %eax
	je	.LBB102_668
.LBB102_382:                            # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.thread.i
	movq	16(%rbx), %rax
	testb	$32, 16(%rax)
	jne	.LBB102_404
# %bb.383:                              # %_ZL20PyCFunction_GET_SELFP7_object.exit
	movq	24(%rbx), %rax
	testq	%rax, %rax
	je	.LBB102_404
# %bb.384:                              # %_ZN8pybind1110isinstanceINS_7capsuleETnNSt9enable_ifIXsr3std10is_base_ofINS_6objectET_EE5valueEiE4typeELi0EEEbNS_6handleE.exit
	movq	8(%rax), %rcx
	cmpq	PyCapsule_Type@GOTPCREL(%rip), %rcx
	jne	.LBB102_404
# %bb.385:
	movq	%rax, 8(%rsp)
.Ltmp1387:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1388:
# %bb.386:                              # %_ZN8pybind1118reinterpret_borrowINS_7capsuleEEET_NS_6handleE.exit
	movq	8(%rsp), %rdi
.Ltmp1390:
	callq	PyCapsule_GetName@PLT
.Ltmp1391:
# %bb.387:                              # %.noexc754
	movq	%rax, %rbx
	testq	%rax, %rax
	jne	.LBB102_390
# %bb.388:
.Ltmp1392:
	callq	PyErr_Occurred@PLT
.Ltmp1393:
# %bb.389:                              # %.noexc755
	testq	%rax, %rax
	jne	.LBB102_688
.LBB102_390:                            # %_ZNK8pybind117capsule4nameEv.exit.i
.Ltmp1399:
	callq	_ZN8pybind116detail13get_internalsEv
.Ltmp1400:
# %bb.391:
	cmpq	456(%rax), %rbx
	je	.LBB102_563
# %bb.392:
	xorl	%r12d, %r12d
	jmp	.LBB102_565
.LBB102_393:
	movq	192(%rsp), %r15
	subq	%r15, %r14
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-7, %rax
	cmpq	%rax, %r14
	je	.LBB102_662
# %bb.394:                              # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i733
	movq	%r14, %rbp
	sarq	$3, %rbp
	cmpq	$1, %rbp
	movq	%rbp, %rax
	adcq	$0, %rax
	leaq	(%rax,%rbp), %r12
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rcx, %r12
	cmovaeq	%rcx, %r12
	addq	%rbp, %rax
	cmovbq	%rcx, %r12
	testq	%r12, %r12
	je	.LBB102_401
# %bb.395:
	leaq	(,%r12,8), %rdi
.Ltmp1368:
	callq	_Znwm@PLT
.Ltmp1369:
# %bb.396:
	movq	%rax, %r13
	movq	%rbx, (%r13,%rbp,8)
	testq	%r14, %r14
	jle	.LBB102_398
.LBB102_397:
	movq	%r13, %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	memmove@PLT
.LBB102_398:                            # %_ZNSt6vectorIPcSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exit16.i.i.i737
	leaq	(%r14,%r13), %rbp
	addq	$8, %rbp
	testq	%r15, %r15
	je	.LBB102_400
# %bb.399:
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	_ZdlPvm@PLT
.LBB102_400:                            # %_ZNSt6vectorIPcSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_.exit.i.i739
	movq	%r13, 192(%rsp)
	movq	%rbp, 200(%rsp)
	leaq	(,%r12,8), %rax
	addq	%r13, %rax
	movq	%rax, 208(%rsp)
	movq	40(%rsp), %r14                  # 8-byte Reload
	movq	368(%rsp), %r15                 # 8-byte Reload
	movq	%rbx, 16(%r14)
	movq	40(%r14), %rax
	cmpq	32(%r14), %rax
	jne	.LBB102_372
	jmp	.LBB102_373
.LBB102_401:
	xorl	%r13d, %r13d
	movq	%rbx, (%r13,%rbp,8)
	testq	%r14, %r14
	jg	.LBB102_397
	jmp	.LBB102_398
.LBB102_402:
	cmpq	_Py_NoneStruct@GOTPCREL(%rip), %rbx
	je	.LBB102_404
# %bb.403:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rsi
	cmpb	$95, (%rsi)
	jne	.LBB102_669
.LBB102_404:                            # %.thread983
.Ltmp1477:
	movl	$32, %edi
	callq	_Znwm@PLT
.Ltmp1478:
# %bb.405:
	movq	40(%rsp), %r12                  # 8-byte Reload
	movq	%rax, 104(%r12)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rax)
	movq	(%r12), %rcx
	movq	%rcx, (%rax)
	leaq	_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_(%rip), %rcx
	movq	%rcx, 8(%rax)
	movl	$3, 16(%rax)
	movq	360(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rbx
	movq	$0, (%rax)
.Ltmp1480:
	callq	_ZN8pybind116detail13get_internalsEv
.Ltmp1481:
# %bb.406:
	movq	456(%rax), %rdx
.Ltmp1483:
	leaq	_ZZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infomENUlPvE_8__invokeESE_(%rip), %rcx
	leaq	88(%rsp), %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind117capsuleC2EPKvPKcPFvPvE
.Ltmp1484:
# %bb.407:
	movq	192(%rsp), %rax
	cmpq	%rax, %rbp
	je	.LBB102_409
# %bb.408:
	movq	%rax, 200(%rsp)
.LBB102_409:                            # %_ZN8pybind1112cpp_function12strdup_guard7releaseEv.exit
	movq	$0, 152(%rsp)
	movq	112(%r12), %rdi
	testq	%rdi, %rdi
	je	.LBB102_424
# %bb.410:
.Ltmp1486:
	leaq	.L.str.71(%rip), %rbx
	movq	%rbx, %rsi
	callq	PyObject_HasAttrString@PLT
.Ltmp1487:
# %bb.411:
	cmpl	$1, %eax
	jne	.LBB102_417
# %bb.412:
	movq	112(%r12), %rax
	movq	%rax, 16(%rsp)
	movq	%rbx, 24(%rsp)
	leaq	32(%rsp), %r14
	movq	$0, 32(%rsp)
.Ltmp1507:
	leaq	8(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp1508:
# %bb.413:                              # %.noexc775
	movq	(%rax), %rax
	movq	%rax, 232(%rsp)
.Ltmp1509:
	leaq	232(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1510:
# %bb.414:                              # %_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEEcvNS_6objectEEv.exit
	movq	152(%rsp), %rax
	movq	%rax, 120(%rsp)
	movq	232(%rsp), %rax
	movq	%rax, 152(%rsp)
	movq	$0, 232(%rsp)
.Ltmp1515:
	leaq	120(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1516:
# %bb.415:                              # %_ZN8pybind116objectaSEOS0_.exit
.Ltmp1518:
	leaq	232(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1519:
# %bb.416:                              # %_ZN8pybind116objectD2Ev.exit778
.Ltmp1521:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1522:
	jmp	.LBB102_424
.LBB102_417:
	movq	112(%r12), %rdi
.Ltmp1488:
	leaq	.L.str.95(%rip), %rbx
	movq	%rbx, %rsi
	callq	PyObject_HasAttrString@PLT
.Ltmp1489:
# %bb.418:
	cmpl	$1, %eax
	jne	.LBB102_424
# %bb.419:
	movq	112(%r12), %rax
	movq	%rax, 16(%rsp)
	movq	%rbx, 24(%rsp)
	leaq	32(%rsp), %r14
	movq	$0, 32(%rsp)
.Ltmp1490:
	leaq	8(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp1491:
# %bb.420:                              # %.noexc784
	movq	(%rax), %rax
	movq	%rax, 232(%rsp)
.Ltmp1492:
	leaq	232(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1493:
# %bb.421:                              # %_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEEcvNS_6objectEEv.exit786
	movq	152(%rsp), %rax
	movq	%rax, 120(%rsp)
	movq	232(%rsp), %rax
	movq	%rax, 152(%rsp)
	movq	$0, 232(%rsp)
.Ltmp1498:
	leaq	120(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1499:
# %bb.422:                              # %_ZN8pybind116objectaSEOS0_.exit788
.Ltmp1501:
	leaq	232(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1502:
# %bb.423:                              # %_ZN8pybind116objectD2Ev.exit789
.Ltmp1504:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1505:
.LBB102_424:
	movq	104(%r12), %rdi
	movq	88(%rsp), %rsi
	movq	152(%rsp), %rdx
.Ltmp1524:
	xorl	%ecx, %ecx
	callq	PyCMethod_New@PLT
.Ltmp1525:
# %bb.425:
	movq	312(%rsp), %rcx                 # 8-byte Reload
	movq	%rax, (%rcx)
	testq	%rax, %rax
	je	.LBB102_648
# %bb.426:
.Ltmp1526:
	leaq	152(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1527:
# %bb.427:                              # %_ZN8pybind116objectD2Ev.exit792
.Ltmp1529:
	leaq	88(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1530:
# %bb.428:                              # %_ZN8pybind1112cpp_function12strdup_guard7releaseEv.exit838.thread
	leaq	24(%rsp), %rbx
	movq	%rbx, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$1, %al
	movl	%eax, 224(%rsp)                 # 4-byte Spill
	movq	%rbx, 80(%rsp)                  # 8-byte Spill
.LBB102_429:                            # %.lr.ph1405.sink.split
	movb	$0, (%rbx)
.LBB102_430:                            # %.lr.ph1405
	movq	$0, 184(%rsp)                   # 8-byte Folded Spill
	movb	$1, %r14b
	jmp	.LBB102_433
.LBB102_431:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit953
                                        #   in Loop: Header=BB102_433 Depth=1
	movb	$10, (%rax,%r15)
	movq	%rbx, 16(%rsp)
	movq	8(%rsp), %rax
	movb	$0, 1(%rax,%r15)
	.p2align	4, 0x90
.LBB102_432:                            #   in Loop: Header=BB102_433 Depth=1
	movq	128(%r12), %r12
	testq	%r12, %r12
	je	.LBB102_544
.LBB102_433:                            # =>This Loop Header: Depth=1
                                        #     Child Loop BB102_445 Depth 2
                                        #     Child Loop BB102_461 Depth 2
	cmpb	$1, _ZZN8pybind117options12global_stateEvE8instance+1(%rip)
	jne	.LBB102_512
# %bb.434:                              #   in Loop: Header=BB102_433 Depth=1
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rdi
	leaq	.L.str.101(%rip), %rsi
	callq	strcmp@PLT
	testl	%eax, %eax
	je	.LBB102_512
# %bb.435:                              #   in Loop: Header=BB102_433 Depth=1
	cmpl	$0, 184(%rsp)                   # 4-byte Folded Reload
	movl	%r14d, 264(%rsp)                # 4-byte Spill
	jle	.LBB102_442
# %bb.436:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i866
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	8(%rsp), %rax
	movl	$15, %ecx
	cmpq	80(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB102_438
# %bb.437:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i866
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	24(%rsp), %rcx
.LBB102_438:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i866
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	16(%rsp), %r15
	leaq	1(%r15), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB102_441
# %bb.439:                              #   in Loop: Header=BB102_433 Depth=1
.Ltmp1532:
	movl	$1, %r8d
	leaq	8(%rsp), %rdi
	movq	%r15, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1533:
# %bb.440:                              # %.noexc868
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	8(%rsp), %rax
.LBB102_441:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit869
                                        #   in Loop: Header=BB102_433 Depth=1
	movb	$10, (%rax,%r15)
	movq	%rbx, 16(%rsp)
	movq	8(%rsp), %rax
	movb	$0, 1(%rax,%r15)
.LBB102_442:                            #   in Loop: Header=BB102_433 Depth=1
	movl	224(%rsp), %eax                 # 4-byte Reload
	testb	%al, %al
	jne	.LBB102_488
# %bb.443:                              #   in Loop: Header=BB102_433 Depth=1
	movq	184(%rsp), %rax                 # 8-byte Reload
	incl	%eax
	movl	%eax, %ebp
	negl	%ebp
	movq	%rax, 184(%rsp)                 # 8-byte Spill
	cmovsl	%eax, %ebp
	movl	$1, %r14d
	cmpl	$10, %ebp
	jb	.LBB102_452
# %bb.444:                              # %.lr.ph.i.i870.preheader
                                        #   in Loop: Header=BB102_433 Depth=1
	movl	$4, %r14d
	movl	%ebp, %eax
	.p2align	4, 0x90
.LBB102_445:                            # %.lr.ph.i.i870
                                        #   Parent Loop BB102_433 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpl	$99, %eax
	jbe	.LBB102_450
# %bb.446:                              #   in Loop: Header=BB102_445 Depth=2
	cmpl	$999, %eax                      # imm = 0x3E7
	jbe	.LBB102_451
# %bb.447:                              #   in Loop: Header=BB102_445 Depth=2
	cmpl	$10000, %eax                    # imm = 0x2710
	jb	.LBB102_452
# %bb.448:                              #   in Loop: Header=BB102_445 Depth=2
	movl	%eax, %ecx
	movl	$3518437209, %edx               # imm = 0xD1B71759
	imulq	%rdx, %rcx
	shrq	$45, %rcx
	addl	$4, %r14d
	cmpl	$99999, %eax                    # imm = 0x1869F
	movl	%ecx, %eax
	ja	.LBB102_445
# %bb.449:                              # %_ZNSt8__detail14__to_chars_lenIjEEjT_i.exit.i.loopexit
                                        #   in Loop: Header=BB102_433 Depth=1
	addl	$-3, %r14d
	jmp	.LBB102_452
.LBB102_450:                            #   in Loop: Header=BB102_433 Depth=1
	addl	$-2, %r14d
	jmp	.LBB102_452
.LBB102_451:                            #   in Loop: Header=BB102_433 Depth=1
	decl	%r14d
.LBB102_452:                            # %_ZNSt8__detail14__to_chars_lenIjEEjT_i.exit.i
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	184(%rsp), %rbx                 # 8-byte Reload
                                        # kill: def $ebx killed $ebx killed $rbx def $rbx
	shrl	$31, %ebx
	leal	(%r14,%rbx), %r13d
	leaq	104(%rsp), %r15
	movq	%r15, 88(%rsp)
	cmpl	$16, %r13d
	jb	.LBB102_455
# %bb.453:                              #   in Loop: Header=BB102_433 Depth=1
	leaq	1(%r13), %rdi
.Ltmp1534:
	callq	_Znwm@PLT
.Ltmp1535:
# %bb.454:                              # %.noexc.i878
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	%rax, %r15
	movq	%rax, 88(%rsp)
	movq	%r13, 104(%rsp)
	jmp	.LBB102_458
.LBB102_455:                            #   in Loop: Header=BB102_433 Depth=1
	testq	%r13, %r13
	je	.LBB102_459
# %bb.456:                              #   in Loop: Header=BB102_433 Depth=1
	cmpl	$1, %r13d
	jne	.LBB102_458
# %bb.457:                              #   in Loop: Header=BB102_433 Depth=1
	movb	$45, 104(%rsp)
	jmp	.LBB102_459
.LBB102_458:                            #   in Loop: Header=BB102_433 Depth=1
	movq	%r15, %rdi
	movl	$45, %esi
	movq	%r13, %rdx
	callq	memset@PLT
.LBB102_459:                            #   in Loop: Header=BB102_433 Depth=1
	movq	%r13, 96(%rsp)
	movb	$0, (%r15,%r13)
	movl	%ebx, %eax
	addq	88(%rsp), %rax
	cmpl	$100, %ebp
	jb	.LBB102_464
# %bb.460:                              # %.lr.ph.preheader.i.i875
                                        #   in Loop: Header=BB102_433 Depth=1
	addl	$-2, %r14d
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %r8
	.p2align	4, 0x90
.LBB102_461:                            # %.lr.ph.i11.i
                                        #   Parent Loop BB102_433 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	leal	1(%r14), %edx
	movl	%ebp, %ecx
	imulq	$1374389535, %rcx, %rcx         # imm = 0x51EB851F
	shrq	$37, %rcx
	imull	$100, %ecx, %esi
	movl	%ebp, %edi
	subl	%esi, %edi
	movzbl	(%r8,%rdi,2), %esi
	movzbl	1(%r8,%rdi,2), %edi
	movb	%dil, (%rax,%rdx)
	movl	%r14d, %edx
	movb	%sil, (%rax,%rdx)
	addl	$-2, %r14d
	cmpl	$9999, %ebp                     # imm = 0x270F
	movl	%ecx, %ebp
	ja	.LBB102_461
# %bb.462:                              # %._crit_edge.i.i872
                                        #   in Loop: Header=BB102_433 Depth=1
	cmpl	$10, %ecx
	jb	.LBB102_465
.LBB102_463:                            #   in Loop: Header=BB102_433 Depth=1
	movl	%ecx, %ecx
	leaq	(%rcx,%rcx), %rdx
	movl	%edx, %edx
	movzbl	1(%rdx,%r8), %edx
	movb	%dl, 1(%rax)
	movzbl	(%r8,%rcx,2), %ecx
	jmp	.LBB102_466
.LBB102_464:                            #   in Loop: Header=BB102_433 Depth=1
	movl	%ebp, %ecx
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %r8
	cmpl	$10, %ecx
	jae	.LBB102_463
.LBB102_465:                            #   in Loop: Header=BB102_433 Depth=1
	orb	$48, %cl
.LBB102_466:                            # %_ZNSt7__cxx119to_stringEi.exit
                                        #   in Loop: Header=BB102_433 Depth=1
	movl	224(%rsp), %edx                 # 4-byte Reload
	movb	%cl, (%rax)
	movq	96(%rsp), %rsi
	movq	%rsi, %rax
	andq	$-2, %rax
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	decq	%rcx
	cmpq	%rcx, %rax
	je	.LBB102_633
# %bb.467:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i879
                                        #   in Loop: Header=BB102_433 Depth=1
	movl	%edx, 224(%rsp)                 # 4-byte Spill
	movq	88(%rsp), %rax
	movl	$15, %ecx
	leaq	104(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB102_469
# %bb.468:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i879
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	104(%rsp), %rcx
.LBB102_469:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i879
                                        #   in Loop: Header=BB102_433 Depth=1
	leaq	2(%rsi), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB102_471
# %bb.470:                              #   in Loop: Header=BB102_433 Depth=1
.Ltmp1537:
	movl	$2, %r8d
	leaq	88(%rsp), %rdi
	xorl	%edx, %edx
	leaq	.L.str.104(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1538:
	jmp	.LBB102_472
.LBB102_471:                            #   in Loop: Header=BB102_433 Depth=1
	movw	$8238, (%rax,%rsi)              # imm = 0x202E
.LBB102_472:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i884
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	%rbx, 96(%rsp)
	movq	88(%rsp), %rax
	movb	$0, (%rax,%rbx)
	leaq	136(%rsp), %rdi
	movq	%rdi, 120(%rsp)
	movq	88(%rsp), %rcx
	leaq	104(%rsp), %rbx
	cmpq	%rbx, %rcx
	je	.LBB102_474
# %bb.473:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i885
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	%rcx, 120(%rsp)
	movq	96(%rsp), %r13
	movq	104(%rsp), %rax
	movq	%rax, 136(%rsp)
	jmp	.LBB102_475
.LBB102_474:                            #   in Loop: Header=BB102_433 Depth=1
	movq	96(%rsp), %r13
	leaq	1(%r13), %rdx
	movq	%rbx, %rsi
	movq	%rdi, %r15
	callq	memcpy@PLT
	movq	%r15, %rcx
.LBB102_475:                            #   in Loop: Header=BB102_433 Depth=1
	movq	%r13, 128(%rsp)
	movq	%rbx, 88(%rsp)
	movq	$0, 96(%rsp)
	movb	$0, 104(%rsp)
	movq	16(%rsp), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r13, %rax
	jb	.LBB102_631
# %bb.476:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i890
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	8(%rsp), %rdi
	movl	$15, %eax
	cmpq	80(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB102_478
# %bb.477:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i890
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	24(%rsp), %rax
.LBB102_478:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i890
                                        #   in Loop: Header=BB102_433 Depth=1
	leaq	(%rsi,%r13), %rbx
	cmpq	%rax, %rbx
	jbe	.LBB102_480
# %bb.479:                              #   in Loop: Header=BB102_433 Depth=1
.Ltmp1540:
	leaq	8(%rsp), %rdi
	xorl	%edx, %edx
	movq	%r13, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1541:
	jmp	.LBB102_484
.LBB102_480:                            #   in Loop: Header=BB102_433 Depth=1
	testq	%r13, %r13
	je	.LBB102_484
# %bb.481:                              #   in Loop: Header=BB102_433 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r13
	jne	.LBB102_483
# %bb.482:                              #   in Loop: Header=BB102_433 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB102_484
.LBB102_483:                            #   in Loop: Header=BB102_433 Depth=1
	movq	%rcx, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
.LBB102_484:                            #   in Loop: Header=BB102_433 Depth=1
	movq	%rbx, 16(%rsp)
	movq	8(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	120(%rsp), %rdi
	leaq	136(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_486
# %bb.485:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i899
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	136(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_486:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit901
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_488
# %bb.487:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i902
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	104(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_488:                            #   in Loop: Header=BB102_433 Depth=1
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %r13
	movq	%r13, %rdi
	callq	strlen@PLT
	movq	16(%rsp), %rsi
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rcx
	cmpq	%rax, %rcx
	jb	.LBB102_617
# %bb.489:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i911
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	8(%rsp), %rdi
	movl	$15, %ecx
	cmpq	80(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB102_491
# %bb.490:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i911
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	24(%rsp), %rcx
.LBB102_491:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i911
                                        #   in Loop: Header=BB102_433 Depth=1
	leaq	(%rsi,%rax), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB102_493
# %bb.492:                              #   in Loop: Header=BB102_433 Depth=1
.Ltmp1549:
	leaq	8(%rsp), %rdi
	xorl	%edx, %edx
	movq	%r13, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1550:
	jmp	.LBB102_497
.LBB102_493:                            #   in Loop: Header=BB102_433 Depth=1
	testq	%rax, %rax
	je	.LBB102_497
# %bb.494:                              #   in Loop: Header=BB102_433 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %rax
	jne	.LBB102_496
# %bb.495:                              #   in Loop: Header=BB102_433 Depth=1
	movzbl	(%r13), %eax
	movb	%al, (%rdi)
	jmp	.LBB102_497
.LBB102_496:                            #   in Loop: Header=BB102_433 Depth=1
	movq	%r13, %rsi
	movq	%rax, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB102_497:                            #   in Loop: Header=BB102_433 Depth=1
	movq	%rbx, 16(%rsp)
	movq	8(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	16(%r12), %r13
	movq	%r13, %rdi
	callq	strlen@PLT
	movq	16(%rsp), %rsi
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rcx
	cmpq	%rax, %rcx
	jb	.LBB102_617
# %bb.498:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i920
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	8(%rsp), %rdi
	movl	$15, %ecx
	cmpq	80(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB102_500
# %bb.499:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i920
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	24(%rsp), %rcx
.LBB102_500:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i920
                                        #   in Loop: Header=BB102_433 Depth=1
	leaq	(%rsi,%rax), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB102_502
# %bb.501:                              #   in Loop: Header=BB102_433 Depth=1
.Ltmp1551:
	leaq	8(%rsp), %rdi
	xorl	%edx, %edx
	movq	%r13, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1552:
	jmp	.LBB102_506
.LBB102_502:                            #   in Loop: Header=BB102_433 Depth=1
	testq	%rax, %rax
	je	.LBB102_506
# %bb.503:                              #   in Loop: Header=BB102_433 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %rax
	jne	.LBB102_505
# %bb.504:                              #   in Loop: Header=BB102_433 Depth=1
	movzbl	(%r13), %eax
	movb	%al, (%rdi)
	jmp	.LBB102_506
.LBB102_505:                            #   in Loop: Header=BB102_433 Depth=1
	movq	%r13, %rsi
	movq	%rax, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB102_506:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i929
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	%rbx, 16(%rsp)
	movq	8(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	8(%rsp), %rax
	movq	16(%rsp), %r13
	movl	$15, %ecx
	cmpq	80(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB102_508
# %bb.507:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i929
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	24(%rsp), %rcx
.LBB102_508:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i929
                                        #   in Loop: Header=BB102_433 Depth=1
	leaq	1(%r13), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB102_511
# %bb.509:                              #   in Loop: Header=BB102_433 Depth=1
.Ltmp1553:
	movl	$1, %r8d
	leaq	8(%rsp), %rdi
	movq	%r13, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1554:
# %bb.510:                              # %.noexc931
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	8(%rsp), %rax
.LBB102_511:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit932
                                        #   in Loop: Header=BB102_433 Depth=1
	movb	$10, (%rax,%r13)
	movq	%rbx, 16(%rsp)
	movq	8(%rsp), %rax
	movb	$0, 1(%rax,%r13)
	movl	264(%rsp), %r14d                # 4-byte Reload
.LBB102_512:                            #   in Loop: Header=BB102_433 Depth=1
	movq	8(%r12), %rax
	testq	%rax, %rax
	je	.LBB102_432
# %bb.513:                              #   in Loop: Header=BB102_433 Depth=1
	cmpb	$0, (%rax)
	je	.LBB102_432
# %bb.514:                              #   in Loop: Header=BB102_433 Depth=1
	cmpb	$1, _ZZN8pybind117options12global_stateEvE8instance(%rip)
	jne	.LBB102_432
# %bb.515:                              #   in Loop: Header=BB102_433 Depth=1
	movzbl	_ZZN8pybind117options12global_stateEvE8instance+1(%rip), %eax
	movl	%eax, %ecx
	orb	%r14b, %cl
	movq	16(%rsp), %r13
	testb	$1, %cl
	je	.LBB102_517
# %bb.516:                              #   in Loop: Header=BB102_433 Depth=1
	andb	%al, %r14b
	testb	$1, %al
	jne	.LBB102_523
	jmp	.LBB102_529
.LBB102_517:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i933
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	8(%rsp), %rax
	movl	$15, %ecx
	cmpq	80(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB102_519
# %bb.518:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i933
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	24(%rsp), %rcx
.LBB102_519:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i933
                                        #   in Loop: Header=BB102_433 Depth=1
	leaq	1(%r13), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB102_522
# %bb.520:                              #   in Loop: Header=BB102_433 Depth=1
.Ltmp1555:
	movl	$1, %r8d
	leaq	8(%rsp), %rdi
	movq	%r13, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1556:
# %bb.521:                              # %.noexc935
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	8(%rsp), %rax
.LBB102_522:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit936
                                        #   in Loop: Header=BB102_433 Depth=1
	movb	$10, (%rax,%r13)
	movq	%rbx, 16(%rsp)
	movq	8(%rsp), %rax
	movb	$0, 1(%rax,%r13)
	movzbl	_ZZN8pybind117options12global_stateEvE8instance+1(%rip), %eax
	xorl	%r14d, %r14d
	movq	16(%rsp), %r13
	testb	$1, %al
	je	.LBB102_529
.LBB102_523:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i937
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	8(%rsp), %rax
	movl	$15, %ecx
	cmpq	80(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB102_525
# %bb.524:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i937
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	24(%rsp), %rcx
.LBB102_525:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i937
                                        #   in Loop: Header=BB102_433 Depth=1
	leaq	1(%r13), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB102_528
# %bb.526:                              #   in Loop: Header=BB102_433 Depth=1
.Ltmp1557:
	movl	$1, %r8d
	leaq	8(%rsp), %rdi
	movq	%r13, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1558:
# %bb.527:                              # %.noexc939
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	8(%rsp), %rax
.LBB102_528:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit940
                                        #   in Loop: Header=BB102_433 Depth=1
	movb	$10, (%rax,%r13)
	movq	%rbx, 16(%rsp)
	movq	8(%rsp), %rax
	movb	$0, 1(%rax,%r13)
	movq	16(%rsp), %r13
.LBB102_529:                            #   in Loop: Header=BB102_433 Depth=1
	movq	8(%r12), %rbp
	movq	%rbp, %rdi
	callq	strlen@PLT
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%r13, %rcx
	cmpq	%rax, %rcx
	jb	.LBB102_617
# %bb.530:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i941
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	8(%rsp), %rdi
	movl	$15, %ecx
	cmpq	80(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB102_532
# %bb.531:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i941
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	24(%rsp), %rcx
.LBB102_532:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i941
                                        #   in Loop: Header=BB102_433 Depth=1
	leaq	(%rax,%r13), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB102_534
# %bb.533:                              #   in Loop: Header=BB102_433 Depth=1
.Ltmp1559:
	leaq	8(%rsp), %rdi
	movq	%r13, %rsi
	xorl	%edx, %edx
	movq	%rbp, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1560:
	jmp	.LBB102_538
.LBB102_534:                            #   in Loop: Header=BB102_433 Depth=1
	testq	%rax, %rax
	je	.LBB102_538
# %bb.535:                              #   in Loop: Header=BB102_433 Depth=1
	addq	%r13, %rdi
	cmpq	$1, %rax
	jne	.LBB102_537
# %bb.536:                              #   in Loop: Header=BB102_433 Depth=1
	movzbl	(%rbp), %eax
	movb	%al, (%rdi)
	jmp	.LBB102_538
.LBB102_537:                            #   in Loop: Header=BB102_433 Depth=1
	movq	%rbp, %rsi
	movq	%rax, %rdx
	callq	memcpy@PLT
.LBB102_538:                            #   in Loop: Header=BB102_433 Depth=1
	movq	%rbx, 16(%rsp)
	movq	8(%rsp), %rax
	movb	$0, (%rax,%rbx)
	cmpb	$1, _ZZN8pybind117options12global_stateEvE8instance+1(%rip)
	jne	.LBB102_432
# %bb.539:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i950
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	8(%rsp), %rax
	movl	$15, %ecx
	cmpq	80(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB102_541
# %bb.540:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i950
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	24(%rsp), %rcx
.LBB102_541:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i950
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	16(%rsp), %r15
	leaq	1(%r15), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB102_431
# %bb.542:                              #   in Loop: Header=BB102_433 Depth=1
.Ltmp1561:
	movl	$1, %r8d
	leaq	8(%rsp), %rdi
	movq	%r15, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1562:
# %bb.543:                              # %.noexc952
                                        #   in Loop: Header=BB102_433 Depth=1
	movq	8(%rsp), %rax
	jmp	.LBB102_431
.LBB102_544:                            # %._crit_edge1406
	movq	312(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rbx
	movq	16(%rbx), %rax
	movq	24(%rax), %rdi
	callq	free@PLT
	cmpq	$0, 16(%rsp)
	je	.LBB102_546
# %bb.545:
	movq	8(%rsp), %rdi
	callq	strdup@PLT
	jmp	.LBB102_547
.LBB102_546:
	xorl	%eax, %eax
.LBB102_547:
	movq	40(%rsp), %rdx                  # 8-byte Reload
	movq	80(%rsp), %r14                  # 8-byte Reload
	movq	16(%rbx), %rcx
	movq	%rax, 24(%rcx)
	testb	$16, 89(%rdx)
	je	.LBB102_553
# %bb.548:
	movq	312(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rdi
.Ltmp1567:
	callq	PyInstanceMethod_New@PLT
.Ltmp1568:
# %bb.549:
	movq	312(%rsp), %rcx                 # 8-byte Reload
	movq	%rax, (%rcx)
	testq	%rax, %rax
	je	.LBB102_660
# %bb.550:
	movq	(%rbx), %rax
	testl	%eax, %eax
	js	.LBB102_553
# %bb.551:
	decq	%rax
	movq	%rax, (%rbx)
	jne	.LBB102_553
# %bb.552:
.Ltmp1569:
	movq	%rbx, %rdi
	callq	_Py_Dealloc@PLT
.Ltmp1570:
.LBB102_553:                            # %_ZL9Py_DECREFP7_object.exit
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB102_555
# %bb.554:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i954
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_555:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit956
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_557
# %bb.556:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i957
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_557:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit959
	movq	192(%rsp), %rbx
	movq	200(%rsp), %r14
	cmpq	%r14, %rbx
	je	.LBB102_560
# %bb.558:
	movq	%rbx, %r15
	.p2align	4, 0x90
.LBB102_559:                            # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r15), %rdi
	callq	free@PLT
	addq	$8, %r15
	cmpq	%r14, %r15
	jne	.LBB102_559
.LBB102_560:                            # %._crit_edge.i
	testq	%rbx, %rbx
	je	.LBB102_562
# %bb.561:
	movq	208(%rsp), %rsi
	subq	%rbx, %rsi
	movq	%rbx, %rdi
	callq	_ZdlPvm@PLT
.LBB102_562:                            # %_ZN8pybind1112cpp_function12strdup_guardD2Ev.exit
	addq	$488, %rsp                      # imm = 0x1E8
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB102_563:
	.cfi_def_cfa_offset 544
.Ltmp1401:
	leaq	8(%rsp), %rdi
	callq	_ZNK8pybind117capsule11get_pointerINS_6detail15function_recordEEEPT_v
.Ltmp1402:
# %bb.564:
	movq	112(%rax), %rcx
	xorl	%r12d, %r12d
	movq	40(%rsp), %rdx                  # 8-byte Reload
	cmpq	112(%rdx), %rcx
	cmoveq	%rax, %r12
.LBB102_565:
.Ltmp1407:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1408:
# %bb.566:
	testq	%r12, %r12
	je	.LBB102_404
# %bb.567:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	120(%rax), %rax
	movq	312(%rsp), %rdi                 # 8-byte Reload
	movq	%rax, (%rdi)
.Ltmp1410:
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1411:
# %bb.568:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movzwl	89(%rax), %eax
	movzwl	89(%r12), %ecx
	xorw	%ax, %cx
	testb	$16, %cl
	jne	.LBB102_674
# %bb.569:
	testl	$256, %eax                      # imm = 0x100
	jne	.LBB102_575
# %bb.570:
	movq	%r12, %rcx
	.p2align	4, 0x90
.LBB102_571:                            # %.preheader
                                        # =>This Inner Loop Header: Depth=1
	movq	%rcx, %rax
	movq	128(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.LBB102_571
# %bb.572:
	movq	360(%rsp), %rdx                 # 8-byte Reload
	movq	(%rdx), %rcx
	movq	$0, (%rdx)
	movq	%rcx, 128(%rax)
	movq	192(%rsp), %rax
	cmpq	%rax, %rbp
	je	.LBB102_574
# %bb.573:
	movq	%rax, 200(%rsp)
.LBB102_574:                            # %_ZN8pybind1112cpp_function12strdup_guard7releaseEv.exit838
	leaq	24(%rsp), %rax
	movq	%rax, 80(%rsp)                  # 8-byte Spill
	jmp	.LBB102_582
.LBB102_575:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%r12, 128(%rax)
	movq	%rax, %r12
	movq	312(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rax
	movq	24(%rax), %rax
	movq	%rax, 8(%rsp)
.Ltmp1451:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1452:
# %bb.576:                              # %_ZN8pybind1118reinterpret_borrowINS_7capsuleEEET_NS_6handleE.exit827
	movq	360(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rsi
	movq	$0, (%rax)
	movq	8(%rsp), %rdi
.Ltmp1454:
	callq	PyCapsule_SetPointer@PLT
.Ltmp1455:
# %bb.577:                              # %.noexc829
	testl	%eax, %eax
	jne	.LBB102_691
# %bb.578:                              # %_ZN8pybind117capsule11set_pointerEPKv.exit
	movq	192(%rsp), %rax
	cmpq	%rax, %rbp
	je	.LBB102_580
# %bb.579:
	movq	%rax, 200(%rsp)
.LBB102_580:                            # %_ZN8pybind1112cpp_function12strdup_guard7releaseEv.exit834
.Ltmp1465:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1466:
# %bb.581:                              # %_ZN8pybind1112cpp_function12strdup_guard7releaseEv.exit838.thread992
	leaq	24(%rsp), %rax
.LBB102_582:
	movq	%rax, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
	cmpb	$1, _ZZN8pybind117options12global_stateEvE8instance+1(%rip)
	jne	.LBB102_589
# %bb.583:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %r14
	leaq	.L.str.101(%rip), %rsi
	movq	%r14, %rdi
	callq	strcmp@PLT
	testl	%eax, %eax
	je	.LBB102_589
# %bb.584:
	movq	%r14, %rdi
	callq	strlen@PLT
	testq	%rax, %rax
	js	.LBB102_686
# %bb.585:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i840
	movq	%rax, %rbx
	cmpq	$15, %rax
	jbe	.LBB102_590
# %bb.586:
.Ltmp1468:
	leaq	8(%rsp), %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	movq	%r14, %rcx
	movq	%rbx, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1469:
# %bb.587:                              # %._crit_edge1509
	movq	8(%rsp), %r15
	jmp	.LBB102_594
.LBB102_589:
	movl	$0, 224(%rsp)                   # 4-byte Folded Spill
	jmp	.LBB102_430
.LBB102_590:
	movq	80(%rsp), %r15                  # 8-byte Reload
	testq	%rbx, %rbx
	je	.LBB102_594
# %bb.591:
	cmpq	$1, %rbx
	jne	.LBB102_593
# %bb.592:
	movzbl	(%r14), %eax
	movb	%al, 24(%rsp)
	movq	80(%rsp), %r15                  # 8-byte Reload
	jmp	.LBB102_594
.LBB102_593:
	movq	80(%rsp), %r15                  # 8-byte Reload
	movq	%r15, %rdi
	movq	%r14, %rsi
	movq	%rbx, %rdx
	callq	memcpy@PLT
.LBB102_594:
	movq	%rbx, 16(%rsp)
	movb	$0, (%r15,%rbx)
	movq	16(%rsp), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-18, %rax
	cmpq	%rax, %rsi
	jg	.LBB102_686
# %bb.595:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i848
	leaq	18(%rsi), %rbx
	movq	8(%rsp), %rax
	movl	$15, %ecx
	cmpq	80(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB102_597
# %bb.596:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i848
	movq	24(%rsp), %rcx
.LBB102_597:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i848
	cmpq	%rcx, %rbx
	jbe	.LBB102_599
# %bb.598:
.Ltmp1470:
	leaq	.L.str.102(%rip), %rcx
	leaq	8(%rsp), %rdi
	movl	$18, %r8d
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1471:
	jmp	.LBB102_600
.LBB102_599:
	movups	.L.str.102(%rip), %xmm0
	movups	%xmm0, (%rax,%rsi)
	movw	$2601, 16(%rax,%rsi)            # imm = 0xA29
.LBB102_600:
	movq	%rbx, 16(%rsp)
	movq	8(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	16(%rsp), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-22, %rax
	cmpq	%rax, %rsi
	jg	.LBB102_686
# %bb.601:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i857
	leaq	22(%rsi), %rbx
	movq	8(%rsp), %rax
	movl	$15, %ecx
	cmpq	80(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB102_603
# %bb.602:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i857
	movq	24(%rsp), %rcx
.LBB102_603:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i857
	cmpq	%rcx, %rbx
	jbe	.LBB102_605
# %bb.604:
.Ltmp1472:
	leaq	.L.str.103(%rip), %rcx
	leaq	8(%rsp), %rdi
	movl	$22, %r8d
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1473:
	jmp	.LBB102_606
.LBB102_605:
	movups	.L.str.103(%rip), %xmm0
	movups	%xmm0, (%rax,%rsi)
	movabsq	$723441741996848227, %rcx       # imm = 0xA0A2E6E6F697463
	movq	%rcx, 14(%rax,%rsi)
.LBB102_606:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit865
	movq	%rbx, 16(%rsp)
	addq	8(%rsp), %rbx
	movl	$0, 224(%rsp)                   # 4-byte Folded Spill
	jmp	.LBB102_429
.LBB102_607:                            # %.noexc6.i.i
.Ltmp1283:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp1284:
# %bb.608:                              # %.noexc708
.LBB102_609:                            # %.noexc11.i.i
.Ltmp1605:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp1606:
# %bb.610:                              # %.noexc415
.LBB102_611:                            # %.noexc11.i
.Ltmp1598:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp1599:
# %bb.612:                              # %.noexc420
.LBB102_613:                            # %.invoke1622
.Ltmp1363:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1364:
# %bb.614:                              # %.cont1623
.LBB102_615:
.Ltmp1327:
	leaq	.L.str.89(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1328:
# %bb.616:
.LBB102_617:                            # %.invoke1630
.Ltmp1564:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1565:
# %bb.618:                              # %.cont1631
.LBB102_619:
.Ltmp1262:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1263:
# %bb.620:                              # %.noexc604
.LBB102_621:
.Ltmp1238:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1239:
# %bb.622:                              # %.noexc584
.LBB102_623:                            # %.invoke
.Ltmp1183:
	leaq	.L.str.106(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1184:
# %bb.624:                              # %.cont
.LBB102_625:
.Ltmp1318:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1319:
# %bb.626:                              # %.noexc673
.LBB102_627:
.Ltmp1280:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1281:
# %bb.628:                              # %.noexc716
.LBB102_629:
.Ltmp1360:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1361:
# %bb.630:                              # %.noexc517
.LBB102_631:
.Ltmp1543:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1544:
# %bb.632:                              # %.noexc896
.LBB102_633:
.Ltmp1546:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1547:
# %bb.634:                              # %.noexc887
.LBB102_635:
.Ltmp1338:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1339:
# %bb.636:                              # %.noexc555
.LBB102_637:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp1207:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1208:
# %bb.638:
.Ltmp1210:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp1211:
# %bb.639:                              # %.noexc394
.LBB102_640:
.Ltmp1294:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1295:
# %bb.641:                              # %.noexc653
.LBB102_642:                            # %.noexc.i.i706
.Ltmp1285:
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1286:
# %bb.643:                              # %.noexc707
.LBB102_644:
.Ltmp1366:
	leaq	.L.str.92(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1367:
# %bb.645:
.LBB102_646:
.Ltmp1201:
	leaq	.L.str.106(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1202:
# %bb.647:                              # %.noexc406
.LBB102_648:
.Ltmp1574:
	leaq	.L.str.96(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1575:
# %bb.649:
.LBB102_650:                            # %.noexc.i
.Ltmp1609:
	leaq	.L.str.35(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.Ltmp1610:
# %bb.651:                              # %.noexc413
.LBB102_652:
.Ltmp1602:
	leaq	.L.str.35(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.Ltmp1603:
# %bb.653:                              # %.noexc418
.LBB102_654:
.Ltmp1595:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1596:
# %bb.655:                              # %.noexc425
.LBB102_656:
.Ltmp1592:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1593:
# %bb.657:                              # %.noexc430
.LBB102_658:
.Ltmp1589:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1590:
# %bb.659:                              # %.noexc440
.LBB102_660:
.Ltmp1571:
	leaq	.L.str.105(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1572:
# %bb.661:
.LBB102_662:
.Ltmp1583:
	leaq	.L.str.106(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1584:
# %bb.663:                              # %.noexc740
.LBB102_664:                            # %.noexc.i.i
.Ltmp1607:
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1608:
# %bb.665:                              # %.noexc414
.LBB102_666:                            # %.noexc.i417
.Ltmp1600:
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1601:
# %bb.667:                              # %.noexc419
.LBB102_668:
	leaq	.L.str.115(%rip), %rdi
	leaq	.L.str.116(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL20PyCFunction_GET_SELFP7_object(%rip), %rcx
	movl	$46, %edx
	callq	__assert_fail@PLT
.LBB102_669:
.Ltmp1375:
	leaq	88(%rsp), %rdi
	leaq	152(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_@PLT
.Ltmp1376:
# %bb.670:
.Ltmp1378:
	leaq	.L.str.93(%rip), %rsi
	leaq	120(%rsp), %rdi
	leaq	88(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp1379:
# %bb.671:
.Ltmp1381:
	leaq	.L.str.94(%rip), %rdx
	leaq	8(%rsp), %rdi
	leaq	120(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp1382:
# %bb.672:
.Ltmp1384:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1385:
# %bb.673:
.LBB102_674:
	testb	$16, %al
	leaq	.L.str.99(%rip), %rax
	leaq	.L.str.98(%rip), %rsi
	cmoveq	%rax, %rsi
.Ltmp1412:
	leaq	328(%rsp), %rdi
	leaq	279(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_@PLT
.Ltmp1413:
# %bb.675:
.Ltmp1415:
	leaq	.L.str.97(%rip), %rsi
	leaq	280(%rsp), %rdi
	leaq	328(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp1416:
# %bb.676:
.Ltmp1418:
	leaq	.L.str.100(%rip), %rdx
	leaq	232(%rsp), %rdi
	leaq	280(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp1419:
# %bb.677:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	112(%rax), %rax
	movq	%rax, 432(%rsp)
	leaq	.L.str.95(%rip), %rax
	movq	%rax, 440(%rsp)
	movq	$0, 448(%rsp)
.Ltmp1421:
	leaq	384(%rsp), %rdi
	leaq	424(%rsp), %rsi
	callq	_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE
.Ltmp1422:
# %bb.678:
.Ltmp1424:
	leaq	456(%rsp), %rdi
	leaq	384(%rsp), %rsi
	callq	_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv
.Ltmp1425:
# %bb.679:
.Ltmp1427:
	leaq	152(%rsp), %rdi
	leaq	232(%rsp), %rsi
	leaq	456(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp1428:
# %bb.680:
.Ltmp1430:
	leaq	.L.str.90(%rip), %rdx
	leaq	88(%rsp), %rdi
	leaq	152(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp1431:
# %bb.681:
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rsi
.Ltmp1433:
	leaq	392(%rsp), %rdi
	leaq	278(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_@PLT
.Ltmp1434:
# %bb.682:
.Ltmp1436:
	leaq	120(%rsp), %rdi
	leaq	88(%rsp), %rsi
	leaq	392(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp1437:
# %bb.683:
.Ltmp1439:
	leaq	8(%rsp), %rdi
	leaq	120(%rsp), %rsi
	leaq	48(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_@PLT
.Ltmp1440:
# %bb.684:
.Ltmp1442:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1443:
# %bb.685:
.LBB102_686:                            # %.invoke1626
.Ltmp1474:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1475:
# %bb.687:                              # %.cont1627
.LBB102_688:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp1394:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1395:
# %bb.689:
.Ltmp1397:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp1398:
# %bb.690:                              # %.noexc756
.LBB102_691:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp1456:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1457:
# %bb.692:
.Ltmp1459:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp1460:
# %bb.693:                              # %.noexc830
.LBB102_694:
.Ltmp1444:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_700
# %bb.695:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit799
	movq	120(%rsp), %rdi
	leaq	136(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_702
.LBB102_696:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit802
	movq	392(%rsp), %rdi
	leaq	408(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_704
.LBB102_697:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit805
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_706
.LBB102_698:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit808
	movq	152(%rsp), %rdi
	leaq	168(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_708
.LBB102_699:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit811
	movq	456(%rsp), %rdi
	leaq	472(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_710
	jmp	.LBB102_712
.LBB102_700:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i797
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	120(%rsp), %rdi
	leaq	136(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_696
	jmp	.LBB102_702
.LBB102_701:
.Ltmp1441:
	movq	%rax, %r14
	movq	120(%rsp), %rdi
	leaq	136(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_696
.LBB102_702:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i800
	movq	136(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	392(%rsp), %rdi
	leaq	408(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_697
	jmp	.LBB102_704
.LBB102_703:
.Ltmp1438:
	movq	%rax, %r14
	movq	392(%rsp), %rdi
	leaq	408(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_697
.LBB102_704:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i803
	movq	408(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_698
	jmp	.LBB102_706
.LBB102_705:
.Ltmp1435:
	movq	%rax, %r14
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_698
.LBB102_706:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i806
	movq	104(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	152(%rsp), %rdi
	leaq	168(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_699
	jmp	.LBB102_708
.LBB102_707:
.Ltmp1432:
	movq	%rax, %r14
	movq	152(%rsp), %rdi
	leaq	168(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_699
.LBB102_708:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i809
	movq	168(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	456(%rsp), %rdi
	leaq	472(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_710
	jmp	.LBB102_712
.LBB102_709:
.Ltmp1429:
	movq	%rax, %r14
	movq	456(%rsp), %rdi
	leaq	472(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_712
.LBB102_710:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i812
	movq	472(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB102_712
.LBB102_711:
.Ltmp1426:
	movq	%rax, %r14
.LBB102_712:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit814
.Ltmp1445:
	leaq	384(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1446:
	jmp	.LBB102_715
.LBB102_713:
.Ltmp1447:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_714:
.Ltmp1423:
	movq	%rax, %r14
.LBB102_715:                            # %_ZN8pybind116objectD2Ev.exit815
.Ltmp1448:
	leaq	448(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1449:
# %bb.716:                              # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit816
	movq	232(%rsp), %rdi
	leaq	248(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_719
# %bb.717:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit819
	movq	280(%rsp), %rdi
	leaq	296(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_722
.LBB102_718:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit822
	movq	328(%rsp), %rdi
	leaq	344(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_725
	jmp	.LBB102_910
.LBB102_719:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i817
	movq	248(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	280(%rsp), %rdi
	leaq	296(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_718
	jmp	.LBB102_722
.LBB102_720:
.Ltmp1450:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_721:
.Ltmp1420:
	movq	%rax, %r14
	movq	280(%rsp), %rdi
	leaq	296(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_718
.LBB102_722:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i820
	movq	296(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	328(%rsp), %rdi
	leaq	344(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_725
	jmp	.LBB102_910
.LBB102_723:
.Ltmp1458:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB102_739
.LBB102_724:
.Ltmp1417:
	movq	%rax, %r14
	movq	328(%rsp), %rdi
	leaq	344(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_910
.LBB102_725:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i823
	movq	344(%rsp), %rsi
	jmp	.LBB102_909
.LBB102_726:
.Ltmp1396:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB102_748
.LBB102_727:
.Ltmp1386:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_730
# %bb.728:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit764
	movq	120(%rsp), %rdi
	leaq	136(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_732
.LBB102_729:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit767
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_737
	jmp	.LBB102_910
.LBB102_730:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i762
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	120(%rsp), %rdi
	leaq	136(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_729
	jmp	.LBB102_732
.LBB102_731:
.Ltmp1383:
	movq	%rax, %r14
	movq	120(%rsp), %rdi
	leaq	136(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_729
.LBB102_732:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i765
	movq	136(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_737
	jmp	.LBB102_910
.LBB102_733:
.Ltmp1467:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_734:
.Ltmp1453:
	movq	%rax, %rbx
	jmp	.LBB102_749
.LBB102_735:
.Ltmp1414:
	movq	%rax, %r14
	jmp	.LBB102_910
.LBB102_736:
.Ltmp1380:
	movq	%rax, %r14
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_910
.LBB102_737:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i768
	movq	104(%rsp), %rsi
	jmp	.LBB102_909
.LBB102_738:
.Ltmp1461:
	movq	%rax, %rbx
.LBB102_739:                            # %.body831
.Ltmp1462:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1463:
	jmp	.LBB102_749
.LBB102_741:
.Ltmp1464:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_742:
.Ltmp1377:
	movq	%rax, %r14
	jmp	.LBB102_910
.LBB102_743:
.Ltmp1476:
	jmp	.LBB102_893
.LBB102_744:
.Ltmp1409:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_745:
.Ltmp1389:
	movq	%rax, %rbx
	jmp	.LBB102_749
.LBB102_746:
.Ltmp1374:
	movq	%rax, %r14
	jmp	.LBB102_910
.LBB102_747:
.Ltmp1403:
	movq	%rax, %rbx
.LBB102_748:                            # %.body757
.Ltmp1404:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1405:
	jmp	.LBB102_749
.LBB102_750:
.Ltmp1406:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_751:
.Ltmp1506:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_752:
.Ltmp1503:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_753:
.Ltmp1500:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_754:
.Ltmp1523:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_755:
.Ltmp1520:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_756:
.Ltmp1517:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_757:
.Ltmp1494:
	movq	%rax, %rbx
.Ltmp1495:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1496:
	jmp	.LBB102_805
.LBB102_758:
.Ltmp1497:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_759:
.Ltmp1228:
	movq	%rax, %rbx
	movq	120(%rsp), %rdi
	cmpq	%rbp, %rdi
	jne	.LBB102_766
# %bb.760:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit463
	movq	88(%rsp), %rdi
	cmpq	%r13, %rdi
	jne	.LBB102_771
.LBB102_761:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit466
	movq	152(%rsp), %rdi
	cmpq	%r14, %rdi
	jne	.LBB102_773
.LBB102_762:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit469
	movq	232(%rsp), %rdi
	leaq	248(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_775
.LBB102_763:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit472
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_765
.LBB102_764:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i473
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_765:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit475
	movq	%rbx, %r14
	leaq	24(%rsp), %rbx
	jmp	.LBB102_902
.LBB102_766:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i461
	movq	136(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	88(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB102_761
	jmp	.LBB102_771
.LBB102_767:
.Ltmp1219:
	movq	%rax, %rbx
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_764
	jmp	.LBB102_765
.LBB102_768:
.Ltmp1511:
	movq	%rax, %rbx
.Ltmp1512:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1513:
	jmp	.LBB102_805
.LBB102_769:
.Ltmp1514:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_770:
.Ltmp1591:
	movq	%rax, %rbx
	movq	88(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB102_761
.LBB102_771:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i464
	movq	104(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	152(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB102_762
	jmp	.LBB102_773
.LBB102_772:
.Ltmp1594:
	movq	%rax, %rbx
	movq	152(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB102_762
.LBB102_773:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i467
	movq	168(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	232(%rsp), %rdi
	leaq	248(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_763
.LBB102_775:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i470
	movq	248(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_764
	jmp	.LBB102_765
.LBB102_774:
.Ltmp1597:
	movq	%rax, %rbx
	movq	232(%rsp), %rdi
	leaq	248(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_763
	jmp	.LBB102_775
.LBB102_776:
.Ltmp1531:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_777:
.Ltmp1528:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_778:
.Ltmp1485:
	jmp	.LBB102_780
.LBB102_779:
.Ltmp1482:
.LBB102_780:                            # %_ZN8pybind116objectD2Ev.exit795
	movq	%rax, %rbx
	jmp	.LBB102_749
.LBB102_781:
.Ltmp1573:
	jmp	.LBB102_893
.LBB102_782:                            # %.loopexit1068
.Ltmp1197:
	movq	%rax, %rbx
	jmp	.LBB102_787
.LBB102_783:
.Ltmp1351:
	movq	%rax, %r14
	jmp	.LBB102_910
.LBB102_784:
.Ltmp1479:
	movq	%rax, %r14
	jmp	.LBB102_910
.LBB102_785:
.Ltmp1177:
	jmp	.LBB102_862
.LBB102_786:                            # %.loopexit.split-lp1069
.Ltmp1203:
	movq	%rax, %rbx
	movq	48(%rsp), %r15
.LBB102_787:
	leaq	64(%rsp), %rax
	cmpq	%rax, %r15
	je	.LBB102_795
# %bb.788:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i409
	movq	64(%rsp), %rsi
	incq	%rsi
	movq	%r15, %rdi
	jmp	.LBB102_793
.LBB102_789:                            # %.loopexit.split-lp1064
.Ltmp1212:
	jmp	.LBB102_862
.LBB102_790:
.Ltmp1209:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB102_796
.LBB102_791:
.Ltmp1194:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB102_795
# %bb.792:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
.LBB102_793:                            # %.body395
	callq	_ZdlPvm@PLT
	jmp	.LBB102_795
.LBB102_794:
.Ltmp1191:
	movq	%rax, %rbx
.LBB102_795:                            # %.body395
.Ltmp1204:
	leaq	120(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1205:
.LBB102_796:                            # %.body
	movq	%rbx, %r14
	leaq	192(%rsp), %rdi
	callq	_ZN8pybind1112cpp_function12strdup_guardD2Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB102_797:                            # %.loopexit1048
.Ltmp1337:
	jmp	.LBB102_819
.LBB102_798:                            # %.loopexit1008
.Ltmp1542:
	jmp	.LBB102_823
.LBB102_799:                            # %.loopexit1003
.Ltmp1539:
	jmp	.LBB102_800
.LBB102_801:
.Ltmp1536:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_802:
.Ltmp1585:
	movq	%rax, %r14
	jmp	.LBB102_910
.LBB102_803:                            # %.loopexit1053
.Ltmp1357:
	jmp	.LBB102_829
.LBB102_804:
.Ltmp1576:
	movq	%rax, %rbx
.LBB102_805:
.Ltmp1577:
	leaq	152(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1578:
# %bb.806:                              # %_ZN8pybind116objectD2Ev.exit794
.Ltmp1580:
	leaq	88(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1581:
.LBB102_749:                            # %_ZN8pybind116objectD2Ev.exit760
	movq	%rbx, %r14
	jmp	.LBB102_910
.LBB102_808:
.Ltmp1582:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_809:
.Ltmp1579:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_810:                            # %.loopexit1023
.Ltmp1276:
	jmp	.LBB102_906
.LBB102_811:                            # %.loopexit1028
.Ltmp1279:
	jmp	.LBB102_834
.LBB102_812:                            # %.loopexit1038
.Ltmp1311:
	jmp	.LBB102_847
.LBB102_813:                            # %.loopexit1033
.Ltmp1299:
	movq	%rax, %r15
	jmp	.LBB102_856
.LBB102_814:                            # %.loopexit.split-lp1034
.Ltmp1296:
	movq	%rax, %r15
	jmp	.LBB102_856
.LBB102_815:
.Ltmp1206:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_816:
.Ltmp1200:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_817:                            # %.loopexit1063
.Ltmp1188:
	jmp	.LBB102_862
.LBB102_818:                            # %.loopexit.split-lp1049
.Ltmp1340:
.LBB102_819:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_894
	jmp	.LBB102_910
.LBB102_820:
.Ltmp1334:
	movq	%rax, %r14
	jmp	.LBB102_910
.LBB102_821:                            # %.loopexit.split-lp1004
.Ltmp1548:
.LBB102_800:                            # %.loopexit1003
	movq	%rax, %r14
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_825
.LBB102_827:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i908
	movq	104(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	8(%rsp), %rdi
	cmpq	80(%rsp), %rdi                  # 8-byte Folded Reload
	jne	.LBB102_894
	jmp	.LBB102_910
.LBB102_822:                            # %.loopexit.split-lp1009
.Ltmp1545:
.LBB102_823:
	movq	%rax, %r14
	movq	120(%rsp), %rdi
	leaq	136(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_826
# %bb.824:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit907
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_827
.LBB102_825:
	movq	8(%rsp), %rdi
	cmpq	80(%rsp), %rdi                  # 8-byte Folded Reload
	jne	.LBB102_894
	jmp	.LBB102_910
.LBB102_826:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i905
	movq	136(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_825
	jmp	.LBB102_827
.LBB102_828:                            # %.loopexit.split-lp1054
.Ltmp1362:
.LBB102_829:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_832
# %bb.830:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i525
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB102_832
.LBB102_831:
.Ltmp1354:
	movq	%rax, %r14
.LBB102_832:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit527
	movq	120(%rsp), %rdi
	leaq	136(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB102_908
	jmp	.LBB102_910
.LBB102_833:                            # %.loopexit.split-lp1029
.Ltmp1282:
.LBB102_834:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_836
# %bb.835:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i725
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_836:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit727
	leaq	136(%rsp), %rbx
	jmp	.LBB102_907
.LBB102_837:
.Ltmp1273:
	movq	%rax, %r14
	jmp	.LBB102_910
.LBB102_838:
.Ltmp1290:
	movq	%rax, %r15
	jmp	.LBB102_859
.LBB102_839:
.Ltmp1305:
	movq	%rax, %r15
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB102_853
# %bb.840:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i.i.i657
	movq	24(%rsp), %rsi
	jmp	.LBB102_852
.LBB102_841:
.Ltmp1317:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_842:
.Ltmp1314:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_843:
.Ltmp1302:
	movq	%rax, %r15
	jmp	.LBB102_853
.LBB102_844:
.Ltmp1293:
	movq	%rax, %r15
	movq	8(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB102_859
# %bb.845:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i.i.i635
	movq	24(%rsp), %rsi
	jmp	.LBB102_858
.LBB102_846:                            # %.loopexit.split-lp1039
.Ltmp1320:
.LBB102_847:
	movq	%rax, %r15
	movq	120(%rsp), %rdi
	leaq	136(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_850
# %bb.848:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i690
	movq	136(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB102_850
.LBB102_849:
.Ltmp1308:
	movq	%rax, %r15
.LBB102_850:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit692
	movq	280(%rsp), %rdi
	leaq	296(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_853
# %bb.851:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i693
	movq	296(%rsp), %rsi
.LBB102_852:                            # %.body664
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_853:                            # %.body664
.Ltmp1321:
	leaq	352(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1322:
# %bb.854:                              # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit696
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_856
# %bb.855:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i697
	movq	104(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_856:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit699
	movq	152(%rsp), %rdi
	leaq	168(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_859
# %bb.857:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i700
	movq	168(%rsp), %rsi
.LBB102_858:                            # %.body642
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_859:                            # %.body642
.Ltmp1324:
	leaq	256(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1325:
# %bb.860:                              # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit703
	movq	%r15, %r14
	jmp	.LBB102_910
.LBB102_861:                            # %.loopexit1058
.Ltmp1182:
	jmp	.LBB102_862
.LBB102_863:                            # %.loopexit.split-lp1059
.Ltmp1185:
	jmp	.LBB102_862
.LBB102_864:                            # %.loopexit1018
.Ltmp1255:
	jmp	.LBB102_876
.LBB102_865:                            # %.loopexit1013
.Ltmp1243:
	movq	%rax, %r14
	jmp	.LBB102_887
.LBB102_866:                            # %.loopexit.split-lp1014
.Ltmp1240:
	movq	%rax, %r14
	jmp	.LBB102_887
.LBB102_867:
.Ltmp1323:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_868:
.Ltmp1326:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_869:
.Ltmp1252:
	movq	%rax, %r14
	jmp	.LBB102_878
.LBB102_870:
.Ltmp1237:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB102_890
# %bb.871:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i.i.i
	movq	24(%rsp), %rsi
	jmp	.LBB102_889
.LBB102_872:
.Ltmp1246:
	movq	%rax, %r14
	jmp	.LBB102_884
.LBB102_873:
.Ltmp1234:
	movq	%rax, %r14
	jmp	.LBB102_890
.LBB102_874:
.Ltmp1258:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_875:                            # %.loopexit.split-lp1019
.Ltmp1264:
.LBB102_876:
	movq	%rax, %r14
	movq	120(%rsp), %rdi
	leaq	136(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_878
# %bb.877:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i620
	movq	136(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_878:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit622
	movq	280(%rsp), %rdi
	leaq	296(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_884
# %bb.879:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i623
	movq	296(%rsp), %rsi
	jmp	.LBB102_883
.LBB102_880:
.Ltmp1261:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_881:
.Ltmp1249:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB102_884
# %bb.882:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i.i.i588
	movq	24(%rsp), %rsi
.LBB102_883:                            # %.body595
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_884:                            # %.body595
.Ltmp1265:
	leaq	352(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1266:
# %bb.885:                              # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit626
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_887
# %bb.886:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i627
	movq	104(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_887:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit629
	movq	152(%rsp), %rdi
	leaq	168(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_890
# %bb.888:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i630
	movq	168(%rsp), %rsi
.LBB102_889:                            # %.body574
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_890:                            # %.body574
.Ltmp1268:
	leaq	256(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1269:
	jmp	.LBB102_910
.LBB102_891:                            # %.loopexit
.Ltmp1563:
	jmp	.LBB102_893
.LBB102_892:                            # %.loopexit.split-lp
.Ltmp1566:
.LBB102_893:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	cmpq	80(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB102_910
.LBB102_894:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i962
	movq	24(%rsp), %rsi
	jmp	.LBB102_909
.LBB102_895:
.Ltmp1329:
	movq	%rax, %r14
	jmp	.LBB102_910
.LBB102_896:
.Ltmp1231:
	movq	%rax, %r14
	jmp	.LBB102_910
.LBB102_897:                            # %.loopexit1043
.Ltmp1588:
	movq	%rax, %r14
	jmp	.LBB102_910
.LBB102_898:
.Ltmp1267:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_899:                            # %.loopexit.split-lp1044
.Ltmp1365:
	movq	%rax, %r14
	jmp	.LBB102_910
.LBB102_900:
.Ltmp1270:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB102_901:
.Ltmp1604:
	movq	%rax, %r14
.LBB102_902:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit475
	movq	8(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB102_913
# %bb.903:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i476
	movq	24(%rsp), %rsi
	jmp	.LBB102_912
.LBB102_904:
.Ltmp1611:
.LBB102_862:                            # %.loopexit1058
	movq	%rax, %r14
	leaq	192(%rsp), %rdi
	callq	_ZN8pybind1112cpp_function12strdup_guardD2Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB102_905:                            # %.loopexit.split-lp1024
.Ltmp1287:
.LBB102_906:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit727
	movq	%rax, %r14
.LBB102_907:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit727
	movq	120(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB102_910
.LBB102_908:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i528
	movq	136(%rsp), %rsi
.LBB102_909:
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_910:
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_913
# %bb.911:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i965
	movq	64(%rsp), %rsi
.LBB102_912:
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB102_913:
	leaq	192(%rsp), %rdi
	callq	_ZN8pybind1112cpp_function12strdup_guardD2Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end102:
	.size	_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom, .Lfunc_end102-_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom,"aG",@progbits,_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom,comdat
	.p2align	2, 0x0
GCC_except_table102:
.Lexception47:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase29-.Lttbaseref29
.Lttbaseref29:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end47-.Lcst_begin47
.Lcst_begin47:
	.uleb128 .Ltmp1173-.Lfunc_begin47       # >> Call Site 1 <<
	.uleb128 .Ltmp1176-.Ltmp1173            #   Call between .Ltmp1173 and .Ltmp1176
	.uleb128 .Ltmp1177-.Lfunc_begin47       #     jumps to .Ltmp1177
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1180-.Lfunc_begin47       # >> Call Site 2 <<
	.uleb128 .Ltmp1181-.Ltmp1180            #   Call between .Ltmp1180 and .Ltmp1181
	.uleb128 .Ltmp1182-.Lfunc_begin47       #     jumps to .Ltmp1182
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1181-.Lfunc_begin47       # >> Call Site 3 <<
	.uleb128 .Ltmp1178-.Ltmp1181            #   Call between .Ltmp1181 and .Ltmp1178
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1178-.Lfunc_begin47       # >> Call Site 4 <<
	.uleb128 .Ltmp1179-.Ltmp1178            #   Call between .Ltmp1178 and .Ltmp1179
	.uleb128 .Ltmp1182-.Lfunc_begin47       #     jumps to .Ltmp1182
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1179-.Lfunc_begin47       # >> Call Site 5 <<
	.uleb128 .Ltmp1186-.Ltmp1179            #   Call between .Ltmp1179 and .Ltmp1186
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1186-.Lfunc_begin47       # >> Call Site 6 <<
	.uleb128 .Ltmp1187-.Ltmp1186            #   Call between .Ltmp1186 and .Ltmp1187
	.uleb128 .Ltmp1188-.Lfunc_begin47       #     jumps to .Ltmp1188
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1192-.Lfunc_begin47       # >> Call Site 7 <<
	.uleb128 .Ltmp1193-.Ltmp1192            #   Call between .Ltmp1192 and .Ltmp1193
	.uleb128 .Ltmp1194-.Lfunc_begin47       #     jumps to .Ltmp1194
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1195-.Lfunc_begin47       # >> Call Site 8 <<
	.uleb128 .Ltmp1196-.Ltmp1195            #   Call between .Ltmp1195 and .Ltmp1196
	.uleb128 .Ltmp1197-.Lfunc_begin47       #     jumps to .Ltmp1197
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1196-.Lfunc_begin47       # >> Call Site 9 <<
	.uleb128 .Ltmp1189-.Ltmp1196            #   Call between .Ltmp1196 and .Ltmp1189
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1189-.Lfunc_begin47       # >> Call Site 10 <<
	.uleb128 .Ltmp1190-.Ltmp1189            #   Call between .Ltmp1189 and .Ltmp1190
	.uleb128 .Ltmp1191-.Lfunc_begin47       #     jumps to .Ltmp1191
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1198-.Lfunc_begin47       # >> Call Site 11 <<
	.uleb128 .Ltmp1199-.Ltmp1198            #   Call between .Ltmp1198 and .Ltmp1199
	.uleb128 .Ltmp1200-.Lfunc_begin47       #     jumps to .Ltmp1200
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1199-.Lfunc_begin47       # >> Call Site 12 <<
	.uleb128 .Ltmp1213-.Ltmp1199            #   Call between .Ltmp1199 and .Ltmp1213
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1213-.Lfunc_begin47       # >> Call Site 13 <<
	.uleb128 .Ltmp1214-.Ltmp1213            #   Call between .Ltmp1213 and .Ltmp1214
	.uleb128 .Ltmp1611-.Lfunc_begin47       #     jumps to .Ltmp1611
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1214-.Lfunc_begin47       # >> Call Site 14 <<
	.uleb128 .Ltmp1215-.Ltmp1214            #   Call between .Ltmp1214 and .Ltmp1215
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1215-.Lfunc_begin47       # >> Call Site 15 <<
	.uleb128 .Ltmp1216-.Ltmp1215            #   Call between .Ltmp1215 and .Ltmp1216
	.uleb128 .Ltmp1604-.Lfunc_begin47       #     jumps to .Ltmp1604
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1216-.Lfunc_begin47       # >> Call Site 16 <<
	.uleb128 .Ltmp1217-.Ltmp1216            #   Call between .Ltmp1216 and .Ltmp1217
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1217-.Lfunc_begin47       # >> Call Site 17 <<
	.uleb128 .Ltmp1218-.Ltmp1217            #   Call between .Ltmp1217 and .Ltmp1218
	.uleb128 .Ltmp1219-.Lfunc_begin47       #     jumps to .Ltmp1219
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1220-.Lfunc_begin47       # >> Call Site 18 <<
	.uleb128 .Ltmp1221-.Ltmp1220            #   Call between .Ltmp1220 and .Ltmp1221
	.uleb128 .Ltmp1597-.Lfunc_begin47       #     jumps to .Ltmp1597
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1221-.Lfunc_begin47       # >> Call Site 19 <<
	.uleb128 .Ltmp1222-.Ltmp1221            #   Call between .Ltmp1221 and .Ltmp1222
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1222-.Lfunc_begin47       # >> Call Site 20 <<
	.uleb128 .Ltmp1223-.Ltmp1222            #   Call between .Ltmp1222 and .Ltmp1223
	.uleb128 .Ltmp1594-.Lfunc_begin47       #     jumps to .Ltmp1594
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1223-.Lfunc_begin47       # >> Call Site 21 <<
	.uleb128 .Ltmp1224-.Ltmp1223            #   Call between .Ltmp1223 and .Ltmp1224
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1224-.Lfunc_begin47       # >> Call Site 22 <<
	.uleb128 .Ltmp1225-.Ltmp1224            #   Call between .Ltmp1224 and .Ltmp1225
	.uleb128 .Ltmp1591-.Lfunc_begin47       #     jumps to .Ltmp1591
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1225-.Lfunc_begin47       # >> Call Site 23 <<
	.uleb128 .Ltmp1226-.Ltmp1225            #   Call between .Ltmp1225 and .Ltmp1226
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1226-.Lfunc_begin47       # >> Call Site 24 <<
	.uleb128 .Ltmp1227-.Ltmp1226            #   Call between .Ltmp1226 and .Ltmp1227
	.uleb128 .Ltmp1228-.Lfunc_begin47       #     jumps to .Ltmp1228
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1330-.Lfunc_begin47       # >> Call Site 25 <<
	.uleb128 .Ltmp1331-.Ltmp1330            #   Call between .Ltmp1330 and .Ltmp1331
	.uleb128 .Ltmp1588-.Lfunc_begin47       #     jumps to .Ltmp1588
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1229-.Lfunc_begin47       # >> Call Site 26 <<
	.uleb128 .Ltmp1230-.Ltmp1229            #   Call between .Ltmp1229 and .Ltmp1230
	.uleb128 .Ltmp1231-.Lfunc_begin47       #     jumps to .Ltmp1231
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1232-.Lfunc_begin47       # >> Call Site 27 <<
	.uleb128 .Ltmp1233-.Ltmp1232            #   Call between .Ltmp1232 and .Ltmp1233
	.uleb128 .Ltmp1234-.Lfunc_begin47       #     jumps to .Ltmp1234
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1235-.Lfunc_begin47       # >> Call Site 28 <<
	.uleb128 .Ltmp1236-.Ltmp1235            #   Call between .Ltmp1235 and .Ltmp1236
	.uleb128 .Ltmp1237-.Lfunc_begin47       #     jumps to .Ltmp1237
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1343-.Lfunc_begin47       # >> Call Site 29 <<
	.uleb128 .Ltmp1587-.Ltmp1343            #   Call between .Ltmp1343 and .Ltmp1587
	.uleb128 .Ltmp1588-.Lfunc_begin47       #     jumps to .Ltmp1588
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1288-.Lfunc_begin47       # >> Call Site 30 <<
	.uleb128 .Ltmp1289-.Ltmp1288            #   Call between .Ltmp1288 and .Ltmp1289
	.uleb128 .Ltmp1290-.Lfunc_begin47       #     jumps to .Ltmp1290
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1291-.Lfunc_begin47       # >> Call Site 31 <<
	.uleb128 .Ltmp1292-.Ltmp1291            #   Call between .Ltmp1291 and .Ltmp1292
	.uleb128 .Ltmp1293-.Lfunc_begin47       #     jumps to .Ltmp1293
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1292-.Lfunc_begin47       # >> Call Site 32 <<
	.uleb128 .Ltmp1241-.Ltmp1292            #   Call between .Ltmp1292 and .Ltmp1241
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1241-.Lfunc_begin47       # >> Call Site 33 <<
	.uleb128 .Ltmp1242-.Ltmp1241            #   Call between .Ltmp1241 and .Ltmp1242
	.uleb128 .Ltmp1243-.Lfunc_begin47       #     jumps to .Ltmp1243
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1242-.Lfunc_begin47       # >> Call Site 34 <<
	.uleb128 .Ltmp1244-.Ltmp1242            #   Call between .Ltmp1242 and .Ltmp1244
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1244-.Lfunc_begin47       # >> Call Site 35 <<
	.uleb128 .Ltmp1245-.Ltmp1244            #   Call between .Ltmp1244 and .Ltmp1245
	.uleb128 .Ltmp1246-.Lfunc_begin47       #     jumps to .Ltmp1246
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1247-.Lfunc_begin47       # >> Call Site 36 <<
	.uleb128 .Ltmp1248-.Ltmp1247            #   Call between .Ltmp1247 and .Ltmp1248
	.uleb128 .Ltmp1249-.Lfunc_begin47       #     jumps to .Ltmp1249
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1248-.Lfunc_begin47       # >> Call Site 37 <<
	.uleb128 .Ltmp1250-.Ltmp1248            #   Call between .Ltmp1248 and .Ltmp1250
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1250-.Lfunc_begin47       # >> Call Site 38 <<
	.uleb128 .Ltmp1251-.Ltmp1250            #   Call between .Ltmp1250 and .Ltmp1251
	.uleb128 .Ltmp1252-.Lfunc_begin47       #     jumps to .Ltmp1252
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1253-.Lfunc_begin47       # >> Call Site 39 <<
	.uleb128 .Ltmp1254-.Ltmp1253            #   Call between .Ltmp1253 and .Ltmp1254
	.uleb128 .Ltmp1255-.Lfunc_begin47       #     jumps to .Ltmp1255
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1271-.Lfunc_begin47       # >> Call Site 40 <<
	.uleb128 .Ltmp1272-.Ltmp1271            #   Call between .Ltmp1271 and .Ltmp1272
	.uleb128 .Ltmp1273-.Lfunc_begin47       #     jumps to .Ltmp1273
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1274-.Lfunc_begin47       # >> Call Site 41 <<
	.uleb128 .Ltmp1275-.Ltmp1274            #   Call between .Ltmp1274 and .Ltmp1275
	.uleb128 .Ltmp1276-.Lfunc_begin47       #     jumps to .Ltmp1276
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1275-.Lfunc_begin47       # >> Call Site 42 <<
	.uleb128 .Ltmp1256-.Ltmp1275            #   Call between .Ltmp1275 and .Ltmp1256
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1256-.Lfunc_begin47       # >> Call Site 43 <<
	.uleb128 .Ltmp1257-.Ltmp1256            #   Call between .Ltmp1256 and .Ltmp1257
	.uleb128 .Ltmp1258-.Lfunc_begin47       #     jumps to .Ltmp1258
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1259-.Lfunc_begin47       # >> Call Site 44 <<
	.uleb128 .Ltmp1260-.Ltmp1259            #   Call between .Ltmp1259 and .Ltmp1260
	.uleb128 .Ltmp1261-.Lfunc_begin47       #     jumps to .Ltmp1261
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1332-.Lfunc_begin47       # >> Call Site 45 <<
	.uleb128 .Ltmp1333-.Ltmp1332            #   Call between .Ltmp1332 and .Ltmp1333
	.uleb128 .Ltmp1334-.Lfunc_begin47       #     jumps to .Ltmp1334
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1335-.Lfunc_begin47       # >> Call Site 46 <<
	.uleb128 .Ltmp1336-.Ltmp1335            #   Call between .Ltmp1335 and .Ltmp1336
	.uleb128 .Ltmp1337-.Lfunc_begin47       #     jumps to .Ltmp1337
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1336-.Lfunc_begin47       # >> Call Site 47 <<
	.uleb128 .Ltmp1297-.Ltmp1336            #   Call between .Ltmp1336 and .Ltmp1297
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1297-.Lfunc_begin47       # >> Call Site 48 <<
	.uleb128 .Ltmp1298-.Ltmp1297            #   Call between .Ltmp1297 and .Ltmp1298
	.uleb128 .Ltmp1299-.Lfunc_begin47       #     jumps to .Ltmp1299
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1298-.Lfunc_begin47       # >> Call Site 49 <<
	.uleb128 .Ltmp1300-.Ltmp1298            #   Call between .Ltmp1298 and .Ltmp1300
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1300-.Lfunc_begin47       # >> Call Site 50 <<
	.uleb128 .Ltmp1301-.Ltmp1300            #   Call between .Ltmp1300 and .Ltmp1301
	.uleb128 .Ltmp1302-.Lfunc_begin47       #     jumps to .Ltmp1302
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1303-.Lfunc_begin47       # >> Call Site 51 <<
	.uleb128 .Ltmp1304-.Ltmp1303            #   Call between .Ltmp1303 and .Ltmp1304
	.uleb128 .Ltmp1305-.Lfunc_begin47       #     jumps to .Ltmp1305
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1304-.Lfunc_begin47       # >> Call Site 52 <<
	.uleb128 .Ltmp1306-.Ltmp1304            #   Call between .Ltmp1304 and .Ltmp1306
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1306-.Lfunc_begin47       # >> Call Site 53 <<
	.uleb128 .Ltmp1307-.Ltmp1306            #   Call between .Ltmp1306 and .Ltmp1307
	.uleb128 .Ltmp1308-.Lfunc_begin47       #     jumps to .Ltmp1308
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1309-.Lfunc_begin47       # >> Call Site 54 <<
	.uleb128 .Ltmp1310-.Ltmp1309            #   Call between .Ltmp1309 and .Ltmp1310
	.uleb128 .Ltmp1311-.Lfunc_begin47       #     jumps to .Ltmp1311
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1345-.Lfunc_begin47       # >> Call Site 55 <<
	.uleb128 .Ltmp1348-.Ltmp1345            #   Call between .Ltmp1345 and .Ltmp1348
	.uleb128 .Ltmp1588-.Lfunc_begin47       #     jumps to .Ltmp1588
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1348-.Lfunc_begin47       # >> Call Site 56 <<
	.uleb128 .Ltmp1277-.Ltmp1348            #   Call between .Ltmp1348 and .Ltmp1277
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1277-.Lfunc_begin47       # >> Call Site 57 <<
	.uleb128 .Ltmp1278-.Ltmp1277            #   Call between .Ltmp1277 and .Ltmp1278
	.uleb128 .Ltmp1279-.Lfunc_begin47       #     jumps to .Ltmp1279
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1278-.Lfunc_begin47       # >> Call Site 58 <<
	.uleb128 .Ltmp1312-.Ltmp1278            #   Call between .Ltmp1278 and .Ltmp1312
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1312-.Lfunc_begin47       # >> Call Site 59 <<
	.uleb128 .Ltmp1313-.Ltmp1312            #   Call between .Ltmp1312 and .Ltmp1313
	.uleb128 .Ltmp1314-.Lfunc_begin47       #     jumps to .Ltmp1314
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1315-.Lfunc_begin47       # >> Call Site 60 <<
	.uleb128 .Ltmp1316-.Ltmp1315            #   Call between .Ltmp1315 and .Ltmp1316
	.uleb128 .Ltmp1317-.Lfunc_begin47       #     jumps to .Ltmp1317
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1316-.Lfunc_begin47       # >> Call Site 61 <<
	.uleb128 .Ltmp1341-.Ltmp1316            #   Call between .Ltmp1316 and .Ltmp1341
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1341-.Lfunc_begin47       # >> Call Site 62 <<
	.uleb128 .Ltmp1342-.Ltmp1341            #   Call between .Ltmp1341 and .Ltmp1342
	.uleb128 .Ltmp1588-.Lfunc_begin47       #     jumps to .Ltmp1588
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1349-.Lfunc_begin47       # >> Call Site 63 <<
	.uleb128 .Ltmp1350-.Ltmp1349            #   Call between .Ltmp1349 and .Ltmp1350
	.uleb128 .Ltmp1351-.Lfunc_begin47       #     jumps to .Ltmp1351
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1350-.Lfunc_begin47       # >> Call Site 64 <<
	.uleb128 .Ltmp1352-.Ltmp1350            #   Call between .Ltmp1350 and .Ltmp1352
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1352-.Lfunc_begin47       # >> Call Site 65 <<
	.uleb128 .Ltmp1353-.Ltmp1352            #   Call between .Ltmp1352 and .Ltmp1353
	.uleb128 .Ltmp1354-.Lfunc_begin47       #     jumps to .Ltmp1354
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1353-.Lfunc_begin47       # >> Call Site 66 <<
	.uleb128 .Ltmp1355-.Ltmp1353            #   Call between .Ltmp1353 and .Ltmp1355
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1355-.Lfunc_begin47       # >> Call Site 67 <<
	.uleb128 .Ltmp1356-.Ltmp1355            #   Call between .Ltmp1355 and .Ltmp1356
	.uleb128 .Ltmp1357-.Lfunc_begin47       #     jumps to .Ltmp1357
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1356-.Lfunc_begin47       # >> Call Site 68 <<
	.uleb128 .Ltmp1358-.Ltmp1356            #   Call between .Ltmp1356 and .Ltmp1358
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1358-.Lfunc_begin47       # >> Call Site 69 <<
	.uleb128 .Ltmp1359-.Ltmp1358            #   Call between .Ltmp1358 and .Ltmp1359
	.uleb128 .Ltmp1588-.Lfunc_begin47       #     jumps to .Ltmp1588
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1370-.Lfunc_begin47       # >> Call Site 70 <<
	.uleb128 .Ltmp1371-.Ltmp1370            #   Call between .Ltmp1370 and .Ltmp1371
	.uleb128 .Ltmp1479-.Lfunc_begin47       #     jumps to .Ltmp1479
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1372-.Lfunc_begin47       # >> Call Site 71 <<
	.uleb128 .Ltmp1373-.Ltmp1372            #   Call between .Ltmp1372 and .Ltmp1373
	.uleb128 .Ltmp1374-.Lfunc_begin47       #     jumps to .Ltmp1374
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1387-.Lfunc_begin47       # >> Call Site 72 <<
	.uleb128 .Ltmp1388-.Ltmp1387            #   Call between .Ltmp1387 and .Ltmp1388
	.uleb128 .Ltmp1389-.Lfunc_begin47       #     jumps to .Ltmp1389
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1390-.Lfunc_begin47       # >> Call Site 73 <<
	.uleb128 .Ltmp1400-.Ltmp1390            #   Call between .Ltmp1390 and .Ltmp1400
	.uleb128 .Ltmp1403-.Lfunc_begin47       #     jumps to .Ltmp1403
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1368-.Lfunc_begin47       # >> Call Site 74 <<
	.uleb128 .Ltmp1369-.Ltmp1368            #   Call between .Ltmp1368 and .Ltmp1369
	.uleb128 .Ltmp1585-.Lfunc_begin47       #     jumps to .Ltmp1585
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1369-.Lfunc_begin47       # >> Call Site 75 <<
	.uleb128 .Ltmp1477-.Ltmp1369            #   Call between .Ltmp1369 and .Ltmp1477
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1477-.Lfunc_begin47       # >> Call Site 76 <<
	.uleb128 .Ltmp1478-.Ltmp1477            #   Call between .Ltmp1477 and .Ltmp1478
	.uleb128 .Ltmp1479-.Lfunc_begin47       #     jumps to .Ltmp1479
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1480-.Lfunc_begin47       # >> Call Site 77 <<
	.uleb128 .Ltmp1481-.Ltmp1480            #   Call between .Ltmp1480 and .Ltmp1481
	.uleb128 .Ltmp1482-.Lfunc_begin47       #     jumps to .Ltmp1482
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1483-.Lfunc_begin47       # >> Call Site 78 <<
	.uleb128 .Ltmp1484-.Ltmp1483            #   Call between .Ltmp1483 and .Ltmp1484
	.uleb128 .Ltmp1485-.Lfunc_begin47       #     jumps to .Ltmp1485
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1486-.Lfunc_begin47       # >> Call Site 79 <<
	.uleb128 .Ltmp1487-.Ltmp1486            #   Call between .Ltmp1486 and .Ltmp1487
	.uleb128 .Ltmp1576-.Lfunc_begin47       #     jumps to .Ltmp1576
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1507-.Lfunc_begin47       # >> Call Site 80 <<
	.uleb128 .Ltmp1510-.Ltmp1507            #   Call between .Ltmp1507 and .Ltmp1510
	.uleb128 .Ltmp1511-.Lfunc_begin47       #     jumps to .Ltmp1511
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1515-.Lfunc_begin47       # >> Call Site 81 <<
	.uleb128 .Ltmp1516-.Ltmp1515            #   Call between .Ltmp1515 and .Ltmp1516
	.uleb128 .Ltmp1517-.Lfunc_begin47       #     jumps to .Ltmp1517
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1518-.Lfunc_begin47       # >> Call Site 82 <<
	.uleb128 .Ltmp1519-.Ltmp1518            #   Call between .Ltmp1518 and .Ltmp1519
	.uleb128 .Ltmp1520-.Lfunc_begin47       #     jumps to .Ltmp1520
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1521-.Lfunc_begin47       # >> Call Site 83 <<
	.uleb128 .Ltmp1522-.Ltmp1521            #   Call between .Ltmp1521 and .Ltmp1522
	.uleb128 .Ltmp1523-.Lfunc_begin47       #     jumps to .Ltmp1523
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1488-.Lfunc_begin47       # >> Call Site 84 <<
	.uleb128 .Ltmp1489-.Ltmp1488            #   Call between .Ltmp1488 and .Ltmp1489
	.uleb128 .Ltmp1576-.Lfunc_begin47       #     jumps to .Ltmp1576
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1490-.Lfunc_begin47       # >> Call Site 85 <<
	.uleb128 .Ltmp1493-.Ltmp1490            #   Call between .Ltmp1490 and .Ltmp1493
	.uleb128 .Ltmp1494-.Lfunc_begin47       #     jumps to .Ltmp1494
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1498-.Lfunc_begin47       # >> Call Site 86 <<
	.uleb128 .Ltmp1499-.Ltmp1498            #   Call between .Ltmp1498 and .Ltmp1499
	.uleb128 .Ltmp1500-.Lfunc_begin47       #     jumps to .Ltmp1500
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1501-.Lfunc_begin47       # >> Call Site 87 <<
	.uleb128 .Ltmp1502-.Ltmp1501            #   Call between .Ltmp1501 and .Ltmp1502
	.uleb128 .Ltmp1503-.Lfunc_begin47       #     jumps to .Ltmp1503
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1504-.Lfunc_begin47       # >> Call Site 88 <<
	.uleb128 .Ltmp1505-.Ltmp1504            #   Call between .Ltmp1504 and .Ltmp1505
	.uleb128 .Ltmp1506-.Lfunc_begin47       #     jumps to .Ltmp1506
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1524-.Lfunc_begin47       # >> Call Site 89 <<
	.uleb128 .Ltmp1525-.Ltmp1524            #   Call between .Ltmp1524 and .Ltmp1525
	.uleb128 .Ltmp1576-.Lfunc_begin47       #     jumps to .Ltmp1576
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1526-.Lfunc_begin47       # >> Call Site 90 <<
	.uleb128 .Ltmp1527-.Ltmp1526            #   Call between .Ltmp1526 and .Ltmp1527
	.uleb128 .Ltmp1528-.Lfunc_begin47       #     jumps to .Ltmp1528
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1529-.Lfunc_begin47       # >> Call Site 91 <<
	.uleb128 .Ltmp1530-.Ltmp1529            #   Call between .Ltmp1529 and .Ltmp1530
	.uleb128 .Ltmp1531-.Lfunc_begin47       #     jumps to .Ltmp1531
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1532-.Lfunc_begin47       # >> Call Site 92 <<
	.uleb128 .Ltmp1533-.Ltmp1532            #   Call between .Ltmp1532 and .Ltmp1533
	.uleb128 .Ltmp1563-.Lfunc_begin47       #     jumps to .Ltmp1563
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1534-.Lfunc_begin47       # >> Call Site 93 <<
	.uleb128 .Ltmp1535-.Ltmp1534            #   Call between .Ltmp1534 and .Ltmp1535
	.uleb128 .Ltmp1536-.Lfunc_begin47       #     jumps to .Ltmp1536
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1535-.Lfunc_begin47       # >> Call Site 94 <<
	.uleb128 .Ltmp1537-.Ltmp1535            #   Call between .Ltmp1535 and .Ltmp1537
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1537-.Lfunc_begin47       # >> Call Site 95 <<
	.uleb128 .Ltmp1538-.Ltmp1537            #   Call between .Ltmp1537 and .Ltmp1538
	.uleb128 .Ltmp1539-.Lfunc_begin47       #     jumps to .Ltmp1539
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1538-.Lfunc_begin47       # >> Call Site 96 <<
	.uleb128 .Ltmp1540-.Ltmp1538            #   Call between .Ltmp1538 and .Ltmp1540
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1540-.Lfunc_begin47       # >> Call Site 97 <<
	.uleb128 .Ltmp1541-.Ltmp1540            #   Call between .Ltmp1540 and .Ltmp1541
	.uleb128 .Ltmp1542-.Lfunc_begin47       #     jumps to .Ltmp1542
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1541-.Lfunc_begin47       # >> Call Site 98 <<
	.uleb128 .Ltmp1549-.Ltmp1541            #   Call between .Ltmp1541 and .Ltmp1549
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1549-.Lfunc_begin47       # >> Call Site 99 <<
	.uleb128 .Ltmp1550-.Ltmp1549            #   Call between .Ltmp1549 and .Ltmp1550
	.uleb128 .Ltmp1563-.Lfunc_begin47       #     jumps to .Ltmp1563
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1550-.Lfunc_begin47       # >> Call Site 100 <<
	.uleb128 .Ltmp1551-.Ltmp1550            #   Call between .Ltmp1550 and .Ltmp1551
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1551-.Lfunc_begin47       # >> Call Site 101 <<
	.uleb128 .Ltmp1552-.Ltmp1551            #   Call between .Ltmp1551 and .Ltmp1552
	.uleb128 .Ltmp1563-.Lfunc_begin47       #     jumps to .Ltmp1563
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1552-.Lfunc_begin47       # >> Call Site 102 <<
	.uleb128 .Ltmp1553-.Ltmp1552            #   Call between .Ltmp1552 and .Ltmp1553
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1553-.Lfunc_begin47       # >> Call Site 103 <<
	.uleb128 .Ltmp1560-.Ltmp1553            #   Call between .Ltmp1553 and .Ltmp1560
	.uleb128 .Ltmp1563-.Lfunc_begin47       #     jumps to .Ltmp1563
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1560-.Lfunc_begin47       # >> Call Site 104 <<
	.uleb128 .Ltmp1561-.Ltmp1560            #   Call between .Ltmp1560 and .Ltmp1561
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1561-.Lfunc_begin47       # >> Call Site 105 <<
	.uleb128 .Ltmp1562-.Ltmp1561            #   Call between .Ltmp1561 and .Ltmp1562
	.uleb128 .Ltmp1563-.Lfunc_begin47       #     jumps to .Ltmp1563
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1567-.Lfunc_begin47       # >> Call Site 106 <<
	.uleb128 .Ltmp1570-.Ltmp1567            #   Call between .Ltmp1567 and .Ltmp1570
	.uleb128 .Ltmp1573-.Lfunc_begin47       #     jumps to .Ltmp1573
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1401-.Lfunc_begin47       # >> Call Site 107 <<
	.uleb128 .Ltmp1402-.Ltmp1401            #   Call between .Ltmp1401 and .Ltmp1402
	.uleb128 .Ltmp1403-.Lfunc_begin47       #     jumps to .Ltmp1403
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1407-.Lfunc_begin47       # >> Call Site 108 <<
	.uleb128 .Ltmp1408-.Ltmp1407            #   Call between .Ltmp1407 and .Ltmp1408
	.uleb128 .Ltmp1409-.Lfunc_begin47       #     jumps to .Ltmp1409
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1410-.Lfunc_begin47       # >> Call Site 109 <<
	.uleb128 .Ltmp1411-.Ltmp1410            #   Call between .Ltmp1410 and .Ltmp1411
	.uleb128 .Ltmp1479-.Lfunc_begin47       #     jumps to .Ltmp1479
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1451-.Lfunc_begin47       # >> Call Site 110 <<
	.uleb128 .Ltmp1452-.Ltmp1451            #   Call between .Ltmp1451 and .Ltmp1452
	.uleb128 .Ltmp1453-.Lfunc_begin47       #     jumps to .Ltmp1453
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1454-.Lfunc_begin47       # >> Call Site 111 <<
	.uleb128 .Ltmp1455-.Ltmp1454            #   Call between .Ltmp1454 and .Ltmp1455
	.uleb128 .Ltmp1461-.Lfunc_begin47       #     jumps to .Ltmp1461
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1465-.Lfunc_begin47       # >> Call Site 112 <<
	.uleb128 .Ltmp1466-.Ltmp1465            #   Call between .Ltmp1465 and .Ltmp1466
	.uleb128 .Ltmp1467-.Lfunc_begin47       #     jumps to .Ltmp1467
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1468-.Lfunc_begin47       # >> Call Site 113 <<
	.uleb128 .Ltmp1469-.Ltmp1468            #   Call between .Ltmp1468 and .Ltmp1469
	.uleb128 .Ltmp1476-.Lfunc_begin47       #     jumps to .Ltmp1476
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1469-.Lfunc_begin47       # >> Call Site 114 <<
	.uleb128 .Ltmp1470-.Ltmp1469            #   Call between .Ltmp1469 and .Ltmp1470
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1470-.Lfunc_begin47       # >> Call Site 115 <<
	.uleb128 .Ltmp1473-.Ltmp1470            #   Call between .Ltmp1470 and .Ltmp1473
	.uleb128 .Ltmp1476-.Lfunc_begin47       #     jumps to .Ltmp1476
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1283-.Lfunc_begin47       # >> Call Site 116 <<
	.uleb128 .Ltmp1284-.Ltmp1283            #   Call between .Ltmp1283 and .Ltmp1284
	.uleb128 .Ltmp1287-.Lfunc_begin47       #     jumps to .Ltmp1287
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1605-.Lfunc_begin47       # >> Call Site 117 <<
	.uleb128 .Ltmp1606-.Ltmp1605            #   Call between .Ltmp1605 and .Ltmp1606
	.uleb128 .Ltmp1611-.Lfunc_begin47       #     jumps to .Ltmp1611
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1598-.Lfunc_begin47       # >> Call Site 118 <<
	.uleb128 .Ltmp1599-.Ltmp1598            #   Call between .Ltmp1598 and .Ltmp1599
	.uleb128 .Ltmp1604-.Lfunc_begin47       #     jumps to .Ltmp1604
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1363-.Lfunc_begin47       # >> Call Site 119 <<
	.uleb128 .Ltmp1364-.Ltmp1363            #   Call between .Ltmp1363 and .Ltmp1364
	.uleb128 .Ltmp1365-.Lfunc_begin47       #     jumps to .Ltmp1365
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1327-.Lfunc_begin47       # >> Call Site 120 <<
	.uleb128 .Ltmp1328-.Ltmp1327            #   Call between .Ltmp1327 and .Ltmp1328
	.uleb128 .Ltmp1329-.Lfunc_begin47       #     jumps to .Ltmp1329
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1564-.Lfunc_begin47       # >> Call Site 121 <<
	.uleb128 .Ltmp1565-.Ltmp1564            #   Call between .Ltmp1564 and .Ltmp1565
	.uleb128 .Ltmp1566-.Lfunc_begin47       #     jumps to .Ltmp1566
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1262-.Lfunc_begin47       # >> Call Site 122 <<
	.uleb128 .Ltmp1263-.Ltmp1262            #   Call between .Ltmp1262 and .Ltmp1263
	.uleb128 .Ltmp1264-.Lfunc_begin47       #     jumps to .Ltmp1264
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1238-.Lfunc_begin47       # >> Call Site 123 <<
	.uleb128 .Ltmp1239-.Ltmp1238            #   Call between .Ltmp1238 and .Ltmp1239
	.uleb128 .Ltmp1240-.Lfunc_begin47       #     jumps to .Ltmp1240
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1183-.Lfunc_begin47       # >> Call Site 124 <<
	.uleb128 .Ltmp1184-.Ltmp1183            #   Call between .Ltmp1183 and .Ltmp1184
	.uleb128 .Ltmp1185-.Lfunc_begin47       #     jumps to .Ltmp1185
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1318-.Lfunc_begin47       # >> Call Site 125 <<
	.uleb128 .Ltmp1319-.Ltmp1318            #   Call between .Ltmp1318 and .Ltmp1319
	.uleb128 .Ltmp1320-.Lfunc_begin47       #     jumps to .Ltmp1320
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1280-.Lfunc_begin47       # >> Call Site 126 <<
	.uleb128 .Ltmp1281-.Ltmp1280            #   Call between .Ltmp1280 and .Ltmp1281
	.uleb128 .Ltmp1282-.Lfunc_begin47       #     jumps to .Ltmp1282
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1360-.Lfunc_begin47       # >> Call Site 127 <<
	.uleb128 .Ltmp1361-.Ltmp1360            #   Call between .Ltmp1360 and .Ltmp1361
	.uleb128 .Ltmp1362-.Lfunc_begin47       #     jumps to .Ltmp1362
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1543-.Lfunc_begin47       # >> Call Site 128 <<
	.uleb128 .Ltmp1544-.Ltmp1543            #   Call between .Ltmp1543 and .Ltmp1544
	.uleb128 .Ltmp1545-.Lfunc_begin47       #     jumps to .Ltmp1545
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1546-.Lfunc_begin47       # >> Call Site 129 <<
	.uleb128 .Ltmp1547-.Ltmp1546            #   Call between .Ltmp1546 and .Ltmp1547
	.uleb128 .Ltmp1548-.Lfunc_begin47       #     jumps to .Ltmp1548
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1338-.Lfunc_begin47       # >> Call Site 130 <<
	.uleb128 .Ltmp1339-.Ltmp1338            #   Call between .Ltmp1338 and .Ltmp1339
	.uleb128 .Ltmp1340-.Lfunc_begin47       #     jumps to .Ltmp1340
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1339-.Lfunc_begin47       # >> Call Site 131 <<
	.uleb128 .Ltmp1207-.Ltmp1339            #   Call between .Ltmp1339 and .Ltmp1207
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1207-.Lfunc_begin47       # >> Call Site 132 <<
	.uleb128 .Ltmp1208-.Ltmp1207            #   Call between .Ltmp1207 and .Ltmp1208
	.uleb128 .Ltmp1209-.Lfunc_begin47       #     jumps to .Ltmp1209
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1210-.Lfunc_begin47       # >> Call Site 133 <<
	.uleb128 .Ltmp1211-.Ltmp1210            #   Call between .Ltmp1210 and .Ltmp1211
	.uleb128 .Ltmp1212-.Lfunc_begin47       #     jumps to .Ltmp1212
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1294-.Lfunc_begin47       # >> Call Site 134 <<
	.uleb128 .Ltmp1295-.Ltmp1294            #   Call between .Ltmp1294 and .Ltmp1295
	.uleb128 .Ltmp1296-.Lfunc_begin47       #     jumps to .Ltmp1296
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1285-.Lfunc_begin47       # >> Call Site 135 <<
	.uleb128 .Ltmp1286-.Ltmp1285            #   Call between .Ltmp1285 and .Ltmp1286
	.uleb128 .Ltmp1287-.Lfunc_begin47       #     jumps to .Ltmp1287
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1366-.Lfunc_begin47       # >> Call Site 136 <<
	.uleb128 .Ltmp1367-.Ltmp1366            #   Call between .Ltmp1366 and .Ltmp1367
	.uleb128 .Ltmp1585-.Lfunc_begin47       #     jumps to .Ltmp1585
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1201-.Lfunc_begin47       # >> Call Site 137 <<
	.uleb128 .Ltmp1202-.Ltmp1201            #   Call between .Ltmp1201 and .Ltmp1202
	.uleb128 .Ltmp1203-.Lfunc_begin47       #     jumps to .Ltmp1203
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1574-.Lfunc_begin47       # >> Call Site 138 <<
	.uleb128 .Ltmp1575-.Ltmp1574            #   Call between .Ltmp1574 and .Ltmp1575
	.uleb128 .Ltmp1576-.Lfunc_begin47       #     jumps to .Ltmp1576
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1609-.Lfunc_begin47       # >> Call Site 139 <<
	.uleb128 .Ltmp1610-.Ltmp1609            #   Call between .Ltmp1609 and .Ltmp1610
	.uleb128 .Ltmp1611-.Lfunc_begin47       #     jumps to .Ltmp1611
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1602-.Lfunc_begin47       # >> Call Site 140 <<
	.uleb128 .Ltmp1603-.Ltmp1602            #   Call between .Ltmp1602 and .Ltmp1603
	.uleb128 .Ltmp1604-.Lfunc_begin47       #     jumps to .Ltmp1604
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1595-.Lfunc_begin47       # >> Call Site 141 <<
	.uleb128 .Ltmp1596-.Ltmp1595            #   Call between .Ltmp1595 and .Ltmp1596
	.uleb128 .Ltmp1597-.Lfunc_begin47       #     jumps to .Ltmp1597
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1592-.Lfunc_begin47       # >> Call Site 142 <<
	.uleb128 .Ltmp1593-.Ltmp1592            #   Call between .Ltmp1592 and .Ltmp1593
	.uleb128 .Ltmp1594-.Lfunc_begin47       #     jumps to .Ltmp1594
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1589-.Lfunc_begin47       # >> Call Site 143 <<
	.uleb128 .Ltmp1590-.Ltmp1589            #   Call between .Ltmp1589 and .Ltmp1590
	.uleb128 .Ltmp1591-.Lfunc_begin47       #     jumps to .Ltmp1591
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1571-.Lfunc_begin47       # >> Call Site 144 <<
	.uleb128 .Ltmp1572-.Ltmp1571            #   Call between .Ltmp1571 and .Ltmp1572
	.uleb128 .Ltmp1573-.Lfunc_begin47       #     jumps to .Ltmp1573
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1583-.Lfunc_begin47       # >> Call Site 145 <<
	.uleb128 .Ltmp1584-.Ltmp1583            #   Call between .Ltmp1583 and .Ltmp1584
	.uleb128 .Ltmp1585-.Lfunc_begin47       #     jumps to .Ltmp1585
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1607-.Lfunc_begin47       # >> Call Site 146 <<
	.uleb128 .Ltmp1608-.Ltmp1607            #   Call between .Ltmp1607 and .Ltmp1608
	.uleb128 .Ltmp1611-.Lfunc_begin47       #     jumps to .Ltmp1611
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1600-.Lfunc_begin47       # >> Call Site 147 <<
	.uleb128 .Ltmp1601-.Ltmp1600            #   Call between .Ltmp1600 and .Ltmp1601
	.uleb128 .Ltmp1604-.Lfunc_begin47       #     jumps to .Ltmp1604
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1375-.Lfunc_begin47       # >> Call Site 148 <<
	.uleb128 .Ltmp1376-.Ltmp1375            #   Call between .Ltmp1375 and .Ltmp1376
	.uleb128 .Ltmp1377-.Lfunc_begin47       #     jumps to .Ltmp1377
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1378-.Lfunc_begin47       # >> Call Site 149 <<
	.uleb128 .Ltmp1379-.Ltmp1378            #   Call between .Ltmp1378 and .Ltmp1379
	.uleb128 .Ltmp1380-.Lfunc_begin47       #     jumps to .Ltmp1380
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1381-.Lfunc_begin47       # >> Call Site 150 <<
	.uleb128 .Ltmp1382-.Ltmp1381            #   Call between .Ltmp1381 and .Ltmp1382
	.uleb128 .Ltmp1383-.Lfunc_begin47       #     jumps to .Ltmp1383
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1384-.Lfunc_begin47       # >> Call Site 151 <<
	.uleb128 .Ltmp1385-.Ltmp1384            #   Call between .Ltmp1384 and .Ltmp1385
	.uleb128 .Ltmp1386-.Lfunc_begin47       #     jumps to .Ltmp1386
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1412-.Lfunc_begin47       # >> Call Site 152 <<
	.uleb128 .Ltmp1413-.Ltmp1412            #   Call between .Ltmp1412 and .Ltmp1413
	.uleb128 .Ltmp1414-.Lfunc_begin47       #     jumps to .Ltmp1414
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1415-.Lfunc_begin47       # >> Call Site 153 <<
	.uleb128 .Ltmp1416-.Ltmp1415            #   Call between .Ltmp1415 and .Ltmp1416
	.uleb128 .Ltmp1417-.Lfunc_begin47       #     jumps to .Ltmp1417
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1418-.Lfunc_begin47       # >> Call Site 154 <<
	.uleb128 .Ltmp1419-.Ltmp1418            #   Call between .Ltmp1418 and .Ltmp1419
	.uleb128 .Ltmp1420-.Lfunc_begin47       #     jumps to .Ltmp1420
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1421-.Lfunc_begin47       # >> Call Site 155 <<
	.uleb128 .Ltmp1422-.Ltmp1421            #   Call between .Ltmp1421 and .Ltmp1422
	.uleb128 .Ltmp1423-.Lfunc_begin47       #     jumps to .Ltmp1423
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1424-.Lfunc_begin47       # >> Call Site 156 <<
	.uleb128 .Ltmp1425-.Ltmp1424            #   Call between .Ltmp1424 and .Ltmp1425
	.uleb128 .Ltmp1426-.Lfunc_begin47       #     jumps to .Ltmp1426
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1427-.Lfunc_begin47       # >> Call Site 157 <<
	.uleb128 .Ltmp1428-.Ltmp1427            #   Call between .Ltmp1427 and .Ltmp1428
	.uleb128 .Ltmp1429-.Lfunc_begin47       #     jumps to .Ltmp1429
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1430-.Lfunc_begin47       # >> Call Site 158 <<
	.uleb128 .Ltmp1431-.Ltmp1430            #   Call between .Ltmp1430 and .Ltmp1431
	.uleb128 .Ltmp1432-.Lfunc_begin47       #     jumps to .Ltmp1432
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1433-.Lfunc_begin47       # >> Call Site 159 <<
	.uleb128 .Ltmp1434-.Ltmp1433            #   Call between .Ltmp1433 and .Ltmp1434
	.uleb128 .Ltmp1435-.Lfunc_begin47       #     jumps to .Ltmp1435
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1436-.Lfunc_begin47       # >> Call Site 160 <<
	.uleb128 .Ltmp1437-.Ltmp1436            #   Call between .Ltmp1436 and .Ltmp1437
	.uleb128 .Ltmp1438-.Lfunc_begin47       #     jumps to .Ltmp1438
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1439-.Lfunc_begin47       # >> Call Site 161 <<
	.uleb128 .Ltmp1440-.Ltmp1439            #   Call between .Ltmp1439 and .Ltmp1440
	.uleb128 .Ltmp1441-.Lfunc_begin47       #     jumps to .Ltmp1441
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1442-.Lfunc_begin47       # >> Call Site 162 <<
	.uleb128 .Ltmp1443-.Ltmp1442            #   Call between .Ltmp1442 and .Ltmp1443
	.uleb128 .Ltmp1444-.Lfunc_begin47       #     jumps to .Ltmp1444
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1474-.Lfunc_begin47       # >> Call Site 163 <<
	.uleb128 .Ltmp1475-.Ltmp1474            #   Call between .Ltmp1474 and .Ltmp1475
	.uleb128 .Ltmp1476-.Lfunc_begin47       #     jumps to .Ltmp1476
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1475-.Lfunc_begin47       # >> Call Site 164 <<
	.uleb128 .Ltmp1394-.Ltmp1475            #   Call between .Ltmp1475 and .Ltmp1394
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1394-.Lfunc_begin47       # >> Call Site 165 <<
	.uleb128 .Ltmp1395-.Ltmp1394            #   Call between .Ltmp1394 and .Ltmp1395
	.uleb128 .Ltmp1396-.Lfunc_begin47       #     jumps to .Ltmp1396
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1397-.Lfunc_begin47       # >> Call Site 166 <<
	.uleb128 .Ltmp1398-.Ltmp1397            #   Call between .Ltmp1397 and .Ltmp1398
	.uleb128 .Ltmp1403-.Lfunc_begin47       #     jumps to .Ltmp1403
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1398-.Lfunc_begin47       # >> Call Site 167 <<
	.uleb128 .Ltmp1456-.Ltmp1398            #   Call between .Ltmp1398 and .Ltmp1456
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1456-.Lfunc_begin47       # >> Call Site 168 <<
	.uleb128 .Ltmp1457-.Ltmp1456            #   Call between .Ltmp1456 and .Ltmp1457
	.uleb128 .Ltmp1458-.Lfunc_begin47       #     jumps to .Ltmp1458
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1459-.Lfunc_begin47       # >> Call Site 169 <<
	.uleb128 .Ltmp1460-.Ltmp1459            #   Call between .Ltmp1459 and .Ltmp1460
	.uleb128 .Ltmp1461-.Lfunc_begin47       #     jumps to .Ltmp1461
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1445-.Lfunc_begin47       # >> Call Site 170 <<
	.uleb128 .Ltmp1446-.Ltmp1445            #   Call between .Ltmp1445 and .Ltmp1446
	.uleb128 .Ltmp1447-.Lfunc_begin47       #     jumps to .Ltmp1447
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1448-.Lfunc_begin47       # >> Call Site 171 <<
	.uleb128 .Ltmp1449-.Ltmp1448            #   Call between .Ltmp1448 and .Ltmp1449
	.uleb128 .Ltmp1450-.Lfunc_begin47       #     jumps to .Ltmp1450
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1449-.Lfunc_begin47       # >> Call Site 172 <<
	.uleb128 .Ltmp1462-.Ltmp1449            #   Call between .Ltmp1449 and .Ltmp1462
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1462-.Lfunc_begin47       # >> Call Site 173 <<
	.uleb128 .Ltmp1463-.Ltmp1462            #   Call between .Ltmp1462 and .Ltmp1463
	.uleb128 .Ltmp1464-.Lfunc_begin47       #     jumps to .Ltmp1464
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1404-.Lfunc_begin47       # >> Call Site 174 <<
	.uleb128 .Ltmp1405-.Ltmp1404            #   Call between .Ltmp1404 and .Ltmp1405
	.uleb128 .Ltmp1406-.Lfunc_begin47       #     jumps to .Ltmp1406
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1495-.Lfunc_begin47       # >> Call Site 175 <<
	.uleb128 .Ltmp1496-.Ltmp1495            #   Call between .Ltmp1495 and .Ltmp1496
	.uleb128 .Ltmp1497-.Lfunc_begin47       #     jumps to .Ltmp1497
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1512-.Lfunc_begin47       # >> Call Site 176 <<
	.uleb128 .Ltmp1513-.Ltmp1512            #   Call between .Ltmp1512 and .Ltmp1513
	.uleb128 .Ltmp1514-.Lfunc_begin47       #     jumps to .Ltmp1514
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1513-.Lfunc_begin47       # >> Call Site 177 <<
	.uleb128 .Ltmp1204-.Ltmp1513            #   Call between .Ltmp1513 and .Ltmp1204
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1204-.Lfunc_begin47       # >> Call Site 178 <<
	.uleb128 .Ltmp1205-.Ltmp1204            #   Call between .Ltmp1204 and .Ltmp1205
	.uleb128 .Ltmp1206-.Lfunc_begin47       #     jumps to .Ltmp1206
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1205-.Lfunc_begin47       # >> Call Site 179 <<
	.uleb128 .Ltmp1577-.Ltmp1205            #   Call between .Ltmp1205 and .Ltmp1577
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1577-.Lfunc_begin47       # >> Call Site 180 <<
	.uleb128 .Ltmp1578-.Ltmp1577            #   Call between .Ltmp1577 and .Ltmp1578
	.uleb128 .Ltmp1579-.Lfunc_begin47       #     jumps to .Ltmp1579
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1580-.Lfunc_begin47       # >> Call Site 181 <<
	.uleb128 .Ltmp1581-.Ltmp1580            #   Call between .Ltmp1580 and .Ltmp1581
	.uleb128 .Ltmp1582-.Lfunc_begin47       #     jumps to .Ltmp1582
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1321-.Lfunc_begin47       # >> Call Site 182 <<
	.uleb128 .Ltmp1322-.Ltmp1321            #   Call between .Ltmp1321 and .Ltmp1322
	.uleb128 .Ltmp1323-.Lfunc_begin47       #     jumps to .Ltmp1323
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1324-.Lfunc_begin47       # >> Call Site 183 <<
	.uleb128 .Ltmp1325-.Ltmp1324            #   Call between .Ltmp1324 and .Ltmp1325
	.uleb128 .Ltmp1326-.Lfunc_begin47       #     jumps to .Ltmp1326
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1265-.Lfunc_begin47       # >> Call Site 184 <<
	.uleb128 .Ltmp1266-.Ltmp1265            #   Call between .Ltmp1265 and .Ltmp1266
	.uleb128 .Ltmp1267-.Lfunc_begin47       #     jumps to .Ltmp1267
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1268-.Lfunc_begin47       # >> Call Site 185 <<
	.uleb128 .Ltmp1269-.Ltmp1268            #   Call between .Ltmp1268 and .Ltmp1269
	.uleb128 .Ltmp1270-.Lfunc_begin47       #     jumps to .Ltmp1270
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1269-.Lfunc_begin47       # >> Call Site 186 <<
	.uleb128 .Lfunc_end102-.Ltmp1269        #   Call between .Ltmp1269 and .Lfunc_end102
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end47:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase29:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev,"axG",@progbits,_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev,comdat
	.hidden	_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev # -- Begin function _ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev
	.weak	_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev,@function
_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev: # @_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev
.Lfunc_begin48:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception48
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB103_2
# %bb.1:
.Ltmp1612:
	xorl	%esi, %esi
	callq	_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb
.Ltmp1613:
.LBB103_2:                              # %_ZN8pybind1112cpp_function33InitializingFunctionRecordDeleterclEPNS_6detail15function_recordE.exit
	movq	$0, (%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB103_3:
	.cfi_def_cfa_offset 16
.Ltmp1614:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end103:
	.size	_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev, .Lfunc_end103-_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev,"aG",@progbits,_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table103:
.Lexception48:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase30-.Lttbaseref30
.Lttbaseref30:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end48-.Lcst_begin48
.Lcst_begin48:
	.uleb128 .Ltmp1612-.Lfunc_begin48       # >> Call Site 1 <<
	.uleb128 .Ltmp1613-.Ltmp1612            #   Call between .Ltmp1612 and .Ltmp1613
	.uleb128 .Ltmp1614-.Lfunc_begin48       #     jumps to .Ltmp1614
	.byte	1                               #   On action: 1
.Lcst_end48:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase30:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_,"axG",@progbits,_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_,comdat
	.hidden	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_ # -- Begin function _ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_
	.weak	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_
	.p2align	4, 0x90
	.type	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_,@function
_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_: # @_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_
.Lfunc_begin49:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception49
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	8(%rdi), %rax
	movq	(%rax), %rsi
	testq	%rsi, %rsi
	je	.LBB104_1
# %bb.2:
	movq	(%rdi), %rdi
	movzwl	89(%rdi), %ebx
	addq	$56, %rdi
	callq	_ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_
	movq	_Py_NoneStruct@GOTPCREL(%rip), %rax
	testb	$32, %bl
	jne	.LBB104_3
# %bb.5:
	movq	%rax, (%rsp)
	movq	%rsp, %r14
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rsp), %rbx
	movq	$0, (%rsp)
.Ltmp1618:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1619:
	jmp	.LBB104_6
.LBB104_1:
	movl	$1, %ebx
	jmp	.LBB104_6
.LBB104_3:
	movq	%rax, (%rsp)
	movq	%rsp, %r14
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rsp), %rbx
	movq	$0, (%rsp)
.Ltmp1615:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1616:
.LBB104_6:                              # %_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENKUlRNS2_13function_callEE_clESJ_.exit
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB104_7:
	.cfi_def_cfa_offset 32
.Ltmp1617:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB104_4:
.Ltmp1620:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end104:
	.size	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_, .Lfunc_end104-_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_
	.cfi_endproc
	.section	.gcc_except_table._ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_,"aG",@progbits,_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_,comdat
	.p2align	2, 0x0
GCC_except_table104:
.Lexception49:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase31-.Lttbaseref31
.Lttbaseref31:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end49-.Lcst_begin49
.Lcst_begin49:
	.uleb128 .Lfunc_begin49-.Lfunc_begin49  # >> Call Site 1 <<
	.uleb128 .Ltmp1618-.Lfunc_begin49       #   Call between .Lfunc_begin49 and .Ltmp1618
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1618-.Lfunc_begin49       # >> Call Site 2 <<
	.uleb128 .Ltmp1619-.Ltmp1618            #   Call between .Ltmp1618 and .Ltmp1619
	.uleb128 .Ltmp1620-.Lfunc_begin49       #     jumps to .Ltmp1620
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1619-.Lfunc_begin49       # >> Call Site 3 <<
	.uleb128 .Ltmp1615-.Ltmp1619            #   Call between .Ltmp1619 and .Ltmp1615
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1615-.Lfunc_begin49       # >> Call Site 4 <<
	.uleb128 .Ltmp1616-.Ltmp1615            #   Call between .Ltmp1615 and .Ltmp1616
	.uleb128 .Ltmp1617-.Lfunc_begin49       #     jumps to .Ltmp1617
	.byte	1                               #   On action: 1
.Lcst_end49:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase31:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_,"axG",@progbits,_ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_,comdat
	.hidden	_ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_ # -- Begin function _ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_
	.weak	_ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_
	.p2align	4, 0x90
	.type	_ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_,@function
_ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_: # @_ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, 8(%rsp)
	movq	(%rdi), %rax
	movq	%rax, (%rsp)
	callq	_ZN8pybind116detail13get_internalsEv
	movq	%rax, %rbx
	leaq	56(%rax), %rdi
	movq	%rsp, %rsi
	callq	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_
	movq	184(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB105_27
# %bb.1:                                # %.lr.ph.i.i
	movq	%rbx, %r14
	addq	$184, %r14
	jmp	.LBB105_2
	.p2align	4, 0x90
.LBB105_25:                             #   in Loop: Header=BB105_2 Depth=1
	movq	(%rdi), %r15
	movq	%r15, %rdi
	testq	%r15, %r15
	je	.LBB105_27
.LBB105_2:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB105_7 Depth 2
	movq	8(%rdi), %rax
	cmpq	(%rsp), %rax
	jne	.LBB105_25
# %bb.3:                                #   in Loop: Header=BB105_2 Depth=1
	movq	176(%rbx), %r9
	movq	24(%rdi), %rax
	movq	%rax, %rcx
	orq	%r9, %rcx
	shrq	$32, %rcx
	je	.LBB105_4
# %bb.5:                                #   in Loop: Header=BB105_2 Depth=1
	xorl	%edx, %edx
	divq	%r9
	movq	%rdx, %rcx
	jmp	.LBB105_6
.LBB105_4:                              #   in Loop: Header=BB105_2 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r9d
	movl	%edx, %ecx
.LBB105_6:                              #   in Loop: Header=BB105_2 Depth=1
	movq	168(%rbx), %r8
	movq	(%r8,%rcx,8), %r11
	movq	%r11, %rax
	.p2align	4, 0x90
.LBB105_7:                              #   Parent Loop BB105_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%rax, %rsi
	movq	(%rax), %rax
	cmpq	%rdi, %rax
	jne	.LBB105_7
# %bb.8:                                # %_ZNSt10_HashtableISt4pairIPK7_objectPKcES6_SaIS6_ENSt8__detail9_IdentityESt8equal_toIS6_EN8pybind116detail13override_hashENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb1ELb1ELb1EEEE20_M_get_previous_nodeEmPNS8_10_Hash_nodeIS6_Lb1EEE.exit.i.i.i.i.i
                                        #   in Loop: Header=BB105_2 Depth=1
	movq	(%rdi), %r10
	cmpq	%rsi, %r11
	je	.LBB105_9
# %bb.18:                               #   in Loop: Header=BB105_2 Depth=1
	testq	%r10, %r10
	je	.LBB105_24
# %bb.19:                               #   in Loop: Header=BB105_2 Depth=1
	movq	24(%r10), %rax
	movq	%rax, %rdx
	orq	%r9, %rdx
	shrq	$32, %rdx
	je	.LBB105_20
# %bb.21:                               #   in Loop: Header=BB105_2 Depth=1
	xorl	%edx, %edx
	divq	%r9
	cmpq	%rcx, %rdx
	jne	.LBB105_23
	jmp	.LBB105_24
.LBB105_9:                              #   in Loop: Header=BB105_2 Depth=1
	testq	%r10, %r10
	je	.LBB105_15
# %bb.10:                               #   in Loop: Header=BB105_2 Depth=1
	movq	24(%r10), %rax
	movq	%rax, %rdx
	orq	%r9, %rdx
	shrq	$32, %rdx
	je	.LBB105_11
# %bb.12:                               #   in Loop: Header=BB105_2 Depth=1
	xorl	%edx, %edx
	divq	%r9
	cmpq	%rcx, %rdx
	jne	.LBB105_14
	jmp	.LBB105_24
.LBB105_20:                             #   in Loop: Header=BB105_2 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r9d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	je	.LBB105_24
.LBB105_23:                             #   in Loop: Header=BB105_2 Depth=1
	movq	%rsi, (%r8,%rdx,8)
	jmp	.LBB105_24
.LBB105_11:                             #   in Loop: Header=BB105_2 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r9d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	je	.LBB105_24
.LBB105_14:                             #   in Loop: Header=BB105_2 Depth=1
	movq	%r11, (%r8,%rdx,8)
	movq	168(%rbx), %r8
	movq	(%r8,%rcx,8), %r11
.LBB105_15:                             # %.thread23.i.i.i.i.i.i
                                        #   in Loop: Header=BB105_2 Depth=1
	cmpq	%r11, %r14
	jne	.LBB105_17
# %bb.16:                               #   in Loop: Header=BB105_2 Depth=1
	movq	%r10, (%r14)
.LBB105_17:                             #   in Loop: Header=BB105_2 Depth=1
	movq	$0, (%r8,%rcx,8)
.LBB105_24:                             # %_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EE5eraseENSt8__detail14_Node_iteratorIS6_Lb1ELb1EEE.exit.i.i
                                        #   in Loop: Header=BB105_2 Depth=1
	movq	(%rdi), %r15
	movq	%r15, (%rsi)
	movl	$32, %esi
	callq	_ZdlPvm@PLT
	decq	192(%rbx)
	movq	%r15, %rdi
	testq	%r15, %r15
	jne	.LBB105_2
.LBB105_27:                             # %_ZN8pybind116detail14with_internalsIZZNS0_23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES4_EUlRNS0_9internalsEE_EEDTclfp_clL_ZNS0_13get_internalsEvEEEERKT_.exit
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end105:
	.size	_ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_, .Lfunc_end105-_ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_,"axG",@progbits,_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_,comdat
	.hidden	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_ # -- Begin function _ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_
	.weak	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_,@function
_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_: # @_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	cmpq	$0, 24(%rdi)
	je	.LBB106_13
# %bb.1:
	movq	(%rsi), %rsi
	movq	8(%rbx), %r11
	movq	%rsi, %rax
	orq	%r11, %rax
	shrq	$32, %rax
	je	.LBB106_18
# %bb.2:
	movq	%rsi, %rax
	xorl	%edx, %edx
	divq	%r11
	movq	%rdx, %rcx
	movq	(%rbx), %r10
	movq	(%r10,%rcx,8), %r9
	testq	%r9, %r9
	jne	.LBB106_3
	jmp	.LBB106_24
.LBB106_13:
	movq	16(%rbx), %r14
	testq	%r14, %r14
	je	.LBB106_24
# %bb.14:                               # %.preheader.i
	movq	(%rsi), %rax
	cmpq	8(%r14), %rax
	je	.LBB106_25
# %bb.15:
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB106_16:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	%r14, %r9
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB106_43
# %bb.17:                               #   in Loop: Header=BB106_16 Depth=1
	cmpq	8(%r14), %rax
	jne	.LBB106_16
	jmp	.LBB106_26
.LBB106_18:
	movl	%esi, %eax
	xorl	%edx, %edx
	divl	%r11d
	movl	%edx, %ecx
	movq	(%rbx), %r10
	movq	(%r10,%rcx,8), %r9
	testq	%r9, %r9
	je	.LBB106_24
.LBB106_3:
	movq	(%r9), %r14
	cmpq	8(%r14), %rsi
	je	.LBB106_20
# %bb.4:
	xorl	%edi, %edi
	jmp	.LBB106_5
	.p2align	4, 0x90
.LBB106_8:                              #   in Loop: Header=BB106_5 Depth=1
	movl	%r8d, %eax
	xorl	%edx, %edx
	divl	%r11d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	jne	.LBB106_43
.LBB106_9:                              #   in Loop: Header=BB106_5 Depth=1
	cmpq	%r8, %rsi
	je	.LBB106_10
.LBB106_5:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	movq	%r14, %r15
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB106_43
# %bb.6:                                #   in Loop: Header=BB106_5 Depth=1
	movq	8(%r14), %r8
	movq	%r8, %rax
	orq	%r11, %rax
	shrq	$32, %rax
	je	.LBB106_8
# %bb.7:                                #   in Loop: Header=BB106_5 Depth=1
	movq	%r8, %rax
	xorl	%edx, %edx
	divq	%r11
	cmpq	%rcx, %rdx
	je	.LBB106_9
	jmp	.LBB106_43
.LBB106_24:
	xorl	%edi, %edi
	jmp	.LBB106_43
.LBB106_20:                             # %.loopexit.thread
	movq	(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB106_37
# %bb.21:
	movq	%r9, %rsi
	jmp	.LBB106_22
.LBB106_25:
	leaq	16(%rbx), %r9
.LBB106_26:                             # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeERS3_.exit
	movq	8(%rbx), %r11
	movq	%rax, %rcx
	orq	%r11, %rcx
	shrq	$32, %rcx
	je	.LBB106_28
# %bb.27:
	xorl	%edx, %edx
	divq	%r11
	movq	%rdx, %rcx
	jmp	.LBB106_29
.LBB106_10:
	movq	%r9, %rsi
	movq	%r15, %r9
	movq	(%r14), %rdi
	cmpq	%r9, %rsi
	jne	.LBB106_30
.LBB106_11:
	testq	%rdi, %rdi
	je	.LBB106_12
.LBB106_22:
	movq	8(%rdi), %rax
	movq	%rax, %rdx
	orq	%r11, %rdx
	shrq	$32, %rdx
	je	.LBB106_33
# %bb.23:
	xorl	%edx, %edx
	divq	%r11
	cmpq	%rcx, %rdx
	jne	.LBB106_34
	jmp	.LBB106_40
.LBB106_28:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r11d
	movl	%edx, %ecx
.LBB106_29:
	movq	(%rbx), %r10
	movq	(%r10,%rcx,8), %rsi
	movq	(%r14), %rdi
	cmpq	%r9, %rsi
	je	.LBB106_11
.LBB106_30:
	testq	%rdi, %rdi
	je	.LBB106_40
# %bb.31:
	movq	8(%rdi), %rax
	movq	%rax, %rdx
	orq	%r11, %rdx
	shrq	$32, %rdx
	je	.LBB106_38
# %bb.32:
	xorl	%edx, %edx
	divq	%r11
	cmpq	%rcx, %rdx
	jne	.LBB106_39
	jmp	.LBB106_40
.LBB106_33:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r11d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	je	.LBB106_40
.LBB106_34:
	movq	%rsi, (%r10,%rdx,8)
	movq	(%rbx), %r10
	movq	(%r10,%rcx,8), %rsi
	leaq	16(%rbx), %rax
	cmpq	%rsi, %rax
	jne	.LBB106_36
.LBB106_35:
	movq	%rdi, (%rax)
.LBB106_36:
	movq	$0, (%r10,%rcx,8)
	jmp	.LBB106_40
.LBB106_37:
	xorl	%edi, %edi
	movq	%r9, %rsi
	leaq	16(%rbx), %rax
	cmpq	%rsi, %rax
	jne	.LBB106_36
	jmp	.LBB106_35
.LBB106_38:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r11d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	je	.LBB106_40
.LBB106_39:
	movq	%r9, (%r10,%rdx,8)
.LBB106_40:                             # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE22_M_remove_bucket_beginEmPNSD_10_Hash_nodeISB_Lb0EEEm.exit.i
	movq	(%r14), %rax
	movq	%rax, (%r9)
	movq	16(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB106_42
# %bb.41:
	movq	32(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB106_42:                             # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSD_15_Hash_node_baseEPNSD_10_Hash_nodeISB_Lb0EEE.exit
	movl	$40, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	decq	24(%rbx)
	movl	$1, %edi
.LBB106_43:                             # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeERS3_.exit.thread
	movq	%rdi, %rax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB106_12:
	.cfi_def_cfa_offset 32
	xorl	%edi, %edi
	leaq	16(%rbx), %rax
	cmpq	%rsi, %rax
	jne	.LBB106_36
	jmp	.LBB106_35
.Lfunc_end106:
	.size	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_, .Lfunc_end106-_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	8(%rdx), %r8
	movq	8(%rsi), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	xorq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB107_13
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	%rdi, %rbx
	leaq	(%rsi,%r8), %r12
	movq	(%r14), %rdi
	leaq	16(%r14), %r15
	movl	$15, %eax
	cmpq	%r15, %rdi
	je	.LBB107_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	16(%r14), %rax
.LBB107_3:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	(%rdx), %rcx
	cmpq	%rax, %r12
	jbe	.LBB107_4
# %bb.8:
	movq	%r14, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
	jmp	.LBB107_9
.LBB107_4:
	testq	%r8, %r8
	je	.LBB107_9
# %bb.5:
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB107_7
# %bb.6:
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB107_9
.LBB107_7:
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB107_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_.exit
	movq	%r12, 8(%r14)
	movq	(%r14), %rax
	movb	$0, (%rax,%r12)
	leaq	16(%rbx), %rdi
	movq	%rdi, (%rbx)
	movq	(%r14), %rax
	cmpq	%r15, %rax
	je	.LBB107_10
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	%rax, (%rbx)
	movq	16(%r14), %rax
	movq	%rax, 16(%rbx)
	movq	8(%r14), %r12
	jmp	.LBB107_12
.LBB107_10:
	movq	8(%r14), %r12
	leaq	1(%r12), %rdx
	movq	%r15, %rsi
	callq	memcpy@PLT
.LBB107_12:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	%r12, 8(%rbx)
	movq	%r15, (%r14)
	movq	$0, 8(%r14)
	movb	$0, 16(%r14)
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB107_13:
	.cfi_def_cfa_offset 48
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end107:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_, .Lfunc_end107-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__cxx119to_stringEm,"axG",@progbits,_ZNSt7__cxx119to_stringEm,comdat
	.weak	_ZNSt7__cxx119to_stringEm       # -- Begin function _ZNSt7__cxx119to_stringEm
	.p2align	4, 0x90
	.type	_ZNSt7__cxx119to_stringEm,@function
_ZNSt7__cxx119to_stringEm:              # @_ZNSt7__cxx119to_stringEm
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	cmpq	$10, %rsi
	jae	.LBB108_1
# %bb.23:                               # %.thread
	leaq	16(%rbx), %r12
	movq	%r12, (%rbx)
.LBB108_14:
	movb	$0, (%r12)
	movl	$1, %r15d
	jmp	.LBB108_15
.LBB108_1:                              # %.lr.ph.i.preheader
	movl	$4, %esi
	movabsq	$3777893186295716171, %rdi      # imm = 0x346DC5D63886594B
	movq	%r14, %rcx
	.p2align	4, 0x90
.LBB108_2:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	cmpq	$99, %rcx
	jbe	.LBB108_3
# %bb.4:                                #   in Loop: Header=BB108_2 Depth=1
	cmpq	$999, %rcx                      # imm = 0x3E7
	jbe	.LBB108_5
# %bb.6:                                #   in Loop: Header=BB108_2 Depth=1
	cmpq	$10000, %rcx                    # imm = 0x2710
	jb	.LBB108_9
# %bb.7:                                #   in Loop: Header=BB108_2 Depth=1
	movq	%rcx, %rax
	mulq	%rdi
	shrq	$11, %rdx
	addl	$4, %esi
	cmpq	$99999, %rcx                    # imm = 0x1869F
	movq	%rdx, %rcx
	ja	.LBB108_2
# %bb.8:                                # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit.loopexit
	addl	$-3, %esi
	jmp	.LBB108_9
.LBB108_3:
	addl	$-2, %esi
	jmp	.LBB108_9
.LBB108_5:
	decl	%esi
.LBB108_9:                              # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit
	movl	%esi, %r15d
	leaq	16(%rbx), %r12
	movq	%r12, (%rbx)
	cmpl	$16, %esi
	jb	.LBB108_12
# %bb.10:                               # %.noexc
	leaq	1(%r15), %rdi
	callq	_Znwm@PLT
	movq	%rax, %r12
	movq	%rax, (%rbx)
	movq	%r15, 16(%rbx)
	jmp	.LBB108_11
.LBB108_12:
	testq	%r15, %r15
	je	.LBB108_15
# %bb.13:
	cmpl	$1, %r15d
	je	.LBB108_14
.LBB108_11:
	movq	%r12, %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset@PLT
.LBB108_15:
	movq	%r15, 8(%rbx)
	movb	$0, (%r12,%r15)
	movq	(%rbx), %rcx
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %rsi
	cmpq	$100, %r14
	jb	.LBB108_16
# %bb.17:                               # %.lr.ph.preheader.i
	movl	8(%rbx), %edi
	addl	$-2, %edi
	movabsq	$2951479051793528259, %r8       # imm = 0x28F5C28F5C28F5C3
	.p2align	4, 0x90
.LBB108_18:                             # %.lr.ph.i4
                                        # =>This Inner Loop Header: Depth=1
	leal	1(%rdi), %r9d
	movq	%r14, %rax
	shrq	$2, %rax
	mulq	%r8
	shrq	$2, %rdx
	imull	$100, %edx, %eax
	movl	%r14d, %r10d
	subl	%eax, %r10d
	movzbl	(%rsi,%r10,2), %eax
	movzbl	1(%rsi,%r10,2), %r10d
	movb	%r10b, (%rcx,%r9)
	movl	%edi, %r9d
	movb	%al, (%rcx,%r9)
	addl	$-2, %edi
	cmpq	$9999, %r14                     # imm = 0x270F
	movq	%rdx, %r14
	ja	.LBB108_18
# %bb.19:                               # %._crit_edge.i
	cmpq	$10, %rdx
	jb	.LBB108_21
.LBB108_20:
	movzbl	(%rsi,%rdx,2), %eax
	movzbl	1(%rsi,%rdx,2), %edx
	movb	%dl, 1(%rcx)
	jmp	.LBB108_22
.LBB108_16:
	movq	%r14, %rdx
	cmpq	$10, %rdx
	jae	.LBB108_20
.LBB108_21:
	orb	$48, %dl
	movl	%edx, %eax
.LBB108_22:                             # %_ZNSt8__detail18__to_chars_10_implImEEvPcjT_.exit
	movb	%al, (%rcx)
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end108:
	.size	_ZNSt7__cxx119to_stringEm, .Lfunc_end108-_ZNSt7__cxx119to_stringEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc,"axG",@progbits,_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc,comdat
	.hidden	_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc # -- Begin function _ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc
	.weak	_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc
	.p2align	4, 0x90
	.type	_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc,@function
_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc: # @_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc
.Lfunc_begin50:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception50
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	leaq	16(%rsp), %r13
	movq	%r13, (%rsp)
	testq	%rsi, %rsi
	je	.LBB109_70
# %bb.1:
	movq	%rsi, %r15
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	strlen@PLT
	movq	%rax, %r12
	cmpq	$16, %rax
	jb	.LBB109_5
# %bb.2:
	testq	%r12, %r12
	js	.LBB109_71
# %bb.3:
	movq	%r12, %rdi
	incq	%rdi
	js	.LBB109_72
# %bb.4:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
	callq	_Znwm@PLT
	movq	%rax, %r13
	movq	%rax, (%rsp)
	movq	%r12, 16(%rsp)
.LBB109_5:                              # %._crit_edge.i.i
	testq	%r12, %r12
	je	.LBB109_9
# %bb.6:                                # %._crit_edge.i.i
	cmpq	$1, %r12
	jne	.LBB109_8
# %bb.7:
	movzbl	(%r15), %eax
	movb	%al, (%r13)
	jmp	.LBB109_9
.LBB109_8:
	movq	%r13, %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB109_9:
	movq	%rbx, 32(%rsp)                  # 8-byte Spill
	movq	%r12, 8(%rsp)
	movb	$0, (%r13,%r12)
	movq	(%rsp), %rax
	movq	8(%rsp), %rbx
	cmpq	$2, %rbx
	jb	.LBB109_16
# %bb.10:
	cmpb	$39, (%rax)
	jne	.LBB109_16
# %bb.11:
	cmpb	$39, -1(%rax,%rbx)
	jne	.LBB109_16
# %bb.12:
	movq	32(%rsp), %r14                  # 8-byte Reload
	leaq	16(%r14), %rdi
	movq	%rdi, (%r14)
	leaq	16(%rsp), %rsi
	cmpq	%rsi, %rax
	je	.LBB109_13
# %bb.14:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	%rax, (%r14)
	movq	16(%rsp), %rax
	movq	%rax, 16(%r14)
	jmp	.LBB109_15
.LBB109_16:                             # %.critedge
	movq	$0, 8(%rsp)
	movb	$0, (%rax)
	movzbl	(%r15), %ebp
	testb	%bpl, %bpl
	leaq	16(%rsp), %rdi
	je	.LBB109_34
# %bb.17:                               # %.lr.ph.preheader
	incq	%r15
	xorl	%eax, %eax
	movabsq	$4294983168, %rcx               # imm = 0x100003E00
	leaq	1(%rcx), %rbx
	jmp	.LBB109_18
	.p2align	4, 0x90
.LBB109_31:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit44
                                        #   in Loop: Header=BB109_18 Depth=1
	movb	%bpl, (%rax,%r13)
.LBB109_32:                             # %.sink.split
                                        #   in Loop: Header=BB109_18 Depth=1
	movq	%r14, 8(%rsp)
	addq	(%rsp), %r14
	movb	$0, (%r14)
	leaq	16(%rsp), %rdi
.LBB109_33:                             #   in Loop: Header=BB109_18 Depth=1
	movzbl	(%r15), %ebp
	incq	%r15
	movl	%r12d, %eax
	testb	%bpl, %bpl
	je	.LBB109_34
.LBB109_18:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	cmpb	$64, %bpl
	setb	%dl
	movl	$1, %esi
	movl	%ebp, %ecx
	shlq	%cl, %rsi
	andq	%rbx, %rsi
	setne	%r12b
	andb	%dl, %r12b
	cmpb	$1, %r12b
	jne	.LBB109_26
# %bb.19:                               #   in Loop: Header=BB109_18 Depth=1
	testb	$1, %al
	jne	.LBB109_33
# %bb.20:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB109_18 Depth=1
	movq	(%rsp), %rax
	movl	$15, %ecx
	cmpq	%rdi, %rax
	je	.LBB109_22
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB109_18 Depth=1
	movq	16(%rsp), %rcx
.LBB109_22:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB109_18 Depth=1
	movq	8(%rsp), %r13
	leaq	1(%r13), %r14
	cmpq	%rcx, %r14
	jbe	.LBB109_25
# %bb.23:                               #   in Loop: Header=BB109_18 Depth=1
.Ltmp1623:
	movl	$1, %r8d
	movq	%rsp, %rdi
	movq	%r13, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1624:
# %bb.24:                               # %.noexc40
                                        #   in Loop: Header=BB109_18 Depth=1
	movq	(%rsp), %rax
.LBB109_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit
                                        #   in Loop: Header=BB109_18 Depth=1
	movb	$32, (%rax,%r13)
	jmp	.LBB109_32
	.p2align	4, 0x90
.LBB109_26:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i41
                                        #   in Loop: Header=BB109_18 Depth=1
	movq	(%rsp), %rax
	movl	$15, %ecx
	cmpq	%rdi, %rax
	je	.LBB109_28
# %bb.27:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i41
                                        #   in Loop: Header=BB109_18 Depth=1
	movq	16(%rsp), %rcx
.LBB109_28:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i41
                                        #   in Loop: Header=BB109_18 Depth=1
	movq	8(%rsp), %r13
	leaq	1(%r13), %r14
	cmpq	%rcx, %r14
	jbe	.LBB109_31
# %bb.29:                               #   in Loop: Header=BB109_18 Depth=1
.Ltmp1621:
	movl	$1, %r8d
	movq	%rsp, %rdi
	movq	%r13, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1622:
# %bb.30:                               # %.noexc43
                                        #   in Loop: Header=BB109_18 Depth=1
	movq	(%rsp), %rax
	jmp	.LBB109_31
.LBB109_34:                             # %._crit_edge
	movq	(%rsp), %r15
	movq	8(%rsp), %rax
	testq	%rax, %rax
	movq	32(%rsp), %rbx                  # 8-byte Reload
	movabsq	$4294983168, %r8                # imm = 0x100003E00
	je	.LBB109_39
# %bb.35:                               # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i.preheader
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB109_36:                             # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i
                                        # =>This Inner Loop Header: Depth=1
	movzbl	(%r15,%rdx), %ecx
	movl	$1, %esi
	shlq	%cl, %rsi
	cmpb	$63, %cl
	ja	.LBB109_40
# %bb.37:                               # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i
                                        #   in Loop: Header=BB109_36 Depth=1
	andq	%r8, %rsi
	je	.LBB109_40
# %bb.38:                               #   in Loop: Header=BB109_36 Depth=1
	incq	%rdx
	cmpq	%rdx, %rax
	jne	.LBB109_36
	jmp	.LBB109_39
.LBB109_40:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcm.exit
	cmpq	$-1, %rdx
	je	.LBB109_39
# %bb.41:                               # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i54.preheader
	leaq	(%r15,%rdx), %r13
	leaq	-1(%rax), %r12
	.p2align	4, 0x90
.LBB109_42:                             # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i54
                                        # =>This Inner Loop Header: Depth=1
	movzbl	(%r15,%r12), %ecx
	movl	$1, %esi
	shlq	%cl, %rsi
	cmpb	$63, %cl
	ja	.LBB109_46
# %bb.43:                               # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i54
                                        #   in Loop: Header=BB109_42 Depth=1
	andq	%r8, %rsi
	je	.LBB109_46
# %bb.44:                               #   in Loop: Header=BB109_42 Depth=1
	addq	$-1, %r12
	jb	.LBB109_42
# %bb.45:
	movq	$-1, %r12
.LBB109_46:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcm.exit
	movq	%rax, %rcx
	subq	%rdx, %rcx
	jb	.LBB109_47
# %bb.49:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i.i
	subq	%rdx, %r12
	incq	%r12
	leaq	16(%rbx), %rbp
	movq	%rbp, (%rbx)
	cmpq	%r12, %rcx
	cmovbq	%rcx, %r12
	cmpq	$16, %r12
	jb	.LBB109_58
# %bb.50:
	testq	%r12, %r12
	js	.LBB109_51
# %bb.53:
	movq	%r12, %rdi
	incq	%rdi
	js	.LBB109_54
# %bb.56:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i
.Ltmp1626:
	callq	_Znwm@PLT
.Ltmp1627:
# %bb.57:                               # %.noexc58
	movq	%rax, %rbp
	movq	%rax, (%rbx)
	movq	%r12, 16(%rbx)
.LBB109_58:                             # %._crit_edge.i.i.i
	testq	%r12, %r12
	je	.LBB109_62
# %bb.59:                               # %._crit_edge.i.i.i
	cmpq	$1, %r12
	jne	.LBB109_61
# %bb.60:
	movzbl	(%r13), %eax
	movb	%al, (%rbp)
	jmp	.LBB109_62
.LBB109_39:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcm.exit.thread
	leaq	16(%rbx), %rbp
	movq	%rbp, (%rbx)
	movq	$0, 8(%rbx)
	movb	$0, (%rbp)
	cmpq	%rdi, %r15
	je	.LBB109_65
.LBB109_64:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	16(%rsp), %rsi
	incq	%rsi
	movq	%r15, %rdi
	callq	_ZdlPvm@PLT
	jmp	.LBB109_65
.LBB109_13:
	leaq	1(%rbx), %rdx
	callq	memcpy@PLT
.LBB109_15:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%rbx, 8(%r14)
	movq	%r14, %rbx
.LBB109_65:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB109_61:
	.cfi_def_cfa_offset 96
	movq	%rbp, %rdi
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB109_62:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit
	movq	%r12, 8(%rbx)
	addq	%r12, %rbp
	leaq	16(%rsp), %rdi
	movb	$0, (%rbp)
	cmpq	%rdi, %r15
	jne	.LBB109_64
	jmp	.LBB109_65
.LBB109_72:                             # %.noexc11.i
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB109_54:                             # %.noexc11.i.i
.Ltmp1628:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp1629:
# %bb.55:                               # %.noexc57
.LBB109_70:                             # %.noexc
	leaq	.L.str.35(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.LBB109_71:                             # %.noexc.i
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB109_47:
.Ltmp1632:
	leaq	.L.str.11(%rip), %rdi
	leaq	.L.str.108(%rip), %rsi
	movq	%rax, %rcx
	xorl	%eax, %eax
	callq	_ZSt24__throw_out_of_range_fmtPKcz@PLT
.Ltmp1633:
# %bb.48:                               # %.noexc55
.LBB109_51:                             # %.noexc10.i.i
.Ltmp1630:
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1631:
# %bb.52:                               # %.noexc56
.LBB109_66:
.Ltmp1625:
	jmp	.LBB109_67
.LBB109_73:
.Ltmp1634:
.LBB109_67:
	movq	%rax, %r14
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB109_69
# %bb.68:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i59
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB109_69:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit61
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end109:
	.size	_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc, .Lfunc_end109-_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc,"aG",@progbits,_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc,comdat
	.p2align	2, 0x0
GCC_except_table109:
.Lexception50:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end50-.Lcst_begin50
.Lcst_begin50:
	.uleb128 .Lfunc_begin50-.Lfunc_begin50  # >> Call Site 1 <<
	.uleb128 .Ltmp1623-.Lfunc_begin50       #   Call between .Lfunc_begin50 and .Ltmp1623
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1623-.Lfunc_begin50       # >> Call Site 2 <<
	.uleb128 .Ltmp1622-.Ltmp1623            #   Call between .Ltmp1623 and .Ltmp1622
	.uleb128 .Ltmp1625-.Lfunc_begin50       #     jumps to .Ltmp1625
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1626-.Lfunc_begin50       # >> Call Site 3 <<
	.uleb128 .Ltmp1627-.Ltmp1626            #   Call between .Ltmp1626 and .Ltmp1627
	.uleb128 .Ltmp1634-.Lfunc_begin50       #     jumps to .Ltmp1634
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1627-.Lfunc_begin50       # >> Call Site 4 <<
	.uleb128 .Ltmp1628-.Ltmp1627            #   Call between .Ltmp1627 and .Ltmp1628
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1628-.Lfunc_begin50       # >> Call Site 5 <<
	.uleb128 .Ltmp1629-.Ltmp1628            #   Call between .Ltmp1628 and .Ltmp1629
	.uleb128 .Ltmp1634-.Lfunc_begin50       #     jumps to .Ltmp1634
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1629-.Lfunc_begin50       # >> Call Site 6 <<
	.uleb128 .Ltmp1632-.Ltmp1629            #   Call between .Ltmp1629 and .Ltmp1632
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1632-.Lfunc_begin50       # >> Call Site 7 <<
	.uleb128 .Ltmp1631-.Ltmp1632            #   Call between .Ltmp1632 and .Ltmp1631
	.uleb128 .Ltmp1634-.Lfunc_begin50       #     jumps to .Ltmp1634
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1631-.Lfunc_begin50       # >> Call Site 8 <<
	.uleb128 .Lfunc_end109-.Ltmp1631        #   Call between .Ltmp1631 and .Lfunc_end109
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end50:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail13get_type_infoERKSt10type_indexb,"axG",@progbits,_ZN8pybind116detail13get_type_infoERKSt10type_indexb,comdat
	.hidden	_ZN8pybind116detail13get_type_infoERKSt10type_indexb # -- Begin function _ZN8pybind116detail13get_type_infoERKSt10type_indexb
	.weak	_ZN8pybind116detail13get_type_infoERKSt10type_indexb
	.p2align	4, 0x90
	.type	_ZN8pybind116detail13get_type_infoERKSt10type_indexb,@function
_ZN8pybind116detail13get_type_infoERKSt10type_indexb: # @_ZN8pybind116detail13get_type_infoERKSt10type_indexb
.Lfunc_begin51:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception51
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$104, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -24
	.cfi_offset %rbp, -16
	movl	%esi, %ebp
	movq	%rdi, %rbx
	movzbl	_ZGVZN8pybind116detail19get_local_internalsEvE6locals(%rip), %eax
	testb	%al, %al
	je	.LBB110_8
.LBB110_1:                              # %_ZN8pybind116detail19get_local_internalsEv.exit.i
	movq	_ZZN8pybind116detail19get_local_internalsEvE6locals(%rip), %rdi
	movq	%rbx, %rsi
	callq	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_
	testq	%rax, %rax
	je	.LBB110_3
# %bb.2:                                # %_ZN8pybind116detail19get_local_type_infoERKSt10type_index.exit
	movq	16(%rax), %rax
	testq	%rax, %rax
	jne	.LBB110_7
.LBB110_3:                              # %_ZN8pybind116detail19get_local_type_infoERKSt10type_index.exit.thread
	callq	_ZN8pybind116detail13get_internalsEv
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_
	testq	%rax, %rax
	je	.LBB110_5
# %bb.4:
	movq	16(%rax), %rax
	jmp	.LBB110_6
.LBB110_5:
	xorl	%eax, %eax
.LBB110_6:                              # %_ZN8pybind116detail20get_global_type_infoERKSt10type_index.exit
	testq	%rax, %rax
	setne	%cl
	xorb	$1, %bpl
	orb	%cl, %bpl
	je	.LBB110_11
.LBB110_7:
	addq	$104, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB110_8:
	.cfi_def_cfa_offset 128
	leaq	_ZGVZN8pybind116detail19get_local_internalsEvE6locals(%rip), %rdi
	callq	__cxa_guard_acquire@PLT
	testl	%eax, %eax
	je	.LBB110_1
# %bb.9:
.Ltmp1635:
	movl	$64, %edi
	callq	_Znwm@PLT
.Ltmp1636:
# %bb.10:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 32(%rax)
	movq	%rax, %rcx
	addq	$48, %rcx
	movq	%rcx, (%rax)
	movq	$1, 8(%rax)
	movups	%xmm0, 16(%rax)
	movl	$1065353216, 32(%rax)           # imm = 0x3F800000
	movups	%xmm0, 40(%rax)
	movq	$0, 56(%rax)
	movq	%rax, _ZZN8pybind116detail19get_local_internalsEvE6locals(%rip)
	leaq	_ZGVZN8pybind116detail19get_local_internalsEvE6locals(%rip), %rdi
	callq	__cxa_guard_release@PLT
	jmp	.LBB110_1
.LBB110_11:
	movq	(%rbx), %rax
	movq	8(%rax), %rax
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
.Ltmp1638:
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_@PLT
.Ltmp1639:
# %bb.12:
.Ltmp1641:
	leaq	40(%rsp), %rdi
	callq	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1642:
# %bb.13:
.Ltmp1644:
	leaq	.L.str.110(%rip), %rsi
	leaq	72(%rsp), %rdi
	leaq	40(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp1645:
# %bb.14:
.Ltmp1647:
	leaq	8(%rsp), %rdi
	leaq	72(%rsp), %rsi
	movl	$34, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_@PLT
.Ltmp1648:
# %bb.15:
.Ltmp1650:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1651:
# %bb.16:
.LBB110_17:
.Ltmp1637:
	movq	%rax, %rbx
	leaq	_ZGVZN8pybind116detail19get_local_internalsEvE6locals(%rip), %rdi
	callq	__cxa_guard_abort@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB110_18:
.Ltmp1652:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB110_22
# %bb.19:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB110_24
.LBB110_20:
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB110_28
.LBB110_21:                             # %common.resume
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB110_22:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB110_20
	jmp	.LBB110_24
.LBB110_23:
.Ltmp1649:
	movq	%rax, %rbx
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB110_20
.LBB110_24:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i30
	movq	88(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB110_21
	jmp	.LBB110_28
.LBB110_25:
.Ltmp1646:
	jmp	.LBB110_27
.LBB110_26:
.Ltmp1643:
.LBB110_27:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB110_21
.LBB110_28:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i33
	movq	56(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB110_29:
.Ltmp1640:
	movq	%rax, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end110:
	.size	_ZN8pybind116detail13get_type_infoERKSt10type_indexb, .Lfunc_end110-_ZN8pybind116detail13get_type_infoERKSt10type_indexb
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail13get_type_infoERKSt10type_indexb,"aG",@progbits,_ZN8pybind116detail13get_type_infoERKSt10type_indexb,comdat
	.p2align	2, 0x0
GCC_except_table110:
.Lexception51:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end51-.Lcst_begin51
.Lcst_begin51:
	.uleb128 .Lfunc_begin51-.Lfunc_begin51  # >> Call Site 1 <<
	.uleb128 .Ltmp1635-.Lfunc_begin51       #   Call between .Lfunc_begin51 and .Ltmp1635
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1635-.Lfunc_begin51       # >> Call Site 2 <<
	.uleb128 .Ltmp1636-.Ltmp1635            #   Call between .Ltmp1635 and .Ltmp1636
	.uleb128 .Ltmp1637-.Lfunc_begin51       #     jumps to .Ltmp1637
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1638-.Lfunc_begin51       # >> Call Site 3 <<
	.uleb128 .Ltmp1639-.Ltmp1638            #   Call between .Ltmp1638 and .Ltmp1639
	.uleb128 .Ltmp1640-.Lfunc_begin51       #     jumps to .Ltmp1640
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1641-.Lfunc_begin51       # >> Call Site 4 <<
	.uleb128 .Ltmp1642-.Ltmp1641            #   Call between .Ltmp1641 and .Ltmp1642
	.uleb128 .Ltmp1643-.Lfunc_begin51       #     jumps to .Ltmp1643
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1644-.Lfunc_begin51       # >> Call Site 5 <<
	.uleb128 .Ltmp1645-.Ltmp1644            #   Call between .Ltmp1644 and .Ltmp1645
	.uleb128 .Ltmp1646-.Lfunc_begin51       #     jumps to .Ltmp1646
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1647-.Lfunc_begin51       # >> Call Site 6 <<
	.uleb128 .Ltmp1648-.Ltmp1647            #   Call between .Ltmp1647 and .Ltmp1648
	.uleb128 .Ltmp1649-.Lfunc_begin51       #     jumps to .Ltmp1649
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1650-.Lfunc_begin51       # >> Call Site 7 <<
	.uleb128 .Ltmp1651-.Ltmp1650            #   Call between .Ltmp1650 and .Ltmp1651
	.uleb128 .Ltmp1652-.Lfunc_begin51       #     jumps to .Ltmp1652
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1651-.Lfunc_begin51       # >> Call Site 8 <<
	.uleb128 .Lfunc_end110-.Ltmp1651        #   Call between .Ltmp1651 and .Lfunc_end110
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end51:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8pybind117capsule11get_pointerINS_6detail15function_recordEEEPT_v,"axG",@progbits,_ZNK8pybind117capsule11get_pointerINS_6detail15function_recordEEEPT_v,comdat
	.hidden	_ZNK8pybind117capsule11get_pointerINS_6detail15function_recordEEEPT_v # -- Begin function _ZNK8pybind117capsule11get_pointerINS_6detail15function_recordEEEPT_v
	.weak	_ZNK8pybind117capsule11get_pointerINS_6detail15function_recordEEEPT_v
	.p2align	4, 0x90
	.type	_ZNK8pybind117capsule11get_pointerINS_6detail15function_recordEEEPT_v,@function
_ZNK8pybind117capsule11get_pointerINS_6detail15function_recordEEEPT_v: # @_ZNK8pybind117capsule11get_pointerINS_6detail15function_recordEEEPT_v
.Lfunc_begin52:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception52
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	movq	(%rdi), %rdi
	callq	PyCapsule_GetName@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	jne	.LBB111_6
# %bb.1:
	callq	PyErr_Occurred@PLT
	testq	%rax, %rax
	jne	.LBB111_2
.LBB111_6:                              # %_ZNK8pybind117capsule4nameEv.exit
	movq	(%rbx), %rdi
	movq	%r14, %rsi
	callq	PyCapsule_GetPointer@PLT
	testq	%rax, %rax
	je	.LBB111_7
# %bb.9:
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB111_7:
	.cfi_def_cfa_offset 32
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp1656:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1657:
	jmp	.LBB111_3
.LBB111_2:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp1653:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1654:
.LBB111_3:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.LBB111_4:
.Ltmp1655:
	jmp	.LBB111_5
.LBB111_8:
.Ltmp1658:
.LBB111_5:                              # %common.resume
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end111:
	.size	_ZNK8pybind117capsule11get_pointerINS_6detail15function_recordEEEPT_v, .Lfunc_end111-_ZNK8pybind117capsule11get_pointerINS_6detail15function_recordEEEPT_v
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind117capsule11get_pointerINS_6detail15function_recordEEEPT_v,"aG",@progbits,_ZNK8pybind117capsule11get_pointerINS_6detail15function_recordEEEPT_v,comdat
	.p2align	2, 0x0
GCC_except_table111:
.Lexception52:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end52-.Lcst_begin52
.Lcst_begin52:
	.uleb128 .Lfunc_begin52-.Lfunc_begin52  # >> Call Site 1 <<
	.uleb128 .Ltmp1656-.Lfunc_begin52       #   Call between .Lfunc_begin52 and .Ltmp1656
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1656-.Lfunc_begin52       # >> Call Site 2 <<
	.uleb128 .Ltmp1657-.Ltmp1656            #   Call between .Ltmp1656 and .Ltmp1657
	.uleb128 .Ltmp1658-.Lfunc_begin52       #     jumps to .Ltmp1658
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1657-.Lfunc_begin52       # >> Call Site 3 <<
	.uleb128 .Ltmp1653-.Ltmp1657            #   Call between .Ltmp1657 and .Ltmp1653
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1653-.Lfunc_begin52       # >> Call Site 4 <<
	.uleb128 .Ltmp1654-.Ltmp1653            #   Call between .Ltmp1653 and .Ltmp1654
	.uleb128 .Ltmp1655-.Lfunc_begin52       #     jumps to .Ltmp1655
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1654-.Lfunc_begin52       # >> Call Site 5 <<
	.uleb128 .Lfunc_end111-.Ltmp1654        #   Call between .Ltmp1654 and .Lfunc_end111
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end52:
	.p2align	2, 0x0
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function _ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_
.LCPI112_0:
	.zero	16
	.section	.text._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_,"axG",@progbits,_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_,comdat
	.hidden	_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_
	.weak	_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_
	.p2align	4, 0x90
	.type	_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_,@function
_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_: # @_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_
.Lfunc_begin53:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception53
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$488, %rsp                      # imm = 0x1E8
	.cfi_def_cfa_offset 544
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	testq	%rdi, %rdi
	je	.LBB112_709
# %bb.1:                                # %_ZN8pybind1110isinstanceINS_7capsuleETnNSt9enable_ifIXsr3std10is_base_ofINS_6objectET_EE5valueEiE4typeELi0EEEbNS_6handleE.exit
	movq	%rdi, %rbx
	movq	8(%rdi), %rax
	cmpq	PyCapsule_Type@GOTPCREL(%rip), %rax
	jne	.LBB112_709
# %bb.2:
	movq	%rdx, %r15
	movq	%rsi, %r13
	callq	_ZN8pybind116detail13get_internalsEv
	movq	456(%rax), %rsi
	movq	%rbx, %rdi
	callq	PyCapsule_GetPointer@PLT
	movq	%rax, 288(%rsp)                 # 8-byte Spill
	testq	%rax, %rax
	je	.LBB112_714
# %bb.3:
	movq	8(%r13), %rax
	testb	$4, 171(%rax)
	je	.LBB112_715
# %bb.4:
	cmpq	PyLong_Type@GOTPCREL(%rip), %rax
	je	.LBB112_716
# %bb.5:
	cmpq	PyBool_Type@GOTPCREL(%rip), %rax
	je	.LBB112_717
# %bb.6:                                # %_ZL16PyTuple_GET_SIZEP7_object.exit
	movq	16(%r13), %rax
	movq	%rax, 400(%rsp)                 # 8-byte Spill
	testq	%rax, %rax
	je	.LBB112_14
# %bb.7:
	movq	24(%r13), %rdx
	movq	288(%rsp), %rcx                 # 8-byte Reload
	movq	%rcx, %rax
	addq	$89, %rax
	movq	%rax, 344(%rsp)                 # 8-byte Spill
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 432(%rsp)
	movaps	%xmm0, 416(%rsp)
	testb	$1, 89(%rcx)
	je	.LBB112_16
# %bb.8:
	testq	%rdx, %rdx
	je	.LBB112_15
# %bb.9:
	movq	288(%rsp), %rax                 # 8-byte Reload
	movq	112(%rax), %rsi
	movq	%rdx, 368(%rsp)                 # 8-byte Spill
	movq	8(%rdx), %rdi
	cmpq	%rsi, %rdi
	je	.LBB112_12
# %bb.10:                               # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit
	callq	PyType_IsSubtype@PLT
	testl	%eax, %eax
	je	.LBB112_15
# %bb.11:                               # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit._ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.thread_crit_edge
	movq	288(%rsp), %rax                 # 8-byte Reload
	movq	112(%rax), %rsi
.LBB112_12:                             # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.thread
	movq	%rsi, %rdi
	callq	_ZN8pybind116detail13get_type_infoEP11_typeobject
	leaq	24(%rsp), %rdi
	movq	368(%rsp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	movl	$1, %ecx
	callq	_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb
	movups	24(%rsp), %xmm0
	movups	40(%rsp), %xmm1
	movaps	%xmm1, 432(%rsp)
	movaps	%xmm0, 416(%rsp)
	movq	416(%rsp), %rcx
	movzbl	48(%rcx), %eax
	testb	$2, %al
	jne	.LBB112_364
# %bb.13:
	movq	24(%rcx), %rax
	movq	424(%rsp), %rcx
	movzbl	(%rax,%rcx), %eax
	andb	$2, %al
	testb	%al, %al
	jne	.LBB112_365
	jmp	.LBB112_18
.LBB112_14:                             # %.thread
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 432(%rsp)
	movaps	%xmm0, 416(%rsp)
	movq	288(%rsp), %rax                 # 8-byte Reload
	testb	$1, 89(%rax)
	je	.LBB112_17
.LBB112_15:                             # %.thread1050
	movq	PyExc_TypeError@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
	leaq	.L.str.121(%rip), %rsi
	callq	PyErr_SetString@PLT
	jmp	.LBB112_679
.LBB112_16:
	movq	%rdx, 368(%rsp)                 # 8-byte Spill
	jmp	.LBB112_18
.LBB112_17:
	movq	288(%rsp), %rax                 # 8-byte Reload
	addq	$89, %rax
	movq	%rax, 344(%rsp)                 # 8-byte Spill
	movq	$0, 368(%rsp)                   # 8-byte Folded Spill
.LBB112_18:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 192(%rsp)
	movq	$0, 208(%rsp)
	movq	288(%rsp), %r12                 # 8-byte Reload
	movq	128(%r12), %rcx
	movq	%rcx, 448(%rsp)                 # 8-byte Spill
	leaq	56(%rsp), %rbx
	leaq	24(%r13), %rcx
	movq	%rcx, 464(%rsp)                 # 8-byte Spill
	movl	$1, %ecx
	movq	%rcx, 352(%rsp)                 # 8-byte Spill
	movq	%r15, 296(%rsp)                 # 8-byte Spill
	movq	%r13, 184(%rsp)                 # 8-byte Spill
	jmp	.LBB112_21
	.p2align	4, 0x90
.LBB112_19:                             #   in Loop: Header=BB112_21 Depth=1
	cmpl	$2, %ebx
	leaq	56(%rsp), %rbx
	je	.LBB112_313
.LBB112_20:                             # %.thread1075
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	128(%r12), %r12
	testq	%r12, %r12
	je	.LBB112_312
.LBB112_21:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB112_41 Depth 2
                                        #     Child Loop BB112_43 Depth 2
                                        #     Child Loop BB112_56 Depth 2
                                        #       Child Loop BB112_88 Depth 3
                                        #       Child Loop BB112_90 Depth 3
                                        #     Child Loop BB112_99 Depth 2
                                        #       Child Loop BB112_109 Depth 3
                                        #       Child Loop BB112_111 Depth 3
                                        #     Child Loop BB112_132 Depth 2
                                        #       Child Loop BB112_161 Depth 3
                                        #       Child Loop BB112_163 Depth 3
                                        #       Child Loop BB112_180 Depth 3
                                        #       Child Loop BB112_182 Depth 3
                                        #     Child Loop BB112_209 Depth 2
                                        #     Child Loop BB112_237 Depth 2
                                        #     Child Loop BB112_239 Depth 2
                                        #     Child Loop BB112_269 Depth 2
                                        #     Child Loop BB112_271 Depth 2
                                        #     Child Loop BB112_293 Depth 2
	movzwl	89(%r12), %eax
	movl	%eax, 376(%rsp)                 # 4-byte Spill
                                        # kill: def $eax killed $eax def $rax
	andl	$64, %eax
	movq	%rax, 392(%rsp)                 # 8-byte Spill
	sete	%al
	movzwl	94(%r12), %r14d
	movq	400(%rsp), %rdx                 # 8-byte Reload
	cmpq	%r14, %rdx
	seta	%cl
	testb	%cl, %al
	jne	.LBB112_20
# %bb.22:                               #   in Loop: Header=BB112_21 Depth=1
	movzwl	92(%r12), %eax
	movq	%rax, 472(%rsp)                 # 8-byte Spill
	cmpq	%r14, %rdx
	jae	.LBB112_24
# %bb.23:                               #   in Loop: Header=BB112_21 Depth=1
	movq	32(%r12), %rax
	subq	24(%r12), %rax
	sarq	$5, %rax
	cmpq	%r14, %rax
	jb	.LBB112_20
.LBB112_24:                             #   in Loop: Header=BB112_21 Depth=1
.Ltmp1662:
	leaq	24(%rsp), %rdi
	movq	%r12, %rsi
	movq	368(%rsp), %rdx                 # 8-byte Reload
	callq	_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE
.Ltmp1663:
# %bb.25:                               #   in Loop: Header=BB112_21 Depth=1
	movq	400(%rsp), %rax                 # 8-byte Reload
	cmpq	%r14, %rax
	movq	%r14, %rcx
	cmovbq	%rax, %rcx
	movq	%rcx, 408(%rsp)                 # 8-byte Spill
	testb	$2, 89(%r12)
	movq	%r12, 176(%rsp)                 # 8-byte Spill
	movq	%r14, 16(%rsp)                  # 8-byte Spill
	jne	.LBB112_27
# %bb.26:                               #   in Loop: Header=BB112_21 Depth=1
	xorl	%ebp, %ebp
	jmp	.LBB112_52
.LBB112_27:                             #   in Loop: Header=BB112_21 Depth=1
	movq	440(%rsp), %rax
	cmpq	$0, (%rax)
	je	.LBB112_29
# %bb.28:                               #   in Loop: Header=BB112_21 Depth=1
	movq	432(%rsp), %rax
.Ltmp1665:
	leaq	416(%rsp), %rdi
	callq	*56(%rax)
.Ltmp1666:
.LBB112_29:                             #   in Loop: Header=BB112_21 Depth=1
	movq	8(%r13), %rax
	testb	$4, 171(%rax)
	je	.LBB112_706
# %bb.30:                               #   in Loop: Header=BB112_21 Depth=1
	movq	24(%r13), %rax
	movq	%rax, 120(%rsp)
	movq	40(%rsp), %r14
	cmpq	48(%rsp), %r14
	je	.LBB112_32
# %bb.31:                               #   in Loop: Header=BB112_21 Depth=1
	leaq	416(%rsp), %rax
	movq	%rax, (%r14)
	addq	$8, %r14
	movq	%r14, 40(%rsp)
	jmp	.LBB112_47
.LBB112_32:                             #   in Loop: Header=BB112_21 Depth=1
	movq	32(%rsp), %r15
	movq	%r14, %r12
	subq	%r15, %r12
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %r12
	je	.LBB112_718
# %bb.33:                               # %_ZNKSt6vectorIN8pybind116handleESaIS1_EE12_M_check_lenEmPKc.exit.i
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	%r12, %rbp
	sarq	$3, %rbp
	cmpq	$1, %rbp
	movq	%rbp, %rax
	adcq	$0, %rax
	leaq	(%rax,%rbp), %r13
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rcx, %r13
	cmovaeq	%rcx, %r13
	addq	%rbp, %rax
	cmovbq	%rcx, %r13
	testq	%r13, %r13
	je	.LBB112_36
# %bb.34:                               #   in Loop: Header=BB112_21 Depth=1
	leaq	(,%r13,8), %rdi
.Ltmp1667:
	callq	_Znwm@PLT
.Ltmp1668:
# %bb.35:                               #   in Loop: Header=BB112_21 Depth=1
	movq	%rax, %rbx
	jmp	.LBB112_37
.LBB112_36:                             #   in Loop: Header=BB112_21 Depth=1
	xorl	%ebx, %ebx
.LBB112_37:                             # %.noexc871
                                        #   in Loop: Header=BB112_21 Depth=1
	leaq	416(%rsp), %rax
	movq	%rax, (%rbx,%rbp,8)
	movq	%rbx, %rbp
	cmpq	%r14, %r15
	je	.LBB112_44
# %bb.38:                               # %.lr.ph.i.i.i.i.preheader
                                        #   in Loop: Header=BB112_21 Depth=1
	leaq	-8(%r12), %rcx
	movq	%rbx, %rbp
	movq	%r15, %rax
	cmpq	$24, %rcx
	jb	.LBB112_43
# %bb.39:                               # %.lr.ph.i.i.i.i.preheader
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	%rbx, %rdx
	subq	%r15, %rdx
	movq	%rbx, %rbp
	movq	%r15, %rax
	cmpq	$32, %rdx
	jb	.LBB112_43
# %bb.40:                               # %vector.ph1825
                                        #   in Loop: Header=BB112_21 Depth=1
	shrq	$3, %rcx
	incq	%rcx
	movq	%rcx, %rdx
	movabsq	$4611686018427387900, %rax      # imm = 0x3FFFFFFFFFFFFFFC
	andq	%rax, %rdx
	leaq	(%rbx,%rdx,8), %rbp
	leaq	(%r15,%rdx,8), %rax
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB112_41:                             # %vector.body1832
                                        #   Parent Loop BB112_21 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movups	(%r15,%rsi,8), %xmm0
	movups	16(%r15,%rsi,8), %xmm1
	movups	%xmm0, (%rbx,%rsi,8)
	movups	%xmm1, 16(%rbx,%rsi,8)
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB112_41
# %bb.42:                               # %middle.block1822
                                        #   in Loop: Header=BB112_21 Depth=1
	cmpq	%rdx, %rcx
	je	.LBB112_44
	.p2align	4, 0x90
.LBB112_43:                             # %.lr.ph.i.i.i.i
                                        #   Parent Loop BB112_21 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	(%rax), %rcx
	movq	%rcx, (%rbp)
	addq	$8, %rax
	addq	$8, %rbp
	cmpq	%r14, %rax
	jne	.LBB112_43
.LBB112_44:                             # %_ZNSt6vectorIN8pybind116handleESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit32.i
                                        #   in Loop: Header=BB112_21 Depth=1
	testq	%r15, %r15
	je	.LBB112_46
# %bb.45:                               #   in Loop: Header=BB112_21 Depth=1
	movq	%r15, %rdi
	movq	%r12, %rsi
	callq	_ZdlPvm@PLT
.LBB112_46:                             # %.noexc
                                        #   in Loop: Header=BB112_21 Depth=1
	addq	$8, %rbp
	movq	%rbx, 32(%rsp)
	movq	%rbp, 40(%rsp)
	leaq	(%rbx,%r13,8), %rax
	movq	%rax, 48(%rsp)
	movq	296(%rsp), %r15                 # 8-byte Reload
	movq	184(%rsp), %r13                 # 8-byte Reload
	movq	176(%rsp), %r12                 # 8-byte Reload
	leaq	56(%rsp), %rbx
.LBB112_47:                             # %_ZNSt6vectorIN8pybind116handleESaIS1_EE12emplace_backIJP7_objectEEERS1_DpOT_.exit
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	16(%rsp), %r14                  # 8-byte Reload
	movq	72(%rsp), %rsi
	movl	80(%rsp), %ecx
	cmpq	88(%rsp), %rsi
	je	.LBB112_51
# %bb.48:                               #   in Loop: Header=BB112_21 Depth=1
	leal	1(%rcx), %eax
	movl	%eax, 80(%rsp)
	cmpq	$63, %rcx
	jne	.LBB112_50
# %bb.49:                               #   in Loop: Header=BB112_21 Depth=1
	movl	$0, 80(%rsp)
	leaq	8(%rsi), %rax
	movq	%rax, 72(%rsp)
.LBB112_50:                             # %_ZNSt13_Bit_iteratorppEi.exit.i
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	$-2, %rax
                                        # kill: def $cl killed $cl killed $rcx
	rolq	%cl, %rax
	andq	%rax, (%rsi)
	movl	$1, %ebp
	jmp	.LBB112_52
.LBB112_51:                             #   in Loop: Header=BB112_21 Depth=1
	movl	$1, %ebp
.Ltmp1670:
	movq	%rbx, %rdi
	movl	%ecx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb@PLT
.Ltmp1671:
	.p2align	4, 0x90
.LBB112_52:                             # %_ZNSt6vectorIbSaIbEE9push_backEb.exit
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	%rbp, (%rsp)                    # 8-byte Spill
	cmpq	408(%rsp), %rbp                 # 8-byte Folded Reload
	jae	.LBB112_95
# %bb.53:                               # %.lr.ph
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	(%rsp), %rdx                    # 8-byte Reload
	jmp	.LBB112_56
	.p2align	4, 0x90
.LBB112_54:                             #   in Loop: Header=BB112_56 Depth=2
.Ltmp1681:
	movzbl	%al, %eax
	andl	$1, %eax
	movl	%ecx, %edx
	movl	%eax, %ecx
	callq	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb@PLT
.Ltmp1682:
.LBB112_55:                             #   in Loop: Header=BB112_56 Depth=2
	movq	(%rsp), %rdx                    # 8-byte Reload
	incq	%rdx
	cmpq	408(%rsp), %rdx                 # 8-byte Folded Reload
	movq	296(%rsp), %r15                 # 8-byte Reload
	movq	184(%rsp), %r13                 # 8-byte Reload
	movq	176(%rsp), %r12                 # 8-byte Reload
	movq	16(%rsp), %r14                  # 8-byte Reload
	je	.LBB112_94
.LBB112_56:                             #   Parent Loop BB112_21 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB112_88 Depth 3
                                        #       Child Loop BB112_90 Depth 3
	movq	24(%r12), %rax
	movq	32(%r12), %rcx
	subq	%rax, %rcx
	sarq	$5, %rcx
	cmpq	%rcx, %rdx
	movq	%rdx, %r14
	movq	%rdx, (%rsp)                    # 8-byte Spill
	jae	.LBB112_74
# %bb.57:                               #   in Loop: Header=BB112_56 Depth=2
	movq	%r14, %rbp
	shlq	$5, %rbp
	addq	%rax, %rbp
	testq	%rax, %rax
	setne	%bl
	testq	%r15, %r15
	je	.LBB112_62
# %bb.58:                               #   in Loop: Header=BB112_56 Depth=2
	testq	%rax, %rax
	je	.LBB112_62
# %bb.59:                               #   in Loop: Header=BB112_56 Depth=2
	movq	(%rbp), %rsi
	movb	$1, %bl
	testq	%rsi, %rsi
	je	.LBB112_62
# %bb.60:                               #   in Loop: Header=BB112_56 Depth=2
.Ltmp1676:
	movq	%r15, %rdi
	callq	_ZN8pybind116detail18dict_getitemstringEP7_objectPKc
.Ltmp1677:
# %bb.61:                               #   in Loop: Header=BB112_56 Depth=2
	testq	%rax, %rax
	jne	.LBB112_221
.LBB112_62:                             # %.thread1054
                                        #   in Loop: Header=BB112_56 Depth=2
	movq	8(%r13), %rax
	testb	$4, 171(%rax)
	je	.LBB112_683
# %bb.63:                               #   in Loop: Header=BB112_56 Depth=2
	movq	24(%r13,%r14,8), %r14
	testb	%bl, %bl
	je	.LBB112_78
# %bb.64:                               #   in Loop: Header=BB112_56 Depth=2
	testb	$2, 24(%rbp)
	movb	$1, %cl
	leaq	56(%rsp), %rdi
	jne	.LBB112_66
# %bb.65:                               #   in Loop: Header=BB112_56 Depth=2
	cmpq	_Py_NoneStruct@GOTPCREL(%rip), %r14
	je	.LBB112_221
	.p2align	4, 0x90
.LBB112_66:                             #   in Loop: Header=BB112_56 Depth=2
	movq	40(%rsp), %r12
	cmpq	48(%rsp), %r12
	je	.LBB112_80
.LBB112_67:                             #   in Loop: Header=BB112_56 Depth=2
	movq	%r14, (%r12)
	addq	$8, 40(%rsp)
	movb	$1, %al
	testb	%cl, %cl
	je	.LBB112_69
.LBB112_68:                             #   in Loop: Header=BB112_56 Depth=2
	movzbl	24(%rbp), %eax
.LBB112_69:                             #   in Loop: Header=BB112_56 Depth=2
	movq	72(%rsp), %rsi
	movl	80(%rsp), %ecx
	cmpq	88(%rsp), %rsi
	je	.LBB112_54
# %bb.70:                               #   in Loop: Header=BB112_56 Depth=2
	leal	1(%rcx), %edx
	movl	%edx, 80(%rsp)
	cmpq	$63, %rcx
	jne	.LBB112_72
# %bb.71:                               #   in Loop: Header=BB112_56 Depth=2
	movl	$0, 80(%rsp)
	leaq	8(%rsi), %rdx
	movq	%rdx, 72(%rsp)
.LBB112_72:                             # %_ZNSt13_Bit_iteratorppEi.exit.i419
                                        #   in Loop: Header=BB112_56 Depth=2
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	testb	$1, %al
	je	.LBB112_76
# %bb.73:                               #   in Loop: Header=BB112_56 Depth=2
	orq	(%rsi), %rdx
	jmp	.LBB112_77
	.p2align	4, 0x90
.LBB112_74:                             # %.thread1054.thread
                                        #   in Loop: Header=BB112_56 Depth=2
	movq	8(%r13), %rax
	testb	$4, 171(%rax)
	je	.LBB112_683
# %bb.75:                               # %.thread1556
                                        #   in Loop: Header=BB112_56 Depth=2
	movq	24(%r13,%r14,8), %r14
	xorl	%ecx, %ecx
	xorl	%ebp, %ebp
	leaq	56(%rsp), %rdi
	movq	40(%rsp), %r12
	cmpq	48(%rsp), %r12
	jne	.LBB112_67
	jmp	.LBB112_80
	.p2align	4, 0x90
.LBB112_76:                             #   in Loop: Header=BB112_56 Depth=2
	notq	%rdx
	andq	(%rsi), %rdx
.LBB112_77:                             # %.sink.split
                                        #   in Loop: Header=BB112_56 Depth=2
	movq	%rdx, (%rsi)
	jmp	.LBB112_55
	.p2align	4, 0x90
.LBB112_78:                             #   in Loop: Header=BB112_56 Depth=2
	xorl	%ecx, %ecx
	leaq	56(%rsp), %rdi
	movq	40(%rsp), %r12
	cmpq	48(%rsp), %r12
	jne	.LBB112_67
.LBB112_80:                             #   in Loop: Header=BB112_56 Depth=2
	movq	%rbp, 304(%rsp)                 # 8-byte Spill
	movq	32(%rsp), %r15
	movq	%r12, %rbp
	subq	%r15, %rbp
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %rbp
	je	.LBB112_686
# %bb.81:                               # %_ZNKSt6vectorIN8pybind116handleESaIS1_EE12_M_check_lenEmPKc.exit.i872
                                        #   in Loop: Header=BB112_56 Depth=2
	movq	%rcx, 360(%rsp)                 # 8-byte Spill
	movq	%rbp, %r13
	sarq	$3, %r13
	cmpq	$1, %r13
	movq	%r13, %rax
	adcq	$0, %rax
	leaq	(%rax,%r13), %rdx
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rcx, %rdx
	cmovaeq	%rcx, %rdx
	addq	%r13, %rax
	cmovbq	%rcx, %rdx
	testq	%rdx, %rdx
	movq	%rdx, 384(%rsp)                 # 8-byte Spill
	je	.LBB112_84
# %bb.82:                               #   in Loop: Header=BB112_56 Depth=2
	leaq	(,%rdx,8), %rdi
.Ltmp1679:
	callq	_Znwm@PLT
.Ltmp1680:
# %bb.83:                               #   in Loop: Header=BB112_56 Depth=2
	movq	%rax, %rbx
	movq	%r14, (%rbx,%r13,8)
	movq	%rbx, %r14
	cmpq	%r12, %r15
	jne	.LBB112_85
	jmp	.LBB112_91
.LBB112_84:                             #   in Loop: Header=BB112_56 Depth=2
	xorl	%ebx, %ebx
	movq	%r14, (%rbx,%r13,8)
	movq	%rbx, %r14
	cmpq	%r12, %r15
	je	.LBB112_91
.LBB112_85:                             # %.lr.ph.i.i.i.i876.preheader
                                        #   in Loop: Header=BB112_56 Depth=2
	leaq	-8(%rbp), %rcx
	movq	%rbx, %r14
	movq	%r15, %rax
	cmpq	$24, %rcx
	jb	.LBB112_90
# %bb.86:                               # %.lr.ph.i.i.i.i876.preheader
                                        #   in Loop: Header=BB112_56 Depth=2
	movq	%rbx, %rdx
	subq	%r15, %rdx
	movq	%rbx, %r14
	movq	%r15, %rax
	cmpq	$32, %rdx
	jb	.LBB112_90
# %bb.87:                               # %vector.ph1801
                                        #   in Loop: Header=BB112_56 Depth=2
	shrq	$3, %rcx
	incq	%rcx
	movq	%rcx, %rdx
	movabsq	$4611686018427387900, %rax      # imm = 0x3FFFFFFFFFFFFFFC
	andq	%rax, %rdx
	leaq	(%rbx,%rdx,8), %r14
	leaq	(%r15,%rdx,8), %rax
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB112_88:                             # %vector.body1808
                                        #   Parent Loop BB112_21 Depth=1
                                        #     Parent Loop BB112_56 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movups	(%r15,%rsi,8), %xmm0
	movups	16(%r15,%rsi,8), %xmm1
	movups	%xmm0, (%rbx,%rsi,8)
	movups	%xmm1, 16(%rbx,%rsi,8)
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB112_88
# %bb.89:                               # %middle.block1798
                                        #   in Loop: Header=BB112_56 Depth=2
	cmpq	%rdx, %rcx
	je	.LBB112_91
	.p2align	4, 0x90
.LBB112_90:                             # %.lr.ph.i.i.i.i876
                                        #   Parent Loop BB112_21 Depth=1
                                        #     Parent Loop BB112_56 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	(%rax), %rcx
	movq	%rcx, (%r14)
	addq	$8, %rax
	addq	$8, %r14
	cmpq	%r12, %rax
	jne	.LBB112_90
.LBB112_91:                             # %_ZNSt6vectorIN8pybind116handleESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit22.i
                                        #   in Loop: Header=BB112_56 Depth=2
	testq	%r15, %r15
	je	.LBB112_93
# %bb.92:                               #   in Loop: Header=BB112_56 Depth=2
	movq	%r15, %rdi
	movq	%rbp, %rsi
	callq	_ZdlPvm@PLT
.LBB112_93:                             # %.noexc415
                                        #   in Loop: Header=BB112_56 Depth=2
	addq	$8, %r14
	movq	%rbx, 32(%rsp)
	movq	%r14, 40(%rsp)
	movq	384(%rsp), %rax                 # 8-byte Reload
	leaq	(%rbx,%rax,8), %rax
	movq	%rax, 48(%rsp)
	leaq	56(%rsp), %rdi
	movq	304(%rsp), %rbp                 # 8-byte Reload
	movq	360(%rsp), %rcx                 # 8-byte Reload
	movb	$1, %al
	testb	%cl, %cl
	jne	.LBB112_68
	jmp	.LBB112_69
.LBB112_94:                             #   in Loop: Header=BB112_21 Depth=1
	movq	408(%rsp), %rax                 # 8-byte Reload
	movq	%rax, (%rsp)                    # 8-byte Spill
.LBB112_95:                             # %_ZNSt6vectorIbSaIbEE9push_backEb.exit421
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	%r15, 312(%rsp)
.Ltmp1684:
	leaq	312(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1685:
# %bb.96:                               # %_ZN8pybind1118reinterpret_borrowINS_4dictEEET_NS_6handleE.exit
                                        #   in Loop: Header=BB112_21 Depth=1
	movzwl	96(%r12), %eax
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	%rcx, %rbp
	cmpq	%rax, %rcx
	jae	.LBB112_128
# %bb.97:                               # %.lr.ph1462
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	24(%r12), %rsi
	movq	(%rsp), %rdx                    # 8-byte Reload
	movq	%rdx, %rcx
	shlq	$5, %rcx
	movq	16(%rsi,%rcx), %rbx
	testq	%rbx, %rbx
	je	.LBB112_125
# %bb.98:                               #   in Loop: Header=BB112_21 Depth=1
	addq	%rcx, %rsi
	movq	%rdx, %rbp
	.p2align	4, 0x90
.LBB112_99:                             # %.lr.ph1688
                                        #   Parent Loop BB112_21 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB112_109 Depth 3
                                        #       Child Loop BB112_111 Depth 3
	movq	%rbp, 304(%rsp)                 # 8-byte Spill
	movq	40(%rsp), %r13
	cmpq	48(%rsp), %r13
	je	.LBB112_101
# %bb.100:                              #   in Loop: Header=BB112_99 Depth=2
	movq	%rbx, (%r13)
	addq	$8, 40(%rsp)
	jmp	.LBB112_115
	.p2align	4, 0x90
.LBB112_101:                            #   in Loop: Header=BB112_99 Depth=2
	movq	%rsi, 360(%rsp)                 # 8-byte Spill
	movq	32(%rsp), %r15
	movq	%r13, %rbp
	subq	%r15, %rbp
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %rbp
	je	.LBB112_690
# %bb.102:                              # %_ZNKSt6vectorIN8pybind116handleESaIS1_EE12_M_check_lenEmPKc.exit.i884
                                        #   in Loop: Header=BB112_99 Depth=2
	movq	%rbp, %r12
	sarq	$3, %r12
	cmpq	$1, %r12
	movq	%r12, %rax
	adcq	$0, %rax
	leaq	(%rax,%r12), %rdx
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rcx, %rdx
	cmovaeq	%rcx, %rdx
	addq	%r12, %rax
	cmovbq	%rcx, %rdx
	testq	%rdx, %rdx
	movq	%rdx, 384(%rsp)                 # 8-byte Spill
	je	.LBB112_105
# %bb.103:                              #   in Loop: Header=BB112_99 Depth=2
	leaq	(,%rdx,8), %rdi
.Ltmp1687:
	callq	_Znwm@PLT
.Ltmp1688:
# %bb.104:                              #   in Loop: Header=BB112_99 Depth=2
	movq	%rax, %r14
	movq	%rbx, (%r14,%r12,8)
	movq	%r14, %rbx
	cmpq	%r13, %r15
	jne	.LBB112_106
	jmp	.LBB112_112
.LBB112_105:                            #   in Loop: Header=BB112_99 Depth=2
	xorl	%r14d, %r14d
	movq	%rbx, (%r14,%r12,8)
	movq	%r14, %rbx
	cmpq	%r13, %r15
	je	.LBB112_112
.LBB112_106:                            # %.lr.ph.i.i.i.i889.preheader
                                        #   in Loop: Header=BB112_99 Depth=2
	leaq	-8(%rbp), %rcx
	movq	%r14, %rbx
	movq	%r15, %rax
	cmpq	$24, %rcx
	jb	.LBB112_111
# %bb.107:                              # %.lr.ph.i.i.i.i889.preheader
                                        #   in Loop: Header=BB112_99 Depth=2
	movq	%r14, %rdx
	subq	%r15, %rdx
	movq	%r14, %rbx
	movq	%r15, %rax
	cmpq	$32, %rdx
	jb	.LBB112_111
# %bb.108:                              # %vector.ph1777
                                        #   in Loop: Header=BB112_99 Depth=2
	shrq	$3, %rcx
	incq	%rcx
	movq	%rcx, %rdx
	movabsq	$4611686018427387900, %rax      # imm = 0x3FFFFFFFFFFFFFFC
	andq	%rax, %rdx
	leaq	(%r14,%rdx,8), %rbx
	leaq	(%r15,%rdx,8), %rax
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB112_109:                            # %vector.body1784
                                        #   Parent Loop BB112_21 Depth=1
                                        #     Parent Loop BB112_99 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movups	(%r15,%rsi,8), %xmm0
	movups	16(%r15,%rsi,8), %xmm1
	movups	%xmm0, (%r14,%rsi,8)
	movups	%xmm1, 16(%r14,%rsi,8)
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB112_109
# %bb.110:                              # %middle.block1774
                                        #   in Loop: Header=BB112_99 Depth=2
	cmpq	%rdx, %rcx
	je	.LBB112_112
	.p2align	4, 0x90
.LBB112_111:                            # %.lr.ph.i.i.i.i889
                                        #   Parent Loop BB112_21 Depth=1
                                        #     Parent Loop BB112_99 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	(%rax), %rcx
	movq	%rcx, (%rbx)
	addq	$8, %rax
	addq	$8, %rbx
	cmpq	%r13, %rax
	jne	.LBB112_111
.LBB112_112:                            # %_ZNSt6vectorIN8pybind116handleESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit22.i900
                                        #   in Loop: Header=BB112_99 Depth=2
	testq	%r15, %r15
	je	.LBB112_114
# %bb.113:                              #   in Loop: Header=BB112_99 Depth=2
	movq	%r15, %rdi
	movq	%rbp, %rsi
	callq	_ZdlPvm@PLT
.LBB112_114:                            # %.noexc424
                                        #   in Loop: Header=BB112_99 Depth=2
	addq	$8, %rbx
	movq	%r14, 32(%rsp)
	movq	%rbx, 40(%rsp)
	movq	384(%rsp), %rax                 # 8-byte Reload
	leaq	(%r14,%rax,8), %rax
	movq	%rax, 48(%rsp)
	movq	360(%rsp), %rsi                 # 8-byte Reload
.LBB112_115:                            # %_ZNSt6vectorIN8pybind116handleESaIS1_EE9push_backERKS1_.exit425
                                        #   in Loop: Header=BB112_99 Depth=2
	movzbl	24(%rsi), %eax
	movq	72(%rsp), %rsi
	movl	80(%rsp), %ecx
	cmpq	88(%rsp), %rsi
	leaq	56(%rsp), %rdi
	je	.LBB112_120
# %bb.116:                              #   in Loop: Header=BB112_99 Depth=2
	leal	1(%rcx), %edx
	movl	%edx, 80(%rsp)
	cmpq	$63, %rcx
	jne	.LBB112_118
# %bb.117:                              #   in Loop: Header=BB112_99 Depth=2
	movl	$0, 80(%rsp)
	leaq	8(%rsi), %rdx
	movq	%rdx, 72(%rsp)
.LBB112_118:                            # %_ZNSt13_Bit_iteratorppEi.exit.i429
                                        #   in Loop: Header=BB112_99 Depth=2
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	testb	$1, %al
	je	.LBB112_121
# %bb.119:                              #   in Loop: Header=BB112_99 Depth=2
	orq	(%rsi), %rdx
	jmp	.LBB112_122
	.p2align	4, 0x90
.LBB112_120:                            #   in Loop: Header=BB112_99 Depth=2
.Ltmp1689:
	movzbl	%al, %eax
	andl	$1, %eax
	movl	%ecx, %edx
	movl	%eax, %ecx
	callq	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb@PLT
.Ltmp1690:
	jmp	.LBB112_123
	.p2align	4, 0x90
.LBB112_121:                            #   in Loop: Header=BB112_99 Depth=2
	notq	%rdx
	andq	(%rsi), %rdx
.LBB112_122:                            # %.sink.split1626
                                        #   in Loop: Header=BB112_99 Depth=2
	movq	%rdx, (%rsi)
.LBB112_123:                            #   in Loop: Header=BB112_99 Depth=2
	movq	304(%rsp), %rbp                 # 8-byte Reload
	incq	%rbp
	movq	176(%rsp), %r12                 # 8-byte Reload
	movzwl	96(%r12), %eax
	cmpq	%rax, %rbp
	jae	.LBB112_126
# %bb.124:                              #   in Loop: Header=BB112_99 Depth=2
	movq	24(%r12), %rcx
	movq	%rbp, %rdx
	shlq	$5, %rdx
	leaq	(%rcx,%rdx), %rsi
	movq	16(%rcx,%rdx), %rbx
	testq	%rbx, %rbx
	movq	16(%rsp), %r14                  # 8-byte Reload
	jne	.LBB112_99
	jmp	.LBB112_127
.LBB112_125:                            #   in Loop: Header=BB112_21 Depth=1
	movq	%rdx, %rbp
	jmp	.LBB112_127
.LBB112_221:                            #   in Loop: Header=BB112_21 Depth=1
	movl	$4, %ebx
	jmp	.LBB112_301
.LBB112_126:                            #   in Loop: Header=BB112_21 Depth=1
	movq	16(%rsp), %r14                  # 8-byte Reload
.LBB112_127:                            # %_ZNSt6vectorIbSaIbEE9push_backEb.exit431
                                        #   in Loop: Header=BB112_21 Depth=1
	movzwl	%ax, %eax
	movl	$4, %ebx
	cmpq	%rax, %rbp
	movq	296(%rsp), %r15                 # 8-byte Reload
	movq	184(%rsp), %r13                 # 8-byte Reload
	jb	.LBB112_300
.LBB112_128:                            #   in Loop: Header=BB112_21 Depth=1
	movq	392(%rsp), %rax                 # 8-byte Reload
	shrl	$6, %eax
	movq	472(%rsp), %rcx                 # 8-byte Reload
	subq	%rax, %rcx
	movsbl	376(%rsp), %eax                 # 1-byte Folded Reload
	shrl	$7, %eax
	movswq	%ax, %rax
	addq	%rcx, %rax
	movq	%rax, 384(%rsp)                 # 8-byte Spill
	cmpq	%rax, %rbp
	jae	.LBB112_193
# %bb.129:                              # %.preheader1162
                                        #   in Loop: Header=BB112_21 Depth=1
	movl	$0, 392(%rsp)                   # 4-byte Folded Spill
	jmp	.LBB112_132
	.p2align	4, 0x90
.LBB112_130:                            #   in Loop: Header=BB112_132 Depth=2
.Ltmp1731:
	movzbl	%al, %eax
	andl	$1, %eax
	movq	%rbx, %rdi
	movl	%ecx, %edx
	movl	%eax, %ecx
	callq	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb@PLT
.Ltmp1732:
.LBB112_131:                            #   in Loop: Header=BB112_132 Depth=2
	movq	304(%rsp), %rbp                 # 8-byte Reload
	incq	%rbp
	cmpq	384(%rsp), %rbp                 # 8-byte Folded Reload
	movq	296(%rsp), %r15                 # 8-byte Reload
	movq	184(%rsp), %r13                 # 8-byte Reload
	movq	176(%rsp), %r12                 # 8-byte Reload
	movq	16(%rsp), %r14                  # 8-byte Reload
	jae	.LBB112_193
.LBB112_132:                            #   Parent Loop BB112_21 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB112_161 Depth 3
                                        #       Child Loop BB112_163 Depth 3
                                        #       Child Loop BB112_180 Depth 3
                                        #       Child Loop BB112_182 Depth 3
	movq	24(%r12), %rax
	movq	%rbp, %rcx
	shlq	$5, %rcx
	leaq	(%rax,%rcx), %r14
	testq	%r15, %r15
	je	.LBB112_143
# %bb.133:                              #   in Loop: Header=BB112_132 Depth=2
	movq	(%rax,%rcx), %rsi
	testq	%rsi, %rsi
	je	.LBB112_143
# %bb.134:                              #   in Loop: Header=BB112_132 Depth=2
	movq	312(%rsp), %rdi
.Ltmp1695:
	callq	_ZN8pybind116detail18dict_getitemstringEP7_objectPKc
.Ltmp1696:
# %bb.135:                              #   in Loop: Header=BB112_132 Depth=2
	movq	%rax, %rbx
	testq	%rax, %rax
	je	.LBB112_143
# %bb.136:                              #   in Loop: Header=BB112_132 Depth=2
	testb	$1, 392(%rsp)                   # 1-byte Folded Reload
	jne	.LBB112_140
# %bb.137:                              #   in Loop: Header=BB112_132 Depth=2
	movq	312(%rsp), %rdi
.Ltmp1698:
	callq	PyDict_Copy@PLT
.Ltmp1699:
# %bb.138:                              #   in Loop: Header=BB112_132 Depth=2
	movq	312(%rsp), %rcx
	movq	%rcx, 224(%rsp)
	movq	%rax, 312(%rsp)
	movq	$0, 128(%rsp)
.Ltmp1701:
	leaq	224(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1702:
# %bb.139:                              # %_ZN8pybind114dictaSEOS0_.exit
                                        #   in Loop: Header=BB112_132 Depth=2
.Ltmp1704:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1705:
.LBB112_140:                            #   in Loop: Header=BB112_132 Depth=2
	movq	%rbx, %r15
	movq	312(%rsp), %rdi
	movq	%r14, %rbx
	movq	(%r14), %rsi
.Ltmp1707:
	callq	PyDict_DelItemString@PLT
.Ltmp1708:
# %bb.141:                              #   in Loop: Header=BB112_132 Depth=2
	cmpl	$-1, %eax
	je	.LBB112_692
# %bb.142:                              #   in Loop: Header=BB112_132 Depth=2
	movb	$1, %al
	movl	%eax, 392(%rsp)                 # 4-byte Spill
	movq	296(%rsp), %rdx                 # 8-byte Reload
	movq	184(%rsp), %r13                 # 8-byte Reload
	movq	176(%rsp), %r12                 # 8-byte Reload
	movq	%rbx, %r14
	jmp	.LBB112_144
	.p2align	4, 0x90
.LBB112_143:                            # %.thread1067
                                        #   in Loop: Header=BB112_132 Depth=2
	movq	%r15, %rdx
	movq	16(%r14), %r15
.LBB112_144:                            #   in Loop: Header=BB112_132 Depth=2
	testb	$2, 24(%r14)
	sete	%al
	cmpq	_Py_NoneStruct@GOTPCREL(%rip), %r15
	sete	%cl
	movl	$4, %ebx
	testb	%cl, %al
	jne	.LBB112_215
# %bb.145:                              #   in Loop: Header=BB112_132 Depth=2
	movq	%r15, 360(%rsp)                 # 8-byte Spill
	testq	%r15, %r15
	je	.LBB112_215
# %bb.146:                              #   in Loop: Header=BB112_132 Depth=2
	movq	%rbp, 304(%rsp)                 # 8-byte Spill
	testb	$64, 89(%r12)
	movq	40(%rsp), %rbp
	jne	.LBB112_148
# %bb.147:                              #   in Loop: Header=BB112_132 Depth=2
	leaq	56(%rsp), %rbx
	jmp	.LBB112_169
	.p2align	4, 0x90
.LBB112_148:                            #   in Loop: Header=BB112_132 Depth=2
	movq	%rbp, %rax
	subq	32(%rsp), %rax
	sarq	$3, %rax
	movzwl	94(%r12), %ecx
	cmpq	%rcx, %rax
	leaq	56(%rsp), %rbx
	jne	.LBB112_169
# %bb.149:                              #   in Loop: Header=BB112_132 Depth=2
	movq	_Py_NoneStruct@GOTPCREL(%rip), %rax
	movq	%rax, 224(%rsp)
.Ltmp1714:
	leaq	224(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1715:
# %bb.150:                              # %_ZN8pybind114noneC2Ev.exit
                                        #   in Loop: Header=BB112_132 Depth=2
	movq	40(%rsp), %r15
	cmpq	48(%rsp), %r15
	je	.LBB112_152
# %bb.151:                              #   in Loop: Header=BB112_132 Depth=2
	movq	224(%rsp), %rax
	movq	%rax, (%r15)
	addq	$8, 40(%rsp)
	jmp	.LBB112_167
.LBB112_152:                            #   in Loop: Header=BB112_132 Depth=2
	movq	%r14, 376(%rsp)                 # 8-byte Spill
	movq	32(%rsp), %r12
	movq	%r15, %rbp
	subq	%r12, %rbp
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %rbp
	je	.LBB112_707
# %bb.153:                              # %_ZNKSt6vectorIN8pybind116handleESaIS1_EE12_M_check_lenEmPKc.exit.i906
                                        #   in Loop: Header=BB112_132 Depth=2
	movq	%rbp, %r14
	sarq	$3, %r14
	cmpq	$1, %r14
	movq	%r14, %rax
	adcq	$0, %rax
	leaq	(%rax,%r14), %r13
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rcx, %r13
	cmovaeq	%rcx, %r13
	addq	%r14, %rax
	cmovbq	%rcx, %r13
	testq	%r13, %r13
	je	.LBB112_156
# %bb.154:                              #   in Loop: Header=BB112_132 Depth=2
	leaq	(,%r13,8), %rdi
.Ltmp1717:
	callq	_Znwm@PLT
.Ltmp1718:
# %bb.155:                              #   in Loop: Header=BB112_132 Depth=2
	movq	%rax, %rbx
	jmp	.LBB112_157
.LBB112_156:                            #   in Loop: Header=BB112_132 Depth=2
	xorl	%ebx, %ebx
.LBB112_157:                            # %_ZNSt12_Vector_baseIN8pybind116handleESaIS1_EE11_M_allocateEm.exit.i909
                                        #   in Loop: Header=BB112_132 Depth=2
	movq	224(%rsp), %rax
	movq	%rax, (%rbx,%r14,8)
	movq	%rbx, %r14
	cmpq	%r15, %r12
	je	.LBB112_164
# %bb.158:                              # %.lr.ph.i.i.i.i911.preheader
                                        #   in Loop: Header=BB112_132 Depth=2
	leaq	-8(%rbp), %rcx
	movq	%rbx, %r14
	movq	%r12, %rax
	cmpq	$24, %rcx
	jb	.LBB112_163
# %bb.159:                              # %.lr.ph.i.i.i.i911.preheader
                                        #   in Loop: Header=BB112_132 Depth=2
	movq	%rbx, %rdx
	subq	%r12, %rdx
	movq	%rbx, %r14
	movq	%r12, %rax
	cmpq	$32, %rdx
	jb	.LBB112_163
# %bb.160:                              # %vector.ph1753
                                        #   in Loop: Header=BB112_132 Depth=2
	shrq	$3, %rcx
	incq	%rcx
	movq	%rcx, %rdx
	movabsq	$4611686018427387900, %rax      # imm = 0x3FFFFFFFFFFFFFFC
	andq	%rax, %rdx
	leaq	(%rbx,%rdx,8), %r14
	leaq	(%r12,%rdx,8), %rax
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB112_161:                            # %vector.body1760
                                        #   Parent Loop BB112_21 Depth=1
                                        #     Parent Loop BB112_132 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movups	(%r12,%rsi,8), %xmm0
	movups	16(%r12,%rsi,8), %xmm1
	movups	%xmm0, (%rbx,%rsi,8)
	movups	%xmm1, 16(%rbx,%rsi,8)
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB112_161
# %bb.162:                              # %middle.block1750
                                        #   in Loop: Header=BB112_132 Depth=2
	cmpq	%rdx, %rcx
	je	.LBB112_164
	.p2align	4, 0x90
.LBB112_163:                            # %.lr.ph.i.i.i.i911
                                        #   Parent Loop BB112_21 Depth=1
                                        #     Parent Loop BB112_132 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	(%rax), %rcx
	movq	%rcx, (%r14)
	addq	$8, %rax
	addq	$8, %r14
	cmpq	%r15, %rax
	jne	.LBB112_163
.LBB112_164:                            # %_ZNSt6vectorIN8pybind116handleESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit22.i922
                                        #   in Loop: Header=BB112_132 Depth=2
	testq	%r12, %r12
	je	.LBB112_166
# %bb.165:                              #   in Loop: Header=BB112_132 Depth=2
	movq	%r12, %rdi
	movq	%rbp, %rsi
	callq	_ZdlPvm@PLT
.LBB112_166:                            # %.noexc436
                                        #   in Loop: Header=BB112_132 Depth=2
	addq	$8, %r14
	movq	%rbx, 32(%rsp)
	movq	%r14, 40(%rsp)
	leaq	(%rbx,%r13,8), %rax
	movq	%rax, 48(%rsp)
	leaq	56(%rsp), %rbx
	movq	376(%rsp), %r14                 # 8-byte Reload
.LBB112_167:                            # %_ZNSt6vectorIN8pybind116handleESaIS1_EE9push_backEOS1_.exit
                                        #   in Loop: Header=BB112_132 Depth=2
.Ltmp1720:
	leaq	224(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1721:
# %bb.168:                              # %_ZN8pybind116objectD2Ev.exit437
                                        #   in Loop: Header=BB112_132 Depth=2
	movq	40(%rsp), %rbp
.LBB112_169:                            #   in Loop: Header=BB112_132 Depth=2
	cmpq	48(%rsp), %rbp
	je	.LBB112_171
# %bb.170:                              #   in Loop: Header=BB112_132 Depth=2
	movq	360(%rsp), %rax                 # 8-byte Reload
	movq	%rax, (%rbp)
	addq	$8, 40(%rsp)
	jmp	.LBB112_186
	.p2align	4, 0x90
.LBB112_171:                            #   in Loop: Header=BB112_132 Depth=2
	movq	%r14, 376(%rsp)                 # 8-byte Spill
	movq	32(%rsp), %r12
	movq	%rbp, %r15
	subq	%r12, %r15
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %r15
	je	.LBB112_688
# %bb.172:                              # %_ZNKSt6vectorIN8pybind116handleESaIS1_EE12_M_check_lenEmPKc.exit.i927
                                        #   in Loop: Header=BB112_132 Depth=2
	movq	%r15, %r14
	sarq	$3, %r14
	cmpq	$1, %r14
	movq	%r14, %rax
	adcq	$0, %rax
	leaq	(%rax,%r14), %r13
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rcx, %r13
	cmovaeq	%rcx, %r13
	addq	%r14, %rax
	cmovbq	%rcx, %r13
	testq	%r13, %r13
	je	.LBB112_175
# %bb.173:                              #   in Loop: Header=BB112_132 Depth=2
	leaq	(,%r13,8), %rdi
.Ltmp1729:
	callq	_Znwm@PLT
.Ltmp1730:
# %bb.174:                              #   in Loop: Header=BB112_132 Depth=2
	movq	%rax, %rbx
	jmp	.LBB112_176
.LBB112_175:                            #   in Loop: Header=BB112_132 Depth=2
	xorl	%ebx, %ebx
.LBB112_176:                            # %_ZNSt12_Vector_baseIN8pybind116handleESaIS1_EE11_M_allocateEm.exit.i930
                                        #   in Loop: Header=BB112_132 Depth=2
	movq	360(%rsp), %rax                 # 8-byte Reload
	movq	%rax, (%rbx,%r14,8)
	movq	%rbx, %r14
	cmpq	%rbp, %r12
	je	.LBB112_183
# %bb.177:                              # %.lr.ph.i.i.i.i932.preheader
                                        #   in Loop: Header=BB112_132 Depth=2
	leaq	-8(%r15), %rcx
	movq	%rbx, %r14
	movq	%r12, %rax
	cmpq	$24, %rcx
	jb	.LBB112_182
# %bb.178:                              # %.lr.ph.i.i.i.i932.preheader
                                        #   in Loop: Header=BB112_132 Depth=2
	movq	%rbx, %rdx
	subq	%r12, %rdx
	movq	%rbx, %r14
	movq	%r12, %rax
	cmpq	$32, %rdx
	jb	.LBB112_182
# %bb.179:                              # %vector.ph1729
                                        #   in Loop: Header=BB112_132 Depth=2
	shrq	$3, %rcx
	incq	%rcx
	movq	%rcx, %rdx
	movabsq	$4611686018427387900, %rax      # imm = 0x3FFFFFFFFFFFFFFC
	andq	%rax, %rdx
	leaq	(%rbx,%rdx,8), %r14
	leaq	(%r12,%rdx,8), %rax
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB112_180:                            # %vector.body1736
                                        #   Parent Loop BB112_21 Depth=1
                                        #     Parent Loop BB112_132 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movups	(%r12,%rsi,8), %xmm0
	movups	16(%r12,%rsi,8), %xmm1
	movups	%xmm0, (%rbx,%rsi,8)
	movups	%xmm1, 16(%rbx,%rsi,8)
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB112_180
# %bb.181:                              # %middle.block1726
                                        #   in Loop: Header=BB112_132 Depth=2
	cmpq	%rdx, %rcx
	je	.LBB112_183
	.p2align	4, 0x90
.LBB112_182:                            # %.lr.ph.i.i.i.i932
                                        #   Parent Loop BB112_21 Depth=1
                                        #     Parent Loop BB112_132 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	(%rax), %rcx
	movq	%rcx, (%r14)
	addq	$8, %rax
	addq	$8, %r14
	cmpq	%rbp, %rax
	jne	.LBB112_182
.LBB112_183:                            # %_ZNSt6vectorIN8pybind116handleESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit22.i943
                                        #   in Loop: Header=BB112_132 Depth=2
	testq	%r12, %r12
	je	.LBB112_185
# %bb.184:                              #   in Loop: Header=BB112_132 Depth=2
	movq	%r12, %rdi
	movq	%r15, %rsi
	callq	_ZdlPvm@PLT
.LBB112_185:                            # %.noexc440
                                        #   in Loop: Header=BB112_132 Depth=2
	addq	$8, %r14
	movq	%rbx, 32(%rsp)
	movq	%r14, 40(%rsp)
	leaq	(%rbx,%r13,8), %rax
	movq	%rax, 48(%rsp)
	leaq	56(%rsp), %rbx
	movq	376(%rsp), %r14                 # 8-byte Reload
.LBB112_186:                            # %_ZNSt6vectorIN8pybind116handleESaIS1_EE9push_backERKS1_.exit441
                                        #   in Loop: Header=BB112_132 Depth=2
	movzbl	24(%r14), %eax
	movq	72(%rsp), %rsi
	movl	80(%rsp), %ecx
	cmpq	88(%rsp), %rsi
	je	.LBB112_130
# %bb.187:                              #   in Loop: Header=BB112_132 Depth=2
	leal	1(%rcx), %edx
	movl	%edx, 80(%rsp)
	cmpq	$63, %rcx
	jne	.LBB112_189
# %bb.188:                              #   in Loop: Header=BB112_132 Depth=2
	movl	$0, 80(%rsp)
	leaq	8(%rsi), %rdx
	movq	%rdx, 72(%rsp)
.LBB112_189:                            # %_ZNSt13_Bit_iteratorppEi.exit.i445
                                        #   in Loop: Header=BB112_132 Depth=2
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	testb	$1, %al
	je	.LBB112_191
# %bb.190:                              #   in Loop: Header=BB112_132 Depth=2
	orq	(%rsi), %rdx
	jmp	.LBB112_192
	.p2align	4, 0x90
.LBB112_191:                            #   in Loop: Header=BB112_132 Depth=2
	notq	%rdx
	andq	(%rsi), %rdx
.LBB112_192:                            # %.sink.split1629
                                        #   in Loop: Header=BB112_132 Depth=2
	movq	%rdx, (%rsi)
	jmp	.LBB112_131
.LBB112_193:                            # %_ZNSt6vectorIbSaIbEE9push_backEb.exit447
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	312(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB112_197
# %bb.194:                              #   in Loop: Header=BB112_21 Depth=1
.Ltmp1734:
	callq	PyDict_Size@PLT
.Ltmp1735:
# %bb.195:                              #   in Loop: Header=BB112_21 Depth=1
	movq	176(%rsp), %r12                 # 8-byte Reload
	movzwl	89(%r12), %ecx
	testq	%rax, %rax
	je	.LBB112_216
# %bb.196:                              #   in Loop: Header=BB112_21 Depth=1
	movl	%ecx, %eax
	movl	$4, %ebx
	andl	$128, %eax
	movq	296(%rsp), %r15                 # 8-byte Reload
	movq	184(%rsp), %r13                 # 8-byte Reload
	movq	16(%rsp), %r14                  # 8-byte Reload
	je	.LBB112_300
# %bb.198:                              #   in Loop: Header=BB112_21 Depth=1
	testb	$64, %cl
	leaq	56(%rsp), %rbx
	jne	.LBB112_199
.LBB112_217:                            #   in Loop: Header=BB112_21 Depth=1
	testb	%cl, %cl
	js	.LBB112_250
	jmp	.LBB112_278
.LBB112_197:                            # %_ZNSt6vectorIbSaIbEE9push_backEb.exit447._crit_edge
                                        #   in Loop: Header=BB112_21 Depth=1
	movzwl	89(%r12), %ecx
	testb	$64, %cl
	leaq	56(%rsp), %rbx
	je	.LBB112_217
.LBB112_199:                            #   in Loop: Header=BB112_21 Depth=1
.Ltmp1736:
	xorl	%edi, %edi
	callq	PyTuple_New@PLT
.Ltmp1737:
# %bb.200:                              # %.noexc450
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	%rax, 8(%rsp)
	testq	%rax, %rax
	movq	400(%rsp), %r15                 # 8-byte Reload
	movq	(%rsp), %rbx                    # 8-byte Reload
	je	.LBB112_720
# %bb.201:                              # %_ZN8pybind115tupleC2IlTnNSt9enable_ifIXsr3std11is_integralIT_EE5valueEiE4typeELi0EEES3_.exit
                                        #   in Loop: Header=BB112_21 Depth=1
	cmpq	$0, 408(%rsp)                   # 8-byte Folded Reload
	je	.LBB112_218
# %bb.202:                              #   in Loop: Header=BB112_21 Depth=1
	subq	%rbx, %r15
	jbe	.LBB112_222
# %bb.203:                              #   in Loop: Header=BB112_21 Depth=1
.Ltmp1754:
	movq	%r15, %rdi
	callq	PyTuple_New@PLT
.Ltmp1755:
# %bb.204:                              # %.noexc464
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	%rax, 128(%rsp)
	testq	%rax, %rax
	je	.LBB112_737
# %bb.205:                              # %_ZN8pybind115tupleC2ImTnNSt9enable_ifIXsr3std11is_integralIT_EE5valueEiE4typeELi0EEES3_.exit
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	8(%rsp), %rcx
	movq	%rcx, 224(%rsp)
	movq	%rax, 8(%rsp)
	movq	$0, 128(%rsp)
.Ltmp1757:
	leaq	224(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1758:
# %bb.206:                              # %_ZN8pybind115tupleaSEOS0_.exit468
                                        #   in Loop: Header=BB112_21 Depth=1
.Ltmp1760:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1761:
# %bb.207:                              # %_ZN8pybind116objectD2Ev.exit469
                                        #   in Loop: Header=BB112_21 Depth=1
	cmpq	%rbx, 400(%rsp)                 # 8-byte Folded Reload
	je	.LBB112_226
# %bb.208:                              # %.lr.ph1471.preheader
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	464(%rsp), %rax                 # 8-byte Reload
	leaq	(%rax,%rbx,8), %r14
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB112_209:                            # %.lr.ph1471
                                        #   Parent Loop BB112_21 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	8(%r13), %rax
	testb	$4, 171(%rax)
	je	.LBB112_694
# %bb.210:                              #   in Loop: Header=BB112_209 Depth=2
	movq	8(%rsp), %r12
	movq	%r12, 232(%rsp)
	movq	%rbx, 240(%rsp)
	movq	$0, 248(%rsp)
	movq	(%r14,%rbx,8), %rax
	movq	%rax, 128(%rsp)
.Ltmp1763:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1764:
# %bb.211:                              # %.noexc471
                                        #   in Loop: Header=BB112_209 Depth=2
	movq	(%rax), %rdx
.Ltmp1765:
	movq	%r12, %rdi
	movq	%rbx, %rsi
	callq	PyTuple_SetItem@PLT
.Ltmp1766:
# %bb.212:                              # %.noexc472
                                        #   in Loop: Header=BB112_209 Depth=2
	testl	%eax, %eax
	jne	.LBB112_695
# %bb.213:                              #   in Loop: Header=BB112_209 Depth=2
.Ltmp1777:
	leaq	248(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1778:
# %bb.214:                              # %_ZN8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEED2Ev.exit
                                        #   in Loop: Header=BB112_209 Depth=2
	incq	%rbx
	cmpq	%rbx, %r15
	jne	.LBB112_209
	jmp	.LBB112_226
.LBB112_215:                            #   in Loop: Header=BB112_21 Depth=1
	movq	%rdx, %r15
	jmp	.LBB112_300
.LBB112_216:                            #   in Loop: Header=BB112_21 Depth=1
	movq	296(%rsp), %r15                 # 8-byte Reload
	movq	184(%rsp), %r13                 # 8-byte Reload
	movq	16(%rsp), %r14                  # 8-byte Reload
	testb	$64, %cl
	leaq	56(%rsp), %rbx
	jne	.LBB112_199
	jmp	.LBB112_217
.LBB112_218:                            #   in Loop: Header=BB112_21 Depth=1
	movq	%r13, 128(%rsp)
.Ltmp1786:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1787:
# %bb.219:                              # %_ZN8pybind1118reinterpret_borrowINS_5tupleEEET_NS_6handleE.exit
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	8(%rsp), %rax
	movq	%rax, 224(%rsp)
	movq	128(%rsp), %rax
	movq	%rax, 8(%rsp)
	movq	$0, 128(%rsp)
.Ltmp1789:
	leaq	224(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1790:
# %bb.220:                              # %_ZN8pybind115tupleaSEOS0_.exit
                                        #   in Loop: Header=BB112_21 Depth=1
.Ltmp1792:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1793:
	jmp	.LBB112_226
.LBB112_222:                            #   in Loop: Header=BB112_21 Depth=1
.Ltmp1739:
	xorl	%edi, %edi
	callq	PyTuple_New@PLT
.Ltmp1740:
# %bb.223:                              # %.noexc456
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	%rax, 128(%rsp)
	testq	%rax, %rax
	je	.LBB112_735
# %bb.224:                              # %_ZN8pybind115tupleC2IiTnNSt9enable_ifIXsr3std11is_integralIT_EE5valueEiE4typeELi0EEES3_.exit
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	8(%rsp), %rcx
	movq	%rcx, 224(%rsp)
	movq	%rax, 8(%rsp)
	movq	$0, 128(%rsp)
.Ltmp1742:
	leaq	224(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1743:
# %bb.225:                              # %_ZN8pybind115tupleaSEOS0_.exit460
                                        #   in Loop: Header=BB112_21 Depth=1
.Ltmp1745:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1746:
.LBB112_226:                            # %.loopexit1156
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	32(%rsp), %r15
	movq	40(%rsp), %r13
	movq	%r13, %r12
	subq	%r15, %r12
	movq	%r12, %r14
	sarq	$3, %r14
	movq	176(%rsp), %rax                 # 8-byte Reload
	movzwl	94(%rax), %eax
	cmpq	%rax, %r14
	jbe	.LBB112_228
# %bb.227:                              #   in Loop: Header=BB112_21 Depth=1
	movq	8(%rsp), %rcx
	movq	%rcx, (%r15,%rax,8)
	jmp	.LBB112_243
.LBB112_228:                            #   in Loop: Header=BB112_21 Depth=1
	cmpq	48(%rsp), %r13
	leaq	56(%rsp), %rdi
	je	.LBB112_231
# %bb.229:                              #   in Loop: Header=BB112_21 Depth=1
	movq	8(%rsp), %rax
	movq	%rax, (%r13)
	addq	$8, 40(%rsp)
	movq	72(%rsp), %rsi
	movl	80(%rsp), %ecx
	cmpq	88(%rsp), %rsi
	jne	.LBB112_244
.LBB112_230:                            #   in Loop: Header=BB112_21 Depth=1
.Ltmp1800:
	movl	%ecx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb@PLT
.Ltmp1801:
	jmp	.LBB112_247
.LBB112_231:                            #   in Loop: Header=BB112_21 Depth=1
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %r12
	je	.LBB112_744
# %bb.232:                              # %_ZNKSt6vectorIN8pybind116handleESaIS1_EE12_M_check_lenEmPKc.exit.i949
                                        #   in Loop: Header=BB112_21 Depth=1
	cmpq	$1, %r14
	adcq	%r14, %r14
	leaq	(,%r14,8), %rdi
.Ltmp1795:
	callq	_Znwm@PLT
.Ltmp1796:
# %bb.233:                              # %_ZNSt12_Vector_baseIN8pybind116handleESaIS1_EE11_M_allocateEm.exit.i952
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	%rax, %rbx
	movq	8(%rsp), %rax
	movq	%rax, (%rbx,%r12)
	movq	%rbx, %rbp
	cmpq	%r13, %r15
	je	.LBB112_240
# %bb.234:                              # %.lr.ph.i.i.i.i954.preheader
                                        #   in Loop: Header=BB112_21 Depth=1
	leaq	-8(%r12), %rcx
	movq	%rbx, %rbp
	movq	%r15, %rax
	cmpq	$24, %rcx
	jb	.LBB112_239
# %bb.235:                              # %.lr.ph.i.i.i.i954.preheader
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	%rbx, %rdx
	subq	%r15, %rdx
	movq	%rbx, %rbp
	movq	%r15, %rax
	cmpq	$32, %rdx
	jb	.LBB112_239
# %bb.236:                              # %vector.ph1705
                                        #   in Loop: Header=BB112_21 Depth=1
	shrq	$3, %rcx
	incq	%rcx
	movq	%rcx, %rdx
	movabsq	$4611686018427387900, %rax      # imm = 0x3FFFFFFFFFFFFFFC
	andq	%rax, %rdx
	leaq	(%rbx,%rdx,8), %rbp
	leaq	(%r15,%rdx,8), %rax
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB112_237:                            # %vector.body1712
                                        #   Parent Loop BB112_21 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movups	(%r15,%rsi,8), %xmm0
	movups	16(%r15,%rsi,8), %xmm1
	movups	%xmm0, (%rbx,%rsi,8)
	movups	%xmm1, 16(%rbx,%rsi,8)
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB112_237
# %bb.238:                              # %middle.block1702
                                        #   in Loop: Header=BB112_21 Depth=1
	cmpq	%rdx, %rcx
	je	.LBB112_240
	.p2align	4, 0x90
.LBB112_239:                            # %.lr.ph.i.i.i.i954
                                        #   Parent Loop BB112_21 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	(%rax), %rcx
	movq	%rcx, (%rbp)
	addq	$8, %rax
	addq	$8, %rbp
	cmpq	%r13, %rax
	jne	.LBB112_239
.LBB112_240:                            # %_ZNSt6vectorIN8pybind116handleESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit22.i965
                                        #   in Loop: Header=BB112_21 Depth=1
	testq	%r15, %r15
	je	.LBB112_242
# %bb.241:                              #   in Loop: Header=BB112_21 Depth=1
	movq	%r15, %rdi
	movq	%r12, %rsi
	callq	_ZdlPvm@PLT
.LBB112_242:                            # %.noexc480
                                        #   in Loop: Header=BB112_21 Depth=1
	addq	$8, %rbp
	movq	%rbx, 32(%rsp)
	movq	%rbp, 40(%rsp)
	leaq	(%rbx,%r14,8), %rax
	movq	%rax, 48(%rsp)
.LBB112_243:                            # %_ZNSt6vectorIN8pybind116handleESaIS1_EE9push_backERKS1_.exit481
                                        #   in Loop: Header=BB112_21 Depth=1
	leaq	56(%rsp), %rdi
	movq	72(%rsp), %rsi
	movl	80(%rsp), %ecx
	cmpq	88(%rsp), %rsi
	je	.LBB112_230
.LBB112_244:                            #   in Loop: Header=BB112_21 Depth=1
	leal	1(%rcx), %eax
	movl	%eax, 80(%rsp)
	cmpq	$63, %rcx
	jne	.LBB112_246
# %bb.245:                              #   in Loop: Header=BB112_21 Depth=1
	movl	$0, 80(%rsp)
	leaq	8(%rsi), %rax
	movq	%rax, 72(%rsp)
.LBB112_246:                            # %_ZNSt13_Bit_iteratorppEi.exit.i485
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	$-2, %rax
                                        # kill: def $cl killed $cl killed $rcx
	rolq	%cl, %rax
	andq	%rax, (%rsi)
.LBB112_247:                            # %_ZNSt6vectorIbSaIbEE9push_backEb.exit487
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	96(%rsp), %rax
	movq	%rax, 224(%rsp)
	movq	8(%rsp), %rax
	movq	%rax, 96(%rsp)
	movq	$0, 8(%rsp)
.Ltmp1806:
	leaq	224(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1807:
# %bb.248:                              # %_ZN8pybind116objectaSEOS0_.exit
                                        #   in Loop: Header=BB112_21 Depth=1
.Ltmp1809:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1810:
	movq	296(%rsp), %r15                 # 8-byte Reload
	movq	184(%rsp), %r13                 # 8-byte Reload
	movq	176(%rsp), %r12                 # 8-byte Reload
	movq	16(%rsp), %r14                  # 8-byte Reload
# %bb.249:                              # %_ZN8pybind116objectD2Ev.exit489
                                        #   in Loop: Header=BB112_21 Depth=1
	movzwl	89(%r12), %ecx
	leaq	56(%rsp), %rbx
	testb	%cl, %cl
	jns	.LBB112_278
.LBB112_250:                            #   in Loop: Header=BB112_21 Depth=1
	cmpq	$0, 312(%rsp)
	jne	.LBB112_255
# %bb.251:                              #   in Loop: Header=BB112_21 Depth=1
.Ltmp1818:
	callq	PyDict_New@PLT
.Ltmp1819:
# %bb.252:                              # %.noexc493
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	%rax, 128(%rsp)
	testq	%rax, %rax
	je	.LBB112_733
# %bb.253:                              # %_ZN8pybind114dictC2Ev.exit
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	312(%rsp), %rcx
	movq	%rcx, 224(%rsp)
	movq	%rax, 312(%rsp)
	movq	$0, 128(%rsp)
.Ltmp1821:
	leaq	224(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1822:
# %bb.254:                              # %_ZN8pybind114dictaSEOS0_.exit497
                                        #   in Loop: Header=BB112_21 Depth=1
.Ltmp1824:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1825:
.LBB112_255:                            #   in Loop: Header=BB112_21 Depth=1
	movq	40(%rsp), %r14
	cmpq	48(%rsp), %r14
	je	.LBB112_260
# %bb.256:                              #   in Loop: Header=BB112_21 Depth=1
	movq	312(%rsp), %rax
	movq	%rax, (%r14)
	addq	$8, 40(%rsp)
	movq	72(%rsp), %rsi
	movl	80(%rsp), %ecx
	cmpq	88(%rsp), %rsi
	je	.LBB112_275
.LBB112_257:                            #   in Loop: Header=BB112_21 Depth=1
	leal	1(%rcx), %eax
	movl	%eax, 80(%rsp)
	cmpq	$63, %rcx
	jne	.LBB112_259
# %bb.258:                              #   in Loop: Header=BB112_21 Depth=1
	movl	$0, 80(%rsp)
	leaq	8(%rsi), %rax
	movq	%rax, 72(%rsp)
.LBB112_259:                            # %_ZNSt13_Bit_iteratorppEi.exit.i505
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	$-2, %rax
                                        # kill: def $cl killed $cl killed $rcx
	rolq	%cl, %rax
	andq	%rax, (%rsi)
	jmp	.LBB112_276
.LBB112_260:                            #   in Loop: Header=BB112_21 Depth=1
	movq	32(%rsp), %r15
	movq	%r14, %r12
	subq	%r15, %r12
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %r12
	je	.LBB112_731
# %bb.261:                              # %_ZNKSt6vectorIN8pybind116handleESaIS1_EE12_M_check_lenEmPKc.exit.i971
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	%r12, %rbp
	sarq	$3, %rbp
	cmpq	$1, %rbp
	movq	%rbp, %rax
	adcq	$0, %rax
	leaq	(%rax,%rbp), %r13
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rcx, %r13
	cmovaeq	%rcx, %r13
	addq	%rbp, %rax
	cmovbq	%rcx, %r13
	testq	%r13, %r13
	je	.LBB112_264
# %bb.262:                              #   in Loop: Header=BB112_21 Depth=1
	leaq	(,%r13,8), %rdi
.Ltmp1827:
	callq	_Znwm@PLT
.Ltmp1828:
# %bb.263:                              #   in Loop: Header=BB112_21 Depth=1
	movq	%rax, %rbx
	jmp	.LBB112_265
.LBB112_264:                            #   in Loop: Header=BB112_21 Depth=1
	xorl	%ebx, %ebx
.LBB112_265:                            # %_ZNSt12_Vector_baseIN8pybind116handleESaIS1_EE11_M_allocateEm.exit.i974
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	312(%rsp), %rax
	movq	%rax, (%rbx,%rbp,8)
	movq	%rbx, %rbp
	cmpq	%r14, %r15
	je	.LBB112_272
# %bb.266:                              # %.lr.ph.i.i.i.i976.preheader
                                        #   in Loop: Header=BB112_21 Depth=1
	leaq	-8(%r12), %rcx
	movq	%rbx, %rbp
	movq	%r15, %rax
	cmpq	$24, %rcx
	jb	.LBB112_271
# %bb.267:                              # %.lr.ph.i.i.i.i976.preheader
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	%rbx, %rdx
	subq	%r15, %rdx
	movq	%rbx, %rbp
	movq	%r15, %rax
	cmpq	$32, %rdx
	jb	.LBB112_271
# %bb.268:                              # %vector.ph
                                        #   in Loop: Header=BB112_21 Depth=1
	shrq	$3, %rcx
	incq	%rcx
	movq	%rcx, %rdx
	movabsq	$4611686018427387900, %rax      # imm = 0x3FFFFFFFFFFFFFFC
	andq	%rax, %rdx
	leaq	(%rbx,%rdx,8), %rbp
	leaq	(%r15,%rdx,8), %rax
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB112_269:                            # %vector.body
                                        #   Parent Loop BB112_21 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movups	(%r15,%rsi,8), %xmm0
	movups	16(%r15,%rsi,8), %xmm1
	movups	%xmm0, (%rbx,%rsi,8)
	movups	%xmm1, 16(%rbx,%rsi,8)
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB112_269
# %bb.270:                              # %middle.block
                                        #   in Loop: Header=BB112_21 Depth=1
	cmpq	%rdx, %rcx
	je	.LBB112_272
	.p2align	4, 0x90
.LBB112_271:                            # %.lr.ph.i.i.i.i976
                                        #   Parent Loop BB112_21 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	(%rax), %rcx
	movq	%rcx, (%rbp)
	addq	$8, %rax
	addq	$8, %rbp
	cmpq	%r14, %rax
	jne	.LBB112_271
.LBB112_272:                            # %_ZNSt6vectorIN8pybind116handleESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit22.i987
                                        #   in Loop: Header=BB112_21 Depth=1
	testq	%r15, %r15
	je	.LBB112_274
# %bb.273:                              #   in Loop: Header=BB112_21 Depth=1
	movq	%r15, %rdi
	movq	%r12, %rsi
	callq	_ZdlPvm@PLT
.LBB112_274:                            # %.noexc500
                                        #   in Loop: Header=BB112_21 Depth=1
	addq	$8, %rbp
	movq	%rbx, 32(%rsp)
	movq	%rbp, 40(%rsp)
	leaq	(%rbx,%r13,8), %rax
	movq	%rax, 48(%rsp)
	leaq	56(%rsp), %rbx
	movq	72(%rsp), %rsi
	movl	80(%rsp), %ecx
	cmpq	88(%rsp), %rsi
	jne	.LBB112_257
.LBB112_275:                            #   in Loop: Header=BB112_21 Depth=1
.Ltmp1829:
	movq	%rbx, %rdi
	movl	%ecx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb@PLT
.Ltmp1830:
.LBB112_276:                            # %_ZNSt6vectorIbSaIbEE9push_backEb.exit507
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	104(%rsp), %rax
	movq	%rax, 224(%rsp)
	movq	312(%rsp), %rax
	movq	%rax, 104(%rsp)
	movq	$0, 312(%rsp)
.Ltmp1832:
	leaq	224(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1833:
# %bb.277:                              # %_ZN8pybind116objectaSEOS0_.exit509
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	296(%rsp), %r15                 # 8-byte Reload
	movq	184(%rsp), %r13                 # 8-byte Reload
	movq	176(%rsp), %r12                 # 8-byte Reload
	leaq	56(%rsp), %rbx
	movq	16(%rsp), %r14                  # 8-byte Reload
.LBB112_278:                            #   in Loop: Header=BB112_21 Depth=1
	movq	40(%rsp), %rcx
	subq	32(%rsp), %rcx
	sarq	$3, %rcx
	movzwl	92(%r12), %eax
	cmpq	%rax, %rcx
	jne	.LBB112_698
# %bb.279:                              #   in Loop: Header=BB112_21 Depth=1
	movq	72(%rsp), %rax
	movl	80(%rsp), %edx
	subq	56(%rsp), %rax
	leaq	(%rdx,%rax,8), %rax
	cmpq	%rcx, %rax
	jne	.LBB112_698
# %bb.280:                              #   in Loop: Header=BB112_21 Depth=1
	movq	$0, 128(%rsp)
	movl	$0, 136(%rsp)
	movq	$0, 144(%rsp)
	movl	$0, 152(%rsp)
	movq	$0, 160(%rsp)
	cmpq	$0, 448(%rsp)                   # 8-byte Folded Reload
	je	.LBB112_283
# %bb.281:                              #   in Loop: Header=BB112_21 Depth=1
.Ltmp1846:
	leaq	128(%rsp), %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	xorl	%r8d, %r8d
	callq	_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb@PLT
.Ltmp1847:
# %bb.282:                              # %_ZNSt6vectorIbSaIbEE6resizeEmb.exit
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	32(%rbx), %rax
	movq	%rax, 256(%rsp)
	movups	(%rbx), %xmm0
	movups	16(%rbx), %xmm1
	movaps	%xmm1, 240(%rsp)
	movaps	%xmm0, 224(%rsp)
	movq	160(%rsp), %rax
	movq	%rax, 32(%rbx)
	movaps	128(%rsp), %xmm0
	movaps	144(%rsp), %xmm1
	movups	%xmm1, 16(%rbx)
	movups	%xmm0, (%rbx)
	movq	256(%rsp), %rax
	movq	%rax, 160(%rsp)
	movaps	224(%rsp), %xmm0
	movaps	240(%rsp), %xmm1
	movaps	%xmm1, 144(%rsp)
	movaps	%xmm0, 128(%rsp)
.LBB112_283:                            #   in Loop: Header=BB112_21 Depth=1
.Ltmp1849:
	callq	_ZN8pybind116detail13get_internalsEv
.Ltmp1850:
# %bb.284:                              # %.noexc511
                                        #   in Loop: Header=BB112_21 Depth=1
	addq	$440, %rax                      # imm = 0x1B8
.Ltmp1851:
	movq	%rax, %rdi
	callq	PyThread_tss_get@PLT
.Ltmp1852:
# %bb.285:                              # %.noexc512
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	%rax, 224(%rsp)
	leaq	280(%rsp), %rax
	movq	%rax, 232(%rsp)
	movq	$1, 240(%rsp)
	leaq	248(%rsp), %rax
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movl	$1065353216, 264(%rsp)          # imm = 0x3F800000
	movups	%xmm0, 24(%rax)
.Ltmp1854:
	callq	_ZN8pybind116detail13get_internalsEv
.Ltmp1855:
# %bb.286:                              # %.noexc.i
                                        #   in Loop: Header=BB112_21 Depth=1
	addq	$440, %rax                      # imm = 0x1B8
.Ltmp1856:
	movq	%rax, %rdi
	leaq	224(%rsp), %rsi
	callq	PyThread_tss_set@PLT
.Ltmp1857:
# %bb.287:                              # %_ZN8pybind116detail19loader_life_supportC2Ev.exit
                                        #   in Loop: Header=BB112_21 Depth=1
.Ltmp1859:
	leaq	24(%rsp), %rdi
	callq	*48(%r12)
	movq	%rax, 352(%rsp)                 # 8-byte Spill
.Ltmp1860:
# %bb.288:                              #   in Loop: Header=BB112_21 Depth=1
	leaq	224(%rsp), %rdi
	callq	_ZN8pybind116detail19loader_life_supportD2Ev
.LBB112_289:                            #   in Loop: Header=BB112_21 Depth=1
	xorl	%ebx, %ebx
	movq	352(%rsp), %rax                 # 8-byte Reload
	cmpq	$1, %rax
	setne	%bl
	addl	%ebx, %ebx
	cmpq	$1, %rax
	jne	.LBB112_298
# %bb.290:                              #   in Loop: Header=BB112_21 Depth=1
	cmpq	$0, 448(%rsp)                   # 8-byte Folded Reload
	je	.LBB112_298
# %bb.291:                              #   in Loop: Header=BB112_21 Depth=1
	movzwl	89(%r12), %eax
	shrl	$4, %eax
	andl	$1, %eax
	xorl	%ebx, %ebx
	cmpw	%r14w, %ax
	jae	.LBB112_298
# %bb.292:                              # %.lr.ph1473
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	128(%rsp), %rcx
	.p2align	4, 0x90
.LBB112_293:                            #   Parent Loop BB112_21 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%rax, %rdx
	shrq	$6, %rdx
	movq	(%rcx,%rdx,8), %rdx
	btq	%rax, %rdx
	jb	.LBB112_295
# %bb.294:                              #   in Loop: Header=BB112_293 Depth=2
	incq	%rax
	cmpq	%rax, %r14
	jne	.LBB112_293
	jmp	.LBB112_298
.LBB112_295:                            #   in Loop: Header=BB112_21 Depth=1
	leaq	56(%rsp), %rdx
	movq	32(%rdx), %rax
	movq	%rax, 256(%rsp)
	movups	(%rdx), %xmm0
	movups	16(%rdx), %xmm1
	movaps	%xmm1, 240(%rsp)
	movaps	%xmm0, 224(%rsp)
	movq	160(%rsp), %rax
	movq	%rax, 32(%rdx)
	movaps	128(%rsp), %xmm0
	movaps	144(%rsp), %xmm1
	movups	%xmm1, 16(%rdx)
	movups	%xmm0, (%rdx)
	movq	256(%rsp), %rax
	movq	%rax, 160(%rsp)
	movaps	224(%rsp), %xmm0
	movaps	240(%rsp), %xmm1
	movaps	%xmm1, 144(%rsp)
	movaps	%xmm0, 128(%rsp)
	movq	200(%rsp), %rsi
	cmpq	208(%rsp), %rsi
	je	.LBB112_297
# %bb.296:                              #   in Loop: Header=BB112_21 Depth=1
	movq	24(%rsp), %rax
	movq	%rax, (%rsi)
	movups	32(%rsp), %xmm0
	movups	%xmm0, 8(%rsi)
	movq	48(%rsp), %rax
	movq	%rax, 24(%rsi)
	xorps	%xmm0, %xmm0
	leaq	32(%rsp), %rcx
	movups	%xmm0, (%rcx)
	movq	$0, 16(%rcx)
	movq	32(%rdx), %rax
	movq	%rax, 64(%rsi)
	movups	(%rdx), %xmm0
	movups	16(%rdx), %xmm1
	movups	%xmm1, 48(%rsi)
	movups	%xmm0, 32(%rsi)
	movq	$0, 56(%rsp)
	movl	$0, 64(%rsp)
	movq	$0, 72(%rsp)
	movl	$0, 80(%rsp)
	movq	$0, 88(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 72(%rsi)
	movq	$0, 96(%rsp)
	movq	104(%rsp), %rax
	movq	%rax, 80(%rsi)
	movq	$0, 104(%rsp)
	movups	80(%rcx), %xmm0
	movups	%xmm0, 88(%rsi)
	addq	$104, 200(%rsp)
	jmp	.LBB112_298
.LBB112_297:                            #   in Loop: Header=BB112_21 Depth=1
.Ltmp1865:
	leaq	192(%rsp), %rdi
	leaq	24(%rsp), %rdx
	callq	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_
.Ltmp1866:
.LBB112_298:                            # %_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE9push_backEOS2_.exit
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	128(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB112_300
# %bb.299:                              #   in Loop: Header=BB112_21 Depth=1
	movq	160(%rsp), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	movq	$0, 128(%rsp)
	movl	$0, 136(%rsp)
	movq	$0, 144(%rsp)
	movl	$0, 152(%rsp)
.LBB112_300:                            # %_ZNSt6vectorIbSaIbEE9push_backEb.exit447.thread1073
                                        #   in Loop: Header=BB112_21 Depth=1
.Ltmp1874:
	leaq	312(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1875:
.LBB112_301:                            # %_ZNSt6vectorIbSaIbEE9push_backEb.exit421.thread1061
                                        #   in Loop: Header=BB112_21 Depth=1
.Ltmp1880:
	leaq	104(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1881:
# %bb.302:                              # %_ZN8pybind116objectD2Ev.exit.i523
                                        #   in Loop: Header=BB112_21 Depth=1
.Ltmp1883:
	leaq	96(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1884:
# %bb.303:                              # %_ZN8pybind116objectD2Ev.exit1.i
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	56(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB112_305
# %bb.304:                              #   in Loop: Header=BB112_21 Depth=1
	movq	88(%rsp), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	movq	$0, 56(%rsp)
	movl	$0, 64(%rsp)
	movq	$0, 72(%rsp)
	movl	$0, 80(%rsp)
	movq	$0, 88(%rsp)
.LBB112_305:                            # %_ZNSt13_Bvector_baseISaIbEED2Ev.exit.i
                                        #   in Loop: Header=BB112_21 Depth=1
	movq	32(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB112_19
# %bb.306:                              #   in Loop: Header=BB112_21 Depth=1
	movq	48(%rsp), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB112_19
.LBB112_307:                            #   in Loop: Header=BB112_21 Depth=1
.Ltmp1861:
	movq	%rdx, %r13
	movq	%rax, %r14
	leaq	224(%rsp), %rdi
	callq	_ZN8pybind116detail19loader_life_supportD2Ev
	jmp	.LBB112_310
.LBB112_308:                            #   in Loop: Header=BB112_21 Depth=1
.Ltmp1858:
	movq	%rdx, %r13
	movq	%rax, %r14
	leaq	232(%rsp), %rdi
	callq	_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev@PLT
	jmp	.LBB112_310
.LBB112_309:                            #   in Loop: Header=BB112_21 Depth=1
.Ltmp1853:
	movq	%rdx, %r13
	movq	%rax, %r14
.LBB112_310:                            # %.body513
                                        #   in Loop: Header=BB112_21 Depth=1
	cmpl	$4, %r13d
	jne	.LBB112_859
# %bb.311:                              #   in Loop: Header=BB112_21 Depth=1
	movq	%r14, %rdi
	callq	__cxa_begin_catch@PLT
	movl	$1, %eax
	movq	%rax, 352(%rsp)                 # 8-byte Spill
.Ltmp1862:
	callq	__cxa_end_catch@PLT
.Ltmp1863:
	movq	296(%rsp), %r15                 # 8-byte Reload
	movq	184(%rsp), %r13                 # 8-byte Reload
	movq	176(%rsp), %r12                 # 8-byte Reload
	movq	16(%rsp), %r14                  # 8-byte Reload
	jmp	.LBB112_289
.LBB112_312:
	xorl	%r12d, %r12d
.LBB112_313:
	cmpq	$0, 448(%rsp)                   # 8-byte Folded Reload
	je	.LBB112_332
# %bb.314:
	movq	192(%rsp), %r15
	movq	200(%rsp), %rbx
	cmpq	%rbx, %r15
	je	.LBB112_332
# %bb.315:
	movq	352(%rsp), %r14                 # 8-byte Reload
	cmpq	$1, %r14
	jne	.LBB112_333
# %bb.316:                              # %.preheader
	movq	%r12, 176(%rsp)                 # 8-byte Spill
	leaq	32(%rsp), %rbp
	leaq	80(%rsp), %r14
	leaq	24(%rsp), %r12
	.p2align	4, 0x90
.LBB112_317:                            # =>This Inner Loop Header: Depth=1
.Ltmp1886:
	callq	_ZN8pybind116detail13get_internalsEv
.Ltmp1887:
# %bb.318:                              # %.noexc531
                                        #   in Loop: Header=BB112_317 Depth=1
	addq	$440, %rax                      # imm = 0x1B8
.Ltmp1888:
	movq	%rax, %rdi
	callq	PyThread_tss_get@PLT
.Ltmp1889:
# %bb.319:                              # %.noexc532
                                        #   in Loop: Header=BB112_317 Depth=1
	movq	%rax, 24(%rsp)
	movq	%r14, 32(%rsp)
	movq	$1, 40(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rbp)
	movl	$1065353216, 64(%rsp)           # imm = 0x3F800000
	movups	%xmm0, 40(%rbp)
.Ltmp1891:
	callq	_ZN8pybind116detail13get_internalsEv
.Ltmp1892:
# %bb.320:                              # %.noexc.i530
                                        #   in Loop: Header=BB112_317 Depth=1
	addq	$440, %rax                      # imm = 0x1B8
.Ltmp1893:
	movq	%rax, %rdi
	movq	%r12, %rsi
	callq	PyThread_tss_set@PLT
.Ltmp1894:
# %bb.321:                              # %_ZN8pybind116detail19loader_life_supportC2Ev.exit535
                                        #   in Loop: Header=BB112_317 Depth=1
	movq	(%r15), %rax
.Ltmp1896:
	movq	%r15, %rdi
	callq	*48(%rax)
.Ltmp1897:
# %bb.322:                              #   in Loop: Header=BB112_317 Depth=1
	movq	%rax, %r13
	movq	%r12, %rdi
	callq	_ZN8pybind116detail19loader_life_supportD2Ev
	cmpq	$1, %r13
	jne	.LBB112_330
.LBB112_323:                            # %.thread1081
                                        #   in Loop: Header=BB112_317 Depth=1
	addq	$104, %r15
	cmpq	%rbx, %r15
	jne	.LBB112_317
	jmp	.LBB112_324
.LBB112_325:                            #   in Loop: Header=BB112_317 Depth=1
.Ltmp1898:
	movq	%rdx, %r13
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	%r12, %rdi
	callq	_ZN8pybind116detail19loader_life_supportD2Ev
	jmp	.LBB112_328
.LBB112_326:                            #   in Loop: Header=BB112_317 Depth=1
.Ltmp1895:
	movq	%rdx, %r13
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	%rbp, %rdi
	callq	_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev@PLT
	jmp	.LBB112_328
.LBB112_327:                            #   in Loop: Header=BB112_317 Depth=1
.Ltmp1890:
	movq	%rdx, %r13
	movq	%rax, (%rsp)                    # 8-byte Spill
.LBB112_328:                            # %.body533
                                        #   in Loop: Header=BB112_317 Depth=1
	cmpl	$4, %r13d
	jne	.LBB112_730
# %bb.329:                              #   in Loop: Header=BB112_317 Depth=1
	movq	(%rsp), %rdi                    # 8-byte Reload
	callq	__cxa_begin_catch@PLT
.Ltmp1899:
	callq	__cxa_end_catch@PLT
.Ltmp1900:
	jmp	.LBB112_323
.LBB112_332:
	movq	352(%rsp), %r14                 # 8-byte Reload
	jmp	.LBB112_333
.LBB112_330:
	movq	%r13, %r14
	testq	%r13, %r13
	movq	176(%rsp), %r12                 # 8-byte Reload
	jne	.LBB112_333
# %bb.331:
	movq	(%r15), %r12
	jmp	.LBB112_333
.LBB112_324:
	movl	$1, %r14d
	movq	176(%rsp), %r12                 # 8-byte Reload
.LBB112_333:                            # %.loopexit1154
	movq	192(%rsp), %rdi
	movq	200(%rsp), %rsi
.Ltmp1917:
	callq	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_
.Ltmp1918:
# %bb.334:                              # %_ZSt8_DestroyIPN8pybind116detail13function_callES2_EvT_S4_RSaIT0_E.exit.i
	movq	192(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB112_336
# %bb.335:
	movq	208(%rsp), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB112_336:                            # %_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev.exit
	testq	%r14, %r14
	je	.LBB112_348
# %bb.337:                              # %_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev.exit
	cmpq	$1, %r14
	jne	.LBB112_360
# %bb.338:
	movq	344(%rsp), %rax                 # 8-byte Reload
	testb	$8, (%rax)
	jne	.LBB112_363
# %bb.339:
	movq	288(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rbx
	leaq	208(%rsp), %r12
	movq	%r12, 192(%rsp)
	testq	%rbx, %rbx
	je	.LBB112_746
# %bb.340:
	movq	%rbx, %rdi
	callq	strlen@PLT
	movq	%rax, %r15
	movq	%r12, %r13
	cmpq	$16, %rax
	jb	.LBB112_345
# %bb.341:
	testq	%r15, %r15
	js	.LBB112_754
# %bb.342:
	movq	%r15, %rdi
	incq	%rdi
	js	.LBB112_684
# %bb.343:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
.Ltmp1937:
	callq	_Znwm@PLT
.Ltmp1938:
# %bb.344:                              # %.noexc542
	movq	%rax, %r13
	movq	%rax, 192(%rsp)
	movq	%r15, 208(%rsp)
.LBB112_345:                            # %._crit_edge.i.i
	testq	%r15, %r15
	je	.LBB112_369
# %bb.346:                              # %._crit_edge.i.i
	cmpq	$1, %r15
	jne	.LBB112_368
# %bb.347:
	movzbl	(%rbx), %eax
	movb	%al, (%r13)
	jmp	.LBB112_369
.LBB112_348:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i822
.Ltmp1920:
	movl	$78, %edi
	callq	_Znwm@PLT
.Ltmp1921:
# %bb.349:                              # %.noexc827
	movq	%rax, %rbx
	movq	%rax, 24(%rsp)
	movq	$77, 40(%rsp)
	movups	.L.str.135+61(%rip), %xmm0
	movups	%xmm0, 61(%rax)
	movups	.L.str.135+48(%rip), %xmm0
	movups	%xmm0, 48(%rax)
	movups	.L.str.135+32(%rip), %xmm0
	movups	%xmm0, 32(%rax)
	movups	.L.str.135+16(%rip), %xmm0
	movups	%xmm0, 16(%rax)
	movups	.L.str.135(%rip), %xmm0
	movups	%xmm0, (%rax)
	movq	$77, 32(%rsp)
	movb	$0, 77(%rax)
	testq	%r12, %r12
	je	.LBB112_743
# %bb.350:
	movq	%r12, %rax
	leaq	40(%rsp), %r12
	movq	16(%rax), %r15
	movq	%r15, %rdi
	callq	strlen@PLT
	movq	%rax, %r14
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	addq	$-70, %rax
	cmpq	%rax, %r14
	ja	.LBB112_741
# %bb.351:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i830
	testq	%r14, %r14
	je	.LBB112_354
# %bb.352:
.Ltmp1923:
	leaq	24(%rsp), %rdi
	movl	$77, %esi
	xorl	%edx, %edx
	movq	%r15, %rcx
	movq	%r14, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1924:
# %bb.353:                              # %._crit_edge1543
	movq	24(%rsp), %rbx
.LBB112_354:
	addq	$77, %r14
	movq	%r14, 32(%rsp)
	movb	$0, (%rbx,%r14)
	movq	32(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB112_664
# %bb.355:
	cmpq	$5, %rbx
	jb	.LBB112_664
# %bb.356:                              # %.lr.ph.i.i.i840
	movq	24(%rsp), %r15
	leaq	(%r15,%rbx), %r14
	movl	$979661939, %ebp                # imm = 0x3A647473
	movq	%rbx, %rdx
	movq	%r15, %rax
	.p2align	4, 0x90
.LBB112_357:                            # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i.i841
                                        # =>This Inner Loop Header: Depth=1
	addq	$-4, %rdx
	movq	%rax, %rdi
	movl	$115, %esi
	callq	memchr@PLT
	testq	%rax, %rax
	je	.LBB112_664
# %bb.358:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i845
                                        #   in Loop: Header=BB112_357 Depth=1
	movl	(%rax), %ecx
	xorl	%ebp, %ecx
	movzbl	4(%rax), %edx
	xorl	$58, %edx
	orl	%ecx, %edx
	je	.LBB112_584
# %bb.359:                              #   in Loop: Header=BB112_357 Depth=1
	incq	%rax
	movq	%r14, %rdx
	subq	%rax, %rdx
	cmpq	$5, %rdx
	jae	.LBB112_357
	jmp	.LBB112_664
.LBB112_360:
	movq	344(%rsp), %rax                 # 8-byte Reload
	testb	$1, (%rax)
	je	.LBB112_680
# %bb.361:
	movq	416(%rsp), %rcx
	movzbl	48(%rcx), %eax
	testb	$2, %al
	jne	.LBB112_366
# %bb.362:
	movq	24(%rcx), %rax
	movq	424(%rsp), %rcx
	movzbl	(%rax,%rcx), %eax
	andb	$1, %al
	testb	%al, %al
	jne	.LBB112_680
	jmp	.LBB112_367
.LBB112_363:
	movq	_Py_NotImplementedStruct@GOTPCREL(%rip), %rax
	movq	%rax, 24(%rsp)
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rax), %r14
	jmp	.LBB112_680
.LBB112_364:
	andb	$8, %al
	testb	%al, %al
	je	.LBB112_18
.LBB112_365:
	movq	_Py_NoneStruct@GOTPCREL(%rip), %rax
	movq	%rax, 24(%rsp)
	leaq	24(%rsp), %rbx
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	24(%rsp), %r14
	movq	$0, 24(%rsp)
.Ltmp1659:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1660:
	jmp	.LBB112_680
.LBB112_366:
	andb	$4, %al
	testb	%al, %al
	jne	.LBB112_680
.LBB112_367:
	movq	432(%rsp), %rax
	movq	368(%rsp), %rdi                 # 8-byte Reload
	xorl	%esi, %esi
	callq	*48(%rax)
	jmp	.LBB112_680
.LBB112_368:
	movq	%r13, %rdi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB112_369:
	movq	%r15, 200(%rsp)
	movb	$0, (%r13,%r15)
	movq	200(%rsp), %rsi
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	addq	$-10, %rax
	cmpq	%rax, %rsi
	jg	.LBB112_748
# %bb.370:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	leaq	17(%rsi), %rbx
	movq	192(%rsp), %rax
	movl	$15, %ecx
	cmpq	%r12, %rax
	je	.LBB112_372
# %bb.371:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	208(%rsp), %rcx
.LBB112_372:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	cmpq	%rcx, %rbx
	jbe	.LBB112_374
# %bb.373:
.Ltmp1939:
	leaq	.L.str.123(%rip), %rcx
	leaq	192(%rsp), %rdi
	movl	$17, %r8d
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1940:
	jmp	.LBB112_375
.LBB112_374:
	movups	.L.str.123(%rip), %xmm0
	movups	%xmm0, (%rax,%rsi)
	movb	$32, 16(%rax,%rsi)
.LBB112_375:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
	movq	%rbx, 200(%rsp)
	movq	192(%rsp), %rax
	movb	$0, (%rax,%rbx)
	leaq	144(%rsp), %rdi
	movq	%rdi, 128(%rsp)
	movq	192(%rsp), %rax
	cmpq	%r12, %rax
	je	.LBB112_377
# %bb.376:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	%rax, 128(%rsp)
	movq	200(%rsp), %rbx
	movq	208(%rsp), %rax
	movq	%rax, 144(%rsp)
	jmp	.LBB112_378
.LBB112_377:
	movq	200(%rsp), %rbx
	leaq	1(%rbx), %rdx
	movq	%r12, %rsi
	callq	memcpy@PLT
.LBB112_378:                            # %._crit_edge.i.i547
	movq	%rbx, 136(%rsp)
	movq	%r12, 192(%rsp)
	movq	$0, 200(%rsp)
	movb	$0, 208(%rsp)
	movq	344(%rsp), %rax                 # 8-byte Reload
	movzwl	(%rax), %r14d
	leaq	.L.str.124(%rip), %rax
	leaq	.L.str.125(%rip), %rsi
	testb	$1, %r14b
	cmovneq	%rax, %rsi
	leaq	328(%rsp), %r15
	movq	%r15, 312(%rsp)
	andl	$1, %r14d
	leaq	(%r14,%r14,2), %rbx
	addq	$8, %rbx
	movq	%r15, %rdi
	movq	%rbx, %rdx
	callq	memcpy@PLT
	movq	%rbx, 320(%rsp)
	leaq	(%r14,%r14,2), %rax
	movb	$0, 336(%rsp,%rax)
.Ltmp1941:
	leaq	224(%rsp), %rdi
	leaq	128(%rsp), %rsi
	leaq	312(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp1942:
# %bb.379:
	movq	232(%rsp), %rsi
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	addq	$-49, %rax
	cmpq	%rax, %rsi
	jg	.LBB112_750
# %bb.380:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i555
	leaq	56(%rsi), %rbx
	movq	224(%rsp), %rax
	leaq	240(%rsp), %r14
	movl	$15, %ecx
	cmpq	%r14, %rax
	je	.LBB112_382
# %bb.381:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i555
	movq	240(%rsp), %rcx
.LBB112_382:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i555
	cmpq	%rcx, %rbx
	jbe	.LBB112_385
# %bb.383:
.Ltmp1944:
	leaq	.L.str.126(%rip), %rcx
	leaq	224(%rsp), %rdi
	movl	$56, %r8d
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1945:
# %bb.384:                              # %._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i560_crit_edge
	movq	224(%rsp), %rax
	jmp	.LBB112_386
.LBB112_385:
	movups	.L.str.126+32(%rip), %xmm0
	movups	%xmm0, 32(%rax,%rsi)
	movups	.L.str.126+16(%rip), %xmm0
	movups	%xmm0, 16(%rax,%rsi)
	movups	.L.str.126(%rip), %xmm0
	movups	%xmm0, (%rax,%rsi)
	movabsq	$737011875936628592, %rcx       # imm = 0xA3A646574726F70
	movq	%rcx, 48(%rax,%rsi)
.LBB112_386:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i560
	movq	%rbx, 232(%rsp)
	movb	$0, (%rax,%rbx)
	leaq	40(%rsp), %rbp
	movq	%rbp, 24(%rsp)
	movq	224(%rsp), %rax
	cmpq	%r14, %rax
	je	.LBB112_388
# %bb.387:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i561
	movq	%rax, 24(%rsp)
	movq	232(%rsp), %rbx
	movq	240(%rsp), %rax
	movq	%rax, 40(%rsp)
	jmp	.LBB112_389
.LBB112_388:
	movq	232(%rsp), %rbx
	leaq	1(%rbx), %rdx
	movq	%rbp, %rdi
	movq	%r14, %rsi
	callq	memcpy@PLT
.LBB112_389:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%rbx, 32(%rsp)
	movq	%r14, 224(%rsp)
	movq	$0, 232(%rsp)
	movb	$0, 240(%rsp)
	movq	312(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB112_391
# %bb.390:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i567
	movq	328(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB112_391:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit569
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB112_393
# %bb.392:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i570
	movq	144(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB112_393:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit572
	movq	192(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB112_395
# %bb.394:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i573
	movq	208(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB112_395:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit575
	leaq	208(%rsp), %r15
	xorl	%r12d, %r12d
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %r14
	movl	$3518437209, %edx               # imm = 0xD1B71759
	jmp	.LBB112_397
	.p2align	4, 0x90
.LBB112_396:                            #   in Loop: Header=BB112_397 Depth=1
	movb	$10, (%rax,%rbx)
	movq	%r15, 32(%rsp)
	movq	24(%rsp), %rax
	movb	$0, 1(%rax,%rbx)
	movq	288(%rsp), %rax                 # 8-byte Reload
	movq	128(%rax), %rax
	movl	(%rsp), %ecx                    # 4-byte Reload
	movl	%ecx, %r12d
	movq	%rax, 288(%rsp)                 # 8-byte Spill
	testq	%rax, %rax
	leaq	208(%rsp), %r15
	movl	$3518437209, %edx               # imm = 0xD1B71759
	je	.LBB112_521
.LBB112_397:                            # =>This Loop Header: Depth=1
                                        #     Child Loop BB112_401 Depth 2
                                        #     Child Loop BB112_413 Depth 2
                                        #     Child Loop BB112_464 Depth 2
                                        #     Child Loop BB112_470 Depth 2
	leal	1(%r12), %eax
	cmpl	$9, %r12d
	movl	%eax, (%rsp)                    # 4-byte Spill
	jae	.LBB112_400
# %bb.398:                              # %.thread1561
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	%r15, 192(%rsp)
	movl	$1, %ebx
.LBB112_399:                            #   in Loop: Header=BB112_397 Depth=1
	movb	$45, 208(%rsp)
	movl	$1, %r13d
	jmp	.LBB112_411
	.p2align	4, 0x90
.LBB112_400:                            # %.lr.ph.i.i.preheader
                                        #   in Loop: Header=BB112_397 Depth=1
	movl	$4, %r13d
	.p2align	4, 0x90
.LBB112_401:                            # %.lr.ph.i.i
                                        #   Parent Loop BB112_397 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpl	$99, %eax
	jbe	.LBB112_406
# %bb.402:                              #   in Loop: Header=BB112_401 Depth=2
	cmpl	$999, %eax                      # imm = 0x3E7
	jbe	.LBB112_416
# %bb.403:                              #   in Loop: Header=BB112_401 Depth=2
	cmpl	$10000, %eax                    # imm = 0x2710
	jb	.LBB112_407
# %bb.404:                              #   in Loop: Header=BB112_401 Depth=2
	movl	%eax, %ecx
	imulq	%rdx, %rcx
	shrq	$45, %rcx
	addl	$4, %r13d
	cmpl	$99999, %eax                    # imm = 0x1869F
	movl	%ecx, %eax
	ja	.LBB112_401
# %bb.405:                              # %_ZNSt8__detail14__to_chars_lenIjEEjT_i.exit.i.loopexit
                                        #   in Loop: Header=BB112_397 Depth=1
	addl	$-3, %r13d
	movl	%r13d, %ebx
	movq	%r15, 192(%rsp)
	cmpl	$16, %r13d
	jae	.LBB112_408
	jmp	.LBB112_417
.LBB112_406:                            #   in Loop: Header=BB112_397 Depth=1
	addl	$-2, %r13d
.LBB112_407:                            # %_ZNSt8__detail14__to_chars_lenIjEEjT_i.exit.i
                                        #   in Loop: Header=BB112_397 Depth=1
	movl	%r13d, %ebx
	movq	%r15, 192(%rsp)
	cmpl	$16, %r13d
	jb	.LBB112_417
.LBB112_408:                            #   in Loop: Header=BB112_397 Depth=1
	leaq	1(%rbx), %rdi
.Ltmp1946:
	callq	_Znwm@PLT
.Ltmp1947:
# %bb.409:                              # %.noexc.i597
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	%rax, %r15
	movq	%rax, 192(%rsp)
	movq	%rbx, 208(%rsp)
	jmp	.LBB112_410
.LBB112_416:                            #   in Loop: Header=BB112_397 Depth=1
	decl	%r13d
	movl	%r13d, %ebx
	movq	%r15, 192(%rsp)
	cmpl	$16, %r13d
	jae	.LBB112_408
.LBB112_417:                            #   in Loop: Header=BB112_397 Depth=1
	testl	%r13d, %r13d
	je	.LBB112_411
# %bb.418:                              #   in Loop: Header=BB112_397 Depth=1
	cmpl	$1, %r13d
	jne	.LBB112_410
# %bb.419:                              #   in Loop: Header=BB112_397 Depth=1
	leaq	208(%rsp), %r15
	jmp	.LBB112_399
	.p2align	4, 0x90
.LBB112_410:                            #   in Loop: Header=BB112_397 Depth=1
	movq	%r15, %rdi
	movl	$45, %esi
	movq	%rbx, %rdx
	callq	memset@PLT
.LBB112_411:                            #   in Loop: Header=BB112_397 Depth=1
	movq	%rbx, 200(%rsp)
	movb	$0, (%r15,%rbx)
	movq	192(%rsp), %rax
	movl	(%rsp), %edx                    # 4-byte Reload
	movl	%edx, %ecx
	cmpl	$99, %r12d
	jb	.LBB112_414
# %bb.412:                              # %.lr.ph.preheader.i.i
                                        #   in Loop: Header=BB112_397 Depth=1
	addl	$-2, %r13d
	.p2align	4, 0x90
.LBB112_413:                            # %.lr.ph.i11.i
                                        #   Parent Loop BB112_397 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	leal	1(%r13), %esi
	movl	%edx, %ecx
	imulq	$1374389535, %rcx, %rcx         # imm = 0x51EB851F
	shrq	$37, %rcx
	imull	$100, %ecx, %edi
	movl	%edx, %r8d
	subl	%edi, %r8d
	movzbl	(%r14,%r8,2), %edi
	movzbl	1(%r14,%r8,2), %r8d
	movb	%r8b, (%rax,%rsi)
	movl	%r13d, %esi
	movb	%dil, (%rax,%rsi)
	addl	$-2, %r13d
	cmpl	$9999, %edx                     # imm = 0x270F
	movl	%ecx, %edx
	ja	.LBB112_413
.LBB112_414:                            # %._crit_edge.i.i596
                                        #   in Loop: Header=BB112_397 Depth=1
	cmpl	$10, %ecx
	leaq	144(%rsp), %r15
	jb	.LBB112_420
# %bb.415:                              #   in Loop: Header=BB112_397 Depth=1
	movl	%ecx, %ecx
	leaq	(%rcx,%rcx), %rdx
	movl	%edx, %edx
	movzbl	1(%rdx,%r14), %edx
	movb	%dl, 1(%rax)
	movzbl	(%r14,%rcx,2), %ecx
	jmp	.LBB112_421
	.p2align	4, 0x90
.LBB112_420:                            #   in Loop: Header=BB112_397 Depth=1
	orb	$48, %cl
.LBB112_421:                            # %_ZNSt7__cxx119to_stringEi.exit
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	184(%rsp), %r13                 # 8-byte Reload
	movb	%cl, (%rax)
.Ltmp1949:
	movl	$4, %r8d
	leaq	192(%rsp), %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	leaq	.L.str.127(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.Ltmp1950:
# %bb.422:                              # %.noexc600
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	%r15, 128(%rsp)
	movq	(%rax), %rcx
	movq	%rax, %rbx
	addq	$16, %rbx
	cmpq	%rbx, %rcx
	je	.LBB112_424
# %bb.423:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i598
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	%rcx, 128(%rsp)
	movq	16(%rax), %rcx
	movq	%rcx, 144(%rsp)
	movq	8(%rax), %r15
	jmp	.LBB112_425
	.p2align	4, 0x90
.LBB112_424:                            #   in Loop: Header=BB112_397 Depth=1
	movq	%r15, %rdi
	movq	8(%rax), %r15
	leaq	1(%r15), %rdx
	movq	%rbx, %rsi
	movq	%rax, %r12
	callq	memcpy@PLT
	movq	%r12, %rax
.LBB112_425:                            #   in Loop: Header=BB112_397 Depth=1
	movq	%r15, 136(%rsp)
	movq	%rbx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	136(%rsp), %rsi
	movq	%rsi, %rax
	andq	$-2, %rax
	movabsq	$9223372036854775800, %rcx      # imm = 0x7FFFFFFFFFFFFFF8
	addq	$6, %rcx
	movq	%rcx, 176(%rsp)                 # 8-byte Spill
	cmpq	%rcx, %rax
	je	.LBB112_700
# %bb.426:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i601
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	128(%rsp), %rax
	movl	$15, %ecx
	leaq	144(%rsp), %r15
	cmpq	%r15, %rax
	je	.LBB112_428
# %bb.427:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i601
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	144(%rsp), %rcx
.LBB112_428:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i601
                                        #   in Loop: Header=BB112_397 Depth=1
	leaq	2(%rsi), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB112_430
# %bb.429:                              #   in Loop: Header=BB112_397 Depth=1
.Ltmp1952:
	movl	$2, %r8d
	leaq	128(%rsp), %rdi
	xorl	%edx, %edx
	leaq	.L.str.104(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1953:
	jmp	.LBB112_431
	.p2align	4, 0x90
.LBB112_430:                            #   in Loop: Header=BB112_397 Depth=1
	movw	$8238, (%rax,%rsi)              # imm = 0x202E
.LBB112_431:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i606
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	%rbx, 136(%rsp)
	movq	128(%rsp), %rax
	movb	$0, (%rax,%rbx)
	leaq	240(%rsp), %r12
	movq	%r12, 224(%rsp)
	movq	128(%rsp), %rcx
	cmpq	%r15, %rcx
	je	.LBB112_433
# %bb.432:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i607
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	%rcx, 224(%rsp)
	movq	136(%rsp), %rbx
	movq	144(%rsp), %rax
	movq	%rax, 240(%rsp)
	jmp	.LBB112_434
	.p2align	4, 0x90
.LBB112_433:                            #   in Loop: Header=BB112_397 Depth=1
	movq	136(%rsp), %rbx
	leaq	1(%rbx), %rdx
	movq	%r12, %rdi
	movq	%r15, %rsi
	callq	memcpy@PLT
	movq	%r12, %rcx
.LBB112_434:                            #   in Loop: Header=BB112_397 Depth=1
	movq	%rbx, 232(%rsp)
	movq	%r15, 128(%rsp)
	movq	$0, 136(%rsp)
	movb	$0, 144(%rsp)
	movq	32(%rsp), %rsi
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	subq	%rsi, %rax
	addq	$7, %rax
	cmpq	%rbx, %rax
	jb	.LBB112_702
# %bb.435:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	24(%rsp), %rdi
	movl	$15, %eax
	cmpq	%rbp, %rdi
	je	.LBB112_437
# %bb.436:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	40(%rsp), %rax
.LBB112_437:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
                                        #   in Loop: Header=BB112_397 Depth=1
	leaq	(%rsi,%rbx), %r15
	cmpq	%rax, %r15
	jbe	.LBB112_439
# %bb.438:                              #   in Loop: Header=BB112_397 Depth=1
.Ltmp1955:
	leaq	24(%rsp), %rdi
	xorl	%edx, %edx
	movq	%rbx, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1956:
	jmp	.LBB112_443
	.p2align	4, 0x90
.LBB112_439:                            #   in Loop: Header=BB112_397 Depth=1
	testq	%rbx, %rbx
	je	.LBB112_443
# %bb.440:                              #   in Loop: Header=BB112_397 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %rbx
	jne	.LBB112_442
# %bb.441:                              #   in Loop: Header=BB112_397 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB112_443
.LBB112_442:                            #   in Loop: Header=BB112_397 Depth=1
	movq	%rcx, %rsi
	movq	%rbx, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB112_443:                            #   in Loop: Header=BB112_397 Depth=1
	movq	%r15, 32(%rsp)
	movq	24(%rsp), %rax
	movb	$0, (%rax,%r15)
	movq	224(%rsp), %rdi
	leaq	240(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB112_445
# %bb.444:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i615
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	240(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB112_445:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit617
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	leaq	208(%rsp), %rbx
	je	.LBB112_447
# %bb.446:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i618
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	144(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB112_447:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit620
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	192(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB112_449
# %bb.448:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i621
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	208(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB112_449:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit623
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	344(%rsp), %rax                 # 8-byte Reload
	testb	$1, (%rax)
	je	.LBB112_477
# %bb.450:                              #   in Loop: Header=BB112_397 Depth=1
	movq	288(%rsp), %rax                 # 8-byte Reload
	movq	16(%rax), %rbx
	leaq	240(%rsp), %r12
	movq	%r12, 224(%rsp)
	testq	%rbx, %rbx
	je	.LBB112_710
# %bb.451:                              #   in Loop: Header=BB112_397 Depth=1
	movq	%rbx, %rdi
	callq	strlen@PLT
	movq	%rax, %r15
	cmpq	$16, %rax
	jb	.LBB112_456
# %bb.452:                              #   in Loop: Header=BB112_397 Depth=1
	testq	%r15, %r15
	js	.LBB112_722
# %bb.453:                              #   in Loop: Header=BB112_397 Depth=1
	movq	%r15, %rdi
	incq	%rdi
	js	.LBB112_681
# %bb.454:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i625
                                        #   in Loop: Header=BB112_397 Depth=1
.Ltmp1958:
	callq	_Znwm@PLT
.Ltmp1959:
# %bb.455:                              # %.noexc631
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	%rax, %r12
	movq	%rax, 224(%rsp)
	movq	%r15, 240(%rsp)
.LBB112_456:                            # %._crit_edge.i.i624
                                        #   in Loop: Header=BB112_397 Depth=1
	testq	%r15, %r15
	je	.LBB112_460
# %bb.457:                              # %._crit_edge.i.i624
                                        #   in Loop: Header=BB112_397 Depth=1
	cmpq	$1, %r15
	jne	.LBB112_459
# %bb.458:                              #   in Loop: Header=BB112_397 Depth=1
	movzbl	(%rbx), %eax
	movb	%al, (%r12)
	jmp	.LBB112_460
.LBB112_459:                            #   in Loop: Header=BB112_397 Depth=1
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB112_460:                            #   in Loop: Header=BB112_397 Depth=1
	movq	%r15, 232(%rsp)
	movb	$0, (%r12,%r15)
	movq	224(%rsp), %r12
	movq	232(%rsp), %r13
	testq	%r13, %r13
	je	.LBB112_474
# %bb.461:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm.exit
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	%r12, %rdi
	movl	$40, %esi
	movq	%r13, %rdx
	callq	memchr@PLT
	movq	%rax, %rbx
	subq	%r12, %rbx
	addq	$7, %rbx
	testq	%rax, %rax
	movl	$6, %eax
	cmoveq	%rax, %rbx
	movq	%r13, %rax
	subq	%rbx, %rax
	movq	%rax, 304(%rsp)                 # 8-byte Spill
	jbe	.LBB112_474
# %bb.462:                              #   in Loop: Header=BB112_397 Depth=1
	movq	$-1, %r15
	cmpq	$1, %r13
	je	.LBB112_483
# %bb.463:                              # %.lr.ph.i.i635
                                        #   in Loop: Header=BB112_397 Depth=1
	leaq	(%r12,%r13), %rbp
	movq	%r13, %rdx
	movq	%r12, %rax
	.p2align	4, 0x90
.LBB112_464:                            # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i
                                        #   Parent Loop BB112_397 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	decq	%rdx
	movq	%rax, %rdi
	movl	$44, %esi
	callq	memchr@PLT
	movq	$-1, %r15
	testq	%rax, %rax
	je	.LBB112_467
# %bb.465:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i
                                        #   in Loop: Header=BB112_464 Depth=2
	cmpw	$8236, (%rax)                   # imm = 0x202C
	je	.LBB112_468
# %bb.466:                              #   in Loop: Header=BB112_464 Depth=2
	incq	%rax
	movq	%rbp, %rdx
	subq	%rax, %rdx
	cmpq	$1, %rdx
	ja	.LBB112_464
.LBB112_467:                            #   in Loop: Header=BB112_397 Depth=1
	movq	$-1, %rax
	cmpq	$4, %r13
	leaq	40(%rsp), %rbp
	jae	.LBB112_469
	jmp	.LBB112_472
.LBB112_468:                            #   in Loop: Header=BB112_397 Depth=1
	subq	%r12, %rax
	cmpq	$4, %r13
	leaq	40(%rsp), %rbp
	jb	.LBB112_472
.LBB112_469:                            #   in Loop: Header=BB112_397 Depth=1
	leaq	-4(%r13), %rcx
	.p2align	4, 0x90
.LBB112_470:                            # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i637
                                        #   Parent Loop BB112_397 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpl	$540945696, (%r12,%rcx)         # imm = 0x203E2D20
	je	.LBB112_482
# %bb.471:                              #   in Loop: Header=BB112_470 Depth=2
	addq	$-1, %rcx
	jb	.LBB112_470
.LBB112_472:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcm.exit
                                        #   in Loop: Header=BB112_397 Depth=1
	cmpq	%r13, %rax
	jae	.LBB112_483
.LBB112_473:                            #   in Loop: Header=BB112_397 Depth=1
	leaq	2(%rax), %rcx
	movq	%rcx, 16(%rsp)                  # 8-byte Spill
	subq	%rbx, %rax
	ja	.LBB112_484
	jmp	.LBB112_474
.LBB112_482:                            #   in Loop: Header=BB112_397 Depth=1
	movq	%rcx, %r15
	cmpq	%r13, %rax
	jb	.LBB112_473
.LBB112_483:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm.exit645
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	%r12, %rdi
	movl	$41, %esi
	movq	%r13, %rdx
	callq	memchr@PLT
	movq	%rax, %rcx
	subq	%r12, %rcx
	cmpq	$1, %rax
	movl	$0, %eax
	sbbq	%rax, %rax
	orq	%rcx, %rax
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	subq	%rbx, %rax
	jbe	.LBB112_474
.LBB112_484:                            #   in Loop: Header=BB112_397 Depth=1
	cmpq	%r13, 16(%rsp)                  # 8-byte Folded Reload
	jae	.LBB112_474
# %bb.485:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	304(%rsp), %rcx                 # 8-byte Reload
	cmpq	%rax, %rcx
	cmovbq	%rcx, %rax
	movq	32(%rsp), %rsi
	movabsq	$9223372036854775800, %rcx      # imm = 0x7FFFFFFFFFFFFFF8
	subq	%rsi, %rcx
	addq	$7, %rcx
	cmpq	%rax, %rcx
	movq	184(%rsp), %r13                 # 8-byte Reload
	jb	.LBB112_728
# %bb.486:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i658
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	24(%rsp), %rdi
	movl	$15, %ecx
	cmpq	%rbp, %rdi
	je	.LBB112_488
# %bb.487:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i658
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	40(%rsp), %rcx
.LBB112_488:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i658
                                        #   in Loop: Header=BB112_397 Depth=1
	addq	%rbx, %r12
	leaq	(%rsi,%rax), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB112_500
# %bb.489:                              #   in Loop: Header=BB112_397 Depth=1
.Ltmp1961:
	leaq	24(%rsp), %rdi
	xorl	%edx, %edx
	movq	%r12, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1962:
	jmp	.LBB112_504
	.p2align	4, 0x90
.LBB112_474:                            # %.critedge398
                                        #   in Loop: Header=BB112_397 Depth=1
	leaq	240(%rsp), %rax
	cmpq	%rax, %r12
	je	.LBB112_476
# %bb.475:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i681
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	240(%rsp), %rsi
	incq	%rsi
	movq	%r12, %rdi
	callq	_ZdlPvm@PLT
.LBB112_476:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit683
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	184(%rsp), %r13                 # 8-byte Reload
.LBB112_477:                            # %.critedge
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	288(%rsp), %rax                 # 8-byte Reload
	movq	16(%rax), %rbx
	movq	%rbx, %rdi
	callq	strlen@PLT
	movq	32(%rsp), %rsi
	movabsq	$9223372036854775800, %rcx      # imm = 0x7FFFFFFFFFFFFFF8
	subq	%rsi, %rcx
	addq	$7, %rcx
	cmpq	%rax, %rcx
	jb	.LBB112_704
# %bb.478:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i684
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	24(%rsp), %rdi
	movl	$15, %ecx
	cmpq	%rbp, %rdi
	je	.LBB112_480
# %bb.479:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i684
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	40(%rsp), %rcx
.LBB112_480:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i684
                                        #   in Loop: Header=BB112_397 Depth=1
	leaq	(%rsi,%rax), %r15
	cmpq	%rcx, %r15
	jbe	.LBB112_490
# %bb.481:                              #   in Loop: Header=BB112_397 Depth=1
.Ltmp1973:
	leaq	24(%rsp), %rdi
	xorl	%edx, %edx
	movq	%rbx, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1974:
	jmp	.LBB112_494
	.p2align	4, 0x90
.LBB112_490:                            #   in Loop: Header=BB112_397 Depth=1
	testq	%rax, %rax
	je	.LBB112_494
# %bb.491:                              #   in Loop: Header=BB112_397 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %rax
	jne	.LBB112_493
# %bb.492:                              #   in Loop: Header=BB112_397 Depth=1
	movzbl	(%rbx), %eax
	movb	%al, (%rdi)
	jmp	.LBB112_494
.LBB112_493:                            #   in Loop: Header=BB112_397 Depth=1
	movq	%rbx, %rsi
	movq	%rax, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB112_494:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit692
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	%r15, 32(%rsp)
	movq	24(%rsp), %rax
	movb	$0, (%rax,%r15)
.LBB112_495:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i693
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	24(%rsp), %rax
	movq	32(%rsp), %rbx
	movl	$15, %ecx
	cmpq	%rbp, %rax
	je	.LBB112_497
# %bb.496:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i693
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	40(%rsp), %rcx
.LBB112_497:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i693
                                        #   in Loop: Header=BB112_397 Depth=1
	leaq	1(%rbx), %r15
	cmpq	%rcx, %r15
	jbe	.LBB112_396
# %bb.498:                              #   in Loop: Header=BB112_397 Depth=1
.Ltmp1975:
	movl	$1, %r8d
	leaq	24(%rsp), %rdi
	movq	%rbx, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1976:
# %bb.499:                              # %.noexc695
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	24(%rsp), %rax
	jmp	.LBB112_396
.LBB112_500:                            #   in Loop: Header=BB112_397 Depth=1
	testq	%rax, %rax
	je	.LBB112_504
# %bb.501:                              #   in Loop: Header=BB112_397 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %rax
	jne	.LBB112_503
# %bb.502:                              #   in Loop: Header=BB112_397 Depth=1
	movzbl	(%r12), %eax
	movb	%al, (%rdi)
	jmp	.LBB112_504
.LBB112_503:                            #   in Loop: Header=BB112_397 Depth=1
	movq	%r12, %rsi
	movq	%rax, %rdx
	callq	memcpy@PLT
.LBB112_504:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	%rbx, 32(%rsp)
	movq	24(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	24(%rsp), %rax
	movq	32(%rsp), %rbx
	movl	$15, %ecx
	cmpq	%rbp, %rax
	je	.LBB112_506
# %bb.505:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	40(%rsp), %rcx
.LBB112_506:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB112_397 Depth=1
	leaq	1(%rbx), %r12
	cmpq	%rcx, %r12
	jbe	.LBB112_509
# %bb.507:                              #   in Loop: Header=BB112_397 Depth=1
.Ltmp1963:
	movl	$1, %r8d
	leaq	24(%rsp), %rdi
	movq	%rbx, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1964:
# %bb.508:                              # %.noexc666
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	24(%rsp), %rax
.LBB112_509:                            #   in Loop: Header=BB112_397 Depth=1
	movb	$40, (%rax,%rbx)
	movq	%r12, 32(%rsp)
	movq	24(%rsp), %rax
	movb	$0, 1(%rax,%rbx)
	movq	232(%rsp), %rcx
	movq	%rcx, %rax
	movq	16(%rsp), %rdx                  # 8-byte Reload
	subq	%rdx, %rax
	jb	.LBB112_739
# %bb.510:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i667
                                        #   in Loop: Header=BB112_397 Depth=1
	subq	%rdx, %r15
	cmpq	%r15, %rax
	cmovbq	%rax, %r15
	movq	32(%rsp), %rsi
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	subq	%rsi, %rax
	addq	$7, %rax
	cmpq	%r15, %rax
	jb	.LBB112_728
# %bb.511:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i669
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	24(%rsp), %rdi
	movl	$15, %eax
	cmpq	%rbp, %rdi
	je	.LBB112_513
# %bb.512:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i669
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	40(%rsp), %rax
.LBB112_513:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i669
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	16(%rsp), %rcx                  # 8-byte Reload
	addq	224(%rsp), %rcx
	leaq	(%rsi,%r15), %rbx
	cmpq	%rax, %rbx
	jbe	.LBB112_515
# %bb.514:                              #   in Loop: Header=BB112_397 Depth=1
.Ltmp1965:
	leaq	24(%rsp), %rdi
	xorl	%edx, %edx
	movq	%r15, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1966:
	jmp	.LBB112_519
.LBB112_515:                            #   in Loop: Header=BB112_397 Depth=1
	testq	%r15, %r15
	je	.LBB112_519
# %bb.516:                              #   in Loop: Header=BB112_397 Depth=1
	movq	%rcx, %rax
	addq	%rsi, %rdi
	cmpq	$1, %r15
	jne	.LBB112_518
# %bb.517:                              #   in Loop: Header=BB112_397 Depth=1
	movzbl	(%rax), %eax
	movb	%al, (%rdi)
	jmp	.LBB112_519
.LBB112_518:                            #   in Loop: Header=BB112_397 Depth=1
	movq	%rax, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB112_519:                            #   in Loop: Header=BB112_397 Depth=1
	movq	%rbx, 32(%rsp)
	movq	24(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	224(%rsp), %rdi
	leaq	240(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB112_495
# %bb.520:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i678
                                        #   in Loop: Header=BB112_397 Depth=1
	movq	240(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB112_495
.LBB112_521:
	movq	32(%rsp), %rsi
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	addq	$-8, %rax
	cmpq	%rax, %rsi
	jg	.LBB112_752
# %bb.522:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i576
	leaq	15(%rsi), %rbx
	movq	24(%rsp), %rax
	movl	$15, %ecx
	cmpq	%rbp, %rax
	je	.LBB112_524
# %bb.523:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i576
	movq	40(%rsp), %rcx
.LBB112_524:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i576
	cmpq	%rcx, %rbx
	jbe	.LBB112_526
# %bb.525:
.Ltmp1978:
	leaq	.L.str.130(%rip), %rcx
	leaq	24(%rsp), %rdi
	movl	$15, %r8d
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1979:
	jmp	.LBB112_527
.LBB112_526:
	movabsq	$2322283407057821796, %rcx      # imm = 0x203A687469772064
	movq	%rcx, 7(%rax,%rsi)
	movabsq	$7234306502913050890, %rcx      # imm = 0x64656B6F766E490A
	movq	%rcx, (%rax,%rsi)
.LBB112_527:
	movq	%rbx, 32(%rsp)
	movq	24(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	%r13, 312(%rsp)
.Ltmp1980:
	leaq	312(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1981:
# %bb.528:                              # %_ZN8pybind1118reinterpret_borrowINS_5tupleEEET_NS_6handleE.exit698
	movq	344(%rsp), %rax                 # 8-byte Reload
	movzwl	(%rax), %r13d
	andl	$1, %r13d
	xorl	%r15d, %r15d
	leaq	8(%rsp), %rbp
	leaq	224(%rsp), %r12
	leaq	192(%rsp), %r14
	.p2align	4, 0x90
.LBB112_529:                            # =>This Inner Loop Header: Depth=1
	movq	312(%rsp), %rdi
.Ltmp1983:
	callq	PyTuple_Size@PLT
.Ltmp1984:
# %bb.530:                              # %_ZNK8pybind115tuple4sizeEv.exit
                                        #   in Loop: Header=BB112_529 Depth=1
	cmpq	%rax, %r13
	jae	.LBB112_573
# %bb.531:                              #   in Loop: Header=BB112_529 Depth=1
	movb	$1, %bl
	testb	$1, %r15b
	je	.LBB112_539
# %bb.532:                              #   in Loop: Header=BB112_529 Depth=1
	movq	32(%rsp), %rsi
	movq	%rsi, %rax
	andq	$-2, %rax
	cmpq	176(%rsp), %rax                 # 8-byte Folded Reload
	je	.LBB112_712
# %bb.533:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i700
                                        #   in Loop: Header=BB112_529 Depth=1
	movq	24(%rsp), %rax
	movl	$15, %ecx
	leaq	40(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB112_535
# %bb.534:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i700
                                        #   in Loop: Header=BB112_529 Depth=1
	movq	40(%rsp), %rcx
.LBB112_535:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i700
                                        #   in Loop: Header=BB112_529 Depth=1
	leaq	2(%rsi), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB112_537
# %bb.536:                              #   in Loop: Header=BB112_529 Depth=1
.Ltmp2087:
	movl	$2, %r8d
	leaq	24(%rsp), %rdi
	xorl	%edx, %edx
	leaq	.L.str.128(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2088:
	jmp	.LBB112_538
	.p2align	4, 0x90
.LBB112_537:                            #   in Loop: Header=BB112_529 Depth=1
	movw	$8236, (%rax,%rsi)              # imm = 0x202C
.LBB112_538:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit708
                                        #   in Loop: Header=BB112_529 Depth=1
	movq	%rbx, 32(%rsp)
	movq	24(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movl	%r15d, %ebx
.LBB112_539:                            #   in Loop: Header=BB112_529 Depth=1
	movq	312(%rsp), %rax
	movq	%rax, 136(%rsp)
	movq	%r13, 144(%rsp)
	movq	$0, 152(%rsp)
.Ltmp2090:
	leaq	128(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv
.Ltmp2091:
# %bb.540:                              # %.noexc710
                                        #   in Loop: Header=BB112_529 Depth=1
	movq	(%rax), %rax
	movq	%rax, 8(%rsp)
.Ltmp2092:
	movq	%rbp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2093:
# %bb.541:                              # %_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEEcvNS_6objectEEv.exit
                                        #   in Loop: Header=BB112_529 Depth=1
	movq	8(%rsp), %rdi
.Ltmp2095:
	callq	PyObject_Repr@PLT
.Ltmp2096:
# %bb.542:                              # %.noexc713
                                        #   in Loop: Header=BB112_529 Depth=1
	testq	%rax, %rax
	je	.LBB112_559
# %bb.543:                              #   in Loop: Header=BB112_529 Depth=1
	movq	%rax, 192(%rsp)
.Ltmp2097:
	movq	%r12, %rdi
	movq	%r14, %rsi
	callq	_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv
.Ltmp2098:
# %bb.544:                              #   in Loop: Header=BB112_529 Depth=1
	movq	232(%rsp), %r8
	movq	32(%rsp), %rsi
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	subq	%rsi, %rax
	addq	$7, %rax
	cmpq	%r8, %rax
	jb	.LBB112_761
# %bb.545:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i717
                                        #   in Loop: Header=BB112_529 Depth=1
	movq	24(%rsp), %rdi
	movl	$15, %eax
	leaq	40(%rsp), %rcx
	cmpq	%rcx, %rdi
	je	.LBB112_547
# %bb.546:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i717
                                        #   in Loop: Header=BB112_529 Depth=1
	movq	40(%rsp), %rax
.LBB112_547:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i717
                                        #   in Loop: Header=BB112_529 Depth=1
	movq	224(%rsp), %rcx
	leaq	(%rsi,%r8), %r15
	cmpq	%rax, %r15
	jbe	.LBB112_549
# %bb.548:                              #   in Loop: Header=BB112_529 Depth=1
.Ltmp2100:
	leaq	24(%rsp), %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2101:
	jmp	.LBB112_553
	.p2align	4, 0x90
.LBB112_549:                            #   in Loop: Header=BB112_529 Depth=1
	testq	%r8, %r8
	je	.LBB112_553
# %bb.550:                              #   in Loop: Header=BB112_529 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB112_552
# %bb.551:                              #   in Loop: Header=BB112_529 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB112_553
.LBB112_552:                            #   in Loop: Header=BB112_529 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB112_553:                            #   in Loop: Header=BB112_529 Depth=1
	movq	%r15, 32(%rsp)
	movq	24(%rsp), %rax
	movb	$0, (%rax,%r15)
	movq	224(%rsp), %rdi
	leaq	240(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB112_555
# %bb.554:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i725
                                        #   in Loop: Header=BB112_529 Depth=1
	movq	240(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB112_555:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit727
                                        #   in Loop: Header=BB112_529 Depth=1
.Ltmp2102:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2103:
# %bb.556:                              # %_ZN8pybind116objectD2Ev.exit728
                                        #   in Loop: Header=BB112_529 Depth=1
.Ltmp2105:
	movq	%rbp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2106:
# %bb.557:                              # %_ZN8pybind116objectD2Ev.exit729
                                        #   in Loop: Header=BB112_529 Depth=1
.Ltmp2108:
	leaq	152(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2109:
.LBB112_558:                            #   in Loop: Header=BB112_529 Depth=1
	incq	%r13
	movl	%ebx, %r15d
	jmp	.LBB112_529
.LBB112_559:                            #   in Loop: Header=BB112_529 Depth=1
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
.Ltmp2117:
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2118:
# %bb.560:                              #   in Loop: Header=BB112_529 Depth=1
.Ltmp2120:
	movq	16(%rsp), %rdi                  # 8-byte Reload
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	callq	__cxa_throw@PLT
.Ltmp2121:
	jmp	.LBB112_760
.LBB112_761:                            #   in Loop: Header=BB112_529 Depth=1
.Ltmp2111:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2112:
	jmp	.LBB112_762
.LBB112_561:                            #   in Loop: Header=BB112_529 Depth=1
.Ltmp2119:
	movq	%rdx, %r15
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	16(%rsp), %rdi                  # 8-byte Reload
	callq	__cxa_free_exception@PLT
	jmp	.LBB112_567
.LBB112_562:                            #   in Loop: Header=BB112_529 Depth=1
.Ltmp2099:
	movq	%rdx, %r15
	movq	%rax, (%rsp)                    # 8-byte Spill
	jmp	.LBB112_565
.LBB112_563:                            #   in Loop: Header=BB112_529 Depth=1
.Ltmp2113:
	movq	%rdx, %r15
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	224(%rsp), %rdi
	leaq	240(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB112_565
# %bb.564:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i732
                                        #   in Loop: Header=BB112_529 Depth=1
	movq	240(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB112_565:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit734
                                        #   in Loop: Header=BB112_529 Depth=1
.Ltmp2114:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2115:
	jmp	.LBB112_567
.LBB112_566:                            #   in Loop: Header=BB112_529 Depth=1
.Ltmp2122:
	movq	%rdx, %r15
	movq	%rax, (%rsp)                    # 8-byte Spill
.LBB112_567:                            # %.body715
                                        #   in Loop: Header=BB112_529 Depth=1
.Ltmp2123:
	movq	%rbp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2124:
	jmp	.LBB112_569
.LBB112_568:                            #   in Loop: Header=BB112_529 Depth=1
.Ltmp2094:
	movq	%rdx, %r15
	movq	%rax, (%rsp)                    # 8-byte Spill
.LBB112_569:                            # %_ZN8pybind116objectD2Ev.exit736
                                        #   in Loop: Header=BB112_529 Depth=1
.Ltmp2126:
	leaq	152(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2127:
# %bb.570:                              # %_ZN8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEED2Ev.exit738
                                        #   in Loop: Header=BB112_529 Depth=1
	cmpl	$3, %r15d
	jne	.LBB112_892
# %bb.571:                              #   in Loop: Header=BB112_529 Depth=1
	movq	(%rsp), %rdi                    # 8-byte Reload
	callq	__cxa_begin_catch@PLT
.Ltmp2129:
	leaq	24(%rsp), %rdi
	leaq	.L.str.131(%rip), %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc@PLT
.Ltmp2130:
# %bb.572:                              #   in Loop: Header=BB112_529 Depth=1
.Ltmp2135:
	callq	__cxa_end_catch@PLT
.Ltmp2136:
	jmp	.LBB112_558
.LBB112_573:
	movq	296(%rsp), %rax                 # 8-byte Reload
	testq	%rax, %rax
	je	.LBB112_649
# %bb.574:
	movq	%rax, 8(%rsp)
.Ltmp1985:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1986:
# %bb.575:                              # %_ZN8pybind1118reinterpret_borrowINS_4dictEEET_NS_6handleE.exit740
	movq	8(%rsp), %rdi
.Ltmp1988:
	leaq	40(%rsp), %r14
	callq	PyDict_Size@PLT
.Ltmp1989:
# %bb.576:
	testq	%rax, %rax
	je	.LBB112_648
# %bb.577:
	testb	$1, %r15b
	je	.LBB112_579
# %bb.578:
.Ltmp1990:
	leaq	.L.str.132(%rip), %rsi
	leaq	24(%rsp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc@PLT
.Ltmp1991:
.LBB112_579:
	movq	32(%rsp), %rsi
	movq	%rsi, %rax
	andq	$-8, %rax
	movabsq	$9223372036854775800, %rcx      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rcx, %rax
	je	.LBB112_756
# %bb.580:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i743
	leaq	8(%rsi), %rbx
	movq	24(%rsp), %rax
	movl	$15, %ecx
	cmpq	%r14, %rax
	je	.LBB112_582
# %bb.581:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i743
	movq	40(%rsp), %rcx
.LBB112_582:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i743
	cmpq	%rcx, %rbx
	jbe	.LBB112_591
# %bb.583:
.Ltmp1992:
	leaq	.L.str.133(%rip), %rcx
	leaq	24(%rsp), %rdi
	movl	$8, %r8d
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1993:
	jmp	.LBB112_592
.LBB112_584:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcm.exit.i848
	subq	%r15, %rax
	cmpq	$-1, %rax
	je	.LBB112_664
# %bb.585:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcm.exit.thread5.i850
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	addq	$-235, %rax
	cmpq	%rax, %rbx
	jg	.LBB112_741
# %bb.586:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i851
	leaq	242(%rbx), %r13
	movl	$15, %eax
	cmpq	%r12, %r15
	je	.LBB112_588
# %bb.587:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i851
	movq	40(%rsp), %rax
.LBB112_588:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i851
	cmpq	%rax, %r13
	jbe	.LBB112_662
# %bb.589:
.Ltmp1925:
	leaq	.L.str.159(%rip), %rcx
	leaq	24(%rsp), %rdi
	movl	$242, %r8d
	movq	%rbx, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1926:
# %bb.590:                              # %._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit.i854_crit_edge
	movq	24(%rsp), %r15
	jmp	.LBB112_663
.LBB112_591:
	movabsq	$2322295446000727915, %rcx      # imm = 0x203A73677261776B
	movq	%rcx, (%rax,%rsi)
.LBB112_592:
	movq	%rbx, 32(%rsp)
	movq	24(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	8(%rsp), %rdi
	movq	%rdi, 224(%rsp)
	leaq	232(%rsp), %rdx
	leaq	240(%rsp), %rcx
	leaq	248(%rsp), %rsi
	xorps	%xmm0, %xmm0
	movups	%xmm0, 232(%rsp)
	movq	$0, 248(%rsp)
.Ltmp1994:
	movq	%rcx, %r13
	callq	PyDict_Next@PLT
.Ltmp1995:
# %bb.593:                              # %.noexc753
	testl	%eax, %eax
	je	.LBB112_648
# %bb.594:                              # %.noexc753
	cmpq	$-1, 248(%rsp)
	je	.LBB112_648
# %bb.595:                              # %.lr.ph1483
	movups	232(%rsp), %xmm0
	movaps	%xmm0, 192(%rsp)
	leaq	480(%rsp), %r14
	leaq	456(%rsp), %rbx
	leaq	128(%rsp), %r15
	leaq	24(%rsp), %rbp
	jmp	.LBB112_598
	.p2align	4, 0x90
.LBB112_596:                            #   in Loop: Header=BB112_598 Depth=1
	movw	$8236, (%rax,%rsi)              # imm = 0x202C
.LBB112_597:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit762
                                        #   in Loop: Header=BB112_598 Depth=1
	movq	%r12, 32(%rsp)
	movq	24(%rsp), %rax
	movb	$0, (%rax,%r12)
.LBB112_598:                            # =>This Inner Loop Header: Depth=1
.Ltmp1997:
	movq	%r14, %rdi
	leaq	.L.str.134(%rip), %rsi
	callq	_ZN8pybind113strC2EPKc
.Ltmp1998:
# %bb.599:                              #   in Loop: Header=BB112_598 Depth=1
.Ltmp2000:
	movq	%rbx, %rdi
	movq	%r14, %rsi
	leaq	192(%rsp), %rdx
	callq	_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_
.Ltmp2001:
# %bb.600:                              #   in Loop: Header=BB112_598 Depth=1
.Ltmp2003:
	movq	%r15, %rdi
	movq	%rbx, %rsi
	callq	_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv
.Ltmp2004:
# %bb.601:                              #   in Loop: Header=BB112_598 Depth=1
	movq	136(%rsp), %r8
	movq	32(%rsp), %rsi
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	subq	%rsi, %rax
	addq	$7, %rax
	cmpq	%r8, %rax
	jb	.LBB112_724
# %bb.602:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i763
                                        #   in Loop: Header=BB112_598 Depth=1
	movq	24(%rsp), %rdi
	movl	$15, %eax
	leaq	40(%rsp), %rcx
	cmpq	%rcx, %rdi
	je	.LBB112_604
# %bb.603:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i763
                                        #   in Loop: Header=BB112_598 Depth=1
	movq	40(%rsp), %rax
.LBB112_604:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i763
                                        #   in Loop: Header=BB112_598 Depth=1
	movq	128(%rsp), %rcx
	leaq	(%rsi,%r8), %r12
	cmpq	%rax, %r12
	jbe	.LBB112_606
# %bb.605:                              #   in Loop: Header=BB112_598 Depth=1
.Ltmp2006:
	movq	%rbp, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2007:
	jmp	.LBB112_610
	.p2align	4, 0x90
.LBB112_606:                            #   in Loop: Header=BB112_598 Depth=1
	testq	%r8, %r8
	je	.LBB112_610
# %bb.607:                              #   in Loop: Header=BB112_598 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB112_609
# %bb.608:                              #   in Loop: Header=BB112_598 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB112_610
.LBB112_609:                            #   in Loop: Header=BB112_598 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB112_610:                            #   in Loop: Header=BB112_598 Depth=1
	movq	%r12, 32(%rsp)
	movq	24(%rsp), %rax
	movb	$0, (%rax,%r12)
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB112_612
# %bb.611:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i771
                                        #   in Loop: Header=BB112_598 Depth=1
	movq	144(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB112_612:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit773
                                        #   in Loop: Header=BB112_598 Depth=1
.Ltmp2009:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2010:
# %bb.613:                              # %_ZN8pybind116objectD2Ev.exit774
                                        #   in Loop: Header=BB112_598 Depth=1
.Ltmp2012:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2013:
# %bb.614:                              # %_ZN8pybind116objectD2Ev.exit775
                                        #   in Loop: Header=BB112_598 Depth=1
	movq	200(%rsp), %rdi
.Ltmp2015:
	callq	PyObject_Repr@PLT
.Ltmp2016:
# %bb.615:                              # %.noexc777
                                        #   in Loop: Header=BB112_598 Depth=1
	testq	%rax, %rax
	je	.LBB112_637
# %bb.616:                              #   in Loop: Header=BB112_598 Depth=1
	movq	%rax, 456(%rsp)
.Ltmp2017:
	movq	%r15, %rdi
	movq	%rbx, %rsi
	callq	_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv
.Ltmp2018:
# %bb.617:                              #   in Loop: Header=BB112_598 Depth=1
	movq	136(%rsp), %r8
	movq	32(%rsp), %rsi
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	subq	%rsi, %rax
	addq	$7, %rax
	cmpq	%r8, %rax
	jb	.LBB112_764
# %bb.618:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i782
                                        #   in Loop: Header=BB112_598 Depth=1
	movq	24(%rsp), %rdi
	movl	$15, %eax
	leaq	40(%rsp), %rcx
	cmpq	%rcx, %rdi
	je	.LBB112_620
# %bb.619:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i782
                                        #   in Loop: Header=BB112_598 Depth=1
	movq	40(%rsp), %rax
.LBB112_620:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i782
                                        #   in Loop: Header=BB112_598 Depth=1
	movq	128(%rsp), %rcx
	leaq	(%rsi,%r8), %r12
	cmpq	%rax, %r12
	jbe	.LBB112_622
# %bb.621:                              #   in Loop: Header=BB112_598 Depth=1
.Ltmp2020:
	movq	%rbp, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2021:
	jmp	.LBB112_626
	.p2align	4, 0x90
.LBB112_622:                            #   in Loop: Header=BB112_598 Depth=1
	testq	%r8, %r8
	je	.LBB112_626
# %bb.623:                              #   in Loop: Header=BB112_598 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB112_625
# %bb.624:                              #   in Loop: Header=BB112_598 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB112_626
.LBB112_625:                            #   in Loop: Header=BB112_598 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB112_626:                            #   in Loop: Header=BB112_598 Depth=1
	movq	%r12, 32(%rsp)
	movq	24(%rsp), %rax
	movb	$0, (%rax,%r12)
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB112_628
# %bb.627:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i790
                                        #   in Loop: Header=BB112_598 Depth=1
	movq	144(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB112_628:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit792
                                        #   in Loop: Header=BB112_598 Depth=1
.Ltmp2022:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2023:
.LBB112_629:                            #   in Loop: Header=BB112_598 Depth=1
	movq	224(%rsp), %rdi
.Ltmp2045:
	leaq	248(%rsp), %rsi
	leaq	232(%rsp), %rdx
	movq	%r13, %rcx
	callq	PyDict_Next@PLT
.Ltmp2046:
# %bb.630:                              # %.noexc803
                                        #   in Loop: Header=BB112_598 Depth=1
	testl	%eax, %eax
	je	.LBB112_648
# %bb.631:                              # %.noexc803
                                        #   in Loop: Header=BB112_598 Depth=1
	cmpq	$-1, 248(%rsp)
	je	.LBB112_648
# %bb.632:                              #   in Loop: Header=BB112_598 Depth=1
	movups	232(%rsp), %xmm0
	movaps	%xmm0, 192(%rsp)
	movq	32(%rsp), %rsi
	movq	%rsi, %rax
	andq	$-2, %rax
	cmpq	176(%rsp), %rax                 # 8-byte Folded Reload
	je	.LBB112_726
# %bb.633:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i754
                                        #   in Loop: Header=BB112_598 Depth=1
	movq	24(%rsp), %rax
	movl	$15, %ecx
	leaq	40(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB112_635
# %bb.634:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i754
                                        #   in Loop: Header=BB112_598 Depth=1
	movq	40(%rsp), %rcx
.LBB112_635:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i754
                                        #   in Loop: Header=BB112_598 Depth=1
	leaq	2(%rsi), %r12
	cmpq	%rcx, %r12
	jbe	.LBB112_596
# %bb.636:                              #   in Loop: Header=BB112_598 Depth=1
.Ltmp2048:
	movl	$2, %r8d
	movq	%rbp, %rdi
	xorl	%edx, %edx
	leaq	.L.str.128(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2049:
	jmp	.LBB112_597
.LBB112_637:                            #   in Loop: Header=BB112_598 Depth=1
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
.Ltmp2031:
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2032:
# %bb.638:                              #   in Loop: Header=BB112_598 Depth=1
.Ltmp2034:
	movq	16(%rsp), %rdi                  # 8-byte Reload
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	callq	__cxa_throw@PLT
.Ltmp2035:
	jmp	.LBB112_763
.LBB112_764:                            #   in Loop: Header=BB112_598 Depth=1
.Ltmp2025:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2026:
	jmp	.LBB112_765
.LBB112_639:                            #   in Loop: Header=BB112_598 Depth=1
.Ltmp2033:
	movq	%rdx, %r12
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	16(%rsp), %rdi                  # 8-byte Reload
	callq	__cxa_free_exception@PLT
	jmp	.LBB112_645
.LBB112_640:                            #   in Loop: Header=BB112_598 Depth=1
.Ltmp2019:
	movq	%rdx, %r12
	movq	%rax, (%rsp)                    # 8-byte Spill
	jmp	.LBB112_643
.LBB112_641:                            #   in Loop: Header=BB112_598 Depth=1
.Ltmp2027:
	movq	%rdx, %r12
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB112_643
# %bb.642:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i799
                                        #   in Loop: Header=BB112_598 Depth=1
	movq	144(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB112_643:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit801
                                        #   in Loop: Header=BB112_598 Depth=1
.Ltmp2028:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2029:
	jmp	.LBB112_645
.LBB112_644:                            #   in Loop: Header=BB112_598 Depth=1
.Ltmp2036:
	movq	%rdx, %r12
	movq	%rax, (%rsp)                    # 8-byte Spill
.LBB112_645:                            # %.body779
                                        #   in Loop: Header=BB112_598 Depth=1
	cmpl	$3, %r12d
	jne	.LBB112_839
# %bb.646:                              #   in Loop: Header=BB112_598 Depth=1
	movq	(%rsp), %rdi                    # 8-byte Reload
	callq	__cxa_begin_catch@PLT
.Ltmp2037:
	movq	%rbp, %rdi
	leaq	.L.str.131(%rip), %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc@PLT
.Ltmp2038:
# %bb.647:                              #   in Loop: Header=BB112_598 Depth=1
.Ltmp2042:
	callq	__cxa_end_catch@PLT
.Ltmp2043:
	jmp	.LBB112_629
.LBB112_648:
.Ltmp2069:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2070:
.LBB112_649:
	movq	32(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB112_672
# %bb.650:
	cmpq	$5, %rbx
	jb	.LBB112_672
# %bb.651:                              # %.lr.ph.i.i.i
	movq	24(%rsp), %r15
	leaq	(%r15,%rbx), %r14
	movl	$979661939, %ebp                # imm = 0x3A647473
	movq	%rbx, %rdx
	movq	%r15, %rax
	.p2align	4, 0x90
.LBB112_652:                            # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	addq	$-4, %rdx
	movq	%rax, %rdi
	movl	$115, %esi
	callq	memchr@PLT
	testq	%rax, %rax
	je	.LBB112_672
# %bb.653:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
                                        #   in Loop: Header=BB112_652 Depth=1
	movl	(%rax), %ecx
	xorl	%ebp, %ecx
	movzbl	4(%rax), %edx
	xorl	$58, %edx
	orl	%ecx, %edx
	je	.LBB112_655
# %bb.654:                              #   in Loop: Header=BB112_652 Depth=1
	incq	%rax
	movq	%r14, %rdx
	subq	%rax, %rdx
	cmpq	$5, %rdx
	jae	.LBB112_652
	jmp	.LBB112_672
.LBB112_655:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcm.exit.i
	subq	%r15, %rax
	cmpq	$-1, %rax
	je	.LBB112_672
# %bb.656:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcm.exit.thread5.i
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	addq	$-235, %rax
	cmpq	%rax, %rbx
	jg	.LBB112_758
# %bb.657:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i807
	leaq	242(%rbx), %r12
	movl	$15, %eax
	leaq	40(%rsp), %rcx
	cmpq	%rcx, %r15
	je	.LBB112_659
# %bb.658:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i807
	movq	40(%rsp), %rax
.LBB112_659:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i807
	cmpq	%rax, %r12
	jbe	.LBB112_670
# %bb.660:
.Ltmp2072:
	leaq	.L.str.159(%rip), %rcx
	leaq	24(%rsp), %rdi
	movl	$242, %r8d
	movq	%rbx, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2073:
# %bb.661:                              # %._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit.i_crit_edge
	movq	24(%rsp), %r15
	jmp	.LBB112_671
.LBB112_662:
	leaq	.L.str.159(%rip), %rsi
	movl	$242, %edx
	movq	%r14, %rdi
	callq	memcpy@PLT
.LBB112_663:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit.i854
	movq	%r13, 32(%rsp)
	movb	$0, (%r15,%r13)
.LBB112_664:                            # %_ZZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_ENKUlRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_clES9_.exit857
.Ltmp1927:
	callq	PyErr_Occurred@PLT
.Ltmp1928:
# %bb.665:
	movq	PyExc_TypeError@GOTPCREL(%rip), %rcx
	movq	(%rcx), %rdi
	movq	24(%rsp), %rsi
	testq	%rax, %rax
	je	.LBB112_667
# %bb.666:
.Ltmp1929:
	callq	_ZN8pybind1110raise_fromEP7_objectPKc
.Ltmp1930:
	jmp	.LBB112_668
.LBB112_667:
.Ltmp1931:
	callq	PyErr_SetString@PLT
.Ltmp1932:
.LBB112_668:                            # %_ZN8pybind119set_errorERKNS_6handleEPKc.exit859
	movq	24(%rsp), %rdi
	cmpq	%r12, %rdi
	jne	.LBB112_678
	jmp	.LBB112_679
.LBB112_670:
	leaq	.L.str.159(%rip), %rsi
	movl	$242, %edx
	movq	%r14, %rdi
	callq	memcpy@PLT
.LBB112_671:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit.i
	movq	%r12, 32(%rsp)
	movb	$0, (%r15,%r12)
.LBB112_672:                            # %_ZZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_ENKUlRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_clES9_.exit
.Ltmp2076:
	leaq	40(%rsp), %rbx
	callq	PyErr_Occurred@PLT
.Ltmp2077:
# %bb.673:
	movq	PyExc_TypeError@GOTPCREL(%rip), %rcx
	movq	(%rcx), %rdi
	movq	24(%rsp), %rsi
	testq	%rax, %rax
	je	.LBB112_675
# %bb.674:
.Ltmp2078:
	callq	_ZN8pybind1110raise_fromEP7_objectPKc
.Ltmp2079:
	jmp	.LBB112_676
.LBB112_675:
.Ltmp2081:
	callq	PyErr_SetString@PLT
.Ltmp2082:
.LBB112_676:                            # %_ZN8pybind119set_errorERKNS_6handleEPKc.exit
.Ltmp2084:
	leaq	312(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2085:
# %bb.677:                              # %_ZN8pybind116objectD2Ev.exit813
	movq	24(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB112_679
.LBB112_678:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i814
	movq	40(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB112_679:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit816
	xorl	%r14d, %r14d
.LBB112_680:
	movq	%r14, %rax
	addq	$488, %rsp                      # imm = 0x1E8
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB112_681:                            # %.noexc11.i626
	.cfi_def_cfa_offset 544
.Ltmp2150:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp2151:
# %bb.682:                              # %.noexc630
.LBB112_683:
	leaq	.L.str.120(%rip), %rdi
	leaq	.L.str.118(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_(%rip), %rcx
	movl	$820, %edx                      # imm = 0x334
	callq	__assert_fail@PLT
.LBB112_684:                            # %.noexc11.i
.Ltmp2169:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp2170:
# %bb.685:                              # %.noexc541
.LBB112_686:
.Ltmp1877:
	leaq	.L.str.106(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1878:
# %bb.687:                              # %.noexc882
.LBB112_688:
.Ltmp1868:
	leaq	.L.str.106(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1869:
# %bb.689:                              # %.noexc946
.LBB112_690:
.Ltmp1692:
	leaq	.L.str.106(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1693:
# %bb.691:                              # %.noexc903
.LBB112_692:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp1709:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1710:
# %bb.693:
.Ltmp1712:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp1713:
	jmp	.LBB112_934
.LBB112_694:
	leaq	.L.str.120(%rip), %rdi
	leaq	.L.str.118(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_(%rip), %rcx
	movl	$928, %edx                      # imm = 0x3A0
	callq	__assert_fail@PLT
.LBB112_695:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp1768:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1769:
# %bb.696:
.Ltmp1771:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp1772:
# %bb.697:                              # %.noexc473
.LBB112_698:
.Ltmp1843:
	leaq	.L.str.122(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1844:
# %bb.699:
.LBB112_700:
.Ltmp2160:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2161:
# %bb.701:                              # %.noexc609
.LBB112_702:
.Ltmp2157:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2158:
# %bb.703:                              # %.noexc613
.LBB112_704:
.Ltmp2147:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2148:
# %bb.705:                              # %.noexc690
.LBB112_706:
	leaq	.L.str.120(%rip), %rdi
	leaq	.L.str.118(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_(%rip), %rcx
	movl	$803, %edx                      # imm = 0x323
	callq	__assert_fail@PLT
.LBB112_707:
.Ltmp1723:
	leaq	.L.str.106(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1724:
# %bb.708:                              # %.noexc925
.LBB112_709:                            # %_ZN8pybind1110isinstanceINS_7capsuleETnNSt9enable_ifIXsr3std10is_base_ofINS_6objectET_EE5valueEiE4typeELi0EEEbNS_6handleE.exit.thread
	leaq	.L.str.117(%rip), %rdi
	leaq	.L.str.118(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_(%rip), %rcx
	movl	$703, %edx                      # imm = 0x2BF
	callq	__assert_fail@PLT
.LBB112_710:
.Ltmp2154:
	leaq	.L.str.35(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.Ltmp2155:
# %bb.711:                              # %.noexc628
.LBB112_712:
.Ltmp2138:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2139:
# %bb.713:                              # %.noexc706
.LBB112_714:
	leaq	.L.str.119(%rip), %rdi
	leaq	.L.str.118(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_(%rip), %rcx
	movl	$709, %edx                      # imm = 0x2C5
	callq	__assert_fail@PLT
.LBB112_715:
	leaq	.L.str.137(%rip), %rdi
	leaq	.L.str.138(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL16PyTuple_GET_SIZEP7_object(%rip), %rcx
	movl	$23, %edx
	callq	__assert_fail@PLT
.LBB112_716:
	leaq	.L.str.139(%rip), %rdi
	leaq	.L.str.140(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object(%rip), %rcx
	movl	$231, %edx
	callq	__assert_fail@PLT
.LBB112_717:
	leaq	.L.str.141(%rip), %rdi
	leaq	.L.str.140(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object(%rip), %rcx
	movl	$232, %edx
	callq	__assert_fail@PLT
.LBB112_718:
.Ltmp1673:
	leaq	.L.str.106(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1674:
# %bb.719:                              # %.noexc870
.LBB112_720:
.Ltmp1812:
	leaq	.L.str.148(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1813:
# %bb.721:
.LBB112_722:                            # %.noexc.i627
.Ltmp2152:
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2153:
# %bb.723:                              # %.noexc629
.LBB112_724:
.Ltmp2054:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2055:
# %bb.725:                              # %.noexc768
.LBB112_726:
.Ltmp2051:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2052:
# %bb.727:                              # %.noexc760
.LBB112_728:                            # %.invoke
.Ltmp1970:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1971:
# %bb.729:                              # %.cont
.LBB112_730:
	movq	(%rsp), %r14                    # 8-byte Reload
	jmp	.LBB112_928
.LBB112_731:
.Ltmp1835:
	leaq	.L.str.106(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1836:
# %bb.732:                              # %.noexc990
.LBB112_733:
.Ltmp1837:
	leaq	.L.str.149(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1838:
# %bb.734:
.LBB112_735:
.Ltmp1748:
	leaq	.L.str.148(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1749:
# %bb.736:
.LBB112_737:
.Ltmp1780:
	leaq	.L.str.148(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1781:
# %bb.738:
.LBB112_739:
.Ltmp1968:
	leaq	.L.str.11(%rip), %rdi
	leaq	.L.str.41(%rip), %rsi
	xorl	%eax, %eax
	callq	_ZSt24__throw_out_of_range_fmtPKcz@PLT
.Ltmp1969:
# %bb.740:                              # %.noexc674
.LBB112_741:                            # %.invoke1636
.Ltmp1934:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1935:
# %bb.742:                              # %.cont1637
.LBB112_743:
	leaq	.L.str.136(%rip), %rdi
	leaq	.L.str.118(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_(%rip), %rcx
	movl	$1132, %edx                     # imm = 0x46C
	callq	__assert_fail@PLT
.LBB112_744:
.Ltmp1797:
	leaq	.L.str.106(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1798:
# %bb.745:                              # %.noexc968
.LBB112_746:
.Ltmp2173:
	leaq	.L.str.35(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.Ltmp2174:
# %bb.747:                              # %.noexc539
.LBB112_748:
.Ltmp2166:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2167:
# %bb.749:                              # %.noexc545
.LBB112_750:
.Ltmp2163:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2164:
# %bb.751:                              # %.noexc563
.LBB112_752:
.Ltmp2144:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2145:
# %bb.753:                              # %.noexc582
.LBB112_754:                            # %.noexc.i538
.Ltmp2171:
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2172:
# %bb.755:                              # %.noexc540
.LBB112_756:
.Ltmp2063:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2064:
# %bb.757:                              # %.noexc749
.LBB112_758:
.Ltmp2074:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2075:
# %bb.759:                              # %.noexc810
.LBB112_760:                            # %.noexc714
.LBB112_762:                            # %.noexc722
.LBB112_763:                            # %.noexc778
.LBB112_765:                            # %.noexc787
.LBB112_766:
.Ltmp2044:
	jmp	.LBB112_832
.LBB112_767:
.Ltmp2039:
	movq	%rax, (%rsp)                    # 8-byte Spill
.Ltmp2040:
	callq	__cxa_end_catch@PLT
.Ltmp2041:
	jmp	.LBB112_839
.LBB112_768:
.Ltmp2030:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_769:
.Ltmp1901:
	jmp	.LBB112_905
.LBB112_770:
.Ltmp2137:
	jmp	.LBB112_891
.LBB112_771:
.Ltmp2131:
	movq	%rax, (%rsp)                    # 8-byte Spill
.Ltmp2132:
	callq	__cxa_end_catch@PLT
.Ltmp2133:
	jmp	.LBB112_892
.LBB112_772:
.Ltmp2128:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_773:
.Ltmp2125:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_774:
.Ltmp2116:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_775:
.Ltmp1864:
	jmp	.LBB112_858
.LBB112_776:
.Ltmp2083:
	jmp	.LBB112_891
.LBB112_777:
.Ltmp1996:
	jmp	.LBB112_832
.LBB112_778:
.Ltmp2071:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_779:
.Ltmp1987:
	jmp	.LBB112_891
.LBB112_780:
.Ltmp1933:
	jmp	.LBB112_841
.LBB112_781:
.Ltmp1867:
	jmp	.LBB112_858
.LBB112_782:
.Ltmp2086:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_783:
.Ltmp1982:
	movq	%rax, (%rsp)                    # 8-byte Spill
	jmp	.LBB112_893
.LBB112_784:
.Ltmp1943:
	movq	%rax, %rbx
	movq	312(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB112_790
.LBB112_793:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i587
	movq	328(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB112_791
.LBB112_794:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i590
	movq	144(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	192(%rsp), %rdi
	cmpq	%r12, %rdi
	jne	.LBB112_796
	jmp	.LBB112_942
.LBB112_785:
.Ltmp1661:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_786:
.Ltmp2065:
	jmp	.LBB112_832
.LBB112_787:
.Ltmp2146:
	jmp	.LBB112_940
.LBB112_788:
.Ltmp2165:
	movq	%rax, %rbx
	movq	224(%rsp), %rdi
	leaq	240(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB112_792
# %bb.789:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit586
	movq	312(%rsp), %rdi
	cmpq	%r15, %rdi
	jne	.LBB112_793
.LBB112_790:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit589
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB112_794
.LBB112_791:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit592
	movq	192(%rsp), %rdi
	cmpq	%r12, %rdi
	jne	.LBB112_796
	jmp	.LBB112_942
.LBB112_792:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i584
	movq	240(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	312(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB112_790
	jmp	.LBB112_793
.LBB112_795:
.Ltmp2168:
	movq	%rax, %rbx
	movq	192(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB112_942
.LBB112_796:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i593
	movq	208(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB112_797:                            # %.loopexit.split-lp1195
.Ltmp1799:
	jmp	.LBB112_822
.LBB112_798:
.Ltmp2080:
	jmp	.LBB112_891
.LBB112_799:
.Ltmp1922:
	movq	%rax, %rdi
	callq	_Unwind_Resume@PLT
.LBB112_800:
.Ltmp1782:
	movq	%rdx, %r13
	movq	%rax, %r14
.Ltmp1783:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1784:
	jmp	.LBB112_912
.LBB112_801:
.Ltmp1785:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_802:
.Ltmp1762:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_803:
.Ltmp1759:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_804:
.Ltmp1756:
	jmp	.LBB112_822
.LBB112_805:
.Ltmp1750:
	movq	%rdx, %r13
	movq	%rax, %r14
.Ltmp1751:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1752:
	jmp	.LBB112_912
.LBB112_806:
.Ltmp1753:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_807:
.Ltmp1747:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_808:
.Ltmp1744:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_809:
.Ltmp1741:
	jmp	.LBB112_822
.LBB112_810:                            # %.loopexit
.Ltmp2050:
	jmp	.LBB112_832
.LBB112_811:                            # %.loopexit1117
.Ltmp2008:
	jmp	.LBB112_835
.LBB112_812:
.Ltmp1839:
	movq	%rdx, %r13
	movq	%rax, %r14
.Ltmp1840:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1841:
	jmp	.LBB112_922
.LBB112_813:
.Ltmp1842:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_814:
.Ltmp1826:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_815:
.Ltmp1823:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_816:
.Ltmp1820:
	jmp	.LBB112_921
.LBB112_817:
.Ltmp1794:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_818:
.Ltmp1791:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_819:
.Ltmp1788:
	jmp	.LBB112_822
.LBB112_820:                            # %.loopexit1149
.Ltmp1967:
	jmp	.LBB112_845
.LBB112_821:                            # %.loopexit1194
.Ltmp1802:
.LBB112_822:
	movq	%rdx, %r13
	movq	%rax, %r14
	jmp	.LBB112_912
.LBB112_823:
.Ltmp1919:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_824:                            # %.loopexit.split-lp
.Ltmp2053:
	jmp	.LBB112_832
.LBB112_825:                            # %.loopexit1184
.Ltmp1669:
	jmp	.LBB112_926
.LBB112_826:
.Ltmp1999:
	jmp	.LBB112_832
.LBB112_827:
.Ltmp2005:
	movq	%rax, (%rsp)                    # 8-byte Spill
	jmp	.LBB112_837
.LBB112_828:
.Ltmp2002:
	movq	%rax, (%rsp)                    # 8-byte Spill
	jmp	.LBB112_838
.LBB112_829:
.Ltmp2014:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_830:
.Ltmp2011:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_831:
.Ltmp2047:
.LBB112_832:
	movq	%rax, (%rsp)                    # 8-byte Spill
	jmp	.LBB112_839
.LBB112_833:
.Ltmp2024:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_834:                            # %.loopexit.split-lp1118
.Ltmp2056:
.LBB112_835:
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB112_837
# %bb.836:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i794
	movq	144(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB112_837:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit796
.Ltmp2057:
	leaq	456(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2058:
.LBB112_838:                            # %_ZN8pybind116objectD2Ev.exit797
.Ltmp2060:
	leaq	480(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2061:
.LBB112_839:
.Ltmp2066:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2067:
	jmp	.LBB112_892
.LBB112_840:
.Ltmp1936:
.LBB112_841:
	movq	%rax, %rbx
	movq	24(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB112_942
	jmp	.LBB112_842
.LBB112_843:
.Ltmp2062:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_844:                            # %.loopexit.split-lp1150
.Ltmp1972:
.LBB112_845:
	movq	%rax, %rbx
	movq	224(%rsp), %rdi
	leaq	240(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB112_885
# %bb.846:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i655
	movq	240(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	leaq	40(%rsp), %rbp
	jmp	.LBB112_941
.LBB112_847:
.Ltmp2059:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_848:                            # %.loopexit1139
.Ltmp1960:
	jmp	.LBB112_940
.LBB112_849:
.Ltmp1948:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_850:
.Ltmp1834:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_851:
.Ltmp1814:
	movq	%rdx, %r13
	movq	%rax, %r14
.Ltmp1815:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1816:
	jmp	.LBB112_922
.LBB112_852:
.Ltmp1817:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_853:
.Ltmp1811:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_854:
.Ltmp1808:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_855:
.Ltmp1738:
	jmp	.LBB112_921
.LBB112_856:                            # %.loopexit.split-lp1185
.Ltmp1675:
	jmp	.LBB112_926
.LBB112_857:
.Ltmp1848:
.LBB112_858:                            # %.loopexit1199
	movq	%rdx, %r13
	movq	%rax, %r14
.LBB112_859:                            # %.loopexit1199
	movq	128(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB112_922
# %bb.860:
	movq	160(%rsp), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB112_922
.LBB112_861:
.Ltmp2068:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_862:                            # %.loopexit.split-lp1124
.Ltmp2140:
	jmp	.LBB112_891
.LBB112_863:                            # %.loopexit1168
.Ltmp1719:
	jmp	.LBB112_871
.LBB112_864:                            # %.loopexit1134
.Ltmp1957:
	jmp	.LBB112_881
.LBB112_865:                            # %.loopexit1129
.Ltmp1954:
	jmp	.LBB112_866
.LBB112_867:                            # %.loopexit1189
.Ltmp1831:
	jmp	.LBB112_921
.LBB112_868:                            # %.loopexit.split-lp1158
.Ltmp1773:
	jmp	.LBB112_910
.LBB112_869:
.Ltmp1770:
	movq	%rdx, %r13
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB112_911
.LBB112_870:                            # %.loopexit.split-lp1169
.Ltmp1725:
.LBB112_871:
	movq	%rdx, %r13
	movq	%rax, %r14
.Ltmp1726:
	leaq	224(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1727:
	jmp	.LBB112_922
.LBB112_872:
.Ltmp1728:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_873:
.Ltmp1672:
	jmp	.LBB112_926
.LBB112_874:                            # %.loopexit.split-lp1145
.Ltmp2149:
	movq	%rax, %rbx
	leaq	40(%rsp), %rbp
	jmp	.LBB112_941
.LBB112_875:                            # %.loopexit1144
.Ltmp1977:
	jmp	.LBB112_940
.LBB112_876:
.Ltmp2110:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_877:
.Ltmp2107:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_878:
.Ltmp2104:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_879:
.Ltmp1951:
	movq	%rax, %rbx
	movq	192(%rsp), %rdi
	leaq	208(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB112_884
	jmp	.LBB112_885
.LBB112_880:                            # %.loopexit.split-lp1135
.Ltmp2159:
.LBB112_881:
	movq	%rax, %rbx
	movq	224(%rsp), %rdi
	leaq	240(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB112_887
# %bb.882:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit648
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB112_888
.LBB112_883:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit651
	movq	192(%rsp), %rdi
	leaq	208(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB112_885
.LBB112_884:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i652
	movq	208(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB112_885:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit654
	leaq	40(%rsp), %rbp
	jmp	.LBB112_941
.LBB112_887:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i646
	movq	240(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB112_883
	jmp	.LBB112_888
.LBB112_886:                            # %.loopexit.split-lp1130
.Ltmp2162:
.LBB112_866:                            # %.loopexit1129
	movq	%rax, %rbx
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB112_883
.LBB112_888:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i649
	movq	144(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	192(%rsp), %rdi
	leaq	208(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB112_884
	jmp	.LBB112_885
.LBB112_889:                            # %.loopexit.split-lp1190
.Ltmp1845:
	jmp	.LBB112_921
.LBB112_890:                            # %.loopexit1123
.Ltmp2089:
.LBB112_891:                            # %.loopexit1128
	movq	%rax, (%rsp)                    # 8-byte Spill
.LBB112_892:                            # %.loopexit1128
.Ltmp2141:
	leaq	312(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2142:
.LBB112_893:                            # %_ZN8pybind116objectD2Ev.exit817
	leaq	40(%rsp), %rbp
	movq	(%rsp), %rbx                    # 8-byte Reload
	jmp	.LBB112_941
.LBB112_894:
.Ltmp2143:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_895:
.Ltmp1711:
	movq	%rdx, %r13
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB112_922
.LBB112_896:
.Ltmp1706:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_897:
.Ltmp1703:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_898:
.Ltmp1700:
	jmp	.LBB112_921
.LBB112_899:
.Ltmp1779:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_900:
.Ltmp1686:
	jmp	.LBB112_926
.LBB112_901:
.Ltmp1876:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_902:
.Ltmp1885:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_903:
.Ltmp1882:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_904:
.Ltmp1664:
.LBB112_905:                            # %.loopexit1155
	movq	%rdx, %r13
	movq	%rax, %r14
	jmp	.LBB112_928
.LBB112_906:
.Ltmp1722:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_907:
.Ltmp1716:
	jmp	.LBB112_921
.LBB112_908:                            # %.loopexit.split-lp1175
.Ltmp1694:
	jmp	.LBB112_921
.LBB112_909:                            # %.loopexit1157
.Ltmp1767:
.LBB112_910:                            # %.body474
	movq	%rdx, %r13
	movq	%rax, %r14
.LBB112_911:                            # %.body474
.Ltmp1774:
	leaq	248(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1775:
.LBB112_912:
.Ltmp1803:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1804:
	jmp	.LBB112_922
.LBB112_913:
.Ltmp1776:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_914:
.Ltmp1805:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_915:
.Ltmp1678:
	jmp	.LBB112_926
.LBB112_916:
.Ltmp1697:
	jmp	.LBB112_921
.LBB112_917:                            # %.loopexit1174
.Ltmp1691:
	jmp	.LBB112_921
.LBB112_918:                            # %.loopexit.split-lp1164
.Ltmp1870:
	jmp	.LBB112_921
.LBB112_919:                            # %.loopexit.split-lp1180
.Ltmp1879:
	jmp	.LBB112_926
.LBB112_920:                            # %.loopexit1163
.Ltmp1733:
.LBB112_921:
	movq	%rdx, %r13
	movq	%rax, %r14
.LBB112_922:
.Ltmp1871:
	leaq	312(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1872:
	jmp	.LBB112_927
.LBB112_923:
.Ltmp1873:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_924:
.Ltmp2175:
	movq	%rax, %rdi
	callq	_Unwind_Resume@PLT
.LBB112_925:                            # %.loopexit1179
.Ltmp1683:
.LBB112_926:
	movq	%rdx, %r13
	movq	%rax, %r14
.LBB112_927:
	leaq	24(%rsp), %rdi
	callq	_ZN8pybind116detail13function_callD2Ev
.LBB112_928:                            # %.loopexit1155
	leaq	192(%rsp), %rdi
	callq	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev
	movq	%r14, %rdi
	cmpl	$3, %r13d
	jne	.LBB112_930
# %bb.929:
	callq	__cxa_begin_catch@PLT
	movq	8(%rax), %rdi
.Ltmp1912:
	callq	_ZN8pybind116detail25error_fetch_and_normalize7restoreEv
.Ltmp1913:
	jmp	.LBB112_932
.LBB112_930:
	callq	__cxa_begin_catch@PLT
	cmpl	$2, %r13d
	je	.LBB112_933
# %bb.931:
.Ltmp1902:
	callq	_ZN8pybind116detail24try_translate_exceptionsEv
.Ltmp1903:
.LBB112_932:                            # %_ZN8pybind1117error_already_set7restoreEv.exit
	callq	__cxa_end_catch@PLT
	jmp	.LBB112_679
.LBB112_933:
.Ltmp1907:
	callq	__cxa_rethrow@PLT
.Ltmp1908:
.LBB112_934:
.LBB112_935:
.Ltmp1909:
	movq	%rax, %rbx
.Ltmp1910:
	callq	__cxa_end_catch@PLT
.Ltmp1911:
	jmp	.LBB112_942
.LBB112_936:
.Ltmp1904:
	movq	%rax, %rbx
.Ltmp1905:
	callq	__cxa_end_catch@PLT
.Ltmp1906:
	jmp	.LBB112_942
.LBB112_937:
.Ltmp1914:
	movq	%rax, %rbx
.Ltmp1915:
	callq	__cxa_end_catch@PLT
.Ltmp1916:
	jmp	.LBB112_942
.LBB112_938:
.Ltmp2134:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB112_939:                            # %.loopexit.split-lp1140
.Ltmp2156:
.LBB112_940:
	movq	%rax, %rbx
.LBB112_941:
	movq	24(%rsp), %rdi
	cmpq	%rbp, %rdi
	jne	.LBB112_842
.LBB112_942:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB112_842:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i818
	movq	40(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end112:
	.size	_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_, .Lfunc_end112-_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_,"aG",@progbits,_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_,comdat
	.p2align	2, 0x0
GCC_except_table112:
.Lexception53:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase32-.Lttbaseref32
.Lttbaseref32:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end53-.Lcst_begin53
.Lcst_begin53:
	.uleb128 .Lfunc_begin53-.Lfunc_begin53  # >> Call Site 1 <<
	.uleb128 .Ltmp1662-.Lfunc_begin53       #   Call between .Lfunc_begin53 and .Ltmp1662
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1662-.Lfunc_begin53       # >> Call Site 2 <<
	.uleb128 .Ltmp1663-.Ltmp1662            #   Call between .Ltmp1662 and .Ltmp1663
	.uleb128 .Ltmp1664-.Lfunc_begin53       #     jumps to .Ltmp1664
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1665-.Lfunc_begin53       # >> Call Site 3 <<
	.uleb128 .Ltmp1666-.Ltmp1665            #   Call between .Ltmp1665 and .Ltmp1666
	.uleb128 .Ltmp1672-.Lfunc_begin53       #     jumps to .Ltmp1672
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1667-.Lfunc_begin53       # >> Call Site 4 <<
	.uleb128 .Ltmp1668-.Ltmp1667            #   Call between .Ltmp1667 and .Ltmp1668
	.uleb128 .Ltmp1669-.Lfunc_begin53       #     jumps to .Ltmp1669
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1670-.Lfunc_begin53       # >> Call Site 5 <<
	.uleb128 .Ltmp1671-.Ltmp1670            #   Call between .Ltmp1670 and .Ltmp1671
	.uleb128 .Ltmp1672-.Lfunc_begin53       #     jumps to .Ltmp1672
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1681-.Lfunc_begin53       # >> Call Site 6 <<
	.uleb128 .Ltmp1682-.Ltmp1681            #   Call between .Ltmp1681 and .Ltmp1682
	.uleb128 .Ltmp1683-.Lfunc_begin53       #     jumps to .Ltmp1683
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1676-.Lfunc_begin53       # >> Call Site 7 <<
	.uleb128 .Ltmp1677-.Ltmp1676            #   Call between .Ltmp1676 and .Ltmp1677
	.uleb128 .Ltmp1678-.Lfunc_begin53       #     jumps to .Ltmp1678
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1679-.Lfunc_begin53       # >> Call Site 8 <<
	.uleb128 .Ltmp1680-.Ltmp1679            #   Call between .Ltmp1679 and .Ltmp1680
	.uleb128 .Ltmp1683-.Lfunc_begin53       #     jumps to .Ltmp1683
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1684-.Lfunc_begin53       # >> Call Site 9 <<
	.uleb128 .Ltmp1685-.Ltmp1684            #   Call between .Ltmp1684 and .Ltmp1685
	.uleb128 .Ltmp1686-.Lfunc_begin53       #     jumps to .Ltmp1686
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1687-.Lfunc_begin53       # >> Call Site 10 <<
	.uleb128 .Ltmp1690-.Ltmp1687            #   Call between .Ltmp1687 and .Ltmp1690
	.uleb128 .Ltmp1691-.Lfunc_begin53       #     jumps to .Ltmp1691
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1731-.Lfunc_begin53       # >> Call Site 11 <<
	.uleb128 .Ltmp1732-.Ltmp1731            #   Call between .Ltmp1731 and .Ltmp1732
	.uleb128 .Ltmp1733-.Lfunc_begin53       #     jumps to .Ltmp1733
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1695-.Lfunc_begin53       # >> Call Site 12 <<
	.uleb128 .Ltmp1696-.Ltmp1695            #   Call between .Ltmp1695 and .Ltmp1696
	.uleb128 .Ltmp1697-.Lfunc_begin53       #     jumps to .Ltmp1697
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1698-.Lfunc_begin53       # >> Call Site 13 <<
	.uleb128 .Ltmp1699-.Ltmp1698            #   Call between .Ltmp1698 and .Ltmp1699
	.uleb128 .Ltmp1700-.Lfunc_begin53       #     jumps to .Ltmp1700
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1701-.Lfunc_begin53       # >> Call Site 14 <<
	.uleb128 .Ltmp1702-.Ltmp1701            #   Call between .Ltmp1701 and .Ltmp1702
	.uleb128 .Ltmp1703-.Lfunc_begin53       #     jumps to .Ltmp1703
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1704-.Lfunc_begin53       # >> Call Site 15 <<
	.uleb128 .Ltmp1705-.Ltmp1704            #   Call between .Ltmp1704 and .Ltmp1705
	.uleb128 .Ltmp1706-.Lfunc_begin53       #     jumps to .Ltmp1706
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1707-.Lfunc_begin53       # >> Call Site 16 <<
	.uleb128 .Ltmp1708-.Ltmp1707            #   Call between .Ltmp1707 and .Ltmp1708
	.uleb128 .Ltmp1733-.Lfunc_begin53       #     jumps to .Ltmp1733
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1714-.Lfunc_begin53       # >> Call Site 17 <<
	.uleb128 .Ltmp1715-.Ltmp1714            #   Call between .Ltmp1714 and .Ltmp1715
	.uleb128 .Ltmp1716-.Lfunc_begin53       #     jumps to .Ltmp1716
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1717-.Lfunc_begin53       # >> Call Site 18 <<
	.uleb128 .Ltmp1718-.Ltmp1717            #   Call between .Ltmp1717 and .Ltmp1718
	.uleb128 .Ltmp1719-.Lfunc_begin53       #     jumps to .Ltmp1719
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1720-.Lfunc_begin53       # >> Call Site 19 <<
	.uleb128 .Ltmp1721-.Ltmp1720            #   Call between .Ltmp1720 and .Ltmp1721
	.uleb128 .Ltmp1722-.Lfunc_begin53       #     jumps to .Ltmp1722
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1729-.Lfunc_begin53       # >> Call Site 20 <<
	.uleb128 .Ltmp1730-.Ltmp1729            #   Call between .Ltmp1729 and .Ltmp1730
	.uleb128 .Ltmp1733-.Lfunc_begin53       #     jumps to .Ltmp1733
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1734-.Lfunc_begin53       # >> Call Site 21 <<
	.uleb128 .Ltmp1735-.Ltmp1734            #   Call between .Ltmp1734 and .Ltmp1735
	.uleb128 .Ltmp1831-.Lfunc_begin53       #     jumps to .Ltmp1831
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1736-.Lfunc_begin53       # >> Call Site 22 <<
	.uleb128 .Ltmp1737-.Ltmp1736            #   Call between .Ltmp1736 and .Ltmp1737
	.uleb128 .Ltmp1738-.Lfunc_begin53       #     jumps to .Ltmp1738
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1754-.Lfunc_begin53       # >> Call Site 23 <<
	.uleb128 .Ltmp1755-.Ltmp1754            #   Call between .Ltmp1754 and .Ltmp1755
	.uleb128 .Ltmp1756-.Lfunc_begin53       #     jumps to .Ltmp1756
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1757-.Lfunc_begin53       # >> Call Site 24 <<
	.uleb128 .Ltmp1758-.Ltmp1757            #   Call between .Ltmp1757 and .Ltmp1758
	.uleb128 .Ltmp1759-.Lfunc_begin53       #     jumps to .Ltmp1759
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1760-.Lfunc_begin53       # >> Call Site 25 <<
	.uleb128 .Ltmp1761-.Ltmp1760            #   Call between .Ltmp1760 and .Ltmp1761
	.uleb128 .Ltmp1762-.Lfunc_begin53       #     jumps to .Ltmp1762
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1763-.Lfunc_begin53       # >> Call Site 26 <<
	.uleb128 .Ltmp1766-.Ltmp1763            #   Call between .Ltmp1763 and .Ltmp1766
	.uleb128 .Ltmp1767-.Lfunc_begin53       #     jumps to .Ltmp1767
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1777-.Lfunc_begin53       # >> Call Site 27 <<
	.uleb128 .Ltmp1778-.Ltmp1777            #   Call between .Ltmp1777 and .Ltmp1778
	.uleb128 .Ltmp1779-.Lfunc_begin53       #     jumps to .Ltmp1779
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1786-.Lfunc_begin53       # >> Call Site 28 <<
	.uleb128 .Ltmp1787-.Ltmp1786            #   Call between .Ltmp1786 and .Ltmp1787
	.uleb128 .Ltmp1788-.Lfunc_begin53       #     jumps to .Ltmp1788
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1789-.Lfunc_begin53       # >> Call Site 29 <<
	.uleb128 .Ltmp1790-.Ltmp1789            #   Call between .Ltmp1789 and .Ltmp1790
	.uleb128 .Ltmp1791-.Lfunc_begin53       #     jumps to .Ltmp1791
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1792-.Lfunc_begin53       # >> Call Site 30 <<
	.uleb128 .Ltmp1793-.Ltmp1792            #   Call between .Ltmp1792 and .Ltmp1793
	.uleb128 .Ltmp1794-.Lfunc_begin53       #     jumps to .Ltmp1794
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1739-.Lfunc_begin53       # >> Call Site 31 <<
	.uleb128 .Ltmp1740-.Ltmp1739            #   Call between .Ltmp1739 and .Ltmp1740
	.uleb128 .Ltmp1741-.Lfunc_begin53       #     jumps to .Ltmp1741
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1742-.Lfunc_begin53       # >> Call Site 32 <<
	.uleb128 .Ltmp1743-.Ltmp1742            #   Call between .Ltmp1742 and .Ltmp1743
	.uleb128 .Ltmp1744-.Lfunc_begin53       #     jumps to .Ltmp1744
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1745-.Lfunc_begin53       # >> Call Site 33 <<
	.uleb128 .Ltmp1746-.Ltmp1745            #   Call between .Ltmp1745 and .Ltmp1746
	.uleb128 .Ltmp1747-.Lfunc_begin53       #     jumps to .Ltmp1747
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1800-.Lfunc_begin53       # >> Call Site 34 <<
	.uleb128 .Ltmp1796-.Ltmp1800            #   Call between .Ltmp1800 and .Ltmp1796
	.uleb128 .Ltmp1802-.Lfunc_begin53       #     jumps to .Ltmp1802
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1806-.Lfunc_begin53       # >> Call Site 35 <<
	.uleb128 .Ltmp1807-.Ltmp1806            #   Call between .Ltmp1806 and .Ltmp1807
	.uleb128 .Ltmp1808-.Lfunc_begin53       #     jumps to .Ltmp1808
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1809-.Lfunc_begin53       # >> Call Site 36 <<
	.uleb128 .Ltmp1810-.Ltmp1809            #   Call between .Ltmp1809 and .Ltmp1810
	.uleb128 .Ltmp1811-.Lfunc_begin53       #     jumps to .Ltmp1811
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1818-.Lfunc_begin53       # >> Call Site 37 <<
	.uleb128 .Ltmp1819-.Ltmp1818            #   Call between .Ltmp1818 and .Ltmp1819
	.uleb128 .Ltmp1820-.Lfunc_begin53       #     jumps to .Ltmp1820
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1821-.Lfunc_begin53       # >> Call Site 38 <<
	.uleb128 .Ltmp1822-.Ltmp1821            #   Call between .Ltmp1821 and .Ltmp1822
	.uleb128 .Ltmp1823-.Lfunc_begin53       #     jumps to .Ltmp1823
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1824-.Lfunc_begin53       # >> Call Site 39 <<
	.uleb128 .Ltmp1825-.Ltmp1824            #   Call between .Ltmp1824 and .Ltmp1825
	.uleb128 .Ltmp1826-.Lfunc_begin53       #     jumps to .Ltmp1826
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1827-.Lfunc_begin53       # >> Call Site 40 <<
	.uleb128 .Ltmp1830-.Ltmp1827            #   Call between .Ltmp1827 and .Ltmp1830
	.uleb128 .Ltmp1831-.Lfunc_begin53       #     jumps to .Ltmp1831
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1832-.Lfunc_begin53       # >> Call Site 41 <<
	.uleb128 .Ltmp1833-.Ltmp1832            #   Call between .Ltmp1832 and .Ltmp1833
	.uleb128 .Ltmp1834-.Lfunc_begin53       #     jumps to .Ltmp1834
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1846-.Lfunc_begin53       # >> Call Site 42 <<
	.uleb128 .Ltmp1847-.Ltmp1846            #   Call between .Ltmp1846 and .Ltmp1847
	.uleb128 .Ltmp1848-.Lfunc_begin53       #     jumps to .Ltmp1848
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1849-.Lfunc_begin53       # >> Call Site 43 <<
	.uleb128 .Ltmp1852-.Ltmp1849            #   Call between .Ltmp1849 and .Ltmp1852
	.uleb128 .Ltmp1853-.Lfunc_begin53       #     jumps to .Ltmp1853
	.byte	11                              #   On action: 6
	.uleb128 .Ltmp1854-.Lfunc_begin53       # >> Call Site 44 <<
	.uleb128 .Ltmp1857-.Ltmp1854            #   Call between .Ltmp1854 and .Ltmp1857
	.uleb128 .Ltmp1858-.Lfunc_begin53       #     jumps to .Ltmp1858
	.byte	11                              #   On action: 6
	.uleb128 .Ltmp1859-.Lfunc_begin53       # >> Call Site 45 <<
	.uleb128 .Ltmp1860-.Ltmp1859            #   Call between .Ltmp1859 and .Ltmp1860
	.uleb128 .Ltmp1861-.Lfunc_begin53       #     jumps to .Ltmp1861
	.byte	11                              #   On action: 6
	.uleb128 .Ltmp1865-.Lfunc_begin53       # >> Call Site 46 <<
	.uleb128 .Ltmp1866-.Ltmp1865            #   Call between .Ltmp1865 and .Ltmp1866
	.uleb128 .Ltmp1867-.Lfunc_begin53       #     jumps to .Ltmp1867
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1874-.Lfunc_begin53       # >> Call Site 47 <<
	.uleb128 .Ltmp1875-.Ltmp1874            #   Call between .Ltmp1874 and .Ltmp1875
	.uleb128 .Ltmp1876-.Lfunc_begin53       #     jumps to .Ltmp1876
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1880-.Lfunc_begin53       # >> Call Site 48 <<
	.uleb128 .Ltmp1881-.Ltmp1880            #   Call between .Ltmp1880 and .Ltmp1881
	.uleb128 .Ltmp1882-.Lfunc_begin53       #     jumps to .Ltmp1882
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1883-.Lfunc_begin53       # >> Call Site 49 <<
	.uleb128 .Ltmp1884-.Ltmp1883            #   Call between .Ltmp1883 and .Ltmp1884
	.uleb128 .Ltmp1885-.Lfunc_begin53       #     jumps to .Ltmp1885
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1884-.Lfunc_begin53       # >> Call Site 50 <<
	.uleb128 .Ltmp1862-.Ltmp1884            #   Call between .Ltmp1884 and .Ltmp1862
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1862-.Lfunc_begin53       # >> Call Site 51 <<
	.uleb128 .Ltmp1863-.Ltmp1862            #   Call between .Ltmp1862 and .Ltmp1863
	.uleb128 .Ltmp1864-.Lfunc_begin53       #     jumps to .Ltmp1864
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1886-.Lfunc_begin53       # >> Call Site 52 <<
	.uleb128 .Ltmp1889-.Ltmp1886            #   Call between .Ltmp1886 and .Ltmp1889
	.uleb128 .Ltmp1890-.Lfunc_begin53       #     jumps to .Ltmp1890
	.byte	11                              #   On action: 6
	.uleb128 .Ltmp1891-.Lfunc_begin53       # >> Call Site 53 <<
	.uleb128 .Ltmp1894-.Ltmp1891            #   Call between .Ltmp1891 and .Ltmp1894
	.uleb128 .Ltmp1895-.Lfunc_begin53       #     jumps to .Ltmp1895
	.byte	11                              #   On action: 6
	.uleb128 .Ltmp1896-.Lfunc_begin53       # >> Call Site 54 <<
	.uleb128 .Ltmp1897-.Ltmp1896            #   Call between .Ltmp1896 and .Ltmp1897
	.uleb128 .Ltmp1898-.Lfunc_begin53       #     jumps to .Ltmp1898
	.byte	11                              #   On action: 6
	.uleb128 .Ltmp1897-.Lfunc_begin53       # >> Call Site 55 <<
	.uleb128 .Ltmp1899-.Ltmp1897            #   Call between .Ltmp1897 and .Ltmp1899
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1899-.Lfunc_begin53       # >> Call Site 56 <<
	.uleb128 .Ltmp1900-.Ltmp1899            #   Call between .Ltmp1899 and .Ltmp1900
	.uleb128 .Ltmp1901-.Lfunc_begin53       #     jumps to .Ltmp1901
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1917-.Lfunc_begin53       # >> Call Site 57 <<
	.uleb128 .Ltmp1918-.Ltmp1917            #   Call between .Ltmp1917 and .Ltmp1918
	.uleb128 .Ltmp1919-.Lfunc_begin53       #     jumps to .Ltmp1919
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1937-.Lfunc_begin53       # >> Call Site 58 <<
	.uleb128 .Ltmp1938-.Ltmp1937            #   Call between .Ltmp1937 and .Ltmp1938
	.uleb128 .Ltmp2175-.Lfunc_begin53       #     jumps to .Ltmp2175
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1920-.Lfunc_begin53       # >> Call Site 59 <<
	.uleb128 .Ltmp1921-.Ltmp1920            #   Call between .Ltmp1920 and .Ltmp1921
	.uleb128 .Ltmp1922-.Lfunc_begin53       #     jumps to .Ltmp1922
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1923-.Lfunc_begin53       # >> Call Site 60 <<
	.uleb128 .Ltmp1924-.Ltmp1923            #   Call between .Ltmp1923 and .Ltmp1924
	.uleb128 .Ltmp1936-.Lfunc_begin53       #     jumps to .Ltmp1936
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1924-.Lfunc_begin53       # >> Call Site 61 <<
	.uleb128 .Ltmp1659-.Ltmp1924            #   Call between .Ltmp1924 and .Ltmp1659
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1659-.Lfunc_begin53       # >> Call Site 62 <<
	.uleb128 .Ltmp1660-.Ltmp1659            #   Call between .Ltmp1659 and .Ltmp1660
	.uleb128 .Ltmp1661-.Lfunc_begin53       #     jumps to .Ltmp1661
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1660-.Lfunc_begin53       # >> Call Site 63 <<
	.uleb128 .Ltmp1939-.Ltmp1660            #   Call between .Ltmp1660 and .Ltmp1939
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1939-.Lfunc_begin53       # >> Call Site 64 <<
	.uleb128 .Ltmp1940-.Ltmp1939            #   Call between .Ltmp1939 and .Ltmp1940
	.uleb128 .Ltmp2168-.Lfunc_begin53       #     jumps to .Ltmp2168
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1940-.Lfunc_begin53       # >> Call Site 65 <<
	.uleb128 .Ltmp1941-.Ltmp1940            #   Call between .Ltmp1940 and .Ltmp1941
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1941-.Lfunc_begin53       # >> Call Site 66 <<
	.uleb128 .Ltmp1942-.Ltmp1941            #   Call between .Ltmp1941 and .Ltmp1942
	.uleb128 .Ltmp1943-.Lfunc_begin53       #     jumps to .Ltmp1943
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1944-.Lfunc_begin53       # >> Call Site 67 <<
	.uleb128 .Ltmp1945-.Ltmp1944            #   Call between .Ltmp1944 and .Ltmp1945
	.uleb128 .Ltmp2165-.Lfunc_begin53       #     jumps to .Ltmp2165
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1945-.Lfunc_begin53       # >> Call Site 68 <<
	.uleb128 .Ltmp1946-.Ltmp1945            #   Call between .Ltmp1945 and .Ltmp1946
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1946-.Lfunc_begin53       # >> Call Site 69 <<
	.uleb128 .Ltmp1947-.Ltmp1946            #   Call between .Ltmp1946 and .Ltmp1947
	.uleb128 .Ltmp1948-.Lfunc_begin53       #     jumps to .Ltmp1948
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1947-.Lfunc_begin53       # >> Call Site 70 <<
	.uleb128 .Ltmp1949-.Ltmp1947            #   Call between .Ltmp1947 and .Ltmp1949
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1949-.Lfunc_begin53       # >> Call Site 71 <<
	.uleb128 .Ltmp1950-.Ltmp1949            #   Call between .Ltmp1949 and .Ltmp1950
	.uleb128 .Ltmp1951-.Lfunc_begin53       #     jumps to .Ltmp1951
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1950-.Lfunc_begin53       # >> Call Site 72 <<
	.uleb128 .Ltmp1952-.Ltmp1950            #   Call between .Ltmp1950 and .Ltmp1952
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1952-.Lfunc_begin53       # >> Call Site 73 <<
	.uleb128 .Ltmp1953-.Ltmp1952            #   Call between .Ltmp1952 and .Ltmp1953
	.uleb128 .Ltmp1954-.Lfunc_begin53       #     jumps to .Ltmp1954
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1953-.Lfunc_begin53       # >> Call Site 74 <<
	.uleb128 .Ltmp1955-.Ltmp1953            #   Call between .Ltmp1953 and .Ltmp1955
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1955-.Lfunc_begin53       # >> Call Site 75 <<
	.uleb128 .Ltmp1956-.Ltmp1955            #   Call between .Ltmp1955 and .Ltmp1956
	.uleb128 .Ltmp1957-.Lfunc_begin53       #     jumps to .Ltmp1957
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1956-.Lfunc_begin53       # >> Call Site 76 <<
	.uleb128 .Ltmp1958-.Ltmp1956            #   Call between .Ltmp1956 and .Ltmp1958
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1958-.Lfunc_begin53       # >> Call Site 77 <<
	.uleb128 .Ltmp1959-.Ltmp1958            #   Call between .Ltmp1958 and .Ltmp1959
	.uleb128 .Ltmp1960-.Lfunc_begin53       #     jumps to .Ltmp1960
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1959-.Lfunc_begin53       # >> Call Site 78 <<
	.uleb128 .Ltmp1961-.Ltmp1959            #   Call between .Ltmp1959 and .Ltmp1961
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1961-.Lfunc_begin53       # >> Call Site 79 <<
	.uleb128 .Ltmp1962-.Ltmp1961            #   Call between .Ltmp1961 and .Ltmp1962
	.uleb128 .Ltmp1967-.Lfunc_begin53       #     jumps to .Ltmp1967
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1973-.Lfunc_begin53       # >> Call Site 80 <<
	.uleb128 .Ltmp1974-.Ltmp1973            #   Call between .Ltmp1973 and .Ltmp1974
	.uleb128 .Ltmp1977-.Lfunc_begin53       #     jumps to .Ltmp1977
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1974-.Lfunc_begin53       # >> Call Site 81 <<
	.uleb128 .Ltmp1975-.Ltmp1974            #   Call between .Ltmp1974 and .Ltmp1975
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1975-.Lfunc_begin53       # >> Call Site 82 <<
	.uleb128 .Ltmp1976-.Ltmp1975            #   Call between .Ltmp1975 and .Ltmp1976
	.uleb128 .Ltmp1977-.Lfunc_begin53       #     jumps to .Ltmp1977
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1976-.Lfunc_begin53       # >> Call Site 83 <<
	.uleb128 .Ltmp1963-.Ltmp1976            #   Call between .Ltmp1976 and .Ltmp1963
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1963-.Lfunc_begin53       # >> Call Site 84 <<
	.uleb128 .Ltmp1966-.Ltmp1963            #   Call between .Ltmp1963 and .Ltmp1966
	.uleb128 .Ltmp1967-.Lfunc_begin53       #     jumps to .Ltmp1967
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1966-.Lfunc_begin53       # >> Call Site 85 <<
	.uleb128 .Ltmp1978-.Ltmp1966            #   Call between .Ltmp1966 and .Ltmp1978
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1978-.Lfunc_begin53       # >> Call Site 86 <<
	.uleb128 .Ltmp1979-.Ltmp1978            #   Call between .Ltmp1978 and .Ltmp1979
	.uleb128 .Ltmp2146-.Lfunc_begin53       #     jumps to .Ltmp2146
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1980-.Lfunc_begin53       # >> Call Site 87 <<
	.uleb128 .Ltmp1981-.Ltmp1980            #   Call between .Ltmp1980 and .Ltmp1981
	.uleb128 .Ltmp1982-.Lfunc_begin53       #     jumps to .Ltmp1982
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1983-.Lfunc_begin53       # >> Call Site 88 <<
	.uleb128 .Ltmp2088-.Ltmp1983            #   Call between .Ltmp1983 and .Ltmp2088
	.uleb128 .Ltmp2089-.Lfunc_begin53       #     jumps to .Ltmp2089
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2090-.Lfunc_begin53       # >> Call Site 89 <<
	.uleb128 .Ltmp2093-.Ltmp2090            #   Call between .Ltmp2090 and .Ltmp2093
	.uleb128 .Ltmp2094-.Lfunc_begin53       #     jumps to .Ltmp2094
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2095-.Lfunc_begin53       # >> Call Site 90 <<
	.uleb128 .Ltmp2096-.Ltmp2095            #   Call between .Ltmp2095 and .Ltmp2096
	.uleb128 .Ltmp2122-.Lfunc_begin53       #     jumps to .Ltmp2122
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2097-.Lfunc_begin53       # >> Call Site 91 <<
	.uleb128 .Ltmp2098-.Ltmp2097            #   Call between .Ltmp2097 and .Ltmp2098
	.uleb128 .Ltmp2099-.Lfunc_begin53       #     jumps to .Ltmp2099
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2100-.Lfunc_begin53       # >> Call Site 92 <<
	.uleb128 .Ltmp2101-.Ltmp2100            #   Call between .Ltmp2100 and .Ltmp2101
	.uleb128 .Ltmp2113-.Lfunc_begin53       #     jumps to .Ltmp2113
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2101-.Lfunc_begin53       # >> Call Site 93 <<
	.uleb128 .Ltmp2102-.Ltmp2101            #   Call between .Ltmp2101 and .Ltmp2102
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2102-.Lfunc_begin53       # >> Call Site 94 <<
	.uleb128 .Ltmp2103-.Ltmp2102            #   Call between .Ltmp2102 and .Ltmp2103
	.uleb128 .Ltmp2104-.Lfunc_begin53       #     jumps to .Ltmp2104
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2105-.Lfunc_begin53       # >> Call Site 95 <<
	.uleb128 .Ltmp2106-.Ltmp2105            #   Call between .Ltmp2105 and .Ltmp2106
	.uleb128 .Ltmp2107-.Lfunc_begin53       #     jumps to .Ltmp2107
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2108-.Lfunc_begin53       # >> Call Site 96 <<
	.uleb128 .Ltmp2109-.Ltmp2108            #   Call between .Ltmp2108 and .Ltmp2109
	.uleb128 .Ltmp2110-.Lfunc_begin53       #     jumps to .Ltmp2110
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2109-.Lfunc_begin53       # >> Call Site 97 <<
	.uleb128 .Ltmp2117-.Ltmp2109            #   Call between .Ltmp2109 and .Ltmp2117
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2117-.Lfunc_begin53       # >> Call Site 98 <<
	.uleb128 .Ltmp2118-.Ltmp2117            #   Call between .Ltmp2117 and .Ltmp2118
	.uleb128 .Ltmp2119-.Lfunc_begin53       #     jumps to .Ltmp2119
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2120-.Lfunc_begin53       # >> Call Site 99 <<
	.uleb128 .Ltmp2121-.Ltmp2120            #   Call between .Ltmp2120 and .Ltmp2121
	.uleb128 .Ltmp2122-.Lfunc_begin53       #     jumps to .Ltmp2122
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2111-.Lfunc_begin53       # >> Call Site 100 <<
	.uleb128 .Ltmp2112-.Ltmp2111            #   Call between .Ltmp2111 and .Ltmp2112
	.uleb128 .Ltmp2113-.Lfunc_begin53       #     jumps to .Ltmp2113
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2112-.Lfunc_begin53       # >> Call Site 101 <<
	.uleb128 .Ltmp2114-.Ltmp2112            #   Call between .Ltmp2112 and .Ltmp2114
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2114-.Lfunc_begin53       # >> Call Site 102 <<
	.uleb128 .Ltmp2115-.Ltmp2114            #   Call between .Ltmp2114 and .Ltmp2115
	.uleb128 .Ltmp2116-.Lfunc_begin53       #     jumps to .Ltmp2116
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2123-.Lfunc_begin53       # >> Call Site 103 <<
	.uleb128 .Ltmp2124-.Ltmp2123            #   Call between .Ltmp2123 and .Ltmp2124
	.uleb128 .Ltmp2125-.Lfunc_begin53       #     jumps to .Ltmp2125
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2126-.Lfunc_begin53       # >> Call Site 104 <<
	.uleb128 .Ltmp2127-.Ltmp2126            #   Call between .Ltmp2126 and .Ltmp2127
	.uleb128 .Ltmp2128-.Lfunc_begin53       #     jumps to .Ltmp2128
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2127-.Lfunc_begin53       # >> Call Site 105 <<
	.uleb128 .Ltmp2129-.Ltmp2127            #   Call between .Ltmp2127 and .Ltmp2129
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2129-.Lfunc_begin53       # >> Call Site 106 <<
	.uleb128 .Ltmp2130-.Ltmp2129            #   Call between .Ltmp2129 and .Ltmp2130
	.uleb128 .Ltmp2131-.Lfunc_begin53       #     jumps to .Ltmp2131
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2135-.Lfunc_begin53       # >> Call Site 107 <<
	.uleb128 .Ltmp2136-.Ltmp2135            #   Call between .Ltmp2135 and .Ltmp2136
	.uleb128 .Ltmp2137-.Lfunc_begin53       #     jumps to .Ltmp2137
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1985-.Lfunc_begin53       # >> Call Site 108 <<
	.uleb128 .Ltmp1986-.Ltmp1985            #   Call between .Ltmp1985 and .Ltmp1986
	.uleb128 .Ltmp1987-.Lfunc_begin53       #     jumps to .Ltmp1987
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1988-.Lfunc_begin53       # >> Call Site 109 <<
	.uleb128 .Ltmp1993-.Ltmp1988            #   Call between .Ltmp1988 and .Ltmp1993
	.uleb128 .Ltmp2065-.Lfunc_begin53       #     jumps to .Ltmp2065
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1925-.Lfunc_begin53       # >> Call Site 110 <<
	.uleb128 .Ltmp1926-.Ltmp1925            #   Call between .Ltmp1925 and .Ltmp1926
	.uleb128 .Ltmp1936-.Lfunc_begin53       #     jumps to .Ltmp1936
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1994-.Lfunc_begin53       # >> Call Site 111 <<
	.uleb128 .Ltmp1995-.Ltmp1994            #   Call between .Ltmp1994 and .Ltmp1995
	.uleb128 .Ltmp1996-.Lfunc_begin53       #     jumps to .Ltmp1996
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1997-.Lfunc_begin53       # >> Call Site 112 <<
	.uleb128 .Ltmp1998-.Ltmp1997            #   Call between .Ltmp1997 and .Ltmp1998
	.uleb128 .Ltmp1999-.Lfunc_begin53       #     jumps to .Ltmp1999
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2000-.Lfunc_begin53       # >> Call Site 113 <<
	.uleb128 .Ltmp2001-.Ltmp2000            #   Call between .Ltmp2000 and .Ltmp2001
	.uleb128 .Ltmp2002-.Lfunc_begin53       #     jumps to .Ltmp2002
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2003-.Lfunc_begin53       # >> Call Site 114 <<
	.uleb128 .Ltmp2004-.Ltmp2003            #   Call between .Ltmp2003 and .Ltmp2004
	.uleb128 .Ltmp2005-.Lfunc_begin53       #     jumps to .Ltmp2005
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2006-.Lfunc_begin53       # >> Call Site 115 <<
	.uleb128 .Ltmp2007-.Ltmp2006            #   Call between .Ltmp2006 and .Ltmp2007
	.uleb128 .Ltmp2008-.Lfunc_begin53       #     jumps to .Ltmp2008
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2007-.Lfunc_begin53       # >> Call Site 116 <<
	.uleb128 .Ltmp2009-.Ltmp2007            #   Call between .Ltmp2007 and .Ltmp2009
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2009-.Lfunc_begin53       # >> Call Site 117 <<
	.uleb128 .Ltmp2010-.Ltmp2009            #   Call between .Ltmp2009 and .Ltmp2010
	.uleb128 .Ltmp2011-.Lfunc_begin53       #     jumps to .Ltmp2011
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2012-.Lfunc_begin53       # >> Call Site 118 <<
	.uleb128 .Ltmp2013-.Ltmp2012            #   Call between .Ltmp2012 and .Ltmp2013
	.uleb128 .Ltmp2014-.Lfunc_begin53       #     jumps to .Ltmp2014
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2015-.Lfunc_begin53       # >> Call Site 119 <<
	.uleb128 .Ltmp2016-.Ltmp2015            #   Call between .Ltmp2015 and .Ltmp2016
	.uleb128 .Ltmp2036-.Lfunc_begin53       #     jumps to .Ltmp2036
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2017-.Lfunc_begin53       # >> Call Site 120 <<
	.uleb128 .Ltmp2018-.Ltmp2017            #   Call between .Ltmp2017 and .Ltmp2018
	.uleb128 .Ltmp2019-.Lfunc_begin53       #     jumps to .Ltmp2019
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2020-.Lfunc_begin53       # >> Call Site 121 <<
	.uleb128 .Ltmp2021-.Ltmp2020            #   Call between .Ltmp2020 and .Ltmp2021
	.uleb128 .Ltmp2027-.Lfunc_begin53       #     jumps to .Ltmp2027
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2021-.Lfunc_begin53       # >> Call Site 122 <<
	.uleb128 .Ltmp2022-.Ltmp2021            #   Call between .Ltmp2021 and .Ltmp2022
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2022-.Lfunc_begin53       # >> Call Site 123 <<
	.uleb128 .Ltmp2023-.Ltmp2022            #   Call between .Ltmp2022 and .Ltmp2023
	.uleb128 .Ltmp2024-.Lfunc_begin53       #     jumps to .Ltmp2024
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2045-.Lfunc_begin53       # >> Call Site 124 <<
	.uleb128 .Ltmp2046-.Ltmp2045            #   Call between .Ltmp2045 and .Ltmp2046
	.uleb128 .Ltmp2047-.Lfunc_begin53       #     jumps to .Ltmp2047
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2048-.Lfunc_begin53       # >> Call Site 125 <<
	.uleb128 .Ltmp2049-.Ltmp2048            #   Call between .Ltmp2048 and .Ltmp2049
	.uleb128 .Ltmp2050-.Lfunc_begin53       #     jumps to .Ltmp2050
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2049-.Lfunc_begin53       # >> Call Site 126 <<
	.uleb128 .Ltmp2031-.Ltmp2049            #   Call between .Ltmp2049 and .Ltmp2031
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2031-.Lfunc_begin53       # >> Call Site 127 <<
	.uleb128 .Ltmp2032-.Ltmp2031            #   Call between .Ltmp2031 and .Ltmp2032
	.uleb128 .Ltmp2033-.Lfunc_begin53       #     jumps to .Ltmp2033
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2034-.Lfunc_begin53       # >> Call Site 128 <<
	.uleb128 .Ltmp2035-.Ltmp2034            #   Call between .Ltmp2034 and .Ltmp2035
	.uleb128 .Ltmp2036-.Lfunc_begin53       #     jumps to .Ltmp2036
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2025-.Lfunc_begin53       # >> Call Site 129 <<
	.uleb128 .Ltmp2026-.Ltmp2025            #   Call between .Ltmp2025 and .Ltmp2026
	.uleb128 .Ltmp2027-.Lfunc_begin53       #     jumps to .Ltmp2027
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2026-.Lfunc_begin53       # >> Call Site 130 <<
	.uleb128 .Ltmp2028-.Ltmp2026            #   Call between .Ltmp2026 and .Ltmp2028
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2028-.Lfunc_begin53       # >> Call Site 131 <<
	.uleb128 .Ltmp2029-.Ltmp2028            #   Call between .Ltmp2028 and .Ltmp2029
	.uleb128 .Ltmp2030-.Lfunc_begin53       #     jumps to .Ltmp2030
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2029-.Lfunc_begin53       # >> Call Site 132 <<
	.uleb128 .Ltmp2037-.Ltmp2029            #   Call between .Ltmp2029 and .Ltmp2037
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2037-.Lfunc_begin53       # >> Call Site 133 <<
	.uleb128 .Ltmp2038-.Ltmp2037            #   Call between .Ltmp2037 and .Ltmp2038
	.uleb128 .Ltmp2039-.Lfunc_begin53       #     jumps to .Ltmp2039
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2042-.Lfunc_begin53       # >> Call Site 134 <<
	.uleb128 .Ltmp2043-.Ltmp2042            #   Call between .Ltmp2042 and .Ltmp2043
	.uleb128 .Ltmp2044-.Lfunc_begin53       #     jumps to .Ltmp2044
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2069-.Lfunc_begin53       # >> Call Site 135 <<
	.uleb128 .Ltmp2070-.Ltmp2069            #   Call between .Ltmp2069 and .Ltmp2070
	.uleb128 .Ltmp2071-.Lfunc_begin53       #     jumps to .Ltmp2071
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2072-.Lfunc_begin53       # >> Call Site 136 <<
	.uleb128 .Ltmp2073-.Ltmp2072            #   Call between .Ltmp2072 and .Ltmp2073
	.uleb128 .Ltmp2080-.Lfunc_begin53       #     jumps to .Ltmp2080
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2073-.Lfunc_begin53       # >> Call Site 137 <<
	.uleb128 .Ltmp1927-.Ltmp2073            #   Call between .Ltmp2073 and .Ltmp1927
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1927-.Lfunc_begin53       # >> Call Site 138 <<
	.uleb128 .Ltmp1930-.Ltmp1927            #   Call between .Ltmp1927 and .Ltmp1930
	.uleb128 .Ltmp1936-.Lfunc_begin53       #     jumps to .Ltmp1936
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1931-.Lfunc_begin53       # >> Call Site 139 <<
	.uleb128 .Ltmp1932-.Ltmp1931            #   Call between .Ltmp1931 and .Ltmp1932
	.uleb128 .Ltmp1933-.Lfunc_begin53       #     jumps to .Ltmp1933
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1932-.Lfunc_begin53       # >> Call Site 140 <<
	.uleb128 .Ltmp2076-.Ltmp1932            #   Call between .Ltmp1932 and .Ltmp2076
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2076-.Lfunc_begin53       # >> Call Site 141 <<
	.uleb128 .Ltmp2079-.Ltmp2076            #   Call between .Ltmp2076 and .Ltmp2079
	.uleb128 .Ltmp2080-.Lfunc_begin53       #     jumps to .Ltmp2080
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2081-.Lfunc_begin53       # >> Call Site 142 <<
	.uleb128 .Ltmp2082-.Ltmp2081            #   Call between .Ltmp2081 and .Ltmp2082
	.uleb128 .Ltmp2083-.Lfunc_begin53       #     jumps to .Ltmp2083
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2084-.Lfunc_begin53       # >> Call Site 143 <<
	.uleb128 .Ltmp2085-.Ltmp2084            #   Call between .Ltmp2084 and .Ltmp2085
	.uleb128 .Ltmp2086-.Lfunc_begin53       #     jumps to .Ltmp2086
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2150-.Lfunc_begin53       # >> Call Site 144 <<
	.uleb128 .Ltmp2151-.Ltmp2150            #   Call between .Ltmp2150 and .Ltmp2151
	.uleb128 .Ltmp2156-.Lfunc_begin53       #     jumps to .Ltmp2156
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2169-.Lfunc_begin53       # >> Call Site 145 <<
	.uleb128 .Ltmp2170-.Ltmp2169            #   Call between .Ltmp2169 and .Ltmp2170
	.uleb128 .Ltmp2175-.Lfunc_begin53       #     jumps to .Ltmp2175
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1877-.Lfunc_begin53       # >> Call Site 146 <<
	.uleb128 .Ltmp1878-.Ltmp1877            #   Call between .Ltmp1877 and .Ltmp1878
	.uleb128 .Ltmp1879-.Lfunc_begin53       #     jumps to .Ltmp1879
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1868-.Lfunc_begin53       # >> Call Site 147 <<
	.uleb128 .Ltmp1869-.Ltmp1868            #   Call between .Ltmp1868 and .Ltmp1869
	.uleb128 .Ltmp1870-.Lfunc_begin53       #     jumps to .Ltmp1870
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1692-.Lfunc_begin53       # >> Call Site 148 <<
	.uleb128 .Ltmp1693-.Ltmp1692            #   Call between .Ltmp1692 and .Ltmp1693
	.uleb128 .Ltmp1694-.Lfunc_begin53       #     jumps to .Ltmp1694
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1693-.Lfunc_begin53       # >> Call Site 149 <<
	.uleb128 .Ltmp1709-.Ltmp1693            #   Call between .Ltmp1693 and .Ltmp1709
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1709-.Lfunc_begin53       # >> Call Site 150 <<
	.uleb128 .Ltmp1710-.Ltmp1709            #   Call between .Ltmp1709 and .Ltmp1710
	.uleb128 .Ltmp1711-.Lfunc_begin53       #     jumps to .Ltmp1711
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1712-.Lfunc_begin53       # >> Call Site 151 <<
	.uleb128 .Ltmp1713-.Ltmp1712            #   Call between .Ltmp1712 and .Ltmp1713
	.uleb128 .Ltmp1870-.Lfunc_begin53       #     jumps to .Ltmp1870
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1713-.Lfunc_begin53       # >> Call Site 152 <<
	.uleb128 .Ltmp1768-.Ltmp1713            #   Call between .Ltmp1713 and .Ltmp1768
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1768-.Lfunc_begin53       # >> Call Site 153 <<
	.uleb128 .Ltmp1769-.Ltmp1768            #   Call between .Ltmp1768 and .Ltmp1769
	.uleb128 .Ltmp1770-.Lfunc_begin53       #     jumps to .Ltmp1770
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1771-.Lfunc_begin53       # >> Call Site 154 <<
	.uleb128 .Ltmp1772-.Ltmp1771            #   Call between .Ltmp1771 and .Ltmp1772
	.uleb128 .Ltmp1773-.Lfunc_begin53       #     jumps to .Ltmp1773
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1843-.Lfunc_begin53       # >> Call Site 155 <<
	.uleb128 .Ltmp1844-.Ltmp1843            #   Call between .Ltmp1843 and .Ltmp1844
	.uleb128 .Ltmp1845-.Lfunc_begin53       #     jumps to .Ltmp1845
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp2160-.Lfunc_begin53       # >> Call Site 156 <<
	.uleb128 .Ltmp2161-.Ltmp2160            #   Call between .Ltmp2160 and .Ltmp2161
	.uleb128 .Ltmp2162-.Lfunc_begin53       #     jumps to .Ltmp2162
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2157-.Lfunc_begin53       # >> Call Site 157 <<
	.uleb128 .Ltmp2158-.Ltmp2157            #   Call between .Ltmp2157 and .Ltmp2158
	.uleb128 .Ltmp2159-.Lfunc_begin53       #     jumps to .Ltmp2159
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2147-.Lfunc_begin53       # >> Call Site 158 <<
	.uleb128 .Ltmp2148-.Ltmp2147            #   Call between .Ltmp2147 and .Ltmp2148
	.uleb128 .Ltmp2149-.Lfunc_begin53       #     jumps to .Ltmp2149
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1723-.Lfunc_begin53       # >> Call Site 159 <<
	.uleb128 .Ltmp1724-.Ltmp1723            #   Call between .Ltmp1723 and .Ltmp1724
	.uleb128 .Ltmp1725-.Lfunc_begin53       #     jumps to .Ltmp1725
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp2154-.Lfunc_begin53       # >> Call Site 160 <<
	.uleb128 .Ltmp2155-.Ltmp2154            #   Call between .Ltmp2154 and .Ltmp2155
	.uleb128 .Ltmp2156-.Lfunc_begin53       #     jumps to .Ltmp2156
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2138-.Lfunc_begin53       # >> Call Site 161 <<
	.uleb128 .Ltmp2139-.Ltmp2138            #   Call between .Ltmp2138 and .Ltmp2139
	.uleb128 .Ltmp2140-.Lfunc_begin53       #     jumps to .Ltmp2140
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1673-.Lfunc_begin53       # >> Call Site 162 <<
	.uleb128 .Ltmp1674-.Ltmp1673            #   Call between .Ltmp1673 and .Ltmp1674
	.uleb128 .Ltmp1675-.Lfunc_begin53       #     jumps to .Ltmp1675
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1812-.Lfunc_begin53       # >> Call Site 163 <<
	.uleb128 .Ltmp1813-.Ltmp1812            #   Call between .Ltmp1812 and .Ltmp1813
	.uleb128 .Ltmp1814-.Lfunc_begin53       #     jumps to .Ltmp1814
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp2152-.Lfunc_begin53       # >> Call Site 164 <<
	.uleb128 .Ltmp2153-.Ltmp2152            #   Call between .Ltmp2152 and .Ltmp2153
	.uleb128 .Ltmp2156-.Lfunc_begin53       #     jumps to .Ltmp2156
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2054-.Lfunc_begin53       # >> Call Site 165 <<
	.uleb128 .Ltmp2055-.Ltmp2054            #   Call between .Ltmp2054 and .Ltmp2055
	.uleb128 .Ltmp2056-.Lfunc_begin53       #     jumps to .Ltmp2056
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2051-.Lfunc_begin53       # >> Call Site 166 <<
	.uleb128 .Ltmp2052-.Ltmp2051            #   Call between .Ltmp2051 and .Ltmp2052
	.uleb128 .Ltmp2053-.Lfunc_begin53       #     jumps to .Ltmp2053
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1970-.Lfunc_begin53       # >> Call Site 167 <<
	.uleb128 .Ltmp1971-.Ltmp1970            #   Call between .Ltmp1970 and .Ltmp1971
	.uleb128 .Ltmp1972-.Lfunc_begin53       #     jumps to .Ltmp1972
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1835-.Lfunc_begin53       # >> Call Site 168 <<
	.uleb128 .Ltmp1836-.Ltmp1835            #   Call between .Ltmp1835 and .Ltmp1836
	.uleb128 .Ltmp1845-.Lfunc_begin53       #     jumps to .Ltmp1845
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1837-.Lfunc_begin53       # >> Call Site 169 <<
	.uleb128 .Ltmp1838-.Ltmp1837            #   Call between .Ltmp1837 and .Ltmp1838
	.uleb128 .Ltmp1839-.Lfunc_begin53       #     jumps to .Ltmp1839
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1748-.Lfunc_begin53       # >> Call Site 170 <<
	.uleb128 .Ltmp1749-.Ltmp1748            #   Call between .Ltmp1748 and .Ltmp1749
	.uleb128 .Ltmp1750-.Lfunc_begin53       #     jumps to .Ltmp1750
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1780-.Lfunc_begin53       # >> Call Site 171 <<
	.uleb128 .Ltmp1781-.Ltmp1780            #   Call between .Ltmp1780 and .Ltmp1781
	.uleb128 .Ltmp1782-.Lfunc_begin53       #     jumps to .Ltmp1782
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1968-.Lfunc_begin53       # >> Call Site 172 <<
	.uleb128 .Ltmp1969-.Ltmp1968            #   Call between .Ltmp1968 and .Ltmp1969
	.uleb128 .Ltmp1972-.Lfunc_begin53       #     jumps to .Ltmp1972
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1934-.Lfunc_begin53       # >> Call Site 173 <<
	.uleb128 .Ltmp1935-.Ltmp1934            #   Call between .Ltmp1934 and .Ltmp1935
	.uleb128 .Ltmp1936-.Lfunc_begin53       #     jumps to .Ltmp1936
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1797-.Lfunc_begin53       # >> Call Site 174 <<
	.uleb128 .Ltmp1798-.Ltmp1797            #   Call between .Ltmp1797 and .Ltmp1798
	.uleb128 .Ltmp1799-.Lfunc_begin53       #     jumps to .Ltmp1799
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp2173-.Lfunc_begin53       # >> Call Site 175 <<
	.uleb128 .Ltmp2174-.Ltmp2173            #   Call between .Ltmp2173 and .Ltmp2174
	.uleb128 .Ltmp2175-.Lfunc_begin53       #     jumps to .Ltmp2175
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2166-.Lfunc_begin53       # >> Call Site 176 <<
	.uleb128 .Ltmp2167-.Ltmp2166            #   Call between .Ltmp2166 and .Ltmp2167
	.uleb128 .Ltmp2168-.Lfunc_begin53       #     jumps to .Ltmp2168
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2163-.Lfunc_begin53       # >> Call Site 177 <<
	.uleb128 .Ltmp2164-.Ltmp2163            #   Call between .Ltmp2163 and .Ltmp2164
	.uleb128 .Ltmp2165-.Lfunc_begin53       #     jumps to .Ltmp2165
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2144-.Lfunc_begin53       # >> Call Site 178 <<
	.uleb128 .Ltmp2145-.Ltmp2144            #   Call between .Ltmp2144 and .Ltmp2145
	.uleb128 .Ltmp2146-.Lfunc_begin53       #     jumps to .Ltmp2146
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2171-.Lfunc_begin53       # >> Call Site 179 <<
	.uleb128 .Ltmp2172-.Ltmp2171            #   Call between .Ltmp2171 and .Ltmp2172
	.uleb128 .Ltmp2175-.Lfunc_begin53       #     jumps to .Ltmp2175
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2063-.Lfunc_begin53       # >> Call Site 180 <<
	.uleb128 .Ltmp2064-.Ltmp2063            #   Call between .Ltmp2063 and .Ltmp2064
	.uleb128 .Ltmp2065-.Lfunc_begin53       #     jumps to .Ltmp2065
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2074-.Lfunc_begin53       # >> Call Site 181 <<
	.uleb128 .Ltmp2075-.Ltmp2074            #   Call between .Ltmp2074 and .Ltmp2075
	.uleb128 .Ltmp2080-.Lfunc_begin53       #     jumps to .Ltmp2080
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2040-.Lfunc_begin53       # >> Call Site 182 <<
	.uleb128 .Ltmp2133-.Ltmp2040            #   Call between .Ltmp2040 and .Ltmp2133
	.uleb128 .Ltmp2134-.Lfunc_begin53       #     jumps to .Ltmp2134
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2133-.Lfunc_begin53       # >> Call Site 183 <<
	.uleb128 .Ltmp1783-.Ltmp2133            #   Call between .Ltmp2133 and .Ltmp1783
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1783-.Lfunc_begin53       # >> Call Site 184 <<
	.uleb128 .Ltmp1784-.Ltmp1783            #   Call between .Ltmp1783 and .Ltmp1784
	.uleb128 .Ltmp1785-.Lfunc_begin53       #     jumps to .Ltmp1785
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1751-.Lfunc_begin53       # >> Call Site 185 <<
	.uleb128 .Ltmp1752-.Ltmp1751            #   Call between .Ltmp1751 and .Ltmp1752
	.uleb128 .Ltmp1753-.Lfunc_begin53       #     jumps to .Ltmp1753
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1840-.Lfunc_begin53       # >> Call Site 186 <<
	.uleb128 .Ltmp1841-.Ltmp1840            #   Call between .Ltmp1840 and .Ltmp1841
	.uleb128 .Ltmp1842-.Lfunc_begin53       #     jumps to .Ltmp1842
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2057-.Lfunc_begin53       # >> Call Site 187 <<
	.uleb128 .Ltmp2058-.Ltmp2057            #   Call between .Ltmp2057 and .Ltmp2058
	.uleb128 .Ltmp2059-.Lfunc_begin53       #     jumps to .Ltmp2059
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2060-.Lfunc_begin53       # >> Call Site 188 <<
	.uleb128 .Ltmp2061-.Ltmp2060            #   Call between .Ltmp2060 and .Ltmp2061
	.uleb128 .Ltmp2062-.Lfunc_begin53       #     jumps to .Ltmp2062
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2066-.Lfunc_begin53       # >> Call Site 189 <<
	.uleb128 .Ltmp2067-.Ltmp2066            #   Call between .Ltmp2066 and .Ltmp2067
	.uleb128 .Ltmp2068-.Lfunc_begin53       #     jumps to .Ltmp2068
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1815-.Lfunc_begin53       # >> Call Site 190 <<
	.uleb128 .Ltmp1816-.Ltmp1815            #   Call between .Ltmp1815 and .Ltmp1816
	.uleb128 .Ltmp1817-.Lfunc_begin53       #     jumps to .Ltmp1817
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1816-.Lfunc_begin53       # >> Call Site 191 <<
	.uleb128 .Ltmp1726-.Ltmp1816            #   Call between .Ltmp1816 and .Ltmp1726
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1726-.Lfunc_begin53       # >> Call Site 192 <<
	.uleb128 .Ltmp1727-.Ltmp1726            #   Call between .Ltmp1726 and .Ltmp1727
	.uleb128 .Ltmp1728-.Lfunc_begin53       #     jumps to .Ltmp1728
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2141-.Lfunc_begin53       # >> Call Site 193 <<
	.uleb128 .Ltmp2142-.Ltmp2141            #   Call between .Ltmp2141 and .Ltmp2142
	.uleb128 .Ltmp2143-.Lfunc_begin53       #     jumps to .Ltmp2143
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2142-.Lfunc_begin53       # >> Call Site 194 <<
	.uleb128 .Ltmp1774-.Ltmp2142            #   Call between .Ltmp2142 and .Ltmp1774
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1774-.Lfunc_begin53       # >> Call Site 195 <<
	.uleb128 .Ltmp1775-.Ltmp1774            #   Call between .Ltmp1774 and .Ltmp1775
	.uleb128 .Ltmp1776-.Lfunc_begin53       #     jumps to .Ltmp1776
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1803-.Lfunc_begin53       # >> Call Site 196 <<
	.uleb128 .Ltmp1804-.Ltmp1803            #   Call between .Ltmp1803 and .Ltmp1804
	.uleb128 .Ltmp1805-.Lfunc_begin53       #     jumps to .Ltmp1805
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1871-.Lfunc_begin53       # >> Call Site 197 <<
	.uleb128 .Ltmp1872-.Ltmp1871            #   Call between .Ltmp1871 and .Ltmp1872
	.uleb128 .Ltmp1873-.Lfunc_begin53       #     jumps to .Ltmp1873
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1872-.Lfunc_begin53       # >> Call Site 198 <<
	.uleb128 .Ltmp1912-.Ltmp1872            #   Call between .Ltmp1872 and .Ltmp1912
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1912-.Lfunc_begin53       # >> Call Site 199 <<
	.uleb128 .Ltmp1913-.Ltmp1912            #   Call between .Ltmp1912 and .Ltmp1913
	.uleb128 .Ltmp1914-.Lfunc_begin53       #     jumps to .Ltmp1914
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1913-.Lfunc_begin53       # >> Call Site 200 <<
	.uleb128 .Ltmp1902-.Ltmp1913            #   Call between .Ltmp1913 and .Ltmp1902
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1902-.Lfunc_begin53       # >> Call Site 201 <<
	.uleb128 .Ltmp1903-.Ltmp1902            #   Call between .Ltmp1902 and .Ltmp1903
	.uleb128 .Ltmp1904-.Lfunc_begin53       #     jumps to .Ltmp1904
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1903-.Lfunc_begin53       # >> Call Site 202 <<
	.uleb128 .Ltmp1907-.Ltmp1903            #   Call between .Ltmp1903 and .Ltmp1907
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1907-.Lfunc_begin53       # >> Call Site 203 <<
	.uleb128 .Ltmp1908-.Ltmp1907            #   Call between .Ltmp1907 and .Ltmp1908
	.uleb128 .Ltmp1909-.Lfunc_begin53       #     jumps to .Ltmp1909
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1910-.Lfunc_begin53       # >> Call Site 204 <<
	.uleb128 .Ltmp1916-.Ltmp1910            #   Call between .Ltmp1910 and .Ltmp1916
	.uleb128 .Ltmp2134-.Lfunc_begin53       #     jumps to .Ltmp2134
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1916-.Lfunc_begin53       # >> Call Site 205 <<
	.uleb128 .Lfunc_end112-.Ltmp1916        #   Call between .Ltmp1916 and .Lfunc_end112
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end53:
	.byte	0                               # >> Action Record 1 <<
                                        #   Cleanup
	.byte	0                               #   No further actions
	.byte	3                               # >> Action Record 2 <<
                                        #   Catch TypeInfo 3
	.byte	125                             #   Continue to action 1
	.byte	1                               # >> Action Record 3 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.byte	2                               # >> Action Record 4 <<
                                        #   Catch TypeInfo 2
	.byte	125                             #   Continue to action 3
	.byte	3                               # >> Action Record 5 <<
                                        #   Catch TypeInfo 3
	.byte	125                             #   Continue to action 4
	.byte	4                               # >> Action Record 6 <<
                                        #   Catch TypeInfo 4
	.byte	125                             #   Continue to action 5
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
.Ltmp2176:                              # TypeInfo 4
	.long	.L_ZTIN8pybind1120reference_cast_errorE.DW.stub-.Ltmp2176
.Ltmp2177:                              # TypeInfo 3
	.long	.L_ZTIN8pybind1117error_already_setE.DW.stub-.Ltmp2177
.Ltmp2178:                              # TypeInfo 2
	.long	.L_ZTIN10__cxxabiv115__forced_unwindE.DW.stub-.Ltmp2178
	.long	0                               # TypeInfo 1
.Lttbase32:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind117capsuleC2EPKvPKcPFvPvE,"axG",@progbits,_ZN8pybind117capsuleC2EPKvPKcPFvPvE,comdat
	.hidden	_ZN8pybind117capsuleC2EPKvPKcPFvPvE # -- Begin function _ZN8pybind117capsuleC2EPKvPKcPFvPvE
	.weak	_ZN8pybind117capsuleC2EPKvPKcPFvPvE
	.p2align	4, 0x90
	.type	_ZN8pybind117capsuleC2EPKvPKcPFvPvE,@function
_ZN8pybind117capsuleC2EPKvPKcPFvPvE:    # @_ZN8pybind117capsuleC2EPKvPKcPFvPvE
.Lfunc_begin54:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception54
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rcx, %r14
	movq	%rdi, %rbx
	movq	$0, (%rdi)
.Ltmp2179:
	leaq	_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENUlP7_objectE_8__invokeES9_(%rip), %rax
	movq	%rsi, %rdi
	movq	%rdx, %rsi
	movq	%rax, %rdx
	callq	PyCapsule_New@PLT
.Ltmp2180:
# %bb.1:                                # %.noexc
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB113_4
# %bb.2:
.Ltmp2181:
	movq	%rax, %rdi
	movq	%r14, %rsi
	callq	PyCapsule_SetContext@PLT
.Ltmp2182:
# %bb.3:                                # %.noexc5
	testl	%eax, %eax
	jne	.LBB113_4
# %bb.8:                                # %_ZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvE.exit
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB113_4:
	.cfi_def_cfa_offset 32
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp2183:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2184:
# %bb.5:
.Ltmp2186:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp2187:
# %bb.6:                                # %.noexc6
.LBB113_7:
.Ltmp2185:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB113_10
.LBB113_9:
.Ltmp2188:
	movq	%rax, %r14
.LBB113_10:                             # %.body
.Ltmp2189:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2190:
# %bb.11:                               # %_ZN8pybind116objectD2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB113_12:
.Ltmp2191:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end113:
	.size	_ZN8pybind117capsuleC2EPKvPKcPFvPvE, .Lfunc_end113-_ZN8pybind117capsuleC2EPKvPKcPFvPvE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind117capsuleC2EPKvPKcPFvPvE,"aG",@progbits,_ZN8pybind117capsuleC2EPKvPKcPFvPvE,comdat
	.p2align	2, 0x0
GCC_except_table113:
.Lexception54:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase33-.Lttbaseref33
.Lttbaseref33:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end54-.Lcst_begin54
.Lcst_begin54:
	.uleb128 .Ltmp2179-.Lfunc_begin54       # >> Call Site 1 <<
	.uleb128 .Ltmp2182-.Ltmp2179            #   Call between .Ltmp2179 and .Ltmp2182
	.uleb128 .Ltmp2188-.Lfunc_begin54       #     jumps to .Ltmp2188
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2182-.Lfunc_begin54       # >> Call Site 2 <<
	.uleb128 .Ltmp2183-.Ltmp2182            #   Call between .Ltmp2182 and .Ltmp2183
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2183-.Lfunc_begin54       # >> Call Site 3 <<
	.uleb128 .Ltmp2184-.Ltmp2183            #   Call between .Ltmp2183 and .Ltmp2184
	.uleb128 .Ltmp2185-.Lfunc_begin54       #     jumps to .Ltmp2185
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2186-.Lfunc_begin54       # >> Call Site 4 <<
	.uleb128 .Ltmp2187-.Ltmp2186            #   Call between .Ltmp2186 and .Ltmp2187
	.uleb128 .Ltmp2188-.Lfunc_begin54       #     jumps to .Ltmp2188
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2187-.Lfunc_begin54       # >> Call Site 5 <<
	.uleb128 .Ltmp2189-.Ltmp2187            #   Call between .Ltmp2187 and .Ltmp2189
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2189-.Lfunc_begin54       # >> Call Site 6 <<
	.uleb128 .Ltmp2190-.Ltmp2189            #   Call between .Ltmp2189 and .Ltmp2190
	.uleb128 .Ltmp2191-.Lfunc_begin54       #     jumps to .Ltmp2191
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2190-.Lfunc_begin54       # >> Call Site 7 <<
	.uleb128 .Lfunc_end113-.Ltmp2190        #   Call between .Ltmp2190 and .Lfunc_end113
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end54:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase33:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE,"axG",@progbits,_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE,comdat
	.hidden	_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE # -- Begin function _ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE
	.weak	_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE
	.p2align	4, 0x90
	.type	_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE,@function
_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE: # @_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE
.Lfunc_begin55:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception55
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
	movq	(%rax), %rax
	movq	%rax, (%rsp)
	movq	%rsp, %r14
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2192:
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	_ZN8pybind113strC2EONS_6objectE
.Ltmp2193:
# %bb.1:
.Ltmp2198:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2199:
# %bb.2:                                # %_ZN8pybind116objectD2Ev.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB114_6:
	.cfi_def_cfa_offset 32
.Ltmp2200:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB114_4:
.Ltmp2194:
	movq	%rax, %rbx
.Ltmp2195:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2196:
# %bb.5:                                # %_ZN8pybind116objectD2Ev.exit3
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB114_3:
.Ltmp2197:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end114:
	.size	_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE, .Lfunc_end114-_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE,"aG",@progbits,_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE,comdat
	.p2align	2, 0x0
GCC_except_table114:
.Lexception55:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase34-.Lttbaseref34
.Lttbaseref34:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end55-.Lcst_begin55
.Lcst_begin55:
	.uleb128 .Lfunc_begin55-.Lfunc_begin55  # >> Call Site 1 <<
	.uleb128 .Ltmp2192-.Lfunc_begin55       #   Call between .Lfunc_begin55 and .Ltmp2192
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2192-.Lfunc_begin55       # >> Call Site 2 <<
	.uleb128 .Ltmp2193-.Ltmp2192            #   Call between .Ltmp2192 and .Ltmp2193
	.uleb128 .Ltmp2194-.Lfunc_begin55       #     jumps to .Ltmp2194
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2198-.Lfunc_begin55       # >> Call Site 3 <<
	.uleb128 .Ltmp2199-.Ltmp2198            #   Call between .Ltmp2198 and .Ltmp2199
	.uleb128 .Ltmp2200-.Lfunc_begin55       #     jumps to .Ltmp2200
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2195-.Lfunc_begin55       # >> Call Site 4 <<
	.uleb128 .Ltmp2196-.Ltmp2195            #   Call between .Ltmp2195 and .Ltmp2196
	.uleb128 .Ltmp2197-.Lfunc_begin55       #     jumps to .Ltmp2197
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2196-.Lfunc_begin55       # >> Call Site 5 <<
	.uleb128 .Lfunc_end114-.Ltmp2196        #   Call between .Ltmp2196 and .Lfunc_end114
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end55:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase34:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv,"axG",@progbits,_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv,comdat
	.hidden	_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv # -- Begin function _ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv
	.weak	_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv
	.p2align	4, 0x90
	.type	_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv,@function
_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv: # @_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv
.Lfunc_begin56:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception56
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$24, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	(%rsi), %rax
	movq	%rax, (%rsp)
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%r14), %rdi
	movq	8(%rdi), %rax
	testb	$16, 171(%rax)
	jne	.LBB115_6
# %bb.1:                                # %._crit_edge
	movq	(%rsp), %rdi
	jmp	.LBB115_2
.LBB115_6:
.Ltmp2201:
	callq	PyUnicode_AsUTF8String@PLT
.Ltmp2202:
# %bb.7:
	movq	(%rsp), %rcx
	movq	%rcx, 16(%rsp)
	movq	%rax, (%rsp)
	movq	$0, 8(%rsp)
.Ltmp2204:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2205:
# %bb.8:                                # %_ZN8pybind116objectaSEOS0_.exit
.Ltmp2207:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2208:
# %bb.9:                                # %_ZN8pybind116objectD2Ev.exit
	movq	(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB115_10
.LBB115_2:
	movq	$0, 16(%rsp)
	movq	$0, 8(%rsp)
.Ltmp2216:
	leaq	16(%rsp), %rsi
	leaq	8(%rsp), %rdx
	callq	PyBytes_AsStringAndSize@PLT
.Ltmp2217:
# %bb.3:
	testl	%eax, %eax
	jne	.LBB115_4
# %bb.18:
	movq	16(%rsp), %r15
	movq	8(%rsp), %r14
	leaq	16(%rbx), %r12
	movq	%r12, (%rbx)
	testq	%r15, %r15
	setne	%al
	testq	%r14, %r14
	sete	%cl
	orb	%al, %cl
	je	.LBB115_19
# %bb.21:
	cmpq	$16, %r14
	jb	.LBB115_30
# %bb.22:
	testq	%r14, %r14
	js	.LBB115_23
# %bb.25:
	movq	%r14, %rdi
	incq	%rdi
	js	.LBB115_26
# %bb.28:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
.Ltmp2224:
	callq	_Znwm@PLT
.Ltmp2225:
# %bb.29:                               # %.noexc10
	movq	%rax, %r12
	movq	%rax, (%rbx)
	movq	%r14, 16(%rbx)
.LBB115_30:                             # %._crit_edge.i.i
	testq	%r14, %r14
	je	.LBB115_34
# %bb.31:                               # %._crit_edge.i.i
	cmpq	$1, %r14
	jne	.LBB115_33
# %bb.32:
	movzbl	(%r15), %eax
	movb	%al, (%r12)
	jmp	.LBB115_34
.LBB115_33:
	movq	%r12, %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
.LBB115_34:
	movq	%r14, 8(%rbx)
	movb	$0, (%r12,%r14)
.Ltmp2226:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2227:
# %bb.35:                               # %_ZN8pybind116objectD2Ev.exit11
	movq	%rbx, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB115_26:                             # %.noexc9.i
	.cfi_def_cfa_offset 64
.Ltmp2229:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp2230:
# %bb.27:                               # %.noexc9
.LBB115_4:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2218:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2219:
# %bb.5:
.Ltmp2221:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2222:
	jmp	.LBB115_40
.LBB115_19:
.Ltmp2233:
	leaq	.L.str.35(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.Ltmp2234:
# %bb.20:                               # %.noexc
.LBB115_10:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2210:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2211:
# %bb.11:
.Ltmp2213:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2214:
.LBB115_40:
.LBB115_23:                             # %.noexc.i
.Ltmp2231:
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2232:
# %bb.24:                               # %.noexc8
.LBB115_15:
.Ltmp2215:
	jmp	.LBB115_37
.LBB115_13:
.Ltmp2212:
	jmp	.LBB115_14
.LBB115_17:
.Ltmp2220:
.LBB115_14:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB115_38
.LBB115_42:
.Ltmp2209:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB115_41:
.Ltmp2206:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB115_12:
.Ltmp2203:
	jmp	.LBB115_37
.LBB115_43:
.Ltmp2228:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB115_16:
.Ltmp2223:
	jmp	.LBB115_37
.LBB115_36:
.Ltmp2235:
.LBB115_37:
	movq	%rax, %rbx
.LBB115_38:
.Ltmp2236:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2237:
# %bb.39:                               # %_ZN8pybind116objectD2Ev.exit12
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB115_44:
.Ltmp2238:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end115:
	.size	_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv, .Lfunc_end115-_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv,"aG",@progbits,_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv,comdat
	.p2align	2, 0x0
GCC_except_table115:
.Lexception56:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase35-.Lttbaseref35
.Lttbaseref35:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end56-.Lcst_begin56
.Lcst_begin56:
	.uleb128 .Lfunc_begin56-.Lfunc_begin56  # >> Call Site 1 <<
	.uleb128 .Ltmp2201-.Lfunc_begin56       #   Call between .Lfunc_begin56 and .Ltmp2201
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2201-.Lfunc_begin56       # >> Call Site 2 <<
	.uleb128 .Ltmp2202-.Ltmp2201            #   Call between .Ltmp2201 and .Ltmp2202
	.uleb128 .Ltmp2203-.Lfunc_begin56       #     jumps to .Ltmp2203
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2204-.Lfunc_begin56       # >> Call Site 3 <<
	.uleb128 .Ltmp2205-.Ltmp2204            #   Call between .Ltmp2204 and .Ltmp2205
	.uleb128 .Ltmp2206-.Lfunc_begin56       #     jumps to .Ltmp2206
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2207-.Lfunc_begin56       # >> Call Site 4 <<
	.uleb128 .Ltmp2208-.Ltmp2207            #   Call between .Ltmp2207 and .Ltmp2208
	.uleb128 .Ltmp2209-.Lfunc_begin56       #     jumps to .Ltmp2209
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2216-.Lfunc_begin56       # >> Call Site 5 <<
	.uleb128 .Ltmp2217-.Ltmp2216            #   Call between .Ltmp2216 and .Ltmp2217
	.uleb128 .Ltmp2223-.Lfunc_begin56       #     jumps to .Ltmp2223
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2224-.Lfunc_begin56       # >> Call Site 6 <<
	.uleb128 .Ltmp2225-.Ltmp2224            #   Call between .Ltmp2224 and .Ltmp2225
	.uleb128 .Ltmp2235-.Lfunc_begin56       #     jumps to .Ltmp2235
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2225-.Lfunc_begin56       # >> Call Site 7 <<
	.uleb128 .Ltmp2226-.Ltmp2225            #   Call between .Ltmp2225 and .Ltmp2226
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2226-.Lfunc_begin56       # >> Call Site 8 <<
	.uleb128 .Ltmp2227-.Ltmp2226            #   Call between .Ltmp2226 and .Ltmp2227
	.uleb128 .Ltmp2228-.Lfunc_begin56       #     jumps to .Ltmp2228
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2229-.Lfunc_begin56       # >> Call Site 9 <<
	.uleb128 .Ltmp2230-.Ltmp2229            #   Call between .Ltmp2229 and .Ltmp2230
	.uleb128 .Ltmp2235-.Lfunc_begin56       #     jumps to .Ltmp2235
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2230-.Lfunc_begin56       # >> Call Site 10 <<
	.uleb128 .Ltmp2218-.Ltmp2230            #   Call between .Ltmp2230 and .Ltmp2218
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2218-.Lfunc_begin56       # >> Call Site 11 <<
	.uleb128 .Ltmp2219-.Ltmp2218            #   Call between .Ltmp2218 and .Ltmp2219
	.uleb128 .Ltmp2220-.Lfunc_begin56       #     jumps to .Ltmp2220
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2221-.Lfunc_begin56       # >> Call Site 12 <<
	.uleb128 .Ltmp2222-.Ltmp2221            #   Call between .Ltmp2221 and .Ltmp2222
	.uleb128 .Ltmp2223-.Lfunc_begin56       #     jumps to .Ltmp2223
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2233-.Lfunc_begin56       # >> Call Site 13 <<
	.uleb128 .Ltmp2234-.Ltmp2233            #   Call between .Ltmp2233 and .Ltmp2234
	.uleb128 .Ltmp2235-.Lfunc_begin56       #     jumps to .Ltmp2235
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2234-.Lfunc_begin56       # >> Call Site 14 <<
	.uleb128 .Ltmp2210-.Ltmp2234            #   Call between .Ltmp2234 and .Ltmp2210
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2210-.Lfunc_begin56       # >> Call Site 15 <<
	.uleb128 .Ltmp2211-.Ltmp2210            #   Call between .Ltmp2210 and .Ltmp2211
	.uleb128 .Ltmp2212-.Lfunc_begin56       #     jumps to .Ltmp2212
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2213-.Lfunc_begin56       # >> Call Site 16 <<
	.uleb128 .Ltmp2214-.Ltmp2213            #   Call between .Ltmp2213 and .Ltmp2214
	.uleb128 .Ltmp2215-.Lfunc_begin56       #     jumps to .Ltmp2215
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2231-.Lfunc_begin56       # >> Call Site 17 <<
	.uleb128 .Ltmp2232-.Ltmp2231            #   Call between .Ltmp2231 and .Ltmp2232
	.uleb128 .Ltmp2235-.Lfunc_begin56       #     jumps to .Ltmp2235
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2232-.Lfunc_begin56       # >> Call Site 18 <<
	.uleb128 .Ltmp2236-.Ltmp2232            #   Call between .Ltmp2232 and .Ltmp2236
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2236-.Lfunc_begin56       # >> Call Site 19 <<
	.uleb128 .Ltmp2237-.Ltmp2236            #   Call between .Ltmp2236 and .Ltmp2237
	.uleb128 .Ltmp2238-.Lfunc_begin56       #     jumps to .Ltmp2238
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2237-.Lfunc_begin56       # >> Call Site 20 <<
	.uleb128 .Lfunc_end115-.Ltmp2237        #   Call between .Ltmp2237 and .Lfunc_end115
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end56:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase35:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1112cpp_function12strdup_guardD2Ev,"axG",@progbits,_ZN8pybind1112cpp_function12strdup_guardD2Ev,comdat
	.hidden	_ZN8pybind1112cpp_function12strdup_guardD2Ev # -- Begin function _ZN8pybind1112cpp_function12strdup_guardD2Ev
	.weak	_ZN8pybind1112cpp_function12strdup_guardD2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind1112cpp_function12strdup_guardD2Ev,@function
_ZN8pybind1112cpp_function12strdup_guardD2Ev: # @_ZN8pybind1112cpp_function12strdup_guardD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	movq	(%rdi), %rbx
	movq	8(%rdi), %r15
	cmpq	%r15, %rbx
	je	.LBB116_3
	.p2align	4, 0x90
.LBB116_1:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rdi
	callq	free@PLT
	addq	$8, %rbx
	cmpq	%r15, %rbx
	jne	.LBB116_1
# %bb.2:                                # %._crit_edge.loopexit
	movq	(%r14), %rbx
.LBB116_3:                              # %._crit_edge
	testq	%rbx, %rbx
	je	.LBB116_4
# %bb.5:
	movq	16(%r14), %rsi
	subq	%rbx, %rsi
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB116_4:                              # %_ZNSt6vectorIPcSaIS0_EED2Ev.exit
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end116:
	.size	_ZN8pybind1112cpp_function12strdup_guardD2Ev, .Lfunc_end116-_ZN8pybind1112cpp_function12strdup_guardD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	8(%rsi), %r12
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rax, %r12
	je	.LBB117_9
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movl	%edx, %ebp
	movq	%rsi, %r14
	movq	%rdi, %rbx
	leaq	1(%r12), %r13
	movq	(%rsi), %rax
	leaq	16(%rsi), %r15
	movl	$15, %ecx
	cmpq	%r15, %rax
	je	.LBB117_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	16(%r14), %rcx
.LBB117_3:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	cmpq	%rcx, %r13
	jbe	.LBB117_5
# %bb.4:
	movl	$1, %r8d
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
	movq	(%r14), %rax
.LBB117_5:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc.exit
	movb	%bpl, (%rax,%r12)
	movq	%r13, 8(%r14)
	movq	(%r14), %rax
	movb	$0, 1(%rax,%r12)
	leaq	16(%rbx), %rdi
	movq	%rdi, (%rbx)
	movq	(%r14), %rax
	cmpq	%r15, %rax
	je	.LBB117_6
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	%rax, (%rbx)
	movq	16(%r14), %rax
	movq	%rax, 16(%rbx)
	movq	8(%r14), %r12
	jmp	.LBB117_8
.LBB117_6:
	movq	8(%r14), %r12
	leaq	1(%r12), %rdx
	movq	%r15, %rsi
	callq	memcpy@PLT
.LBB117_8:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	%r12, 8(%rbx)
	movq	%r15, (%r14)
	movq	$0, 8(%r14)
	movb	$0, 16(%r14)
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB117_9:
	.cfi_def_cfa_offset 64
	leaq	.L.str.111(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end117:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_, .Lfunc_end117-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_,"axG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_,comdat
	.hidden	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_ # -- Begin function _ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_
	.weak	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_,@function
_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_: # @_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_
.Lfunc_begin57:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception57
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	cmpq	$0, 24(%rdi)
	je	.LBB118_4
# %bb.1:
	movq	(%rbx), %rax
	movq	8(%rax), %rax
	xorl	%r15d, %r15d
	cmpb	$42, (%rax)
	sete	%r15b
	addq	%rax, %r15
	movq	%r15, %rdi
	callq	strlen@PLT
.Ltmp2239:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r15, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2240:
# %bb.2:                                # %_ZNKSt8__detail15_Hash_code_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_hash_codeERS3_.exit
	movq	%rax, %rcx
	movq	8(%r14), %rsi
	orq	%rsi, %rax
	shrq	$32, %rax
	je	.LBB118_10
# %bb.3:
	movq	%rcx, %rax
	xorl	%edx, %edx
	divq	%rsi
	jmp	.LBB118_11
.LBB118_4:
	movq	16(%r14), %r14
	testq	%r14, %r14
	je	.LBB118_15
# %bb.5:                                # %.lr.ph
	movq	(%rbx), %rax
	movq	8(%rax), %rbx
	jmp	.LBB118_7
	.p2align	4, 0x90
.LBB118_6:                              # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueIS8_Lb0EEE.exit.thread12
                                        #   in Loop: Header=BB118_7 Depth=1
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB118_15
.LBB118_7:                              # =>This Inner Loop Header: Depth=1
	movq	8(%r14), %rax
	movq	8(%rax), %rax
	cmpq	%rax, %rbx
	je	.LBB118_16
# %bb.8:                                #   in Loop: Header=BB118_7 Depth=1
	cmpb	$42, (%rbx)
	je	.LBB118_6
# %bb.9:                                # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueIS8_Lb0EEE.exit
                                        #   in Loop: Header=BB118_7 Depth=1
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
	movq	%rbx, %rdi
	callq	strcmp@PLT
	testl	%eax, %eax
	jne	.LBB118_6
	jmp	.LBB118_16
.LBB118_10:
	movl	%ecx, %eax
	xorl	%edx, %edx
	divl	%esi
                                        # kill: def $edx killed $edx def $rdx
.LBB118_11:
	movq	%r14, %rdi
	movq	%rdx, %rsi
	movq	%rbx, %rdx
	callq	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
	testq	%rax, %rax
	je	.LBB118_15
# %bb.12:
	movq	(%rax), %r14
	jmp	.LBB118_16
.LBB118_15:
	xorl	%r14d, %r14d
.LBB118_16:                             # %_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE12_M_find_nodeEmRS2_m.exit
	movq	%r14, %rax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB118_17:
	.cfi_def_cfa_offset 32
.Ltmp2241:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end118:
	.size	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_, .Lfunc_end118-_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_,"aG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_,comdat
	.p2align	2, 0x0
GCC_except_table118:
.Lexception57:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase36-.Lttbaseref36
.Lttbaseref36:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end57-.Lcst_begin57
.Lcst_begin57:
	.uleb128 .Ltmp2239-.Lfunc_begin57       # >> Call Site 1 <<
	.uleb128 .Ltmp2240-.Ltmp2239            #   Call between .Ltmp2239 and .Ltmp2240
	.uleb128 .Ltmp2241-.Lfunc_begin57       #     jumps to .Ltmp2241
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2240-.Lfunc_begin57       # >> Call Site 2 <<
	.uleb128 .Lfunc_end118-.Ltmp2240        #   Call between .Ltmp2240 and .Lfunc_end118
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end57:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase36:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,"axG",@progbits,_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,comdat
	.hidden	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m # -- Begin function _ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
	.weak	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
	.p2align	4, 0x90
	.type	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,@function
_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m: # @_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
.Lfunc_begin58:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception58
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	(%rdi), %rax
	movq	(%rax,%rsi,8), %r12
	testq	%r12, %r12
	je	.LBB119_11
# %bb.1:                                # %.preheader
	movq	%rdx, %rbx
	movq	%rsi, %r14
	movq	%rdi, %r15
	jmp	.LBB119_2
	.p2align	4, 0x90
.LBB119_9:                              #   in Loop: Header=BB119_2 Depth=1
	xorl	%edx, %edx
	divq	%rbp
	movq	%r13, %r12
	cmpq	%r14, %rdx
	jne	.LBB119_11
.LBB119_2:                              # =>This Inner Loop Header: Depth=1
	movq	(%r12), %r13
	movq	(%rbx), %rax
	movq	8(%r13), %rcx
	movq	8(%rax), %rdi
	movq	8(%rcx), %rax
	cmpq	%rax, %rdi
	je	.LBB119_12
# %bb.3:                                #   in Loop: Header=BB119_2 Depth=1
	cmpb	$42, (%rdi)
	je	.LBB119_5
# %bb.4:                                # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS3_mRKNS_16_Hash_node_valueIS8_Lb0EEE.exit
                                        #   in Loop: Header=BB119_2 Depth=1
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
	callq	strcmp@PLT
	testl	%eax, %eax
	je	.LBB119_12
.LBB119_5:                              # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS3_mRKNS_16_Hash_node_valueIS8_Lb0EEE.exit.thread22
                                        #   in Loop: Header=BB119_2 Depth=1
	movq	(%r13), %rax
	testq	%rax, %rax
	je	.LBB119_11
# %bb.6:                                #   in Loop: Header=BB119_2 Depth=1
	movq	8(%r15), %rbp
	movq	8(%rax), %rax
	movq	8(%rax), %rax
	xorl	%r12d, %r12d
	cmpb	$42, (%rax)
	sete	%r12b
	addq	%rax, %r12
	movq	%r12, %rdi
	callq	strlen@PLT
.Ltmp2242:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r12, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2243:
# %bb.7:                                # %_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERKNS9_16_Hash_node_valueIS7_Lb0EEE.exit
                                        #   in Loop: Header=BB119_2 Depth=1
	movq	%rax, %rcx
	orq	%rbp, %rcx
	shrq	$32, %rcx
	jne	.LBB119_9
# %bb.8:                                #   in Loop: Header=BB119_2 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%ebp
                                        # kill: def $edx killed $edx def $rdx
	movq	%r13, %r12
	cmpq	%r14, %rdx
	je	.LBB119_2
.LBB119_11:
	xorl	%r12d, %r12d
.LBB119_12:                             # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS3_mRKNS_16_Hash_node_valueIS8_Lb0EEE.exit.thread
	movq	%r12, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB119_13:
	.cfi_def_cfa_offset 64
.Ltmp2244:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end119:
	.size	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m, .Lfunc_end119-_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,"aG",@progbits,_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,comdat
	.p2align	2, 0x0
GCC_except_table119:
.Lexception58:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase37-.Lttbaseref37
.Lttbaseref37:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end58-.Lcst_begin58
.Lcst_begin58:
	.uleb128 .Ltmp2242-.Lfunc_begin58       # >> Call Site 1 <<
	.uleb128 .Ltmp2243-.Ltmp2242            #   Call between .Ltmp2242 and .Ltmp2243
	.uleb128 .Ltmp2244-.Lfunc_begin58       #     jumps to .Ltmp2244
	.byte	1                               #   On action: 1
.Lcst_end58:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase37:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv,"axG",@progbits,_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv,comdat
	.hidden	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv # -- Begin function _ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
	.weak	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
	.p2align	4, 0x90
	.type	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv,@function
_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv: # @_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Lfunc_begin59:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception59
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$24, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	leaq	24(%rdi), %rbx
	cmpq	$0, 24(%rdi)
	jne	.LBB120_8
# %bb.1:
	movq	8(%rdi), %rax
	movq	16(%rdi), %rsi
	movq	%rax, %rdi
	callq	PyObject_GetAttrString@PLT
	testq	%rax, %rax
	je	.LBB120_2
# %bb.5:                                # %_ZN8pybind116detail17accessor_policies8str_attr3getENS_6handleEPKc.exit
	movq	%rax, 8(%rsp)
	leaq	8(%rsp), %rcx
	cmpq	%rcx, %rbx
	je	.LBB120_7
# %bb.6:
	movq	(%rbx), %rcx
	movq	%rcx, 16(%rsp)
	movq	%rax, (%rbx)
	movq	$0, 8(%rsp)
.Ltmp2245:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2246:
.LBB120_7:                              # %_ZN8pybind116objectaSEOS0_.exit
.Ltmp2248:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2249:
.LBB120_8:
	movq	%rbx, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB120_2:
	.cfi_def_cfa_offset 48
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp2251:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2252:
# %bb.3:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.LBB120_4:
.Ltmp2253:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB120_9:
.Ltmp2247:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB120_10:
.Ltmp2250:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end120:
	.size	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv, .Lfunc_end120-_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv,"aG",@progbits,_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv,comdat
	.p2align	2, 0x0
GCC_except_table120:
.Lexception59:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase38-.Lttbaseref38
.Lttbaseref38:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end59-.Lcst_begin59
.Lcst_begin59:
	.uleb128 .Lfunc_begin59-.Lfunc_begin59  # >> Call Site 1 <<
	.uleb128 .Ltmp2245-.Lfunc_begin59       #   Call between .Lfunc_begin59 and .Ltmp2245
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2245-.Lfunc_begin59       # >> Call Site 2 <<
	.uleb128 .Ltmp2246-.Ltmp2245            #   Call between .Ltmp2245 and .Ltmp2246
	.uleb128 .Ltmp2247-.Lfunc_begin59       #     jumps to .Ltmp2247
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2248-.Lfunc_begin59       # >> Call Site 3 <<
	.uleb128 .Ltmp2249-.Ltmp2248            #   Call between .Ltmp2248 and .Ltmp2249
	.uleb128 .Ltmp2250-.Lfunc_begin59       #     jumps to .Ltmp2250
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2249-.Lfunc_begin59       # >> Call Site 4 <<
	.uleb128 .Ltmp2251-.Ltmp2249            #   Call between .Ltmp2249 and .Ltmp2251
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2251-.Lfunc_begin59       # >> Call Site 5 <<
	.uleb128 .Ltmp2252-.Ltmp2251            #   Call between .Ltmp2251 and .Ltmp2252
	.uleb128 .Ltmp2253-.Lfunc_begin59       #     jumps to .Ltmp2253
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2252-.Lfunc_begin59       # >> Call Site 6 <<
	.uleb128 .Lfunc_end120-.Ltmp2252        #   Call between .Ltmp2252 and .Lfunc_end120
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end59:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase38:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_,"axG",@progbits,_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_,comdat
	.hidden	_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_ # -- Begin function _ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_
	.weak	_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_
	.p2align	4, 0x90
	.type	_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_,@function
_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_: # @_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_
.Lfunc_begin60:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception60
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movabsq	$9223372036854775776, %r12      # imm = 0x7FFFFFFFFFFFFFE0
	movq	(%rdi), %rbx
	movq	8(%rdi), %rax
	movq	%rax, %r15
	subq	%rbx, %r15
	cmpq	%r12, %r15
	ja	.LBB121_1
# %bb.3:                                # %_ZNSt6vectorIN8pybind116detail15argument_recordESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i.i
	movq	%rdi, %r14
	cmpq	%rbx, %rax
	je	.LBB121_4
# %bb.5:                                # %.lr.ph.i.i.i.i.preheader.i.i
.Ltmp2254:
	movq	%r15, %rdi
	callq	_Znwm@PLT
.Ltmp2255:
# %bb.6:                                # %.noexc6.i
	movq	%rax, %r13
	andq	%r15, %r12
	movq	%rax, %rdi
	movq	%rbx, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
	addq	%r13, %r12
	jmp	.LBB121_7
.LBB121_4:
	xorl	%r13d, %r13d
	xorl	%r12d, %r12d
.LBB121_7:                              # %_ZNSt6vectorIN8pybind116detail15argument_recordESaIS2_EEC2ISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPS2_S4_EEEvEET_SC_RKS3_.exit
	addq	%r13, %r15
	movq	16(%r14), %rsi
	movq	%r13, (%r14)
	movq	%r12, 8(%r14)
	movq	%r15, 16(%r14)
	movb	$1, %bpl
	testq	%rbx, %rbx
	je	.LBB121_11
# %bb.8:
	subq	%rbx, %rsi
	movq	%rbx, %rdi
	callq	_ZdlPvm@PLT
.LBB121_11:                             # %_ZNSt6vectorIN8pybind116detail15argument_recordESaIS2_EED2Ev.exit
	movl	%ebp, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB121_1:
	.cfi_def_cfa_offset 64
.Ltmp2256:
	leaq	.L.str.112(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2257:
# %bb.2:                                # %.noexc.i
.LBB121_9:                              # %_ZNSt12_Vector_baseIN8pybind116detail15argument_recordESaIS2_EED2Ev.exit.i
.Ltmp2258:
	movq	%rax, %rdi
	callq	__cxa_begin_catch@PLT
.Ltmp2259:
	callq	__cxa_end_catch@PLT
.Ltmp2260:
# %bb.10:
	xorl	%ebp, %ebp
	jmp	.LBB121_11
.LBB121_12:
.Ltmp2261:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end121:
	.size	_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_, .Lfunc_end121-_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_,"aG",@progbits,_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_,comdat
	.p2align	2, 0x0
GCC_except_table121:
.Lexception60:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase39-.Lttbaseref39
.Lttbaseref39:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end60-.Lcst_begin60
.Lcst_begin60:
	.uleb128 .Ltmp2254-.Lfunc_begin60       # >> Call Site 1 <<
	.uleb128 .Ltmp2255-.Ltmp2254            #   Call between .Ltmp2254 and .Ltmp2255
	.uleb128 .Ltmp2258-.Lfunc_begin60       #     jumps to .Ltmp2258
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2255-.Lfunc_begin60       # >> Call Site 2 <<
	.uleb128 .Ltmp2256-.Ltmp2255            #   Call between .Ltmp2255 and .Ltmp2256
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2256-.Lfunc_begin60       # >> Call Site 3 <<
	.uleb128 .Ltmp2257-.Ltmp2256            #   Call between .Ltmp2256 and .Ltmp2257
	.uleb128 .Ltmp2258-.Lfunc_begin60       #     jumps to .Ltmp2258
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2257-.Lfunc_begin60       # >> Call Site 4 <<
	.uleb128 .Ltmp2259-.Ltmp2257            #   Call between .Ltmp2257 and .Ltmp2259
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2259-.Lfunc_begin60       # >> Call Site 5 <<
	.uleb128 .Ltmp2260-.Ltmp2259            #   Call between .Ltmp2259 and .Ltmp2260
	.uleb128 .Ltmp2261-.Lfunc_begin60       #     jumps to .Ltmp2261
	.byte	1                               #   On action: 1
.Lcst_end60:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase39:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail13get_type_infoEP11_typeobject,"axG",@progbits,_ZN8pybind116detail13get_type_infoEP11_typeobject,comdat
	.hidden	_ZN8pybind116detail13get_type_infoEP11_typeobject # -- Begin function _ZN8pybind116detail13get_type_infoEP11_typeobject
	.weak	_ZN8pybind116detail13get_type_infoEP11_typeobject
	.p2align	4, 0x90
	.type	_ZN8pybind116detail13get_type_infoEP11_typeobject,@function
_ZN8pybind116detail13get_type_infoEP11_typeobject: # @_ZN8pybind116detail13get_type_infoEP11_typeobject
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	callq	_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
	movq	%rax, %rbx
	testb	$1, %dl
	je	.LBB122_2
# %bb.1:
	movq	%rbx, %rsi
	addq	$16, %rsi
	movq	%r14, %rdi
	callq	_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE
.LBB122_2:                              # %_ZN8pybind116detail13all_type_infoEP11_typeobject.exit
	movq	16(%rbx), %rax
	movq	24(%rbx), %rcx
	cmpq	%rcx, %rax
	je	.LBB122_3
# %bb.4:
	subq	%rax, %rcx
	cmpq	$9, %rcx
	jae	.LBB122_7
# %bb.5:
	movq	(%rax), %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB122_3:
	.cfi_def_cfa_offset 32
	xorl	%eax, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB122_7:
	.cfi_def_cfa_offset 32
	leaq	.L.str.142(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Lfunc_end122:
	.size	_ZN8pybind116detail13get_type_infoEP11_typeobject, .Lfunc_end122-_ZN8pybind116detail13get_type_infoEP11_typeobject
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb,"axG",@progbits,_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb,comdat
	.hidden	_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb # -- Begin function _ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb
	.weak	_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb
	.p2align	4, 0x90
	.type	_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb,@function
_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb: # @_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb
.Lfunc_begin61:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception61
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$200, %rsp
	.cfi_def_cfa_offset 256
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	testq	%rdx, %rdx
	je	.LBB123_13
# %bb.1:
	movq	%rdx, %r15
	movq	8(%rbx), %r12
	cmpq	(%rdx), %r12
	je	.LBB123_15
# %bb.2:
	movl	%ecx, %ebp
	movq	%r12, %rdi
	callq	_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
	movq	%rax, %r13
	testb	$1, %dl
	je	.LBB123_4
# %bb.3:
	movq	%r13, %rsi
	addq	$16, %rsi
	movq	%r12, %rdi
	callq	_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE
.LBB123_4:
	movq	16(%r13), %rdx
	movq	24(%r13), %rax
	cmpq	%rax, %rdx
	je	.LBB123_31
# %bb.5:                                # %_ZN8pybind116detail18values_and_holders5beginEv.exit.i
	movzbl	48(%rbx), %r8d
	leaq	16(%rbx), %rcx
	testb	$2, %r8b
	movq	16(%rbx), %rdi
	cmoveq	%rdi, %rcx
	movq	(%rdx), %rsi
	subq	%rdx, %rax
	sarq	$3, %rax
	cmpq	%r15, %rsi
	je	.LBB123_18
# %bb.6:                                # %.lr.ph.i
	testb	$2, %r8b
	jne	.LBB123_20
# %bb.7:                                # %._crit_edge.i.us.i.preheader
	movl	$1, %r8d
	movq	%rdi, %rcx
	.p2align	4, 0x90
.LBB123_8:                              # %._crit_edge.i.us.i
                                        # =>This Inner Loop Header: Depth=1
	cmpq	%rax, %r8
	jae	.LBB123_10
# %bb.9:                                #   in Loop: Header=BB123_8 Depth=1
	movq	(%rdx,%r8,8), %rsi
	jmp	.LBB123_11
	.p2align	4, 0x90
.LBB123_10:                             #   in Loop: Header=BB123_8 Depth=1
	xorl	%esi, %esi
.LBB123_11:                             # %_ZN8pybind116detail18values_and_holders8iteratorppEv.exit.us.i
                                        #   in Loop: Header=BB123_8 Depth=1
	movq	-8(%rdx,%r8,8), %rdi
	movq	32(%rdi), %rdi
	leaq	(%rcx,%rdi,8), %rcx
	addq	$8, %rcx
	leaq	1(%r8), %rdi
	cmpq	%r8, %rax
	je	.LBB123_25
# %bb.12:                               # %_ZN8pybind116detail18values_and_holders8iteratorppEv.exit.us.i
                                        #   in Loop: Header=BB123_8 Depth=1
	movq	%rdi, %r8
	cmpq	%r15, %rsi
	jne	.LBB123_8
	jmp	.LBB123_25
.LBB123_13:                             # %.split
	movq	%rbx, (%r14)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%r14)
	testb	$2, 48(%rbx)
	jne	.LBB123_28
.LBB123_14:                             # %.split
	movq	16(%rbx), %rbx
	jmp	.LBB123_29
.LBB123_15:                             # %.split13
	movq	%rbx, (%r14)
	movq	$0, 8(%r14)
	movq	%r15, 16(%r14)
	testb	$2, 48(%rbx)
	je	.LBB123_14
.LBB123_28:
	addq	$16, %rbx
.LBB123_29:
	movq	%rbx, 24(%r14)
	jmp	.LBB123_30
.LBB123_18:
	xorl	%edi, %edi
	cmpq	%rax, %rdi
	je	.LBB123_26
.LBB123_19:
	movq	%rbx, (%r14)
	movq	%rdi, 8(%r14)
	movq	%rsi, 16(%r14)
	movq	%rcx, 24(%r14)
	jmp	.LBB123_30
.LBB123_20:                             # %._crit_edge.i.i.preheader
	movl	$1, %r8d
	jmp	.LBB123_21
	.p2align	4, 0x90
.LBB123_23:                             #   in Loop: Header=BB123_21 Depth=1
	xorl	%esi, %esi
	leaq	1(%r8), %rdi
	cmpq	%r8, %rax
	je	.LBB123_25
.LBB123_24:                             # %_ZN8pybind116detail18values_and_holders8iteratorppEv.exit.i
                                        #   in Loop: Header=BB123_21 Depth=1
	movq	%rdi, %r8
	cmpq	%r15, %rsi
	je	.LBB123_25
.LBB123_21:                             # %._crit_edge.i.i
                                        # =>This Inner Loop Header: Depth=1
	cmpq	%rax, %r8
	jae	.LBB123_23
# %bb.22:                               #   in Loop: Header=BB123_21 Depth=1
	movq	(%rdx,%r8,8), %rsi
	leaq	1(%r8), %rdi
	cmpq	%r8, %rax
	jne	.LBB123_24
.LBB123_25:                             # %_ZN8pybind116detail18values_and_holders4findEPKNS0_9type_infoE.exit.loopexit77
	decq	%rdi
	cmpq	%rax, %rdi
	jne	.LBB123_19
.LBB123_26:
	testb	%bpl, %bpl
	jne	.LBB123_32
# %bb.27:
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%r14)
	movups	%xmm0, (%r14)
.LBB123_30:
	movq	%r14, %rax
	addq	$200, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB123_31:
	.cfi_def_cfa_offset 256
	leaq	.L.str.163(%rip), %rdi
	leaq	.L.str.162(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind116detail18values_and_holders8iteratorC2EPNS0_8instanceEPKSt6vectorIPNS0_9type_infoESaIS7_EE(%rip), %rcx
	movl	$293, %edx                      # imm = 0x125
	callq	__assert_fail@PLT
.LBB123_32:
	movq	(%r15), %rsi
	leaq	168(%rsp), %r14
	movq	%r14, %rdi
	callq	_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject
.Ltmp2262:
	leaq	.L.str.143(%rip), %rsi
	leaq	40(%rsp), %rdi
	movq	%r14, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp2263:
# %bb.33:
.Ltmp2265:
	leaq	.L.str.144(%rip), %rdx
	leaq	72(%rsp), %rdi
	leaq	40(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp2266:
# %bb.34:
	movq	8(%rbx), %rsi
.Ltmp2268:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject
.Ltmp2269:
# %bb.35:
.Ltmp2271:
	leaq	104(%rsp), %rdi
	leaq	72(%rsp), %rsi
	leaq	8(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp2272:
# %bb.36:
.Ltmp2274:
	leaq	.L.str.145(%rip), %rdx
	leaq	136(%rsp), %rdi
	leaq	104(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp2275:
# %bb.37:
.Ltmp2277:
	leaq	136(%rsp), %rdi
	callq	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp2278:
# %bb.38:
.LBB123_39:
.Ltmp2279:
	movq	%rax, %rbx
	movq	136(%rsp), %rdi
	leaq	152(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB123_46
# %bb.40:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB123_48
.LBB123_41:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit26
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB123_50
.LBB123_42:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit29
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB123_52
.LBB123_43:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit32
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB123_54
.LBB123_44:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit35
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB123_56
.LBB123_45:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB123_46:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	152(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB123_41
	jmp	.LBB123_48
.LBB123_47:
.Ltmp2276:
	movq	%rax, %rbx
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB123_41
.LBB123_48:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i24
	movq	120(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB123_42
	jmp	.LBB123_50
.LBB123_49:
.Ltmp2273:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB123_42
.LBB123_50:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i27
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB123_43
	jmp	.LBB123_52
.LBB123_51:
.Ltmp2270:
	movq	%rax, %rbx
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB123_43
.LBB123_52:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i30
	movq	88(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB123_44
	jmp	.LBB123_54
.LBB123_53:
.Ltmp2267:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB123_44
.LBB123_54:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i33
	movq	56(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB123_45
	jmp	.LBB123_56
.LBB123_55:
.Ltmp2264:
	movq	%rax, %rbx
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB123_45
.LBB123_56:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i36
	movq	184(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end123:
	.size	_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb, .Lfunc_end123-_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb,"aG",@progbits,_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb,comdat
	.p2align	2, 0x0
GCC_except_table123:
.Lexception61:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end61-.Lcst_begin61
.Lcst_begin61:
	.uleb128 .Lfunc_begin61-.Lfunc_begin61  # >> Call Site 1 <<
	.uleb128 .Ltmp2262-.Lfunc_begin61       #   Call between .Lfunc_begin61 and .Ltmp2262
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2262-.Lfunc_begin61       # >> Call Site 2 <<
	.uleb128 .Ltmp2263-.Ltmp2262            #   Call between .Ltmp2262 and .Ltmp2263
	.uleb128 .Ltmp2264-.Lfunc_begin61       #     jumps to .Ltmp2264
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2265-.Lfunc_begin61       # >> Call Site 3 <<
	.uleb128 .Ltmp2266-.Ltmp2265            #   Call between .Ltmp2265 and .Ltmp2266
	.uleb128 .Ltmp2267-.Lfunc_begin61       #     jumps to .Ltmp2267
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2268-.Lfunc_begin61       # >> Call Site 4 <<
	.uleb128 .Ltmp2269-.Ltmp2268            #   Call between .Ltmp2268 and .Ltmp2269
	.uleb128 .Ltmp2270-.Lfunc_begin61       #     jumps to .Ltmp2270
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2271-.Lfunc_begin61       # >> Call Site 5 <<
	.uleb128 .Ltmp2272-.Ltmp2271            #   Call between .Ltmp2271 and .Ltmp2272
	.uleb128 .Ltmp2273-.Lfunc_begin61       #     jumps to .Ltmp2273
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2274-.Lfunc_begin61       # >> Call Site 6 <<
	.uleb128 .Ltmp2275-.Ltmp2274            #   Call between .Ltmp2274 and .Ltmp2275
	.uleb128 .Ltmp2276-.Lfunc_begin61       #     jumps to .Ltmp2276
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2277-.Lfunc_begin61       # >> Call Site 7 <<
	.uleb128 .Ltmp2278-.Ltmp2277            #   Call between .Ltmp2277 and .Ltmp2278
	.uleb128 .Ltmp2279-.Lfunc_begin61       #     jumps to .Ltmp2279
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2278-.Lfunc_begin61       # >> Call Site 8 <<
	.uleb128 .Lfunc_end123-.Ltmp2278        #   Call between .Ltmp2278 and .Lfunc_end123
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end61:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE,"axG",@progbits,_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE,comdat
	.hidden	_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE # -- Begin function _ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE
	.weak	_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE,@function
_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE: # @_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE
.Lfunc_begin62:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception62
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, (%rdi)
	movq	$0, 48(%rdi)
	movl	$0, 56(%rdi)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rdi)
	movups	%xmm0, 24(%rdi)
	movl	$0, 40(%rdi)
	movups	%xmm0, 64(%rdi)
	movq	$0, 80(%rdi)
	movq	%rdx, 88(%rdi)
	movq	$0, 96(%rdi)
	movzwl	92(%rsi), %r12d
	testq	%r12, %r12
	je	.LBB124_3
# %bb.1:                                # %_ZNSt12_Vector_baseIN8pybind116handleESaIS1_EE11_M_allocateEm.exit.i
	movq	%rdi, %rbx
	leaq	8(%rdi), %rbp
	leaq	32(%rdi), %r14
	leaq	72(%rdi), %r15
	leaq	80(%rdi), %r13
	leal	(,%r12,8), %edi
.Ltmp2280:
	callq	_Znwm@PLT
.Ltmp2281:
# %bb.2:
	movq	%rax, 8(%rbx)
	movq	%rax, 16(%rbx)
	leaq	(%rax,%r12,8), %rax
	movq	%rax, 24(%rbx)
.Ltmp2282:
	movq	%r14, %rdi
	movq	%r12, %rsi
	callq	_ZNSt6vectorIbSaIbEE13_M_reallocateEm@PLT
.Ltmp2283:
.LBB124_3:                              # %_ZNSt6vectorIbSaIbEE7reserveEm.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB124_5:
	.cfi_def_cfa_offset 64
.Ltmp2284:
	movq	%rax, %r12
.Ltmp2285:
	movq	%r13, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2286:
# %bb.6:                                # %_ZN8pybind116objectD2Ev.exit
.Ltmp2288:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2289:
# %bb.7:                                # %_ZN8pybind116objectD2Ev.exit6
	movq	%r14, %rdi
	callq	_ZNSt13_Bvector_baseISaIbEED2Ev@PLT
	movq	(%rbp), %rdi
	testq	%rdi, %rdi
	je	.LBB124_9
# %bb.8:
	movq	24(%rbx), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB124_9:                              # %_ZNSt6vectorIN8pybind116handleESaIS1_EED2Ev.exit
	movq	%r12, %rdi
	callq	_Unwind_Resume@PLT
.LBB124_10:
.Ltmp2290:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB124_4:
.Ltmp2287:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end124:
	.size	_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE, .Lfunc_end124-_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE,"aG",@progbits,_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE,comdat
	.p2align	2, 0x0
GCC_except_table124:
.Lexception62:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase40-.Lttbaseref40
.Lttbaseref40:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end62-.Lcst_begin62
.Lcst_begin62:
	.uleb128 .Ltmp2280-.Lfunc_begin62       # >> Call Site 1 <<
	.uleb128 .Ltmp2283-.Ltmp2280            #   Call between .Ltmp2280 and .Ltmp2283
	.uleb128 .Ltmp2284-.Lfunc_begin62       #     jumps to .Ltmp2284
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2285-.Lfunc_begin62       # >> Call Site 2 <<
	.uleb128 .Ltmp2286-.Ltmp2285            #   Call between .Ltmp2285 and .Ltmp2286
	.uleb128 .Ltmp2287-.Lfunc_begin62       #     jumps to .Ltmp2287
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2288-.Lfunc_begin62       # >> Call Site 3 <<
	.uleb128 .Ltmp2289-.Ltmp2288            #   Call between .Ltmp2288 and .Ltmp2289
	.uleb128 .Ltmp2290-.Lfunc_begin62       #     jumps to .Ltmp2290
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2289-.Lfunc_begin62       # >> Call Site 4 <<
	.uleb128 .Lfunc_end124-.Ltmp2289        #   Call between .Ltmp2289 and .Lfunc_end124
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end62:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase40:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail19loader_life_supportD2Ev,"axG",@progbits,_ZN8pybind116detail19loader_life_supportD2Ev,comdat
	.hidden	_ZN8pybind116detail19loader_life_supportD2Ev # -- Begin function _ZN8pybind116detail19loader_life_supportD2Ev
	.weak	_ZN8pybind116detail19loader_life_supportD2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind116detail19loader_life_supportD2Ev,@function
_ZN8pybind116detail19loader_life_supportD2Ev: # @_ZN8pybind116detail19loader_life_supportD2Ev
.Lfunc_begin63:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception63
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
.Ltmp2291:
	callq	_ZN8pybind116detail13get_internalsEv
.Ltmp2292:
# %bb.1:                                # %.noexc4
	addq	$440, %rax                      # imm = 0x1B8
.Ltmp2293:
	movq	%rax, %rdi
	callq	PyThread_tss_get@PLT
.Ltmp2294:
# %bb.2:                                # %_ZN8pybind116detail19loader_life_support13get_stack_topEv.exit
	cmpq	%rbx, %rax
	jne	.LBB125_3
# %bb.5:
	movq	(%rbx), %r14
.Ltmp2297:
	callq	_ZN8pybind116detail13get_internalsEv
.Ltmp2298:
# %bb.6:                                # %.noexc6
	addq	$440, %rax                      # imm = 0x1B8
.Ltmp2299:
	movq	%rax, %rdi
	movq	%r14, %rsi
	callq	PyThread_tss_set@PLT
.Ltmp2300:
# %bb.7:                                # %_ZN8pybind116detail19loader_life_support13set_stack_topEPS1_.exit
	leaq	24(%rbx), %r14
	movq	24(%rbx), %r15
	testq	%r15, %r15
	jne	.LBB125_8
	jmp	.LBB125_14
	.p2align	4, 0x90
.LBB125_11:                             # %_ZL9Py_DECREFP7_object.exit
                                        #   in Loop: Header=BB125_8 Depth=1
	movq	(%r15), %r15
	testq	%r15, %r15
	je	.LBB125_12
.LBB125_8:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%r15), %rdi
	movq	(%rdi), %rax
	testl	%eax, %eax
	js	.LBB125_11
# %bb.9:                                #   in Loop: Header=BB125_8 Depth=1
	decq	%rax
	movq	%rax, (%rdi)
	jne	.LBB125_11
# %bb.10:                               #   in Loop: Header=BB125_8 Depth=1
.Ltmp2302:
	callq	_Py_Dealloc@PLT
.Ltmp2303:
	jmp	.LBB125_11
.LBB125_12:                             # %._crit_edge
	movq	(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB125_14
	.p2align	4, 0x90
.LBB125_13:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r15
	movl	$16, %esi
	callq	_ZdlPvm@PLT
	movq	%r15, %rdi
	testq	%r15, %r15
	jne	.LBB125_13
.LBB125_14:                             # %_ZNSt10_HashtableIP7_objectS1_SaIS1_ENSt8__detail9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS3_18_Mod_range_hashingENS3_20_Default_ranged_hashENS3_20_Prime_rehash_policyENS3_17_Hashtable_traitsILb0ELb1ELb1EEEE5clearEv.exit.i.i
	movq	8(%rbx), %rdi
	movq	16(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r14)
	movq	8(%rbx), %rdi
	leaq	56(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB125_15
# %bb.19:
	movq	16(%rbx), %rsi
	shlq	$3, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB125_15:                             # %_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev.exit
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB125_3:
	.cfi_def_cfa_offset 32
.Ltmp2295:
	leaq	.L.str.151(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp2296:
# %bb.4:
.LBB125_16:                             # %.loopexit
.Ltmp2304:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB125_17:                             # %.loopexit.split-lp
.Ltmp2301:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end125:
	.size	_ZN8pybind116detail19loader_life_supportD2Ev, .Lfunc_end125-_ZN8pybind116detail19loader_life_supportD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail19loader_life_supportD2Ev,"aG",@progbits,_ZN8pybind116detail19loader_life_supportD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table125:
.Lexception63:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase41-.Lttbaseref41
.Lttbaseref41:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end63-.Lcst_begin63
.Lcst_begin63:
	.uleb128 .Ltmp2291-.Lfunc_begin63       # >> Call Site 1 <<
	.uleb128 .Ltmp2300-.Ltmp2291            #   Call between .Ltmp2291 and .Ltmp2300
	.uleb128 .Ltmp2301-.Lfunc_begin63       #     jumps to .Ltmp2301
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2302-.Lfunc_begin63       # >> Call Site 2 <<
	.uleb128 .Ltmp2303-.Ltmp2302            #   Call between .Ltmp2302 and .Ltmp2303
	.uleb128 .Ltmp2304-.Lfunc_begin63       #     jumps to .Ltmp2304
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2303-.Lfunc_begin63       # >> Call Site 3 <<
	.uleb128 .Ltmp2295-.Ltmp2303            #   Call between .Ltmp2303 and .Ltmp2295
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2295-.Lfunc_begin63       # >> Call Site 4 <<
	.uleb128 .Ltmp2296-.Ltmp2295            #   Call between .Ltmp2295 and .Ltmp2296
	.uleb128 .Ltmp2301-.Lfunc_begin63       #     jumps to .Ltmp2301
	.byte	1                               #   On action: 1
.Lcst_end63:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase41:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt13_Bvector_baseISaIbEED2Ev,"axG",@progbits,_ZNSt13_Bvector_baseISaIbEED2Ev,comdat
	.weak	_ZNSt13_Bvector_baseISaIbEED2Ev # -- Begin function _ZNSt13_Bvector_baseISaIbEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13_Bvector_baseISaIbEED2Ev,@function
_ZNSt13_Bvector_baseISaIbEED2Ev:        # @_ZNSt13_Bvector_baseISaIbEED2Ev
	.cfi_startproc
# %bb.0:
	movq	(%rdi), %rax
	testq	%rax, %rax
	je	.LBB126_2
# %bb.1:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	32(%rdi), %rsi
	subq	%rax, %rsi
	movq	%rdi, %rbx
	movq	%rax, %rdi
	callq	_ZdlPvm@PLT
	movq	$0, (%rbx)
	movl	$0, 8(%rbx)
	movq	$0, 16(%rbx)
	movl	$0, 24(%rbx)
	movq	$0, 32(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	.cfi_restore %rbx
.LBB126_2:                              # %_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv.exit
	retq
.Lfunc_end126:
	.size	_ZNSt13_Bvector_baseISaIbEED2Ev, .Lfunc_end126-_ZNSt13_Bvector_baseISaIbEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail13function_callD2Ev,"axG",@progbits,_ZN8pybind116detail13function_callD2Ev,comdat
	.hidden	_ZN8pybind116detail13function_callD2Ev # -- Begin function _ZN8pybind116detail13function_callD2Ev
	.weak	_ZN8pybind116detail13function_callD2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind116detail13function_callD2Ev,@function
_ZN8pybind116detail13function_callD2Ev: # @_ZN8pybind116detail13function_callD2Ev
.Lfunc_begin64:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception64
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	addq	$80, %rdi
.Ltmp2305:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2306:
# %bb.1:                                # %_ZN8pybind116objectD2Ev.exit
	leaq	72(%rbx), %rdi
.Ltmp2308:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2309:
# %bb.2:                                # %_ZN8pybind116objectD2Ev.exit1
	movq	32(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB127_4
# %bb.3:
	movq	64(%rbx), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	movq	$0, 32(%rbx)
	movl	$0, 40(%rbx)
	movq	$0, 48(%rbx)
	movl	$0, 56(%rbx)
	movq	$0, 64(%rbx)
.LBB127_4:                              # %_ZNSt13_Bvector_baseISaIbEED2Ev.exit
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB127_5
# %bb.8:
	movq	24(%rbx), %rsi
	subq	%rdi, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB127_5:                              # %_ZNSt6vectorIN8pybind116handleESaIS1_EED2Ev.exit
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB127_7:
	.cfi_def_cfa_offset 16
.Ltmp2310:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB127_6:
.Ltmp2307:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end127:
	.size	_ZN8pybind116detail13function_callD2Ev, .Lfunc_end127-_ZN8pybind116detail13function_callD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail13function_callD2Ev,"aG",@progbits,_ZN8pybind116detail13function_callD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table127:
.Lexception64:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase42-.Lttbaseref42
.Lttbaseref42:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end64-.Lcst_begin64
.Lcst_begin64:
	.uleb128 .Ltmp2305-.Lfunc_begin64       # >> Call Site 1 <<
	.uleb128 .Ltmp2306-.Ltmp2305            #   Call between .Ltmp2305 and .Ltmp2306
	.uleb128 .Ltmp2307-.Lfunc_begin64       #     jumps to .Ltmp2307
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2308-.Lfunc_begin64       # >> Call Site 2 <<
	.uleb128 .Ltmp2309-.Ltmp2308            #   Call between .Ltmp2308 and .Ltmp2309
	.uleb128 .Ltmp2310-.Lfunc_begin64       #     jumps to .Ltmp2310
	.byte	1                               #   On action: 1
.Lcst_end64:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase42:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev,"axG",@progbits,_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev,comdat
	.hidden	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev # -- Begin function _ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev
	.weak	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev,@function
_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev: # @_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev
.Lfunc_begin65:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception65
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	(%rdi), %rdi
	movq	8(%rbx), %rsi
.Ltmp2311:
	callq	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_
.Ltmp2312:
# %bb.1:                                # %_ZSt8_DestroyIPN8pybind116detail13function_callES2_EvT_S4_RSaIT0_E.exit
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB128_2
# %bb.4:
	movq	16(%rbx), %rsi
	subq	%rdi, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB128_2:                              # %_ZNSt12_Vector_baseIN8pybind116detail13function_callESaIS2_EED2Ev.exit
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB128_3:
	.cfi_def_cfa_offset 16
.Ltmp2313:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end128:
	.size	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev, .Lfunc_end128-_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev,"aG",@progbits,_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table128:
.Lexception65:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase43-.Lttbaseref43
.Lttbaseref43:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end65-.Lcst_begin65
.Lcst_begin65:
	.uleb128 .Ltmp2311-.Lfunc_begin65       # >> Call Site 1 <<
	.uleb128 .Ltmp2312-.Ltmp2311            #   Call between .Ltmp2311 and .Ltmp2312
	.uleb128 .Ltmp2313-.Lfunc_begin65       #     jumps to .Ltmp2313
	.byte	1                               #   On action: 1
.Lcst_end65:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase43:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail24try_translate_exceptionsEv,"axG",@progbits,_ZN8pybind116detail24try_translate_exceptionsEv,comdat
	.hidden	_ZN8pybind116detail24try_translate_exceptionsEv # -- Begin function _ZN8pybind116detail24try_translate_exceptionsEv
	.weak	_ZN8pybind116detail24try_translate_exceptionsEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail24try_translate_exceptionsEv,@function
_ZN8pybind116detail24try_translate_exceptionsEv: # @_ZN8pybind116detail24try_translate_exceptionsEv
.Lfunc_begin66:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception66
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	callq	_ZN8pybind116detail13get_internalsEv
	movq	%rax, %rbx
	movzbl	_ZGVZN8pybind116detail19get_local_internalsEvE6locals(%rip), %eax
	testb	%al, %al
	je	.LBB129_1
.LBB129_4:                              # %_ZN8pybind116detail19get_local_internalsEv.exit.i.i
	movq	_ZZN8pybind116detail19get_local_internalsEvE6locals(%rip), %rdi
	addq	$56, %rdi
	callq	_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE
	testb	%al, %al
	jne	.LBB129_6
# %bb.5:                                # %_ZN8pybind116detail14with_internalsIZNS0_24try_translate_exceptionsEvEUlRNS0_9internalsEE_EEDTclfp_clL_ZNS0_13get_internalsEvEEEERKT_.exit
	addq	$336, %rbx                      # imm = 0x150
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE
	testb	%al, %al
	je	.LBB129_8
.LBB129_6:                              # %_ZN8pybind116detail14with_internalsIZNS0_24try_translate_exceptionsEvEUlRNS0_9internalsEE_EEDTclfp_clL_ZNS0_13get_internalsEvEEEERKT_.exit.thread
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB129_8:
	.cfi_def_cfa_offset 16
	movq	PyExc_SystemError@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
	leaq	.L.str.152(%rip), %rsi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	PyErr_SetString@PLT             # TAILCALL
.LBB129_1:
	.cfi_def_cfa_offset 16
	leaq	_ZGVZN8pybind116detail19get_local_internalsEvE6locals(%rip), %rdi
	callq	__cxa_guard_acquire@PLT
	testl	%eax, %eax
	je	.LBB129_4
# %bb.2:
.Ltmp2314:
	movl	$64, %edi
	callq	_Znwm@PLT
.Ltmp2315:
# %bb.3:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 32(%rax)
	movq	%rax, %rcx
	addq	$48, %rcx
	movq	%rcx, (%rax)
	movq	$1, 8(%rax)
	movups	%xmm0, 16(%rax)
	movl	$1065353216, 32(%rax)           # imm = 0x3F800000
	movups	%xmm0, 40(%rax)
	movq	$0, 56(%rax)
	movq	%rax, _ZZN8pybind116detail19get_local_internalsEvE6locals(%rip)
	leaq	_ZGVZN8pybind116detail19get_local_internalsEvE6locals(%rip), %rdi
	callq	__cxa_guard_release@PLT
	jmp	.LBB129_4
.LBB129_7:
.Ltmp2316:
	movq	%rax, %rbx
	leaq	_ZGVZN8pybind116detail19get_local_internalsEvE6locals(%rip), %rdi
	callq	__cxa_guard_abort@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end129:
	.size	_ZN8pybind116detail24try_translate_exceptionsEv, .Lfunc_end129-_ZN8pybind116detail24try_translate_exceptionsEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail24try_translate_exceptionsEv,"aG",@progbits,_ZN8pybind116detail24try_translate_exceptionsEv,comdat
	.p2align	2, 0x0
GCC_except_table129:
.Lexception66:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end66-.Lcst_begin66
.Lcst_begin66:
	.uleb128 .Lfunc_begin66-.Lfunc_begin66  # >> Call Site 1 <<
	.uleb128 .Ltmp2314-.Lfunc_begin66       #   Call between .Lfunc_begin66 and .Ltmp2314
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2314-.Lfunc_begin66       # >> Call Site 2 <<
	.uleb128 .Ltmp2315-.Ltmp2314            #   Call between .Ltmp2314 and .Ltmp2315
	.uleb128 .Ltmp2316-.Lfunc_begin66       #     jumps to .Ltmp2316
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2315-.Lfunc_begin66       # >> Call Site 3 <<
	.uleb128 .Lfunc_end129-.Ltmp2315        #   Call between .Ltmp2315 and .Lfunc_end129
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end66:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_,"axG",@progbits,_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_,comdat
	.hidden	_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_ # -- Begin function _ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_
	.weak	_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_
	.p2align	4, 0x90
	.type	_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_,@function
_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_: # @_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_
.Lfunc_begin67:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception67
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$40, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	movq	(%rsi), %rax
	movq	%rax, 16(%rsp)
	leaq	.L.str.153(%rip), %rax
	movq	%rax, 24(%rsp)
	leaq	32(%rsp), %rbx
	movq	$0, 32(%rsp)
.Ltmp2317:
	movq	%rsp, %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_
.Ltmp2318:
# %bb.1:
.Ltmp2320:
	movq	%rsp, %rsi
	movq	%r14, %rdi
	callq	_ZN8pybind113strC2EONS_6objectE
.Ltmp2321:
# %bb.2:
.Ltmp2329:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2330:
# %bb.3:                                # %_ZN8pybind116objectD2Ev.exit
.Ltmp2332:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2333:
# %bb.4:                                # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit
	movq	%r14, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB130_11:
	.cfi_def_cfa_offset 64
.Ltmp2334:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB130_10:
.Ltmp2331:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB130_5:
.Ltmp2322:
	movq	%rax, %r14
.Ltmp2323:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2324:
	jmp	.LBB130_8
.LBB130_6:
.Ltmp2325:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB130_7:
.Ltmp2319:
	movq	%rax, %r14
.LBB130_8:                              # %_ZN8pybind116objectD2Ev.exit5
.Ltmp2326:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2327:
# %bb.9:                                # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit6
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB130_12:
.Ltmp2328:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end130:
	.size	_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_, .Lfunc_end130-_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_,"aG",@progbits,_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_,comdat
	.p2align	2, 0x0
GCC_except_table130:
.Lexception67:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase44-.Lttbaseref44
.Lttbaseref44:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end67-.Lcst_begin67
.Lcst_begin67:
	.uleb128 .Ltmp2317-.Lfunc_begin67       # >> Call Site 1 <<
	.uleb128 .Ltmp2318-.Ltmp2317            #   Call between .Ltmp2317 and .Ltmp2318
	.uleb128 .Ltmp2319-.Lfunc_begin67       #     jumps to .Ltmp2319
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2320-.Lfunc_begin67       # >> Call Site 2 <<
	.uleb128 .Ltmp2321-.Ltmp2320            #   Call between .Ltmp2320 and .Ltmp2321
	.uleb128 .Ltmp2322-.Lfunc_begin67       #     jumps to .Ltmp2322
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2329-.Lfunc_begin67       # >> Call Site 3 <<
	.uleb128 .Ltmp2330-.Ltmp2329            #   Call between .Ltmp2329 and .Ltmp2330
	.uleb128 .Ltmp2331-.Lfunc_begin67       #     jumps to .Ltmp2331
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2332-.Lfunc_begin67       # >> Call Site 4 <<
	.uleb128 .Ltmp2333-.Ltmp2332            #   Call between .Ltmp2332 and .Ltmp2333
	.uleb128 .Ltmp2334-.Lfunc_begin67       #     jumps to .Ltmp2334
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2323-.Lfunc_begin67       # >> Call Site 5 <<
	.uleb128 .Ltmp2324-.Ltmp2323            #   Call between .Ltmp2323 and .Ltmp2324
	.uleb128 .Ltmp2325-.Lfunc_begin67       #     jumps to .Ltmp2325
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2326-.Lfunc_begin67       # >> Call Site 6 <<
	.uleb128 .Ltmp2327-.Ltmp2326            #   Call between .Ltmp2326 and .Ltmp2327
	.uleb128 .Ltmp2328-.Lfunc_begin67       #     jumps to .Ltmp2328
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2327-.Lfunc_begin67       # >> Call Site 7 <<
	.uleb128 .Lfunc_end130-.Ltmp2327        #   Call between .Ltmp2327 and .Lfunc_end130
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end67:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase44:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEE13_M_reallocateEm,"axG",@progbits,_ZNSt6vectorIbSaIbEE13_M_reallocateEm,comdat
	.weak	_ZNSt6vectorIbSaIbEE13_M_reallocateEm # -- Begin function _ZNSt6vectorIbSaIbEE13_M_reallocateEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIbSaIbEE13_M_reallocateEm,@function
_ZNSt6vectorIbSaIbEE13_M_reallocateEm:  # @_ZNSt6vectorIbSaIbEE13_M_reallocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	addq	$63, %r14
	movq	%r14, %rdi
	shrq	$3, %rdi
	andq	$-8, %rdi
	callq	_Znwm@PLT
	movq	%rax, %r13
	movq	(%rbx), %rsi
	movq	16(%rbx), %rbp
	movl	24(%rbx), %r15d
	movq	%rbp, %r12
	subq	%rsi, %r12
	cmpq	$9, %r12
	movq	%rsi, 8(%rsp)                   # 8-byte Spill
	jl	.LBB131_2
# %bb.1:
	movq	%r13, %rdi
	movq	%r12, %rdx
	callq	memmove@PLT
.LBB131_4:                              # %_ZSt4copyIPmS0_ET0_T_S2_S1_.exit.i
	movq	%r13, 16(%rsp)                  # 8-byte Spill
	addq	%r13, %r12
	testq	%r15, %r15
	je	.LBB131_5
# %bb.6:                                # %.lr.ph.i.i.i.i.i.preheader.i
	incq	%r15
	xorl	%eax, %eax
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	jmp	.LBB131_7
	.p2align	4, 0x90
.LBB131_9:                              #   in Loop: Header=BB131_7 Depth=1
	notq	%rsi
	andq	(%r12), %rsi
.LBB131_10:                             # %_ZNSt14_Bit_referenceaSEb.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB131_7 Depth=1
	movq	%rsi, (%r12)
	xorl	%esi, %esi
	cmpl	$63, %edx
	leal	1(%rdx), %edx
	sete	%sil
	cmovel	%eax, %edx
	leaq	(%rbp,%rsi,8), %rbp
	leal	1(%rcx), %r13d
	xorl	%esi, %esi
	cmpl	$63, %ecx
	sete	%sil
	cmovel	%eax, %r13d
	leaq	(%r12,%rsi,8), %r12
	decq	%r15
                                        # kill: def $edx killed $edx def $rdx
	movl	%r13d, %ecx
	cmpq	$1, %r15
	jle	.LBB131_11
.LBB131_7:                              # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbp), %rdi
	movl	$1, %esi
	shlq	%cl, %rsi
	btq	%rdx, %rdi
	jae	.LBB131_9
# %bb.8:                                #   in Loop: Header=BB131_7 Depth=1
	orq	(%r12), %rsi
	jmp	.LBB131_10
.LBB131_5:
	xorl	%r13d, %r13d
.LBB131_11:                             # %_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.exit
	movq	8(%rsp), %rdi                   # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB131_13
# %bb.12:
	movq	32(%rbx), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB131_13:                             # %_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv.exit
	movq	16(%rsp), %rax                  # 8-byte Reload
	movq	%rax, (%rbx)
	movl	$0, 8(%rbx)
	movq	%r12, 16(%rbx)
	movl	%r13d, 24(%rbx)
	shrq	$6, %r14
	leaq	(%rax,%r14,8), %rax
	movq	%rax, 32(%rbx)
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB131_2:
	.cfi_def_cfa_offset 80
	cmpq	$8, %r12
	jne	.LBB131_4
# %bb.3:
	movq	8(%rsp), %rax                   # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, (%r13)
	jmp	.LBB131_4
.Lfunc_end131:
	.size	_ZNSt6vectorIbSaIbEE13_M_reallocateEm, .Lfunc_end131-_ZNSt6vectorIbSaIbEE13_M_reallocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb,"axG",@progbits,_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb,comdat
	.weak	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb # -- Begin function _ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb
	.p2align	4, 0x90
	.type	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb,@function
_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb: # @_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%ecx, 12(%rsp)                  # 4-byte Spill
	movl	%edx, %r13d
	movq	%rsi, %r12
	movq	%rdi, %rbx
	movq	16(%rdi), %rbp
	movq	32(%rdi), %rax
	movl	24(%rdi), %r15d
	cmpq	%rax, %rbp
	je	.LBB132_9
# %bb.1:
	movq	%rbp, %rcx
	subq	%r12, %rcx
	movl	%r13d, %eax
	movq	%r15, %rdx
	subq	%rax, %rdx
	leaq	(%rdx,%rcx,8), %rcx
	testq	%rcx, %rcx
	jle	.LBB132_7
# %bb.2:                                # %_ZNSt13_Bit_iteratormmEv.exit.i.i.i.i.i.preheader
	leaq	1(%r15), %rdx
	movl	%edx, %ecx
	andl	$63, %ecx
	shrq	$6, %rdx
	leaq	(,%rdx,8), %rdx
	addq	%rbp, %rdx
	leaq	(%r15,%rbp,8), %rsi
	subq	%rax, %rsi
	leaq	(,%r12,8), %rdi
	subq	%rdi, %rsi
	incq	%rsi
	movl	$63, %edi
	movl	%r15d, %r8d
	movq	%rbp, %r9
	jmp	.LBB132_5
	.p2align	4, 0x90
.LBB132_3:                              #   in Loop: Header=BB132_5 Depth=1
	notq	%r11
	andq	(%rdx), %r11
.LBB132_4:                              # %_ZNSt14_Bit_referenceaSERKS_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB132_5 Depth=1
	leaq	(%r9,%r10,8), %r9
	addq	$-8, %r9
	movq	%r11, (%rdx)
	decq	%rsi
	cmpq	$1, %rsi
	jle	.LBB132_7
.LBB132_5:                              # %_ZNSt13_Bit_iteratormmEv.exit.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	xorl	%r10d, %r10d
	subl	$1, %r8d
	setae	%r10b
	cmovbl	%edi, %r8d
	xorl	%r14d, %r14d
	subl	$1, %ecx
	setae	%r14b
	cmovbl	%edi, %ecx
	movl	$1, %r11d
	shlq	%cl, %r11
	leaq	(%rdx,%r14,8), %rdx
	addq	$-8, %rdx
	movq	-8(%r9,%r10,8), %r14
	btq	%r8, %r14
	jae	.LBB132_3
# %bb.6:                                #   in Loop: Header=BB132_5 Depth=1
	orq	(%rdx), %r11
	jmp	.LBB132_4
.LBB132_7:                              # %_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_.exit
	movl	$1, %edx
	movl	%eax, %ecx
	shlq	%cl, %rdx
	cmpb	$0, 12(%rsp)                    # 1-byte Folded Reload
	je	.LBB132_18
# %bb.8:
	orq	(%r12), %rdx
	jmp	.LBB132_19
.LBB132_9:
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	movabsq	$9223372036854775744, %rsi      # imm = 0x7FFFFFFFFFFFFFC0
	movq	%rbp, %rax
	movq	(%rbx), %rbp
	movq	%rax, 48(%rsp)                  # 8-byte Spill
	subq	%rbp, %rax
	movq	%rax, 24(%rsp)                  # 8-byte Spill
	leaq	(%r15,%rax,8), %rax
	cmpq	%rsi, %rax
	je	.LBB132_42
# %bb.10:                               # %_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc.exit
	cmpq	$1, %rax
	movq	%rax, %rcx
	adcq	$0, %rcx
	leaq	(%rcx,%rax), %rdx
	cmpq	%rsi, %rdx
	cmovaeq	%rsi, %rdx
	addq	$63, %rdx
	addq	$63, %rsi
	addq	%rax, %rcx
	cmovaeq	%rdx, %rsi
	movq	%rsi, 40(%rsp)                  # 8-byte Spill
	movq	%rsi, %rax
	shrq	$3, %rax
	movabsq	$1152921504606846968, %rdi      # imm = 0xFFFFFFFFFFFFFF8
	andq	%rax, %rdi
	callq	_Znwm@PLT
	movq	%rax, %r11
	movq	%r12, %r14
	subq	%rbp, %r14
	cmpq	$9, %r14
	movq	%rbp, 16(%rsp)                  # 8-byte Spill
	jl	.LBB132_40
# %bb.11:
	movq	%r11, %rdi
	movq	%rbp, %rsi
	movq	%r14, %rdx
	movq	%r11, %rbp
	callq	memmove@PLT
	movq	%rbp, %r11
.LBB132_12:                             # %_ZSt4copyIPmS0_ET0_T_S2_S1_.exit.i
	addq	%r11, %r14
	testl	%r13d, %r13d
	movq	48(%rsp), %r10                  # 8-byte Reload
	je	.LBB132_23
# %bb.13:                               # %.lr.ph.i.i.i.i.i.preheader.i
	movl	%r13d, %eax
	incq	%rax
	xorl	%edx, %edx
	xorl	%edi, %edi
	movq	%r12, %rsi
	xorl	%ecx, %ecx
	jmp	.LBB132_16
	.p2align	4, 0x90
.LBB132_14:                             #   in Loop: Header=BB132_16 Depth=1
	notq	%r8
	andq	(%r14), %r8
.LBB132_15:                             # %_ZNSt14_Bit_referenceaSEb.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB132_16 Depth=1
	movq	%r8, (%r14)
	xorl	%r8d, %r8d
	cmpl	$63, %edi
	leal	1(%rdi), %edi
	sete	%r8b
	cmovel	%edx, %edi
	leaq	(%rsi,%r8,8), %rsi
	xorl	%r8d, %r8d
	cmpl	$63, %ecx
	leal	1(%rcx), %ecx
	sete	%r8b
                                        # kill: def $ecx killed $ecx def $rcx
	cmovel	%edx, %ecx
	leaq	(%r14,%r8,8), %r14
	decq	%rax
                                        # kill: def $edi killed $edi def $rdi
	cmpq	$1, %rax
	jle	.LBB132_21
.LBB132_16:                             # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rsi), %r9
	movl	$1, %r8d
	shlq	%cl, %r8
	btq	%rdi, %r9
	jae	.LBB132_14
# %bb.17:                               #   in Loop: Header=BB132_16 Depth=1
	orq	(%r14), %r8
	jmp	.LBB132_15
.LBB132_18:
	notq	%rdx
	andq	(%r12), %rdx
.LBB132_19:                             # %_ZNSt14_Bit_referenceaSEb.exit
	movq	%rdx, (%r12)
	leal	1(%r15), %eax
	movl	%eax, 24(%rbx)
	cmpl	$63, %r15d
	jne	.LBB132_39
# %bb.20:
	movl	$0, 24(%rbx)
	addq	$8, %rbp
	movq	%rbp, 16(%rbx)
	jmp	.LBB132_39
.LBB132_21:                             # %_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.exit
	movq	%r15, %rdi
	cmpl	$63, %ecx
	jne	.LBB132_27
# %bb.22:
	leaq	8(%r14), %r15
	xorl	%eax, %eax
	movl	$63, %ecx
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	cmpb	$0, 12(%rsp)                    # 1-byte Folded Reload
	jne	.LBB132_26
.LBB132_28:
	notq	%rdx
	andq	(%r14), %rdx
	jmp	.LBB132_29
.LBB132_23:
	movq	%r15, %rdi
	movl	$1, %eax
	xorl	%ecx, %ecx
	jmp	.LBB132_24
.LBB132_27:
	leal	1(%rcx), %eax
.LBB132_24:
	movq	%r14, %r15
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	cmpb	$0, 12(%rsp)                    # 1-byte Folded Reload
	je	.LBB132_28
.LBB132_26:
	orq	(%r14), %rdx
.LBB132_29:                             # %_ZNSt14_Bit_referenceaSEb.exit31
	movq	%rdx, (%r14)
	movq	%r10, %rdx
	subq	%r12, %rdx
	movl	%r13d, %ecx
	movq	%rdi, %rsi
	subq	%rcx, %rsi
	leaq	(%rsi,%rdx,8), %rdx
	testq	%rdx, %rdx
	jle	.LBB132_35
# %bb.30:                               # %.lr.ph.i.i.i.i.i.preheader
	leaq	(%rdi,%r10,8), %rdx
	subq	%rcx, %rdx
	leaq	(,%r12,8), %rcx
	subq	%rcx, %rdx
	incq	%rdx
	xorl	%esi, %esi
	jmp	.LBB132_33
	.p2align	4, 0x90
.LBB132_31:                             #   in Loop: Header=BB132_33 Depth=1
	notq	%rdi
	andq	(%r15), %rdi
.LBB132_32:                             # %_ZNSt14_Bit_referenceaSERKS_.exit.i.i.i.i.i44
                                        #   in Loop: Header=BB132_33 Depth=1
	movq	%rdi, (%r15)
	xorl	%ecx, %ecx
	cmpl	$63, %r13d
	leal	1(%r13), %edi
	sete	%cl
	cmovel	%esi, %edi
	leaq	(%r12,%rcx,8), %r12
	leal	1(%rax), %ebp
	xorl	%ecx, %ecx
	cmpl	$63, %eax
	sete	%cl
	leaq	(%r15,%rcx,8), %r15
	cmovel	%esi, %ebp
	decq	%rdx
	movl	%edi, %r13d
	movl	%ebp, %eax
	cmpq	$1, %rdx
	jle	.LBB132_36
.LBB132_33:                             # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movl	$1, %edi
	movl	%eax, %ecx
	shlq	%cl, %rdi
	movq	(%r12), %rcx
	btq	%r13, %rcx
	jae	.LBB132_31
# %bb.34:                               #   in Loop: Header=BB132_33 Depth=1
	orq	(%r15), %rdi
	jmp	.LBB132_32
.LBB132_35:
	movl	%eax, %ebp
.LBB132_36:                             # %_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_.exit
	cmpq	$0, 16(%rsp)                    # 8-byte Folded Reload
	je	.LBB132_38
# %bb.37:
	movq	32(%rsp), %rdi                  # 8-byte Reload
	movq	24(%rsp), %rsi                  # 8-byte Reload
	subq	%rsi, %rdi
	movq	%r11, %r14
	callq	_ZdlPvm@PLT
	movq	%r14, %r11
.LBB132_38:                             # %_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv.exit
	movq	40(%rsp), %rax                  # 8-byte Reload
	shrq	$6, %rax
	leaq	(%r11,%rax,8), %rax
	movq	%rax, 32(%rbx)
	movq	%r11, (%rbx)
	movl	$0, 8(%rbx)
	movq	%r15, 16(%rbx)
	movl	%ebp, 24(%rbx)
.LBB132_39:                             # %_ZNSt13_Bit_iteratorppEv.exit
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB132_40:
	.cfi_def_cfa_offset 112
	cmpq	$8, %r14
	jne	.LBB132_12
# %bb.41:
	movq	16(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, (%r11)
	jmp	.LBB132_12
.LBB132_42:
	leaq	.L.str.147(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end132:
	.size	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb, .Lfunc_end132-_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb,"axG",@progbits,_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb,comdat
	.weak	_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb # -- Begin function _ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb
	.p2align	4, 0x90
	.type	_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb,@function
_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb: # @_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	testq	%rcx, %rcx
	je	.LBB133_63
# %bb.1:
	movq	%rcx, %r12
	movl	%edx, %r15d
	movq	%rsi, %rbp
	movq	%rdi, %rbx
	movl	%r8d, %eax
	negb	%al
	movb	%al, 3(%rsp)                    # 1-byte Spill
	movabsq	$-9223372036854775808, %rdi     # imm = 0x8000000000000000
	movq	32(%rbx), %rcx
	movq	(%rbx), %r13
	movq	16(%rbx), %rdx
	subq	%r13, %rcx
	shlq	$3, %rcx
	movl	24(%rbx), %esi
	movq	%rdx, %rax
	subq	%r13, %rax
	leaq	(%rsi,%rax,8), %rax
	subq	%rax, %rcx
	cmpq	%r12, %rcx
	movl	%r8d, 4(%rsp)                   # 4-byte Spill
	jae	.LBB133_2
# %bb.25:
	movq	%rdi, %rcx
	subq	%rax, %rcx
	addq	$-64, %rcx
	cmpq	%r12, %rcx
	jb	.LBB133_64
# %bb.26:                               # %_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc.exit
	cmpq	%r12, %rax
	movq	%r12, %rcx
	cmovaq	%rax, %rcx
	leaq	(%rcx,%rax), %rdx
	movabsq	$9223372036854775744, %rsi      # imm = 0x7FFFFFFFFFFFFFC0
	cmpq	%rsi, %rdx
	cmovbq	%rdx, %rsi
	addq	$63, %rsi
	leaq	-1(%rdi), %rdx
	addq	%rax, %rcx
	cmovaeq	%rsi, %rdx
	movq	%rdx, 16(%rsp)                  # 8-byte Spill
	movq	%rdx, %rax
	shrq	$3, %rax
	movabsq	$1152921504606846968, %rdi      # imm = 0xFFFFFFFFFFFFFF8
	andq	%rax, %rdi
	callq	_Znwm@PLT
	movq	%rbp, %r14
	subq	%r13, %r14
	cmpq	$9, %r14
	movq	%rax, 8(%rsp)                   # 8-byte Spill
	jl	.LBB133_28
# %bb.27:
	movq	8(%rsp), %rdi                   # 8-byte Reload
	movq	%r13, %rsi
	movq	%r14, %rdx
	callq	memmove@PLT
	movq	8(%rsp), %rax                   # 8-byte Reload
.LBB133_30:                             # %_ZSt4copyIPmS0_ET0_T_S2_S1_.exit.i
	addq	%rax, %r14
	testl	%r15d, %r15d
	je	.LBB133_31
# %bb.32:                               # %.lr.ph.i.i.i.i.i.preheader.i
	movl	%r15d, %eax
	incq	%rax
	xorl	%edx, %edx
	xorl	%edi, %edi
	movq	%rbp, %rsi
	xorl	%ecx, %ecx
	jmp	.LBB133_33
	.p2align	4, 0x90
.LBB133_35:                             #   in Loop: Header=BB133_33 Depth=1
	notq	%r8
	andq	(%r14), %r8
.LBB133_36:                             # %_ZNSt14_Bit_referenceaSEb.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB133_33 Depth=1
	movq	%r8, (%r14)
	xorl	%r8d, %r8d
	cmpl	$63, %edi
	leal	1(%rdi), %edi
	sete	%r8b
	cmovel	%edx, %edi
	leaq	(%rsi,%r8,8), %rsi
	leal	1(%rcx), %r8d
	xorl	%r9d, %r9d
	cmpl	$63, %ecx
	sete	%r9b
	cmovel	%edx, %r8d
	leaq	(%r14,%r9,8), %r14
	decq	%rax
                                        # kill: def $edi killed $edi def $rdi
	movl	%r8d, %ecx
	cmpq	$1, %rax
	jle	.LBB133_37
.LBB133_33:                             # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rsi), %r9
	movl	$1, %r8d
	shlq	%cl, %r8
	btq	%rdi, %r9
	jae	.LBB133_35
# %bb.34:                               #   in Loop: Header=BB133_33 Depth=1
	orq	(%r14), %r8
	jmp	.LBB133_36
.LBB133_2:
	movq	%rdx, %rcx
	subq	%rbp, %rcx
	movl	%r15d, %eax
	movq	%rsi, %rdi
	subq	%rax, %rdi
	leaq	(%rdi,%rcx,8), %rcx
	testq	%rcx, %rcx
	jle	.LBB133_8
# %bb.3:                                # %_ZNSt13_Bit_iteratormmEv.exit.i.i.i.i.i.preheader
	leaq	(%rsi,%r12), %rdi
	movl	%edi, %ecx
	andl	$63, %ecx
	leaq	(%rsi,%r12), %r8
	addq	$63, %r8
	testq	%rdi, %rdi
	cmovnsq	%rdi, %r8
	sarq	$6, %r8
	movabsq	$-9223372036854775808, %r10     # imm = 0x8000000000000000
	leaq	63(%r10), %r9
	andq	%rdi, %r9
	xorl	%edi, %edi
	cmpq	%r10, %r9
	setbe	%dil
	leaq	(%rdx,%r8,8), %r8
	leaq	(%r8,%rdi,8), %rdi
	addq	$-8, %rdi
	leaq	(%rsi,%rdx,8), %r8
	subq	%rax, %r8
	leaq	(,%rbp,8), %r9
	subq	%r9, %r8
	incq	%r8
	movl	$63, %r9d
	jmp	.LBB133_4
	.p2align	4, 0x90
.LBB133_6:                              #   in Loop: Header=BB133_4 Depth=1
	notq	%r11
	andq	(%rdi), %r11
.LBB133_7:                              # %_ZNSt14_Bit_referenceaSERKS_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB133_4 Depth=1
	leaq	(%rdx,%r10,8), %rdx
	addq	$-8, %rdx
	movq	%r11, (%rdi)
	decq	%r8
	cmpq	$1, %r8
	jle	.LBB133_8
.LBB133_4:                              # %_ZNSt13_Bit_iteratormmEv.exit.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	xorl	%r10d, %r10d
	subl	$1, %esi
	setae	%r10b
	cmovbl	%r9d, %esi
	xorl	%r14d, %r14d
	subl	$1, %ecx
	setae	%r14b
	cmovbl	%r9d, %ecx
	movl	$1, %r11d
	shlq	%cl, %r11
	leaq	(%rdi,%r14,8), %rdi
	addq	$-8, %rdi
	movq	-8(%rdx,%r10,8), %r14
	btq	%rsi, %r14
	jae	.LBB133_6
# %bb.5:                                #   in Loop: Header=BB133_4 Depth=1
	orq	(%rdi), %r11
	jmp	.LBB133_7
.LBB133_8:                              # %_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_.exit
	movq	%rax, %r14
	addq	%r12, %r14
	leaq	63(%rax,%r12), %rcx
	cmovnsq	%r14, %rcx
	sarq	$6, %rcx
	movabsq	$-9223372036854775808, %rdi     # imm = 0x8000000000000000
	leaq	63(%rdi), %r8
	movq	%r14, %rdx
	andq	%r8, %rdx
	xorl	%esi, %esi
	cmpq	%rdi, %rdx
	setbe	%sil
	leaq	(,%rcx,8), %rcx
	addq	%rbp, %rcx
	leaq	(%rcx,%rsi,8), %r13
	addq	$-8, %r13
	andl	$63, %r14d
	cmpq	%rbp, %r13
	je	.LBB133_19
# %bb.9:
	testl	%r15d, %r15d
	je	.LBB133_10
# %bb.11:
	leaq	8(%rbp), %rdi
	movq	$-1, %rdx
	movl	%eax, %ecx
	shlq	%cl, %rdx
	cmpb	$0, 4(%rsp)                     # 1-byte Folded Reload
	je	.LBB133_13
# %bb.12:
	orq	(%rbp), %rdx
	jmp	.LBB133_14
.LBB133_19:
	cmpl	%r15d, %r14d
	je	.LBB133_24
# %bb.20:
	negb	%r14b
	movq	$-1, %rdx
	movl	%r14d, %ecx
	shrq	%cl, %rdx
	movl	%eax, %ecx
	shrq	%cl, %rdx
	shlq	%cl, %rdx
	cmpb	$0, 4(%rsp)                     # 1-byte Folded Reload
	je	.LBB133_22
# %bb.21:
	orq	(%rbp), %rdx
	jmp	.LBB133_23
.LBB133_31:
	xorl	%r8d, %r8d
.LBB133_37:                             # %_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.exit
	movl	%r8d, %eax
	movq	%rax, %r13
	addq	%r12, %r13
	leaq	63(%rax,%r12), %rcx
	cmovnsq	%r13, %rcx
	sarq	$6, %rcx
	movabsq	$-9223372036854775808, %rdi     # imm = 0x8000000000000000
	leaq	63(%rdi), %rdx
	andq	%r13, %rdx
	xorl	%esi, %esi
	cmpq	%rdi, %rdx
	setbe	%sil
	leaq	(%r14,%rcx,8), %rcx
	leaq	(%rcx,%rsi,8), %r12
	addq	$-8, %r12
	andl	$63, %r13d
	cmpq	%r12, %r14
	je	.LBB133_47
# %bb.38:
	testq	%rax, %rax
	je	.LBB133_43
# %bb.39:
	movq	$-1, %rdx
	movl	%eax, %ecx
	shlq	%cl, %rdx
	cmpb	$0, 4(%rsp)                     # 1-byte Folded Reload
	je	.LBB133_41
# %bb.40:
	orq	(%r14), %rdx
	jmp	.LBB133_42
.LBB133_47:
	cmpl	%r13d, %eax
	je	.LBB133_52
# %bb.48:
	movl	%r13d, %ecx
	negb	%cl
	movq	$-1, %rdx
	shrq	%cl, %rdx
	movl	%eax, %ecx
	shrq	%cl, %rdx
	shlq	%cl, %rdx
	cmpb	$0, 4(%rsp)                     # 1-byte Folded Reload
	je	.LBB133_50
# %bb.49:
	orq	(%r14), %rdx
	jmp	.LBB133_51
.LBB133_10:
	movq	%r8, %r15
	movq	%rbp, %rdi
	jmp	.LBB133_15
.LBB133_13:
	notq	%rdx
	andq	(%rbp), %rdx
.LBB133_14:                             # %_ZSt14__fill_bvectorPmjjb.exit.i.i.i
	movq	%r8, %r15
	movq	%rdx, (%rbp)
.LBB133_15:
	movq	%r13, %rdx
	subq	%rdi, %rdx
	movzbl	3(%rsp), %esi                   # 1-byte Folded Reload
	callq	memset@PLT
	testl	%r14d, %r14d
	movabsq	$-9223372036854775808, %rdi     # imm = 0x8000000000000000
	movq	%r15, %r8
	je	.LBB133_24
# %bb.16:
	negb	%r14b
	movq	$-1, %rax
	movl	%r14d, %ecx
	shrq	%cl, %rax
	cmpb	$0, 4(%rsp)                     # 1-byte Folded Reload
	je	.LBB133_18
# %bb.17:
	orq	(%r13), %rax
	movq	%rax, (%r13)
	jmp	.LBB133_24
.LBB133_18:
	notq	%rax
	andq	(%r13), %rax
	movq	%rax, (%r13)
	jmp	.LBB133_24
.LBB133_41:
	notq	%rdx
	andq	(%r14), %rdx
.LBB133_42:                             # %_ZSt14__fill_bvectorPmjjb.exit.i.i.i58
	movq	%rdx, (%r14)
	addq	$8, %r14
.LBB133_43:
	movq	%r12, %rdx
	subq	%r14, %rdx
	movzbl	3(%rsp), %esi                   # 1-byte Folded Reload
	movq	%r14, %rdi
	callq	memset@PLT
	testl	%r13d, %r13d
	je	.LBB133_52
# %bb.44:
	movl	%r13d, %ecx
	negb	%cl
	movq	$-1, %rax
	shrq	%cl, %rax
	cmpb	$0, 4(%rsp)                     # 1-byte Folded Reload
	je	.LBB133_46
# %bb.45:
	orq	(%r12), %rax
	movq	%rax, (%r12)
	jmp	.LBB133_52
.LBB133_46:
	notq	%rax
	andq	(%r12), %rax
	movq	%rax, (%r12)
	jmp	.LBB133_52
.LBB133_22:
	notq	%rdx
	andq	(%rbp), %rdx
.LBB133_23:                             # %_ZSt14__fill_bvectorPmjjb.exit31.i.i.i
	movq	%rdx, (%rbp)
.LBB133_24:                             # %_ZSt4fillISt13_Bit_iteratorbEvT_S1_RKT0_.exit
	movl	24(%rbx), %r14d
	leaq	(%r14,%r12), %rax
	addq	$63, %rax
	addq	%r12, %r14
	cmovnsq	%r14, %rax
	sarq	$6, %rax
	shlq	$3, %rax
	addq	16(%rbx), %rax
	andq	%r14, %r8
	xorl	%ecx, %ecx
	cmpq	%rdi, %r8
	setbe	%cl
	leaq	(%rax,%rcx,8), %rax
	addq	$-8, %rax
	movq	%rax, 16(%rbx)
	andl	$63, %r14d
	jmp	.LBB133_62
.LBB133_50:
	notq	%rdx
	andq	(%r14), %rdx
.LBB133_51:                             # %_ZSt14__fill_bvectorPmjjb.exit31.i.i.i65
	movq	%rdx, (%r14)
.LBB133_52:                             # %_ZSt4fillISt13_Bit_iteratorbEvT_S1_RKT0_.exit67
	movq	16(%rbx), %rax
	movl	24(%rbx), %ecx
	movq	%rax, %rsi
	subq	%rbp, %rsi
	movl	%r15d, %edx
	movq	%rcx, %rdi
	subq	%rdx, %rdi
	leaq	(%rdi,%rsi,8), %rsi
	testq	%rsi, %rsi
	jle	.LBB133_53
# %bb.54:                               # %.lr.ph.i.i.i.i.i.preheader
	leaq	(%rcx,%rax,8), %rax
	subq	%rdx, %rax
	leaq	(,%rbp,8), %rcx
	subq	%rcx, %rax
	incq	%rax
	xorl	%edx, %edx
	jmp	.LBB133_55
	.p2align	4, 0x90
.LBB133_57:                             #   in Loop: Header=BB133_55 Depth=1
	notq	%rsi
	andq	(%r12), %rsi
.LBB133_58:                             # %_ZNSt14_Bit_referenceaSERKS_.exit.i.i.i.i.i88
                                        #   in Loop: Header=BB133_55 Depth=1
	movq	%rsi, (%r12)
	xorl	%ecx, %ecx
	cmpl	$63, %r15d
	leal	1(%r15), %esi
	sete	%cl
	cmovel	%edx, %esi
	leaq	(%rbp,%rcx,8), %rbp
	leal	1(%r13), %r14d
	xorl	%ecx, %ecx
	cmpl	$63, %r13d
	sete	%cl
	leaq	(%r12,%rcx,8), %r12
	cmovel	%edx, %r14d
	decq	%rax
	movl	%esi, %r15d
	movl	%r14d, %r13d
	cmpq	$1, %rax
	jle	.LBB133_59
.LBB133_55:                             # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movl	$1, %esi
	movl	%r13d, %ecx
	shlq	%cl, %rsi
	movq	(%rbp), %rcx
	btq	%r15, %rcx
	jae	.LBB133_57
# %bb.56:                               #   in Loop: Header=BB133_55 Depth=1
	orq	(%r12), %rsi
	jmp	.LBB133_58
.LBB133_53:
	movl	%r13d, %r14d
.LBB133_59:                             # %_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_.exit
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB133_61
# %bb.60:
	movq	32(%rbx), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB133_61:                             # %_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv.exit
	movq	16(%rsp), %rax                  # 8-byte Reload
	shrq	$6, %rax
	movq	8(%rsp), %rcx                   # 8-byte Reload
	leaq	(%rcx,%rax,8), %rax
	movq	%rax, 32(%rbx)
	movq	%rcx, (%rbx)
	movl	$0, 8(%rbx)
	movq	%r12, 16(%rbx)
.LBB133_62:                             # %.sink.split
	movl	%r14d, 24(%rbx)
.LBB133_63:
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB133_28:
	.cfi_def_cfa_offset 80
	cmpq	$8, %r14
	jne	.LBB133_30
# %bb.29:
	movq	(%r13), %rcx
	movq	%rcx, (%rax)
	jmp	.LBB133_30
.LBB133_64:
	leaq	.L.str.150(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end133:
	.size	_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb, .Lfunc_end133-_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev,"axG",@progbits,_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev,comdat
	.weak	_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev # -- Begin function _ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev,@function
_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev: # @_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r14
	movq	16(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB134_2
	.p2align	4, 0x90
.LBB134_1:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r15
	movl	$16, %esi
	callq	_ZdlPvm@PLT
	movq	%r15, %rdi
	testq	%r15, %r15
	jne	.LBB134_1
.LBB134_2:                              # %_ZNSt10_HashtableIP7_objectS1_SaIS1_ENSt8__detail9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS3_18_Mod_range_hashingENS3_20_Default_ranged_hashENS3_20_Prime_rehash_policyENS3_17_Hashtable_traitsILb0ELb1ELb1EEEE5clearEv.exit.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r14)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB134_3
# %bb.4:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB134_3:                              # %_ZNSt10_HashtableIP7_objectS1_SaIS1_ENSt8__detail9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS3_18_Mod_range_hashingENS3_20_Default_ranged_hashENS3_20_Prime_rehash_policyENS3_17_Hashtable_traitsILb0ELb1ELb1EEEED2Ev.exit
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end134:
	.size	_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev, .Lfunc_end134-_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_,"axG",@progbits,_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_,comdat
	.hidden	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_ # -- Begin function _ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_
	.weak	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_,@function
_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_: # @_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movq	(%rdi), %rdi
	movq	8(%rbx), %r14
	movq	%r14, %rax
	subq	%rdi, %rax
	movabsq	$9223372036854775800, %rcx      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rcx, %rax
	je	.LBB135_12
# %bb.1:                                # %_ZNKSt6vectorIN8pybind116detail13function_callESaIS2_EE12_M_check_lenEmPKc.exit
	movq	%rdx, %r13
	movq	%rsi, %r15
	sarq	$3, %rax
	movabsq	$5675921253449092805, %rcx      # imm = 0x4EC4EC4EC4EC4EC5
	imulq	%rcx, %rax
	cmpq	$1, %rax
	movq	%rax, %rdx
	adcq	$0, %rdx
	leaq	(%rdx,%rax), %r8
	movabsq	$88686269585142075, %rsi        # imm = 0x13B13B13B13B13B
	cmpq	%rsi, %r8
	cmovaeq	%rsi, %r8
	addq	%rax, %rdx
	cmovbq	%rsi, %r8
	movq	%r15, %rbp
	subq	%rdi, %rbp
	sarq	$3, %rbp
	imulq	%rcx, %rbp
	testq	%r8, %r8
	movq	%r8, 16(%rsp)                   # 8-byte Spill
	je	.LBB135_2
# %bb.3:
	movq	%rdi, %r12
	imulq	$104, %r8, %rdi
	callq	_Znwm@PLT
	movq	%r12, %rdi
	movq	%rax, %r12
	jmp	.LBB135_4
.LBB135_2:
	xorl	%r12d, %r12d
.LBB135_4:                              # %_ZNSt12_Vector_baseIN8pybind116detail13function_callESaIS2_EE11_M_allocateEm.exit
	imulq	$104, %rbp, %rax
	movups	(%r13), %xmm0
	movups	%xmm0, (%r12,%rax)
	movups	16(%r13), %xmm0
	movups	%xmm0, 16(%r12,%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%r13)
	movq	$0, 24(%r13)
	movq	64(%r13), %rcx
	movq	%rcx, 64(%r12,%rax)
	movups	32(%r13), %xmm0
	movups	48(%r13), %xmm1
	movups	%xmm1, 48(%r12,%rax)
	movups	%xmm0, 32(%r12,%rax)
	movq	$0, 32(%r13)
	movl	$0, 40(%r13)
	movq	$0, 48(%r13)
	movl	$0, 56(%r13)
	movq	$0, 64(%r13)
	movups	72(%r13), %xmm0
	movq	$0, 72(%r13)
	movups	%xmm0, 72(%r12,%rax)
	movq	$0, 80(%r13)
	movups	88(%r13), %xmm0
	movups	%xmm0, 88(%r12,%rax)
	movq	%r12, %r13
	movq	%rdi, 8(%rsp)                   # 8-byte Spill
	cmpq	%r15, %rdi
	je	.LBB135_7
# %bb.5:                                # %.lr.ph.i.i.i.preheader
	movq	%r12, %r13
	movq	8(%rsp), %rbp                   # 8-byte Reload
	.p2align	4, 0x90
.LBB135_6:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	%r13, %rdi
	movq	%rbp, %rsi
	movq	%rbx, %rdx
	callq	_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_
	addq	$104, %rbp
	addq	$104, %r13
	cmpq	%r15, %rbp
	jne	.LBB135_6
.LBB135_7:                              # %_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit
	addq	$104, %r13
	cmpq	%r15, %r14
	je	.LBB135_9
	.p2align	4, 0x90
.LBB135_8:                              # %.lr.ph.i.i.i17
                                        # =>This Inner Loop Header: Depth=1
	movq	%r13, %rdi
	movq	%r15, %rsi
	movq	%rbx, %rdx
	callq	_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_
	addq	$104, %r15
	addq	$104, %r13
	cmpq	%r14, %r15
	jne	.LBB135_8
.LBB135_9:                              # %_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit22
	movq	8(%rsp), %rdi                   # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB135_11
# %bb.10:
	movq	16(%rbx), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB135_11:                             # %_ZNSt12_Vector_baseIN8pybind116detail13function_callESaIS2_EE13_M_deallocateEPS2_m.exit
	movq	%r12, (%rbx)
	movq	%r13, 8(%rbx)
	imulq	$104, 16(%rsp), %rax            # 8-byte Folded Reload
	addq	%r12, %rax
	movq	%rax, 16(%rbx)
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB135_12:
	.cfi_def_cfa_offset 80
	leaq	.L.str.106(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end135:
	.size	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_, .Lfunc_end135-_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_,"axG",@progbits,_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_,comdat
	.hidden	_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_ # -- Begin function _ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_
	.weak	_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_
	.p2align	4, 0x90
	.type	_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_,@function
_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_: # @_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_
.Lfunc_begin68:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception68
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movups	(%rsi), %xmm0
	movups	%xmm0, (%rdi)
	movups	16(%rsi), %xmm0
	movups	%xmm0, 16(%rdi)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rsi)
	movq	$0, 24(%rsi)
	movq	64(%rsi), %rax
	movq	%rax, 64(%rdi)
	movups	32(%rsi), %xmm0
	movups	48(%rsi), %xmm1
	movups	%xmm1, 48(%rdi)
	movups	%xmm0, 32(%rdi)
	movq	$0, 32(%rsi)
	movl	$0, 40(%rsi)
	movq	$0, 48(%rsi)
	movl	$0, 56(%rsi)
	movq	$0, 64(%rsi)
	leaq	80(%rsi), %rax
	movups	72(%rsi), %xmm0
	movq	$0, 72(%rsi)
	movups	%xmm0, 72(%rdi)
	movq	$0, 80(%rsi)
	movups	88(%rsi), %xmm0
	movups	%xmm0, 88(%rdi)
.Ltmp2335:
	movq	%rax, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2336:
# %bb.1:                                # %_ZN8pybind116objectD2Ev.exit.i.i.i
.Ltmp2338:
	leaq	72(%rbx), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2339:
# %bb.2:                                # %_ZN8pybind116objectD2Ev.exit1.i.i.i
	leaq	8(%rbx), %r14
	leaq	32(%rbx), %rax
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB136_4
# %bb.3:
	movq	64(%rbx), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	movq	$0, 32(%rbx)
	movl	$0, 40(%rbx)
	movq	$0, 48(%rbx)
	movl	$0, 56(%rbx)
	movq	$0, 64(%rbx)
.LBB136_4:                              # %_ZNSt13_Bvector_baseISaIbEED2Ev.exit.i.i.i
	movq	(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB136_5
# %bb.8:
	movq	24(%rbx), %rsi
	subq	%rdi, %rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB136_5:                              # %_ZNSt16allocator_traitsISaIN8pybind116detail13function_callEEE7destroyIS2_EEvRS3_PT_.exit
	.cfi_def_cfa_offset 32
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB136_7:
	.cfi_def_cfa_offset 32
.Ltmp2340:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB136_6:
.Ltmp2337:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end136:
	.size	_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_, .Lfunc_end136-_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_
	.cfi_endproc
	.section	.gcc_except_table._ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_,"aG",@progbits,_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_,comdat
	.p2align	2, 0x0
GCC_except_table136:
.Lexception68:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase45-.Lttbaseref45
.Lttbaseref45:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end68-.Lcst_begin68
.Lcst_begin68:
	.uleb128 .Ltmp2335-.Lfunc_begin68       # >> Call Site 1 <<
	.uleb128 .Ltmp2336-.Ltmp2335            #   Call between .Ltmp2335 and .Ltmp2336
	.uleb128 .Ltmp2337-.Lfunc_begin68       #     jumps to .Ltmp2337
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2338-.Lfunc_begin68       # >> Call Site 2 <<
	.uleb128 .Ltmp2339-.Ltmp2338            #   Call between .Ltmp2338 and .Ltmp2339
	.uleb128 .Ltmp2340-.Lfunc_begin68       #     jumps to .Ltmp2340
	.byte	1                               #   On action: 1
.Lcst_end68:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase45:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_,"axG",@progbits,_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_,comdat
	.hidden	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_ # -- Begin function _ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_
	.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_,@function
_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_: # @_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_
.Lfunc_begin69:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception69
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	cmpq	%rsi, %rdi
	je	.LBB137_9
# %bb.1:                                # %.lr.ph.preheader
	movq	%rsi, %rbx
	movq	%rdi, %r14
	addq	$80, %r14
	jmp	.LBB137_2
	.p2align	4, 0x90
.LBB137_8:                              # %_ZSt8_DestroyIN8pybind116detail13function_callEEvPT_.exit
                                        #   in Loop: Header=BB137_2 Depth=1
	leaq	104(%r14), %rax
	addq	$24, %r14
	cmpq	%rbx, %r14
	movq	%rax, %r14
	je	.LBB137_9
.LBB137_2:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
.Ltmp2341:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2342:
# %bb.3:                                # %_ZN8pybind116objectD2Ev.exit.i.i.i
                                        #   in Loop: Header=BB137_2 Depth=1
	leaq	-8(%r14), %rdi
.Ltmp2344:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2345:
# %bb.4:                                # %_ZN8pybind116objectD2Ev.exit1.i.i.i
                                        #   in Loop: Header=BB137_2 Depth=1
	movq	-48(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB137_6
# %bb.5:                                #   in Loop: Header=BB137_2 Depth=1
	movq	-16(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	movq	$0, -48(%r14)
	movl	$0, -40(%r14)
	movq	$0, -32(%r14)
	movl	$0, -24(%r14)
	movq	$0, -16(%r14)
.LBB137_6:                              # %_ZNSt13_Bvector_baseISaIbEED2Ev.exit.i.i.i
                                        #   in Loop: Header=BB137_2 Depth=1
	movq	-72(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB137_8
# %bb.7:                                #   in Loop: Header=BB137_2 Depth=1
	movq	-56(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB137_8
.LBB137_9:                              # %._crit_edge
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB137_10:
	.cfi_def_cfa_offset 32
.Ltmp2343:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB137_11:
.Ltmp2346:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end137:
	.size	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_, .Lfunc_end137-_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_,"aG",@progbits,_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_,comdat
	.p2align	2, 0x0
GCC_except_table137:
.Lexception69:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase46-.Lttbaseref46
.Lttbaseref46:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end69-.Lcst_begin69
.Lcst_begin69:
	.uleb128 .Ltmp2341-.Lfunc_begin69       # >> Call Site 1 <<
	.uleb128 .Ltmp2342-.Ltmp2341            #   Call between .Ltmp2341 and .Ltmp2342
	.uleb128 .Ltmp2343-.Lfunc_begin69       #     jumps to .Ltmp2343
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2344-.Lfunc_begin69       # >> Call Site 2 <<
	.uleb128 .Ltmp2345-.Ltmp2344            #   Call between .Ltmp2344 and .Ltmp2345
	.uleb128 .Ltmp2346-.Lfunc_begin69       #     jumps to .Ltmp2346
	.byte	1                               #   On action: 1
.Lcst_end69:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase46:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE,"axG",@progbits,_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE,comdat
	.hidden	_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE # -- Begin function _ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE
	.weak	_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE,@function
_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE: # @_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE
.Lfunc_begin70:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception70
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$32, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	%rsp, %rdi
	callq	_ZSt17current_exceptionv@PLT
	leaq	8(%rsp), %r14
	leaq	16(%rsp), %r15
	leaq	24(%rsp), %r12
.LBB138_1:                              # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	je	.LBB138_7
# %bb.2:                                #   in Loop: Header=BB138_1 Depth=1
	movq	8(%rbx), %r13
	movq	(%rsp), %rax
	movq	%rax, 8(%rsp)
	testq	%rax, %rax
	je	.LBB138_4
# %bb.3:                                #   in Loop: Header=BB138_1 Depth=1
	movq	%r14, %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv@PLT
.LBB138_4:                              # %_ZNSt15__exception_ptr13exception_ptrC2ERKS0_.exit
                                        #   in Loop: Header=BB138_1 Depth=1
.Ltmp2347:
	movq	%r14, %rdi
	callq	*%r13
.Ltmp2348:
	jmp	.LBB138_5
.LBB138_10:                             #   in Loop: Header=BB138_1 Depth=1
.Ltmp2349:
	movq	%rax, %r13
	cmpq	$0, 8(%rsp)
	je	.LBB138_12
# %bb.11:                               #   in Loop: Header=BB138_1 Depth=1
	movq	%r14, %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
.LBB138_12:                             # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit16
                                        #   in Loop: Header=BB138_1 Depth=1
	movq	%r13, %rdi
	callq	__cxa_begin_catch@PLT
	movq	%r15, %rdi
	callq	_ZSt17current_exceptionv@PLT
	movq	16(%rsp), %rax
	movq	$0, 16(%rsp)
	movq	(%rsp), %rcx
	movq	%rcx, 24(%rsp)
	movq	%rax, (%rsp)
	testq	%rcx, %rcx
	je	.LBB138_15
# %bb.13:                               # %_ZNSt15__exception_ptr13exception_ptraSEOS0_.exit
                                        #   in Loop: Header=BB138_1 Depth=1
	movq	%r12, %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
	cmpq	$0, 16(%rsp)
	je	.LBB138_15
# %bb.14:                               #   in Loop: Header=BB138_1 Depth=1
	movq	%r15, %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
.LBB138_15:                             # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit18
                                        #   in Loop: Header=BB138_1 Depth=1
.Ltmp2350:
	callq	__cxa_end_catch@PLT
.Ltmp2351:
	jmp	.LBB138_1
.LBB138_5:                              # %.critedge
	cmpq	$0, 8(%rsp)
	je	.LBB138_7
# %bb.6:
	leaq	8(%rsp), %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
.LBB138_7:                              # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit
	cmpq	$0, (%rsp)
	je	.LBB138_9
# %bb.8:
	movq	%rsp, %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
.LBB138_9:                              # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit22
	testq	%rbx, %rbx
	setne	%al
	addq	$32, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB138_16:
	.cfi_def_cfa_offset 80
.Ltmp2352:
	movq	%rax, %rbx
	cmpq	$0, (%rsp)
	je	.LBB138_18
# %bb.17:
	movq	%rsp, %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
.LBB138_18:                             # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit20
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end138:
	.size	_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE, .Lfunc_end138-_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE,"aG",@progbits,_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE,comdat
	.p2align	2, 0x0
GCC_except_table138:
.Lexception70:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase47-.Lttbaseref47
.Lttbaseref47:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end70-.Lcst_begin70
.Lcst_begin70:
	.uleb128 .Ltmp2347-.Lfunc_begin70       # >> Call Site 1 <<
	.uleb128 .Ltmp2348-.Ltmp2347            #   Call between .Ltmp2347 and .Ltmp2348
	.uleb128 .Ltmp2349-.Lfunc_begin70       #     jumps to .Ltmp2349
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2348-.Lfunc_begin70       # >> Call Site 2 <<
	.uleb128 .Ltmp2350-.Ltmp2348            #   Call between .Ltmp2348 and .Ltmp2350
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2350-.Lfunc_begin70       # >> Call Site 3 <<
	.uleb128 .Ltmp2351-.Ltmp2350            #   Call between .Ltmp2350 and .Ltmp2351
	.uleb128 .Ltmp2352-.Lfunc_begin70       #     jumps to .Ltmp2352
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2351-.Lfunc_begin70       # >> Call Site 4 <<
	.uleb128 .Lfunc_end138-.Ltmp2351        #   Call between .Ltmp2351 and .Lfunc_end138
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end70:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase47:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv,"axG",@progbits,_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv,comdat
	.hidden	_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv # -- Begin function _ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv
	.weak	_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv
	.p2align	4, 0x90
	.type	_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv,@function
_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv: # @_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv
.Lfunc_begin71:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception71
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$24, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	leaq	24(%rdi), %rbx
	cmpq	$0, 24(%rdi)
	jne	.LBB139_8
# %bb.1:
	movq	8(%rdi), %rax
	movq	16(%rdi), %rsi
	movq	%rax, %rdi
	callq	PyTuple_GetItem@PLT
	testq	%rax, %rax
	je	.LBB139_2
# %bb.5:                                # %_ZN8pybind116detail17accessor_policies10tuple_item3getImTnNSt9enable_ifIXsr3std11is_integralIT_EE5valueEiE4typeELi0EEENS_6objectENS_6handleERKS5_.exit
	movq	%rax, 8(%rsp)
	leaq	8(%rsp), %r14
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	cmpq	%r14, %rbx
	je	.LBB139_7
# %bb.6:
	movq	(%rbx), %rax
	movq	%rax, 16(%rsp)
	movq	8(%rsp), %rax
	movq	%rax, (%rbx)
	movq	$0, 8(%rsp)
.Ltmp2353:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2354:
.LBB139_7:                              # %_ZN8pybind116objectaSEOS0_.exit
.Ltmp2356:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2357:
.LBB139_8:
	movq	%rbx, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB139_2:
	.cfi_def_cfa_offset 48
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp2359:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2360:
# %bb.3:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.LBB139_4:
.Ltmp2361:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB139_9:
.Ltmp2355:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB139_10:
.Ltmp2358:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end139:
	.size	_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv, .Lfunc_end139-_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv,"aG",@progbits,_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv,comdat
	.p2align	2, 0x0
GCC_except_table139:
.Lexception71:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase48-.Lttbaseref48
.Lttbaseref48:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end71-.Lcst_begin71
.Lcst_begin71:
	.uleb128 .Lfunc_begin71-.Lfunc_begin71  # >> Call Site 1 <<
	.uleb128 .Ltmp2353-.Lfunc_begin71       #   Call between .Lfunc_begin71 and .Ltmp2353
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2353-.Lfunc_begin71       # >> Call Site 2 <<
	.uleb128 .Ltmp2354-.Ltmp2353            #   Call between .Ltmp2353 and .Ltmp2354
	.uleb128 .Ltmp2355-.Lfunc_begin71       #     jumps to .Ltmp2355
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2356-.Lfunc_begin71       # >> Call Site 3 <<
	.uleb128 .Ltmp2357-.Ltmp2356            #   Call between .Ltmp2356 and .Ltmp2357
	.uleb128 .Ltmp2358-.Lfunc_begin71       #     jumps to .Ltmp2358
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2357-.Lfunc_begin71       # >> Call Site 4 <<
	.uleb128 .Ltmp2359-.Ltmp2357            #   Call between .Ltmp2357 and .Ltmp2359
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2359-.Lfunc_begin71       # >> Call Site 5 <<
	.uleb128 .Ltmp2360-.Ltmp2359            #   Call between .Ltmp2359 and .Ltmp2360
	.uleb128 .Ltmp2361-.Lfunc_begin71       #     jumps to .Ltmp2361
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2360-.Lfunc_begin71       # >> Call Site 6 <<
	.uleb128 .Lfunc_end139-.Ltmp2360        #   Call between .Ltmp2360 and .Lfunc_end139
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end71:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase48:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_,"axG",@progbits,_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_,comdat
	.hidden	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_ # -- Begin function _ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_
	.weak	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_
	.p2align	4, 0x90
	.type	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_,@function
_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_: # @_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_
.Lfunc_begin72:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception72
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r15
	movq	%rsi, %r14
	movq	%rdi, %rbx
	callq	PyGILState_Check@PLT
	testl	%eax, %eax
	je	.LBB140_14
# %bb.1:
	leaq	8(%rsp), %rdi
	movq	%r15, %rsi
	callq	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_
.Ltmp2362:
	movq	%r14, %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp2363:
# %bb.2:
	movq	(%rax), %rdi
	movq	8(%rsp), %rsi
.Ltmp2364:
	callq	PyObject_CallObject@PLT
.Ltmp2365:
# %bb.3:                                # %.noexc
	testq	%rax, %rax
	je	.LBB140_4
# %bb.9:
	movq	%rax, (%rbx)
.Ltmp2366:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2367:
# %bb.10:                               # %_ZN8pybind116detail16simple_collectorILNS_19return_value_policyE1EED2Ev.exit
	movq	%rbx, %rax
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB140_14:
	.cfi_def_cfa_offset 48
	leaq	.L.str.154(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.LBB140_4:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2369:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2370:
# %bb.5:
.Ltmp2372:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2373:
# %bb.6:                                # %.noexc3
.LBB140_7:
.Ltmp2371:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB140_12
.LBB140_8:
.Ltmp2368:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB140_11:
.Ltmp2374:
	movq	%rax, %rbx
.LBB140_12:                             # %.body
.Ltmp2375:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2376:
# %bb.13:                               # %_ZN8pybind116detail16simple_collectorILNS_19return_value_policyE1EED2Ev.exit4
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB140_15:
.Ltmp2377:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end140:
	.size	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_, .Lfunc_end140-_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_,"aG",@progbits,_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_,comdat
	.p2align	2, 0x0
GCC_except_table140:
.Lexception72:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase49-.Lttbaseref49
.Lttbaseref49:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end72-.Lcst_begin72
.Lcst_begin72:
	.uleb128 .Lfunc_begin72-.Lfunc_begin72  # >> Call Site 1 <<
	.uleb128 .Ltmp2362-.Lfunc_begin72       #   Call between .Lfunc_begin72 and .Ltmp2362
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2362-.Lfunc_begin72       # >> Call Site 2 <<
	.uleb128 .Ltmp2365-.Ltmp2362            #   Call between .Ltmp2362 and .Ltmp2365
	.uleb128 .Ltmp2374-.Lfunc_begin72       #     jumps to .Ltmp2374
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2366-.Lfunc_begin72       # >> Call Site 3 <<
	.uleb128 .Ltmp2367-.Ltmp2366            #   Call between .Ltmp2366 and .Ltmp2367
	.uleb128 .Ltmp2368-.Lfunc_begin72       #     jumps to .Ltmp2368
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2367-.Lfunc_begin72       # >> Call Site 4 <<
	.uleb128 .Ltmp2369-.Ltmp2367            #   Call between .Ltmp2367 and .Ltmp2369
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2369-.Lfunc_begin72       # >> Call Site 5 <<
	.uleb128 .Ltmp2370-.Ltmp2369            #   Call between .Ltmp2369 and .Ltmp2370
	.uleb128 .Ltmp2371-.Lfunc_begin72       #     jumps to .Ltmp2371
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2372-.Lfunc_begin72       # >> Call Site 6 <<
	.uleb128 .Ltmp2373-.Ltmp2372            #   Call between .Ltmp2372 and .Ltmp2373
	.uleb128 .Ltmp2374-.Lfunc_begin72       #     jumps to .Ltmp2374
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2373-.Lfunc_begin72       # >> Call Site 7 <<
	.uleb128 .Ltmp2375-.Ltmp2373            #   Call between .Ltmp2373 and .Ltmp2375
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2375-.Lfunc_begin72       # >> Call Site 8 <<
	.uleb128 .Ltmp2376-.Ltmp2375            #   Call between .Ltmp2375 and .Ltmp2376
	.uleb128 .Ltmp2377-.Lfunc_begin72       #     jumps to .Ltmp2377
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2376-.Lfunc_begin72       # >> Call Site 9 <<
	.uleb128 .Lfunc_end140-.Ltmp2376        #   Call between .Ltmp2376 and .Lfunc_end140
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end72:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase49:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind113strC2EONS_6objectE,"axG",@progbits,_ZN8pybind113strC2EONS_6objectE,comdat
	.hidden	_ZN8pybind113strC2EONS_6objectE # -- Begin function _ZN8pybind113strC2EONS_6objectE
	.weak	_ZN8pybind113strC2EONS_6objectE
	.p2align	4, 0x90
	.type	_ZN8pybind113strC2EONS_6objectE,@function
_ZN8pybind113strC2EONS_6objectE:        # @_ZN8pybind113strC2EONS_6objectE
.Lfunc_begin73:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception73
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	(%rsi), %rdi
	testq	%rdi, %rdi
	je	.LBB141_4
# %bb.1:                                # %_ZN8pybind113str6check_ENS_6handleE.exit
	movq	8(%rdi), %rax
	testb	$16, 171(%rax)
	jne	.LBB141_2
.LBB141_4:                              # %_ZN8pybind113str6check_ENS_6handleE.exit.thread
	callq	PyObject_Str@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB141_5
# %bb.3:
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB141_2:                              # %.thread
	.cfi_def_cfa_offset 32
	movq	$0, (%rsi)
	movq	%rdi, (%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB141_5:
	.cfi_def_cfa_offset 32
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp2378:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2379:
# %bb.6:
.Ltmp2381:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp2382:
# %bb.11:
.LBB141_7:
.Ltmp2383:
	movq	%rax, %r14
	jmp	.LBB141_9
.LBB141_8:
.Ltmp2380:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
.LBB141_9:
.Ltmp2384:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2385:
# %bb.10:                               # %_ZN8pybind116objectD2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB141_12:
.Ltmp2386:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end141:
	.size	_ZN8pybind113strC2EONS_6objectE, .Lfunc_end141-_ZN8pybind113strC2EONS_6objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind113strC2EONS_6objectE,"aG",@progbits,_ZN8pybind113strC2EONS_6objectE,comdat
	.p2align	2, 0x0
GCC_except_table141:
.Lexception73:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase50-.Lttbaseref50
.Lttbaseref50:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end73-.Lcst_begin73
.Lcst_begin73:
	.uleb128 .Lfunc_begin73-.Lfunc_begin73  # >> Call Site 1 <<
	.uleb128 .Ltmp2378-.Lfunc_begin73       #   Call between .Lfunc_begin73 and .Ltmp2378
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2378-.Lfunc_begin73       # >> Call Site 2 <<
	.uleb128 .Ltmp2379-.Ltmp2378            #   Call between .Ltmp2378 and .Ltmp2379
	.uleb128 .Ltmp2380-.Lfunc_begin73       #     jumps to .Ltmp2380
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2381-.Lfunc_begin73       # >> Call Site 3 <<
	.uleb128 .Ltmp2382-.Ltmp2381            #   Call between .Ltmp2381 and .Ltmp2382
	.uleb128 .Ltmp2383-.Lfunc_begin73       #     jumps to .Ltmp2383
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2382-.Lfunc_begin73       # >> Call Site 4 <<
	.uleb128 .Ltmp2384-.Ltmp2382            #   Call between .Ltmp2382 and .Ltmp2384
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2384-.Lfunc_begin73       # >> Call Site 5 <<
	.uleb128 .Ltmp2385-.Ltmp2384            #   Call between .Ltmp2384 and .Ltmp2385
	.uleb128 .Ltmp2386-.Lfunc_begin73       #     jumps to .Ltmp2386
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2385-.Lfunc_begin73       # >> Call Site 6 <<
	.uleb128 .Lfunc_end141-.Ltmp2385        #   Call between .Ltmp2385 and .Lfunc_end141
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end73:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase50:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_,"axG",@progbits,_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_,comdat
	.hidden	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_ # -- Begin function _ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_
	.weak	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_
	.p2align	4, 0x90
	.type	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_,@function
_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_: # @_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_
.Lfunc_begin74:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception74
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$80, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	%rsi, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rax), %rax
	movq	%rax, 8(%rsp)
	testq	%rax, %rax
	je	.LBB142_9
# %bb.1:                                # %.split44.critedge
.Ltmp2387:
	movl	$1, %edi
	callq	PyTuple_New@PLT
.Ltmp2388:
# %bb.2:                                # %.noexc
	movq	%rax, (%r14)
	testq	%rax, %rax
	je	.LBB142_5
# %bb.3:                                # %_ZN8pybind115tupleC2ImTnNSt9enable_ifIXsr3std11is_integralIT_EE5valueEiE4typeELi0EEES3_.exit.preheader.preheader
	movq	8(%rsp), %rcx
	movq	$0, 8(%rsp)
	movq	8(%rax), %rdx
	testb	$4, 171(%rdx)
	je	.LBB142_4
# %bb.22:                               # %_ZL16PyTuple_SET_ITEMP7_objectlS0_.exit
	movq	%rcx, 24(%rax)
.Ltmp2390:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2391:
# %bb.23:                               # %_ZNSt5arrayIN8pybind116objectELm1EED2Ev.exit
	movq	%r14, %rax
	addq	$80, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB142_9:                              # %.split46.us
	.cfi_def_cfa_offset 112
.Ltmp2399:
	leaq	48(%rsp), %rdi
	callq	_ZN8pybind11L7type_idIRKNS_6handleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
.Ltmp2400:
# %bb.10:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2402:
	leaq	16(%rsp), %rdi
	xorl	%esi, %esi
	callq	_ZNSt7__cxx119to_stringEm@PLT
.Ltmp2403:
# %bb.11:
	movb	$1, %bpl
.Ltmp2405:
	leaq	16(%rsp), %rsi
	leaq	48(%rsp), %rdx
	movq	%r14, %rdi
	callq	_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_
.Ltmp2406:
# %bb.12:
	xorl	%ebp, %ebp
.Ltmp2407:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2408:
# %bb.28:
.LBB142_5:
.Ltmp2393:
	leaq	.L.str.148(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp2394:
# %bb.6:
.LBB142_4:
	leaq	.L.str.137(%rip), %rdi
	leaq	.L.str.138(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL16PyTuple_SET_ITEMP7_objectlS0_(%rip), %rcx
	movl	$33, %edx
	callq	__assert_fail@PLT
.LBB142_15:
.Ltmp2409:
	movq	%rax, %rbx
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB142_16
# %bb.17:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	testb	%bpl, %bpl
	jne	.LBB142_18
.LBB142_19:
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB142_20
	jmp	.LBB142_26
.LBB142_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	testb	%bpl, %bpl
	je	.LBB142_19
	jmp	.LBB142_18
.LBB142_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.thread
.Ltmp2404:
	movq	%rax, %rbx
.LBB142_18:
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB142_26
.LBB142_20:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB142_26
.LBB142_13:
.Ltmp2401:
	jmp	.LBB142_25
.LBB142_21:
.Ltmp2392:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB142_7:
.Ltmp2395:
	movq	%rax, %rbx
.Ltmp2396:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2397:
	jmp	.LBB142_26
.LBB142_8:
.Ltmp2398:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB142_24:
.Ltmp2389:
.LBB142_25:                             # %.body
	movq	%rax, %rbx
.LBB142_26:                             # %.body
.Ltmp2410:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2411:
# %bb.27:                               # %_ZNSt5arrayIN8pybind116objectELm1EED2Ev.exit35
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB142_29:
.Ltmp2412:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end142:
	.size	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_, .Lfunc_end142-_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_,"aG",@progbits,_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_,comdat
	.p2align	2, 0x0
GCC_except_table142:
.Lexception74:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase51-.Lttbaseref51
.Lttbaseref51:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end74-.Lcst_begin74
.Lcst_begin74:
	.uleb128 .Lfunc_begin74-.Lfunc_begin74  # >> Call Site 1 <<
	.uleb128 .Ltmp2387-.Lfunc_begin74       #   Call between .Lfunc_begin74 and .Ltmp2387
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2387-.Lfunc_begin74       # >> Call Site 2 <<
	.uleb128 .Ltmp2388-.Ltmp2387            #   Call between .Ltmp2387 and .Ltmp2388
	.uleb128 .Ltmp2389-.Lfunc_begin74       #     jumps to .Ltmp2389
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2390-.Lfunc_begin74       # >> Call Site 3 <<
	.uleb128 .Ltmp2391-.Ltmp2390            #   Call between .Ltmp2390 and .Ltmp2391
	.uleb128 .Ltmp2392-.Lfunc_begin74       #     jumps to .Ltmp2392
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2399-.Lfunc_begin74       # >> Call Site 4 <<
	.uleb128 .Ltmp2400-.Ltmp2399            #   Call between .Ltmp2399 and .Ltmp2400
	.uleb128 .Ltmp2401-.Lfunc_begin74       #     jumps to .Ltmp2401
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2400-.Lfunc_begin74       # >> Call Site 5 <<
	.uleb128 .Ltmp2402-.Ltmp2400            #   Call between .Ltmp2400 and .Ltmp2402
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2402-.Lfunc_begin74       # >> Call Site 6 <<
	.uleb128 .Ltmp2403-.Ltmp2402            #   Call between .Ltmp2402 and .Ltmp2403
	.uleb128 .Ltmp2404-.Lfunc_begin74       #     jumps to .Ltmp2404
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2405-.Lfunc_begin74       # >> Call Site 7 <<
	.uleb128 .Ltmp2408-.Ltmp2405            #   Call between .Ltmp2405 and .Ltmp2408
	.uleb128 .Ltmp2409-.Lfunc_begin74       #     jumps to .Ltmp2409
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2393-.Lfunc_begin74       # >> Call Site 8 <<
	.uleb128 .Ltmp2394-.Ltmp2393            #   Call between .Ltmp2393 and .Ltmp2394
	.uleb128 .Ltmp2395-.Lfunc_begin74       #     jumps to .Ltmp2395
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2394-.Lfunc_begin74       # >> Call Site 9 <<
	.uleb128 .Ltmp2396-.Ltmp2394            #   Call between .Ltmp2394 and .Ltmp2396
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2396-.Lfunc_begin74       # >> Call Site 10 <<
	.uleb128 .Ltmp2397-.Ltmp2396            #   Call between .Ltmp2396 and .Ltmp2397
	.uleb128 .Ltmp2398-.Lfunc_begin74       #     jumps to .Ltmp2398
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2410-.Lfunc_begin74       # >> Call Site 11 <<
	.uleb128 .Ltmp2411-.Ltmp2410            #   Call between .Ltmp2410 and .Ltmp2411
	.uleb128 .Ltmp2412-.Lfunc_begin74       #     jumps to .Ltmp2412
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2411-.Lfunc_begin74       # >> Call Site 12 <<
	.uleb128 .Lfunc_end142-.Ltmp2411        #   Call between .Ltmp2411 and .Lfunc_end142
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end74:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase51:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZN8pybind11L7type_idIRKNS_6handleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
	.type	_ZN8pybind11L7type_idIRKNS_6handleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv,@function
_ZN8pybind11L7type_idIRKNS_6handleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv: # @_ZN8pybind11L7type_idIRKNS_6handleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
.Lfunc_begin75:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception75
# %bb.0:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r15
	movl	$19, %edi
	callq	_Znwm@PLT
	movq	%rax, (%rbx)
	movq	$18, 16(%rbx)
	movups	_ZTSN8pybind116handleE(%rip), %xmm0
	movups	%xmm0, (%rax)
	movw	$17765, 16(%rax)                # imm = 0x4565
	movq	$18, 8(%rbx)
	movb	$0, 18(%rax)
.Ltmp2413:
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp2414:
# %bb.1:                                # %_ZN8pybind116detail13clean_type_idB5cxx11EPKc.exit
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB143_2:
	.cfi_def_cfa_offset 32
.Ltmp2415:
	movq	%rax, %r14
	movq	(%rbx), %rdi
	cmpq	%r15, %rdi
	je	.LBB143_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	movq	(%r15), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB143_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end143:
	.size	_ZN8pybind11L7type_idIRKNS_6handleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv, .Lfunc_end143-_ZN8pybind11L7type_idIRKNS_6handleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table143:
.Lexception75:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end75-.Lcst_begin75
.Lcst_begin75:
	.uleb128 .Lfunc_begin75-.Lfunc_begin75  # >> Call Site 1 <<
	.uleb128 .Ltmp2413-.Lfunc_begin75       #   Call between .Lfunc_begin75 and .Ltmp2413
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2413-.Lfunc_begin75       # >> Call Site 2 <<
	.uleb128 .Ltmp2414-.Ltmp2413            #   Call between .Ltmp2413 and .Ltmp2414
	.uleb128 .Ltmp2415-.Lfunc_begin75       #     jumps to .Ltmp2415
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2414-.Lfunc_begin75       # >> Call Site 3 <<
	.uleb128 .Lfunc_end143-.Ltmp2414        #   Call between .Ltmp2414 and .Lfunc_end143
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end75:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_,"axG",@progbits,_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_,comdat
	.hidden	_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ # -- Begin function _ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_
	.weak	_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_
	.p2align	4, 0x90
	.type	_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_,@function
_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_: # @_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_
.Lfunc_begin76:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception76
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$136, %rsp
	.cfi_def_cfa_offset 192
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r12
	movq	%rdi, %rbx
	movabsq	$9223372036854775789, %rbp      # imm = 0x7FFFFFFFFFFFFFED
	movq	(%rsi), %rcx
	movq	8(%rsi), %r8
	leaq	.L.str.155(%rip), %rsi
	leaq	40(%rsp), %rdi
	leaq	7(%rsp), %r9
	movl	$33, %edx
	callq	_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE@PLT
	movq	48(%rsp), %rsi
	leaq	7(%rbp), %rax
	cmpq	%rax, %rsi
	jg	.LBB144_1
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	leaq	11(%rsi), %r14
	movq	40(%rsp), %rax
	leaq	56(%rsp), %r15
	movl	$15, %ecx
	cmpq	%r15, %rax
	je	.LBB144_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	56(%rsp), %rcx
.LBB144_5:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	cmpq	%rcx, %r14
	jbe	.LBB144_6
# %bb.7:
.Ltmp2416:
	leaq	.L.str.156(%rip), %rcx
	leaq	40(%rsp), %rdi
	movl	$11, %r8d
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2417:
	jmp	.LBB144_8
.LBB144_6:
	movabsq	$8104636686936252455, %rcx      # imm = 0x70797420666F2027
	movq	%rcx, (%rax,%rsi)
	movl	$656434544, 7(%rax,%rsi)        # imm = 0x27206570
.LBB144_8:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
	movq	%r14, 48(%rsp)
	movq	40(%rsp), %rax
	movb	$0, (%rax,%r14)
	leaq	24(%rsp), %r14
	movq	%r14, 8(%rsp)
	movq	40(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB144_9
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	%rdi, 8(%rsp)
	movq	48(%rsp), %r13
	movq	56(%rsp), %rax
	movq	%rax, 24(%rsp)
	jmp	.LBB144_11
.LBB144_9:
	movq	48(%rsp), %r13
	leaq	1(%r13), %rdx
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	memcpy@PLT
	movq	%r14, %rdi
.LBB144_11:
	movq	%r13, 16(%rsp)
	movq	%r15, 40(%rsp)
	movq	$0, 48(%rsp)
	movb	$0, 56(%rsp)
	movq	8(%r12), %r8
	movq	%rbp, %rax
	subq	%r13, %rax
	addq	$18, %rax
	cmpq	%r8, %rax
	jb	.LBB144_12
# %bb.14:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	leaq	(%r8,%r13), %r15
	movl	$15, %eax
	cmpq	%r14, %rdi
	je	.LBB144_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	movq	24(%rsp), %rax
.LBB144_16:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	movq	(%r12), %rcx
	cmpq	%rax, %r15
	jbe	.LBB144_17
# %bb.21:
.Ltmp2418:
	leaq	8(%rsp), %rdi
	movq	%r13, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2419:
	jmp	.LBB144_22
.LBB144_17:
	testq	%r8, %r8
	je	.LBB144_22
# %bb.18:
	addq	%r13, %rdi
	cmpq	$1, %r8
	jne	.LBB144_20
# %bb.19:
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB144_22
.LBB144_20:
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB144_22:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_.exit.i
	movq	%r15, 16(%rsp)
	movq	8(%rsp), %rax
	movb	$0, (%rax,%r15)
	leaq	88(%rsp), %r12
	movq	%r12, 72(%rsp)
	movq	8(%rsp), %rax
	cmpq	%r14, %rax
	je	.LBB144_23
# %bb.25:
	movq	%rax, 72(%rsp)
	movq	16(%rsp), %r13
	movq	16(%rsp), %rcx
	movq	%rcx, 80(%rsp)
	movq	24(%rsp), %rcx
	movq	%rcx, 88(%rsp)
	movq	%r14, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
	cmpq	%rbp, %r13
	jg	.LBB144_26
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i14
	leaq	18(%r13), %rbp
	cmpq	%r12, %rax
	je	.LBB144_24
# %bb.29:
	xorl	%ecx, %ecx
	movl	$15, %edx
	testb	%cl, %cl
	je	.LBB144_31
	jmp	.LBB144_32
.LBB144_23:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i14.thread
	movq	16(%rsp), %r13
	leaq	1(%r13), %rdx
	movq	%r12, %rdi
	movq	%r14, %rsi
	callq	memcpy@PLT
	movq	%r13, 80(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
	leaq	18(%r13), %rbp
	movq	%r12, %rax
.LBB144_24:
	movb	$1, %cl
	movl	$15, %edx
	testb	%cl, %cl
	jne	.LBB144_32
.LBB144_31:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i15
	movq	88(%rsp), %rdx
.LBB144_32:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i15
	cmpq	%rdx, %rbp
	jbe	.LBB144_33
# %bb.34:
.Ltmp2422:
	leaq	.L.str.157(%rip), %rcx
	leaq	72(%rsp), %rdi
	movl	$18, %r8d
	movq	%r13, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2423:
	jmp	.LBB144_35
.LBB144_33:
	movups	.L.str.157(%rip), %xmm0
	movups	%xmm0, (%rax,%r13)
	movw	$29795, 16(%rax,%r13)           # imm = 0x7463
.LBB144_35:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i19
	movq	%rbp, 80(%rsp)
	movq	72(%rsp), %rax
	movb	$0, (%rax,%rbp)
	leaq	120(%rsp), %r13
	movq	%r13, 104(%rsp)
	movq	72(%rsp), %rax
	cmpq	%r12, %rax
	je	.LBB144_36
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i20
	movq	%rax, 104(%rsp)
	movq	80(%rsp), %r15
	movq	88(%rsp), %rax
	movq	%rax, 120(%rsp)
	jmp	.LBB144_38
.LBB144_36:
	movq	80(%rsp), %r15
	leaq	1(%r15), %rdx
	movq	%r13, %rdi
	movq	%r12, %rsi
	callq	memcpy@PLT
.LBB144_38:
	movq	%r15, 112(%rsp)
	movq	%r12, 72(%rsp)
	movq	$0, 80(%rsp)
	movb	$0, 88(%rsp)
.Ltmp2425:
	leaq	104(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp2426:
# %bb.39:
	leaq	_ZTVN8pybind1110cast_errorE+16(%rip), %rax
	movq	%rax, (%rbx)
	movq	104(%rsp), %rdi
	cmpq	%r13, %rdi
	leaq	56(%rsp), %r15
	je	.LBB144_41
# %bb.40:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i26
	movq	120(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB144_41:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	72(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB144_43
# %bb.42:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i27
	movq	88(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB144_43:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit29
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB144_45
# %bb.44:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i30
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB144_45:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit32
	movq	40(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB144_47
# %bb.46:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i33
	movq	56(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB144_47:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit35
	movq	%rbx, %rax
	addq	$136, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB144_1:
	.cfi_def_cfa_offset 192
.Ltmp2431:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2432:
# %bb.2:                                # %.noexc
.LBB144_12:
.Ltmp2428:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2429:
# %bb.13:                               # %.noexc12
.LBB144_26:
.Ltmp2420:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2421:
# %bb.27:                               # %.noexc22
.LBB144_51:
.Ltmp2427:
	movq	%rax, %rbx
	movq	104(%rsp), %rdi
	cmpq	%r13, %rdi
	jne	.LBB144_52
# %bb.53:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38
	movq	72(%rsp), %rdi
	cmpq	%r12, %rdi
	jne	.LBB144_54
.LBB144_55:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit41
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	jne	.LBB144_56
.LBB144_57:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit44
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB144_58
.LBB144_59:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB144_52:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i36
	movq	120(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	72(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB144_55
	jmp	.LBB144_54
.LBB144_50:
.Ltmp2424:
	movq	%rax, %rbx
	movq	72(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB144_55
.LBB144_54:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i39
	movq	88(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB144_57
	jmp	.LBB144_56
.LBB144_49:
.Ltmp2430:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB144_57
.LBB144_56:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i42
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB144_59
	jmp	.LBB144_58
.LBB144_48:
.Ltmp2433:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB144_59
.LBB144_58:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i45
	movq	56(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end144:
	.size	_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_, .Lfunc_end144-_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_,"aG",@progbits,_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_,comdat
	.p2align	2, 0x0
GCC_except_table144:
.Lexception76:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end76-.Lcst_begin76
.Lcst_begin76:
	.uleb128 .Lfunc_begin76-.Lfunc_begin76  # >> Call Site 1 <<
	.uleb128 .Ltmp2416-.Lfunc_begin76       #   Call between .Lfunc_begin76 and .Ltmp2416
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2416-.Lfunc_begin76       # >> Call Site 2 <<
	.uleb128 .Ltmp2417-.Ltmp2416            #   Call between .Ltmp2416 and .Ltmp2417
	.uleb128 .Ltmp2433-.Lfunc_begin76       #     jumps to .Ltmp2433
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2417-.Lfunc_begin76       # >> Call Site 3 <<
	.uleb128 .Ltmp2418-.Ltmp2417            #   Call between .Ltmp2417 and .Ltmp2418
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2418-.Lfunc_begin76       # >> Call Site 4 <<
	.uleb128 .Ltmp2419-.Ltmp2418            #   Call between .Ltmp2418 and .Ltmp2419
	.uleb128 .Ltmp2430-.Lfunc_begin76       #     jumps to .Ltmp2430
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2419-.Lfunc_begin76       # >> Call Site 5 <<
	.uleb128 .Ltmp2422-.Ltmp2419            #   Call between .Ltmp2419 and .Ltmp2422
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2422-.Lfunc_begin76       # >> Call Site 6 <<
	.uleb128 .Ltmp2423-.Ltmp2422            #   Call between .Ltmp2422 and .Ltmp2423
	.uleb128 .Ltmp2424-.Lfunc_begin76       #     jumps to .Ltmp2424
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2423-.Lfunc_begin76       # >> Call Site 7 <<
	.uleb128 .Ltmp2425-.Ltmp2423            #   Call between .Ltmp2423 and .Ltmp2425
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2425-.Lfunc_begin76       # >> Call Site 8 <<
	.uleb128 .Ltmp2426-.Ltmp2425            #   Call between .Ltmp2425 and .Ltmp2426
	.uleb128 .Ltmp2427-.Lfunc_begin76       #     jumps to .Ltmp2427
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2431-.Lfunc_begin76       # >> Call Site 9 <<
	.uleb128 .Ltmp2432-.Ltmp2431            #   Call between .Ltmp2431 and .Ltmp2432
	.uleb128 .Ltmp2433-.Lfunc_begin76       #     jumps to .Ltmp2433
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2428-.Lfunc_begin76       # >> Call Site 10 <<
	.uleb128 .Ltmp2429-.Ltmp2428            #   Call between .Ltmp2428 and .Ltmp2429
	.uleb128 .Ltmp2430-.Lfunc_begin76       #     jumps to .Ltmp2430
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2420-.Lfunc_begin76       # >> Call Site 11 <<
	.uleb128 .Ltmp2421-.Ltmp2420            #   Call between .Ltmp2420 and .Ltmp2421
	.uleb128 .Ltmp2424-.Lfunc_begin76       #     jumps to .Ltmp2424
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2421-.Lfunc_begin76       # >> Call Site 12 <<
	.uleb128 .Lfunc_end144-.Ltmp2421        #   Call between .Ltmp2421 and .Lfunc_end144
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end76:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infomENUlPvE_8__invokeESE_,"axG",@progbits,_ZZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infomENUlPvE_8__invokeESE_,comdat
	.hidden	_ZZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infomENUlPvE_8__invokeESE_ # -- Begin function _ZZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infomENUlPvE_8__invokeESE_
	.weak	_ZZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infomENUlPvE_8__invokeESE_
	.p2align	4, 0x90
	.type	_ZZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infomENUlPvE_8__invokeESE_,@function
_ZZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infomENUlPvE_8__invokeESE_: # @_ZZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infomENUlPvE_8__invokeESE_
	.cfi_startproc
# %bb.0:
	movl	$1, %esi
	jmp	_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb # TAILCALL
.Lfunc_end145:
	.size	_ZZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infomENUlPvE_8__invokeESE_, .Lfunc_end145-_ZZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infomENUlPvE_8__invokeESE_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb,"axG",@progbits,_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb,comdat
	.hidden	_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb # -- Begin function _ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb
	.weak	_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb
	.p2align	4, 0x90
	.type	_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb,@function
_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb: # @_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb
.Lfunc_begin77:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception77
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	testq	%rdi, %rdi
	je	.LBB146_16
# %bb.1:                                # %.lr.ph78.preheader
	movl	%esi, %ebx
	movq	%rdi, %r14
	jmp	.LBB146_2
	.p2align	4, 0x90
.LBB146_15:                             # %_ZN8pybind116detail15function_recordD2Ev.exit
                                        #   in Loop: Header=BB146_2 Depth=1
	movl	$136, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%r15, %r14
	testq	%r15, %r15
	je	.LBB146_16
.LBB146_2:                              # %.lr.ph78
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB146_6 Depth 2
                                        #     Child Loop BB146_9 Depth 2
	movq	80(%r14), %rax
	movq	128(%r14), %r15
	testq	%rax, %rax
	je	.LBB146_4
# %bb.3:                                #   in Loop: Header=BB146_2 Depth=1
	movq	%r14, %rdi
	callq	*%rax
.LBB146_4:                              #   in Loop: Header=BB146_2 Depth=1
	testb	%bl, %bl
	je	.LBB146_8
# %bb.5:                                #   in Loop: Header=BB146_2 Depth=1
	movq	(%r14), %rdi
	callq	free@PLT
	movq	8(%r14), %rdi
	callq	free@PLT
	movq	16(%r14), %rdi
	callq	free@PLT
	movq	24(%r14), %r12
	movq	32(%r14), %r13
	cmpq	%r13, %r12
	je	.LBB146_8
	.p2align	4, 0x90
.LBB146_6:                              # %.lr.ph
                                        #   Parent Loop BB146_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	(%r12), %rdi
	callq	free@PLT
	movq	8(%r12), %rdi
	callq	free@PLT
	addq	$32, %r12
	cmpq	%r13, %r12
	jne	.LBB146_6
.LBB146_8:                              # %.loopexit
                                        #   in Loop: Header=BB146_2 Depth=1
	movq	24(%r14), %r12
	movq	32(%r14), %r13
	jmp	.LBB146_9
	.p2align	4, 0x90
.LBB146_34:                             # %_ZNKR8pybind116handle7dec_refEv.exit
                                        #   in Loop: Header=BB146_9 Depth=2
	addq	$32, %r12
.LBB146_9:                              # %.loopexit
                                        #   Parent Loop BB146_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpq	%r13, %r12
	je	.LBB146_10
# %bb.17:                               # %.lr.ph74
                                        #   in Loop: Header=BB146_9 Depth=2
	cmpq	$0, 16(%r12)
	je	.LBB146_34
# %bb.18:                               #   in Loop: Header=BB146_9 Depth=2
	callq	PyGILState_Check@PLT
	testl	%eax, %eax
	je	.LBB146_19
# %bb.30:                               #   in Loop: Header=BB146_9 Depth=2
	movq	16(%r12), %rdi
	testq	%rdi, %rdi
	je	.LBB146_34
# %bb.31:                               #   in Loop: Header=BB146_9 Depth=2
	movq	(%rdi), %rax
	testl	%eax, %eax
	js	.LBB146_34
# %bb.32:                               #   in Loop: Header=BB146_9 Depth=2
	decq	%rax
	movq	%rax, (%rdi)
	jne	.LBB146_34
# %bb.33:                               #   in Loop: Header=BB146_9 Depth=2
	callq	_Py_Dealloc@PLT
	jmp	.LBB146_34
	.p2align	4, 0x90
.LBB146_10:                             # %._crit_edge
                                        #   in Loop: Header=BB146_2 Depth=1
	movq	104(%r14), %rax
	testq	%rax, %rax
	je	.LBB146_13
# %bb.11:                               #   in Loop: Header=BB146_2 Depth=1
	movq	24(%rax), %rdi
	callq	free@PLT
	movq	104(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB146_13
# %bb.12:                               #   in Loop: Header=BB146_2 Depth=1
	movl	$32, %esi
	callq	_ZdlPvm@PLT
.LBB146_13:                             #   in Loop: Header=BB146_2 Depth=1
	movq	24(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB146_15
# %bb.14:                               #   in Loop: Header=BB146_2 Depth=1
	movq	40(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB146_15
.LBB146_16:                             # %._crit_edge79
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB146_19:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i
	.cfi_def_cfa_offset 96
	movl	$28, %edi
	callq	_Znwm@PLT
	movq	%rax, %rbx
	movups	.L.str.36(%rip), %xmm0
	movups	%xmm0, (%rax)
	movups	.L.str.36+11(%rip), %xmm0
	movups	%xmm0, 11(%rax)
	movb	$0, 27(%rax)
	movq	stderr@GOTPCREL(%rip), %r14
	movq	(%r14), %rdi
	leaq	.L.str.37(%rip), %rsi
	movq	%rax, %rdx
	xorl	%eax, %eax
	callq	fprintf@PLT
	movq	16(%r12), %rax
	movq	8(%rax), %rax
	movq	24(%rax), %rcx
	testq	%rcx, %rcx
	je	.LBB146_21
# %bb.20:
	movq	(%r14), %rdi
	leaq	.L.str.38(%rip), %rsi
	movq	%rbx, %rdx
	xorl	%eax, %eax
	callq	fprintf@PLT
.LBB146_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i54
	movq	(%r14), %rsi
	movl	$10, %edi
	callq	fputc@PLT
	movq	(%r14), %rdi
	callq	fflush@PLT
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
	leaq	24(%rsp), %r12
	movq	%r12, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp2434:
	movl	$56, %edi
	callq	_Znwm@PLT
.Ltmp2435:
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i.thread
	movb	$0, (%rax)
	movq	%rax, 8(%rsp)
	movq	$55, 24(%rsp)
	movups	(%rbx), %xmm0
	movups	11(%rbx), %xmm1
	movups	%xmm1, 11(%rax)
	movups	%xmm0, (%rax)
	movq	$27, 16(%rsp)
	movups	.L.str.40+12(%rip), %xmm0
	movups	%xmm0, 39(%rax)
	movups	.L.str.40(%rip), %xmm0
	movups	%xmm0, 27(%rax)
	movq	$55, 16(%rsp)
	movb	$0, 55(%rax)
	movb	$1, %bpl
.Ltmp2437:
	leaq	8(%rsp), %rsi
	movq	%r14, %rdi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp2438:
# %bb.23:
	xorl	%ebp, %ebp
.Ltmp2439:
	movq	_ZTISt13runtime_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt13runtime_errorD1Ev@GOTPCREL(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2440:
# %bb.29:
.LBB146_24:
.Ltmp2441:
	movq	%rax, %r15
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB146_26
# %bb.25:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i28
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB146_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i28
	testb	%bpl, %bpl
	jne	.LBB146_27
	jmp	.LBB146_28
.LBB146_35:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i.i.i32
.Ltmp2436:
	movq	%rax, %r15
.LBB146_27:
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
.LBB146_28:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i7.i
	movl	$28, %esi
	movq	%rbx, %rdi
	callq	_ZdlPvm@PLT
	movq	%r15, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end146:
	.size	_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb, .Lfunc_end146-_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb,"aG",@progbits,_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb,comdat
	.p2align	2, 0x0
GCC_except_table146:
.Lexception77:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end77-.Lcst_begin77
.Lcst_begin77:
	.uleb128 .Lfunc_begin77-.Lfunc_begin77  # >> Call Site 1 <<
	.uleb128 .Ltmp2434-.Lfunc_begin77       #   Call between .Lfunc_begin77 and .Ltmp2434
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2434-.Lfunc_begin77       # >> Call Site 2 <<
	.uleb128 .Ltmp2435-.Ltmp2434            #   Call between .Ltmp2434 and .Ltmp2435
	.uleb128 .Ltmp2436-.Lfunc_begin77       #     jumps to .Ltmp2436
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2437-.Lfunc_begin77       # >> Call Site 3 <<
	.uleb128 .Ltmp2440-.Ltmp2437            #   Call between .Ltmp2437 and .Ltmp2440
	.uleb128 .Ltmp2441-.Lfunc_begin77       #     jumps to .Ltmp2441
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2440-.Lfunc_begin77       # >> Call Site 4 <<
	.uleb128 .Lfunc_end146-.Ltmp2440        #   Call between .Ltmp2440 and .Lfunc_end146
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end77:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENUlP7_objectE_8__invokeES9_,"axG",@progbits,_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENUlP7_objectE_8__invokeES9_,comdat
	.hidden	_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENUlP7_objectE_8__invokeES9_ # -- Begin function _ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENUlP7_objectE_8__invokeES9_
	.weak	_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENUlP7_objectE_8__invokeES9_
	.p2align	4, 0x90
	.type	_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENUlP7_objectE_8__invokeES9_,@function
_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENUlP7_objectE_8__invokeES9_: # @_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENUlP7_objectE_8__invokeES9_
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	movq	%rdi, %rsi
	leaq	7(%rsp), %rdi
	callq	_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENKUlP7_objectE_clES9_
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end147:
	.size	_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENUlP7_objectE_8__invokeES9_, .Lfunc_end147-_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENUlP7_objectE_8__invokeES9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENKUlP7_objectE_clES9_,"axG",@progbits,_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENKUlP7_objectE_clES9_,comdat
	.hidden	_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENKUlP7_objectE_clES9_ # -- Begin function _ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENKUlP7_objectE_clES9_
	.weak	_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENKUlP7_objectE_clES9_
	.p2align	4, 0x90
	.type	_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENKUlP7_objectE_clES9_,@function
_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENKUlP7_objectE_clES9_: # @_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENKUlP7_objectE_clES9_
.Lfunc_begin78:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception78
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$24, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %r14
	leaq	8(%rsp), %rsi
	leaq	16(%rsp), %rdx
	movq	%rsp, %rdi
	callq	PyErr_Fetch@PLT
.Ltmp2442:
	movq	%r14, %rdi
	callq	PyCapsule_GetContext@PLT
.Ltmp2443:
# %bb.1:
	movq	%rax, %rbx
	testq	%rax, %rax
	jne	.LBB148_8
# %bb.2:
.Ltmp2444:
	callq	PyErr_Occurred@PLT
.Ltmp2445:
# %bb.3:
	testq	%rax, %rax
	jne	.LBB148_4
.LBB148_8:
.Ltmp2452:
	movq	%r14, %rdi
	callq	_ZN8pybind117capsule23get_name_in_error_scopeEP7_object
.Ltmp2453:
# %bb.9:
.Ltmp2455:
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	PyCapsule_GetPointer@PLT
.Ltmp2456:
# %bb.10:
	testq	%rax, %rax
	je	.LBB148_11
# %bb.16:
	testq	%rbx, %rbx
	je	.LBB148_18
# %bb.17:
.Ltmp2457:
	movq	%rax, %rdi
	callq	*%rbx
.Ltmp2458:
.LBB148_18:
	movq	(%rsp), %rdi
	movq	8(%rsp), %rsi
	movq	16(%rsp), %rdx
.Ltmp2459:
	callq	PyErr_Restore@PLT
.Ltmp2460:
# %bb.19:                               # %_ZN8pybind1111error_scopeD2Ev.exit
	addq	$24, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB148_11:
	.cfi_def_cfa_offset 48
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2462:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2463:
# %bb.12:
.Ltmp2465:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2466:
	jmp	.LBB148_23
.LBB148_4:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2446:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2447:
# %bb.5:
.Ltmp2449:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2450:
.LBB148_23:
.LBB148_6:
.Ltmp2448:
	jmp	.LBB148_7
.LBB148_15:
.Ltmp2464:
.LBB148_7:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	movq	%rsp, %rdi
	callq	_ZN8pybind1111error_scopeD2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB148_24:
.Ltmp2461:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB148_13:
.Ltmp2454:
	jmp	.LBB148_21
.LBB148_20:
.Ltmp2451:
	jmp	.LBB148_21
.LBB148_14:
.Ltmp2467:
.LBB148_21:
	movq	%rax, %rbx
	movq	%rsp, %rdi
	callq	_ZN8pybind1111error_scopeD2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end148:
	.size	_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENKUlP7_objectE_clES9_, .Lfunc_end148-_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENKUlP7_objectE_clES9_
	.cfi_endproc
	.section	.gcc_except_table._ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENKUlP7_objectE_clES9_,"aG",@progbits,_ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENKUlP7_objectE_clES9_,comdat
	.p2align	2, 0x0
GCC_except_table148:
.Lexception78:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase52-.Lttbaseref52
.Lttbaseref52:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end78-.Lcst_begin78
.Lcst_begin78:
	.uleb128 .Lfunc_begin78-.Lfunc_begin78  # >> Call Site 1 <<
	.uleb128 .Ltmp2442-.Lfunc_begin78       #   Call between .Lfunc_begin78 and .Ltmp2442
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2442-.Lfunc_begin78       # >> Call Site 2 <<
	.uleb128 .Ltmp2445-.Ltmp2442            #   Call between .Ltmp2442 and .Ltmp2445
	.uleb128 .Ltmp2451-.Lfunc_begin78       #     jumps to .Ltmp2451
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2452-.Lfunc_begin78       # >> Call Site 3 <<
	.uleb128 .Ltmp2453-.Ltmp2452            #   Call between .Ltmp2452 and .Ltmp2453
	.uleb128 .Ltmp2454-.Lfunc_begin78       #     jumps to .Ltmp2454
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2455-.Lfunc_begin78       # >> Call Site 4 <<
	.uleb128 .Ltmp2458-.Ltmp2455            #   Call between .Ltmp2455 and .Ltmp2458
	.uleb128 .Ltmp2467-.Lfunc_begin78       #     jumps to .Ltmp2467
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2459-.Lfunc_begin78       # >> Call Site 5 <<
	.uleb128 .Ltmp2460-.Ltmp2459            #   Call between .Ltmp2459 and .Ltmp2460
	.uleb128 .Ltmp2461-.Lfunc_begin78       #     jumps to .Ltmp2461
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2460-.Lfunc_begin78       # >> Call Site 6 <<
	.uleb128 .Ltmp2462-.Ltmp2460            #   Call between .Ltmp2460 and .Ltmp2462
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2462-.Lfunc_begin78       # >> Call Site 7 <<
	.uleb128 .Ltmp2463-.Ltmp2462            #   Call between .Ltmp2462 and .Ltmp2463
	.uleb128 .Ltmp2464-.Lfunc_begin78       #     jumps to .Ltmp2464
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2465-.Lfunc_begin78       # >> Call Site 8 <<
	.uleb128 .Ltmp2466-.Ltmp2465            #   Call between .Ltmp2465 and .Ltmp2466
	.uleb128 .Ltmp2467-.Lfunc_begin78       #     jumps to .Ltmp2467
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2466-.Lfunc_begin78       # >> Call Site 9 <<
	.uleb128 .Ltmp2446-.Ltmp2466            #   Call between .Ltmp2466 and .Ltmp2446
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2446-.Lfunc_begin78       # >> Call Site 10 <<
	.uleb128 .Ltmp2447-.Ltmp2446            #   Call between .Ltmp2446 and .Ltmp2447
	.uleb128 .Ltmp2448-.Lfunc_begin78       #     jumps to .Ltmp2448
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2449-.Lfunc_begin78       # >> Call Site 11 <<
	.uleb128 .Ltmp2450-.Ltmp2449            #   Call between .Ltmp2449 and .Ltmp2450
	.uleb128 .Ltmp2451-.Lfunc_begin78       #     jumps to .Ltmp2451
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2450-.Lfunc_begin78       # >> Call Site 12 <<
	.uleb128 .Lfunc_end148-.Ltmp2450        #   Call between .Ltmp2450 and .Lfunc_end148
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end78:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase52:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind117capsule23get_name_in_error_scopeEP7_object,"axG",@progbits,_ZN8pybind117capsule23get_name_in_error_scopeEP7_object,comdat
	.hidden	_ZN8pybind117capsule23get_name_in_error_scopeEP7_object # -- Begin function _ZN8pybind117capsule23get_name_in_error_scopeEP7_object
	.weak	_ZN8pybind117capsule23get_name_in_error_scopeEP7_object
	.p2align	4, 0x90
	.type	_ZN8pybind117capsule23get_name_in_error_scopeEP7_object,@function
_ZN8pybind117capsule23get_name_in_error_scopeEP7_object: # @_ZN8pybind117capsule23get_name_in_error_scopeEP7_object
.Lfunc_begin79:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception79
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$24, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	leaq	8(%rsp), %rsi
	leaq	16(%rsp), %rdx
	movq	%rsp, %rdi
	callq	PyErr_Fetch@PLT
.Ltmp2468:
	movq	%r14, %rdi
	callq	PyCapsule_GetName@PLT
.Ltmp2469:
# %bb.1:
	movq	%rax, %rbx
	testq	%rax, %rax
	jne	.LBB149_5
# %bb.2:
.Ltmp2470:
	callq	PyErr_Occurred@PLT
.Ltmp2471:
# %bb.3:
	testq	%rax, %rax
	je	.LBB149_5
# %bb.4:
.Ltmp2472:
	movq	%r14, %rdi
	callq	PyErr_WriteUnraisable@PLT
.Ltmp2473:
.LBB149_5:
	movq	(%rsp), %rdi
	movq	8(%rsp), %rsi
	movq	16(%rsp), %rdx
.Ltmp2475:
	callq	PyErr_Restore@PLT
.Ltmp2476:
# %bb.6:                                # %_ZN8pybind1111error_scopeD2Ev.exit
	movq	%rbx, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB149_8:
	.cfi_def_cfa_offset 48
.Ltmp2477:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB149_7:
.Ltmp2474:
	movq	%rax, %rbx
	movq	%rsp, %rdi
	callq	_ZN8pybind1111error_scopeD2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end149:
	.size	_ZN8pybind117capsule23get_name_in_error_scopeEP7_object, .Lfunc_end149-_ZN8pybind117capsule23get_name_in_error_scopeEP7_object
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind117capsule23get_name_in_error_scopeEP7_object,"aG",@progbits,_ZN8pybind117capsule23get_name_in_error_scopeEP7_object,comdat
	.p2align	2, 0x0
GCC_except_table149:
.Lexception79:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase53-.Lttbaseref53
.Lttbaseref53:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end79-.Lcst_begin79
.Lcst_begin79:
	.uleb128 .Lfunc_begin79-.Lfunc_begin79  # >> Call Site 1 <<
	.uleb128 .Ltmp2468-.Lfunc_begin79       #   Call between .Lfunc_begin79 and .Ltmp2468
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2468-.Lfunc_begin79       # >> Call Site 2 <<
	.uleb128 .Ltmp2473-.Ltmp2468            #   Call between .Ltmp2468 and .Ltmp2473
	.uleb128 .Ltmp2474-.Lfunc_begin79       #     jumps to .Ltmp2474
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2475-.Lfunc_begin79       # >> Call Site 3 <<
	.uleb128 .Ltmp2476-.Ltmp2475            #   Call between .Ltmp2475 and .Ltmp2476
	.uleb128 .Ltmp2477-.Lfunc_begin79       #     jumps to .Ltmp2477
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2476-.Lfunc_begin79       # >> Call Site 4 <<
	.uleb128 .Lfunc_end149-.Ltmp2476        #   Call between .Ltmp2476 and .Lfunc_end149
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end79:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase53:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_,"axG",@progbits,_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_,comdat
	.hidden	_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_ # -- Begin function _ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_
	.weak	_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_,@function
_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_: # @_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movq	(%rdi), %r15
	movq	8(%rdi), %r12
	movq	%rsi, %r14
	subq	%r15, %r14
	cmpq	16(%rdi), %r12
	je	.LBB150_8
# %bb.1:
	cmpq	%rsi, %r12
	je	.LBB150_2
# %bb.3:
	addq	%r14, %r15
	movq	(%rdx), %r13
	movq	-8(%r12), %rax
	movq	%rax, (%r12)
	movq	8(%rbx), %rdi
	leaq	8(%rdi), %rax
	movq	%rax, 8(%rbx)
	leaq	-8(%rdi), %rax
	movq	%rax, %rdx
	subq	%rsi, %rdx
	movq	%rdx, %rcx
	sarq	$3, %rcx
	cmpq	$2, %rcx
	jl	.LBB150_5
# %bb.4:
	shlq	$3, %rcx
	subq	%rcx, %rdi
	movq	%r15, %rsi
	callq	memmove@PLT
	movq	%r13, (%r15)
	jmp	.LBB150_19
.LBB150_8:
	movq	%rsi, 16(%rsp)                  # 8-byte Spill
	movq	%r12, %rcx
	subq	%r15, %rcx
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %rcx
	je	.LBB150_20
# %bb.9:                                # %_ZNKSt6vectorIPN8pybind116detail9type_infoESaIS3_EE12_M_check_lenEmPKc.exit.i
	movq	%rcx, 8(%rsp)                   # 8-byte Spill
	movq	%rcx, %rax
	sarq	$3, %rax
	cmpq	$1, %rax
	movq	%rax, %rcx
	adcq	$0, %rcx
	leaq	(%rcx,%rax), %r13
	movabsq	$1152921504606846975, %rsi      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rsi, %r13
	cmovaeq	%rsi, %r13
	addq	%rax, %rcx
	cmovbq	%rsi, %r13
	movq	%r14, %rbp
	sarq	$3, %rbp
	testq	%r13, %r13
	je	.LBB150_10
# %bb.11:
	leaq	(,%r13,8), %rdi
	movq	%rdx, (%rsp)                    # 8-byte Spill
	callq	_Znwm@PLT
	movq	(%rsp), %rdx                    # 8-byte Reload
	jmp	.LBB150_12
.LBB150_2:
	movq	(%rdx), %rax
	movq	%rax, (%r12)
	addq	$8, 8(%rbx)
	jmp	.LBB150_19
.LBB150_10:
	xorl	%eax, %eax
.LBB150_12:                             # %_ZNSt12_Vector_baseIPN8pybind116detail9type_infoESaIS3_EE11_M_allocateEm.exit.i
	movq	(%rdx), %rcx
	movq	%rcx, (%rax,%rbp,8)
	testq	%r14, %r14
	movq	%rax, (%rsp)                    # 8-byte Spill
	jle	.LBB150_14
# %bb.13:
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	memmove@PLT
	movq	(%rsp), %rax                    # 8-byte Reload
.LBB150_14:                             # %_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_.exit.i
	leaq	(%rax,%r14), %rbp
	addq	$8, %rbp
	subq	16(%rsp), %r12                  # 8-byte Folded Reload
	testq	%r12, %r12
	jle	.LBB150_16
# %bb.15:
	leaq	(%r15,%r14), %rsi
	movq	%rbp, %rdi
	movq	%r12, %rdx
	callq	memmove@PLT
	movq	(%rsp), %rax                    # 8-byte Reload
.LBB150_16:                             # %_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_.exit16.i
	testq	%r15, %r15
	je	.LBB150_18
# %bb.17:
	movq	%r15, %rdi
	movq	8(%rsp), %rsi                   # 8-byte Reload
	callq	_ZdlPvm@PLT
	movq	(%rsp), %rax                    # 8-byte Reload
.LBB150_18:                             # %_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_.exit
	addq	%r12, %rbp
	movq	%rax, (%rbx)
	movq	%rbp, 8(%rbx)
	leaq	(%rax,%r13,8), %rax
	movq	%rax, 16(%rbx)
.LBB150_19:
	addq	(%rbx), %r14
	movq	%r14, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB150_5:
	.cfi_def_cfa_offset 80
	cmpq	$8, %rdx
	jne	.LBB150_7
# %bb.6:
	movq	(%r15), %rcx
	movq	%rcx, (%rax)
.LBB150_7:
	movq	%r13, (%r15)
	jmp	.LBB150_19
.LBB150_20:
	leaq	.L.str.106(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end150:
	.size	_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_, .Lfunc_end150-_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_,"axG",@progbits,_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_,comdat
	.hidden	_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_ # -- Begin function _ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_
	.weak	_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_
	.p2align	4, 0x90
	.type	_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_,@function
_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_: # @_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_
.Lfunc_begin80:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception80
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %rbx
	movq	(%rdi), %rcx
	leaq	56(%rsi), %r15
	cmpq	$0, 80(%rsi)
	je	.LBB151_1
# %bb.17:
	movq	64(%rbx), %r8
	movq	%rcx, %rax
	orq	%r8, %rax
	shrq	$32, %rax
	je	.LBB151_18
# %bb.19:
	movq	%rcx, %rax
	xorl	%edx, %edx
	divq	%r8
	movq	%rdx, %rsi
	movq	(%r15), %rax
	movq	(%rax,%rsi,8), %rax
	testq	%rax, %rax
	jne	.LBB151_21
	jmp	.LBB151_28
.LBB151_1:
	leaq	72(%rbx), %r9
	.p2align	4, 0x90
.LBB151_2:                              # =>This Inner Loop Header: Depth=1
	movq	(%r9), %r9
	testq	%r9, %r9
	je	.LBB151_28
# %bb.3:                                #   in Loop: Header=BB151_2 Depth=1
	cmpq	8(%r9), %rcx
	jne	.LBB151_2
	jmp	.LBB151_4
.LBB151_18:
	movl	%ecx, %eax
	xorl	%edx, %edx
	divl	%r8d
	movl	%edx, %esi
	movq	(%r15), %rax
	movq	(%rax,%rsi,8), %rax
	testq	%rax, %rax
	je	.LBB151_28
.LBB151_21:
	movq	(%rax), %r9
	cmpq	8(%r9), %rcx
	je	.LBB151_4
	.p2align	4, 0x90
.LBB151_23:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r9), %r9
	testq	%r9, %r9
	je	.LBB151_28
# %bb.24:                               #   in Loop: Header=BB151_23 Depth=1
	movq	8(%r9), %rdi
	movq	%rdi, %rax
	orq	%r8, %rax
	shrq	$32, %rax
	je	.LBB151_25
# %bb.26:                               #   in Loop: Header=BB151_23 Depth=1
	movq	%rdi, %rax
	xorl	%edx, %edx
	divq	%r8
	cmpq	%rsi, %rdx
	je	.LBB151_22
	jmp	.LBB151_28
	.p2align	4, 0x90
.LBB151_25:                             #   in Loop: Header=BB151_23 Depth=1
	movl	%edi, %eax
	xorl	%edx, %edx
	divl	%r8d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rsi, %rdx
	jne	.LBB151_28
.LBB151_22:                             #   in Loop: Header=BB151_23 Depth=1
	cmpq	%rdi, %rcx
	jne	.LBB151_23
.LBB151_4:                              # %_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEE4findERSE_.exit
	movq	16(%r9), %rax
	movq	24(%r9), %rdx
	subq	%rax, %rdx
	cmpq	$8, %rdx
	jne	.LBB151_28
# %bb.5:
	movq	(%rax), %r14
	cmpq	%rcx, (%r14)
	jne	.LBB151_28
# %bb.6:
	movq	8(%r14), %rax
	movq	%rax, (%rsp)
	leaq	224(%rbx), %rdi
	movq	%rsp, %rsi
	callq	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_@PLT
	testb	$8, 144(%r14)
	movq	%rbx, %rdi
	je	.LBB151_12
# %bb.7:
	movzbl	_ZGVZN8pybind116detail19get_local_internalsEvE6locals(%rip), %eax
	testb	%al, %al
	je	.LBB151_8
.LBB151_11:                             # %_ZN8pybind116detail19get_local_internalsEv.exit
	movq	_ZZN8pybind116detail19get_local_internalsEvE6locals(%rip), %rdi
.LBB151_12:
	movq	%rsp, %rsi
	callq	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_
	movq	184(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB151_30
# %bb.13:
	leaq	184(%rbx), %r15
	jmp	.LBB151_14
	.p2align	4, 0x90
.LBB151_55:                             #   in Loop: Header=BB151_14 Depth=1
	movq	(%rdi), %r12
	movq	%r12, %rdi
	testq	%r12, %r12
	je	.LBB151_30
.LBB151_14:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB151_37 Depth 2
	movq	8(%rdi), %rax
	cmpq	(%r14), %rax
	jne	.LBB151_55
# %bb.15:                               #   in Loop: Header=BB151_14 Depth=1
	movq	176(%rbx), %r9
	movq	24(%rdi), %rax
	movq	%rax, %rcx
	orq	%r9, %rcx
	shrq	$32, %rcx
	je	.LBB151_16
# %bb.35:                               #   in Loop: Header=BB151_14 Depth=1
	xorl	%edx, %edx
	divq	%r9
	movq	%rdx, %rcx
	jmp	.LBB151_36
.LBB151_16:                             #   in Loop: Header=BB151_14 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r9d
	movl	%edx, %ecx
.LBB151_36:                             #   in Loop: Header=BB151_14 Depth=1
	movq	168(%rbx), %r8
	movq	(%r8,%rcx,8), %r11
	movq	%r11, %rax
	.p2align	4, 0x90
.LBB151_37:                             #   Parent Loop BB151_14 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%rax, %rsi
	movq	(%rax), %rax
	cmpq	%rdi, %rax
	jne	.LBB151_37
# %bb.38:                               # %_ZNSt10_HashtableISt4pairIPK7_objectPKcES6_SaIS6_ENSt8__detail9_IdentityESt8equal_toIS6_EN8pybind116detail13override_hashENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb1ELb1ELb1EEEE20_M_get_previous_nodeEmPNS8_10_Hash_nodeIS6_Lb1EEE.exit.i.i.i
                                        #   in Loop: Header=BB151_14 Depth=1
	movq	(%rdi), %r10
	cmpq	%rsi, %r11
	je	.LBB151_39
# %bb.48:                               #   in Loop: Header=BB151_14 Depth=1
	testq	%r10, %r10
	je	.LBB151_54
# %bb.49:                               #   in Loop: Header=BB151_14 Depth=1
	movq	24(%r10), %rax
	movq	%rax, %rdx
	orq	%r9, %rdx
	shrq	$32, %rdx
	je	.LBB151_50
# %bb.51:                               #   in Loop: Header=BB151_14 Depth=1
	xorl	%edx, %edx
	divq	%r9
	cmpq	%rcx, %rdx
	jne	.LBB151_53
	jmp	.LBB151_54
.LBB151_39:                             #   in Loop: Header=BB151_14 Depth=1
	testq	%r10, %r10
	je	.LBB151_45
# %bb.40:                               #   in Loop: Header=BB151_14 Depth=1
	movq	24(%r10), %rax
	movq	%rax, %rdx
	orq	%r9, %rdx
	shrq	$32, %rdx
	je	.LBB151_41
# %bb.42:                               #   in Loop: Header=BB151_14 Depth=1
	xorl	%edx, %edx
	divq	%r9
	cmpq	%rcx, %rdx
	jne	.LBB151_44
	jmp	.LBB151_54
.LBB151_50:                             #   in Loop: Header=BB151_14 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r9d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	je	.LBB151_54
.LBB151_53:                             #   in Loop: Header=BB151_14 Depth=1
	movq	%rsi, (%r8,%rdx,8)
	jmp	.LBB151_54
.LBB151_41:                             #   in Loop: Header=BB151_14 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r9d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	je	.LBB151_54
.LBB151_44:                             #   in Loop: Header=BB151_14 Depth=1
	movq	%r11, (%r8,%rdx,8)
	movq	168(%rbx), %r8
	movq	(%r8,%rcx,8), %r11
.LBB151_45:                             # %.thread23.i.i.i.i
                                        #   in Loop: Header=BB151_14 Depth=1
	cmpq	%r11, %r15
	jne	.LBB151_47
# %bb.46:                               #   in Loop: Header=BB151_14 Depth=1
	movq	%r10, (%r15)
.LBB151_47:                             #   in Loop: Header=BB151_14 Depth=1
	movq	$0, (%r8,%rcx,8)
.LBB151_54:                             # %_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EE5eraseENSt8__detail14_Node_iteratorIS6_Lb1ELb1EEE.exit
                                        #   in Loop: Header=BB151_14 Depth=1
	movq	(%rdi), %r12
	movq	%r12, (%rsi)
	movl	$32, %esi
	callq	_ZdlPvm@PLT
	decq	192(%rbx)
	movq	%r12, %rdi
	testq	%r12, %r12
	jne	.LBB151_14
.LBB151_30:                             # %._crit_edge
	movq	88(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB151_32
# %bb.31:
	movq	104(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB151_32:                             # %_ZNSt6vectorISt4pairIPKSt9type_infoPFPvS4_EESaIS7_EED2Ev.exit.i
	movq	64(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB151_34
# %bb.33:
	movq	80(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB151_34:                             # %_ZN8pybind116detail9type_infoD2Ev.exit
	movl	$152, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
.LBB151_28:                             # %.critedge
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB151_8:
	.cfi_def_cfa_offset 48
	leaq	_ZGVZN8pybind116detail19get_local_internalsEvE6locals(%rip), %rdi
	callq	__cxa_guard_acquire@PLT
	testl	%eax, %eax
	je	.LBB151_11
# %bb.9:
.Ltmp2478:
	movl	$64, %edi
	callq	_Znwm@PLT
.Ltmp2479:
# %bb.10:
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 32(%rax)
	movq	%rax, %rcx
	addq	$48, %rcx
	movq	%rcx, (%rax)
	movq	$1, 8(%rax)
	movups	%xmm0, 16(%rax)
	movl	$1065353216, 32(%rax)           # imm = 0x3F800000
	movups	%xmm0, 40(%rax)
	movq	$0, 56(%rax)
	movq	%rax, _ZZN8pybind116detail19get_local_internalsEvE6locals(%rip)
	leaq	_ZGVZN8pybind116detail19get_local_internalsEvE6locals(%rip), %rdi
	callq	__cxa_guard_release@PLT
	jmp	.LBB151_11
.LBB151_29:
.Ltmp2480:
	movq	%rax, %rbx
	leaq	_ZGVZN8pybind116detail19get_local_internalsEvE6locals(%rip), %rdi
	callq	__cxa_guard_abort@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end151:
	.size	_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_, .Lfunc_end151-_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_
	.cfi_endproc
	.section	.gcc_except_table._ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_,"aG",@progbits,_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_,comdat
	.p2align	2, 0x0
GCC_except_table151:
.Lexception80:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end80-.Lcst_begin80
.Lcst_begin80:
	.uleb128 .Lfunc_begin80-.Lfunc_begin80  # >> Call Site 1 <<
	.uleb128 .Ltmp2478-.Lfunc_begin80       #   Call between .Lfunc_begin80 and .Ltmp2478
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2478-.Lfunc_begin80       # >> Call Site 2 <<
	.uleb128 .Ltmp2479-.Ltmp2478            #   Call between .Ltmp2478 and .Ltmp2479
	.uleb128 .Ltmp2480-.Lfunc_begin80       #     jumps to .Ltmp2480
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2479-.Lfunc_begin80       # >> Call Site 3 <<
	.uleb128 .Lfunc_end151-.Ltmp2479        #   Call between .Ltmp2479 and .Lfunc_end151
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end80:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,"axG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,comdat
	.weak	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_ # -- Begin function _ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,@function
_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_: # @_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_
.Lfunc_begin81:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception81
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r12
	movq	%rdi, %rbx
	cmpq	$0, 24(%rdi)
	je	.LBB152_4
# %bb.1:
	movq	(%r12), %rax
	movq	8(%rax), %rax
	xorl	%r14d, %r14d
	cmpb	$42, (%rax)
	sete	%r14b
	addq	%rax, %r14
	movq	%r14, %rdi
	callq	strlen@PLT
.Ltmp2481:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2482:
# %bb.2:                                # %_ZNKSt8__detail15_Hash_code_baseISt10type_indexSt4pairIKS1_St6vectorIPFbP7_objectRPvESaISA_EEENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_hash_codeERS3_.exit
	movq	%rax, %rcx
	movq	8(%rbx), %rsi
	orq	%rsi, %rax
	shrq	$32, %rax
	je	.LBB152_10
# %bb.3:
	movq	%rcx, %rax
	xorl	%edx, %edx
	divq	%rsi
	movq	%rdx, %r13
	jmp	.LBB152_11
.LBB152_4:
	movq	16(%rbx), %r14
	testq	%r14, %r14
	je	.LBB152_14
# %bb.5:                                # %.preheader.i
	leaq	16(%rbx), %r15
	movq	(%r12), %rax
	movq	8(%rax), %r12
	movq	8(%r14), %rax
	movq	8(%rax), %rbp
	cmpq	%rbp, %r12
	je	.LBB152_20
# %bb.6:                                # %.lr.ph
	cmpb	$42, (%r12)
	jne	.LBB152_15
# %bb.7:                                # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_St6vectorIPFbP7_objectRPvESaISA_EEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueISD_Lb0EEE.exit.thread16.i.us.preheader
	xorl	%r13d, %r13d
	.p2align	4, 0x90
.LBB152_8:                              # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_St6vectorIPFbP7_objectRPvESaISA_EEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueISD_Lb0EEE.exit.thread16.i.us
                                        # =>This Inner Loop Header: Depth=1
	movq	%r14, %r15
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB152_25
# %bb.9:                                #   in Loop: Header=BB152_8 Depth=1
	movq	8(%r14), %rax
	movq	8(%rax), %rbp
	cmpq	%rbp, %r12
	jne	.LBB152_8
	jmp	.LBB152_20
.LBB152_10:
	movl	%ecx, %eax
	xorl	%edx, %edx
	divl	%esi
	movl	%edx, %r13d
.LBB152_11:
	movq	%rbx, %rdi
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m@PLT
	testq	%rax, %rax
	je	.LBB152_14
# %bb.12:
	movq	%rax, %r15
	movq	(%rax), %r14
	jmp	.LBB152_24
.LBB152_14:
	xorl	%r13d, %r13d
	jmp	.LBB152_25
.LBB152_15:                             # %.lr.ph.split
	xorl	%esi, %esi
	cmpb	$42, (%rbp)
	sete	%sil
	addq	%rbp, %rsi
	movq	%r12, %rdi
	callq	strcmp@PLT
	testl	%eax, %eax
	je	.LBB152_20
# %bb.16:
	xorl	%r13d, %r13d
	.p2align	4, 0x90
.LBB152_17:                             # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_St6vectorIPFbP7_objectRPvESaISA_EEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueISD_Lb0EEE.exit.thread16.i
                                        # =>This Inner Loop Header: Depth=1
	movq	%r14, %r15
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB152_25
# %bb.18:                               #   in Loop: Header=BB152_17 Depth=1
	movq	8(%r14), %rax
	movq	8(%rax), %rbp
	cmpq	%rbp, %r12
	je	.LBB152_20
# %bb.19:                               # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_St6vectorIPFbP7_objectRPvESaISA_EEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueISD_Lb0EEE.exit.i
                                        #   in Loop: Header=BB152_17 Depth=1
	xorl	%esi, %esi
	cmpb	$42, (%rbp)
	sete	%sil
	addq	%rbp, %rsi
	movq	%r12, %rdi
	callq	strcmp@PLT
	testl	%eax, %eax
	jne	.LBB152_17
.LBB152_20:                             # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeERS2_.exit
	movq	8(%rbx), %r13
	xorl	%r12d, %r12d
	cmpb	$42, (%rbp)
	sete	%r12b
	addq	%rbp, %r12
	movq	%r12, %rdi
	callq	strlen@PLT
.Ltmp2484:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r12, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2485:
# %bb.21:                               # %_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERKNSE_16_Hash_node_valueISC_Lb0EEE.exit
	movq	%rax, %rcx
	orq	%r13, %rcx
	shrq	$32, %rcx
	je	.LBB152_23
# %bb.22:
	xorl	%edx, %edx
	divq	%r13
	movq	%rdx, %r13
	jmp	.LBB152_24
.LBB152_23:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r13d
	movl	%edx, %r13d
.LBB152_24:
	movq	%rbx, %rdi
	movq	%r13, %rsi
	movq	%r15, %rdx
	movq	%r14, %rcx
	callq	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE@PLT
	movl	$1, %r13d
.LBB152_25:                             # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeERS2_.exit.thread
	movq	%r13, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB152_26:
	.cfi_def_cfa_offset 64
.Ltmp2486:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB152_27:
.Ltmp2483:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end152:
	.size	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_, .Lfunc_end152-_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,"aG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,comdat
	.p2align	2, 0x0
GCC_except_table152:
.Lexception81:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase54-.Lttbaseref54
.Lttbaseref54:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end81-.Lcst_begin81
.Lcst_begin81:
	.uleb128 .Ltmp2481-.Lfunc_begin81       # >> Call Site 1 <<
	.uleb128 .Ltmp2482-.Ltmp2481            #   Call between .Ltmp2481 and .Ltmp2482
	.uleb128 .Ltmp2483-.Lfunc_begin81       #     jumps to .Ltmp2483
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2482-.Lfunc_begin81       # >> Call Site 2 <<
	.uleb128 .Ltmp2484-.Ltmp2482            #   Call between .Ltmp2482 and .Ltmp2484
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2484-.Lfunc_begin81       # >> Call Site 3 <<
	.uleb128 .Ltmp2485-.Ltmp2484            #   Call between .Ltmp2484 and .Ltmp2485
	.uleb128 .Ltmp2486-.Lfunc_begin81       #     jumps to .Ltmp2486
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2485-.Lfunc_begin81       # >> Call Site 4 <<
	.uleb128 .Lfunc_end152-.Ltmp2485        #   Call between .Ltmp2485 and .Lfunc_end152
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end81:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase54:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,"axG",@progbits,_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,comdat
	.weak	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m # -- Begin function _ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
	.p2align	4, 0x90
	.type	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,@function
_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m: # @_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
.Lfunc_begin82:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception82
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	(%rdi), %rax
	movq	(%rax,%rsi,8), %r12
	testq	%r12, %r12
	je	.LBB153_11
# %bb.1:                                # %.preheader
	movq	%rdx, %rbx
	movq	%rsi, %r14
	movq	%rdi, %r15
	jmp	.LBB153_2
	.p2align	4, 0x90
.LBB153_9:                              #   in Loop: Header=BB153_2 Depth=1
	xorl	%edx, %edx
	divq	%rbp
	movq	%r13, %r12
	cmpq	%r14, %rdx
	jne	.LBB153_11
.LBB153_2:                              # =>This Inner Loop Header: Depth=1
	movq	(%r12), %r13
	movq	(%rbx), %rax
	movq	8(%r13), %rcx
	movq	8(%rax), %rdi
	movq	8(%rcx), %rax
	cmpq	%rax, %rdi
	je	.LBB153_12
# %bb.3:                                #   in Loop: Header=BB153_2 Depth=1
	cmpb	$42, (%rdi)
	je	.LBB153_5
# %bb.4:                                # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_St6vectorIPFbP7_objectRPvESaISA_EEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS3_mRKNS_16_Hash_node_valueISD_Lb0EEE.exit
                                        #   in Loop: Header=BB153_2 Depth=1
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
	callq	strcmp@PLT
	testl	%eax, %eax
	je	.LBB153_12
.LBB153_5:                              # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_St6vectorIPFbP7_objectRPvESaISA_EEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS3_mRKNS_16_Hash_node_valueISD_Lb0EEE.exit.thread22
                                        #   in Loop: Header=BB153_2 Depth=1
	movq	(%r13), %rax
	testq	%rax, %rax
	je	.LBB153_11
# %bb.6:                                #   in Loop: Header=BB153_2 Depth=1
	movq	8(%r15), %rbp
	movq	8(%rax), %rax
	movq	8(%rax), %rax
	xorl	%r12d, %r12d
	cmpb	$42, (%rax)
	sete	%r12b
	addq	%rax, %r12
	movq	%r12, %rdi
	callq	strlen@PLT
.Ltmp2487:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r12, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2488:
# %bb.7:                                # %_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERKNSE_16_Hash_node_valueISC_Lb0EEE.exit
                                        #   in Loop: Header=BB153_2 Depth=1
	movq	%rax, %rcx
	orq	%rbp, %rcx
	shrq	$32, %rcx
	jne	.LBB153_9
# %bb.8:                                #   in Loop: Header=BB153_2 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%ebp
                                        # kill: def $edx killed $edx def $rdx
	movq	%r13, %r12
	cmpq	%r14, %rdx
	je	.LBB153_2
.LBB153_11:
	xorl	%r12d, %r12d
.LBB153_12:                             # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_St6vectorIPFbP7_objectRPvESaISA_EEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS3_mRKNS_16_Hash_node_valueISD_Lb0EEE.exit.thread
	movq	%r12, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB153_13:
	.cfi_def_cfa_offset 64
.Ltmp2489:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end153:
	.size	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m, .Lfunc_end153-_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,"aG",@progbits,_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,comdat
	.p2align	2, 0x0
GCC_except_table153:
.Lexception82:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase55-.Lttbaseref55
.Lttbaseref55:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end82-.Lcst_begin82
.Lcst_begin82:
	.uleb128 .Ltmp2487-.Lfunc_begin82       # >> Call Site 1 <<
	.uleb128 .Ltmp2488-.Ltmp2487            #   Call between .Ltmp2487 and .Ltmp2488
	.uleb128 .Ltmp2489-.Lfunc_begin82       #     jumps to .Ltmp2489
	.byte	1                               #   On action: 1
.Lcst_end82:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase55:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE,"axG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE,comdat
	.weak	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE # -- Begin function _ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE,@function
_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE: # @_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE
.Lfunc_begin83:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception83
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %r12
	movq	%rdi, %rbx
	movq	(%rdi), %rax
	movq	(%rcx), %rbp
	cmpq	%rdx, (%rax,%rsi,8)
	je	.LBB154_1
# %bb.11:
	testq	%rbp, %rbp
	je	.LBB154_18
# %bb.12:
	movq	8(%rbx), %rax
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	8(%rbp), %rax
	movq	8(%rax), %rax
	xorl	%r13d, %r13d
	cmpb	$42, (%rax)
	sete	%r13b
	addq	%rax, %r13
	movq	%r13, %rdi
	callq	strlen@PLT
.Ltmp2490:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r13, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2491:
# %bb.13:                               # %_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERKNSE_16_Hash_node_valueISC_Lb0EEE.exit20
	movq	%rax, %rcx
	movq	(%rsp), %rsi                    # 8-byte Reload
	orq	%rsi, %rcx
	shrq	$32, %rcx
	je	.LBB154_14
# %bb.15:
	xorl	%edx, %edx
	divq	%rsi
	cmpq	%r12, %rdx
	jne	.LBB154_17
	jmp	.LBB154_18
.LBB154_1:
	movq	%r15, %rcx
	testq	%rbp, %rbp
	je	.LBB154_8
# %bb.2:
	movq	8(%rbx), %rax
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	8(%rbp), %rax
	movq	8(%rax), %rax
	xorl	%r13d, %r13d
	cmpb	$42, (%rax)
	sete	%r13b
	addq	%rax, %r13
	movq	%r13, %rdi
	callq	strlen@PLT
.Ltmp2493:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r13, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2494:
# %bb.3:
	movq	%rax, %rcx
	movq	(%rsp), %rsi                    # 8-byte Reload
	orq	%rsi, %rcx
	shrq	$32, %rcx
	je	.LBB154_4
# %bb.5:
	xorl	%edx, %edx
	divq	%rsi
	cmpq	%r12, %rdx
	jne	.LBB154_7
	jmp	.LBB154_18
.LBB154_14:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%esi
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%r12, %rdx
	je	.LBB154_18
.LBB154_17:
	movq	(%rbx), %rax
	movq	%r15, (%rax,%rdx,8)
	jmp	.LBB154_18
.LBB154_4:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%esi
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%r12, %rdx
	je	.LBB154_18
.LBB154_7:
	movq	(%rbx), %rax
	movq	(%rax,%r12,8), %rcx
	movq	%rcx, (%rax,%rdx,8)
	movq	(%rbx), %rax
	movq	(%rax,%r12,8), %rcx
.LBB154_8:                              # %.thread25
	leaq	16(%rbx), %rdx
	cmpq	%rcx, %rdx
	jne	.LBB154_10
# %bb.9:
	movq	%rbp, (%rdx)
.LBB154_10:
	movq	$0, (%rax,%r12,8)
.LBB154_18:                             # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE22_M_remove_bucket_beginEmPNSE_10_Hash_nodeISC_Lb0EEEm.exit
	movq	(%r14), %r12
	movq	%r12, (%r15)
	movq	16(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB154_20
# %bb.19:
	movq	32(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB154_20:                             # %_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt10type_indexSt6vectorIPFbP7_objectRPvESaISB_EEELb0EEEEE18_M_deallocate_nodeEPSF_.exit
	movl	$40, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	decq	24(%rbx)
	movq	%r12, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB154_21:
	.cfi_def_cfa_offset 64
.Ltmp2495:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB154_22:
.Ltmp2492:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end154:
	.size	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE, .Lfunc_end154-_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE,"aG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE,comdat
	.p2align	2, 0x0
GCC_except_table154:
.Lexception83:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase56-.Lttbaseref56
.Lttbaseref56:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end83-.Lcst_begin83
.Lcst_begin83:
	.uleb128 .Ltmp2490-.Lfunc_begin83       # >> Call Site 1 <<
	.uleb128 .Ltmp2491-.Ltmp2490            #   Call between .Ltmp2490 and .Ltmp2491
	.uleb128 .Ltmp2492-.Lfunc_begin83       #     jumps to .Ltmp2492
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2493-.Lfunc_begin83       # >> Call Site 2 <<
	.uleb128 .Ltmp2494-.Ltmp2493            #   Call between .Ltmp2493 and .Ltmp2494
	.uleb128 .Ltmp2495-.Lfunc_begin83       #     jumps to .Ltmp2495
	.byte	1                               #   On action: 1
.Lcst_end83:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase56:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,"axG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,comdat
	.hidden	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_ # -- Begin function _ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_
	.weak	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,@function
_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_: # @_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_
.Lfunc_begin84:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception84
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r12
	movq	%rdi, %rbx
	cmpq	$0, 24(%rdi)
	je	.LBB155_4
# %bb.1:
	movq	(%r12), %rax
	movq	8(%rax), %rax
	xorl	%r14d, %r14d
	cmpb	$42, (%rax)
	sete	%r14b
	addq	%rax, %r14
	movq	%r14, %rdi
	callq	strlen@PLT
.Ltmp2496:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2497:
# %bb.2:                                # %_ZNKSt8__detail15_Hash_code_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_hash_codeERS3_.exit
	movq	%rax, %rcx
	movq	8(%rbx), %rsi
	orq	%rsi, %rax
	shrq	$32, %rax
	je	.LBB155_10
# %bb.3:
	movq	%rcx, %rax
	xorl	%edx, %edx
	divq	%rsi
	movq	%rdx, %r13
	jmp	.LBB155_11
.LBB155_4:
	movq	16(%rbx), %r14
	testq	%r14, %r14
	je	.LBB155_14
# %bb.5:                                # %.preheader.i
	leaq	16(%rbx), %r15
	movq	(%r12), %rax
	movq	8(%rax), %r12
	movq	8(%r14), %rax
	movq	8(%rax), %rbp
	cmpq	%rbp, %r12
	je	.LBB155_20
# %bb.6:                                # %.lr.ph
	cmpb	$42, (%r12)
	jne	.LBB155_15
# %bb.7:                                # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueIS8_Lb0EEE.exit.thread16.i.us.preheader
	xorl	%r13d, %r13d
	.p2align	4, 0x90
.LBB155_8:                              # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueIS8_Lb0EEE.exit.thread16.i.us
                                        # =>This Inner Loop Header: Depth=1
	movq	%r14, %r15
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB155_25
# %bb.9:                                #   in Loop: Header=BB155_8 Depth=1
	movq	8(%r14), %rax
	movq	8(%rax), %rbp
	cmpq	%rbp, %r12
	jne	.LBB155_8
	jmp	.LBB155_20
.LBB155_10:
	movl	%ecx, %eax
	xorl	%edx, %edx
	divl	%esi
	movl	%edx, %r13d
.LBB155_11:
	movq	%rbx, %rdi
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
	testq	%rax, %rax
	je	.LBB155_14
# %bb.12:
	movq	%rax, %r15
	movq	(%rax), %r14
	jmp	.LBB155_24
.LBB155_14:
	xorl	%r13d, %r13d
	jmp	.LBB155_25
.LBB155_15:                             # %.lr.ph.split
	xorl	%esi, %esi
	cmpb	$42, (%rbp)
	sete	%sil
	addq	%rbp, %rsi
	movq	%r12, %rdi
	callq	strcmp@PLT
	testl	%eax, %eax
	je	.LBB155_20
# %bb.16:
	xorl	%r13d, %r13d
	.p2align	4, 0x90
.LBB155_17:                             # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueIS8_Lb0EEE.exit.thread16.i
                                        # =>This Inner Loop Header: Depth=1
	movq	%r14, %r15
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB155_25
# %bb.18:                               #   in Loop: Header=BB155_17 Depth=1
	movq	8(%r14), %rax
	movq	8(%rax), %rbp
	cmpq	%rbp, %r12
	je	.LBB155_20
# %bb.19:                               # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueIS8_Lb0EEE.exit.i
                                        #   in Loop: Header=BB155_17 Depth=1
	xorl	%esi, %esi
	cmpb	$42, (%rbp)
	sete	%sil
	addq	%rbp, %rsi
	movq	%r12, %rdi
	callq	strcmp@PLT
	testl	%eax, %eax
	jne	.LBB155_17
.LBB155_20:                             # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeERS2_.exit
	movq	8(%rbx), %r13
	xorl	%r12d, %r12d
	cmpb	$42, (%rbp)
	sete	%r12b
	addq	%rbp, %r12
	movq	%r12, %rdi
	callq	strlen@PLT
.Ltmp2499:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r12, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2500:
# %bb.21:                               # %_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERKNS9_16_Hash_node_valueIS7_Lb0EEE.exit
	movq	%rax, %rcx
	orq	%r13, %rcx
	shrq	$32, %rcx
	je	.LBB155_23
# %bb.22:
	xorl	%edx, %edx
	divq	%r13
	movq	%rdx, %r13
	jmp	.LBB155_24
.LBB155_23:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r13d
	movl	%edx, %r13d
.LBB155_24:
	movq	%rbx, %rdi
	movq	%r13, %rsi
	movq	%r15, %rdx
	movq	%r14, %rcx
	callq	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE
	movl	$1, %r13d
.LBB155_25:                             # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeERS2_.exit.thread
	movq	%r13, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB155_26:
	.cfi_def_cfa_offset 64
.Ltmp2501:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB155_27:
.Ltmp2498:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end155:
	.size	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_, .Lfunc_end155-_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,"aG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,comdat
	.p2align	2, 0x0
GCC_except_table155:
.Lexception84:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase57-.Lttbaseref57
.Lttbaseref57:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end84-.Lcst_begin84
.Lcst_begin84:
	.uleb128 .Ltmp2496-.Lfunc_begin84       # >> Call Site 1 <<
	.uleb128 .Ltmp2497-.Ltmp2496            #   Call between .Ltmp2496 and .Ltmp2497
	.uleb128 .Ltmp2498-.Lfunc_begin84       #     jumps to .Ltmp2498
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2497-.Lfunc_begin84       # >> Call Site 2 <<
	.uleb128 .Ltmp2499-.Ltmp2497            #   Call between .Ltmp2497 and .Ltmp2499
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2499-.Lfunc_begin84       # >> Call Site 3 <<
	.uleb128 .Ltmp2500-.Ltmp2499            #   Call between .Ltmp2499 and .Ltmp2500
	.uleb128 .Ltmp2501-.Lfunc_begin84       #     jumps to .Ltmp2501
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2500-.Lfunc_begin84       # >> Call Site 4 <<
	.uleb128 .Lfunc_end155-.Ltmp2500        #   Call between .Ltmp2500 and .Lfunc_end155
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end84:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase57:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE,"axG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE,comdat
	.hidden	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE # -- Begin function _ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE
	.weak	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE,@function
_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE: # @_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE
.Lfunc_begin85:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception85
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %r12
	movq	%rdi, %rbx
	movq	(%rdi), %rax
	movq	(%rcx), %rbp
	cmpq	%rdx, (%rax,%rsi,8)
	je	.LBB156_1
# %bb.11:
	testq	%rbp, %rbp
	je	.LBB156_18
# %bb.12:
	movq	8(%rbx), %rax
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	8(%rbp), %rax
	movq	8(%rax), %rax
	xorl	%r13d, %r13d
	cmpb	$42, (%rax)
	sete	%r13b
	addq	%rax, %r13
	movq	%r13, %rdi
	callq	strlen@PLT
.Ltmp2502:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r13, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2503:
# %bb.13:                               # %_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERKNS9_16_Hash_node_valueIS7_Lb0EEE.exit20
	movq	%rax, %rcx
	movq	(%rsp), %rsi                    # 8-byte Reload
	orq	%rsi, %rcx
	shrq	$32, %rcx
	je	.LBB156_14
# %bb.15:
	xorl	%edx, %edx
	divq	%rsi
	cmpq	%r12, %rdx
	jne	.LBB156_17
	jmp	.LBB156_18
.LBB156_1:
	movq	%r15, %rcx
	testq	%rbp, %rbp
	je	.LBB156_8
# %bb.2:
	movq	8(%rbx), %rax
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	8(%rbp), %rax
	movq	8(%rax), %rax
	xorl	%r13d, %r13d
	cmpb	$42, (%rax)
	sete	%r13b
	addq	%rax, %r13
	movq	%r13, %rdi
	callq	strlen@PLT
.Ltmp2505:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r13, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2506:
# %bb.3:
	movq	%rax, %rcx
	movq	(%rsp), %rsi                    # 8-byte Reload
	orq	%rsi, %rcx
	shrq	$32, %rcx
	je	.LBB156_4
# %bb.5:
	xorl	%edx, %edx
	divq	%rsi
	cmpq	%r12, %rdx
	jne	.LBB156_7
	jmp	.LBB156_18
.LBB156_14:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%esi
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%r12, %rdx
	je	.LBB156_18
.LBB156_17:
	movq	(%rbx), %rax
	movq	%r15, (%rax,%rdx,8)
	jmp	.LBB156_18
.LBB156_4:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%esi
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%r12, %rdx
	je	.LBB156_18
.LBB156_7:
	movq	(%rbx), %rax
	movq	(%rax,%r12,8), %rcx
	movq	%rcx, (%rax,%rdx,8)
	movq	(%rbx), %rax
	movq	(%rax,%r12,8), %rcx
.LBB156_8:                              # %.thread25
	leaq	16(%rbx), %rdx
	cmpq	%rcx, %rdx
	jne	.LBB156_10
# %bb.9:
	movq	%rbp, (%rdx)
.LBB156_10:
	movq	$0, (%rax,%r12,8)
.LBB156_18:                             # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE22_M_remove_bucket_beginEmPNS9_10_Hash_nodeIS7_Lb0EEEm.exit
	movq	(%r14), %r12
	movq	%r12, (%r15)
	movl	$24, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	decq	24(%rbx)
	movq	%r12, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB156_19:
	.cfi_def_cfa_offset 64
.Ltmp2507:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB156_20:
.Ltmp2504:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end156:
	.size	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE, .Lfunc_end156-_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE,"aG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE,comdat
	.p2align	2, 0x0
GCC_except_table156:
.Lexception85:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase58-.Lttbaseref58
.Lttbaseref58:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end85-.Lcst_begin85
.Lcst_begin85:
	.uleb128 .Ltmp2502-.Lfunc_begin85       # >> Call Site 1 <<
	.uleb128 .Ltmp2503-.Ltmp2502            #   Call between .Ltmp2502 and .Ltmp2503
	.uleb128 .Ltmp2504-.Lfunc_begin85       #     jumps to .Ltmp2504
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2505-.Lfunc_begin85       # >> Call Site 2 <<
	.uleb128 .Ltmp2506-.Ltmp2505            #   Call between .Ltmp2505 and .Ltmp2506
	.uleb128 .Ltmp2507-.Lfunc_begin85       #     jumps to .Ltmp2507
	.byte	1                               #   On action: 1
.Lcst_end85:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase58:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text.pybind11_object_new,"axG",@progbits,pybind11_object_new,comdat
	.hidden	pybind11_object_new             # -- Begin function pybind11_object_new
	.weak	pybind11_object_new
	.p2align	4, 0x90
	.type	pybind11_object_new,@function
pybind11_object_new:                    # @pybind11_object_new
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	xorl	%esi, %esi
	callq	*304(%rdi)
	movq	%rax, %rbx
	movq	%rax, %rdi
	callq	_ZN8pybind116detail8instance15allocate_layoutEv
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end157:
	.size	pybind11_object_new, .Lfunc_end157-pybind11_object_new
	.cfi_endproc
                                        # -- End function
	.section	.text.pybind11_object_init,"axG",@progbits,pybind11_object_init,comdat
	.hidden	pybind11_object_init            # -- Begin function pybind11_object_init
	.weak	pybind11_object_init
	.p2align	4, 0x90
	.type	pybind11_object_init,@function
pybind11_object_init:                   # @pybind11_object_init
.Lfunc_begin86:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception86
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$72, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	8(%rdi), %rax
	movq	24(%rax), %r14
	leaq	24(%rsp), %rbx
	movq	%rbx, 8(%rsp)
	testq	%r14, %r14
	je	.LBB158_30
# %bb.1:
	movq	%r14, %rdi
	callq	strlen@PLT
	movq	%rax, %r15
	movq	%rbx, %r12
	cmpq	$16, %rax
	jb	.LBB158_5
# %bb.2:
	testq	%r15, %r15
	js	.LBB158_31
# %bb.3:
	movq	%r15, %rdi
	incq	%rdi
	js	.LBB158_32
# %bb.4:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i
	callq	_Znwm@PLT
	movq	%rax, %r12
	movq	%rax, 8(%rsp)
	movq	%r15, 24(%rsp)
.LBB158_5:                              # %._crit_edge.i.i.i
	testq	%r15, %r15
	je	.LBB158_9
# %bb.6:                                # %._crit_edge.i.i.i
	cmpq	$1, %r15
	jne	.LBB158_8
# %bb.7:
	movzbl	(%r14), %eax
	movb	%al, (%r12)
	jmp	.LBB158_9
.LBB158_8:
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB158_9:                              # %_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject.exit
	movq	%r15, 16(%rsp)
	movb	$0, (%r12,%r15)
	movq	16(%rsp), %rsi
	movabsq	$9223372036854775783, %rax      # imm = 0x7FFFFFFFFFFFFFE7
	cmpq	%rax, %rsi
	jge	.LBB158_10
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	leaq	25(%rsi), %r14
	movq	8(%rsp), %rax
	movl	$15, %ecx
	cmpq	%rbx, %rax
	je	.LBB158_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	24(%rsp), %rcx
.LBB158_14:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	cmpq	%rcx, %r14
	jbe	.LBB158_15
# %bb.16:
.Ltmp2508:
	leaq	.L.str.170(%rip), %rcx
	leaq	8(%rsp), %rdi
	movl	$25, %r8d
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2509:
	jmp	.LBB158_17
.LBB158_15:
	movups	.L.str.170+9(%rip), %xmm0
	movups	%xmm0, 9(%rax,%rsi)
	movups	.L.str.170(%rip), %xmm0
	movups	%xmm0, (%rax,%rsi)
.LBB158_17:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
	movq	%r14, 16(%rsp)
	movq	8(%rsp), %rax
	movb	$0, (%rax,%r14)
	leaq	56(%rsp), %r14
	movq	%r14, 40(%rsp)
	movq	8(%rsp), %rsi
	cmpq	%rbx, %rsi
	je	.LBB158_18
# %bb.19:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	%rsi, 40(%rsp)
	movq	16(%rsp), %r15
	movq	24(%rsp), %rax
	movq	%rax, 56(%rsp)
	jmp	.LBB158_20
.LBB158_18:
	movq	16(%rsp), %r15
	leaq	1(%r15), %rdx
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	memcpy@PLT
	movq	%r14, %rsi
.LBB158_20:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%r15, 48(%rsp)
	movq	PyExc_TypeError@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
.Ltmp2510:
	callq	PyErr_SetString@PLT
.Ltmp2511:
# %bb.21:                               # %_ZN8pybind119set_errorERKNS_6handleEPKc.exit
	movq	40(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB158_23
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i8
	movq	56(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB158_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit10
	movl	$-1, %eax
	addq	$72, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB158_32:                             # %.noexc11.i.i
	.cfi_def_cfa_offset 112
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB158_30:                             # %.noexc.i
	leaq	.L.str.35(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.LBB158_10:
.Ltmp2513:
	leaq	.L.str.41(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2514:
# %bb.11:                               # %.noexc
.LBB158_31:                             # %.noexc.i.i
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB158_26:
.Ltmp2512:
	movq	%rax, %r15
	movq	40(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB158_29
# %bb.27:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i14
	movq	56(%rsp), %rsi
	jmp	.LBB158_28
.LBB158_24:
.Ltmp2515:
	movq	%rax, %r15
	movq	8(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB158_29
# %bb.25:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i11
	movq	24(%rsp), %rsi
.LBB158_28:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit16
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB158_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit16
	movq	%r15, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end158:
	.size	pybind11_object_init, .Lfunc_end158-pybind11_object_init
	.cfi_endproc
	.section	.gcc_except_table.pybind11_object_init,"aG",@progbits,pybind11_object_init,comdat
	.p2align	2, 0x0
GCC_except_table158:
.Lexception86:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end86-.Lcst_begin86
.Lcst_begin86:
	.uleb128 .Lfunc_begin86-.Lfunc_begin86  # >> Call Site 1 <<
	.uleb128 .Ltmp2508-.Lfunc_begin86       #   Call between .Lfunc_begin86 and .Ltmp2508
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2508-.Lfunc_begin86       # >> Call Site 2 <<
	.uleb128 .Ltmp2509-.Ltmp2508            #   Call between .Ltmp2508 and .Ltmp2509
	.uleb128 .Ltmp2515-.Lfunc_begin86       #     jumps to .Ltmp2515
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2509-.Lfunc_begin86       # >> Call Site 3 <<
	.uleb128 .Ltmp2510-.Ltmp2509            #   Call between .Ltmp2509 and .Ltmp2510
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2510-.Lfunc_begin86       # >> Call Site 4 <<
	.uleb128 .Ltmp2511-.Ltmp2510            #   Call between .Ltmp2510 and .Ltmp2511
	.uleb128 .Ltmp2512-.Lfunc_begin86       #     jumps to .Ltmp2512
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2511-.Lfunc_begin86       # >> Call Site 5 <<
	.uleb128 .Ltmp2513-.Ltmp2511            #   Call between .Ltmp2511 and .Ltmp2513
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2513-.Lfunc_begin86       # >> Call Site 6 <<
	.uleb128 .Ltmp2514-.Ltmp2513            #   Call between .Ltmp2513 and .Ltmp2514
	.uleb128 .Ltmp2515-.Lfunc_begin86       #     jumps to .Ltmp2515
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2514-.Lfunc_begin86       # >> Call Site 7 <<
	.uleb128 .Lfunc_end158-.Ltmp2514        #   Call between .Ltmp2514 and .Lfunc_end158
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end86:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text.pybind11_object_dealloc,"axG",@progbits,pybind11_object_dealloc,comdat
	.hidden	pybind11_object_dealloc         # -- Begin function pybind11_object_dealloc
	.weak	pybind11_object_dealloc
	.p2align	4, 0x90
	.type	pybind11_object_dealloc,@function
pybind11_object_dealloc:                # @pybind11_object_dealloc
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	movq	8(%rdi), %rbx
	testb	$64, 169(%rbx)
	je	.LBB159_2
# %bb.1:
	movq	%r14, %rdi
	callq	PyObject_GC_UnTrack@PLT
.LBB159_2:
	movq	%r14, %rdi
	callq	_ZN8pybind116detail14clear_instanceEP7_object
	movq	%r14, %rdi
	callq	*320(%rbx)
	movq	(%rbx), %rax
	testl	%eax, %eax
	js	.LBB159_4
# %bb.3:
	decq	%rax
	movq	%rax, (%rbx)
	je	.LBB159_5
.LBB159_4:                              # %_ZL9Py_DECREFP7_object.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB159_5:
	.cfi_def_cfa_offset 32
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_Py_Dealloc@PLT                 # TAILCALL
.Lfunc_end159:
	.size	pybind11_object_dealloc, .Lfunc_end159-pybind11_object_dealloc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail8instance15allocate_layoutEv,"axG",@progbits,_ZN8pybind116detail8instance15allocate_layoutEv,comdat
	.hidden	_ZN8pybind116detail8instance15allocate_layoutEv # -- Begin function _ZN8pybind116detail8instance15allocate_layoutEv
	.weak	_ZN8pybind116detail8instance15allocate_layoutEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail8instance15allocate_layoutEv,@function
_ZN8pybind116detail8instance15allocate_layoutEv: # @_ZN8pybind116detail8instance15allocate_layoutEv
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	8(%rdi), %r15
	movq	%r15, %rdi
	callq	_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
	movq	%rax, %r14
	testb	$1, %dl
	je	.LBB160_2
# %bb.1:
	movq	%r14, %rsi
	addq	$16, %rsi
	movq	%r15, %rdi
	callq	_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE
.LBB160_2:                              # %_ZN8pybind116detail13all_type_infoEP11_typeobject.exit
	movq	16(%r14), %rcx
	movq	24(%r14), %rax
	subq	%rcx, %rax
	sarq	$3, %rax
	cmpq	$1, %rax
	je	.LBB160_5
# %bb.3:                                # %_ZN8pybind116detail13all_type_infoEP11_typeobject.exit
	testq	%rax, %rax
	jne	.LBB160_7
# %bb.4:
	leaq	.L.str.169(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.LBB160_5:
	movq	(%rcx), %rcx
	cmpq	$2, 32(%rcx)
	jbe	.LBB160_6
.LBB160_7:                              # %select.unfold
	andb	$-3, 48(%rbx)
	movq	16(%r14), %rcx
	movq	24(%r14), %rdx
	xorl	%r14d, %r14d
	cmpq	%rdx, %rcx
	je	.LBB160_9
	.p2align	4, 0x90
.LBB160_11:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rcx), %rsi
	movq	32(%rsi), %rsi
	addq	%rsi, %r14
	incq	%r14
	addq	$8, %rcx
	cmpq	%rdx, %rcx
	jne	.LBB160_11
.LBB160_9:                              # %._crit_edge
	decq	%rax
	shrq	$3, %rax
	leaq	(%rax,%r14), %rdi
	incq	%rdi
	movl	$8, %esi
	callq	PyMem_Calloc@PLT
	movq	%rax, 16(%rbx)
	testq	%rax, %rax
	je	.LBB160_10
# %bb.12:
	leaq	48(%rbx), %rcx
	leaq	(%rax,%r14,8), %rax
	movq	%rax, 24(%rbx)
	movzbl	48(%rbx), %eax
	jmp	.LBB160_13
.LBB160_6:
	leaq	48(%rbx), %rcx
	movzbl	48(%rbx), %eax
	movq	$0, 16(%rbx)
	andb	$-15, %al
	orb	$2, %al
.LBB160_13:
	orb	$1, %al
	movb	%al, (%rcx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB160_10:
	.cfi_def_cfa_offset 32
	movl	$8, %edi
	callq	__cxa_allocate_exception@PLT
	movq	_ZTVSt9bad_alloc@GOTPCREL(%rip), %rcx
	addq	$16, %rcx
	movq	%rcx, (%rax)
	movq	_ZTISt9bad_alloc@GOTPCREL(%rip), %rsi
	movq	_ZNSt9bad_allocD1Ev@GOTPCREL(%rip), %rdx
	movq	%rax, %rdi
	callq	__cxa_throw@PLT
.Lfunc_end160:
	.size	_ZN8pybind116detail8instance15allocate_layoutEv, .Lfunc_end160-_ZN8pybind116detail8instance15allocate_layoutEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail14clear_instanceEP7_object,"axG",@progbits,_ZN8pybind116detail14clear_instanceEP7_object,comdat
	.hidden	_ZN8pybind116detail14clear_instanceEP7_object # -- Begin function _ZN8pybind116detail14clear_instanceEP7_object
	.weak	_ZN8pybind116detail14clear_instanceEP7_object
	.p2align	4, 0x90
	.type	_ZN8pybind116detail14clear_instanceEP7_object,@function
_ZN8pybind116detail14clear_instanceEP7_object: # @_ZN8pybind116detail14clear_instanceEP7_object
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movq	8(%rdi), %r15
	movq	%r15, %rdi
	callq	_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
	movq	%rax, %r14
	testb	$1, %dl
	je	.LBB161_2
# %bb.1:
	leaq	16(%r14), %rsi
	movq	%r15, %rdi
	callq	_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE
.LBB161_2:
	movq	%r14, %rax
	addq	$16, %rax
	movq	%rbx, 8(%rsp)
	movq	%rax, 16(%rsp)
	movq	$0, 32(%rsp)
	movq	16(%r14), %rax
	cmpq	24(%r14), %rax
	je	.LBB161_38
# %bb.3:
	movq	(%rax), %r13
	leaq	16(%rbx), %rax
	testb	$2, 48(%rbx)
	jne	.LBB161_5
# %bb.4:
	movq	(%rax), %rax
.LBB161_5:                              # %_ZN8pybind116detail18values_and_holders5beginEv.exit
	movq	%rbx, 24(%rsp)
	movq	%r13, 40(%rsp)
	movq	%rax, 48(%rsp)
	movq	24(%r14), %r15
	movq	16(%r14), %rax
	subq	%rax, %r15
	je	.LBB161_28
# %bb.6:                                # %.lr.ph
	leaq	24(%rsp), %r14
	sarq	$3, %r15
	xorl	%eax, %eax
	jmp	.LBB161_7
	.p2align	4, 0x90
.LBB161_26:                             #   in Loop: Header=BB161_7 Depth=1
	movq	8(%rdx,%rcx,8), %r13
	movq	%r13, 40(%rsp)
	cmpq	%r15, %rax
	je	.LBB161_28
.LBB161_7:                              # =>This Inner Loop Header: Depth=1
	movq	48(%rsp), %rcx
	movq	(%rcx), %rbp
	testq	%rbp, %rbp
	je	.LBB161_21
# %bb.8:                                #   in Loop: Header=BB161_7 Depth=1
	movq	24(%rsp), %rdx
	movzbl	48(%rdx), %ecx
	testb	$2, %cl
	jne	.LBB161_9
# %bb.10:                               #   in Loop: Header=BB161_7 Depth=1
	movq	24(%rdx), %rcx
	movzbl	(%rcx,%rax), %ecx
	andb	$2, %cl
	testb	%cl, %cl
	jne	.LBB161_12
	jmp	.LBB161_15
	.p2align	4, 0x90
.LBB161_9:                              #   in Loop: Header=BB161_7 Depth=1
	andb	$8, %cl
	testb	%cl, %cl
	je	.LBB161_15
.LBB161_12:                             #   in Loop: Header=BB161_7 Depth=1
	movq	%rbp, 64(%rsp)
	movq	%rbx, 56(%rsp)
	leaq	64(%rsp), %rax
	movq	%rax, 72(%rsp)
	leaq	56(%rsp), %rax
	movq	%rax, 80(%rsp)
	callq	_ZN8pybind116detail13get_internalsEv
	leaq	112(%rax), %rsi
	leaq	72(%rsp), %rdi
	callq	_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_
	movl	%eax, %r12d
	testb	$2, 144(%r13)
	jne	.LBB161_14
# %bb.13:                               #   in Loop: Header=BB161_7 Depth=1
	movq	%rbp, %rdi
	movq	%r13, %rsi
	movq	%rbx, %rdx
	leaq	_ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE(%rip), %rcx
	callq	_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E
.LBB161_14:                             # %_ZN8pybind116detail19deregister_instanceEPNS0_8instanceEPvPKNS0_9type_infoE.exit
                                        #   in Loop: Header=BB161_7 Depth=1
	testb	%r12b, %r12b
	je	.LBB161_39
.LBB161_15:                             #   in Loop: Header=BB161_7 Depth=1
	testb	$1, 48(%rbx)
	jne	.LBB161_20
# %bb.16:                               #   in Loop: Header=BB161_7 Depth=1
	movq	24(%rsp), %rcx
	movzbl	48(%rcx), %eax
	testb	$2, %al
	jne	.LBB161_17
# %bb.18:                               #   in Loop: Header=BB161_7 Depth=1
	movq	24(%rcx), %rax
	movq	32(%rsp), %rcx
	movzbl	(%rax,%rcx), %eax
	andb	$1, %al
	testb	%al, %al
	jne	.LBB161_20
	jmp	.LBB161_21
.LBB161_17:                             #   in Loop: Header=BB161_7 Depth=1
	andb	$4, %al
	testb	%al, %al
	je	.LBB161_21
	.p2align	4, 0x90
.LBB161_20:                             #   in Loop: Header=BB161_7 Depth=1
	movq	40(%rsp), %rax
	movq	%r14, %rdi
	callq	*56(%rax)
.LBB161_21:                             #   in Loop: Header=BB161_7 Depth=1
	movq	8(%rsp), %rax
	testb	$2, 48(%rax)
	jne	.LBB161_22
# %bb.23:                               #   in Loop: Header=BB161_7 Depth=1
	movq	16(%rsp), %rsi
	movq	32(%rsp), %rcx
	movq	(%rsi), %rdx
	movq	(%rdx,%rcx,8), %rax
	movq	32(%rax), %rax
	movq	48(%rsp), %rdi
	leaq	(%rdi,%rax,8), %rax
	addq	$8, %rax
	movq	%rax, 48(%rsp)
	jmp	.LBB161_24
	.p2align	4, 0x90
.LBB161_22:                             # %._crit_edge.i
                                        #   in Loop: Header=BB161_7 Depth=1
	movq	16(%rsp), %rsi
	movq	32(%rsp), %rcx
	movq	(%rsi), %rdx
.LBB161_24:                             #   in Loop: Header=BB161_7 Depth=1
	leaq	1(%rcx), %rax
	movq	%rax, 32(%rsp)
	movq	8(%rsi), %rsi
	subq	%rdx, %rsi
	sarq	$3, %rsi
	cmpq	%rsi, %rax
	jb	.LBB161_26
# %bb.25:                               #   in Loop: Header=BB161_7 Depth=1
	xorl	%r13d, %r13d
	movq	%r13, 40(%rsp)
	cmpq	%r15, %rax
	jne	.LBB161_7
.LBB161_28:                             # %._crit_edge
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail8instance17deallocate_layoutEv
	cmpq	$0, 40(%rbx)
	je	.LBB161_30
# %bb.29:
	movq	%rbx, %rdi
	callq	PyObject_ClearWeakRefs@PLT
.LBB161_30:
	movq	%rbx, %rdi
	callq	_PyObject_GetDictPtr@PLT
	testq	%rax, %rax
	je	.LBB161_35
# %bb.31:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB161_35
# %bb.32:
	movq	$0, (%rax)
	movq	(%rdi), %rax
	testl	%eax, %eax
	js	.LBB161_35
# %bb.33:
	decq	%rax
	movq	%rax, (%rdi)
	jne	.LBB161_35
# %bb.34:
	callq	_Py_Dealloc@PLT
.LBB161_35:                             # %_ZL9Py_DECREFP7_object.exit
	testb	$16, 48(%rbx)
	je	.LBB161_37
# %bb.36:
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail14clear_patientsEP7_object
.LBB161_37:
	addq	$88, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB161_39:
	.cfi_def_cfa_offset 144
	leaq	.L.str.171(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.LBB161_38:
	leaq	.L.str.163(%rip), %rdi
	leaq	.L.str.162(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind116detail18values_and_holders8iteratorC2EPNS0_8instanceEPKSt6vectorIPNS0_9type_infoESaIS7_EE(%rip), %rcx
	movl	$293, %edx                      # imm = 0x125
	callq	__assert_fail@PLT
.Lfunc_end161:
	.size	_ZN8pybind116detail14clear_instanceEP7_object, .Lfunc_end161-_ZN8pybind116detail14clear_instanceEP7_object
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail8instance17deallocate_layoutEv,"axG",@progbits,_ZN8pybind116detail8instance17deallocate_layoutEv,comdat
	.hidden	_ZN8pybind116detail8instance17deallocate_layoutEv # -- Begin function _ZN8pybind116detail8instance17deallocate_layoutEv
	.weak	_ZN8pybind116detail8instance17deallocate_layoutEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail8instance17deallocate_layoutEv,@function
_ZN8pybind116detail8instance17deallocate_layoutEv: # @_ZN8pybind116detail8instance17deallocate_layoutEv
	.cfi_startproc
# %bb.0:
	testb	$2, 48(%rdi)
	jne	.LBB162_1
# %bb.2:
	movq	16(%rdi), %rdi
	jmp	PyMem_Free@PLT                  # TAILCALL
.LBB162_1:
	retq
.Lfunc_end162:
	.size	_ZN8pybind116detail8instance17deallocate_layoutEv, .Lfunc_end162-_ZN8pybind116detail8instance17deallocate_layoutEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail14clear_patientsEP7_object,"axG",@progbits,_ZN8pybind116detail14clear_patientsEP7_object,comdat
	.hidden	_ZN8pybind116detail14clear_patientsEP7_object # -- Begin function _ZN8pybind116detail14clear_patientsEP7_object
	.weak	_ZN8pybind116detail14clear_patientsEP7_object
	.p2align	4, 0x90
	.type	_ZN8pybind116detail14clear_patientsEP7_object,@function
_ZN8pybind116detail14clear_patientsEP7_object: # @_ZN8pybind116detail14clear_patientsEP7_object
.Lfunc_begin87:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception87
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$56, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	movq	%rdi, 32(%rsp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	leaq	32(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	%rsp, %rax
	movq	%rax, 48(%rsp)
.Ltmp2516:
	callq	_ZN8pybind116detail13get_internalsEv
.Ltmp2517:
# %bb.1:                                # %.noexc12
.Ltmp2518:
	leaq	40(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_
.Ltmp2519:
# %bb.2:                                # %_ZN8pybind116detail14with_internalsIZNS0_14clear_patientsEP7_objectEUlRNS0_9internalsEE_EEDTclfp_clL_ZNS0_13get_internalsEvEEEERKT_.exit
	andb	$-17, 48(%rbx)
	movq	(%rsp), %rbx
	movq	8(%rsp), %r14
	cmpq	%r14, %rbx
	jne	.LBB163_3
# %bb.9:                                # %._crit_edge
	testq	%rbx, %rbx
	je	.LBB163_11
.LBB163_10:
	movq	16(%rsp), %rsi
	subq	%rbx, %rsi
	movq	%rbx, %rdi
	callq	_ZdlPvm@PLT
.LBB163_11:                             # %_ZNSt6vectorIP7_objectSaIS1_EED2Ev.exit
	addq	$56, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
	.p2align	4, 0x90
.LBB163_7:                              # %_ZL9Py_DECREFP7_object.exit
                                        #   in Loop: Header=BB163_3 Depth=1
	.cfi_def_cfa_offset 80
	addq	$8, %rbx
	cmpq	%r14, %rbx
	je	.LBB163_8
.LBB163_3:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB163_7
# %bb.4:                                #   in Loop: Header=BB163_3 Depth=1
	movq	$0, (%rbx)
	movq	(%rdi), %rax
	testl	%eax, %eax
	js	.LBB163_7
# %bb.5:                                #   in Loop: Header=BB163_3 Depth=1
	decq	%rax
	movq	%rax, (%rdi)
	jne	.LBB163_7
# %bb.6:                                #   in Loop: Header=BB163_3 Depth=1
.Ltmp2521:
	callq	_Py_Dealloc@PLT
.Ltmp2522:
	jmp	.LBB163_7
.LBB163_8:                              # %._crit_edge.loopexit
	movq	(%rsp), %rbx
	testq	%rbx, %rbx
	jne	.LBB163_10
	jmp	.LBB163_11
.LBB163_13:
.Ltmp2520:
	jmp	.LBB163_14
.LBB163_12:
.Ltmp2523:
.LBB163_14:
	movq	%rax, %rbx
	movq	(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB163_16
# %bb.15:
	movq	16(%rsp), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB163_16:                             # %_ZNSt6vectorIP7_objectSaIS1_EED2Ev.exit15
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end163:
	.size	_ZN8pybind116detail14clear_patientsEP7_object, .Lfunc_end163-_ZN8pybind116detail14clear_patientsEP7_object
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail14clear_patientsEP7_object,"aG",@progbits,_ZN8pybind116detail14clear_patientsEP7_object,comdat
	.p2align	2, 0x0
GCC_except_table163:
.Lexception87:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end87-.Lcst_begin87
.Lcst_begin87:
	.uleb128 .Ltmp2516-.Lfunc_begin87       # >> Call Site 1 <<
	.uleb128 .Ltmp2519-.Ltmp2516            #   Call between .Ltmp2516 and .Ltmp2519
	.uleb128 .Ltmp2520-.Lfunc_begin87       #     jumps to .Ltmp2520
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2521-.Lfunc_begin87       # >> Call Site 2 <<
	.uleb128 .Ltmp2522-.Ltmp2521            #   Call between .Ltmp2521 and .Ltmp2522
	.uleb128 .Ltmp2523-.Lfunc_begin87       #     jumps to .Ltmp2523
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2522-.Lfunc_begin87       # >> Call Site 3 <<
	.uleb128 .Lfunc_end163-.Ltmp2522        #   Call between .Ltmp2522 and .Lfunc_end163
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end87:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE,"axG",@progbits,_ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE,comdat
	.hidden	_ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE # -- Begin function _ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE
	.weak	_ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE,@function
_ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE: # @_ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE
	.cfi_startproc
# %bb.0:
	subq	$40, %rsp
	.cfi_def_cfa_offset 48
	movq	%rdi, 16(%rsp)
	movq	%rsi, 8(%rsp)
	leaq	16(%rsp), %rax
	movq	%rax, 24(%rsp)
	leaq	8(%rsp), %rax
	movq	%rax, 32(%rsp)
	callq	_ZN8pybind116detail13get_internalsEv
	leaq	112(%rax), %rsi
	leaq	24(%rsp), %rdi
	callq	_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_
	addq	$40, %rsp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end164:
	.size	_ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE, .Lfunc_end164-_ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E,"axG",@progbits,_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E,comdat
	.hidden	_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E # -- Begin function _ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E
	.weak	_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E
	.p2align	4, 0x90
	.type	_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E,@function
_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E: # @_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E
.Lfunc_begin88:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception88
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, 16(%rsp)                  # 8-byte Spill
	movq	%rdx, 8(%rsp)                   # 8-byte Spill
	movq	%rsi, %r15
	movq	%rdi, %r12
	movq	(%rsi), %rax
	movq	336(%rax), %rax
	movq	%rax, (%rsp)
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rsp), %rcx
	movq	8(%rcx), %rsi
	movq	168(%rsi), %rdx
	leaq	24(%rcx), %rax
	movq	%rax, %rbx
	testl	$33554432, %edx                 # imm = 0x2000000
	je	.LBB165_2
# %bb.1:
	movq	(%rax), %rbx
.LBB165_2:                              # %_ZNK8pybind115tuple5beginEv.exit
	testl	$67108864, %edx                 # imm = 0x4000000
	je	.LBB165_25
# %bb.3:
	cmpq	PyLong_Type@GOTPCREL(%rip), %rsi
	je	.LBB165_26
# %bb.4:
	cmpq	PyBool_Type@GOTPCREL(%rip), %rsi
	je	.LBB165_27
# %bb.5:                                # %_ZL16PyTuple_GET_SIZEP7_object.exit.i
	movq	16(%rcx), %rcx
	testl	$33554432, %edx                 # imm = 0x2000000
	je	.LBB165_7
# %bb.6:
	movq	(%rax), %rax
.LBB165_7:
	leaq	(%rax,%rcx,8), %r14
	jmp	.LBB165_8
.LBB165_19:                             #   in Loop: Header=BB165_8 Depth=1
.Ltmp2531:
	movq	%rbp, %rdi
	movq	%r13, %rsi
	movq	8(%rsp), %rdx                   # 8-byte Reload
	movq	16(%rsp), %rcx                  # 8-byte Reload
	callq	_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E
.Ltmp2532:
	.p2align	4, 0x90
.LBB165_21:                             # %.loopexit
                                        #   in Loop: Header=BB165_8 Depth=1
	addq	$8, %rbx
.LBB165_8:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB165_15 Depth 2
	cmpq	%r14, %rbx
	je	.LBB165_9
# %bb.11:                               #   in Loop: Header=BB165_8 Depth=1
	movq	(%rbx), %rdi
.Ltmp2524:
	callq	_ZN8pybind116detail13get_type_infoEP11_typeobject
.Ltmp2525:
# %bb.12:                               #   in Loop: Header=BB165_8 Depth=1
	movq	%rax, %r13
	testq	%rax, %rax
	je	.LBB165_21
# %bb.13:                               #   in Loop: Header=BB165_8 Depth=1
	movq	88(%r13), %rax
	movq	96(%r13), %rcx
	cmpq	%rcx, %rax
	je	.LBB165_21
# %bb.14:                               # %.lr.ph
                                        #   in Loop: Header=BB165_8 Depth=1
	movq	8(%r15), %rdx
	.p2align	4, 0x90
.LBB165_15:                             #   Parent Loop BB165_8 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpq	%rdx, (%rax)
	je	.LBB165_16
# %bb.20:                               # %.critedge
                                        #   in Loop: Header=BB165_15 Depth=2
	addq	$16, %rax
	cmpq	%rcx, %rax
	jne	.LBB165_15
	jmp	.LBB165_21
.LBB165_16:                             #   in Loop: Header=BB165_8 Depth=1
.Ltmp2527:
	movq	%r12, %rdi
	callq	*8(%rax)
.Ltmp2528:
# %bb.17:                               #   in Loop: Header=BB165_8 Depth=1
	movq	%rax, %rbp
	cmpq	%r12, %rax
	je	.LBB165_19
# %bb.18:                               #   in Loop: Header=BB165_8 Depth=1
.Ltmp2529:
	movq	%rbp, %rdi
	movq	8(%rsp), %rsi                   # 8-byte Reload
	callq	*16(%rsp)                       # 8-byte Folded Reload
.Ltmp2530:
	jmp	.LBB165_19
.LBB165_9:                              # %._crit_edge
.Ltmp2537:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2538:
# %bb.10:                               # %_ZN8pybind116objectD2Ev.exit
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB165_25:
	.cfi_def_cfa_offset 80
	leaq	.L.str.137(%rip), %rdi
	leaq	.L.str.138(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL16PyTuple_GET_SIZEP7_object(%rip), %rcx
	movl	$23, %edx
	callq	__assert_fail@PLT
.LBB165_26:
	leaq	.L.str.139(%rip), %rdi
	leaq	.L.str.140(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object(%rip), %rcx
	movl	$231, %edx
	callq	__assert_fail@PLT
.LBB165_27:
	leaq	.L.str.141(%rip), %rdi
	leaq	.L.str.140(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object(%rip), %rcx
	movl	$232, %edx
	callq	__assert_fail@PLT
.LBB165_28:
.Ltmp2539:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB165_29:
.Ltmp2533:
	jmp	.LBB165_23
.LBB165_22:
.Ltmp2526:
.LBB165_23:
	movq	%rax, %rbx
.Ltmp2534:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2535:
# %bb.24:                               # %_ZN8pybind116objectD2Ev.exit38
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB165_30:
.Ltmp2536:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end165:
	.size	_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E, .Lfunc_end165-_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E,"aG",@progbits,_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E,comdat
	.p2align	2, 0x0
GCC_except_table165:
.Lexception88:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase59-.Lttbaseref59
.Lttbaseref59:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end88-.Lcst_begin88
.Lcst_begin88:
	.uleb128 .Lfunc_begin88-.Lfunc_begin88  # >> Call Site 1 <<
	.uleb128 .Ltmp2531-.Lfunc_begin88       #   Call between .Lfunc_begin88 and .Ltmp2531
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2531-.Lfunc_begin88       # >> Call Site 2 <<
	.uleb128 .Ltmp2532-.Ltmp2531            #   Call between .Ltmp2531 and .Ltmp2532
	.uleb128 .Ltmp2533-.Lfunc_begin88       #     jumps to .Ltmp2533
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2524-.Lfunc_begin88       # >> Call Site 3 <<
	.uleb128 .Ltmp2525-.Ltmp2524            #   Call between .Ltmp2524 and .Ltmp2525
	.uleb128 .Ltmp2526-.Lfunc_begin88       #     jumps to .Ltmp2526
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2527-.Lfunc_begin88       # >> Call Site 4 <<
	.uleb128 .Ltmp2530-.Ltmp2527            #   Call between .Ltmp2527 and .Ltmp2530
	.uleb128 .Ltmp2533-.Lfunc_begin88       #     jumps to .Ltmp2533
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2537-.Lfunc_begin88       # >> Call Site 5 <<
	.uleb128 .Ltmp2538-.Ltmp2537            #   Call between .Ltmp2537 and .Ltmp2538
	.uleb128 .Ltmp2539-.Lfunc_begin88       #     jumps to .Ltmp2539
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2534-.Lfunc_begin88       # >> Call Site 6 <<
	.uleb128 .Ltmp2535-.Ltmp2534            #   Call between .Ltmp2534 and .Ltmp2535
	.uleb128 .Ltmp2536-.Lfunc_begin88       #     jumps to .Ltmp2536
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2535-.Lfunc_begin88       # >> Call Site 7 <<
	.uleb128 .Lfunc_end165-.Ltmp2535        #   Call between .Ltmp2535 and .Lfunc_end165
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end88:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase59:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_,"axG",@progbits,_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_,comdat
	.hidden	_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_ # -- Begin function _ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_
	.weak	_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_
	.p2align	4, 0x90
	.type	_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_,@function
_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_: # @_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rcx
	movq	(%rdi), %rax
	cmpq	$0, 24(%rsi)
	je	.LBB166_3
# %bb.1:
	movq	(%rax), %r8
	movq	8(%rsi), %r11
	movq	%r8, %rax
	orq	%r11, %rax
	shrq	$32, %rax
	je	.LBB166_6
# %bb.2:
	movq	%r8, %rax
	xorl	%edx, %edx
	divq	%r11
	movq	%rdx, %r9
	movq	(%rsi), %rax
	movq	(%rax,%r9,8), %rax
	testq	%rax, %rax
	jne	.LBB166_7
	jmp	.LBB166_20
.LBB166_3:
	leaq	16(%rsi), %rdi
	movq	(%rax), %r8
	.p2align	4, 0x90
.LBB166_4:                              # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB166_20
# %bb.5:                                #   in Loop: Header=BB166_4 Depth=1
	cmpq	8(%rdi), %r8
	jne	.LBB166_4
	jmp	.LBB166_13
.LBB166_6:
	movl	%r8d, %eax
	xorl	%edx, %edx
	divl	%r11d
	movl	%edx, %r9d
	movq	(%rsi), %rax
	movq	(%rax,%r9,8), %rax
	testq	%rax, %rax
	je	.LBB166_20
.LBB166_7:
	movq	(%rax), %rdi
	cmpq	8(%rdi), %r8
	jne	.LBB166_8
.LBB166_13:                             # %_ZNSt10_HashtableIPKvSt4pairIKS1_PN8pybind116detail8instanceEESaIS8_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb0ELb0ELb0EEEE4findERS3_.exit.i.i
	movq	%rdi, %rax
	.p2align	4, 0x90
.LBB166_14:                             # =>This Inner Loop Header: Depth=1
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.LBB166_16
# %bb.15:                               #   in Loop: Header=BB166_14 Depth=1
	cmpq	8(%rax), %r8
	je	.LBB166_14
.LBB166_16:                             # %_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEE11equal_rangeERSB_.exit
	cmpq	%rax, %rdi
	je	.LBB166_20
# %bb.17:                               # %.lr.ph
	movq	8(%rcx), %rcx
	movq	(%rcx), %rcx
	.p2align	4, 0x90
.LBB166_18:                             # =>This Inner Loop Header: Depth=1
	cmpq	16(%rdi), %rcx
	je	.LBB166_22
# %bb.19:                               #   in Loop: Header=BB166_18 Depth=1
	movq	(%rdi), %rdi
	cmpq	%rax, %rdi
	jne	.LBB166_18
	jmp	.LBB166_20
	.p2align	4, 0x90
.LBB166_11:                             #   in Loop: Header=BB166_8 Depth=1
	movl	%r10d, %eax
	xorl	%edx, %edx
	divl	%r11d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%r9, %rdx
	jne	.LBB166_20
.LBB166_12:                             #   in Loop: Header=BB166_8 Depth=1
	cmpq	%r10, %r8
	je	.LBB166_13
.LBB166_8:                              # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB166_20
# %bb.9:                                #   in Loop: Header=BB166_8 Depth=1
	movq	8(%rdi), %r10
	movq	%r10, %rax
	orq	%r11, %rax
	shrq	$32, %rax
	je	.LBB166_11
# %bb.10:                               #   in Loop: Header=BB166_8 Depth=1
	movq	%r10, %rax
	xorl	%edx, %edx
	divq	%r11
	cmpq	%r9, %rdx
	je	.LBB166_12
.LBB166_20:
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB166_22:
	.cfi_def_cfa_offset 32
	movq	8(%rsi), %r10
	movq	8(%rdi), %rax
	movq	%rax, %rcx
	orq	%r10, %rcx
	shrq	$32, %rcx
	je	.LBB166_24
# %bb.23:
	xorl	%edx, %edx
	divq	%r10
	movq	%rdx, %rcx
	jmp	.LBB166_25
.LBB166_24:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r10d
	movl	%edx, %ecx
.LBB166_25:
	movq	(%rsi), %r9
	movq	(%r9,%rcx,8), %r14
	movq	%r14, %rax
	.p2align	4, 0x90
.LBB166_26:                             # =>This Inner Loop Header: Depth=1
	movq	%rax, %r8
	movq	(%rax), %rax
	cmpq	%rdi, %rax
	jne	.LBB166_26
# %bb.27:                               # %_ZNSt10_HashtableIPKvSt4pairIKS1_PN8pybind116detail8instanceEESaIS8_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb0ELb0ELb0EEEE20_M_get_previous_nodeEmPNSA_10_Hash_nodeIS8_Lb0EEE.exit.i.i.i
	movq	(%rdi), %r11
	cmpq	%r8, %r14
	je	.LBB166_31
# %bb.28:
	movq	%rsi, %rbx
	testq	%r11, %r11
	je	.LBB166_42
# %bb.29:
	movq	8(%r11), %rax
	movq	%rax, %rdx
	orq	%r10, %rdx
	shrq	$32, %rdx
	je	.LBB166_34
# %bb.30:
	xorl	%edx, %edx
	divq	%r10
	cmpq	%rcx, %rdx
	jne	.LBB166_35
	jmp	.LBB166_42
.LBB166_31:
	testq	%r11, %r11
	je	.LBB166_39
# %bb.32:
	movq	8(%r11), %rax
	movq	%rax, %rdx
	orq	%r10, %rdx
	movq	%rsi, %rbx
	shrq	$32, %rdx
	je	.LBB166_36
# %bb.33:
	xorl	%edx, %edx
	divq	%r10
	jmp	.LBB166_37
.LBB166_34:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r10d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	je	.LBB166_42
.LBB166_35:
	movq	%r8, (%r9,%rdx,8)
	jmp	.LBB166_42
.LBB166_36:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r10d
                                        # kill: def $edx killed $edx def $rdx
.LBB166_37:
	cmpq	%rcx, %rdx
	je	.LBB166_42
# %bb.38:
	movq	%r14, (%r9,%rdx,8)
	movq	%rbx, %rsi
	movq	(%rbx), %r9
	movq	(%r9,%rcx,8), %r14
.LBB166_39:                             # %.thread23.i.i.i.i
	movq	%rsi, %rbx
	leaq	16(%rsi), %rax
	cmpq	%r14, %rax
	jne	.LBB166_41
# %bb.40:
	movq	%r11, (%rax)
.LBB166_41:
	movq	$0, (%r9,%rcx,8)
.LBB166_42:                             # %_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEE5eraseENSt8__detail14_Node_iteratorISC_Lb0ELb0EEE.exit
	movq	(%rdi), %rax
	movq	%rax, (%r8)
	movl	$24, %esi
	callq	_ZdlPvm@PLT
	decq	24(%rbx)
	movb	$1, %al
                                        # kill: def $al killed $al killed $eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end166:
	.size	_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_, .Lfunc_end166-_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_,"axG",@progbits,_ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_,comdat
	.hidden	_ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_ # -- Begin function _ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_
	.weak	_ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_
	.p2align	4, 0x90
	.type	_ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_,@function
_ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_: # @_ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	(%rdi), %rax
	cmpq	$0, 304(%rsi)
	je	.LBB167_1
# %bb.8:
	movq	(%rax), %rcx
	movq	288(%rbx), %r9
	movq	%rcx, %rax
	orq	%r9, %rax
	shrq	$32, %rax
	je	.LBB167_9
# %bb.10:
	movq	%rcx, %rax
	xorl	%edx, %edx
	divq	%r9
	movq	%rdx, %rsi
	movq	280(%rbx), %rax
	movq	(%rax,%rsi,8), %rax
	testq	%rax, %rax
	jne	.LBB167_12
	jmp	.LBB167_19
.LBB167_1:
	leaq	296(%rbx), %r14
	movq	(%rax), %rax
	.p2align	4, 0x90
.LBB167_2:                              # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB167_19
# %bb.3:                                #   in Loop: Header=BB167_2 Depth=1
	cmpq	8(%r14), %rax
	jne	.LBB167_2
	jmp	.LBB167_4
.LBB167_9:
	movl	%ecx, %eax
	xorl	%edx, %edx
	divl	%r9d
	movl	%edx, %esi
	movq	280(%rbx), %rax
	movq	(%rax,%rsi,8), %rax
	testq	%rax, %rax
	je	.LBB167_19
.LBB167_12:
	movq	(%rax), %r14
	cmpq	8(%r14), %rcx
	je	.LBB167_4
	.p2align	4, 0x90
.LBB167_14:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB167_19
# %bb.15:                               #   in Loop: Header=BB167_14 Depth=1
	movq	8(%r14), %r8
	movq	%r8, %rax
	orq	%r9, %rax
	shrq	$32, %rax
	je	.LBB167_16
# %bb.17:                               #   in Loop: Header=BB167_14 Depth=1
	movq	%r8, %rax
	xorl	%edx, %edx
	divq	%r9
	cmpq	%rsi, %rdx
	je	.LBB167_13
	jmp	.LBB167_19
	.p2align	4, 0x90
.LBB167_16:                             #   in Loop: Header=BB167_14 Depth=1
	movl	%r8d, %eax
	xorl	%edx, %edx
	divl	%r9d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rsi, %rdx
	jne	.LBB167_19
.LBB167_13:                             #   in Loop: Header=BB167_14 Depth=1
	cmpq	%r8, %rcx
	jne	.LBB167_14
.LBB167_4:                              # %_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEE4findERSC_.exit
	movq	8(%rdi), %rax
	movq	(%rax), %rdi
	movq	16(%rax), %rsi
	movups	16(%r14), %xmm0
	movups	%xmm0, (%rax)
	movq	32(%r14), %rcx
	movq	%rcx, 16(%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%r14)
	movq	$0, 32(%r14)
	testq	%rdi, %rdi
	je	.LBB167_6
# %bb.5:
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB167_6:                              # %_ZNSt6vectorIP7_objectSaIS1_EEaSEOS3_.exit
	movq	288(%rbx), %r8
	movq	8(%r14), %rax
	movq	%rax, %rcx
	orq	%r8, %rcx
	shrq	$32, %rcx
	je	.LBB167_7
# %bb.20:
	xorl	%edx, %edx
	divq	%r8
	movq	%rdx, %rcx
	jmp	.LBB167_21
.LBB167_7:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r8d
	movl	%edx, %ecx
.LBB167_21:
	movq	280(%rbx), %rdi
	movq	(%rdi,%rcx,8), %r10
	movq	%r10, %rax
	.p2align	4, 0x90
.LBB167_22:                             # =>This Inner Loop Header: Depth=1
	movq	%rax, %rsi
	movq	(%rax), %rax
	cmpq	%r14, %rax
	jne	.LBB167_22
# %bb.23:                               # %_ZNSt10_HashtableIPK7_objectSt4pairIKS2_St6vectorIPS0_SaIS6_EEESaIS9_ENSt8__detail10_Select1stESt8equal_toIS2_ESt4hashIS2_ENSB_18_Mod_range_hashingENSB_20_Default_ranged_hashENSB_20_Prime_rehash_policyENSB_17_Hashtable_traitsILb0ELb0ELb1EEEE20_M_get_previous_nodeEmPNSB_10_Hash_nodeIS9_Lb0EEE.exit.i.i.i
	movq	(%r14), %r9
	cmpq	%rsi, %r10
	je	.LBB167_24
# %bb.33:
	testq	%r9, %r9
	je	.LBB167_39
# %bb.34:
	movq	8(%r9), %rax
	movq	%rax, %rdx
	orq	%r8, %rdx
	shrq	$32, %rdx
	je	.LBB167_35
# %bb.36:
	xorl	%edx, %edx
	divq	%r8
	cmpq	%rcx, %rdx
	jne	.LBB167_38
	jmp	.LBB167_39
.LBB167_24:
	testq	%r9, %r9
	je	.LBB167_30
# %bb.25:
	movq	8(%r9), %rax
	movq	%rax, %rdx
	orq	%r8, %rdx
	shrq	$32, %rdx
	je	.LBB167_26
# %bb.27:
	xorl	%edx, %edx
	divq	%r8
	cmpq	%rcx, %rdx
	jne	.LBB167_29
	jmp	.LBB167_39
.LBB167_35:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r8d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	je	.LBB167_39
.LBB167_38:
	movq	%rsi, (%rdi,%rdx,8)
	jmp	.LBB167_39
.LBB167_26:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r8d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	je	.LBB167_39
.LBB167_29:
	movq	%r10, (%rdi,%rdx,8)
	movq	280(%rbx), %rdi
	movq	(%rdi,%rcx,8), %r10
.LBB167_30:                             # %.thread23.i.i.i.i
	leaq	296(%rbx), %rax
	cmpq	%r10, %rax
	jne	.LBB167_32
# %bb.31:
	movq	%r9, (%rax)
.LBB167_32:
	movq	$0, (%rdi,%rcx,8)
.LBB167_39:                             # %_ZNSt10_HashtableIPK7_objectSt4pairIKS2_St6vectorIPS0_SaIS6_EEESaIS9_ENSt8__detail10_Select1stESt8equal_toIS2_ESt4hashIS2_ENSB_18_Mod_range_hashingENSB_20_Default_ranged_hashENSB_20_Prime_rehash_policyENSB_17_Hashtable_traitsILb0ELb0ELb1EEEE22_M_remove_bucket_beginEmPNSB_10_Hash_nodeIS9_Lb0EEEm.exit.i.i.i.i
	movq	(%r14), %rax
	movq	%rax, (%rsi)
	movq	16(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB167_41
# %bb.40:
	movq	32(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB167_41:                             # %_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEE5eraseENSt8__detail14_Node_iteratorISD_Lb0ELb0EEE.exit
	movl	$40, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	decq	304(%rbx)
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB167_19:                             # %.loopexit
	.cfi_def_cfa_offset 32
	leaq	.L.str.172(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Lfunc_end167:
	.size	_ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_, .Lfunc_end167-_ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_,"axG",@progbits,_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_,comdat
	.hidden	_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_ # -- Begin function _ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_
	.weak	_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_
	.p2align	4, 0x90
	.type	_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_,@function
_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_: # @_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_
.Lfunc_begin89:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception89
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	8(%rdi), %rbx
	movq	16(%rdi), %r14
	movq	%rsi, %rdi
	movl	$3, %esi
	xorl	%edx, %edx
	callq	_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE
	movq	%rax, (%rsp)
.Ltmp2540:
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movq	%rax, %rdx
	callq	PyObject_SetAttrString@PLT
.Ltmp2541:
# %bb.1:                                # %.noexc
	testl	%eax, %eax
	jne	.LBB168_2
# %bb.7:                                # %_ZN8pybind116detail17accessor_policies8str_attr3setENS_6handleEPKcS3_.exit
.Ltmp2551:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2552:
# %bb.8:                                # %_ZN8pybind116objectD2Ev.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB168_2:
	.cfi_def_cfa_offset 32
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2542:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2543:
# %bb.3:
.Ltmp2545:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2546:
# %bb.4:                                # %.noexc4
.LBB168_5:
.Ltmp2544:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB168_10
.LBB168_6:
.Ltmp2553:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB168_9:
.Ltmp2547:
	movq	%rax, %rbx
.LBB168_10:                             # %.body
.Ltmp2548:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2549:
# %bb.11:                               # %_ZN8pybind116objectD2Ev.exit5
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB168_12:
.Ltmp2550:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end168:
	.size	_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_, .Lfunc_end168-_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_,"aG",@progbits,_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_,comdat
	.p2align	2, 0x0
GCC_except_table168:
.Lexception89:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase60-.Lttbaseref60
.Lttbaseref60:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end89-.Lcst_begin89
.Lcst_begin89:
	.uleb128 .Lfunc_begin89-.Lfunc_begin89  # >> Call Site 1 <<
	.uleb128 .Ltmp2540-.Lfunc_begin89       #   Call between .Lfunc_begin89 and .Ltmp2540
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2540-.Lfunc_begin89       # >> Call Site 2 <<
	.uleb128 .Ltmp2541-.Ltmp2540            #   Call between .Ltmp2540 and .Ltmp2541
	.uleb128 .Ltmp2547-.Lfunc_begin89       #     jumps to .Ltmp2547
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2551-.Lfunc_begin89       # >> Call Site 3 <<
	.uleb128 .Ltmp2552-.Ltmp2551            #   Call between .Ltmp2551 and .Ltmp2552
	.uleb128 .Ltmp2553-.Lfunc_begin89       #     jumps to .Ltmp2553
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2552-.Lfunc_begin89       # >> Call Site 4 <<
	.uleb128 .Ltmp2542-.Ltmp2552            #   Call between .Ltmp2552 and .Ltmp2542
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2542-.Lfunc_begin89       # >> Call Site 5 <<
	.uleb128 .Ltmp2543-.Ltmp2542            #   Call between .Ltmp2542 and .Ltmp2543
	.uleb128 .Ltmp2544-.Lfunc_begin89       #     jumps to .Ltmp2544
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2545-.Lfunc_begin89       # >> Call Site 6 <<
	.uleb128 .Ltmp2546-.Ltmp2545            #   Call between .Ltmp2545 and .Ltmp2546
	.uleb128 .Ltmp2547-.Lfunc_begin89       #     jumps to .Ltmp2547
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2546-.Lfunc_begin89       # >> Call Site 7 <<
	.uleb128 .Ltmp2548-.Ltmp2546            #   Call between .Ltmp2546 and .Ltmp2548
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2548-.Lfunc_begin89       # >> Call Site 8 <<
	.uleb128 .Ltmp2549-.Ltmp2548            #   Call between .Ltmp2548 and .Ltmp2549
	.uleb128 .Ltmp2550-.Lfunc_begin89       #     jumps to .Ltmp2550
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2549-.Lfunc_begin89       # >> Call Site 9 <<
	.uleb128 .Lfunc_end168-.Ltmp2549        #   Call between .Ltmp2549 and .Lfunc_end168
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end89:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase60:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE,"axG",@progbits,_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE,comdat
	.hidden	_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE # -- Begin function _ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE
	.weak	_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE,@function
_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE: # @_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE
.Lfunc_begin90:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception90
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$40, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	testq	%rdi, %rdi
	je	.LBB169_1
# %bb.3:
	movq	%rdi, %rbx
	leaq	24(%rsp), %r12
	movq	%r12, 8(%rsp)
	callq	strlen@PLT
	movq	%rax, %r14
	movq	%r12, %r15
	cmpq	$16, %rax
	jb	.LBB169_7
# %bb.4:
	testq	%r14, %r14
	js	.LBB169_24
# %bb.5:
	movq	%r14, %rdi
	incq	%rdi
	js	.LBB169_25
# %bb.6:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
	callq	_Znwm@PLT
	movq	%rax, %r15
	movq	%rax, 8(%rsp)
	movq	%r14, 24(%rsp)
.LBB169_7:                              # %._crit_edge.i.i
	testq	%r14, %r14
	je	.LBB169_11
# %bb.8:                                # %._crit_edge.i.i
	cmpq	$1, %r14
	jne	.LBB169_10
# %bb.9:
	movzbl	(%rbx), %eax
	movb	%al, (%r15)
	jmp	.LBB169_11
.LBB169_1:
	movq	_Py_NoneStruct@GOTPCREL(%rip), %rax
	movq	%rax, 8(%rsp)
	leaq	8(%rsp), %r14
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	8(%rsp), %rbx
	movq	$0, 8(%rsp)
.Ltmp2562:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2563:
	jmp	.LBB169_2
.LBB169_10:
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
.LBB169_11:
	movq	%r14, 16(%rsp)
	movb	$0, (%r15,%r14)
	movq	8(%rsp), %rdi
	movq	16(%rsp), %rsi
.Ltmp2554:
	xorl	%edx, %edx
	callq	PyUnicode_DecodeUTF8@PLT
.Ltmp2555:
# %bb.12:                               # %.noexc16
	movq	%rax, %rbx
	testq	%rax, %rax
	je	.LBB169_13
# %bb.17:                               # %_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4castERKS7_NS_19return_value_policyENS_6handleE.exit
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB169_2
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB169_2:
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB169_25:                             # %.noexc11.i
	.cfi_def_cfa_offset 80
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB169_13:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2556:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2557:
# %bb.14:
.Ltmp2559:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2560:
# %bb.15:                               # %.noexc17
.LBB169_24:                             # %.noexc.i
	leaq	.L.str.10(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB169_16:
.Ltmp2558:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB169_20
.LBB169_23:
.Ltmp2564:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB169_19:
.Ltmp2561:
	movq	%rax, %rbx
.LBB169_20:                             # %.body
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB169_22
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i18
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB169_22:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit20
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end169:
	.size	_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE, .Lfunc_end169-_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE,"aG",@progbits,_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE,comdat
	.p2align	2, 0x0
GCC_except_table169:
.Lexception90:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase61-.Lttbaseref61
.Lttbaseref61:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end90-.Lcst_begin90
.Lcst_begin90:
	.uleb128 .Lfunc_begin90-.Lfunc_begin90  # >> Call Site 1 <<
	.uleb128 .Ltmp2562-.Lfunc_begin90       #   Call between .Lfunc_begin90 and .Ltmp2562
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2562-.Lfunc_begin90       # >> Call Site 2 <<
	.uleb128 .Ltmp2563-.Ltmp2562            #   Call between .Ltmp2562 and .Ltmp2563
	.uleb128 .Ltmp2564-.Lfunc_begin90       #     jumps to .Ltmp2564
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2563-.Lfunc_begin90       # >> Call Site 3 <<
	.uleb128 .Ltmp2554-.Ltmp2563            #   Call between .Ltmp2563 and .Ltmp2554
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2554-.Lfunc_begin90       # >> Call Site 4 <<
	.uleb128 .Ltmp2555-.Ltmp2554            #   Call between .Ltmp2554 and .Ltmp2555
	.uleb128 .Ltmp2561-.Lfunc_begin90       #     jumps to .Ltmp2561
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2555-.Lfunc_begin90       # >> Call Site 5 <<
	.uleb128 .Ltmp2556-.Ltmp2555            #   Call between .Ltmp2555 and .Ltmp2556
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2556-.Lfunc_begin90       # >> Call Site 6 <<
	.uleb128 .Ltmp2557-.Ltmp2556            #   Call between .Ltmp2556 and .Ltmp2557
	.uleb128 .Ltmp2558-.Lfunc_begin90       #     jumps to .Ltmp2558
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2559-.Lfunc_begin90       # >> Call Site 7 <<
	.uleb128 .Ltmp2560-.Ltmp2559            #   Call between .Ltmp2559 and .Ltmp2560
	.uleb128 .Ltmp2561-.Lfunc_begin90       #     jumps to .Ltmp2561
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2560-.Lfunc_begin90       # >> Call Site 8 <<
	.uleb128 .Lfunc_end169-.Ltmp2560        #   Call between .Ltmp2560 and .Lfunc_end169
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end90:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase61:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind117module_10add_objectEPKcNS_6handleEb,"axG",@progbits,_ZN8pybind117module_10add_objectEPKcNS_6handleEb,comdat
	.hidden	_ZN8pybind117module_10add_objectEPKcNS_6handleEb # -- Begin function _ZN8pybind117module_10add_objectEPKcNS_6handleEb
	.weak	_ZN8pybind117module_10add_objectEPKcNS_6handleEb
	.p2align	4, 0x90
	.type	_ZN8pybind117module_10add_objectEPKcNS_6handleEb,@function
_ZN8pybind117module_10add_objectEPKcNS_6handleEb: # @_ZN8pybind117module_10add_objectEPKcNS_6handleEb
.Lfunc_begin91:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception91
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$120, %rsp
	.cfi_def_cfa_offset 144
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	%rdx, 16(%rsp)
	testl	%ecx, %ecx
	jne	.LBB170_15
# %bb.1:
	movq	(%r14), %rdi
	movq	%rbx, %rsi
	callq	PyObject_HasAttrString@PLT
	cmpl	$1, %eax
	je	.LBB170_2
.LBB170_15:
	movq	(%r14), %r14
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rax), %rdx
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	PyModule_AddObject@PLT
	addq	$120, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB170_2:
	.cfi_def_cfa_offset 144
	leaq	88(%rsp), %r14
	leaq	15(%rsp), %rdx
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_@PLT
.Ltmp2565:
	leaq	.L.str.192(%rip), %rsi
	leaq	24(%rsp), %rdi
	movq	%r14, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp2566:
# %bb.3:
.Ltmp2568:
	leaq	.L.str.193(%rip), %rdx
	leaq	56(%rsp), %rdi
	leaq	24(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp2569:
# %bb.4:
.Ltmp2571:
	leaq	56(%rsp), %rdi
	callq	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp2572:
# %bb.5:
.LBB170_8:
.Ltmp2573:
	movq	%rax, %rbx
	movq	56(%rsp), %rdi
	leaq	72(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB170_9
# %bb.10:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	24(%rsp), %rdi
	leaq	40(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB170_11
.LBB170_12:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit14
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB170_13
.LBB170_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit17
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB170_9:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	72(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	24(%rsp), %rdi
	leaq	40(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB170_12
	jmp	.LBB170_11
.LBB170_7:
.Ltmp2570:
	movq	%rax, %rbx
	movq	24(%rsp), %rdi
	leaq	40(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB170_12
.LBB170_11:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i12
	movq	40(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB170_14
	jmp	.LBB170_13
.LBB170_6:
.Ltmp2567:
	movq	%rax, %rbx
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB170_14
.LBB170_13:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i15
	movq	104(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end170:
	.size	_ZN8pybind117module_10add_objectEPKcNS_6handleEb, .Lfunc_end170-_ZN8pybind117module_10add_objectEPKcNS_6handleEb
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind117module_10add_objectEPKcNS_6handleEb,"aG",@progbits,_ZN8pybind117module_10add_objectEPKcNS_6handleEb,comdat
	.p2align	2, 0x0
GCC_except_table170:
.Lexception91:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end91-.Lcst_begin91
.Lcst_begin91:
	.uleb128 .Lfunc_begin91-.Lfunc_begin91  # >> Call Site 1 <<
	.uleb128 .Ltmp2565-.Lfunc_begin91       #   Call between .Lfunc_begin91 and .Ltmp2565
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2565-.Lfunc_begin91       # >> Call Site 2 <<
	.uleb128 .Ltmp2566-.Ltmp2565            #   Call between .Ltmp2565 and .Ltmp2566
	.uleb128 .Ltmp2567-.Lfunc_begin91       #     jumps to .Ltmp2567
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2568-.Lfunc_begin91       # >> Call Site 3 <<
	.uleb128 .Ltmp2569-.Ltmp2568            #   Call between .Ltmp2568 and .Ltmp2569
	.uleb128 .Ltmp2570-.Lfunc_begin91       #     jumps to .Ltmp2570
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2571-.Lfunc_begin91       # >> Call Site 4 <<
	.uleb128 .Ltmp2572-.Ltmp2571            #   Call between .Ltmp2571 and .Ltmp2572
	.uleb128 .Ltmp2573-.Lfunc_begin91       #     jumps to .Ltmp2573
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2572-.Lfunc_begin91       # >> Call Site 5 <<
	.uleb128 .Lfunc_end170-.Ltmp2572        #   Call between .Ltmp2572 and .Lfunc_end170
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end91:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeES10_
	.type	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeES10_,@function
_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeES10_: # @_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeES10_
.Lfunc_begin92:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception92
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$40, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 16(%rsp)
	movq	$0, 32(%rsp)
.Ltmp2574:
	leaq	16(%rsp), %rdi
	movq	%r14, %rsi
	callq	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE
.Ltmp2575:
# %bb.1:                                # %_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE9load_argsERNS0_13function_callE.exit.i
	movl	$1, %ebx
	testb	%al, %al
	je	.LBB171_11
# %bb.2:
	movq	(%r14), %rax
	testb	$32, 89(%rax)
	jne	.LBB171_3
# %bb.8:
.Ltmp2586:
	leaq	16(%rsp), %rdi
	callq	_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_NSD_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSH_
.Ltmp2587:
# %bb.9:
	movq	_Py_NoneStruct@GOTPCREL(%rip), %rax
	movq	%rax, 8(%rsp)
.Ltmp2588:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2589:
# %bb.10:                               # %.noexc.i
	movq	8(%rsp), %rbx
	movq	$0, 8(%rsp)
.Ltmp2591:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2592:
	jmp	.LBB171_11
.LBB171_3:
.Ltmp2577:
	leaq	16(%rsp), %rdi
	callq	_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_NSD_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSH_
.Ltmp2578:
# %bb.4:
	movq	_Py_NoneStruct@GOTPCREL(%rip), %rax
	movq	%rax, 8(%rsp)
.Ltmp2580:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2581:
# %bb.5:
	movq	8(%rsp), %rbx
	movq	$0, 8(%rsp)
.Ltmp2583:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2584:
.LBB171_11:
	leaq	32(%rsp), %rdi
.Ltmp2594:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2595:
# %bb.12:                               # %_ZNSt10_Head_baseILm0EN8pybind116detail11type_casterINS0_6objectEvEELb0EED2Ev.exit.i.i.i
	leaq	24(%rsp), %rdi
.Ltmp2597:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2598:
# %bb.13:                               # %_ZNSt10_Head_baseILm1EN8pybind116detail11type_casterINS0_6objectEvEELb0EED2Ev.exit.i.i.i.i
.Ltmp2600:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2601:
# %bb.14:                               # %_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_ENKUlRNS_6detail13function_callEE_clES10_.exit
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB171_18:
	.cfi_def_cfa_offset 64
.Ltmp2585:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB171_19:
.Ltmp2593:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB171_7:
.Ltmp2582:
	jmp	.LBB171_17
.LBB171_6:
.Ltmp2579:
	jmp	.LBB171_17
.LBB171_20:
.Ltmp2590:
	jmp	.LBB171_17
.LBB171_15:
.Ltmp2602:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB171_22:
.Ltmp2599:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB171_21:
.Ltmp2596:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB171_16:
.Ltmp2576:
.LBB171_17:
	movq	%rax, %rbx
	leaq	16(%rsp), %rdi
	callq	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end171:
	.size	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeES10_, .Lfunc_end171-_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeES10_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table171:
.Lexception92:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase62-.Lttbaseref62
.Lttbaseref62:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end92-.Lcst_begin92
.Lcst_begin92:
	.uleb128 .Ltmp2574-.Lfunc_begin92       # >> Call Site 1 <<
	.uleb128 .Ltmp2575-.Ltmp2574            #   Call between .Ltmp2574 and .Ltmp2575
	.uleb128 .Ltmp2576-.Lfunc_begin92       #     jumps to .Ltmp2576
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2586-.Lfunc_begin92       # >> Call Site 2 <<
	.uleb128 .Ltmp2589-.Ltmp2586            #   Call between .Ltmp2586 and .Ltmp2589
	.uleb128 .Ltmp2590-.Lfunc_begin92       #     jumps to .Ltmp2590
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2591-.Lfunc_begin92       # >> Call Site 3 <<
	.uleb128 .Ltmp2592-.Ltmp2591            #   Call between .Ltmp2591 and .Ltmp2592
	.uleb128 .Ltmp2593-.Lfunc_begin92       #     jumps to .Ltmp2593
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2577-.Lfunc_begin92       # >> Call Site 4 <<
	.uleb128 .Ltmp2578-.Ltmp2577            #   Call between .Ltmp2577 and .Ltmp2578
	.uleb128 .Ltmp2579-.Lfunc_begin92       #     jumps to .Ltmp2579
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2580-.Lfunc_begin92       # >> Call Site 5 <<
	.uleb128 .Ltmp2581-.Ltmp2580            #   Call between .Ltmp2580 and .Ltmp2581
	.uleb128 .Ltmp2582-.Lfunc_begin92       #     jumps to .Ltmp2582
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2583-.Lfunc_begin92       # >> Call Site 6 <<
	.uleb128 .Ltmp2584-.Ltmp2583            #   Call between .Ltmp2583 and .Ltmp2584
	.uleb128 .Ltmp2585-.Lfunc_begin92       #     jumps to .Ltmp2585
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2594-.Lfunc_begin92       # >> Call Site 7 <<
	.uleb128 .Ltmp2595-.Ltmp2594            #   Call between .Ltmp2594 and .Ltmp2595
	.uleb128 .Ltmp2596-.Lfunc_begin92       #     jumps to .Ltmp2596
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2597-.Lfunc_begin92       # >> Call Site 8 <<
	.uleb128 .Ltmp2598-.Ltmp2597            #   Call between .Ltmp2597 and .Ltmp2598
	.uleb128 .Ltmp2599-.Lfunc_begin92       #     jumps to .Ltmp2599
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2600-.Lfunc_begin92       # >> Call Site 9 <<
	.uleb128 .Ltmp2601-.Ltmp2600            #   Call between .Ltmp2600 and .Ltmp2601
	.uleb128 .Ltmp2602-.Lfunc_begin92       #     jumps to .Ltmp2602
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2601-.Lfunc_begin92       # >> Call Site 10 <<
	.uleb128 .Lfunc_end171-.Ltmp2601        #   Call between .Ltmp2601 and .Lfunc_end171
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end92:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase62:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_NSD_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSH_
	.type	_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_NSD_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSH_,@function
_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_NSD_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSH_: # @_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_NSD_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSH_
.Lfunc_begin93:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception93
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$400, %rsp                      # imm = 0x190
	.cfi_def_cfa_offset 416
	.cfi_offset %rbx, -16
	movq	16(%rdi), %rax
	movq	%rax, 40(%rsp)
	movq	$0, 16(%rdi)
	movq	8(%rdi), %rcx
	movq	%rcx, 32(%rsp)
	movq	$0, 8(%rdi)
	movq	(%rdi), %rcx
	movq	%rcx, 24(%rsp)
	movq	$0, (%rdi)
	movq	%rax, 16(%rsp)
.Ltmp2603:
	.cfi_escape 0x2e, 0x00
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2604:
# %bb.1:                                # %.noexc.i
.Ltmp2605:
	.cfi_escape 0x2e, 0x00
	leaq	112(%rsp), %rdi
	leaq	16(%rsp), %rsi
	callq	_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE@PLT
.Ltmp2606:
# %bb.2:
	movq	32(%rsp), %rax
	movq	%rax, 8(%rsp)
.Ltmp2607:
	.cfi_escape 0x2e, 0x00
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2608:
# %bb.3:                                # %_ZN8pybind116objectC2ERKS0_.exit.i.i
	leaq	160(%rsp), %rdi
.Ltmp2610:
	.cfi_escape 0x2e, 0x00
	leaq	8(%rsp), %rsi
	callq	_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE@PLT
.Ltmp2611:
# %bb.4:
	movq	24(%rsp), %rax
	movq	%rax, (%rsp)
.Ltmp2612:
	.cfi_escape 0x2e, 0x00
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2613:
# %bb.5:                                # %_ZN8pybind116objectC2ERKS0_.exit20.i.i
	leaq	208(%rsp), %rdi
.Ltmp2615:
	.cfi_escape 0x2e, 0x00
	movq	%rsp, %rsi
	callq	_ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE@PLT
.Ltmp2616:
# %bb.6:
.Ltmp2627:
	.cfi_escape 0x2e, 0x00
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2628:
# %bb.7:                                # %_ZN8pybind116objectD2Ev.exit.i.i
.Ltmp2630:
	.cfi_escape 0x2e, 0x00
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2631:
# %bb.8:                                # %_ZN8pybind116objectD2Ev.exit21.i.i
.Ltmp2633:
	.cfi_escape 0x2e, 0x00
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2634:
# %bb.9:                                # %_ZN8pybind116objectD2Ev.exit22.i.i
.Ltmp2636:
	.cfi_escape 0x2e, 0x00
	movq	_Z8micro_tk13micro_globals@GOTPCREL(%rip), %rdi
	movl	$8, %esi
	movl	$65536, %edx                    # imm = 0x10000
	callq	hipFuncSetAttribute@PLT
.Ltmp2637:
# %bb.10:                               # %.noexc7.i
.Ltmp2638:
	.cfi_escape 0x2e, 0x00
	movabsq	$137438953504, %rdi             # imm = 0x2000000020
	movabsq	$4294967808, %rdx               # imm = 0x100000200
	movl	$65536, %r8d                    # imm = 0x10000
	movl	$1, %esi
	movl	$1, %ecx
	xorl	%r9d, %r9d
	callq	__hipPushCallConfiguration@PLT
.Ltmp2639:
# %bb.11:                               # %.noexc8.i
	testl	%eax, %eax
	jne	.LBB172_14
# %bb.12:
	movq	112(%rsp), %rax
	movq	%rax, 256(%rsp)
	movups	120(%rsp), %xmm0
	movups	%xmm0, 264(%rsp)
	movups	136(%rsp), %xmm0
	movups	%xmm0, 280(%rsp)
	movq	160(%rsp), %rax
	movq	%rax, 304(%rsp)
	movups	168(%rsp), %xmm0
	movups	%xmm0, 312(%rsp)
	movups	184(%rsp), %xmm0
	movups	%xmm0, 328(%rsp)
	movq	208(%rsp), %rax
	movq	%rax, 352(%rsp)
	movups	216(%rsp), %xmm0
	movups	%xmm0, 360(%rsp)
	movups	232(%rsp), %xmm0
	movups	%xmm0, 376(%rsp)
	leaq	256(%rsp), %rax
	movq	%rax, 48(%rsp)
.Ltmp2640:
	.cfi_escape 0x2e, 0x00
	leaq	96(%rsp), %rdi
	leaq	80(%rsp), %rsi
	leaq	72(%rsp), %rdx
	leaq	64(%rsp), %rcx
	callq	__hipPopCallConfiguration@PLT
.Ltmp2641:
# %bb.13:                               # %.noexc9.i
	movq	96(%rsp), %rsi
	movl	104(%rsp), %edx
	movq	80(%rsp), %rcx
	movl	88(%rsp), %r8d
.Ltmp2642:
	.cfi_escape 0x2e, 0x10
	movq	_Z8micro_tk13micro_globals@GOTPCREL(%rip), %rdi
	leaq	48(%rsp), %r9
	pushq	64(%rsp)
	.cfi_adjust_cfa_offset 8
	pushq	80(%rsp)
	.cfi_adjust_cfa_offset 8
	callq	hipLaunchKernel@PLT
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
.Ltmp2643:
.LBB172_14:
.Ltmp2654:
	.cfi_escape 0x2e, 0x00
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2655:
# %bb.15:                               # %_ZN8pybind116objectD2Ev.exit.i
.Ltmp2657:
	.cfi_escape 0x2e, 0x00
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2658:
# %bb.16:                               # %_ZN8pybind116objectD2Ev.exit11.i
.Ltmp2660:
	.cfi_escape 0x2e, 0x00
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2661:
# %bb.17:                               # %_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE9call_implIvRZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES8_NS_7module_EPKcJNS5_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESE_NSC_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_JLm0ELm1ELm2EENS0_9void_typeEEET_OSI_St16integer_sequenceImJXspT1_EEEOSH_.exit
	addq	$400, %rsp                      # imm = 0x190
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB172_27:
	.cfi_def_cfa_offset 416
.Ltmp2662:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB172_26:
.Ltmp2659:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB172_25:
.Ltmp2656:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB172_35:
.Ltmp2635:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB172_34:
.Ltmp2632:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB172_33:
.Ltmp2629:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB172_18:
.Ltmp2617:
	movq	%rax, %rbx
.Ltmp2618:
	.cfi_escape 0x2e, 0x00
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2619:
	jmp	.LBB172_21
.LBB172_19:
.Ltmp2620:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB172_20:
.Ltmp2614:
	movq	%rax, %rbx
.LBB172_21:                             # %_ZN8pybind116objectD2Ev.exit23.i.i
.Ltmp2621:
	.cfi_escape 0x2e, 0x00
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2622:
	jmp	.LBB172_24
.LBB172_22:
.Ltmp2623:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB172_23:
.Ltmp2609:
	movq	%rax, %rbx
.LBB172_24:                             # %_ZN8pybind116objectD2Ev.exit24.i.i
.Ltmp2624:
	.cfi_escape 0x2e, 0x00
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2625:
	jmp	.LBB172_29
.LBB172_36:
.Ltmp2626:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB172_28:
.Ltmp2644:
	movq	%rax, %rbx
.LBB172_29:                             # %.body.i
.Ltmp2645:
	.cfi_escape 0x2e, 0x00
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2646:
# %bb.30:                               # %_ZN8pybind116objectD2Ev.exit13.i
.Ltmp2648:
	.cfi_escape 0x2e, 0x00
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2649:
# %bb.31:                               # %_ZN8pybind116objectD2Ev.exit14.i
.Ltmp2651:
	.cfi_escape 0x2e, 0x00
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2652:
# %bb.32:                               # %_ZN8pybind116objectD2Ev.exit15.i
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB172_39:
.Ltmp2653:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB172_38:
.Ltmp2650:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB172_37:
.Ltmp2647:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end172:
	.size	_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_NSD_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSH_, .Lfunc_end172-_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_NSD_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSH_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table172:
.Lexception93:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase63-.Lttbaseref63
.Lttbaseref63:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end93-.Lcst_begin93
.Lcst_begin93:
	.uleb128 .Ltmp2603-.Lfunc_begin93       # >> Call Site 1 <<
	.uleb128 .Ltmp2604-.Ltmp2603            #   Call between .Ltmp2603 and .Ltmp2604
	.uleb128 .Ltmp2644-.Lfunc_begin93       #     jumps to .Ltmp2644
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2605-.Lfunc_begin93       # >> Call Site 2 <<
	.uleb128 .Ltmp2608-.Ltmp2605            #   Call between .Ltmp2605 and .Ltmp2608
	.uleb128 .Ltmp2609-.Lfunc_begin93       #     jumps to .Ltmp2609
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2610-.Lfunc_begin93       # >> Call Site 3 <<
	.uleb128 .Ltmp2613-.Ltmp2610            #   Call between .Ltmp2610 and .Ltmp2613
	.uleb128 .Ltmp2614-.Lfunc_begin93       #     jumps to .Ltmp2614
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2615-.Lfunc_begin93       # >> Call Site 4 <<
	.uleb128 .Ltmp2616-.Ltmp2615            #   Call between .Ltmp2615 and .Ltmp2616
	.uleb128 .Ltmp2617-.Lfunc_begin93       #     jumps to .Ltmp2617
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2627-.Lfunc_begin93       # >> Call Site 5 <<
	.uleb128 .Ltmp2628-.Ltmp2627            #   Call between .Ltmp2627 and .Ltmp2628
	.uleb128 .Ltmp2629-.Lfunc_begin93       #     jumps to .Ltmp2629
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2630-.Lfunc_begin93       # >> Call Site 6 <<
	.uleb128 .Ltmp2631-.Ltmp2630            #   Call between .Ltmp2630 and .Ltmp2631
	.uleb128 .Ltmp2632-.Lfunc_begin93       #     jumps to .Ltmp2632
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2633-.Lfunc_begin93       # >> Call Site 7 <<
	.uleb128 .Ltmp2634-.Ltmp2633            #   Call between .Ltmp2633 and .Ltmp2634
	.uleb128 .Ltmp2635-.Lfunc_begin93       #     jumps to .Ltmp2635
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2636-.Lfunc_begin93       # >> Call Site 8 <<
	.uleb128 .Ltmp2643-.Ltmp2636            #   Call between .Ltmp2636 and .Ltmp2643
	.uleb128 .Ltmp2644-.Lfunc_begin93       #     jumps to .Ltmp2644
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2654-.Lfunc_begin93       # >> Call Site 9 <<
	.uleb128 .Ltmp2655-.Ltmp2654            #   Call between .Ltmp2654 and .Ltmp2655
	.uleb128 .Ltmp2656-.Lfunc_begin93       #     jumps to .Ltmp2656
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2657-.Lfunc_begin93       # >> Call Site 10 <<
	.uleb128 .Ltmp2658-.Ltmp2657            #   Call between .Ltmp2657 and .Ltmp2658
	.uleb128 .Ltmp2659-.Lfunc_begin93       #     jumps to .Ltmp2659
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2660-.Lfunc_begin93       # >> Call Site 11 <<
	.uleb128 .Ltmp2661-.Ltmp2660            #   Call between .Ltmp2660 and .Ltmp2661
	.uleb128 .Ltmp2662-.Lfunc_begin93       #     jumps to .Ltmp2662
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2618-.Lfunc_begin93       # >> Call Site 12 <<
	.uleb128 .Ltmp2619-.Ltmp2618            #   Call between .Ltmp2618 and .Ltmp2619
	.uleb128 .Ltmp2620-.Lfunc_begin93       #     jumps to .Ltmp2620
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2621-.Lfunc_begin93       # >> Call Site 13 <<
	.uleb128 .Ltmp2622-.Ltmp2621            #   Call between .Ltmp2621 and .Ltmp2622
	.uleb128 .Ltmp2623-.Lfunc_begin93       #     jumps to .Ltmp2623
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2624-.Lfunc_begin93       # >> Call Site 14 <<
	.uleb128 .Ltmp2625-.Ltmp2624            #   Call between .Ltmp2624 and .Ltmp2625
	.uleb128 .Ltmp2626-.Lfunc_begin93       #     jumps to .Ltmp2626
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2645-.Lfunc_begin93       # >> Call Site 15 <<
	.uleb128 .Ltmp2646-.Ltmp2645            #   Call between .Ltmp2645 and .Ltmp2646
	.uleb128 .Ltmp2647-.Lfunc_begin93       #     jumps to .Ltmp2647
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2648-.Lfunc_begin93       # >> Call Site 16 <<
	.uleb128 .Ltmp2649-.Ltmp2648            #   Call between .Ltmp2648 and .Ltmp2649
	.uleb128 .Ltmp2650-.Lfunc_begin93       #     jumps to .Ltmp2650
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2651-.Lfunc_begin93       # >> Call Site 17 <<
	.uleb128 .Ltmp2652-.Ltmp2651            #   Call between .Ltmp2651 and .Ltmp2652
	.uleb128 .Ltmp2653-.Lfunc_begin93       #     jumps to .Ltmp2653
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2652-.Lfunc_begin93       # >> Call Site 18 <<
	.uleb128 .Lfunc_end172-.Ltmp2652        #   Call between .Ltmp2652 and .Lfunc_end172
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end93:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase63:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev,"axG",@progbits,_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev,comdat
	.hidden	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev # -- Begin function _ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev
	.weak	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev,@function
_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev: # @_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev
.Lfunc_begin94:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception94
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	addq	$16, %rdi
.Ltmp2663:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2664:
# %bb.1:                                # %_ZNSt10_Head_baseILm0EN8pybind116detail11type_casterINS0_6objectEvEELb0EED2Ev.exit.i
	leaq	8(%rbx), %rdi
.Ltmp2666:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2667:
# %bb.2:                                # %_ZNSt10_Head_baseILm1EN8pybind116detail11type_casterINS0_6objectEvEELb0EED2Ev.exit.i.i
.Ltmp2669:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2670:
# %bb.3:                                # %_ZNSt11_Tuple_implILm0EJN8pybind116detail11type_casterINS0_6objectEvEES4_S4_EED2Ev.exit
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB173_6:
	.cfi_def_cfa_offset 16
.Ltmp2671:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB173_5:
.Ltmp2668:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB173_4:
.Ltmp2665:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end173:
	.size	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev, .Lfunc_end173-_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev,"aG",@progbits,_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table173:
.Lexception94:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase64-.Lttbaseref64
.Lttbaseref64:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end94-.Lcst_begin94
.Lcst_begin94:
	.uleb128 .Ltmp2663-.Lfunc_begin94       # >> Call Site 1 <<
	.uleb128 .Ltmp2664-.Ltmp2663            #   Call between .Ltmp2663 and .Ltmp2664
	.uleb128 .Ltmp2665-.Lfunc_begin94       #     jumps to .Ltmp2665
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2666-.Lfunc_begin94       # >> Call Site 2 <<
	.uleb128 .Ltmp2667-.Ltmp2666            #   Call between .Ltmp2666 and .Ltmp2667
	.uleb128 .Ltmp2668-.Lfunc_begin94       #     jumps to .Ltmp2668
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2669-.Lfunc_begin94       # >> Call Site 3 <<
	.uleb128 .Ltmp2670-.Ltmp2669            #   Call between .Ltmp2669 and .Ltmp2670
	.uleb128 .Ltmp2671-.Lfunc_begin94       #     jumps to .Ltmp2671
	.byte	1                               #   On action: 1
.Lcst_end94:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase64:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE,"axG",@progbits,_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE,comdat
	.hidden	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE # -- Begin function _ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE
	.weak	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE,@function
_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE: # @_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE
.Lfunc_begin95:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception95
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$24, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	8(%rsi), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.LBB174_15
# %bb.1:
	movq	%rsi, %r14
	movq	%rdi, %rbx
	leaq	16(%rdi), %r12
	movq	%rax, 8(%rsp)
	leaq	8(%rsp), %r15
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	cmpq	%r12, %r15
	je	.LBB174_3
# %bb.2:
	movq	(%r12), %rax
	movq	%rax, 16(%rsp)
	movq	8(%rsp), %rax
	movq	%rax, (%r12)
	movq	$0, 8(%rsp)
.Ltmp2672:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2673:
.LBB174_3:                              # %_ZN8pybind116objectaSEOS0_.exit.i
.Ltmp2675:
	leaq	8(%rsp), %r15
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2676:
# %bb.4:
	movq	8(%r14), %rax
	movq	8(%rax), %rax
	testq	%rax, %rax
	je	.LBB174_15
# %bb.5:
	leaq	8(%rbx), %r12
	movq	%rax, 8(%rsp)
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	cmpq	%r12, %r15
	je	.LBB174_7
# %bb.6:
	movq	(%r12), %rax
	movq	%rax, 16(%rsp)
	movq	8(%rsp), %rax
	movq	%rax, (%r12)
	movq	$0, 8(%rsp)
.Ltmp2678:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2679:
.LBB174_7:                              # %_ZN8pybind116objectaSEOS0_.exit.i13
.Ltmp2681:
	leaq	8(%rsp), %r15
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2682:
# %bb.8:
	movq	8(%r14), %rax
	movq	16(%rax), %rax
	testq	%rax, %rax
	je	.LBB174_15
# %bb.9:
	movq	%rax, 8(%rsp)
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	cmpq	%rbx, %r15
	je	.LBB174_11
# %bb.10:
	movq	(%rbx), %rax
	movq	%rax, 16(%rsp)
	movq	8(%rsp), %rax
	movq	%rax, (%rbx)
	movq	$0, 8(%rsp)
.Ltmp2684:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2685:
.LBB174_11:                             # %_ZN8pybind116objectaSEOS0_.exit.i19
.Ltmp2687:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2688:
# %bb.12:                               # %_ZN8pybind116objectD2Ev.exit.i20
	movb	$1, %al
	jmp	.LBB174_16
.LBB174_15:
	xorl	%eax, %eax
.LBB174_16:                             # %_ZN8pybind116detail15pyobject_casterINS_6objectEE4loadIS2_TnNSt9enable_ifIXsr3std10is_base_ofIS2_T_EE5valueEiE4typeELi0EEEbNS_6handleEb.exit21
                                        # kill: def $al killed $al killed $eax
	addq	$24, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB174_17:
	.cfi_def_cfa_offset 64
.Ltmp2686:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB174_18:
.Ltmp2689:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB174_19:
.Ltmp2680:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB174_20:
.Ltmp2683:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB174_21:
.Ltmp2674:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB174_22:
.Ltmp2677:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end174:
	.size	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE, .Lfunc_end174-_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE,"aG",@progbits,_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE,comdat
	.p2align	2, 0x0
GCC_except_table174:
.Lexception95:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase65-.Lttbaseref65
.Lttbaseref65:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end95-.Lcst_begin95
.Lcst_begin95:
	.uleb128 .Lfunc_begin95-.Lfunc_begin95  # >> Call Site 1 <<
	.uleb128 .Ltmp2672-.Lfunc_begin95       #   Call between .Lfunc_begin95 and .Ltmp2672
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2672-.Lfunc_begin95       # >> Call Site 2 <<
	.uleb128 .Ltmp2673-.Ltmp2672            #   Call between .Ltmp2672 and .Ltmp2673
	.uleb128 .Ltmp2674-.Lfunc_begin95       #     jumps to .Ltmp2674
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2675-.Lfunc_begin95       # >> Call Site 3 <<
	.uleb128 .Ltmp2676-.Ltmp2675            #   Call between .Ltmp2675 and .Ltmp2676
	.uleb128 .Ltmp2677-.Lfunc_begin95       #     jumps to .Ltmp2677
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2676-.Lfunc_begin95       # >> Call Site 4 <<
	.uleb128 .Ltmp2678-.Ltmp2676            #   Call between .Ltmp2676 and .Ltmp2678
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2678-.Lfunc_begin95       # >> Call Site 5 <<
	.uleb128 .Ltmp2679-.Ltmp2678            #   Call between .Ltmp2678 and .Ltmp2679
	.uleb128 .Ltmp2680-.Lfunc_begin95       #     jumps to .Ltmp2680
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2681-.Lfunc_begin95       # >> Call Site 6 <<
	.uleb128 .Ltmp2682-.Ltmp2681            #   Call between .Ltmp2681 and .Ltmp2682
	.uleb128 .Ltmp2683-.Lfunc_begin95       #     jumps to .Ltmp2683
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2682-.Lfunc_begin95       # >> Call Site 7 <<
	.uleb128 .Ltmp2684-.Ltmp2682            #   Call between .Ltmp2682 and .Ltmp2684
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2684-.Lfunc_begin95       # >> Call Site 8 <<
	.uleb128 .Ltmp2685-.Ltmp2684            #   Call between .Ltmp2684 and .Ltmp2685
	.uleb128 .Ltmp2686-.Lfunc_begin95       #     jumps to .Ltmp2686
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2687-.Lfunc_begin95       # >> Call Site 9 <<
	.uleb128 .Ltmp2688-.Ltmp2687            #   Call between .Ltmp2687 and .Ltmp2688
	.uleb128 .Ltmp2689-.Lfunc_begin95       #     jumps to .Ltmp2689
	.byte	1                               #   On action: 1
.Lcst_end95:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase65:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE,"axG",@progbits,_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE,comdat
	.weak	_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE # -- Begin function _ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE
	.p2align	4, 0x90
	.type	_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE,@function
_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE: # @_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE
.Lfunc_begin96:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception96
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$168, %rsp
	.cfi_def_cfa_offset 224
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbp
	movq	%rdi, 160(%rsp)                 # 8-byte Spill
	movq	(%rsi), %rdi
	leaq	.L.str.178(%rip), %rbx
	movq	%rbx, %rsi
	callq	PyObject_HasAttrString@PLT
	cmpl	$1, %eax
	jne	.LBB175_112
# %bb.1:
	movq	(%rbp), %rax
	movq	%rax, 136(%rsp)
	movq	%rbx, 144(%rsp)
	leaq	152(%rsp), %r12
	movq	$0, 152(%rsp)
.Ltmp2690:
	leaq	128(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp2691:
# %bb.2:                                # %.noexc
	movq	(%rax), %rax
	movq	%rax, 8(%rsp)
.Ltmp2692:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2693:
# %bb.3:                                # %.noexc62
	movq	8(%rsp), %rax
	movq	%rax, 56(%rsp)
	leaq	.L.str.95(%rip), %rax
	movq	%rax, 64(%rsp)
	movq	$0, 72(%rsp)
.Ltmp2695:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2696:
# %bb.4:
.Ltmp2698:
	leaq	72(%rsp), %r13
	leaq	48(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp2699:
# %bb.5:                                # %.noexc63
	leaq	24(%rsp), %r15
	movq	%r15, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp2701:
	leaq	8(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp2702:
# %bb.6:                                # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i.i
	leaq	96(%rsp), %rbx
	movq	%rbx, 80(%rsp)
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB175_7
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	movq	%rdi, 80(%rsp)
	movq	16(%rsp), %r14
	movq	24(%rsp), %rax
	movq	%rax, 96(%rsp)
	movq	%rbp, 120(%rsp)                 # 8-byte Spill
	movq	%r14, 88(%rsp)
	cmpq	$6, %r14
	jne	.LBB175_12
.LBB175_13:
	movl	$1936614740, %eax               # imm = 0x736E6554
	xorl	(%rdi), %eax
	movzwl	4(%rdi), %ecx
	xorl	$29295, %ecx                    # imm = 0x726F
	orl	%eax, %ecx
	sete	%bpl
	cmpq	%rbx, %rdi
	jne	.LBB175_15
	jmp	.LBB175_16
.LBB175_7:
	movq	16(%rsp), %r14
	leaq	1(%r14), %rdx
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	memcpy@PLT
	movq	%rbx, %rdi
	movq	%rbp, 120(%rsp)                 # 8-byte Spill
	movq	%r14, 88(%rsp)
	cmpq	$6, %r14
	je	.LBB175_13
.LBB175_12:
	xorl	%ebp, %ebp
	cmpq	%rbx, %rdi
	je	.LBB175_16
.LBB175_15:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB175_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
.Ltmp2710:
	movq	%r13, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2711:
# %bb.17:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit
.Ltmp2713:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2714:
# %bb.18:                               # %.critedge60
	testb	%bpl, %bpl
	movq	120(%rsp), %r14                 # 8-byte Reload
	je	.LBB175_112
# %bb.19:
	movq	(%r14), %rax
	movq	%rax, 16(%rsp)
	leaq	.L.str.180(%rip), %rax
	movq	%rax, 24(%rsp)
	leaq	32(%rsp), %r12
	movq	$0, 32(%rsp)
.Ltmp2719:
	leaq	80(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_
.Ltmp2720:
# %bb.20:
	movq	80(%rsp), %rax
	cmpq	$2, (%rax)
	jl	.LBB175_23
# %bb.21:
.Ltmp2724:
	leaq	48(%rsp), %rdi
	leaq	80(%rsp), %rsi
	callq	_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
.Ltmp2725:
# %bb.22:                               # %.noexc66
	movzbl	48(%rsp), %ebx
	jmp	.LBB175_25
.LBB175_23:
.Ltmp2722:
	leaq	80(%rsp), %rdi
	callq	_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
.Ltmp2723:
# %bb.24:
	movl	%eax, %ebx
.LBB175_25:                             # %_ZNO8pybind116object4castIbEET_v.exit
.Ltmp2733:
	leaq	80(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2734:
# %bb.26:                               # %_ZN8pybind116objectD2Ev.exit
.Ltmp2736:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2737:
# %bb.27:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit68
	testb	$1, %bl
	je	.LBB175_28
# %bb.40:
	movq	(%r14), %rax
	movq	%rax, 136(%rsp)
	leaq	.L.str.182(%rip), %rax
	movq	%rax, 144(%rsp)
	leaq	152(%rsp), %r12
	movq	$0, 152(%rsp)
.Ltmp2742:
	leaq	128(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp2743:
# %bb.41:                               # %.noexc75
	movq	(%rax), %rax
	movq	%rax, 8(%rsp)
.Ltmp2744:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2745:
# %bb.42:                               # %.noexc76
	movq	8(%rsp), %rax
	movq	%rax, 56(%rsp)
	leaq	.L.str.183(%rip), %rax
	movq	%rax, 64(%rsp)
	movq	$0, 72(%rsp)
.Ltmp2747:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2748:
# %bb.43:
.Ltmp2750:
	leaq	72(%rsp), %r13
	leaq	48(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp2751:
# %bb.44:                               # %.noexc84
	movq	%r15, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp2753:
	leaq	8(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp2754:
# %bb.45:                               # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i.i81
	leaq	96(%rsp), %rbx
	movq	%rbx, 80(%rsp)
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB175_46
# %bb.49:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i82
	movq	%rdi, 80(%rsp)
	movq	16(%rsp), %r14
	movq	24(%rsp), %rax
	movq	%rax, 96(%rsp)
	movq	%r14, 88(%rsp)
	cmpq	$3, %r14
	jne	.LBB175_51
.LBB175_52:
	movzwl	(%rdi), %eax
	xorl	$28771, %eax                    # imm = 0x7063
	movzbl	2(%rdi), %ecx
	xorl	$117, %ecx
	orw	%ax, %cx
	sete	%bpl
	cmpq	%rbx, %rdi
	jne	.LBB175_54
	jmp	.LBB175_55
.LBB175_46:
	movq	16(%rsp), %r14
	leaq	1(%r14), %rdx
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	memcpy@PLT
	movq	%rbx, %rdi
	movq	%r14, 88(%rsp)
	cmpq	$3, %r14
	je	.LBB175_52
.LBB175_51:
	xorl	%ebp, %ebp
	cmpq	%rbx, %rdi
	je	.LBB175_55
.LBB175_54:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i90
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB175_55:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit92
.Ltmp2762:
	movq	%r13, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2763:
# %bb.56:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit93
.Ltmp2765:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2766:
# %bb.57:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit94
	testb	%bpl, %bpl
	jne	.LBB175_58
# %bb.65:
	movups	.L__const._ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE.shape(%rip), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	120(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, 16(%rsp)
	leaq	.L.str.186(%rip), %rax
	movq	%rax, 24(%rsp)
	leaq	32(%rsp), %r15
	movq	$0, 32(%rsp)
.Ltmp2768:
	leaq	8(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp2769:
# %bb.66:                               # %.noexc98
	movq	(%rax), %rax
	movq	%rax, 48(%rsp)
.Ltmp2770:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2771:
# %bb.67:                               # %.noexc99
.Ltmp2773:
	leaq	128(%rsp), %rdi
	leaq	48(%rsp), %rsi
	callq	_ZN8pybind115tupleC2EONS_6objectE
.Ltmp2774:
# %bb.68:
.Ltmp2782:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2783:
# %bb.69:
.Ltmp2785:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2786:
# %bb.70:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit102
	movq	128(%rsp), %rdi
.Ltmp2788:
	callq	PyTuple_Size@PLT
.Ltmp2789:
# %bb.71:                               # %_ZNK8pybind115tuple4sizeEv.exit
	movq	%rax, %r12
	cmpq	$4, %rax
	ja	.LBB175_83
# %bb.72:                               # %.preheader
	testq	%r12, %r12
	je	.LBB175_93
# %bb.73:                               # %.lr.ph
	leaq	32(%rsp), %r15
	leaq	(,%r12,4), %rax
	negq	%rax
	leaq	(%rsp,%rax), %r14
	addq	$96, %r14
	xorl	%ebx, %ebx
	leaq	8(%rsp), %r13
	leaq	48(%rsp), %rbp
	.p2align	4, 0x90
.LBB175_74:                             # =>This Inner Loop Header: Depth=1
	movq	128(%rsp), %rax
	movq	%rax, 16(%rsp)
	movq	%rbx, 24(%rsp)
	movq	$0, 32(%rsp)
.Ltmp2790:
	movq	%r13, %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv
.Ltmp2791:
# %bb.75:                               # %.noexc107
                                        #   in Loop: Header=BB175_74 Depth=1
	movq	(%rax), %rax
	movq	%rax, 48(%rsp)
.Ltmp2792:
	movq	%rbp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2793:
# %bb.76:                               # %_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEEcvNS_6objectEEv.exit
                                        #   in Loop: Header=BB175_74 Depth=1
	movq	48(%rsp), %rax
	cmpq	$2, (%rax)
	jl	.LBB175_89
# %bb.77:                               #   in Loop: Header=BB175_74 Depth=1
.Ltmp2797:
	leaq	40(%rsp), %rdi
	movq	%rbp, %rsi
	callq	_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
.Ltmp2798:
# %bb.78:                               # %.noexc109
                                        #   in Loop: Header=BB175_74 Depth=1
	movl	40(%rsp), %eax
	jmp	.LBB175_90
	.p2align	4, 0x90
.LBB175_89:                             #   in Loop: Header=BB175_74 Depth=1
.Ltmp2795:
	movq	%rbp, %rdi
	callq	_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
.Ltmp2796:
.LBB175_90:                             # %_ZN8pybind114castIiEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS2_EE5valueES2_E4typeEONS_6objectE.exit
                                        #   in Loop: Header=BB175_74 Depth=1
	movl	%eax, (%r14,%rbx,4)
.Ltmp2806:
	movq	%rbp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2807:
# %bb.91:                               # %_ZN8pybind116objectD2Ev.exit111
                                        #   in Loop: Header=BB175_74 Depth=1
.Ltmp2809:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2810:
# %bb.92:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEED2Ev.exit
                                        #   in Loop: Header=BB175_74 Depth=1
	incq	%rbx
	cmpq	%rbx, %r12
	jne	.LBB175_74
.LBB175_93:                             # %._crit_edge
	movq	120(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, 16(%rsp)
	leaq	.L.str.188(%rip), %rax
	movq	%rax, 24(%rsp)
	leaq	32(%rsp), %r14
	movq	$0, 32(%rsp)
.Ltmp2812:
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_
.Ltmp2813:
# %bb.94:
	movq	40(%rsp), %rax
	cmpq	$2, (%rax)
	jl	.LBB175_101
# %bb.95:
.Ltmp2817:
	leaq	48(%rsp), %rdi
	leaq	40(%rsp), %rsi
	callq	_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
.Ltmp2818:
# %bb.96:                               # %.noexc116
	movq	48(%rsp), %rbx
	jmp	.LBB175_103
.LBB175_101:
.Ltmp2815:
	leaq	40(%rsp), %rdi
	callq	_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
.Ltmp2816:
# %bb.102:
	movq	%rax, %rbx
.LBB175_103:                            # %_ZNO8pybind116object4castImEET_v.exit
.Ltmp2826:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2827:
# %bb.104:                              # %_ZN8pybind116objectD2Ev.exit118
.Ltmp2829:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2830:
# %bb.105:
	movq	160(%rsp), %rax                 # 8-byte Reload
	movq	%rbx, (%rax)
	movq	%rax, %rbx
	movdqa	80(%rsp), %xmm0
	pshufd	$238, %xmm0, %xmm1              # xmm1 = xmm0[2,3,2,3]
	pxor	%xmm2, %xmm2
	pxor	%xmm3, %xmm3
	pcmpgtd	%xmm1, %xmm3
	punpckldq	%xmm3, %xmm1            # xmm1 = xmm1[0],xmm3[0],xmm1[1],xmm3[1]
	pcmpgtd	%xmm0, %xmm2
	punpckldq	%xmm2, %xmm0            # xmm0 = xmm0[0],xmm2[0],xmm0[1],xmm2[1]
	movdqu	%xmm0, 8(%rax)
	movdqu	%xmm1, 24(%rax)
.Ltmp2832:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2833:
# %bb.106:                              # %_ZN8pybind116objectD2Ev.exit120
	movq	%rbx, %rax
	addq	$168, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB175_112:                            # %.critedge60.thread
	.cfi_def_cfa_offset 224
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2716:
	leaq	.L.str.189(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZNSt13runtime_errorC1EPKc@PLT
.Ltmp2717:
	jmp	.LBB175_29
.LBB175_28:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2739:
	leaq	.L.str.181(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZNSt13runtime_errorC1EPKc@PLT
.Ltmp2740:
	jmp	.LBB175_29
.LBB175_58:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2844:
	leaq	.L.str.185(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZNSt13runtime_errorC1EPKc@PLT
.Ltmp2845:
.LBB175_29:
	movq	_ZTISt13runtime_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt13runtime_errorD1Ev@GOTPCREL(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.LBB175_83:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2835:
	leaq	.L.str.187(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZNSt13runtime_errorC1EPKc@PLT
.Ltmp2836:
# %bb.84:
.Ltmp2838:
	movq	_ZTISt13runtime_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt13runtime_errorD1Ev@GOTPCREL(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2839:
# %bb.116:
.LBB175_88:
.Ltmp2837:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB175_111
.LBB175_64:
.Ltmp2846:
	jmp	.LBB175_114
.LBB175_39:
.Ltmp2741:
	jmp	.LBB175_114
.LBB175_134:
.Ltmp2834:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_133:
.Ltmp2831:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_132:
.Ltmp2828:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_107:
.Ltmp2819:
	movq	%rax, %rbx
.Ltmp2820:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2821:
	jmp	.LBB175_110
.LBB175_108:
.Ltmp2822:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_109:
.Ltmp2814:
	movq	%rax, %rbx
.LBB175_110:                            # %_ZN8pybind116objectD2Ev.exit121
.Ltmp2823:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2824:
	jmp	.LBB175_111
.LBB175_135:
.Ltmp2825:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_82:
.Ltmp2787:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_79:
.Ltmp2784:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_81:
.Ltmp2775:
	movq	%rax, %rbx
.Ltmp2776:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2777:
	jmp	.LBB175_86
.LBB175_80:
.Ltmp2778:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_126:
.Ltmp2767:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_125:
.Ltmp2764:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_47:
.Ltmp2755:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB175_60
# %bb.48:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i.i.i78
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB175_60
.LBB175_59:
.Ltmp2752:
	movq	%rax, %rbx
.LBB175_60:                             # %.body85
.Ltmp2756:
	movq	%r13, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2757:
	jmp	.LBB175_63
.LBB175_61:
.Ltmp2758:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_124:
.Ltmp2749:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_121:
.Ltmp2738:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_120:
.Ltmp2735:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_35:
.Ltmp2726:
	movq	%rax, %rbx
.Ltmp2727:
	leaq	80(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2728:
	jmp	.LBB175_38
.LBB175_36:
.Ltmp2729:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_37:
.Ltmp2721:
	movq	%rax, %rbx
.LBB175_38:                             # %_ZN8pybind116objectD2Ev.exit71
.Ltmp2730:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2731:
	jmp	.LBB175_115
.LBB175_123:
.Ltmp2732:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_119:
.Ltmp2715:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_118:
.Ltmp2712:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_8:
.Ltmp2703:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB175_31
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB175_31
.LBB175_113:
.Ltmp2718:
.LBB175_114:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB175_30:
.Ltmp2700:
	movq	%rax, %rbx
.LBB175_31:                             # %.body
.Ltmp2704:
	movq	%r13, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2705:
	jmp	.LBB175_34
.LBB175_32:
.Ltmp2706:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_117:
.Ltmp2697:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_87:
.Ltmp2840:
	movq	%rax, %rbx
	jmp	.LBB175_111
.LBB175_85:
.Ltmp2772:
	movq	%rax, %rbx
.LBB175_86:                             # %.body100
.Ltmp2779:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2780:
	jmp	.LBB175_115
.LBB175_128:
.Ltmp2781:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_62:
.Ltmp2746:
	movq	%rax, %rbx
.LBB175_63:                             # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit95
.Ltmp2759:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2760:
	jmp	.LBB175_115
.LBB175_127:
.Ltmp2761:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_33:
.Ltmp2694:
	movq	%rax, %rbx
.LBB175_34:                             # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit69
.Ltmp2707:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2708:
	jmp	.LBB175_115
.LBB175_122:
.Ltmp2709:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_97:
.Ltmp2799:
	movq	%rax, %rbx
.Ltmp2800:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2801:
	jmp	.LBB175_100
.LBB175_98:
.Ltmp2802:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_129:
.Ltmp2808:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_130:
.Ltmp2811:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_99:
.Ltmp2794:
	movq	%rax, %rbx
.LBB175_100:                            # %_ZN8pybind116objectD2Ev.exit112
.Ltmp2803:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2804:
.LBB175_111:
.Ltmp2841:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2842:
.LBB175_115:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB175_136:
.Ltmp2843:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_131:
.Ltmp2805:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end175:
	.size	_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE, .Lfunc_end175-_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE,"aG",@progbits,_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE,comdat
	.p2align	2, 0x0
GCC_except_table175:
.Lexception96:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase66-.Lttbaseref66
.Lttbaseref66:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end96-.Lcst_begin96
.Lcst_begin96:
	.uleb128 .Lfunc_begin96-.Lfunc_begin96  # >> Call Site 1 <<
	.uleb128 .Ltmp2690-.Lfunc_begin96       #   Call between .Lfunc_begin96 and .Ltmp2690
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2690-.Lfunc_begin96       # >> Call Site 2 <<
	.uleb128 .Ltmp2693-.Ltmp2690            #   Call between .Ltmp2690 and .Ltmp2693
	.uleb128 .Ltmp2694-.Lfunc_begin96       #     jumps to .Ltmp2694
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2695-.Lfunc_begin96       # >> Call Site 3 <<
	.uleb128 .Ltmp2696-.Ltmp2695            #   Call between .Ltmp2695 and .Ltmp2696
	.uleb128 .Ltmp2697-.Lfunc_begin96       #     jumps to .Ltmp2697
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2698-.Lfunc_begin96       # >> Call Site 4 <<
	.uleb128 .Ltmp2699-.Ltmp2698            #   Call between .Ltmp2698 and .Ltmp2699
	.uleb128 .Ltmp2700-.Lfunc_begin96       #     jumps to .Ltmp2700
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2701-.Lfunc_begin96       # >> Call Site 5 <<
	.uleb128 .Ltmp2702-.Ltmp2701            #   Call between .Ltmp2701 and .Ltmp2702
	.uleb128 .Ltmp2703-.Lfunc_begin96       #     jumps to .Ltmp2703
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2702-.Lfunc_begin96       # >> Call Site 6 <<
	.uleb128 .Ltmp2710-.Ltmp2702            #   Call between .Ltmp2702 and .Ltmp2710
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2710-.Lfunc_begin96       # >> Call Site 7 <<
	.uleb128 .Ltmp2711-.Ltmp2710            #   Call between .Ltmp2710 and .Ltmp2711
	.uleb128 .Ltmp2712-.Lfunc_begin96       #     jumps to .Ltmp2712
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2713-.Lfunc_begin96       # >> Call Site 8 <<
	.uleb128 .Ltmp2714-.Ltmp2713            #   Call between .Ltmp2713 and .Ltmp2714
	.uleb128 .Ltmp2715-.Lfunc_begin96       #     jumps to .Ltmp2715
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2719-.Lfunc_begin96       # >> Call Site 9 <<
	.uleb128 .Ltmp2720-.Ltmp2719            #   Call between .Ltmp2719 and .Ltmp2720
	.uleb128 .Ltmp2721-.Lfunc_begin96       #     jumps to .Ltmp2721
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2724-.Lfunc_begin96       # >> Call Site 10 <<
	.uleb128 .Ltmp2723-.Ltmp2724            #   Call between .Ltmp2724 and .Ltmp2723
	.uleb128 .Ltmp2726-.Lfunc_begin96       #     jumps to .Ltmp2726
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2733-.Lfunc_begin96       # >> Call Site 11 <<
	.uleb128 .Ltmp2734-.Ltmp2733            #   Call between .Ltmp2733 and .Ltmp2734
	.uleb128 .Ltmp2735-.Lfunc_begin96       #     jumps to .Ltmp2735
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2736-.Lfunc_begin96       # >> Call Site 12 <<
	.uleb128 .Ltmp2737-.Ltmp2736            #   Call between .Ltmp2736 and .Ltmp2737
	.uleb128 .Ltmp2738-.Lfunc_begin96       #     jumps to .Ltmp2738
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2742-.Lfunc_begin96       # >> Call Site 13 <<
	.uleb128 .Ltmp2745-.Ltmp2742            #   Call between .Ltmp2742 and .Ltmp2745
	.uleb128 .Ltmp2746-.Lfunc_begin96       #     jumps to .Ltmp2746
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2747-.Lfunc_begin96       # >> Call Site 14 <<
	.uleb128 .Ltmp2748-.Ltmp2747            #   Call between .Ltmp2747 and .Ltmp2748
	.uleb128 .Ltmp2749-.Lfunc_begin96       #     jumps to .Ltmp2749
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2750-.Lfunc_begin96       # >> Call Site 15 <<
	.uleb128 .Ltmp2751-.Ltmp2750            #   Call between .Ltmp2750 and .Ltmp2751
	.uleb128 .Ltmp2752-.Lfunc_begin96       #     jumps to .Ltmp2752
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2753-.Lfunc_begin96       # >> Call Site 16 <<
	.uleb128 .Ltmp2754-.Ltmp2753            #   Call between .Ltmp2753 and .Ltmp2754
	.uleb128 .Ltmp2755-.Lfunc_begin96       #     jumps to .Ltmp2755
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2754-.Lfunc_begin96       # >> Call Site 17 <<
	.uleb128 .Ltmp2762-.Ltmp2754            #   Call between .Ltmp2754 and .Ltmp2762
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2762-.Lfunc_begin96       # >> Call Site 18 <<
	.uleb128 .Ltmp2763-.Ltmp2762            #   Call between .Ltmp2762 and .Ltmp2763
	.uleb128 .Ltmp2764-.Lfunc_begin96       #     jumps to .Ltmp2764
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2765-.Lfunc_begin96       # >> Call Site 19 <<
	.uleb128 .Ltmp2766-.Ltmp2765            #   Call between .Ltmp2765 and .Ltmp2766
	.uleb128 .Ltmp2767-.Lfunc_begin96       #     jumps to .Ltmp2767
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2768-.Lfunc_begin96       # >> Call Site 20 <<
	.uleb128 .Ltmp2771-.Ltmp2768            #   Call between .Ltmp2768 and .Ltmp2771
	.uleb128 .Ltmp2772-.Lfunc_begin96       #     jumps to .Ltmp2772
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2773-.Lfunc_begin96       # >> Call Site 21 <<
	.uleb128 .Ltmp2774-.Ltmp2773            #   Call between .Ltmp2773 and .Ltmp2774
	.uleb128 .Ltmp2775-.Lfunc_begin96       #     jumps to .Ltmp2775
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2782-.Lfunc_begin96       # >> Call Site 22 <<
	.uleb128 .Ltmp2783-.Ltmp2782            #   Call between .Ltmp2782 and .Ltmp2783
	.uleb128 .Ltmp2784-.Lfunc_begin96       #     jumps to .Ltmp2784
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2785-.Lfunc_begin96       # >> Call Site 23 <<
	.uleb128 .Ltmp2786-.Ltmp2785            #   Call between .Ltmp2785 and .Ltmp2786
	.uleb128 .Ltmp2787-.Lfunc_begin96       #     jumps to .Ltmp2787
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2788-.Lfunc_begin96       # >> Call Site 24 <<
	.uleb128 .Ltmp2789-.Ltmp2788            #   Call between .Ltmp2788 and .Ltmp2789
	.uleb128 .Ltmp2840-.Lfunc_begin96       #     jumps to .Ltmp2840
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2790-.Lfunc_begin96       # >> Call Site 25 <<
	.uleb128 .Ltmp2793-.Ltmp2790            #   Call between .Ltmp2790 and .Ltmp2793
	.uleb128 .Ltmp2794-.Lfunc_begin96       #     jumps to .Ltmp2794
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2797-.Lfunc_begin96       # >> Call Site 26 <<
	.uleb128 .Ltmp2796-.Ltmp2797            #   Call between .Ltmp2797 and .Ltmp2796
	.uleb128 .Ltmp2799-.Lfunc_begin96       #     jumps to .Ltmp2799
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2806-.Lfunc_begin96       # >> Call Site 27 <<
	.uleb128 .Ltmp2807-.Ltmp2806            #   Call between .Ltmp2806 and .Ltmp2807
	.uleb128 .Ltmp2808-.Lfunc_begin96       #     jumps to .Ltmp2808
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2809-.Lfunc_begin96       # >> Call Site 28 <<
	.uleb128 .Ltmp2810-.Ltmp2809            #   Call between .Ltmp2809 and .Ltmp2810
	.uleb128 .Ltmp2811-.Lfunc_begin96       #     jumps to .Ltmp2811
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2812-.Lfunc_begin96       # >> Call Site 29 <<
	.uleb128 .Ltmp2813-.Ltmp2812            #   Call between .Ltmp2812 and .Ltmp2813
	.uleb128 .Ltmp2814-.Lfunc_begin96       #     jumps to .Ltmp2814
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2817-.Lfunc_begin96       # >> Call Site 30 <<
	.uleb128 .Ltmp2816-.Ltmp2817            #   Call between .Ltmp2817 and .Ltmp2816
	.uleb128 .Ltmp2819-.Lfunc_begin96       #     jumps to .Ltmp2819
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2826-.Lfunc_begin96       # >> Call Site 31 <<
	.uleb128 .Ltmp2827-.Ltmp2826            #   Call between .Ltmp2826 and .Ltmp2827
	.uleb128 .Ltmp2828-.Lfunc_begin96       #     jumps to .Ltmp2828
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2829-.Lfunc_begin96       # >> Call Site 32 <<
	.uleb128 .Ltmp2830-.Ltmp2829            #   Call between .Ltmp2829 and .Ltmp2830
	.uleb128 .Ltmp2831-.Lfunc_begin96       #     jumps to .Ltmp2831
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2832-.Lfunc_begin96       # >> Call Site 33 <<
	.uleb128 .Ltmp2833-.Ltmp2832            #   Call between .Ltmp2832 and .Ltmp2833
	.uleb128 .Ltmp2834-.Lfunc_begin96       #     jumps to .Ltmp2834
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2833-.Lfunc_begin96       # >> Call Site 34 <<
	.uleb128 .Ltmp2716-.Ltmp2833            #   Call between .Ltmp2833 and .Ltmp2716
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2716-.Lfunc_begin96       # >> Call Site 35 <<
	.uleb128 .Ltmp2717-.Ltmp2716            #   Call between .Ltmp2716 and .Ltmp2717
	.uleb128 .Ltmp2718-.Lfunc_begin96       #     jumps to .Ltmp2718
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2717-.Lfunc_begin96       # >> Call Site 36 <<
	.uleb128 .Ltmp2739-.Ltmp2717            #   Call between .Ltmp2717 and .Ltmp2739
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2739-.Lfunc_begin96       # >> Call Site 37 <<
	.uleb128 .Ltmp2740-.Ltmp2739            #   Call between .Ltmp2739 and .Ltmp2740
	.uleb128 .Ltmp2741-.Lfunc_begin96       #     jumps to .Ltmp2741
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2740-.Lfunc_begin96       # >> Call Site 38 <<
	.uleb128 .Ltmp2844-.Ltmp2740            #   Call between .Ltmp2740 and .Ltmp2844
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2844-.Lfunc_begin96       # >> Call Site 39 <<
	.uleb128 .Ltmp2845-.Ltmp2844            #   Call between .Ltmp2844 and .Ltmp2845
	.uleb128 .Ltmp2846-.Lfunc_begin96       #     jumps to .Ltmp2846
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2845-.Lfunc_begin96       # >> Call Site 40 <<
	.uleb128 .Ltmp2835-.Ltmp2845            #   Call between .Ltmp2845 and .Ltmp2835
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2835-.Lfunc_begin96       # >> Call Site 41 <<
	.uleb128 .Ltmp2836-.Ltmp2835            #   Call between .Ltmp2835 and .Ltmp2836
	.uleb128 .Ltmp2837-.Lfunc_begin96       #     jumps to .Ltmp2837
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2838-.Lfunc_begin96       # >> Call Site 42 <<
	.uleb128 .Ltmp2839-.Ltmp2838            #   Call between .Ltmp2838 and .Ltmp2839
	.uleb128 .Ltmp2840-.Lfunc_begin96       #     jumps to .Ltmp2840
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2839-.Lfunc_begin96       # >> Call Site 43 <<
	.uleb128 .Ltmp2820-.Ltmp2839            #   Call between .Ltmp2839 and .Ltmp2820
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2820-.Lfunc_begin96       # >> Call Site 44 <<
	.uleb128 .Ltmp2821-.Ltmp2820            #   Call between .Ltmp2820 and .Ltmp2821
	.uleb128 .Ltmp2822-.Lfunc_begin96       #     jumps to .Ltmp2822
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2823-.Lfunc_begin96       # >> Call Site 45 <<
	.uleb128 .Ltmp2824-.Ltmp2823            #   Call between .Ltmp2823 and .Ltmp2824
	.uleb128 .Ltmp2825-.Lfunc_begin96       #     jumps to .Ltmp2825
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2776-.Lfunc_begin96       # >> Call Site 46 <<
	.uleb128 .Ltmp2777-.Ltmp2776            #   Call between .Ltmp2776 and .Ltmp2777
	.uleb128 .Ltmp2778-.Lfunc_begin96       #     jumps to .Ltmp2778
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2756-.Lfunc_begin96       # >> Call Site 47 <<
	.uleb128 .Ltmp2757-.Ltmp2756            #   Call between .Ltmp2756 and .Ltmp2757
	.uleb128 .Ltmp2758-.Lfunc_begin96       #     jumps to .Ltmp2758
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2727-.Lfunc_begin96       # >> Call Site 48 <<
	.uleb128 .Ltmp2728-.Ltmp2727            #   Call between .Ltmp2727 and .Ltmp2728
	.uleb128 .Ltmp2729-.Lfunc_begin96       #     jumps to .Ltmp2729
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2730-.Lfunc_begin96       # >> Call Site 49 <<
	.uleb128 .Ltmp2731-.Ltmp2730            #   Call between .Ltmp2730 and .Ltmp2731
	.uleb128 .Ltmp2732-.Lfunc_begin96       #     jumps to .Ltmp2732
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2731-.Lfunc_begin96       # >> Call Site 50 <<
	.uleb128 .Ltmp2704-.Ltmp2731            #   Call between .Ltmp2731 and .Ltmp2704
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2704-.Lfunc_begin96       # >> Call Site 51 <<
	.uleb128 .Ltmp2705-.Ltmp2704            #   Call between .Ltmp2704 and .Ltmp2705
	.uleb128 .Ltmp2706-.Lfunc_begin96       #     jumps to .Ltmp2706
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2779-.Lfunc_begin96       # >> Call Site 52 <<
	.uleb128 .Ltmp2780-.Ltmp2779            #   Call between .Ltmp2779 and .Ltmp2780
	.uleb128 .Ltmp2781-.Lfunc_begin96       #     jumps to .Ltmp2781
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2759-.Lfunc_begin96       # >> Call Site 53 <<
	.uleb128 .Ltmp2760-.Ltmp2759            #   Call between .Ltmp2759 and .Ltmp2760
	.uleb128 .Ltmp2761-.Lfunc_begin96       #     jumps to .Ltmp2761
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2707-.Lfunc_begin96       # >> Call Site 54 <<
	.uleb128 .Ltmp2708-.Ltmp2707            #   Call between .Ltmp2707 and .Ltmp2708
	.uleb128 .Ltmp2709-.Lfunc_begin96       #     jumps to .Ltmp2709
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2800-.Lfunc_begin96       # >> Call Site 55 <<
	.uleb128 .Ltmp2801-.Ltmp2800            #   Call between .Ltmp2800 and .Ltmp2801
	.uleb128 .Ltmp2802-.Lfunc_begin96       #     jumps to .Ltmp2802
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2803-.Lfunc_begin96       # >> Call Site 56 <<
	.uleb128 .Ltmp2804-.Ltmp2803            #   Call between .Ltmp2803 and .Ltmp2804
	.uleb128 .Ltmp2805-.Lfunc_begin96       #     jumps to .Ltmp2805
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2841-.Lfunc_begin96       # >> Call Site 57 <<
	.uleb128 .Ltmp2842-.Ltmp2841            #   Call between .Ltmp2841 and .Ltmp2842
	.uleb128 .Ltmp2843-.Lfunc_begin96       #     jumps to .Ltmp2843
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2842-.Lfunc_begin96       # >> Call Site 58 <<
	.uleb128 .Lfunc_end175-.Ltmp2842        #   Call between .Ltmp2842 and .Lfunc_end175
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end96:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase66:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE,"axG",@progbits,_ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE,comdat
	.weak	_ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE # -- Begin function _ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE
	.p2align	4, 0x90
	.type	_ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE,@function
_ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE: # @_ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE
.Lfunc_begin97:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception97
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$168, %rsp
	.cfi_def_cfa_offset 224
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbp
	movq	%rdi, 160(%rsp)                 # 8-byte Spill
	movq	(%rsi), %rdi
	leaq	.L.str.178(%rip), %rbx
	movq	%rbx, %rsi
	callq	PyObject_HasAttrString@PLT
	cmpl	$1, %eax
	jne	.LBB176_112
# %bb.1:
	movq	(%rbp), %rax
	movq	%rax, 136(%rsp)
	movq	%rbx, 144(%rsp)
	leaq	152(%rsp), %r12
	movq	$0, 152(%rsp)
.Ltmp2847:
	leaq	128(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp2848:
# %bb.2:                                # %.noexc
	movq	(%rax), %rax
	movq	%rax, 8(%rsp)
.Ltmp2849:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2850:
# %bb.3:                                # %.noexc62
	movq	8(%rsp), %rax
	movq	%rax, 56(%rsp)
	leaq	.L.str.95(%rip), %rax
	movq	%rax, 64(%rsp)
	movq	$0, 72(%rsp)
.Ltmp2852:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2853:
# %bb.4:
.Ltmp2855:
	leaq	72(%rsp), %r13
	leaq	48(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp2856:
# %bb.5:                                # %.noexc63
	leaq	24(%rsp), %r15
	movq	%r15, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp2858:
	leaq	8(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp2859:
# %bb.6:                                # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i.i
	leaq	96(%rsp), %rbx
	movq	%rbx, 80(%rsp)
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB176_7
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	movq	%rdi, 80(%rsp)
	movq	16(%rsp), %r14
	movq	24(%rsp), %rax
	movq	%rax, 96(%rsp)
	movq	%rbp, 120(%rsp)                 # 8-byte Spill
	movq	%r14, 88(%rsp)
	cmpq	$6, %r14
	jne	.LBB176_12
.LBB176_13:
	movl	$1936614740, %eax               # imm = 0x736E6554
	xorl	(%rdi), %eax
	movzwl	4(%rdi), %ecx
	xorl	$29295, %ecx                    # imm = 0x726F
	orl	%eax, %ecx
	sete	%bpl
	cmpq	%rbx, %rdi
	jne	.LBB176_15
	jmp	.LBB176_16
.LBB176_7:
	movq	16(%rsp), %r14
	leaq	1(%r14), %rdx
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	memcpy@PLT
	movq	%rbx, %rdi
	movq	%rbp, 120(%rsp)                 # 8-byte Spill
	movq	%r14, 88(%rsp)
	cmpq	$6, %r14
	je	.LBB176_13
.LBB176_12:
	xorl	%ebp, %ebp
	cmpq	%rbx, %rdi
	je	.LBB176_16
.LBB176_15:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB176_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
.Ltmp2867:
	movq	%r13, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2868:
# %bb.17:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit
.Ltmp2870:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2871:
# %bb.18:                               # %.critedge60
	testb	%bpl, %bpl
	movq	120(%rsp), %r14                 # 8-byte Reload
	je	.LBB176_112
# %bb.19:
	movq	(%r14), %rax
	movq	%rax, 16(%rsp)
	leaq	.L.str.180(%rip), %rax
	movq	%rax, 24(%rsp)
	leaq	32(%rsp), %r12
	movq	$0, 32(%rsp)
.Ltmp2876:
	leaq	80(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_
.Ltmp2877:
# %bb.20:
	movq	80(%rsp), %rax
	cmpq	$2, (%rax)
	jl	.LBB176_23
# %bb.21:
.Ltmp2881:
	leaq	48(%rsp), %rdi
	leaq	80(%rsp), %rsi
	callq	_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
.Ltmp2882:
# %bb.22:                               # %.noexc66
	movzbl	48(%rsp), %ebx
	jmp	.LBB176_25
.LBB176_23:
.Ltmp2879:
	leaq	80(%rsp), %rdi
	callq	_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
.Ltmp2880:
# %bb.24:
	movl	%eax, %ebx
.LBB176_25:                             # %_ZNO8pybind116object4castIbEET_v.exit
.Ltmp2890:
	leaq	80(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2891:
# %bb.26:                               # %_ZN8pybind116objectD2Ev.exit
.Ltmp2893:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2894:
# %bb.27:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit68
	testb	$1, %bl
	je	.LBB176_28
# %bb.40:
	movq	(%r14), %rax
	movq	%rax, 136(%rsp)
	leaq	.L.str.182(%rip), %rax
	movq	%rax, 144(%rsp)
	leaq	152(%rsp), %r12
	movq	$0, 152(%rsp)
.Ltmp2899:
	leaq	128(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp2900:
# %bb.41:                               # %.noexc75
	movq	(%rax), %rax
	movq	%rax, 8(%rsp)
.Ltmp2901:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2902:
# %bb.42:                               # %.noexc76
	movq	8(%rsp), %rax
	movq	%rax, 56(%rsp)
	leaq	.L.str.183(%rip), %rax
	movq	%rax, 64(%rsp)
	movq	$0, 72(%rsp)
.Ltmp2904:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2905:
# %bb.43:
.Ltmp2907:
	leaq	72(%rsp), %r13
	leaq	48(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp2908:
# %bb.44:                               # %.noexc84
	movq	%r15, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp2910:
	leaq	8(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp2911:
# %bb.45:                               # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i.i81
	leaq	96(%rsp), %rbx
	movq	%rbx, 80(%rsp)
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB176_46
# %bb.49:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i82
	movq	%rdi, 80(%rsp)
	movq	16(%rsp), %r14
	movq	24(%rsp), %rax
	movq	%rax, 96(%rsp)
	movq	%r14, 88(%rsp)
	cmpq	$3, %r14
	jne	.LBB176_51
.LBB176_52:
	movzwl	(%rdi), %eax
	xorl	$28771, %eax                    # imm = 0x7063
	movzbl	2(%rdi), %ecx
	xorl	$117, %ecx
	orw	%ax, %cx
	sete	%bpl
	cmpq	%rbx, %rdi
	jne	.LBB176_54
	jmp	.LBB176_55
.LBB176_46:
	movq	16(%rsp), %r14
	leaq	1(%r14), %rdx
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	memcpy@PLT
	movq	%rbx, %rdi
	movq	%r14, 88(%rsp)
	cmpq	$3, %r14
	je	.LBB176_52
.LBB176_51:
	xorl	%ebp, %ebp
	cmpq	%rbx, %rdi
	je	.LBB176_55
.LBB176_54:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i90
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB176_55:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit92
.Ltmp2919:
	movq	%r13, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2920:
# %bb.56:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit93
.Ltmp2922:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2923:
# %bb.57:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit94
	testb	%bpl, %bpl
	jne	.LBB176_58
# %bb.65:
	movups	.L__const._ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE.shape(%rip), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	120(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, 16(%rsp)
	leaq	.L.str.186(%rip), %rax
	movq	%rax, 24(%rsp)
	leaq	32(%rsp), %r15
	movq	$0, 32(%rsp)
.Ltmp2925:
	leaq	8(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp2926:
# %bb.66:                               # %.noexc98
	movq	(%rax), %rax
	movq	%rax, 48(%rsp)
.Ltmp2927:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2928:
# %bb.67:                               # %.noexc99
.Ltmp2930:
	leaq	128(%rsp), %rdi
	leaq	48(%rsp), %rsi
	callq	_ZN8pybind115tupleC2EONS_6objectE
.Ltmp2931:
# %bb.68:
.Ltmp2939:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2940:
# %bb.69:
.Ltmp2942:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2943:
# %bb.70:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit102
	movq	128(%rsp), %rdi
.Ltmp2945:
	callq	PyTuple_Size@PLT
.Ltmp2946:
# %bb.71:                               # %_ZNK8pybind115tuple4sizeEv.exit
	movq	%rax, %r12
	cmpq	$4, %rax
	ja	.LBB176_83
# %bb.72:                               # %.preheader
	testq	%r12, %r12
	je	.LBB176_93
# %bb.73:                               # %.lr.ph
	leaq	32(%rsp), %r15
	leaq	(,%r12,4), %rax
	negq	%rax
	leaq	(%rsp,%rax), %r14
	addq	$96, %r14
	xorl	%ebx, %ebx
	leaq	8(%rsp), %r13
	leaq	48(%rsp), %rbp
	.p2align	4, 0x90
.LBB176_74:                             # =>This Inner Loop Header: Depth=1
	movq	128(%rsp), %rax
	movq	%rax, 16(%rsp)
	movq	%rbx, 24(%rsp)
	movq	$0, 32(%rsp)
.Ltmp2947:
	movq	%r13, %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv
.Ltmp2948:
# %bb.75:                               # %.noexc107
                                        #   in Loop: Header=BB176_74 Depth=1
	movq	(%rax), %rax
	movq	%rax, 48(%rsp)
.Ltmp2949:
	movq	%rbp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2950:
# %bb.76:                               # %_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEEcvNS_6objectEEv.exit
                                        #   in Loop: Header=BB176_74 Depth=1
	movq	48(%rsp), %rax
	cmpq	$2, (%rax)
	jl	.LBB176_89
# %bb.77:                               #   in Loop: Header=BB176_74 Depth=1
.Ltmp2954:
	leaq	40(%rsp), %rdi
	movq	%rbp, %rsi
	callq	_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
.Ltmp2955:
# %bb.78:                               # %.noexc109
                                        #   in Loop: Header=BB176_74 Depth=1
	movl	40(%rsp), %eax
	jmp	.LBB176_90
	.p2align	4, 0x90
.LBB176_89:                             #   in Loop: Header=BB176_74 Depth=1
.Ltmp2952:
	movq	%rbp, %rdi
	callq	_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
.Ltmp2953:
.LBB176_90:                             # %_ZN8pybind114castIiEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS2_EE5valueES2_E4typeEONS_6objectE.exit
                                        #   in Loop: Header=BB176_74 Depth=1
	movl	%eax, (%r14,%rbx,4)
.Ltmp2963:
	movq	%rbp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2964:
# %bb.91:                               # %_ZN8pybind116objectD2Ev.exit111
                                        #   in Loop: Header=BB176_74 Depth=1
.Ltmp2966:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2967:
# %bb.92:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEED2Ev.exit
                                        #   in Loop: Header=BB176_74 Depth=1
	incq	%rbx
	cmpq	%rbx, %r12
	jne	.LBB176_74
.LBB176_93:                             # %._crit_edge
	movq	120(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, 16(%rsp)
	leaq	.L.str.188(%rip), %rax
	movq	%rax, 24(%rsp)
	leaq	32(%rsp), %r14
	movq	$0, 32(%rsp)
.Ltmp2969:
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_
.Ltmp2970:
# %bb.94:
	movq	40(%rsp), %rax
	cmpq	$2, (%rax)
	jl	.LBB176_101
# %bb.95:
.Ltmp2974:
	leaq	48(%rsp), %rdi
	leaq	40(%rsp), %rsi
	callq	_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
.Ltmp2975:
# %bb.96:                               # %.noexc116
	movq	48(%rsp), %rbx
	jmp	.LBB176_103
.LBB176_101:
.Ltmp2972:
	leaq	40(%rsp), %rdi
	callq	_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
.Ltmp2973:
# %bb.102:
	movq	%rax, %rbx
.LBB176_103:                            # %_ZNO8pybind116object4castImEET_v.exit
.Ltmp2983:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2984:
# %bb.104:                              # %_ZN8pybind116objectD2Ev.exit118
.Ltmp2986:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2987:
# %bb.105:
	movq	160(%rsp), %rax                 # 8-byte Reload
	movq	%rbx, (%rax)
	movq	%rax, %rbx
	movdqa	80(%rsp), %xmm0
	pshufd	$238, %xmm0, %xmm1              # xmm1 = xmm0[2,3,2,3]
	pxor	%xmm2, %xmm2
	pxor	%xmm3, %xmm3
	pcmpgtd	%xmm1, %xmm3
	punpckldq	%xmm3, %xmm1            # xmm1 = xmm1[0],xmm3[0],xmm1[1],xmm3[1]
	pcmpgtd	%xmm0, %xmm2
	punpckldq	%xmm2, %xmm0            # xmm0 = xmm0[0],xmm2[0],xmm0[1],xmm2[1]
	movdqu	%xmm0, 8(%rax)
	movdqu	%xmm1, 24(%rax)
.Ltmp2989:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2990:
# %bb.106:                              # %_ZN8pybind116objectD2Ev.exit120
	movq	%rbx, %rax
	addq	$168, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB176_112:                            # %.critedge60.thread
	.cfi_def_cfa_offset 224
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2873:
	leaq	.L.str.189(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZNSt13runtime_errorC1EPKc@PLT
.Ltmp2874:
	jmp	.LBB176_29
.LBB176_28:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2896:
	leaq	.L.str.181(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZNSt13runtime_errorC1EPKc@PLT
.Ltmp2897:
	jmp	.LBB176_29
.LBB176_58:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp3001:
	leaq	.L.str.185(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZNSt13runtime_errorC1EPKc@PLT
.Ltmp3002:
.LBB176_29:
	movq	_ZTISt13runtime_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt13runtime_errorD1Ev@GOTPCREL(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.LBB176_83:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2992:
	leaq	.L.str.187(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZNSt13runtime_errorC1EPKc@PLT
.Ltmp2993:
# %bb.84:
.Ltmp2995:
	movq	_ZTISt13runtime_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt13runtime_errorD1Ev@GOTPCREL(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2996:
# %bb.116:
.LBB176_88:
.Ltmp2994:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB176_111
.LBB176_64:
.Ltmp3003:
	jmp	.LBB176_114
.LBB176_39:
.Ltmp2898:
	jmp	.LBB176_114
.LBB176_134:
.Ltmp2991:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_133:
.Ltmp2988:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_132:
.Ltmp2985:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_107:
.Ltmp2976:
	movq	%rax, %rbx
.Ltmp2977:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2978:
	jmp	.LBB176_110
.LBB176_108:
.Ltmp2979:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_109:
.Ltmp2971:
	movq	%rax, %rbx
.LBB176_110:                            # %_ZN8pybind116objectD2Ev.exit121
.Ltmp2980:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2981:
	jmp	.LBB176_111
.LBB176_135:
.Ltmp2982:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_82:
.Ltmp2944:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_79:
.Ltmp2941:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_81:
.Ltmp2932:
	movq	%rax, %rbx
.Ltmp2933:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2934:
	jmp	.LBB176_86
.LBB176_80:
.Ltmp2935:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_126:
.Ltmp2924:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_125:
.Ltmp2921:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_47:
.Ltmp2912:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB176_60
# %bb.48:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i.i.i78
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB176_60
.LBB176_59:
.Ltmp2909:
	movq	%rax, %rbx
.LBB176_60:                             # %.body85
.Ltmp2913:
	movq	%r13, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2914:
	jmp	.LBB176_63
.LBB176_61:
.Ltmp2915:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_124:
.Ltmp2906:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_121:
.Ltmp2895:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_120:
.Ltmp2892:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_35:
.Ltmp2883:
	movq	%rax, %rbx
.Ltmp2884:
	leaq	80(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2885:
	jmp	.LBB176_38
.LBB176_36:
.Ltmp2886:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_37:
.Ltmp2878:
	movq	%rax, %rbx
.LBB176_38:                             # %_ZN8pybind116objectD2Ev.exit71
.Ltmp2887:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2888:
	jmp	.LBB176_115
.LBB176_123:
.Ltmp2889:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_119:
.Ltmp2872:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_118:
.Ltmp2869:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_8:
.Ltmp2860:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB176_31
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB176_31
.LBB176_113:
.Ltmp2875:
.LBB176_114:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB176_30:
.Ltmp2857:
	movq	%rax, %rbx
.LBB176_31:                             # %.body
.Ltmp2861:
	movq	%r13, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2862:
	jmp	.LBB176_34
.LBB176_32:
.Ltmp2863:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_117:
.Ltmp2854:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_87:
.Ltmp2997:
	movq	%rax, %rbx
	jmp	.LBB176_111
.LBB176_85:
.Ltmp2929:
	movq	%rax, %rbx
.LBB176_86:                             # %.body100
.Ltmp2936:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2937:
	jmp	.LBB176_115
.LBB176_128:
.Ltmp2938:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_62:
.Ltmp2903:
	movq	%rax, %rbx
.LBB176_63:                             # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit95
.Ltmp2916:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2917:
	jmp	.LBB176_115
.LBB176_127:
.Ltmp2918:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_33:
.Ltmp2851:
	movq	%rax, %rbx
.LBB176_34:                             # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit69
.Ltmp2864:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2865:
	jmp	.LBB176_115
.LBB176_122:
.Ltmp2866:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_97:
.Ltmp2956:
	movq	%rax, %rbx
.Ltmp2957:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2958:
	jmp	.LBB176_100
.LBB176_98:
.Ltmp2959:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_129:
.Ltmp2965:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_130:
.Ltmp2968:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_99:
.Ltmp2951:
	movq	%rax, %rbx
.LBB176_100:                            # %_ZN8pybind116objectD2Ev.exit112
.Ltmp2960:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2961:
.LBB176_111:
.Ltmp2998:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2999:
.LBB176_115:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB176_136:
.Ltmp3000:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_131:
.Ltmp2962:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end176:
	.size	_ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE, .Lfunc_end176-_ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE,"aG",@progbits,_ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE,comdat
	.p2align	2, 0x0
GCC_except_table176:
.Lexception97:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase67-.Lttbaseref67
.Lttbaseref67:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end97-.Lcst_begin97
.Lcst_begin97:
	.uleb128 .Lfunc_begin97-.Lfunc_begin97  # >> Call Site 1 <<
	.uleb128 .Ltmp2847-.Lfunc_begin97       #   Call between .Lfunc_begin97 and .Ltmp2847
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2847-.Lfunc_begin97       # >> Call Site 2 <<
	.uleb128 .Ltmp2850-.Ltmp2847            #   Call between .Ltmp2847 and .Ltmp2850
	.uleb128 .Ltmp2851-.Lfunc_begin97       #     jumps to .Ltmp2851
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2852-.Lfunc_begin97       # >> Call Site 3 <<
	.uleb128 .Ltmp2853-.Ltmp2852            #   Call between .Ltmp2852 and .Ltmp2853
	.uleb128 .Ltmp2854-.Lfunc_begin97       #     jumps to .Ltmp2854
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2855-.Lfunc_begin97       # >> Call Site 4 <<
	.uleb128 .Ltmp2856-.Ltmp2855            #   Call between .Ltmp2855 and .Ltmp2856
	.uleb128 .Ltmp2857-.Lfunc_begin97       #     jumps to .Ltmp2857
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2858-.Lfunc_begin97       # >> Call Site 5 <<
	.uleb128 .Ltmp2859-.Ltmp2858            #   Call between .Ltmp2858 and .Ltmp2859
	.uleb128 .Ltmp2860-.Lfunc_begin97       #     jumps to .Ltmp2860
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2859-.Lfunc_begin97       # >> Call Site 6 <<
	.uleb128 .Ltmp2867-.Ltmp2859            #   Call between .Ltmp2859 and .Ltmp2867
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2867-.Lfunc_begin97       # >> Call Site 7 <<
	.uleb128 .Ltmp2868-.Ltmp2867            #   Call between .Ltmp2867 and .Ltmp2868
	.uleb128 .Ltmp2869-.Lfunc_begin97       #     jumps to .Ltmp2869
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2870-.Lfunc_begin97       # >> Call Site 8 <<
	.uleb128 .Ltmp2871-.Ltmp2870            #   Call between .Ltmp2870 and .Ltmp2871
	.uleb128 .Ltmp2872-.Lfunc_begin97       #     jumps to .Ltmp2872
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2876-.Lfunc_begin97       # >> Call Site 9 <<
	.uleb128 .Ltmp2877-.Ltmp2876            #   Call between .Ltmp2876 and .Ltmp2877
	.uleb128 .Ltmp2878-.Lfunc_begin97       #     jumps to .Ltmp2878
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2881-.Lfunc_begin97       # >> Call Site 10 <<
	.uleb128 .Ltmp2880-.Ltmp2881            #   Call between .Ltmp2881 and .Ltmp2880
	.uleb128 .Ltmp2883-.Lfunc_begin97       #     jumps to .Ltmp2883
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2890-.Lfunc_begin97       # >> Call Site 11 <<
	.uleb128 .Ltmp2891-.Ltmp2890            #   Call between .Ltmp2890 and .Ltmp2891
	.uleb128 .Ltmp2892-.Lfunc_begin97       #     jumps to .Ltmp2892
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2893-.Lfunc_begin97       # >> Call Site 12 <<
	.uleb128 .Ltmp2894-.Ltmp2893            #   Call between .Ltmp2893 and .Ltmp2894
	.uleb128 .Ltmp2895-.Lfunc_begin97       #     jumps to .Ltmp2895
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2899-.Lfunc_begin97       # >> Call Site 13 <<
	.uleb128 .Ltmp2902-.Ltmp2899            #   Call between .Ltmp2899 and .Ltmp2902
	.uleb128 .Ltmp2903-.Lfunc_begin97       #     jumps to .Ltmp2903
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2904-.Lfunc_begin97       # >> Call Site 14 <<
	.uleb128 .Ltmp2905-.Ltmp2904            #   Call between .Ltmp2904 and .Ltmp2905
	.uleb128 .Ltmp2906-.Lfunc_begin97       #     jumps to .Ltmp2906
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2907-.Lfunc_begin97       # >> Call Site 15 <<
	.uleb128 .Ltmp2908-.Ltmp2907            #   Call between .Ltmp2907 and .Ltmp2908
	.uleb128 .Ltmp2909-.Lfunc_begin97       #     jumps to .Ltmp2909
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2910-.Lfunc_begin97       # >> Call Site 16 <<
	.uleb128 .Ltmp2911-.Ltmp2910            #   Call between .Ltmp2910 and .Ltmp2911
	.uleb128 .Ltmp2912-.Lfunc_begin97       #     jumps to .Ltmp2912
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2911-.Lfunc_begin97       # >> Call Site 17 <<
	.uleb128 .Ltmp2919-.Ltmp2911            #   Call between .Ltmp2911 and .Ltmp2919
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2919-.Lfunc_begin97       # >> Call Site 18 <<
	.uleb128 .Ltmp2920-.Ltmp2919            #   Call between .Ltmp2919 and .Ltmp2920
	.uleb128 .Ltmp2921-.Lfunc_begin97       #     jumps to .Ltmp2921
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2922-.Lfunc_begin97       # >> Call Site 19 <<
	.uleb128 .Ltmp2923-.Ltmp2922            #   Call between .Ltmp2922 and .Ltmp2923
	.uleb128 .Ltmp2924-.Lfunc_begin97       #     jumps to .Ltmp2924
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2925-.Lfunc_begin97       # >> Call Site 20 <<
	.uleb128 .Ltmp2928-.Ltmp2925            #   Call between .Ltmp2925 and .Ltmp2928
	.uleb128 .Ltmp2929-.Lfunc_begin97       #     jumps to .Ltmp2929
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2930-.Lfunc_begin97       # >> Call Site 21 <<
	.uleb128 .Ltmp2931-.Ltmp2930            #   Call between .Ltmp2930 and .Ltmp2931
	.uleb128 .Ltmp2932-.Lfunc_begin97       #     jumps to .Ltmp2932
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2939-.Lfunc_begin97       # >> Call Site 22 <<
	.uleb128 .Ltmp2940-.Ltmp2939            #   Call between .Ltmp2939 and .Ltmp2940
	.uleb128 .Ltmp2941-.Lfunc_begin97       #     jumps to .Ltmp2941
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2942-.Lfunc_begin97       # >> Call Site 23 <<
	.uleb128 .Ltmp2943-.Ltmp2942            #   Call between .Ltmp2942 and .Ltmp2943
	.uleb128 .Ltmp2944-.Lfunc_begin97       #     jumps to .Ltmp2944
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2945-.Lfunc_begin97       # >> Call Site 24 <<
	.uleb128 .Ltmp2946-.Ltmp2945            #   Call between .Ltmp2945 and .Ltmp2946
	.uleb128 .Ltmp2997-.Lfunc_begin97       #     jumps to .Ltmp2997
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2947-.Lfunc_begin97       # >> Call Site 25 <<
	.uleb128 .Ltmp2950-.Ltmp2947            #   Call between .Ltmp2947 and .Ltmp2950
	.uleb128 .Ltmp2951-.Lfunc_begin97       #     jumps to .Ltmp2951
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2954-.Lfunc_begin97       # >> Call Site 26 <<
	.uleb128 .Ltmp2953-.Ltmp2954            #   Call between .Ltmp2954 and .Ltmp2953
	.uleb128 .Ltmp2956-.Lfunc_begin97       #     jumps to .Ltmp2956
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2963-.Lfunc_begin97       # >> Call Site 27 <<
	.uleb128 .Ltmp2964-.Ltmp2963            #   Call between .Ltmp2963 and .Ltmp2964
	.uleb128 .Ltmp2965-.Lfunc_begin97       #     jumps to .Ltmp2965
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2966-.Lfunc_begin97       # >> Call Site 28 <<
	.uleb128 .Ltmp2967-.Ltmp2966            #   Call between .Ltmp2966 and .Ltmp2967
	.uleb128 .Ltmp2968-.Lfunc_begin97       #     jumps to .Ltmp2968
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2969-.Lfunc_begin97       # >> Call Site 29 <<
	.uleb128 .Ltmp2970-.Ltmp2969            #   Call between .Ltmp2969 and .Ltmp2970
	.uleb128 .Ltmp2971-.Lfunc_begin97       #     jumps to .Ltmp2971
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2974-.Lfunc_begin97       # >> Call Site 30 <<
	.uleb128 .Ltmp2973-.Ltmp2974            #   Call between .Ltmp2974 and .Ltmp2973
	.uleb128 .Ltmp2976-.Lfunc_begin97       #     jumps to .Ltmp2976
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2983-.Lfunc_begin97       # >> Call Site 31 <<
	.uleb128 .Ltmp2984-.Ltmp2983            #   Call between .Ltmp2983 and .Ltmp2984
	.uleb128 .Ltmp2985-.Lfunc_begin97       #     jumps to .Ltmp2985
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2986-.Lfunc_begin97       # >> Call Site 32 <<
	.uleb128 .Ltmp2987-.Ltmp2986            #   Call between .Ltmp2986 and .Ltmp2987
	.uleb128 .Ltmp2988-.Lfunc_begin97       #     jumps to .Ltmp2988
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2989-.Lfunc_begin97       # >> Call Site 33 <<
	.uleb128 .Ltmp2990-.Ltmp2989            #   Call between .Ltmp2989 and .Ltmp2990
	.uleb128 .Ltmp2991-.Lfunc_begin97       #     jumps to .Ltmp2991
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2990-.Lfunc_begin97       # >> Call Site 34 <<
	.uleb128 .Ltmp2873-.Ltmp2990            #   Call between .Ltmp2990 and .Ltmp2873
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2873-.Lfunc_begin97       # >> Call Site 35 <<
	.uleb128 .Ltmp2874-.Ltmp2873            #   Call between .Ltmp2873 and .Ltmp2874
	.uleb128 .Ltmp2875-.Lfunc_begin97       #     jumps to .Ltmp2875
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2874-.Lfunc_begin97       # >> Call Site 36 <<
	.uleb128 .Ltmp2896-.Ltmp2874            #   Call between .Ltmp2874 and .Ltmp2896
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2896-.Lfunc_begin97       # >> Call Site 37 <<
	.uleb128 .Ltmp2897-.Ltmp2896            #   Call between .Ltmp2896 and .Ltmp2897
	.uleb128 .Ltmp2898-.Lfunc_begin97       #     jumps to .Ltmp2898
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2897-.Lfunc_begin97       # >> Call Site 38 <<
	.uleb128 .Ltmp3001-.Ltmp2897            #   Call between .Ltmp2897 and .Ltmp3001
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3001-.Lfunc_begin97       # >> Call Site 39 <<
	.uleb128 .Ltmp3002-.Ltmp3001            #   Call between .Ltmp3001 and .Ltmp3002
	.uleb128 .Ltmp3003-.Lfunc_begin97       #     jumps to .Ltmp3003
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3002-.Lfunc_begin97       # >> Call Site 40 <<
	.uleb128 .Ltmp2992-.Ltmp3002            #   Call between .Ltmp3002 and .Ltmp2992
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2992-.Lfunc_begin97       # >> Call Site 41 <<
	.uleb128 .Ltmp2993-.Ltmp2992            #   Call between .Ltmp2992 and .Ltmp2993
	.uleb128 .Ltmp2994-.Lfunc_begin97       #     jumps to .Ltmp2994
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2995-.Lfunc_begin97       # >> Call Site 42 <<
	.uleb128 .Ltmp2996-.Ltmp2995            #   Call between .Ltmp2995 and .Ltmp2996
	.uleb128 .Ltmp2997-.Lfunc_begin97       #     jumps to .Ltmp2997
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2996-.Lfunc_begin97       # >> Call Site 43 <<
	.uleb128 .Ltmp2977-.Ltmp2996            #   Call between .Ltmp2996 and .Ltmp2977
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2977-.Lfunc_begin97       # >> Call Site 44 <<
	.uleb128 .Ltmp2978-.Ltmp2977            #   Call between .Ltmp2977 and .Ltmp2978
	.uleb128 .Ltmp2979-.Lfunc_begin97       #     jumps to .Ltmp2979
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2980-.Lfunc_begin97       # >> Call Site 45 <<
	.uleb128 .Ltmp2981-.Ltmp2980            #   Call between .Ltmp2980 and .Ltmp2981
	.uleb128 .Ltmp2982-.Lfunc_begin97       #     jumps to .Ltmp2982
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2933-.Lfunc_begin97       # >> Call Site 46 <<
	.uleb128 .Ltmp2934-.Ltmp2933            #   Call between .Ltmp2933 and .Ltmp2934
	.uleb128 .Ltmp2935-.Lfunc_begin97       #     jumps to .Ltmp2935
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2913-.Lfunc_begin97       # >> Call Site 47 <<
	.uleb128 .Ltmp2914-.Ltmp2913            #   Call between .Ltmp2913 and .Ltmp2914
	.uleb128 .Ltmp2915-.Lfunc_begin97       #     jumps to .Ltmp2915
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2884-.Lfunc_begin97       # >> Call Site 48 <<
	.uleb128 .Ltmp2885-.Ltmp2884            #   Call between .Ltmp2884 and .Ltmp2885
	.uleb128 .Ltmp2886-.Lfunc_begin97       #     jumps to .Ltmp2886
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2887-.Lfunc_begin97       # >> Call Site 49 <<
	.uleb128 .Ltmp2888-.Ltmp2887            #   Call between .Ltmp2887 and .Ltmp2888
	.uleb128 .Ltmp2889-.Lfunc_begin97       #     jumps to .Ltmp2889
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2888-.Lfunc_begin97       # >> Call Site 50 <<
	.uleb128 .Ltmp2861-.Ltmp2888            #   Call between .Ltmp2888 and .Ltmp2861
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2861-.Lfunc_begin97       # >> Call Site 51 <<
	.uleb128 .Ltmp2862-.Ltmp2861            #   Call between .Ltmp2861 and .Ltmp2862
	.uleb128 .Ltmp2863-.Lfunc_begin97       #     jumps to .Ltmp2863
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2936-.Lfunc_begin97       # >> Call Site 52 <<
	.uleb128 .Ltmp2937-.Ltmp2936            #   Call between .Ltmp2936 and .Ltmp2937
	.uleb128 .Ltmp2938-.Lfunc_begin97       #     jumps to .Ltmp2938
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2916-.Lfunc_begin97       # >> Call Site 53 <<
	.uleb128 .Ltmp2917-.Ltmp2916            #   Call between .Ltmp2916 and .Ltmp2917
	.uleb128 .Ltmp2918-.Lfunc_begin97       #     jumps to .Ltmp2918
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2864-.Lfunc_begin97       # >> Call Site 54 <<
	.uleb128 .Ltmp2865-.Ltmp2864            #   Call between .Ltmp2864 and .Ltmp2865
	.uleb128 .Ltmp2866-.Lfunc_begin97       #     jumps to .Ltmp2866
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2957-.Lfunc_begin97       # >> Call Site 55 <<
	.uleb128 .Ltmp2958-.Ltmp2957            #   Call between .Ltmp2957 and .Ltmp2958
	.uleb128 .Ltmp2959-.Lfunc_begin97       #     jumps to .Ltmp2959
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2960-.Lfunc_begin97       # >> Call Site 56 <<
	.uleb128 .Ltmp2961-.Ltmp2960            #   Call between .Ltmp2960 and .Ltmp2961
	.uleb128 .Ltmp2962-.Lfunc_begin97       #     jumps to .Ltmp2962
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2998-.Lfunc_begin97       # >> Call Site 57 <<
	.uleb128 .Ltmp2999-.Ltmp2998            #   Call between .Ltmp2998 and .Ltmp2999
	.uleb128 .Ltmp3000-.Lfunc_begin97       #     jumps to .Ltmp3000
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2999-.Lfunc_begin97       # >> Call Site 58 <<
	.uleb128 .Lfunc_end176-.Ltmp2999        #   Call between .Ltmp2999 and .Lfunc_end176
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end97:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase67:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_,"axG",@progbits,_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_,comdat
	.hidden	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_ # -- Begin function _ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_
	.weak	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_
	.p2align	4, 0x90
	.type	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_,@function
_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_: # @_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_
.Lfunc_begin98:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception98
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	callq	PyGILState_Check@PLT
	testl	%eax, %eax
	je	.LBB177_18
# %bb.1:
	xorl	%edi, %edi
	callq	PyTuple_New@PLT
	movq	%rax, (%rsp)
	testq	%rax, %rax
	je	.LBB177_2
# %bb.6:                                # %_ZN8pybind116detail17collect_argumentsILNS_19return_value_policyE1EJEvEENS0_16simple_collectorIXT_EEEDpOT0_.exit
.Ltmp3004:
	movq	%r14, %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp3005:
# %bb.7:
	movq	(%rax), %rdi
	movq	(%rsp), %rsi
.Ltmp3006:
	callq	PyObject_CallObject@PLT
.Ltmp3007:
# %bb.8:                                # %.noexc
	testq	%rax, %rax
	je	.LBB177_9
# %bb.14:
	movq	%rax, (%rbx)
.Ltmp3008:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3009:
# %bb.15:                               # %_ZN8pybind116detail16simple_collectorILNS_19return_value_policyE1EED2Ev.exit
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB177_18:
	.cfi_def_cfa_offset 32
	leaq	.L.str.154(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.LBB177_2:
.Ltmp3020:
	leaq	.L.str.148(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp3021:
# %bb.3:
.LBB177_9:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp3011:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp3012:
# %bb.10:
.Ltmp3014:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp3015:
# %bb.11:                               # %.noexc2
.LBB177_12:
.Ltmp3013:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB177_17
.LBB177_13:
.Ltmp3010:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB177_4:
.Ltmp3022:
	movq	%rax, %rbx
.Ltmp3023:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3024:
	jmp	.LBB177_5
.LBB177_19:
.Ltmp3025:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB177_16:
.Ltmp3016:
	movq	%rax, %rbx
.LBB177_17:                             # %.body
.Ltmp3017:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3018:
.LBB177_5:                              # %common.resume
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB177_20:
.Ltmp3019:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end177:
	.size	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_, .Lfunc_end177-_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_,"aG",@progbits,_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_,comdat
	.p2align	2, 0x0
GCC_except_table177:
.Lexception98:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase68-.Lttbaseref68
.Lttbaseref68:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end98-.Lcst_begin98
.Lcst_begin98:
	.uleb128 .Lfunc_begin98-.Lfunc_begin98  # >> Call Site 1 <<
	.uleb128 .Ltmp3004-.Lfunc_begin98       #   Call between .Lfunc_begin98 and .Ltmp3004
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3004-.Lfunc_begin98       # >> Call Site 2 <<
	.uleb128 .Ltmp3007-.Ltmp3004            #   Call between .Ltmp3004 and .Ltmp3007
	.uleb128 .Ltmp3016-.Lfunc_begin98       #     jumps to .Ltmp3016
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3008-.Lfunc_begin98       # >> Call Site 3 <<
	.uleb128 .Ltmp3009-.Ltmp3008            #   Call between .Ltmp3008 and .Ltmp3009
	.uleb128 .Ltmp3010-.Lfunc_begin98       #     jumps to .Ltmp3010
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3009-.Lfunc_begin98       # >> Call Site 4 <<
	.uleb128 .Ltmp3020-.Ltmp3009            #   Call between .Ltmp3009 and .Ltmp3020
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3020-.Lfunc_begin98       # >> Call Site 5 <<
	.uleb128 .Ltmp3021-.Ltmp3020            #   Call between .Ltmp3020 and .Ltmp3021
	.uleb128 .Ltmp3022-.Lfunc_begin98       #     jumps to .Ltmp3022
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3021-.Lfunc_begin98       # >> Call Site 6 <<
	.uleb128 .Ltmp3011-.Ltmp3021            #   Call between .Ltmp3021 and .Ltmp3011
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3011-.Lfunc_begin98       # >> Call Site 7 <<
	.uleb128 .Ltmp3012-.Ltmp3011            #   Call between .Ltmp3011 and .Ltmp3012
	.uleb128 .Ltmp3013-.Lfunc_begin98       #     jumps to .Ltmp3013
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3014-.Lfunc_begin98       # >> Call Site 8 <<
	.uleb128 .Ltmp3015-.Ltmp3014            #   Call between .Ltmp3014 and .Ltmp3015
	.uleb128 .Ltmp3016-.Lfunc_begin98       #     jumps to .Ltmp3016
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3015-.Lfunc_begin98       # >> Call Site 9 <<
	.uleb128 .Ltmp3023-.Ltmp3015            #   Call between .Ltmp3015 and .Ltmp3023
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3023-.Lfunc_begin98       # >> Call Site 10 <<
	.uleb128 .Ltmp3024-.Ltmp3023            #   Call between .Ltmp3023 and .Ltmp3024
	.uleb128 .Ltmp3025-.Lfunc_begin98       #     jumps to .Ltmp3025
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3017-.Lfunc_begin98       # >> Call Site 11 <<
	.uleb128 .Ltmp3018-.Ltmp3017            #   Call between .Ltmp3017 and .Ltmp3018
	.uleb128 .Ltmp3019-.Lfunc_begin98       #     jumps to .Ltmp3019
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3018-.Lfunc_begin98       # >> Call Site 12 <<
	.uleb128 .Lfunc_end177-.Ltmp3018        #   Call between .Ltmp3018 and .Lfunc_end177
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end98:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase68:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,"axG",@progbits,_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,comdat
	.hidden	_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE # -- Begin function _ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
	.weak	_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
	.p2align	4, 0x90
	.type	_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,@function
_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE: # @_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
.Lfunc_begin99:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception99
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$208, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	(%rdi), %rax
	cmpq	$2, (%rax)
	jge	.LBB178_1
# %bb.35:
	leaq	16(%rsp), %rdi
	movq	%r14, %rsi
	callq	_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	movzbl	16(%rsp), %eax
	andb	$1, %al
	addq	$208, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB178_1:
	.cfi_def_cfa_offset 240
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
	movq	(%r14), %rax
	movq	8(%rax), %rsi
.Ltmp3026:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2ENS_6handleE
.Ltmp3027:
# %bb.2:
.Ltmp3029:
	leaq	80(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
.Ltmp3030:
# %bb.3:
.Ltmp3032:
	leaq	.L.str.48(%rip), %rsi
	leaq	112(%rsp), %rdi
	leaq	80(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp3033:
# %bb.4:
.Ltmp3035:
	leaq	.L.str.49(%rip), %rdx
	leaq	144(%rsp), %rdi
	leaq	112(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3036:
# %bb.5:
	movq	_ZTIb@GOTPCREL(%rip), %rax
	movq	8(%rax), %rax
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
.Ltmp3038:
	leaq	48(%rsp), %rdi
	callq	_ZN8pybind116detail13clean_type_idB5cxx11EPKc
.Ltmp3039:
# %bb.6:                                # %_ZN8pybind11L7type_idIbEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv.exit
.Ltmp3041:
	leaq	176(%rsp), %rdi
	leaq	144(%rsp), %rsi
	leaq	48(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp3042:
# %bb.7:
.Ltmp3044:
	leaq	.L.str.50(%rip), %rdx
	leaq	16(%rsp), %rdi
	leaq	176(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3045:
# %bb.8:
	movb	$1, %bpl
.Ltmp3047:
	leaq	16(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp3048:
# %bb.9:
	leaq	_ZTVN8pybind1110cast_errorE+16(%rip), %rax
	movq	%rax, (%rbx)
	xorl	%ebp, %ebp
.Ltmp3049:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp3050:
# %bb.33:
.LBB178_17:
.Ltmp3051:
	movq	%rax, %r14
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB178_18
# %bb.19:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB178_20
.LBB178_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit31
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB178_22
.LBB178_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit34
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB178_24
.LBB178_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB178_26
.LBB178_27:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB178_28
	jmp	.LBB178_29
.LBB178_18:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB178_21
	jmp	.LBB178_20
.LBB178_16:
.Ltmp3046:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB178_21
.LBB178_20:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i29
	movq	192(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB178_23
	jmp	.LBB178_22
.LBB178_15:
.Ltmp3043:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB178_23
.LBB178_22:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i32
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB178_25
	jmp	.LBB178_24
.LBB178_14:
.Ltmp3040:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB178_25
.LBB178_24:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	movq	160(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB178_27
	jmp	.LBB178_26
.LBB178_13:
.Ltmp3037:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB178_27
.LBB178_26:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	movq	128(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB178_28
	jmp	.LBB178_29
.LBB178_12:
.Ltmp3034:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB178_29
.LBB178_28:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i41
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB178_29
.LBB178_11:
.Ltmp3031:
	movq	%rax, %r14
	movb	$1, %bpl
.LBB178_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit43
.Ltmp3052:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3053:
# %bb.30:                               # %_ZN8pybind116objectD2Ev.exit
	testb	%bpl, %bpl
	jne	.LBB178_31
	jmp	.LBB178_32
.LBB178_34:
.Ltmp3054:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB178_10:                             # %_ZN8pybind116objectD2Ev.exit.thread
.Ltmp3028:
	movq	%rax, %r14
.LBB178_31:
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
.LBB178_32:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end178:
	.size	_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE, .Lfunc_end178-_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,"aG",@progbits,_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,comdat
	.p2align	2, 0x0
GCC_except_table178:
.Lexception99:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase69-.Lttbaseref69
.Lttbaseref69:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end99-.Lcst_begin99
.Lcst_begin99:
	.uleb128 .Lfunc_begin99-.Lfunc_begin99  # >> Call Site 1 <<
	.uleb128 .Ltmp3026-.Lfunc_begin99       #   Call between .Lfunc_begin99 and .Ltmp3026
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3026-.Lfunc_begin99       # >> Call Site 2 <<
	.uleb128 .Ltmp3027-.Ltmp3026            #   Call between .Ltmp3026 and .Ltmp3027
	.uleb128 .Ltmp3028-.Lfunc_begin99       #     jumps to .Ltmp3028
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3029-.Lfunc_begin99       # >> Call Site 3 <<
	.uleb128 .Ltmp3030-.Ltmp3029            #   Call between .Ltmp3029 and .Ltmp3030
	.uleb128 .Ltmp3031-.Lfunc_begin99       #     jumps to .Ltmp3031
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3032-.Lfunc_begin99       # >> Call Site 4 <<
	.uleb128 .Ltmp3033-.Ltmp3032            #   Call between .Ltmp3032 and .Ltmp3033
	.uleb128 .Ltmp3034-.Lfunc_begin99       #     jumps to .Ltmp3034
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3035-.Lfunc_begin99       # >> Call Site 5 <<
	.uleb128 .Ltmp3036-.Ltmp3035            #   Call between .Ltmp3035 and .Ltmp3036
	.uleb128 .Ltmp3037-.Lfunc_begin99       #     jumps to .Ltmp3037
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3038-.Lfunc_begin99       # >> Call Site 6 <<
	.uleb128 .Ltmp3039-.Ltmp3038            #   Call between .Ltmp3038 and .Ltmp3039
	.uleb128 .Ltmp3040-.Lfunc_begin99       #     jumps to .Ltmp3040
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3041-.Lfunc_begin99       # >> Call Site 7 <<
	.uleb128 .Ltmp3042-.Ltmp3041            #   Call between .Ltmp3041 and .Ltmp3042
	.uleb128 .Ltmp3043-.Lfunc_begin99       #     jumps to .Ltmp3043
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3044-.Lfunc_begin99       # >> Call Site 8 <<
	.uleb128 .Ltmp3045-.Ltmp3044            #   Call between .Ltmp3044 and .Ltmp3045
	.uleb128 .Ltmp3046-.Lfunc_begin99       #     jumps to .Ltmp3046
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3047-.Lfunc_begin99       # >> Call Site 9 <<
	.uleb128 .Ltmp3050-.Ltmp3047            #   Call between .Ltmp3047 and .Ltmp3050
	.uleb128 .Ltmp3051-.Lfunc_begin99       #     jumps to .Ltmp3051
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3052-.Lfunc_begin99       # >> Call Site 10 <<
	.uleb128 .Ltmp3053-.Ltmp3052            #   Call between .Ltmp3052 and .Ltmp3053
	.uleb128 .Ltmp3054-.Lfunc_begin99       #     jumps to .Ltmp3054
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3053-.Lfunc_begin99       # >> Call Site 11 <<
	.uleb128 .Lfunc_end178-.Ltmp3053        #   Call between .Ltmp3053 and .Lfunc_end178
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end99:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase69:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,"axG",@progbits,_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,comdat
	.hidden	_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE # -- Begin function _ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	.weak	_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,@function
_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE: # @_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
.Lfunc_begin100:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception100
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$208, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	(%rsi), %rax
	testq	%rax, %rax
	je	.LBB179_10
# %bb.1:
	cmpq	_Py_TrueStruct@GOTPCREL(%rip), %rax
	je	.LBB179_2
# %bb.4:
	cmpq	_Py_FalseStruct@GOTPCREL(%rip), %rax
	sete	%cl
	cmpq	_Py_NoneStruct@GOTPCREL(%rip), %rax
	sete	%dl
	orb	%cl, %dl
	je	.LBB179_6
# %bb.5:
	xorl	%eax, %eax
	jmp	.LBB179_3
.LBB179_2:
	movb	$1, %al
	jmp	.LBB179_3
.LBB179_6:
	movq	%rsi, %rbx
	movq	8(%rax), %rcx
	movq	96(%rcx), %rcx
	testq	%rcx, %rcx
	je	.LBB179_9
# %bb.7:
	movq	72(%rcx), %rcx
	testq	%rcx, %rcx
	je	.LBB179_9
# %bb.8:
	movq	%rdi, %r14
	movq	%rax, %rdi
	callq	*%rcx
	movq	%r14, %rdi
	cmpl	$2, %eax
	jae	.LBB179_9
.LBB179_3:                              # %.thread25.i
	movb	%al, (%rdi)
	movq	%rdi, %rax
	addq	$208, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB179_9:                              # %.thread30.i
	.cfi_def_cfa_offset 240
	callq	PyErr_Clear@PLT
	movq	%rbx, %rsi
.LBB179_10:
	movl	$16, %edi
	movq	%rsi, %r14
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
	movq	(%r14), %rax
	movq	8(%rax), %rsi
.Ltmp3055:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2ENS_6handleE
.Ltmp3056:
# %bb.11:
.Ltmp3058:
	leaq	48(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
.Ltmp3059:
# %bb.12:
.Ltmp3061:
	leaq	.L.str.42(%rip), %rsi
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp3062:
# %bb.13:
.Ltmp3064:
	leaq	.L.str.43(%rip), %rdx
	leaq	112(%rsp), %rdi
	leaq	80(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3065:
# %bb.14:
	movq	_ZTIb@GOTPCREL(%rip), %rax
	movq	8(%rax), %rax
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
.Ltmp3067:
	leaq	16(%rsp), %rdi
	callq	_ZN8pybind116detail13clean_type_idB5cxx11EPKc
.Ltmp3068:
# %bb.15:                               # %_ZN8pybind11L7type_idIbEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv.exit
.Ltmp3070:
	leaq	144(%rsp), %rdi
	leaq	112(%rsp), %rsi
	leaq	16(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp3071:
# %bb.16:
.Ltmp3073:
	leaq	.L.str.44(%rip), %rdx
	leaq	176(%rsp), %rdi
	leaq	144(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3074:
# %bb.17:
	movb	$1, %bpl
.Ltmp3076:
	leaq	176(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp3077:
# %bb.18:
	leaq	_ZTVN8pybind1110cast_errorE+16(%rip), %rax
	movq	%rax, (%rbx)
	xorl	%ebp, %ebp
.Ltmp3078:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp3079:
# %bb.42:
.LBB179_26:
.Ltmp3080:
	movq	%rax, %r14
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB179_27
# %bb.28:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB179_29
.LBB179_30:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit31
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB179_31
.LBB179_32:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit34
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB179_33
.LBB179_34:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB179_35
.LBB179_36:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB179_37
	jmp	.LBB179_38
.LBB179_27:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	192(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB179_30
	jmp	.LBB179_29
.LBB179_25:
.Ltmp3075:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB179_30
.LBB179_29:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i29
	movq	160(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB179_32
	jmp	.LBB179_31
.LBB179_24:
.Ltmp3072:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB179_32
.LBB179_31:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i32
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB179_34
	jmp	.LBB179_33
.LBB179_23:
.Ltmp3069:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB179_34
.LBB179_33:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	movq	128(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB179_36
	jmp	.LBB179_35
.LBB179_22:
.Ltmp3066:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB179_36
.LBB179_35:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB179_37
	jmp	.LBB179_38
.LBB179_21:
.Ltmp3063:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB179_38
.LBB179_37:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i41
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB179_38
.LBB179_20:
.Ltmp3060:
	movq	%rax, %r14
	movb	$1, %bpl
.LBB179_38:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit43
.Ltmp3081:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3082:
# %bb.39:                               # %_ZN8pybind116objectD2Ev.exit
	testb	%bpl, %bpl
	jne	.LBB179_40
	jmp	.LBB179_41
.LBB179_43:
.Ltmp3083:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB179_19:                             # %_ZN8pybind116objectD2Ev.exit.thread
.Ltmp3057:
	movq	%rax, %r14
.LBB179_40:
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
.LBB179_41:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end179:
	.size	_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE, .Lfunc_end179-_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,"aG",@progbits,_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,comdat
	.p2align	2, 0x0
GCC_except_table179:
.Lexception100:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase70-.Lttbaseref70
.Lttbaseref70:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end100-.Lcst_begin100
.Lcst_begin100:
	.uleb128 .Lfunc_begin100-.Lfunc_begin100 # >> Call Site 1 <<
	.uleb128 .Ltmp3055-.Lfunc_begin100      #   Call between .Lfunc_begin100 and .Ltmp3055
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3055-.Lfunc_begin100      # >> Call Site 2 <<
	.uleb128 .Ltmp3056-.Ltmp3055            #   Call between .Ltmp3055 and .Ltmp3056
	.uleb128 .Ltmp3057-.Lfunc_begin100      #     jumps to .Ltmp3057
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3058-.Lfunc_begin100      # >> Call Site 3 <<
	.uleb128 .Ltmp3059-.Ltmp3058            #   Call between .Ltmp3058 and .Ltmp3059
	.uleb128 .Ltmp3060-.Lfunc_begin100      #     jumps to .Ltmp3060
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3061-.Lfunc_begin100      # >> Call Site 4 <<
	.uleb128 .Ltmp3062-.Ltmp3061            #   Call between .Ltmp3061 and .Ltmp3062
	.uleb128 .Ltmp3063-.Lfunc_begin100      #     jumps to .Ltmp3063
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3064-.Lfunc_begin100      # >> Call Site 5 <<
	.uleb128 .Ltmp3065-.Ltmp3064            #   Call between .Ltmp3064 and .Ltmp3065
	.uleb128 .Ltmp3066-.Lfunc_begin100      #     jumps to .Ltmp3066
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3067-.Lfunc_begin100      # >> Call Site 6 <<
	.uleb128 .Ltmp3068-.Ltmp3067            #   Call between .Ltmp3067 and .Ltmp3068
	.uleb128 .Ltmp3069-.Lfunc_begin100      #     jumps to .Ltmp3069
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3070-.Lfunc_begin100      # >> Call Site 7 <<
	.uleb128 .Ltmp3071-.Ltmp3070            #   Call between .Ltmp3070 and .Ltmp3071
	.uleb128 .Ltmp3072-.Lfunc_begin100      #     jumps to .Ltmp3072
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3073-.Lfunc_begin100      # >> Call Site 8 <<
	.uleb128 .Ltmp3074-.Ltmp3073            #   Call between .Ltmp3073 and .Ltmp3074
	.uleb128 .Ltmp3075-.Lfunc_begin100      #     jumps to .Ltmp3075
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3076-.Lfunc_begin100      # >> Call Site 9 <<
	.uleb128 .Ltmp3079-.Ltmp3076            #   Call between .Ltmp3076 and .Ltmp3079
	.uleb128 .Ltmp3080-.Lfunc_begin100      #     jumps to .Ltmp3080
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3081-.Lfunc_begin100      # >> Call Site 10 <<
	.uleb128 .Ltmp3082-.Ltmp3081            #   Call between .Ltmp3081 and .Ltmp3082
	.uleb128 .Ltmp3083-.Lfunc_begin100      #     jumps to .Ltmp3083
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3082-.Lfunc_begin100      # >> Call Site 11 <<
	.uleb128 .Lfunc_end179-.Ltmp3082        #   Call between .Ltmp3082 and .Lfunc_end179
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end100:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase70:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind115tupleC2EONS_6objectE,"axG",@progbits,_ZN8pybind115tupleC2EONS_6objectE,comdat
	.hidden	_ZN8pybind115tupleC2EONS_6objectE # -- Begin function _ZN8pybind115tupleC2EONS_6objectE
	.weak	_ZN8pybind115tupleC2EONS_6objectE
	.p2align	4, 0x90
	.type	_ZN8pybind115tupleC2EONS_6objectE,@function
_ZN8pybind115tupleC2EONS_6objectE:      # @_ZN8pybind115tupleC2EONS_6objectE
.Lfunc_begin101:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception101
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	(%rsi), %rdi
	testq	%rdi, %rdi
	je	.LBB180_4
# %bb.1:                                # %_ZN8pybind115tuple6check_ENS_6handleE.exit
	movq	8(%rdi), %rax
	testb	$4, 171(%rax)
	jne	.LBB180_2
.LBB180_4:                              # %_ZN8pybind115tuple6check_ENS_6handleE.exit.thread
	callq	PySequence_Tuple@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB180_5
# %bb.3:
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB180_2:                              # %.thread
	.cfi_def_cfa_offset 32
	movq	$0, (%rsi)
	movq	%rdi, (%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB180_5:
	.cfi_def_cfa_offset 32
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp3084:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp3085:
# %bb.6:
.Ltmp3087:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp3088:
# %bb.11:
.LBB180_7:
.Ltmp3089:
	movq	%rax, %r14
	jmp	.LBB180_9
.LBB180_8:
.Ltmp3086:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
.LBB180_9:
.Ltmp3090:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3091:
# %bb.10:                               # %_ZN8pybind116objectD2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB180_12:
.Ltmp3092:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end180:
	.size	_ZN8pybind115tupleC2EONS_6objectE, .Lfunc_end180-_ZN8pybind115tupleC2EONS_6objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind115tupleC2EONS_6objectE,"aG",@progbits,_ZN8pybind115tupleC2EONS_6objectE,comdat
	.p2align	2, 0x0
GCC_except_table180:
.Lexception101:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase71-.Lttbaseref71
.Lttbaseref71:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end101-.Lcst_begin101
.Lcst_begin101:
	.uleb128 .Lfunc_begin101-.Lfunc_begin101 # >> Call Site 1 <<
	.uleb128 .Ltmp3084-.Lfunc_begin101      #   Call between .Lfunc_begin101 and .Ltmp3084
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3084-.Lfunc_begin101      # >> Call Site 2 <<
	.uleb128 .Ltmp3085-.Ltmp3084            #   Call between .Ltmp3084 and .Ltmp3085
	.uleb128 .Ltmp3086-.Lfunc_begin101      #     jumps to .Ltmp3086
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3087-.Lfunc_begin101      # >> Call Site 3 <<
	.uleb128 .Ltmp3088-.Ltmp3087            #   Call between .Ltmp3087 and .Ltmp3088
	.uleb128 .Ltmp3089-.Lfunc_begin101      #     jumps to .Ltmp3089
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3088-.Lfunc_begin101      # >> Call Site 4 <<
	.uleb128 .Ltmp3090-.Ltmp3088            #   Call between .Ltmp3088 and .Ltmp3090
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3090-.Lfunc_begin101      # >> Call Site 5 <<
	.uleb128 .Ltmp3091-.Ltmp3090            #   Call between .Ltmp3090 and .Ltmp3091
	.uleb128 .Ltmp3092-.Lfunc_begin101      #     jumps to .Ltmp3092
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3091-.Lfunc_begin101      # >> Call Site 6 <<
	.uleb128 .Lfunc_end180-.Ltmp3091        #   Call between .Ltmp3091 and .Lfunc_end180
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end101:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase71:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,"axG",@progbits,_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,comdat
	.hidden	_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE # -- Begin function _ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
	.weak	_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
	.p2align	4, 0x90
	.type	_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,@function
_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE: # @_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
.Lfunc_begin102:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception102
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$208, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	(%rdi), %rax
	cmpq	$2, (%rax)
	jge	.LBB181_1
# %bb.35:
	leaq	16(%rsp), %rdi
	movq	%r14, %rsi
	callq	_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	movl	16(%rsp), %eax
	addq	$208, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB181_1:
	.cfi_def_cfa_offset 240
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
	movq	(%r14), %rax
	movq	8(%rax), %rsi
.Ltmp3093:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2ENS_6handleE
.Ltmp3094:
# %bb.2:
.Ltmp3096:
	leaq	80(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
.Ltmp3097:
# %bb.3:
.Ltmp3099:
	leaq	.L.str.48(%rip), %rsi
	leaq	112(%rsp), %rdi
	leaq	80(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp3100:
# %bb.4:
.Ltmp3102:
	leaq	.L.str.49(%rip), %rdx
	leaq	144(%rsp), %rdi
	leaq	112(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3103:
# %bb.5:
	movq	_ZTIi@GOTPCREL(%rip), %rax
	movq	8(%rax), %rax
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
.Ltmp3105:
	leaq	48(%rsp), %rdi
	callq	_ZN8pybind116detail13clean_type_idB5cxx11EPKc
.Ltmp3106:
# %bb.6:                                # %_ZN8pybind11L7type_idIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv.exit
.Ltmp3108:
	leaq	176(%rsp), %rdi
	leaq	144(%rsp), %rsi
	leaq	48(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp3109:
# %bb.7:
.Ltmp3111:
	leaq	.L.str.50(%rip), %rdx
	leaq	16(%rsp), %rdi
	leaq	176(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3112:
# %bb.8:
	movb	$1, %bpl
.Ltmp3114:
	leaq	16(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp3115:
# %bb.9:
	leaq	_ZTVN8pybind1110cast_errorE+16(%rip), %rax
	movq	%rax, (%rbx)
	xorl	%ebp, %ebp
.Ltmp3116:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp3117:
# %bb.33:
.LBB181_17:
.Ltmp3118:
	movq	%rax, %r14
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB181_18
# %bb.19:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB181_20
.LBB181_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit31
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB181_22
.LBB181_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit34
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB181_24
.LBB181_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB181_26
.LBB181_27:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB181_28
	jmp	.LBB181_29
.LBB181_18:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB181_21
	jmp	.LBB181_20
.LBB181_16:
.Ltmp3113:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB181_21
.LBB181_20:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i29
	movq	192(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB181_23
	jmp	.LBB181_22
.LBB181_15:
.Ltmp3110:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB181_23
.LBB181_22:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i32
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB181_25
	jmp	.LBB181_24
.LBB181_14:
.Ltmp3107:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB181_25
.LBB181_24:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	movq	160(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB181_27
	jmp	.LBB181_26
.LBB181_13:
.Ltmp3104:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB181_27
.LBB181_26:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	movq	128(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB181_28
	jmp	.LBB181_29
.LBB181_12:
.Ltmp3101:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB181_29
.LBB181_28:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i41
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB181_29
.LBB181_11:
.Ltmp3098:
	movq	%rax, %r14
	movb	$1, %bpl
.LBB181_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit43
.Ltmp3119:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3120:
# %bb.30:                               # %_ZN8pybind116objectD2Ev.exit
	testb	%bpl, %bpl
	jne	.LBB181_31
	jmp	.LBB181_32
.LBB181_34:
.Ltmp3121:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB181_10:                             # %_ZN8pybind116objectD2Ev.exit.thread
.Ltmp3095:
	movq	%rax, %r14
.LBB181_31:
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
.LBB181_32:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end181:
	.size	_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE, .Lfunc_end181-_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,"aG",@progbits,_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,comdat
	.p2align	2, 0x0
GCC_except_table181:
.Lexception102:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase72-.Lttbaseref72
.Lttbaseref72:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end102-.Lcst_begin102
.Lcst_begin102:
	.uleb128 .Lfunc_begin102-.Lfunc_begin102 # >> Call Site 1 <<
	.uleb128 .Ltmp3093-.Lfunc_begin102      #   Call between .Lfunc_begin102 and .Ltmp3093
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3093-.Lfunc_begin102      # >> Call Site 2 <<
	.uleb128 .Ltmp3094-.Ltmp3093            #   Call between .Ltmp3093 and .Ltmp3094
	.uleb128 .Ltmp3095-.Lfunc_begin102      #     jumps to .Ltmp3095
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3096-.Lfunc_begin102      # >> Call Site 3 <<
	.uleb128 .Ltmp3097-.Ltmp3096            #   Call between .Ltmp3096 and .Ltmp3097
	.uleb128 .Ltmp3098-.Lfunc_begin102      #     jumps to .Ltmp3098
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3099-.Lfunc_begin102      # >> Call Site 4 <<
	.uleb128 .Ltmp3100-.Ltmp3099            #   Call between .Ltmp3099 and .Ltmp3100
	.uleb128 .Ltmp3101-.Lfunc_begin102      #     jumps to .Ltmp3101
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3102-.Lfunc_begin102      # >> Call Site 5 <<
	.uleb128 .Ltmp3103-.Ltmp3102            #   Call between .Ltmp3102 and .Ltmp3103
	.uleb128 .Ltmp3104-.Lfunc_begin102      #     jumps to .Ltmp3104
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3105-.Lfunc_begin102      # >> Call Site 6 <<
	.uleb128 .Ltmp3106-.Ltmp3105            #   Call between .Ltmp3105 and .Ltmp3106
	.uleb128 .Ltmp3107-.Lfunc_begin102      #     jumps to .Ltmp3107
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3108-.Lfunc_begin102      # >> Call Site 7 <<
	.uleb128 .Ltmp3109-.Ltmp3108            #   Call between .Ltmp3108 and .Ltmp3109
	.uleb128 .Ltmp3110-.Lfunc_begin102      #     jumps to .Ltmp3110
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3111-.Lfunc_begin102      # >> Call Site 8 <<
	.uleb128 .Ltmp3112-.Ltmp3111            #   Call between .Ltmp3111 and .Ltmp3112
	.uleb128 .Ltmp3113-.Lfunc_begin102      #     jumps to .Ltmp3113
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3114-.Lfunc_begin102      # >> Call Site 9 <<
	.uleb128 .Ltmp3117-.Ltmp3114            #   Call between .Ltmp3114 and .Ltmp3117
	.uleb128 .Ltmp3118-.Lfunc_begin102      #     jumps to .Ltmp3118
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3119-.Lfunc_begin102      # >> Call Site 10 <<
	.uleb128 .Ltmp3120-.Ltmp3119            #   Call between .Ltmp3119 and .Ltmp3120
	.uleb128 .Ltmp3121-.Lfunc_begin102      #     jumps to .Ltmp3121
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3120-.Lfunc_begin102      # >> Call Site 11 <<
	.uleb128 .Lfunc_end181-.Ltmp3120        #   Call between .Ltmp3120 and .Lfunc_end181
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end102:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase72:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,"axG",@progbits,_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,comdat
	.hidden	_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE # -- Begin function _ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	.weak	_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,@function
_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE: # @_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
.Lfunc_begin103:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception103
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$208, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	(%rsi), %rsi
	movl	$1, %edx
	callq	_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb
	testb	%al, %al
	je	.LBB182_1
# %bb.35:
	movq	%rbx, %rax
	addq	$208, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB182_1:
	.cfi_def_cfa_offset 240
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
	movq	(%r14), %rax
	movq	8(%rax), %rsi
.Ltmp3122:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2ENS_6handleE
.Ltmp3123:
# %bb.2:
.Ltmp3125:
	leaq	48(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
.Ltmp3126:
# %bb.3:
.Ltmp3128:
	leaq	.L.str.42(%rip), %rsi
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp3129:
# %bb.4:
.Ltmp3131:
	leaq	.L.str.43(%rip), %rdx
	leaq	112(%rsp), %rdi
	leaq	80(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3132:
# %bb.5:
	movq	_ZTIi@GOTPCREL(%rip), %rax
	movq	8(%rax), %rax
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
.Ltmp3134:
	leaq	16(%rsp), %rdi
	callq	_ZN8pybind116detail13clean_type_idB5cxx11EPKc
.Ltmp3135:
# %bb.6:                                # %_ZN8pybind11L7type_idIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv.exit
.Ltmp3137:
	leaq	144(%rsp), %rdi
	leaq	112(%rsp), %rsi
	leaq	16(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp3138:
# %bb.7:
.Ltmp3140:
	leaq	.L.str.44(%rip), %rdx
	leaq	176(%rsp), %rdi
	leaq	144(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3141:
# %bb.8:
	movb	$1, %bpl
.Ltmp3143:
	leaq	176(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp3144:
# %bb.9:
	leaq	_ZTVN8pybind1110cast_errorE+16(%rip), %rax
	movq	%rax, (%rbx)
	xorl	%ebp, %ebp
.Ltmp3145:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp3146:
# %bb.33:
.LBB182_17:
.Ltmp3147:
	movq	%rax, %r14
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB182_18
# %bb.19:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB182_20
.LBB182_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit31
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB182_22
.LBB182_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit34
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB182_24
.LBB182_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB182_26
.LBB182_27:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB182_28
	jmp	.LBB182_29
.LBB182_18:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	192(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB182_21
	jmp	.LBB182_20
.LBB182_16:
.Ltmp3142:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB182_21
.LBB182_20:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i29
	movq	160(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB182_23
	jmp	.LBB182_22
.LBB182_15:
.Ltmp3139:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB182_23
.LBB182_22:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i32
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB182_25
	jmp	.LBB182_24
.LBB182_14:
.Ltmp3136:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB182_25
.LBB182_24:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	movq	128(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB182_27
	jmp	.LBB182_26
.LBB182_13:
.Ltmp3133:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB182_27
.LBB182_26:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB182_28
	jmp	.LBB182_29
.LBB182_12:
.Ltmp3130:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB182_29
.LBB182_28:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i41
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB182_29
.LBB182_11:
.Ltmp3127:
	movq	%rax, %r14
	movb	$1, %bpl
.LBB182_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit43
.Ltmp3148:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3149:
# %bb.30:                               # %_ZN8pybind116objectD2Ev.exit
	testb	%bpl, %bpl
	jne	.LBB182_31
	jmp	.LBB182_32
.LBB182_34:
.Ltmp3150:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB182_10:                             # %_ZN8pybind116objectD2Ev.exit.thread
.Ltmp3124:
	movq	%rax, %r14
.LBB182_31:
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
.LBB182_32:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end182:
	.size	_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE, .Lfunc_end182-_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,"aG",@progbits,_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,comdat
	.p2align	2, 0x0
GCC_except_table182:
.Lexception103:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase73-.Lttbaseref73
.Lttbaseref73:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end103-.Lcst_begin103
.Lcst_begin103:
	.uleb128 .Lfunc_begin103-.Lfunc_begin103 # >> Call Site 1 <<
	.uleb128 .Ltmp3122-.Lfunc_begin103      #   Call between .Lfunc_begin103 and .Ltmp3122
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3122-.Lfunc_begin103      # >> Call Site 2 <<
	.uleb128 .Ltmp3123-.Ltmp3122            #   Call between .Ltmp3122 and .Ltmp3123
	.uleb128 .Ltmp3124-.Lfunc_begin103      #     jumps to .Ltmp3124
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3125-.Lfunc_begin103      # >> Call Site 3 <<
	.uleb128 .Ltmp3126-.Ltmp3125            #   Call between .Ltmp3125 and .Ltmp3126
	.uleb128 .Ltmp3127-.Lfunc_begin103      #     jumps to .Ltmp3127
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3128-.Lfunc_begin103      # >> Call Site 4 <<
	.uleb128 .Ltmp3129-.Ltmp3128            #   Call between .Ltmp3128 and .Ltmp3129
	.uleb128 .Ltmp3130-.Lfunc_begin103      #     jumps to .Ltmp3130
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3131-.Lfunc_begin103      # >> Call Site 5 <<
	.uleb128 .Ltmp3132-.Ltmp3131            #   Call between .Ltmp3131 and .Ltmp3132
	.uleb128 .Ltmp3133-.Lfunc_begin103      #     jumps to .Ltmp3133
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3134-.Lfunc_begin103      # >> Call Site 6 <<
	.uleb128 .Ltmp3135-.Ltmp3134            #   Call between .Ltmp3134 and .Ltmp3135
	.uleb128 .Ltmp3136-.Lfunc_begin103      #     jumps to .Ltmp3136
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3137-.Lfunc_begin103      # >> Call Site 7 <<
	.uleb128 .Ltmp3138-.Ltmp3137            #   Call between .Ltmp3137 and .Ltmp3138
	.uleb128 .Ltmp3139-.Lfunc_begin103      #     jumps to .Ltmp3139
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3140-.Lfunc_begin103      # >> Call Site 8 <<
	.uleb128 .Ltmp3141-.Ltmp3140            #   Call between .Ltmp3140 and .Ltmp3141
	.uleb128 .Ltmp3142-.Lfunc_begin103      #     jumps to .Ltmp3142
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3143-.Lfunc_begin103      # >> Call Site 9 <<
	.uleb128 .Ltmp3146-.Ltmp3143            #   Call between .Ltmp3143 and .Ltmp3146
	.uleb128 .Ltmp3147-.Lfunc_begin103      #     jumps to .Ltmp3147
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3148-.Lfunc_begin103      # >> Call Site 10 <<
	.uleb128 .Ltmp3149-.Ltmp3148            #   Call between .Ltmp3148 and .Ltmp3149
	.uleb128 .Ltmp3150-.Lfunc_begin103      #     jumps to .Ltmp3150
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3149-.Lfunc_begin103      # >> Call Site 11 <<
	.uleb128 .Lfunc_end182-.Ltmp3149        #   Call between .Ltmp3149 and .Lfunc_end182
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end103:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase73:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail11type_casterIivE4loadENS_6handleEb,"axG",@progbits,_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb,comdat
	.hidden	_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb # -- Begin function _ZN8pybind116detail11type_casterIivE4loadENS_6handleEb
	.weak	_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb
	.p2align	4, 0x90
	.type	_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb,@function
_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb: # @_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb
.Lfunc_begin104:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception104
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	testq	%rsi, %rsi
	je	.LBB183_20
# %bb.1:
	movq	%rsi, %r14
	movq	8(%rsi), %rax
	cmpq	PyFloat_Type@GOTPCREL(%rip), %rax
	je	.LBB183_20
# %bb.2:                                # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit
	movl	%edx, %ebp
	movq	%rdi, %rbx
	movq	PyFloat_Type@GOTPCREL(%rip), %rsi
	movq	%rax, %rdi
	callq	PyType_IsSubtype@PLT
	testl	%eax, %eax
	je	.LBB183_6
.LBB183_20:
	xorl	%ebx, %ebx
.LBB183_21:                             # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.thread
	movl	%ebx, %eax
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB183_6:
	.cfi_def_cfa_offset 64
	testb	%bpl, %bpl
	jne	.LBB183_9
# %bb.7:
	movq	8(%r14), %rax
	testb	$1, 171(%rax)
	jne	.LBB183_9
# %bb.8:
	movq	%r14, %rdi
	callq	PyIndex_Check@PLT
	testl	%eax, %eax
	je	.LBB183_20
.LBB183_9:
	movq	%r14, %rdi
	callq	PyLong_AsLong@PLT
	movq	%rax, %r15
	movb	$1, %r12b
	cmpq	$-1, %rax
	jne	.LBB183_11
# %bb.10:
	callq	PyErr_Occurred@PLT
	testq	%rax, %rax
	sete	%r12b
.LBB183_11:
	movslq	%r15d, %rax
	cmpq	%r15, %rax
	sete	%al
	testb	%r12b, %al
	je	.LBB183_13
# %bb.12:
	movl	%r15d, (%rbx)
	movb	$1, %bl
	jmp	.LBB183_21
.LBB183_13:
	callq	PyErr_Clear@PLT
	xorb	$1, %bpl
	orb	%bpl, %r12b
	jne	.LBB183_20
# %bb.15:
	movq	%r14, %rdi
	callq	PyNumber_Check@PLT
	testl	%eax, %eax
	je	.LBB183_20
# %bb.16:
	movq	%r14, %rdi
	callq	PyNumber_Long@PLT
	movq	%rax, %r14
	movq	%rax, 8(%rsp)
.Ltmp3151:
	callq	PyErr_Clear@PLT
.Ltmp3152:
# %bb.17:
.Ltmp3153:
	movq	%rbx, %rdi
	movq	%r14, %rsi
	xorl	%edx, %edx
	callq	_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb
.Ltmp3154:
# %bb.18:
.Ltmp3159:
	movl	%eax, %ebx
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3160:
	jmp	.LBB183_21
.LBB183_22:
.Ltmp3161:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB183_23:
.Ltmp3155:
	movq	%rax, %rbx
.Ltmp3156:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3157:
# %bb.24:                               # %_ZN8pybind116objectD2Ev.exit20
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB183_25:
.Ltmp3158:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end183:
	.size	_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb, .Lfunc_end183-_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail11type_casterIivE4loadENS_6handleEb,"aG",@progbits,_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb,comdat
	.p2align	2, 0x0
GCC_except_table183:
.Lexception104:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase74-.Lttbaseref74
.Lttbaseref74:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end104-.Lcst_begin104
.Lcst_begin104:
	.uleb128 .Lfunc_begin104-.Lfunc_begin104 # >> Call Site 1 <<
	.uleb128 .Ltmp3151-.Lfunc_begin104      #   Call between .Lfunc_begin104 and .Ltmp3151
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3151-.Lfunc_begin104      # >> Call Site 2 <<
	.uleb128 .Ltmp3154-.Ltmp3151            #   Call between .Ltmp3151 and .Ltmp3154
	.uleb128 .Ltmp3155-.Lfunc_begin104      #     jumps to .Ltmp3155
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3159-.Lfunc_begin104      # >> Call Site 3 <<
	.uleb128 .Ltmp3160-.Ltmp3159            #   Call between .Ltmp3159 and .Ltmp3160
	.uleb128 .Ltmp3161-.Lfunc_begin104      #     jumps to .Ltmp3161
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3156-.Lfunc_begin104      # >> Call Site 4 <<
	.uleb128 .Ltmp3157-.Ltmp3156            #   Call between .Ltmp3156 and .Ltmp3157
	.uleb128 .Ltmp3158-.Lfunc_begin104      #     jumps to .Ltmp3158
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3157-.Lfunc_begin104      # >> Call Site 5 <<
	.uleb128 .Lfunc_end183-.Ltmp3157        #   Call between .Ltmp3157 and .Lfunc_end183
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end104:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase74:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,"axG",@progbits,_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,comdat
	.hidden	_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE # -- Begin function _ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
	.weak	_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
	.p2align	4, 0x90
	.type	_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,@function
_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE: # @_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
.Lfunc_begin105:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception105
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$208, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	(%rdi), %rax
	cmpq	$2, (%rax)
	jge	.LBB184_1
# %bb.35:
	leaq	16(%rsp), %rdi
	movq	%r14, %rsi
	callq	_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	movq	16(%rsp), %rax
	addq	$208, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB184_1:
	.cfi_def_cfa_offset 240
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
	movq	(%r14), %rax
	movq	8(%rax), %rsi
.Ltmp3162:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2ENS_6handleE
.Ltmp3163:
# %bb.2:
.Ltmp3165:
	leaq	80(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
.Ltmp3166:
# %bb.3:
.Ltmp3168:
	leaq	.L.str.48(%rip), %rsi
	leaq	112(%rsp), %rdi
	leaq	80(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp3169:
# %bb.4:
.Ltmp3171:
	leaq	.L.str.49(%rip), %rdx
	leaq	144(%rsp), %rdi
	leaq	112(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3172:
# %bb.5:
	movq	_ZTIm@GOTPCREL(%rip), %rax
	movq	8(%rax), %rax
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
.Ltmp3174:
	leaq	48(%rsp), %rdi
	callq	_ZN8pybind116detail13clean_type_idB5cxx11EPKc
.Ltmp3175:
# %bb.6:                                # %_ZN8pybind11L7type_idImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv.exit
.Ltmp3177:
	leaq	176(%rsp), %rdi
	leaq	144(%rsp), %rsi
	leaq	48(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp3178:
# %bb.7:
.Ltmp3180:
	leaq	.L.str.50(%rip), %rdx
	leaq	16(%rsp), %rdi
	leaq	176(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3181:
# %bb.8:
	movb	$1, %bpl
.Ltmp3183:
	leaq	16(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp3184:
# %bb.9:
	leaq	_ZTVN8pybind1110cast_errorE+16(%rip), %rax
	movq	%rax, (%rbx)
	xorl	%ebp, %ebp
.Ltmp3185:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp3186:
# %bb.33:
.LBB184_17:
.Ltmp3187:
	movq	%rax, %r14
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB184_18
# %bb.19:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB184_20
.LBB184_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit31
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB184_22
.LBB184_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit34
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB184_24
.LBB184_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB184_26
.LBB184_27:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB184_28
	jmp	.LBB184_29
.LBB184_18:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB184_21
	jmp	.LBB184_20
.LBB184_16:
.Ltmp3182:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB184_21
.LBB184_20:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i29
	movq	192(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB184_23
	jmp	.LBB184_22
.LBB184_15:
.Ltmp3179:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB184_23
.LBB184_22:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i32
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB184_25
	jmp	.LBB184_24
.LBB184_14:
.Ltmp3176:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB184_25
.LBB184_24:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	movq	160(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB184_27
	jmp	.LBB184_26
.LBB184_13:
.Ltmp3173:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB184_27
.LBB184_26:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	movq	128(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB184_28
	jmp	.LBB184_29
.LBB184_12:
.Ltmp3170:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB184_29
.LBB184_28:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i41
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB184_29
.LBB184_11:
.Ltmp3167:
	movq	%rax, %r14
	movb	$1, %bpl
.LBB184_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit43
.Ltmp3188:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3189:
# %bb.30:                               # %_ZN8pybind116objectD2Ev.exit
	testb	%bpl, %bpl
	jne	.LBB184_31
	jmp	.LBB184_32
.LBB184_34:
.Ltmp3190:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB184_10:                             # %_ZN8pybind116objectD2Ev.exit.thread
.Ltmp3164:
	movq	%rax, %r14
.LBB184_31:
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
.LBB184_32:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end184:
	.size	_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE, .Lfunc_end184-_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,"aG",@progbits,_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,comdat
	.p2align	2, 0x0
GCC_except_table184:
.Lexception105:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase75-.Lttbaseref75
.Lttbaseref75:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end105-.Lcst_begin105
.Lcst_begin105:
	.uleb128 .Lfunc_begin105-.Lfunc_begin105 # >> Call Site 1 <<
	.uleb128 .Ltmp3162-.Lfunc_begin105      #   Call between .Lfunc_begin105 and .Ltmp3162
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3162-.Lfunc_begin105      # >> Call Site 2 <<
	.uleb128 .Ltmp3163-.Ltmp3162            #   Call between .Ltmp3162 and .Ltmp3163
	.uleb128 .Ltmp3164-.Lfunc_begin105      #     jumps to .Ltmp3164
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3165-.Lfunc_begin105      # >> Call Site 3 <<
	.uleb128 .Ltmp3166-.Ltmp3165            #   Call between .Ltmp3165 and .Ltmp3166
	.uleb128 .Ltmp3167-.Lfunc_begin105      #     jumps to .Ltmp3167
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3168-.Lfunc_begin105      # >> Call Site 4 <<
	.uleb128 .Ltmp3169-.Ltmp3168            #   Call between .Ltmp3168 and .Ltmp3169
	.uleb128 .Ltmp3170-.Lfunc_begin105      #     jumps to .Ltmp3170
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3171-.Lfunc_begin105      # >> Call Site 5 <<
	.uleb128 .Ltmp3172-.Ltmp3171            #   Call between .Ltmp3171 and .Ltmp3172
	.uleb128 .Ltmp3173-.Lfunc_begin105      #     jumps to .Ltmp3173
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3174-.Lfunc_begin105      # >> Call Site 6 <<
	.uleb128 .Ltmp3175-.Ltmp3174            #   Call between .Ltmp3174 and .Ltmp3175
	.uleb128 .Ltmp3176-.Lfunc_begin105      #     jumps to .Ltmp3176
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3177-.Lfunc_begin105      # >> Call Site 7 <<
	.uleb128 .Ltmp3178-.Ltmp3177            #   Call between .Ltmp3177 and .Ltmp3178
	.uleb128 .Ltmp3179-.Lfunc_begin105      #     jumps to .Ltmp3179
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3180-.Lfunc_begin105      # >> Call Site 8 <<
	.uleb128 .Ltmp3181-.Ltmp3180            #   Call between .Ltmp3180 and .Ltmp3181
	.uleb128 .Ltmp3182-.Lfunc_begin105      #     jumps to .Ltmp3182
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3183-.Lfunc_begin105      # >> Call Site 9 <<
	.uleb128 .Ltmp3186-.Ltmp3183            #   Call between .Ltmp3183 and .Ltmp3186
	.uleb128 .Ltmp3187-.Lfunc_begin105      #     jumps to .Ltmp3187
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3188-.Lfunc_begin105      # >> Call Site 10 <<
	.uleb128 .Ltmp3189-.Ltmp3188            #   Call between .Ltmp3188 and .Ltmp3189
	.uleb128 .Ltmp3190-.Lfunc_begin105      #     jumps to .Ltmp3190
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3189-.Lfunc_begin105      # >> Call Site 11 <<
	.uleb128 .Lfunc_end184-.Ltmp3189        #   Call between .Ltmp3189 and .Lfunc_end184
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end105:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase75:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,"axG",@progbits,_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,comdat
	.hidden	_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE # -- Begin function _ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	.weak	_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,@function
_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE: # @_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
.Lfunc_begin106:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception106
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$208, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	(%rsi), %rsi
	movl	$1, %edx
	callq	_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb
	testb	%al, %al
	je	.LBB185_1
# %bb.35:
	movq	%rbx, %rax
	addq	$208, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB185_1:
	.cfi_def_cfa_offset 240
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
	movq	(%r14), %rax
	movq	8(%rax), %rsi
.Ltmp3191:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2ENS_6handleE
.Ltmp3192:
# %bb.2:
.Ltmp3194:
	leaq	48(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
.Ltmp3195:
# %bb.3:
.Ltmp3197:
	leaq	.L.str.42(%rip), %rsi
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp3198:
# %bb.4:
.Ltmp3200:
	leaq	.L.str.43(%rip), %rdx
	leaq	112(%rsp), %rdi
	leaq	80(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3201:
# %bb.5:
	movq	_ZTIm@GOTPCREL(%rip), %rax
	movq	8(%rax), %rax
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
.Ltmp3203:
	leaq	16(%rsp), %rdi
	callq	_ZN8pybind116detail13clean_type_idB5cxx11EPKc
.Ltmp3204:
# %bb.6:                                # %_ZN8pybind11L7type_idImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv.exit
.Ltmp3206:
	leaq	144(%rsp), %rdi
	leaq	112(%rsp), %rsi
	leaq	16(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp3207:
# %bb.7:
.Ltmp3209:
	leaq	.L.str.44(%rip), %rdx
	leaq	176(%rsp), %rdi
	leaq	144(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3210:
# %bb.8:
	movb	$1, %bpl
.Ltmp3212:
	leaq	176(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp3213:
# %bb.9:
	leaq	_ZTVN8pybind1110cast_errorE+16(%rip), %rax
	movq	%rax, (%rbx)
	xorl	%ebp, %ebp
.Ltmp3214:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp3215:
# %bb.33:
.LBB185_17:
.Ltmp3216:
	movq	%rax, %r14
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB185_18
# %bb.19:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB185_20
.LBB185_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit31
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB185_22
.LBB185_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit34
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB185_24
.LBB185_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB185_26
.LBB185_27:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB185_28
	jmp	.LBB185_29
.LBB185_18:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	192(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB185_21
	jmp	.LBB185_20
.LBB185_16:
.Ltmp3211:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB185_21
.LBB185_20:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i29
	movq	160(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB185_23
	jmp	.LBB185_22
.LBB185_15:
.Ltmp3208:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB185_23
.LBB185_22:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i32
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB185_25
	jmp	.LBB185_24
.LBB185_14:
.Ltmp3205:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB185_25
.LBB185_24:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	movq	128(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB185_27
	jmp	.LBB185_26
.LBB185_13:
.Ltmp3202:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB185_27
.LBB185_26:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB185_28
	jmp	.LBB185_29
.LBB185_12:
.Ltmp3199:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB185_29
.LBB185_28:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i41
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB185_29
.LBB185_11:
.Ltmp3196:
	movq	%rax, %r14
	movb	$1, %bpl
.LBB185_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit43
.Ltmp3217:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3218:
# %bb.30:                               # %_ZN8pybind116objectD2Ev.exit
	testb	%bpl, %bpl
	jne	.LBB185_31
	jmp	.LBB185_32
.LBB185_34:
.Ltmp3219:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB185_10:                             # %_ZN8pybind116objectD2Ev.exit.thread
.Ltmp3193:
	movq	%rax, %r14
.LBB185_31:
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
.LBB185_32:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end185:
	.size	_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE, .Lfunc_end185-_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,"aG",@progbits,_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,comdat
	.p2align	2, 0x0
GCC_except_table185:
.Lexception106:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase76-.Lttbaseref76
.Lttbaseref76:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end106-.Lcst_begin106
.Lcst_begin106:
	.uleb128 .Lfunc_begin106-.Lfunc_begin106 # >> Call Site 1 <<
	.uleb128 .Ltmp3191-.Lfunc_begin106      #   Call between .Lfunc_begin106 and .Ltmp3191
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3191-.Lfunc_begin106      # >> Call Site 2 <<
	.uleb128 .Ltmp3192-.Ltmp3191            #   Call between .Ltmp3191 and .Ltmp3192
	.uleb128 .Ltmp3193-.Lfunc_begin106      #     jumps to .Ltmp3193
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3194-.Lfunc_begin106      # >> Call Site 3 <<
	.uleb128 .Ltmp3195-.Ltmp3194            #   Call between .Ltmp3194 and .Ltmp3195
	.uleb128 .Ltmp3196-.Lfunc_begin106      #     jumps to .Ltmp3196
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3197-.Lfunc_begin106      # >> Call Site 4 <<
	.uleb128 .Ltmp3198-.Ltmp3197            #   Call between .Ltmp3197 and .Ltmp3198
	.uleb128 .Ltmp3199-.Lfunc_begin106      #     jumps to .Ltmp3199
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3200-.Lfunc_begin106      # >> Call Site 5 <<
	.uleb128 .Ltmp3201-.Ltmp3200            #   Call between .Ltmp3200 and .Ltmp3201
	.uleb128 .Ltmp3202-.Lfunc_begin106      #     jumps to .Ltmp3202
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3203-.Lfunc_begin106      # >> Call Site 6 <<
	.uleb128 .Ltmp3204-.Ltmp3203            #   Call between .Ltmp3203 and .Ltmp3204
	.uleb128 .Ltmp3205-.Lfunc_begin106      #     jumps to .Ltmp3205
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3206-.Lfunc_begin106      # >> Call Site 7 <<
	.uleb128 .Ltmp3207-.Ltmp3206            #   Call between .Ltmp3206 and .Ltmp3207
	.uleb128 .Ltmp3208-.Lfunc_begin106      #     jumps to .Ltmp3208
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3209-.Lfunc_begin106      # >> Call Site 8 <<
	.uleb128 .Ltmp3210-.Ltmp3209            #   Call between .Ltmp3209 and .Ltmp3210
	.uleb128 .Ltmp3211-.Lfunc_begin106      #     jumps to .Ltmp3211
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3212-.Lfunc_begin106      # >> Call Site 9 <<
	.uleb128 .Ltmp3215-.Ltmp3212            #   Call between .Ltmp3212 and .Ltmp3215
	.uleb128 .Ltmp3216-.Lfunc_begin106      #     jumps to .Ltmp3216
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3217-.Lfunc_begin106      # >> Call Site 10 <<
	.uleb128 .Ltmp3218-.Ltmp3217            #   Call between .Ltmp3217 and .Ltmp3218
	.uleb128 .Ltmp3219-.Lfunc_begin106      #     jumps to .Ltmp3219
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3218-.Lfunc_begin106      # >> Call Site 11 <<
	.uleb128 .Lfunc_end185-.Ltmp3218        #   Call between .Ltmp3218 and .Lfunc_end185
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end106:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase76:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail11type_casterImvE4loadENS_6handleEb,"axG",@progbits,_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb,comdat
	.hidden	_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb # -- Begin function _ZN8pybind116detail11type_casterImvE4loadENS_6handleEb
	.weak	_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb
	.p2align	4, 0x90
	.type	_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb,@function
_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb: # @_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb
.Lfunc_begin107:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception107
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	testq	%rsi, %rsi
	je	.LBB186_4
# %bb.1:
	movq	%rsi, %r14
	movq	8(%rsi), %rax
	cmpq	PyFloat_Type@GOTPCREL(%rip), %rax
	je	.LBB186_4
# %bb.2:                                # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit
	movl	%edx, %ebp
	movq	%rdi, %rbx
	movq	PyFloat_Type@GOTPCREL(%rip), %rsi
	movq	%rax, %rdi
	callq	PyType_IsSubtype@PLT
	testl	%eax, %eax
	je	.LBB186_6
.LBB186_4:
	xorl	%ebx, %ebx
.LBB186_11:                             # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.thread
	movl	%ebx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB186_6:
	.cfi_def_cfa_offset 48
	testb	%bpl, %bpl
	jne	.LBB186_9
# %bb.7:
	movq	8(%r14), %rax
	testb	$1, 171(%rax)
	jne	.LBB186_9
# %bb.8:
	movq	%r14, %rdi
	callq	PyIndex_Check@PLT
	testl	%eax, %eax
	je	.LBB186_4
.LBB186_9:
	movq	%r14, %rdi
	callq	PyLong_AsUnsignedLong@PLT
	movq	%rax, %r15
	cmpq	$-1, %rax
	je	.LBB186_12
.LBB186_10:                             # %.critedge
	movq	%r15, (%rbx)
	movb	$1, %bl
	jmp	.LBB186_11
.LBB186_12:
	callq	PyErr_Occurred@PLT
	callq	PyErr_Occurred@PLT
	testq	%rax, %rax
	je	.LBB186_10
# %bb.13:
	callq	PyErr_Clear@PLT
	testb	%bpl, %bpl
	je	.LBB186_4
# %bb.14:
	movq	%r14, %rdi
	callq	PyNumber_Check@PLT
	testl	%eax, %eax
	je	.LBB186_4
# %bb.15:
	movq	%r14, %rdi
	callq	PyNumber_Long@PLT
	movq	%rax, %r14
	movq	%rax, (%rsp)
.Ltmp3220:
	callq	PyErr_Clear@PLT
.Ltmp3221:
# %bb.16:
.Ltmp3222:
	movq	%rbx, %rdi
	movq	%r14, %rsi
	xorl	%edx, %edx
	callq	_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb
.Ltmp3223:
# %bb.17:
.Ltmp3228:
	movl	%eax, %ebx
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3229:
	jmp	.LBB186_11
.LBB186_21:
.Ltmp3230:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB186_22:
.Ltmp3224:
	movq	%rax, %rbx
.Ltmp3225:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3226:
# %bb.23:                               # %_ZN8pybind116objectD2Ev.exit15
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB186_24:
.Ltmp3227:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end186:
	.size	_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb, .Lfunc_end186-_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail11type_casterImvE4loadENS_6handleEb,"aG",@progbits,_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb,comdat
	.p2align	2, 0x0
GCC_except_table186:
.Lexception107:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase77-.Lttbaseref77
.Lttbaseref77:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end107-.Lcst_begin107
.Lcst_begin107:
	.uleb128 .Lfunc_begin107-.Lfunc_begin107 # >> Call Site 1 <<
	.uleb128 .Ltmp3220-.Lfunc_begin107      #   Call between .Lfunc_begin107 and .Ltmp3220
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3220-.Lfunc_begin107      # >> Call Site 2 <<
	.uleb128 .Ltmp3223-.Ltmp3220            #   Call between .Ltmp3220 and .Ltmp3223
	.uleb128 .Ltmp3224-.Lfunc_begin107      #     jumps to .Ltmp3224
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3228-.Lfunc_begin107      # >> Call Site 3 <<
	.uleb128 .Ltmp3229-.Ltmp3228            #   Call between .Ltmp3228 and .Ltmp3229
	.uleb128 .Ltmp3230-.Lfunc_begin107      #     jumps to .Ltmp3230
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3225-.Lfunc_begin107      # >> Call Site 4 <<
	.uleb128 .Ltmp3226-.Ltmp3225            #   Call between .Ltmp3225 and .Ltmp3226
	.uleb128 .Ltmp3227-.Lfunc_begin107      #     jumps to .Ltmp3227
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3226-.Lfunc_begin107      # >> Call Site 5 <<
	.uleb128 .Lfunc_end186-.Ltmp3226        #   Call between .Ltmp3226 and .Lfunc_end186
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end107:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase77:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeES10_
	.type	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeES10_,@function
_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeES10_: # @_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeES10_
.Lfunc_begin108:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception108
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$40, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 16(%rsp)
	movq	$0, 32(%rsp)
.Ltmp3231:
	leaq	16(%rsp), %rdi
	movq	%r14, %rsi
	callq	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE
.Ltmp3232:
# %bb.1:                                # %_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE9load_argsERNS0_13function_callE.exit.i
	movl	$1, %ebx
	testb	%al, %al
	je	.LBB187_11
# %bb.2:
	movq	(%r14), %rax
	testb	$32, 89(%rax)
	jne	.LBB187_3
# %bb.8:
.Ltmp3243:
	leaq	16(%rsp), %rdi
	callq	_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_NSD_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSH_
.Ltmp3244:
# %bb.9:
	movq	_Py_NoneStruct@GOTPCREL(%rip), %rax
	movq	%rax, 8(%rsp)
.Ltmp3245:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp3246:
# %bb.10:                               # %.noexc.i
	movq	8(%rsp), %rbx
	movq	$0, 8(%rsp)
.Ltmp3248:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3249:
	jmp	.LBB187_11
.LBB187_3:
.Ltmp3234:
	leaq	16(%rsp), %rdi
	callq	_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_NSD_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSH_
.Ltmp3235:
# %bb.4:
	movq	_Py_NoneStruct@GOTPCREL(%rip), %rax
	movq	%rax, 8(%rsp)
.Ltmp3237:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp3238:
# %bb.5:
	movq	8(%rsp), %rbx
	movq	$0, 8(%rsp)
.Ltmp3240:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3241:
.LBB187_11:
	leaq	32(%rsp), %rdi
.Ltmp3251:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3252:
# %bb.12:                               # %_ZNSt10_Head_baseILm0EN8pybind116detail11type_casterINS0_6objectEvEELb0EED2Ev.exit.i.i.i
	leaq	24(%rsp), %rdi
.Ltmp3254:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3255:
# %bb.13:                               # %_ZNSt10_Head_baseILm1EN8pybind116detail11type_casterINS0_6objectEvEELb0EED2Ev.exit.i.i.i.i
.Ltmp3257:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3258:
# %bb.14:                               # %_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_ENKUlRNS_6detail13function_callEE_clES10_.exit
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB187_18:
	.cfi_def_cfa_offset 64
.Ltmp3242:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB187_19:
.Ltmp3250:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB187_7:
.Ltmp3239:
	jmp	.LBB187_17
.LBB187_6:
.Ltmp3236:
	jmp	.LBB187_17
.LBB187_20:
.Ltmp3247:
	jmp	.LBB187_17
.LBB187_15:
.Ltmp3259:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB187_22:
.Ltmp3256:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB187_21:
.Ltmp3253:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB187_16:
.Ltmp3233:
.LBB187_17:
	movq	%rax, %rbx
	leaq	16(%rsp), %rdi
	callq	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end187:
	.size	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeES10_, .Lfunc_end187-_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeES10_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table187:
.Lexception108:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase78-.Lttbaseref78
.Lttbaseref78:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end108-.Lcst_begin108
.Lcst_begin108:
	.uleb128 .Ltmp3231-.Lfunc_begin108      # >> Call Site 1 <<
	.uleb128 .Ltmp3232-.Ltmp3231            #   Call between .Ltmp3231 and .Ltmp3232
	.uleb128 .Ltmp3233-.Lfunc_begin108      #     jumps to .Ltmp3233
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3243-.Lfunc_begin108      # >> Call Site 2 <<
	.uleb128 .Ltmp3246-.Ltmp3243            #   Call between .Ltmp3243 and .Ltmp3246
	.uleb128 .Ltmp3247-.Lfunc_begin108      #     jumps to .Ltmp3247
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3248-.Lfunc_begin108      # >> Call Site 3 <<
	.uleb128 .Ltmp3249-.Ltmp3248            #   Call between .Ltmp3248 and .Ltmp3249
	.uleb128 .Ltmp3250-.Lfunc_begin108      #     jumps to .Ltmp3250
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3234-.Lfunc_begin108      # >> Call Site 4 <<
	.uleb128 .Ltmp3235-.Ltmp3234            #   Call between .Ltmp3234 and .Ltmp3235
	.uleb128 .Ltmp3236-.Lfunc_begin108      #     jumps to .Ltmp3236
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3237-.Lfunc_begin108      # >> Call Site 5 <<
	.uleb128 .Ltmp3238-.Ltmp3237            #   Call between .Ltmp3237 and .Ltmp3238
	.uleb128 .Ltmp3239-.Lfunc_begin108      #     jumps to .Ltmp3239
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3240-.Lfunc_begin108      # >> Call Site 6 <<
	.uleb128 .Ltmp3241-.Ltmp3240            #   Call between .Ltmp3240 and .Ltmp3241
	.uleb128 .Ltmp3242-.Lfunc_begin108      #     jumps to .Ltmp3242
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3251-.Lfunc_begin108      # >> Call Site 7 <<
	.uleb128 .Ltmp3252-.Ltmp3251            #   Call between .Ltmp3251 and .Ltmp3252
	.uleb128 .Ltmp3253-.Lfunc_begin108      #     jumps to .Ltmp3253
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3254-.Lfunc_begin108      # >> Call Site 8 <<
	.uleb128 .Ltmp3255-.Ltmp3254            #   Call between .Ltmp3254 and .Ltmp3255
	.uleb128 .Ltmp3256-.Lfunc_begin108      #     jumps to .Ltmp3256
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3257-.Lfunc_begin108      # >> Call Site 9 <<
	.uleb128 .Ltmp3258-.Ltmp3257            #   Call between .Ltmp3257 and .Ltmp3258
	.uleb128 .Ltmp3259-.Lfunc_begin108      #     jumps to .Ltmp3259
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3258-.Lfunc_begin108      # >> Call Site 10 <<
	.uleb128 .Lfunc_end187-.Ltmp3258        #   Call between .Ltmp3258 and .Lfunc_end187
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end108:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase78:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_NSD_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSH_
	.type	_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_NSD_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSH_,@function
_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_NSD_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSH_: # @_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_NSD_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSH_
.Lfunc_begin109:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception109
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$336, %rsp                      # imm = 0x150
	.cfi_def_cfa_offset 352
	.cfi_offset %rbx, -16
	movq	16(%rdi), %rax
	movq	%rax, 40(%rsp)
	movq	$0, 16(%rdi)
	movq	8(%rdi), %rcx
	movq	%rcx, 32(%rsp)
	movq	$0, 8(%rdi)
	movq	(%rdi), %rcx
	movq	%rcx, 24(%rsp)
	movq	$0, (%rdi)
	movq	%rax, 16(%rsp)
.Ltmp3260:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp3261:
# %bb.1:                                # %.noexc.i
.Ltmp3262:
	leaq	48(%rsp), %rdi
	leaq	16(%rsp), %rsi
	callq	_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE@PLT
.Ltmp3263:
# %bb.2:
	movq	32(%rsp), %rax
	movq	%rax, 8(%rsp)
.Ltmp3264:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp3265:
# %bb.3:                                # %_ZN8pybind116objectC2ERKS0_.exit.i.i
	leaq	96(%rsp), %rdi
.Ltmp3267:
	leaq	8(%rsp), %rsi
	callq	_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE@PLT
.Ltmp3268:
# %bb.4:
	movq	24(%rsp), %rax
	movq	%rax, (%rsp)
.Ltmp3269:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp3270:
# %bb.5:                                # %_ZN8pybind116objectC2ERKS0_.exit6.i.i
	leaq	144(%rsp), %rdi
.Ltmp3272:
	movq	%rsp, %rsi
	callq	_ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE@PLT
.Ltmp3273:
# %bb.6:
.Ltmp3284:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3285:
# %bb.7:                                # %_ZN8pybind116objectD2Ev.exit.i.i
.Ltmp3287:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3288:
# %bb.8:                                # %_ZN8pybind116objectD2Ev.exit7.i.i
.Ltmp3290:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3291:
# %bb.9:                                # %_ZN8pybind116objectD2Ev.exit8.i.i
	movq	48(%rsp), %rax
	movq	%rax, 192(%rsp)
	movups	56(%rsp), %xmm0
	movups	%xmm0, 200(%rsp)
	movups	72(%rsp), %xmm0
	movups	%xmm0, 216(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 240(%rsp)
	movups	104(%rsp), %xmm0
	movups	%xmm0, 248(%rsp)
	movups	120(%rsp), %xmm0
	movups	%xmm0, 264(%rsp)
	movq	144(%rsp), %rax
	movq	%rax, 288(%rsp)
	movups	152(%rsp), %xmm0
	movups	%xmm0, 296(%rsp)
	movups	168(%rsp), %xmm0
	movups	%xmm0, 312(%rsp)
.Ltmp3293:
	leaq	192(%rsp), %rdi
	callq	_Z14dispatch_micro13micro_globals@PLT
.Ltmp3294:
# %bb.10:
.Ltmp3305:
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3306:
# %bb.11:                               # %_ZN8pybind116objectD2Ev.exit.i
.Ltmp3308:
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3309:
# %bb.12:                               # %_ZN8pybind116objectD2Ev.exit8.i
.Ltmp3311:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3312:
# %bb.13:                               # %_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE9call_implIvRZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES8_NS_7module_EPKcJNS5_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESE_NSC_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_JLm0ELm1ELm2EENS0_9void_typeEEET_OSI_St16integer_sequenceImJXspT1_EEEOSH_.exit
	addq	$336, %rsp                      # imm = 0x150
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB188_23:
	.cfi_def_cfa_offset 352
.Ltmp3313:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB188_22:
.Ltmp3310:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB188_21:
.Ltmp3307:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB188_31:
.Ltmp3292:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB188_30:
.Ltmp3289:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB188_29:
.Ltmp3286:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB188_14:
.Ltmp3274:
	movq	%rax, %rbx
.Ltmp3275:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3276:
	jmp	.LBB188_17
.LBB188_15:
.Ltmp3277:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB188_24:
.Ltmp3295:
	movq	%rax, %rbx
	jmp	.LBB188_25
.LBB188_16:
.Ltmp3271:
	movq	%rax, %rbx
.LBB188_17:                             # %_ZN8pybind116objectD2Ev.exit9.i.i
.Ltmp3278:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3279:
	jmp	.LBB188_20
.LBB188_18:
.Ltmp3280:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB188_19:
.Ltmp3266:
	movq	%rax, %rbx
.LBB188_20:                             # %_ZN8pybind116objectD2Ev.exit10.i.i
.Ltmp3281:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3282:
.LBB188_25:                             # %.body.i
.Ltmp3296:
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3297:
# %bb.26:                               # %_ZN8pybind116objectD2Ev.exit10.i
.Ltmp3299:
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3300:
# %bb.27:                               # %_ZN8pybind116objectD2Ev.exit11.i
.Ltmp3302:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3303:
# %bb.28:                               # %_ZN8pybind116objectD2Ev.exit12.i
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB188_35:
.Ltmp3304:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB188_34:
.Ltmp3301:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB188_32:
.Ltmp3283:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB188_33:
.Ltmp3298:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end188:
	.size	_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_NSD_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSH_, .Lfunc_end188-_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_NSD_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSH_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table188:
.Lexception109:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase79-.Lttbaseref79
.Lttbaseref79:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end109-.Lcst_begin109
.Lcst_begin109:
	.uleb128 .Ltmp3260-.Lfunc_begin109      # >> Call Site 1 <<
	.uleb128 .Ltmp3261-.Ltmp3260            #   Call between .Ltmp3260 and .Ltmp3261
	.uleb128 .Ltmp3295-.Lfunc_begin109      #     jumps to .Ltmp3295
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3262-.Lfunc_begin109      # >> Call Site 2 <<
	.uleb128 .Ltmp3265-.Ltmp3262            #   Call between .Ltmp3262 and .Ltmp3265
	.uleb128 .Ltmp3266-.Lfunc_begin109      #     jumps to .Ltmp3266
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3267-.Lfunc_begin109      # >> Call Site 3 <<
	.uleb128 .Ltmp3270-.Ltmp3267            #   Call between .Ltmp3267 and .Ltmp3270
	.uleb128 .Ltmp3271-.Lfunc_begin109      #     jumps to .Ltmp3271
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3272-.Lfunc_begin109      # >> Call Site 4 <<
	.uleb128 .Ltmp3273-.Ltmp3272            #   Call between .Ltmp3272 and .Ltmp3273
	.uleb128 .Ltmp3274-.Lfunc_begin109      #     jumps to .Ltmp3274
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3284-.Lfunc_begin109      # >> Call Site 5 <<
	.uleb128 .Ltmp3285-.Ltmp3284            #   Call between .Ltmp3284 and .Ltmp3285
	.uleb128 .Ltmp3286-.Lfunc_begin109      #     jumps to .Ltmp3286
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3287-.Lfunc_begin109      # >> Call Site 6 <<
	.uleb128 .Ltmp3288-.Ltmp3287            #   Call between .Ltmp3287 and .Ltmp3288
	.uleb128 .Ltmp3289-.Lfunc_begin109      #     jumps to .Ltmp3289
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3290-.Lfunc_begin109      # >> Call Site 7 <<
	.uleb128 .Ltmp3291-.Ltmp3290            #   Call between .Ltmp3290 and .Ltmp3291
	.uleb128 .Ltmp3292-.Lfunc_begin109      #     jumps to .Ltmp3292
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3293-.Lfunc_begin109      # >> Call Site 8 <<
	.uleb128 .Ltmp3294-.Ltmp3293            #   Call between .Ltmp3293 and .Ltmp3294
	.uleb128 .Ltmp3295-.Lfunc_begin109      #     jumps to .Ltmp3295
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3305-.Lfunc_begin109      # >> Call Site 9 <<
	.uleb128 .Ltmp3306-.Ltmp3305            #   Call between .Ltmp3305 and .Ltmp3306
	.uleb128 .Ltmp3307-.Lfunc_begin109      #     jumps to .Ltmp3307
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3308-.Lfunc_begin109      # >> Call Site 10 <<
	.uleb128 .Ltmp3309-.Ltmp3308            #   Call between .Ltmp3308 and .Ltmp3309
	.uleb128 .Ltmp3310-.Lfunc_begin109      #     jumps to .Ltmp3310
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3311-.Lfunc_begin109      # >> Call Site 11 <<
	.uleb128 .Ltmp3312-.Ltmp3311            #   Call between .Ltmp3311 and .Ltmp3312
	.uleb128 .Ltmp3313-.Lfunc_begin109      #     jumps to .Ltmp3313
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3275-.Lfunc_begin109      # >> Call Site 12 <<
	.uleb128 .Ltmp3276-.Ltmp3275            #   Call between .Ltmp3275 and .Ltmp3276
	.uleb128 .Ltmp3277-.Lfunc_begin109      #     jumps to .Ltmp3277
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3278-.Lfunc_begin109      # >> Call Site 13 <<
	.uleb128 .Ltmp3279-.Ltmp3278            #   Call between .Ltmp3278 and .Ltmp3279
	.uleb128 .Ltmp3280-.Lfunc_begin109      #     jumps to .Ltmp3280
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3281-.Lfunc_begin109      # >> Call Site 14 <<
	.uleb128 .Ltmp3282-.Ltmp3281            #   Call between .Ltmp3281 and .Ltmp3282
	.uleb128 .Ltmp3283-.Lfunc_begin109      #     jumps to .Ltmp3283
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3296-.Lfunc_begin109      # >> Call Site 15 <<
	.uleb128 .Ltmp3297-.Ltmp3296            #   Call between .Ltmp3296 and .Ltmp3297
	.uleb128 .Ltmp3298-.Lfunc_begin109      #     jumps to .Ltmp3298
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3299-.Lfunc_begin109      # >> Call Site 16 <<
	.uleb128 .Ltmp3300-.Ltmp3299            #   Call between .Ltmp3299 and .Ltmp3300
	.uleb128 .Ltmp3301-.Lfunc_begin109      #     jumps to .Ltmp3301
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3302-.Lfunc_begin109      # >> Call Site 17 <<
	.uleb128 .Ltmp3303-.Ltmp3302            #   Call between .Ltmp3302 and .Ltmp3303
	.uleb128 .Ltmp3304-.Lfunc_begin109      #     jumps to .Ltmp3304
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3303-.Lfunc_begin109      # >> Call Site 18 <<
	.uleb128 .Lfunc_end188-.Ltmp3303        #   Call between .Ltmp3303 and .Lfunc_end188
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end109:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase79:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv,"axG",@progbits,_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv,comdat
	.weak	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv # -- Begin function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv
	.p2align	4, 0x90
	.type	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv,@function
_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv: # @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	(%rdi), %rax
	callq	*16(%rax)
	movq	__libc_single_threaded@GOTPCREL(%rip), %rax
	cmpb	$0, (%rax)
	je	.LBB189_2
# %bb.1:
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB189_4
.LBB189_5:
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmpq	*24(%rax)                       # TAILCALL
.LBB189_2:
	.cfi_def_cfa_offset 16
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB189_5
.LBB189_4:                              # %_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv.exit
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end189:
	.size	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, .Lfunc_end189-_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv
	.cfi_endproc
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function __hip_module_ctor
	.type	__hip_module_ctor,@function
__hip_module_ctor:                      # @__hip_module_ctor
	.cfi_startproc
# %bb.0:
	subq	$40, %rsp
	.cfi_def_cfa_offset 48
	movq	__hip_gpubin_handle_9be0291b55b98188(%rip), %rdi
	testq	%rdi, %rdi
	jne	.LBB190_2
# %bb.1:
	leaq	__hip_fatbin_wrapper(%rip), %rdi
	callq	__hipRegisterFatBinary@PLT
	movq	%rax, %rdi
	movq	%rax, __hip_gpubin_handle_9be0291b55b98188(%rip)
.LBB190_2:
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rsp)
	movups	%xmm0, (%rsp)
	movq	_Z8micro_tk13micro_globals@GOTPCREL(%rip), %rsi
	leaq	.L__unnamed_1(%rip), %rcx
	movq	%rcx, %rdx
	movl	$-1, %r8d
	xorl	%r9d, %r9d
	callq	__hipRegisterFunction@PLT
	leaq	__hip_module_dtor(%rip), %rdi
	addq	$40, %rsp
	.cfi_def_cfa_offset 8
	jmp	atexit@PLT                      # TAILCALL
.Lfunc_end190:
	.size	__hip_module_ctor, .Lfunc_end190-__hip_module_ctor
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function __hip_module_dtor
	.type	__hip_module_dtor,@function
__hip_module_dtor:                      # @__hip_module_dtor
	.cfi_startproc
# %bb.0:
	movq	__hip_gpubin_handle_9be0291b55b98188(%rip), %rdi
	testq	%rdi, %rdi
	je	.LBB191_2
# %bb.1:
	pushq	%rax
	.cfi_def_cfa_offset 16
	callq	__hipUnregisterFatBinary@PLT
	movq	$0, __hip_gpubin_handle_9be0291b55b98188(%rip)
	addq	$8, %rsp
	.cfi_def_cfa_offset 8
.LBB191_2:
	retq
.Lfunc_end191:
	.size	__hip_module_dtor, .Lfunc_end191-__hip_module_dtor
	.cfi_endproc
                                        # -- End function
	.type	_Z8micro_tk13micro_globals,@object # @_Z8micro_tk13micro_globals
	.section	.data.rel.ro,"aw",@progbits
	.globl	_Z8micro_tk13micro_globals
	.p2align	3, 0x0
_Z8micro_tk13micro_globals:
	.quad	_Z23__device_stub__micro_tk13micro_globals
	.size	_Z8micro_tk13micro_globals, 8

	.type	.L.str,@object                  # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"3.12"
	.size	.L.str, 5

	.type	.L.str.1,@object                # @.str.1
.L.str.1:
	.asciz	"Python version mismatch: module was compiled for Python %s, but the interpreter version is incompatible: %s."
	.size	.L.str.1, 109

	.type	.L.str.2,@object                # @.str.2
.L.str.2:
	.asciz	"tk_kernel"
	.size	.L.str.2, 10

	.type	_ZL29pybind11_module_def_tk_kernel,@object # @_ZL29pybind11_module_def_tk_kernel
	.local	_ZL29pybind11_module_def_tk_kernel
	.comm	_ZL29pybind11_module_def_tk_kernel,104,8
	.hidden	_ZTSN8pybind1117error_already_setE # @_ZTSN8pybind1117error_already_setE
	.type	_ZTSN8pybind1117error_already_setE,@object
	.section	.rodata._ZTSN8pybind1117error_already_setE,"aG",@progbits,_ZTSN8pybind1117error_already_setE,comdat
	.weak	_ZTSN8pybind1117error_already_setE
_ZTSN8pybind1117error_already_setE:
	.asciz	"N8pybind1117error_already_setE"
	.size	_ZTSN8pybind1117error_already_setE, 31

	.hidden	_ZTIN8pybind1117error_already_setE # @_ZTIN8pybind1117error_already_setE
	.type	_ZTIN8pybind1117error_already_setE,@object
	.section	.data.rel.ro._ZTIN8pybind1117error_already_setE,"awG",@progbits,_ZTIN8pybind1117error_already_setE,comdat
	.weak	_ZTIN8pybind1117error_already_setE
	.p2align	3, 0x0
_ZTIN8pybind1117error_already_setE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN8pybind1117error_already_setE
	.quad	_ZTISt9exception
	.size	_ZTIN8pybind1117error_already_setE, 24

	.type	.L.str.3,@object                # @.str.3
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.3:
	.asciz	"initialization failed"
	.size	.L.str.3, 22

	.hidden	_ZTVN8pybind1117error_already_setE # @_ZTVN8pybind1117error_already_setE
	.type	_ZTVN8pybind1117error_already_setE,@object
	.section	.data.rel.ro._ZTVN8pybind1117error_already_setE,"awG",@progbits,_ZTVN8pybind1117error_already_setE,comdat
	.weak	_ZTVN8pybind1117error_already_setE
	.p2align	3, 0x0
_ZTVN8pybind1117error_already_setE:
	.quad	0
	.quad	_ZTIN8pybind1117error_already_setE
	.quad	_ZN8pybind1117error_already_setD2Ev
	.quad	_ZN8pybind1117error_already_setD0Ev
	.quad	_ZNK8pybind1117error_already_set4whatEv
	.size	_ZTVN8pybind1117error_already_setE, 40

	.type	.L.str.4,@object                # @.str.4
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.4:
	.asciz	"scoped_acquire: could not create thread state!"
	.size	.L.str.4, 47

	.type	.L.str.5,@object                # @.str.5
.L.str.5:
	.asciz	"!PyErr_Occurred()"
	.size	.L.str.5, 18

	.type	.L.str.6,@object                # @.str.6
.L.str.6:
	.asciz	"/opt/conda/envs/py_3.12/lib/python3.12/site-packages/pybind11/include/pybind11/detail/common.h"
	.size	.L.str.6, 95

	.type	.L__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failEPKc,@object # @__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failEPKc
.L__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failEPKc:
	.asciz	"void pybind11::pybind11_fail(const char *)"
	.size	.L__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failEPKc, 43

	.type	.L.str.7,@object                # @.str.7
.L.str.7:
	.asciz	": "
	.size	.L.str.7, 3

	.type	.L.str.9,@object                # @.str.9
.L.str.9:
	.asciz	"basic_string::_M_replace"
	.size	.L.str.9, 25

	.type	.L.str.10,@object               # @.str.10
.L.str.10:
	.asciz	"basic_string::_M_create"
	.size	.L.str.10, 24

	.type	.L.str.11,@object               # @.str.11
.L.str.11:
	.asciz	"%s: __pos (which is %zu) > this->size() (which is %zu)"
	.size	.L.str.11, 55

	.type	.L.str.12,@object               # @.str.12
.L.str.12:
	.asciz	"<MESSAGE UNAVAILABLE DUE TO ANOTHER EXCEPTION>"
	.size	.L.str.12, 47

	.type	.L.str.13,@object               # @.str.13
.L.str.13:
	.asciz	"utf-8"
	.size	.L.str.13, 6

	.type	.L.str.14,@object               # @.str.14
.L.str.14:
	.asciz	"backslashreplace"
	.size	.L.str.14, 17

	.type	.L.str.15,@object               # @.str.15
.L.str.15:
	.asciz	"__notes__"
	.size	.L.str.15, 10

	.type	.L.str.16,@object               # @.str.16
.L.str.16:
	.asciz	"\nFAILURE obtaining len(__notes__): "
	.size	.L.str.16, 36

	.type	.L.str.17,@object               # @.str.17
.L.str.17:
	.asciz	"\n__notes__ (len="
	.size	.L.str.17, 17

	.type	.L.str.18,@object               # @.str.18
.L.str.18:
	.asciz	"):"
	.size	.L.str.18, 3

	.type	.L.str.19,@object               # @.str.19
.L.str.19:
	.asciz	"PyList_Check(notes.ptr())"
	.size	.L.str.19, 26

	.type	.L.str.20,@object               # @.str.20
.L.str.20:
	.asciz	"/opt/conda/envs/py_3.12/lib/python3.12/site-packages/pybind11/include/pybind11/pytypes.h"
	.size	.L.str.20, 89

	.type	.L__PRETTY_FUNCTION__._ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev,@object # @__PRETTY_FUNCTION__._ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev
.L__PRETTY_FUNCTION__._ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev:
	.asciz	"std::string pybind11::detail::error_fetch_and_normalize::format_value_and_trace() const"
	.size	.L__PRETTY_FUNCTION__._ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev, 88

	.type	.L.str.21,@object               # @.str.21
.L.str.21:
	.asciz	"\nFAILURE obtaining __notes__["
	.size	.L.str.21, 30

	.type	.L.str.22,@object               # @.str.22
.L.str.22:
	.asciz	"]: "
	.size	.L.str.22, 4

	.type	.L.str.23,@object               # @.str.23
.L.str.23:
	.asciz	"\nFAILURE formatting __notes__["
	.size	.L.str.23, 31

	.type	.L.str.24,@object               # @.str.24
.L.str.24:
	.asciz	"<MESSAGE UNAVAILABLE>"
	.size	.L.str.24, 22

	.type	.L.str.25,@object               # @.str.25
.L.str.25:
	.asciz	"<EMPTY MESSAGE>"
	.size	.L.str.25, 16

	.type	.L.str.26,@object               # @.str.26
.L.str.26:
	.asciz	"\n\nAt:\n"
	.size	.L.str.26, 7

	.type	.L.str.27,@object               # @.str.27
.L.str.27:
	.asciz	"  "
	.size	.L.str.27, 3

	.type	.L.str.28,@object               # @.str.28
.L.str.28:
	.asciz	"): "
	.size	.L.str.28, 4

	.type	.L.str.29,@object               # @.str.29
.L.str.29:
	.asciz	"\nMESSAGE UNAVAILABLE DUE TO EXCEPTION: "
	.size	.L.str.29, 40

	.type	.L.str.30,@object               # @.str.30
.L.str.30:
	.asciz	"pybind11::detail::error_string"
	.size	.L.str.30, 31

	.type	.L.str.31,@object               # @.str.31
.L.str.31:
	.asciz	"Internal error: "
	.size	.L.str.31, 17

	.type	.L.str.32,@object               # @.str.32
.L.str.32:
	.asciz	" called while Python error indicator not set."
	.size	.L.str.32, 46

	.type	.L.str.33,@object               # @.str.33
.L.str.33:
	.asciz	" failed to obtain the name of the original active exception type."
	.size	.L.str.33, 66

	.type	.L.str.34,@object               # @.str.34
.L.str.34:
	.asciz	"[WITH __notes__]"
	.size	.L.str.34, 17

	.type	.L__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@object # @__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.L__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
	.asciz	"void pybind11::pybind11_fail(const std::string &)"
	.size	.L__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, 50

	.type	.L.str.35,@object               # @.str.35
.L.str.35:
	.asciz	"basic_string: construction from null is not valid"
	.size	.L.str.35, 50

	.type	.L.str.36,@object               # @.str.36
.L.str.36:
	.asciz	"pybind11::handle::dec_ref()"
	.size	.L.str.36, 28

	.type	.L.str.37,@object               # @.str.37
.L.str.37:
	.asciz	"%s is being called while the GIL is either not held or invalid. Please see https://pybind11.readthedocs.io/en/stable/advanced/misc.html#common-sources-of-global-interpreter-lock-errors for debugging advice.\nIf you are convinced there is no bug in your code, you can #define PYBIND11_NO_ASSERT_GIL_HELD_INCREF_DECREF to disable this check. In that case you have to ensure this #define is consistently used for all translation units linked into a given pybind11 extension, otherwise there will be ODR violations."
	.size	.L.str.37, 511

	.type	.L.str.38,@object               # @.str.38
.L.str.38:
	.asciz	" The failing %s call was triggered on a %s object."
	.size	.L.str.38, 51

	.type	.L.str.40,@object               # @.str.40
.L.str.40:
	.asciz	" PyGILState_Check() failure."
	.size	.L.str.40, 29

	.type	.L.str.41,@object               # @.str.41
.L.str.41:
	.asciz	"basic_string::append"
	.size	.L.str.41, 21

	.type	.L.str.42,@object               # @.str.42
.L.str.42:
	.asciz	"Unable to cast Python instance of type "
	.size	.L.str.42, 40

	.type	.L.str.43,@object               # @.str.43
.L.str.43:
	.asciz	" to C++ type '"
	.size	.L.str.43, 15

	.type	.L.str.44,@object               # @.str.44
.L.str.44:
	.asciz	"'"
	.size	.L.str.44, 2

	.hidden	_ZTSN8pybind1110cast_errorE     # @_ZTSN8pybind1110cast_errorE
	.type	_ZTSN8pybind1110cast_errorE,@object
	.section	.rodata._ZTSN8pybind1110cast_errorE,"aG",@progbits,_ZTSN8pybind1110cast_errorE,comdat
	.weak	_ZTSN8pybind1110cast_errorE
_ZTSN8pybind1110cast_errorE:
	.asciz	"N8pybind1110cast_errorE"
	.size	_ZTSN8pybind1110cast_errorE, 24

	.hidden	_ZTSN8pybind1117builtin_exceptionE # @_ZTSN8pybind1117builtin_exceptionE
	.type	_ZTSN8pybind1117builtin_exceptionE,@object
	.section	.rodata._ZTSN8pybind1117builtin_exceptionE,"aG",@progbits,_ZTSN8pybind1117builtin_exceptionE,comdat
	.weak	_ZTSN8pybind1117builtin_exceptionE
_ZTSN8pybind1117builtin_exceptionE:
	.asciz	"N8pybind1117builtin_exceptionE"
	.size	_ZTSN8pybind1117builtin_exceptionE, 31

	.hidden	_ZTIN8pybind1117builtin_exceptionE # @_ZTIN8pybind1117builtin_exceptionE
	.type	_ZTIN8pybind1117builtin_exceptionE,@object
	.section	.data.rel.ro._ZTIN8pybind1117builtin_exceptionE,"awG",@progbits,_ZTIN8pybind1117builtin_exceptionE,comdat
	.weak	_ZTIN8pybind1117builtin_exceptionE
	.p2align	3, 0x0
_ZTIN8pybind1117builtin_exceptionE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN8pybind1117builtin_exceptionE
	.quad	_ZTISt13runtime_error
	.size	_ZTIN8pybind1117builtin_exceptionE, 24

	.hidden	_ZTIN8pybind1110cast_errorE     # @_ZTIN8pybind1110cast_errorE
	.type	_ZTIN8pybind1110cast_errorE,@object
	.section	.data.rel.ro._ZTIN8pybind1110cast_errorE,"awG",@progbits,_ZTIN8pybind1110cast_errorE,comdat
	.weak	_ZTIN8pybind1110cast_errorE
	.p2align	3, 0x0
_ZTIN8pybind1110cast_errorE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN8pybind1110cast_errorE
	.quad	_ZTIN8pybind1117builtin_exceptionE
	.size	_ZTIN8pybind1110cast_errorE, 24

	.type	.L.str.45,@object               # @.str.45
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.45:
	.asciz	"Unexpected PYBIND11_BYTES_AS_STRING() failure."
	.size	.L.str.45, 47

	.type	.L.str.46,@object               # @.str.46
.L.str.46:
	.asciz	"Unexpected PyByteArray_AsString() failure."
	.size	.L.str.46, 43

	.type	.L.str.47,@object               # @.str.47
.L.str.47:
	.asciz	"pybind11::error_already_set"
	.size	.L.str.47, 28

	.hidden	_ZTVSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE # @_ZTVSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.type	_ZTVSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE,@object
	.section	.data.rel.ro._ZTVSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE,"awG",@progbits,_ZTVSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTVSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3, 0x0
_ZTVSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	0
	.quad	_ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.quad	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.quad	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.quad	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.quad	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.size	_ZTVSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE, 56

	.hidden	_ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE # @_ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.type	_ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE,@object
	.section	.rodata._ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE, 113

	.type	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE, 52

	.type	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE, 47

	.type	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.data.rel.ro._ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,"awG",@progbits,_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3, 0x0
_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE, 16

	.type	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.data.rel.ro._ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,"awG",@progbits,_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3, 0x0
_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE, 24

	.hidden	_ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE # @_ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.type	_ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE,@object
	.section	.data.rel.ro._ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE,"awG",@progbits,_ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3, 0x0
_ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE, 24

	.hidden	_ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE # @_ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE
	.type	_ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE,@object
	.section	.rodata._ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE,"aG",@progbits,_ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE,comdat
	.weak	_ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE
_ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE:
	.asciz	"PFvPN8pybind116detail25error_fetch_and_normalizeEE"
	.size	_ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE, 51

	.type	.L.str.48,@object               # @.str.48
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.48:
	.asciz	"Unable to move from Python "
	.size	.L.str.48, 28

	.type	.L.str.49,@object               # @.str.49
.L.str.49:
	.asciz	" instance to C++ "
	.size	.L.str.49, 18

	.type	.L.str.50,@object               # @.str.50
.L.str.50:
	.asciz	" instance: instance has multiple references"
	.size	.L.str.50, 44

	.type	_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@object # @_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.section	.rodata._ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.weak	_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
	.asciz	"NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"
	.size	_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, 53

	.type	.L.str.51,@object               # @.str.51
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.51:
	.asciz	"pybind11::"
	.size	.L.str.51, 11

	.type	.L.str.52,@object               # @.str.52
.L.str.52:
	.asciz	"basic_string::erase"
	.size	.L.str.52, 20

	.hidden	_ZTVN8pybind1110cast_errorE     # @_ZTVN8pybind1110cast_errorE
	.type	_ZTVN8pybind1110cast_errorE,@object
	.section	.data.rel.ro._ZTVN8pybind1110cast_errorE,"awG",@progbits,_ZTVN8pybind1110cast_errorE,comdat
	.weak	_ZTVN8pybind1110cast_errorE
	.p2align	3, 0x0
_ZTVN8pybind1110cast_errorE:
	.quad	0
	.quad	_ZTIN8pybind1110cast_errorE
	.quad	_ZNSt13runtime_errorD2Ev
	.quad	_ZN8pybind1110cast_errorD0Ev
	.quad	_ZNKSt13runtime_error4whatEv
	.quad	_ZNK8pybind1110cast_error9set_errorEv
	.size	_ZTVN8pybind1110cast_errorE, 48

	.type	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits,@object # @__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4, 0x0
.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits:
	.asciz	"00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"
	.size	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits, 201

	.type	.L.str.53,@object               # @.str.53
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.53:
	.asciz	"scoped_acquire::dec_ref(): thread state must be current!"
	.size	.L.str.53, 57

	.type	.L.str.54,@object               # @.str.54
.L.str.54:
	.asciz	"scoped_acquire::dec_ref(): reference count underflow!"
	.size	.L.str.54, 54

	.type	.L.str.55,@object               # @.str.55
.L.str.55:
	.asciz	"scoped_acquire::dec_ref(): internal error!"
	.size	.L.str.55, 43

	.type	.L.str.56,@object               # @.str.56
.L.str.56:
	.asciz	"get_internals: could not successfully initialize the tstate TSS key!"
	.size	.L.str.56, 69

	.type	.L.str.57,@object               # @.str.57
.L.str.57:
	.asciz	"get_internals: could not successfully initialize the loader_life_support TSS key!"
	.size	.L.str.57, 82

	.type	.L.str.58,@object               # @.str.58
.L.str.58:
	.asciz	"__pybind11_internals_v5_clang_libstdcpp_cxxabi1002__"
	.size	.L.str.58, 53

	.hidden	_ZZN8pybind116detail16get_internals_ppEvE12internals_pp # @_ZZN8pybind116detail16get_internals_ppEvE12internals_pp
	.type	_ZZN8pybind116detail16get_internals_ppEvE12internals_pp,@object
	.section	.bss._ZZN8pybind116detail16get_internals_ppEvE12internals_pp,"awG",@nobits,_ZZN8pybind116detail16get_internals_ppEvE12internals_pp,comdat
	.weak	_ZZN8pybind116detail16get_internals_ppEvE12internals_pp
	.p2align	3, 0x0
_ZZN8pybind116detail16get_internals_ppEvE12internals_pp:
	.quad	0
	.size	_ZZN8pybind116detail16get_internals_ppEvE12internals_pp, 8

	.type	.L.str.59,@object               # @.str.59
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.59:
	.asciz	"pybind11::detail::get_python_state_dict() FAILED"
	.size	.L.str.59, 49

	.type	.L.str.60,@object               # @.str.60
.L.str.60:
	.asciz	"pybind11::handle::inc_ref()"
	.size	.L.str.60, 28

	.hidden	_ZZN8pybind116handle15inc_ref_counterEmE7counter # @_ZZN8pybind116handle15inc_ref_counterEmE7counter
	.type	_ZZN8pybind116handle15inc_ref_counterEmE7counter,@object
	.section	.tbss._ZZN8pybind116handle15inc_ref_counterEmE7counter,"awTG",@nobits,_ZZN8pybind116handle15inc_ref_counterEmE7counter,comdat
	.weak	_ZZN8pybind116handle15inc_ref_counterEmE7counter
	.p2align	3, 0x0
_ZZN8pybind116handle15inc_ref_counterEmE7counter:
	.quad	0                               # 0x0
	.size	_ZZN8pybind116handle15inc_ref_counterEmE7counter, 8

	.type	.L.str.61,@object               # @.str.61
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.61:
	.asciz	"PyErr_Occurred()"
	.size	.L.str.61, 17

	.type	.L__PRETTY_FUNCTION__._ZN8pybind1110raise_fromEP7_objectPKc,@object # @__PRETTY_FUNCTION__._ZN8pybind1110raise_fromEP7_objectPKc
.L__PRETTY_FUNCTION__._ZN8pybind1110raise_fromEP7_objectPKc:
	.asciz	"void pybind11::raise_from(PyObject *, const char *)"
	.size	.L__PRETTY_FUNCTION__._ZN8pybind1110raise_fromEP7_objectPKc, 52

	.type	.L.str.62,@object               # @.str.62
.L.str.62:
	.asciz	"pybind11::detail::get_internals_pp_from_capsule() FAILED"
	.size	.L.str.62, 57

	.type	.L.str.63,@object               # @.str.63
.L.str.63:
	.asciz	"pybind11_function_record_capsule"
	.size	.L.str.63, 33

	.type	.L.str.64,@object               # @.str.64
.L.str.64:
	.asciz	"Could not allocate string object!"
	.size	.L.str.64, 34

	.type	.L.str.65,@object               # @.str.65
.L.str.65:
	.asciz	"Caught an unknown exception!"
	.size	.L.str.65, 29

	.type	.L.str.66,@object               # @.str.66
.L.str.66:
	.asciz	"Caught an unknown nested exception!"
	.size	.L.str.66, 36

	.type	.L.str.67,@object               # @.str.67
.L.str.67:
	.asciz	"Internal error: pybind11::detail::error_fetch_and_normalize::restore() called a second time. ORIGINAL ERROR: "
	.size	.L.str.67, 110

	.type	.L.str.68,@object               # @.str.68
.L.str.68:
	.asciz	"pybind11_static_property"
	.size	.L.str.68, 25

	.type	.L.str.69,@object               # @.str.69
.L.str.69:
	.asciz	"make_static_property_type(): error allocating type!"
	.size	.L.str.69, 52

	.type	.L.str.70,@object               # @.str.70
.L.str.70:
	.asciz	"make_static_property_type(): failure in PyType_Ready()!"
	.size	.L.str.70, 56

	.type	.L.str.71,@object               # @.str.71
.L.str.71:
	.asciz	"__module__"
	.size	.L.str.71, 11

	.type	.L.str.72,@object               # @.str.72
.L.str.72:
	.asciz	"pybind11_builtins"
	.size	.L.str.72, 18

	.hidden	_ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset # @_ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset
	.type	_ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset,@object
	.section	.data._ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset,"awG",@progbits,_ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset,comdat
	.weak	_ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset
	.p2align	4, 0x0
_ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset:
	.quad	.L.str.73
	.quad	PyObject_GenericGetDict
	.quad	PyObject_GenericSetDict
	.quad	0
	.quad	0
	.zero	40
	.size	_ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset, 80

	.type	.L.str.73,@object               # @.str.73
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.73:
	.asciz	"__dict__"
	.size	.L.str.73, 9

	.type	.L.str.74,@object               # @.str.74
.L.str.74:
	.asciz	"pybind11_type"
	.size	.L.str.74, 14

	.type	.L.str.75,@object               # @.str.75
.L.str.75:
	.asciz	"make_default_metaclass(): error allocating metaclass!"
	.size	.L.str.75, 54

	.type	.L.str.76,@object               # @.str.76
.L.str.76:
	.asciz	"make_default_metaclass(): failure in PyType_Ready()!"
	.size	.L.str.76, 53

	.type	.L.str.77,@object               # @.str.77
.L.str.77:
	.asciz	"%.200s.__init__() must be called when overriding __init__"
	.size	.L.str.77, 58

	.hidden	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature # @_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature
	.type	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature,@object
	.section	.rodata._ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature,"aG",@progbits,_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature,comdat
	.weak	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature
_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature:
	.asciz	"({object}) -> None"
	.size	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature, 19

	.hidden	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types # @_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types
	.type	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types,@object
	.section	.rodata._ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types,"aG",@progbits,_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types,comdat
	.weak	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types
	.p2align	3, 0x0
_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types:
	.zero	8
	.size	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types, 8

	.type	.L.str.78,@object               # @.str.78
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.78:
	.zero	1
	.size	.L.str.78, 1

	.type	.L.str.79,@object               # @.str.79
.L.str.79:
	.asciz	"__init__"
	.size	.L.str.79, 9

	.type	.L.str.80,@object               # @.str.80
.L.str.80:
	.asciz	"__setstate__"
	.size	.L.str.80, 13

	.type	.L.str.81,@object               # @.str.81
.L.str.81:
	.asciz	"pybind11-bound class '"
	.size	.L.str.81, 23

	.type	.L.str.82,@object               # @.str.82
.L.str.82:
	.asciz	"' is using an old-style placement-new '"
	.size	.L.str.82, 40

	.type	.L.str.83,@object               # @.str.83
.L.str.83:
	.asciz	"' which has been deprecated. See the upgrade guide in pybind11's docs. This message is only visible when compiled in debug mode."
	.size	.L.str.83, 129

	.type	.L.str.84,@object               # @.str.84
.L.str.84:
	.asciz	"*, "
	.size	.L.str.84, 4

	.type	.L.str.85,@object               # @.str.85
.L.str.85:
	.asciz	"self"
	.size	.L.str.85, 5

	.type	.L.str.86,@object               # @.str.86
.L.str.86:
	.asciz	"arg"
	.size	.L.str.86, 4

	.type	.L.str.87,@object               # @.str.87
.L.str.87:
	.asciz	" = "
	.size	.L.str.87, 4

	.type	.L.str.88,@object               # @.str.88
.L.str.88:
	.asciz	", /"
	.size	.L.str.88, 4

	.type	.L.str.89,@object               # @.str.89
.L.str.89:
	.asciz	"Internal error while parsing type signature (1)"
	.size	.L.str.89, 48

	.type	.L.str.90,@object               # @.str.90
.L.str.90:
	.asciz	"."
	.size	.L.str.90, 2

	.type	.L.str.91,@object               # @.str.91
.L.str.91:
	.asciz	"__qualname__"
	.size	.L.str.91, 13

	.type	.L.str.92,@object               # @.str.92
.L.str.92:
	.asciz	"Internal error while parsing type signature (2)"
	.size	.L.str.92, 48

	.type	.L.str.93,@object               # @.str.93
.L.str.93:
	.asciz	"Cannot overload existing non-function object \""
	.size	.L.str.93, 47

	.type	.L.str.94,@object               # @.str.94
.L.str.94:
	.asciz	"\" with a function of the same name"
	.size	.L.str.94, 35

	.type	.L.str.95,@object               # @.str.95
.L.str.95:
	.asciz	"__name__"
	.size	.L.str.95, 9

	.type	.L.str.96,@object               # @.str.96
.L.str.96:
	.asciz	"cpp_function::cpp_function(): Could not allocate function object"
	.size	.L.str.96, 65

	.type	.L.str.97,@object               # @.str.97
.L.str.97:
	.asciz	"overloading a method with both static and instance methods is not supported; error while attempting to bind "
	.size	.L.str.97, 109

	.type	.L.str.98,@object               # @.str.98
.L.str.98:
	.asciz	"instance"
	.size	.L.str.98, 9

	.type	.L.str.99,@object               # @.str.99
.L.str.99:
	.asciz	"static"
	.size	.L.str.99, 7

	.type	.L.str.100,@object              # @.str.100
.L.str.100:
	.asciz	" method "
	.size	.L.str.100, 9

	.type	.L.str.101,@object              # @.str.101
.L.str.101:
	.asciz	"_pybind11_conduit_v1_"
	.size	.L.str.101, 22

	.type	.L.str.102,@object              # @.str.102
.L.str.102:
	.asciz	"(*args, **kwargs)\n"
	.size	.L.str.102, 19

	.type	.L.str.103,@object              # @.str.103
.L.str.103:
	.asciz	"Overloaded function.\n\n"
	.size	.L.str.103, 23

	.type	.L.str.104,@object              # @.str.104
.L.str.104:
	.asciz	". "
	.size	.L.str.104, 3

	.type	.L.str.105,@object              # @.str.105
.L.str.105:
	.asciz	"cpp_function::cpp_function(): Could not allocate instance method object"
	.size	.L.str.105, 72

	.type	.L.str.106,@object              # @.str.106
.L.str.106:
	.asciz	"vector::_M_realloc_insert"
	.size	.L.str.106, 26

	.type	.L.str.108,@object              # @.str.108
.L.str.108:
	.asciz	"basic_string::substr"
	.size	.L.str.108, 21

	.type	.L.str.110,@object              # @.str.110
.L.str.110:
	.asciz	"pybind11::detail::get_type_info: unable to find type info for \""
	.size	.L.str.110, 64

	.hidden	_ZZN8pybind116detail19get_local_internalsEvE6locals # @_ZZN8pybind116detail19get_local_internalsEvE6locals
	.type	_ZZN8pybind116detail19get_local_internalsEvE6locals,@object
	.section	.bss._ZZN8pybind116detail19get_local_internalsEvE6locals,"awG",@nobits,_ZZN8pybind116detail19get_local_internalsEvE6locals,comdat
	.weak	_ZZN8pybind116detail19get_local_internalsEvE6locals
	.p2align	3, 0x0
_ZZN8pybind116detail19get_local_internalsEvE6locals:
	.quad	0
	.size	_ZZN8pybind116detail19get_local_internalsEvE6locals, 8

	.hidden	_ZGVZN8pybind116detail19get_local_internalsEvE6locals # @_ZGVZN8pybind116detail19get_local_internalsEvE6locals
	.type	_ZGVZN8pybind116detail19get_local_internalsEvE6locals,@object
	.section	.bss._ZGVZN8pybind116detail19get_local_internalsEvE6locals,"awG",@nobits,_ZGVZN8pybind116detail19get_local_internalsEvE6locals,comdat
	.weak	_ZGVZN8pybind116detail19get_local_internalsEvE6locals
	.p2align	3, 0x0
_ZGVZN8pybind116detail19get_local_internalsEvE6locals:
	.quad	0                               # 0x0
	.size	_ZGVZN8pybind116detail19get_local_internalsEvE6locals, 8

	.type	.L.str.111,@object              # @.str.111
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.111:
	.asciz	"basic_string::_M_replace_aux"
	.size	.L.str.111, 29

	.type	.L.str.112,@object              # @.str.112
.L.str.112:
	.asciz	"cannot create std::vector larger than max_size()"
	.size	.L.str.112, 49

	.type	.L.str.115,@object              # @.str.115
.L.str.115:
	.asciz	"PyCFunction_Check(func_obj)"
	.size	.L.str.115, 28

	.type	.L.str.116,@object              # @.str.116
.L.str.116:
	.asciz	"/opt/conda/envs/py_3.12/include/python3.12/cpython/methodobject.h"
	.size	.L.str.116, 66

	.type	.L__PRETTY_FUNCTION__._ZL20PyCFunction_GET_SELFP7_object,@object # @__PRETTY_FUNCTION__._ZL20PyCFunction_GET_SELFP7_object
.L__PRETTY_FUNCTION__._ZL20PyCFunction_GET_SELFP7_object:
	.asciz	"PyObject *PyCFunction_GET_SELF(PyObject *)"
	.size	.L__PRETTY_FUNCTION__._ZL20PyCFunction_GET_SELFP7_object, 43

	.type	.L.str.117,@object              # @.str.117
.L.str.117:
	.asciz	"isinstance<capsule>(self)"
	.size	.L.str.117, 26

	.type	.L.str.118,@object              # @.str.118
.L.str.118:
	.asciz	"/opt/conda/envs/py_3.12/lib/python3.12/site-packages/pybind11/include/pybind11/pybind11.h"
	.size	.L.str.118, 90

	.type	.L__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_,@object # @__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_
.L__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_:
	.asciz	"static PyObject *pybind11::cpp_function::dispatcher(PyObject *, PyObject *, PyObject *)"
	.size	.L__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_, 88

	.type	.L.str.119,@object              # @.str.119
.L.str.119:
	.asciz	"overloads != nullptr"
	.size	.L.str.119, 21

	.type	.L.str.120,@object              # @.str.120
.L.str.120:
	.asciz	"PyTuple_Check(args_in)"
	.size	.L.str.120, 23

	.type	.L.str.121,@object              # @.str.121
.L.str.121:
	.asciz	"__init__(self, ...) called with invalid or missing `self` argument"
	.size	.L.str.121, 67

	.type	.L.str.122,@object              # @.str.122
.L.str.122:
	.asciz	"Internal error: function call dispatcher inserted wrong number of arguments!"
	.size	.L.str.122, 77

	.hidden	_ZTSN8pybind1120reference_cast_errorE # @_ZTSN8pybind1120reference_cast_errorE
	.type	_ZTSN8pybind1120reference_cast_errorE,@object
	.section	.rodata._ZTSN8pybind1120reference_cast_errorE,"aG",@progbits,_ZTSN8pybind1120reference_cast_errorE,comdat
	.weak	_ZTSN8pybind1120reference_cast_errorE
_ZTSN8pybind1120reference_cast_errorE:
	.asciz	"N8pybind1120reference_cast_errorE"
	.size	_ZTSN8pybind1120reference_cast_errorE, 34

	.hidden	_ZTIN8pybind1120reference_cast_errorE # @_ZTIN8pybind1120reference_cast_errorE
	.type	_ZTIN8pybind1120reference_cast_errorE,@object
	.section	.data.rel.ro._ZTIN8pybind1120reference_cast_errorE,"awG",@progbits,_ZTIN8pybind1120reference_cast_errorE,comdat
	.weak	_ZTIN8pybind1120reference_cast_errorE
	.p2align	3, 0x0
_ZTIN8pybind1120reference_cast_errorE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN8pybind1120reference_cast_errorE
	.quad	_ZTIN8pybind1117builtin_exceptionE
	.size	_ZTIN8pybind1120reference_cast_errorE, 24

	.type	.L.str.123,@object              # @.str.123
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.123:
	.asciz	"(): incompatible "
	.size	.L.str.123, 18

	.type	.L.str.124,@object              # @.str.124
.L.str.124:
	.asciz	"constructor"
	.size	.L.str.124, 12

	.type	.L.str.125,@object              # @.str.125
.L.str.125:
	.asciz	"function"
	.size	.L.str.125, 9

	.type	.L.str.126,@object              # @.str.126
.L.str.126:
	.asciz	" arguments. The following argument types are supported:\n"
	.size	.L.str.126, 57

	.type	.L.str.127,@object              # @.str.127
.L.str.127:
	.asciz	"    "
	.size	.L.str.127, 5

	.type	.L.str.128,@object              # @.str.128
.L.str.128:
	.asciz	", "
	.size	.L.str.128, 3

	.type	.L.str.129,@object              # @.str.129
.L.str.129:
	.asciz	" -> "
	.size	.L.str.129, 5

	.type	.L.str.130,@object              # @.str.130
.L.str.130:
	.asciz	"\nInvoked with: "
	.size	.L.str.130, 16

	.type	.L.str.131,@object              # @.str.131
.L.str.131:
	.asciz	"<repr raised Error>"
	.size	.L.str.131, 20

	.type	.L.str.132,@object              # @.str.132
.L.str.132:
	.asciz	"; "
	.size	.L.str.132, 3

	.type	.L.str.133,@object              # @.str.133
.L.str.133:
	.asciz	"kwargs: "
	.size	.L.str.133, 9

	.type	.L.str.134,@object              # @.str.134
.L.str.134:
	.asciz	"{}="
	.size	.L.str.134, 4

	.type	.L.str.135,@object              # @.str.135
.L.str.135:
	.asciz	"Unable to convert function return value to a Python type! The signature was\n\t"
	.size	.L.str.135, 78

	.type	.L.str.136,@object              # @.str.136
.L.str.136:
	.asciz	"current_overload != nullptr"
	.size	.L.str.136, 28

	.type	.L.str.137,@object              # @.str.137
.L.str.137:
	.asciz	"PyTuple_Check(op)"
	.size	.L.str.137, 18

	.type	.L.str.138,@object              # @.str.138
.L.str.138:
	.asciz	"/opt/conda/envs/py_3.12/include/python3.12/cpython/tupleobject.h"
	.size	.L.str.138, 65

	.type	.L__PRETTY_FUNCTION__._ZL16PyTuple_GET_SIZEP7_object,@object # @__PRETTY_FUNCTION__._ZL16PyTuple_GET_SIZEP7_object
.L__PRETTY_FUNCTION__._ZL16PyTuple_GET_SIZEP7_object:
	.asciz	"Py_ssize_t PyTuple_GET_SIZE(PyObject *)"
	.size	.L__PRETTY_FUNCTION__._ZL16PyTuple_GET_SIZEP7_object, 40

	.type	.L.str.139,@object              # @.str.139
.L.str.139:
	.asciz	"ob->ob_type != &PyLong_Type"
	.size	.L.str.139, 28

	.type	.L.str.140,@object              # @.str.140
.L.str.140:
	.asciz	"/opt/conda/envs/py_3.12/include/python3.12/object.h"
	.size	.L.str.140, 52

	.type	.L__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object,@object # @__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object
.L__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object:
	.asciz	"Py_ssize_t Py_SIZE(PyObject *)"
	.size	.L__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object, 31

	.type	.L.str.141,@object              # @.str.141
.L.str.141:
	.asciz	"ob->ob_type != &PyBool_Type"
	.size	.L.str.141, 28

	.type	.L.str.142,@object              # @.str.142
.L.str.142:
	.asciz	"pybind11::detail::get_type_info: type has multiple pybind11-registered bases"
	.size	.L.str.142, 77

	.type	.L.str.143,@object              # @.str.143
.L.str.143:
	.asciz	"pybind11::detail::instance::get_value_and_holder: `"
	.size	.L.str.143, 52

	.type	.L.str.144,@object              # @.str.144
.L.str.144:
	.asciz	"' is not a pybind11 base of the given `"
	.size	.L.str.144, 40

	.type	.L.str.145,@object              # @.str.145
.L.str.145:
	.asciz	"' instance"
	.size	.L.str.145, 11

	.type	.L.str.147,@object              # @.str.147
.L.str.147:
	.asciz	"vector<bool>::_M_insert_aux"
	.size	.L.str.147, 28

	.type	.L.str.148,@object              # @.str.148
.L.str.148:
	.asciz	"Could not allocate tuple object!"
	.size	.L.str.148, 33

	.type	.L.str.149,@object              # @.str.149
.L.str.149:
	.asciz	"Could not allocate dict object!"
	.size	.L.str.149, 32

	.type	.L.str.150,@object              # @.str.150
.L.str.150:
	.asciz	"vector<bool>::_M_fill_insert"
	.size	.L.str.150, 29

	.type	.L.str.151,@object              # @.str.151
.L.str.151:
	.asciz	"loader_life_support: internal error"
	.size	.L.str.151, 36

	.type	.L.str.152,@object              # @.str.152
.L.str.152:
	.asciz	"Exception escaped from default exception translator!"
	.size	.L.str.152, 53

	.type	.L.str.153,@object              # @.str.153
.L.str.153:
	.asciz	"format"
	.size	.L.str.153, 7

	.type	.L.str.154,@object              # @.str.154
.L.str.154:
	.asciz	"pybind11::object_api<>::operator() PyGILState_Check() failure."
	.size	.L.str.154, 63

	.hidden	_ZTSN8pybind116handleE          # @_ZTSN8pybind116handleE
	.type	_ZTSN8pybind116handleE,@object
	.section	.rodata._ZTSN8pybind116handleE,"aG",@progbits,_ZTSN8pybind116handleE,comdat
	.weak	_ZTSN8pybind116handleE
_ZTSN8pybind116handleE:
	.asciz	"N8pybind116handleE"
	.size	_ZTSN8pybind116handleE, 19

	.type	.L.str.155,@object              # @.str.155
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.155:
	.asciz	"Unable to convert call argument '"
	.size	.L.str.155, 34

	.type	.L.str.156,@object              # @.str.156
.L.str.156:
	.asciz	"' of type '"
	.size	.L.str.156, 12

	.type	.L.str.157,@object              # @.str.157
.L.str.157:
	.asciz	"' to Python object"
	.size	.L.str.157, 19

	.type	.L__PRETTY_FUNCTION__._ZL16PyTuple_SET_ITEMP7_objectlS0_,@object # @__PRETTY_FUNCTION__._ZL16PyTuple_SET_ITEMP7_objectlS0_
.L__PRETTY_FUNCTION__._ZL16PyTuple_SET_ITEMP7_objectlS0_:
	.asciz	"void PyTuple_SET_ITEM(PyObject *, Py_ssize_t, PyObject *)"
	.size	.L__PRETTY_FUNCTION__._ZL16PyTuple_SET_ITEMP7_objectlS0_, 58

	.type	.L.str.158,@object              # @.str.158
.L.str.158:
	.asciz	"std::"
	.size	.L.str.158, 6

	.type	.L.str.159,@object              # @.str.159
.L.str.159:
	.asciz	"\n\nDid you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,\n<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic\nconversions are optional and require extra headers to be included\nwhen compiling your pybind11 module."
	.size	.L.str.159, 243

	.hidden	_ZZN8pybind117options12global_stateEvE8instance # @_ZZN8pybind117options12global_stateEvE8instance
	.type	_ZZN8pybind117options12global_stateEvE8instance,@object
	.section	.data._ZZN8pybind117options12global_stateEvE8instance,"awG",@progbits,_ZZN8pybind117options12global_stateEvE8instance,comdat
	.weak	_ZZN8pybind117options12global_stateEvE8instance
_ZZN8pybind117options12global_stateEvE8instance:
	.byte	1                               # 0x1
	.byte	1                               # 0x1
	.byte	1                               # 0x1
	.size	_ZZN8pybind117options12global_stateEvE8instance, 3

	.type	.L.str.160,@object              # @.str.160
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.160:
	.asciz	"Could not allocate weak reference!"
	.size	.L.str.160, 35

	.type	.L.str.161,@object              # @.str.161
.L.str.161:
	.asciz	"bases.empty()"
	.size	.L.str.161, 14

	.type	.L.str.162,@object              # @.str.162
.L.str.162:
	.asciz	"/opt/conda/envs/py_3.12/lib/python3.12/site-packages/pybind11/include/pybind11/detail/type_caster_base.h"
	.size	.L.str.162, 105

	.type	.L__PRETTY_FUNCTION__._ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE,@object # @__PRETTY_FUNCTION__._ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE
.L__PRETTY_FUNCTION__._ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE:
	.asciz	"void pybind11::detail::all_type_info_populate(PyTypeObject *, std::vector<type_info *> &)"
	.size	.L__PRETTY_FUNCTION__._ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE, 90

	.type	.L.str.163,@object              # @.str.163
.L.str.163:
	.asciz	"!types->empty()"
	.size	.L.str.163, 16

	.type	.L__PRETTY_FUNCTION__._ZN8pybind116detail18values_and_holders8iteratorC2EPNS0_8instanceEPKSt6vectorIPNS0_9type_infoESaIS7_EE,@object # @__PRETTY_FUNCTION__._ZN8pybind116detail18values_and_holders8iteratorC2EPNS0_8instanceEPKSt6vectorIPNS0_9type_infoESaIS7_EE
.L__PRETTY_FUNCTION__._ZN8pybind116detail18values_and_holders8iteratorC2EPNS0_8instanceEPKSt6vectorIPNS0_9type_infoESaIS7_EE:
	.asciz	"pybind11::detail::values_and_holders::iterator::iterator(instance *, const type_vec *)"
	.size	.L__PRETTY_FUNCTION__._ZN8pybind116detail18values_and_holders8iteratorC2EPNS0_8instanceEPKSt6vectorIPNS0_9type_infoESaIS7_EE, 87

	.type	.L.str.164,@object              # @.str.164
.L.str.164:
	.asciz	"pybind11_object"
	.size	.L.str.164, 16

	.type	.L.str.165,@object              # @.str.165
.L.str.165:
	.asciz	"make_object_base_type(): error allocating type!"
	.size	.L.str.165, 48

	.type	.L.str.166,@object              # @.str.166
.L.str.166:
	.asciz	"PyType_Ready failed in make_object_base_type(): "
	.size	.L.str.166, 49

	.type	.L.str.167,@object              # @.str.167
.L.str.167:
	.asciz	"!PyType_HasFeature(type, Py_TPFLAGS_HAVE_GC)"
	.size	.L.str.167, 45

	.type	.L.str.168,@object              # @.str.168
.L.str.168:
	.asciz	"/opt/conda/envs/py_3.12/lib/python3.12/site-packages/pybind11/include/pybind11/detail/class.h"
	.size	.L.str.168, 94

	.type	.L__PRETTY_FUNCTION__._ZN8pybind116detail21make_object_base_typeEP11_typeobject,@object # @__PRETTY_FUNCTION__._ZN8pybind116detail21make_object_base_typeEP11_typeobject
.L__PRETTY_FUNCTION__._ZN8pybind116detail21make_object_base_typeEP11_typeobject:
	.asciz	"PyObject *pybind11::detail::make_object_base_type(PyTypeObject *)"
	.size	.L__PRETTY_FUNCTION__._ZN8pybind116detail21make_object_base_typeEP11_typeobject, 66

	.type	.L.str.169,@object              # @.str.169
.L.str.169:
	.asciz	"instance allocation failed: new instance has no pybind11-registered base types"
	.size	.L.str.169, 79

	.type	.L.str.170,@object              # @.str.170
.L.str.170:
	.asciz	": No constructor defined!"
	.size	.L.str.170, 26

	.type	.L.str.171,@object              # @.str.171
.L.str.171:
	.asciz	"pybind11_object_dealloc(): Tried to deallocate unregistered instance!"
	.size	.L.str.171, 70

	.type	.L.str.172,@object              # @.str.172
.L.str.172:
	.asciz	"FATAL: Internal consistency check failed: Invalid clear_patients() call."
	.size	.L.str.172, 73

	.type	.L.str.173,@object              # @.str.173
.L.str.173:
	.asciz	"Internal error in module_::create_extension_module()"
	.size	.L.str.173, 53

	.type	.L.str.174,@object              # @.str.174
.L.str.174:
	.asciz	"tk_kernel python module"
	.size	.L.str.174, 24

	.type	.L.str.175,@object              # @.str.175
.L.str.175:
	.asciz	"micro_tk"
	.size	.L.str.175, 9

	.type	.L.str.176,@object              # @.str.176
.L.str.176:
	.asciz	"dispatch_micro"
	.size	.L.str.176, 15

	.type	.L.str.177,@object              # @.str.177
.L.str.177:
	.asciz	"__doc__"
	.size	.L.str.177, 8

	.type	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E9signature,@object # @_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E9signature
	.section	.rodata,"a",@progbits
_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E9signature:
	.asciz	"({object}, {object}, {object}) -> None"
	.size	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E9signature, 39

	.type	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E5types,@object # @_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E5types
	.p2align	3, 0x0
_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E5types:
	.zero	8
	.size	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E5types, 8

	.type	.L.str.178,@object              # @.str.178
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.178:
	.asciz	"__class__"
	.size	.L.str.178, 10

	.type	.L.str.179,@object              # @.str.179
.L.str.179:
	.asciz	"Tensor"
	.size	.L.str.179, 7

	.type	.L.str.180,@object              # @.str.180
.L.str.180:
	.asciz	"is_contiguous"
	.size	.L.str.180, 14

	.type	.L.str.181,@object              # @.str.181
.L.str.181:
	.asciz	"Tensor must be contiguous"
	.size	.L.str.181, 26

	.type	.L.str.182,@object              # @.str.182
.L.str.182:
	.asciz	"device"
	.size	.L.str.182, 7

	.type	.L.str.183,@object              # @.str.183
.L.str.183:
	.asciz	"type"
	.size	.L.str.183, 5

	.type	.L.str.184,@object              # @.str.184
.L.str.184:
	.asciz	"cpu"
	.size	.L.str.184, 4

	.type	.L.str.185,@object              # @.str.185
.L.str.185:
	.asciz	"Tensor must be on CUDA device"
	.size	.L.str.185, 30

	.type	.L.str.186,@object              # @.str.186
.L.str.186:
	.asciz	"shape"
	.size	.L.str.186, 6

	.type	.L.str.187,@object              # @.str.187
.L.str.187:
	.asciz	"Expected Tensor.ndim <= 4"
	.size	.L.str.187, 26

	.type	.L.str.188,@object              # @.str.188
.L.str.188:
	.asciz	"data_ptr"
	.size	.L.str.188, 9

	.type	.L.str.189,@object              # @.str.189
.L.str.189:
	.asciz	"Expected a torch.Tensor"
	.size	.L.str.189, 24

	.type	.L__const._ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE.shape,@object # @__const._ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE.shape
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	2, 0x0
.L__const._ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE.shape:
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.size	.L__const._ZN7kittens2py11from_objectINS_2glIfLin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE.shape, 16

	.type	.L.str.192,@object              # @.str.192
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.192:
	.asciz	"Error during initialization: multiple incompatible definitions with name \""
	.size	.L.str.192, 75

	.type	.L.str.193,@object              # @.str.193
.L.str.193:
	.asciz	"\""
	.size	.L.str.193, 2

	.type	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E9signature,@object # @_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E9signature
	.section	.rodata,"a",@progbits
_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E9signature:
	.asciz	"({object}, {object}, {object}) -> None"
	.size	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E9signature, 39

	.type	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E5types,@object # @_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E5types
	.p2align	3, 0x0
_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E5types:
	.zero	8
	.size	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E5types, 8

	.type	.L__unnamed_1,@object           # @0
	.section	.rodata.str1.1,"aMS",@progbits,1
.L__unnamed_1:
	.asciz	"_Z8micro_tk13micro_globals"
	.size	.L__unnamed_1, 27

	.type	.L__unnamed_2,@object           # @1
	.section	.hip_fatbin,"a",@progbits
	.p2align	12, 0x0
.L__unnamed_2:
	.asciz	"__CLANG_OFFLOAD_BUNDLE__\002\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\000\000\000\000\000\000\000host-x86_64-unknown-linux-gnu-\000\020\000\000\000\000\000\000P(\000\000\000\000\000\000\037\000\000\000\000\000\000\000hipv4-amdgcn-amd-amdhsa--gfxt\000@\000\020\000\016\000\006\000\000\000\004\000\000\000@\000\000\000\000\000\000\000@\000\000\000\000\000\000\000@\000\000\000\000\000\000\000\370\001\000\000\000\000\000\000\370\001\000\000\000\000\000\000\bp\000\000\000\000\000\000\000\300\016\000\000\000\000\000\000\000\020\000\000\000\000\000\000\001\000\000\000\006\000\000\000\260!\000\000\000\000\000\000\260Q\000\000\000\000\000\000\260Q\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\002\000\000\000\006\000\000\000@!\000\000\000\000\000\000@A\000\000\000\000\000\000@A\000\000\000\000\000\000p\000\000\000\000\000\000\000p\000\000\000\000\000\000\000\b\000\000\000\000\000\000\000R\345td\004\000\000\000@!\000\000\000\000\000\000@A\000\000\000\000\000\000@A\000\000\000\000\000\000p\000\000\000\000\000\000\000\300\016\000\000\000\000\000\000\001\000\000\000\000\000\000\000Q\345td\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\000\000\004\000\000\0008\002\000\000\000\000\000\0008\002\000\000\000\000\000\0008\002\000\000\000\000\000\000\024\002\000\000\000\000\000\000\024\002\000\000\000\000\000\000\004\000\000\000\000\000\000\000\007\000\000\000\375\001\000\000 \000\000\000AMDGPU\000\000\203\256amdhsa.kernels\221\336\000\022\253.agpr_count\000\245.args\221\203\247.offset\000\245.size\314\220\253.value_kind\250by_value\271.group_segment_fixed_size\000\266.kernarg_segment_align\b\265.kernarg_segment_size\314\220\251.language\250OpenCL C\261.language_version\222\002\000\270.max_flat_workgroup_size\315\002\000\245.name\272_Z8micro_tk13micro_globals\273.private_segment_fixed_size\000\253.sgpr_count\"\261.sgpr_spill_count\000\247.symbol\275_Z8micro_tk13micro_globals.kd\270.uniform_work_group_size\001\263.uses_dynamic_stack\302\253.vgpr_count\314\340\261.vgpr_spill_count\000\257.wavefront_size@\255amdhsa.target\271amdgcn-amd-amdhsa--gfx942\256amdhsa.version\222\001\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\022\003\007\000\000\026\000\000\000\000\000\000$\027\000\000\000\000\000\000\034\000\000\000\021\003\006\000\200\005\000\000\000\000\000\000@\000\000\000\000\000\000\000:\000\000\000\021\000\n\000\260Q\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\032\000\000\000\000\000\t\000\004\220\020\000\001\000\000\000n\226\363@\354\205\221\322\023\2634\211\004\000\000\000\004\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000_Z8micro_tk13micro_globals\000_Z8micro_tk13micro_globals.kd\000__hip_cuid_9be0291b55b98188\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\000\000\000\000\000\000\000\200\020\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\000\000\000\033\001\257\000\204\001\000\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\301\007\277\200\200\005\205\200\000\204\276\005\320\020\206\200\002\006\300\000\000\000\000\200\001\006\300 \000\000\000\200\004\006\3000\000\000\000\000\002\006\300P\000\000\000\000\003\006\300`\000\000\000\200\003\006\300\200\000\000\000\005\217\000\206\004\000\201\276\020\220\020\201\000\200\022\277\005\020\005\205\003\210\030\216\030\237\003\220\177\300\214\277\006\003\020\222\006\030\021\226\005\377\000\201\000\200\000\000\021\020\020\201\007\030\007\222\000\320\001\206\020\007\021\201\006\030\020\222\000\217\024\206\001\220\001\201\020\201\220\216\n\020\020\200\013\021\021\202\002\210\007\216\007\237\n\220\b\n\n\222\b\007\013\226\013\n\n\201\t\007\t\222\n\t\013\201\b\007\n\222\n\201\212\216\203\000\004$\022\n\022\200\270\004(&\203\000\006 \023\013\023\202\f\n\350\321\003\rP\004\300\006*(\237\030\032\"\b\n\350\321\025\rP\004\204\000.$\201(0$\004\000\b\322\f\003A\000\237\020\022\"\f\000\375\321\006\0161\004\377\006,(\300\000\000\000\377..&\200\037\000\000\00502h\000\200\\\334\004\000\177\004\b\000\b\322\b\003A\000\237\030\032\"\020\n\350\321\026\rP\004\031/8h\000\200\\\334\b\000\177\b\f\000\b\322\f\003A\000\237 \"\"\21004(\2048: \000\200\\\334\f\000\177\f\020\000\b\322\020\003A\000\00546h\377::&x\000\000\000\000\200\\\334\020\000\177\020p\017\214\277\03598*\000\000\232\330\034\004\000\000\033/\bh\204\b\n \377\n\n&x\000\000\000\005\t\b*\377.8(\000 \000\000\000\000\232\330\004\006\000\000\0319\bh\204\b\n \377\n\n&x\000\000\000\005\t\b*\000\000\232\330\004\b\000\000\0339\bh\204\b\n \377\n\n&x\000\000\000\005\t\b*\377.:(\000@\000\000\000\000\232\330\004\n\000\000\031;\bh\204\b\n \377\n\n&x\000\000\000\005\t\b*\000\000\232\330\004\f\000\000\033;\bh\204\b\n \377\n\n&x\000\000\000\005\t\b*\377.<(\000`\000\000\000\000\232\330\004\016\000\000\031=\bh\204\b\n \377\n\n&x\000\000\000\005\t\b*\000\000\232\330\004\020\000\000\033=\bh\004\000\225\276\204\b\n \024\200\022\277\377\n\n&x\000\000\000\f\n\350\321\003\021P\004\005\t\b*\237\030\032\"\b\n\350\321\025\021P\004\000\001\007\205\000\000\232\330\004\022\000\000\004\000\b\322\f\003I\000\237\020\022\"\f\000\375\321\b\0161\004\0070\006h\177\300\214\277\000\200\\\334\004\000\177\004\b\000\b\322\b\003I\000\237\030\032\"\020\n\350\321\026\021P\004\003/*h\000\200\\\334\b\000\177\b\f\000\b\322\f\003I\000\237 \"\"\204*, \000\200\\\334\f\000\177\f\020\000\b\322\020\003I\000\0074(h\377,,&x\000\000\000\000\200\\\334\020\000\177\020p\017\214\277\026+**\000\000\232\330\025\004\000\000\024/\bh\204\b\n \377\n\n&x\000\000\000\005\t\b*\000\000\232\330\004\006\000\000\0039\bh\204\b\n \377\n\n&x\000\000\000\005\t\b*\000\000\232\330\004\b\000\000\0249\bh\204\b\n \377\n\n&x\000\000\000\005\t\b*\000\000\232\330\004\n\000\000\003;\bh\204\b\n \377\n\n&x\000\000\000\005\t\b*\000\000\232\330\004\f\000\000\024;\bh\204\b\n \377\n\n&x\000\000\000\005\t\b*\003=\006h\000\000\232\330\004\016\000\000\204\006\b \377\b\b&x\000\000\000\004\007\006*\000\000\232\330\003\020\000\000\024=\006h\204\006\b \377\b\b&x\000\000\000\004\007\006*\000\000\232\330\003\022\000\000\210\000\002 \201\002\224}\177\300\214\277\000\000\212\277j \200\276\001\000\210\277\000\000\212\277~\000\376\207\201\000\006 \230\006\006&\230\004\004&\006\000\310\321\000\005\031\002\004\000\350\321\006\021\b\004\202\000R!\b\206\000\216\201\bb%\000\b\bh\377R\017(\300\000\000\000\201\bd%\263\000\376\321\004\001\004\002\004\000\205\322\007\021\000\000\264\000\376\321\004\005\006\002\004\000\350\321\006\r\b\004\006\206\000\216\201\bj%\000\b\bh\205\002`%\201\bl%\267\000\376\321\004\001\004\002\004\000\205\322\007\r\000\000\270\000\376\321\004\005\006\002\260\005\004(\207\f\b$\201\004\004$\005\b\nh\005\005\fh\204\f\016 \377\016\016&x\000\000\000\007\rr+\210\004\f(\005\r\nh\204\n\016 \377\016\016&x\000\000\000\007\013t+\377\b\n(\000 \000\000\005\n\016h\007\005\020h\204\020\022 \377\022\022&x\000\000\000\007\r\016h\t\021v+\204\016\020 \377\020\020&x\000\000\000\b\017x+\377\b\016(\000@\000\000\005\016\020h\b\005\022h\204\022\024 \377\024\024&x\000\000\000\b\r\020h\n\023z+\204\020\022 \377\022\022&x\000\000\000\t\021|+\205\000\020$\377\020\020&\200\037\000\000\377\020\020(\000`\000\000\005\020\022h\t\005\024h\204\024\026 \377\026\026&x\000\000\000\t\r\022h\013\025~+\204\022\024 \377\024\024&x\000\000\000\007\b\bh\n\023\200+\004\005\022h\204\022\024 \377\024\024&x\000\000\000\004\r\bh\n\023\202+\204\b\022 \377\022\022&x\000\000\000\t\t\204+\007\n\bh\004\005\nh\204\n\022 \377\022\022&x\000\000\000\004\r\bh\t\013\206+\204\b\n \377\n\n&x\000\000\000\005\t\210+\007\016\bh\004\005\nh\204\n\016 \377\016\016&x\000\000\000\004\r\bh\007\013\212+\204\b\n \377\n\n&x\000\000\000\005\t\214+\007\020\bh\004\005\004h\204\004\n \377\n\n&x\000\000\000\005\005\216+\004\r\004h\204\004\b \247\000\310\321\000\r\t\002\217\000L'\377\b\b&x\000\000\000\004\005\220+\214N\005$\207L\t$\002\000\002\322\002\t\016\004\007\004\222i\214\002\004$\006\211\032\216\002\000\002\322\002\t\016\004\004\000\206\276\004\000\207\276\005\004\224i\004\000\205\276\006p\370~\004p\364~\200p8\177|q\000\177zq\354~zq\344~zq\334~zq\324~zq\314~zq\304~zq\274~zq\264~zq\254~zq\244~zq\234~zq\224~zq\214~zq\204~zq|~zqt~zql~zqd~zq\\~zqT~zqL~zqD~zq<~zq4~zq,~zq$~zq\034~zq\024~zq\f~zq\004~\b\211\031\216\377`Q)\000 \000\000\200\002V\177\377\002Z\177\000\000\021\000\377\000\205\276\377\377\000\000\234q0\177\234q \177\234q\020\177\234q@\177\234q(\177\234q\030\177\234q\b\177zq\374~|q\360~|q\350~|q\340~|q\330~|q\320~|q\310~|q\300~|q\270~|q\260~|q\250~|q\240~|q\230~|q\220~|q\210~|q\200~|qx~|qp~|qh~|q`~|qX~|qP~|qH~|q@~|q8~|q0~|q(~|q ~|q\030~|q\020~|q\b~\004\000\202\277\000\000\212\277\177\300\214\277\200\000\004\261\205\001\205\277\004\000\200\276\004\201\004\201\177\000\200\261\301\200\206\205\177\000\000\261\250q\\\177F\000\205\277\256\000\000\322\004\f\301\006\201\\U%\242\000\b\322\020\000\251\006\032\002X\177~\001\224\276\242\005\020~\243\005\022~\254\005\024~\255\005\026~\bD\325}\000\000\200\277\000\000\352\320\nX\003\000j\000\200\206\000 \200\276\000\020\\\340\265\206\002\200~\000\376\210\362\377\211\277\024\001\376\276~\001\224\276\242\005\020~\243\005\022~\254\005\024~\255\005\026~\bD\325}\000\000\200\277\000\000\352\320\nX\003\000j\000\200\206\000 \200\276\000\020\\\340\266\216\002\200~\000\376\210\362\377\211\277\024\001\376\276~\001\224\276\242\005\020~\243\005\022~\254\005\024~\255\005\026~\bD\325}\000\000\200\277\000\000\352\320\nX\003\000j\000\200\206\000 \200\276\000\020\\\340\267\226\002\200~\000\376\210\362\377\211\277\024\001\376\276~\001\224\276\242\005\020~\243\005\022~\254\005\024~\255\005\026~\bD\325}\000\000\200\277\000\000\352\320\nX\003\000j\000\200\206\000 \200\276\000\020\\\340\270\232\002\200~\000\376\210\362\377\211\277\024\001\376\276\201\\U%\242\000\b\322\022\000\251\006\031\002X\177\200\000\233\276\006\301\224\210\304\000\202\277\026\001\376\276\033\222Ui\204TI!\377T]i\000\b\000\000\377T\227i\000@\000\000\377HI'x\000\000\000\204\\K!\204\226\231!\244UI+\377J_'x\000\000\000\377\230\231'x\000\000\000\000\000\354\330\244\000\000\244\257]]+\314\227\227+\377TUi\000H\000\000\000\000\354\330\256\000\000\256\177\300\214\277\000\000\354\330\313\000\000\314\204T\227!\377\226\227'x\000\000\000\313UU+\000\000\354\330\252\000\000\316\033\224Ui\204T\227!\377\226\227'x\000\000\000\313U\227+\177\300\214\277\000\000\354\330\313\000\000\320\377T\227i\000\b\000\000\204\226\245!\377\244\245'x\000\000\000\322\227\227+\000\000\354\330\313\000\000\322\377T\227i\000 \000\000\204\226\251!\377\250\251'x\000\000\000\324\227\227+\177\300\214\277\000\000\354\330\313\000\000\324\377T\227i\000(\000\000\204\226\255!\377\254\255'x\000\000\000\326\227\227+\000\000\354\330\313\000\000\326\377T\227i\000@\000\000\204\226\261!\377\260\261'x\000\000\000\330\227\227+\177\300\214\277\000\000\354\330\313\000\000\330\377T\227i\000H\000\000\204\226\265!\377\264\265'x\000\000\000\332\227\227+\000\000\354\330\313\000\000\332\377T\227i\000`\000\000\204\226\271!\377\270\271'x\000\000\000\334\227\227+\377TUi\000h\000\000\177\300\214\277\000\000\354\330\313\000\000\334\204T\227!\377\226\227'x\000\000\000\313UU+\000\000\354\330\252\000\000\336\244\000\312\321\005H\223\006\256\000\312\321\005\\\273\006\314\000\312\321\005\2303\007\316\000\312\321\005\234;\007\320\000\312\321\005\240C\007\322\000\312\321\005\244K\007\324\000\312\321\005\250S\007\326\000\312\321\005\254[\007\330\000\312\321\005\260c\007\332\000\312\321\005\264k\007\334\000\312\321\005\270s\007\336\000\312\321\005\274{\007\177\300\214\277\000\000\212\277\001\000\217\277z\000\341\323\320I\353\005~\000\341\323\320]\373\005v\000\341\323\322I\333\005r\000\341\323\322]\313\005n\000\341\323\320\231\273\005j\000\341\323\320\235\253\005f\000\341\323\322\231\233\005b\000\341\323\322\235\213\005^\000\341\323\324I{\005Z\000\341\323\324]k\005V\000\341\323\326I[\005R\000\341\323\326]K\005N\000\341\323\324\231;\005J\000\341\323\324\235+\005F\000\341\323\326\231\033\005B\000\341\323\326\235\013\005>\000\341\323\330I\373\004:\000\341\323\330]\353\0046\000\341\323\332I\333\0042\000\341\323\332]\313\004.\000\341\323\330\231\273\004*\000\341\323\330\235\253\004&\000\341\323\332\231\233\004\"\000\341\323\332\235\213\004\036\000\341\323\334I{\004\032\000\341\323\334]k\004\026\000\341\323\336I[\004\022\000\341\323\336]K\004\016\000\341\323\334\231;\004\n\000\341\323\334\235+\004\006\000\341\323\336\231\033\004\002\000\341\323\336\235\013\004\000\000\217\277\000\000\212\277\033\240\033\201\200\000\033\261E\000\205\277\033\300\007\277\301\200\200\205\024\000\200\207~\000\352\2068\377\207\277~\001\226\276\242\005\020~\243\005\022~\254\005\024~\255\005\026~\bD\325}\000\000\200\277\000\000\352\320\nX\003\000j\000\200\206\000 \200\276\000\020\\\340\261\202\002\200~\000\376\210\362\377\211\277\026\001\376\276~\001\226\276\242\005\020~\243\005\022~\254\005\024~\255\005\026~\bD\325}\000\000\200\277\000\000\352\320\nX\003\000j\000\200\206\000 \200\276\000\020\\\340\262\212\002\200~\000\376\210\362\377\211\277\026\001\376\276~\001\226\276\242\005\020~\243\005\022~\254\005\024~\255\005\026~\bD\325}\000\000\200\277\000\000\352\320\nX\003\000j\000\200\206\000 \200\276\000\020\\\340\263\222\002\200~\000\376\210\362\377\211\277\026\001\376\276~\001\226\276\242\005\020~\243\005\022~\254\005\024~\255\005\026~\bD\325}\000\000\200\277\000\000\352\320\nX\003\000j\000\200\206\000 \200\276\000\020\\\340\264\236\002\200~\000\376\210\362\377\211\277\367\376\202\277~\006\352\206\235\376\206\277p\017\214\277s\017\214\277\000\000\232\330\271\206\000\000\000\000\232\330\272\210\000\000r\017\214\277\000\000\232\330\273\216\000\000\000\000\232\330\274\220\000\000q\017\214\277\000\000\232\330\275\226\000\000\000\000\232\330\276\230\000\000p\017\214\277\000\000\232\330\277\232\000\000\000\000\232\330\300\234\000\000\000\000\232\330\301\202\000\000\000\000\232\330\302\204\000\000\000\000\232\330\303\212\000\000\000\000\232\330\304\214\000\000\000\000\232\330\305\222\000\000\000\000\232\330\306\224\000\000\000\000\232\330\307\236\000\000\000\000\232\330\310\240\000\000w\376\202\277\000\001\000\260\000\000\230}j \200\276\001\000\210\277\000\000\212\277~\000\376\207\214R\001&\000\000\205\322\000\035\000\000s\017\214\277\016\000\004i\256\000\000\322\001\013a\000\205N\003$\016\004\tip\017\214\277\240\000\000\322\002\020\005\004\016\003\002\222\001\000\205\322\017\\\003\000\242\000\350\321\016\\\003\002\016\b\ri\000M\021i\202M\025i\243\000\377\321\243\005\004\004\237@C#\237\020\023#\237\024\027#\204M\031i\206M\035i\242\000\b\322\242\0051\000\240\000\217\322\202@\003\000\237\000\002\"\200\002N\177\237\030\033#\237\034\037#\242\000\b\322\242\001\201\006\210\000\217\322\202\020\003\000\212\000\217\322\202\024\003\000\000\000\b\322\000\001\231\006\244\000\b\322\242\001!\006\250\000\b\322\242\001)\006\214\000\217\322\202\030\003\000\216\000\217\322\202\034\003\000\000\000\217\322\202\000\002\000\000\200p\334\244z\177\000\000\200p\334\250{\177\000\252\000\b\322\242\0011\006\254\000\b\322\242\0019\006z\000\b\322\242\001\001\004\237\004\007#\000\200p\334\252|\177\000\000\200p\334\254}\177\000@\200p\334z~\177\000z\000\b\322\202\001\231\006z\000\217\322\202\364\002\000|\000\b\322\242\001\351\005\237\b\013#@\200p\334|\177\177\000|\000\b\322\204\001\231\006|\000\217\322\202\370\002\000\220\000\350\321\016\032\031\006~\000\b\322\242\001\361\005\237\f\017#\016 %i@\200p\334~\200\177\000~\000\b\322\206\001\231\006\016$)i\220M1i\222M5i~\000\217\322\202\374\002\000\016(-i\23703#\23747#\202\000\b\322\242\001\371\005\224M9i\226M=i@\200p\334\202\201\177\000\200\000\217\322\2020\003\000\204\000\217\322\2024\003\000\2378;#\237<?#\202\000\b\322\242\001\001\006\206\000\b\322\242\001\021\006\000\200p\334\202v\177\000\000\200p\334\206w\177\000v\000\217\322\2028\003\000\232\000\217\322\202<\003\000\230\000\b\322\242\001\331\005\234\000\b\322\242\001i\006\237 ##\000\200p\334\230x\177\000\000\200p\334\234y\177\000x\000\b\322\220\001\231\006x\000\217\322\202\360\002\000\220\000\b\322\242\001\341\005\237$'#@\200p\334\220r\177\000\220\000\b\322\222\001\231\006\220\000\217\322\202 \003\000\222\000\b\322\242\001A\006\237(+#@\200p\334\222s\177\000r\000\b\322\224\001\231\006r\000\217\322\202\344\002\000\222\000\b\322\242\001\311\005\237,/#@\200p\334\222t\177\000\222\000\b\322\226\001\231\006\222\000\217\322\202$\003\000\224\000\b\322\242\001I\006\377\001\200\276\000\002\000\000@\200p\334\224u\177\000t\000\b\322\242\001\001\000\000\202p\334\244n\177\000\000\202p\334\250o\177\000\000\202p\334\252p\177\000\000\202p\334\254q\177\000n\000\b\322t\001\001\004@\200p\334nj\177\000n\000\b\322t\001\351\005@\200p\334nk\177\000j\000\b\322t\001\361\005@\200p\334jl\177\000j\000\b\322t\001\371\005@\200p\334jm\177\000\000\202p\334\202f\177\000\000\202p\334\206g\177\000\000\202p\334\230h\177\000\000\202p\334\234i\177\000f\000\b\322t\001\341\005@\200p\334fb\177\000f\000\b\322t\001A\006@\200p\334fc\177\000b\000\b\322t\001\311\005@\200p\334bd\177\000b\000\b\322t\001I\006@\200p\334be\177\000\300\\\305(d\000\205\322\017\304\002\000b\004\350\321\016\304\002\002c\000\377\321c\005\220\005b\000\b\322b\0051\000b\000\b\322b\001\201\006d\000\b\322b\001!\006f\000\b\322b\001)\006\000\200p\334d^\177\000\000\200p\334f_\177\000^\000\b\322b\0011\006h\000\b\322b\0019\006\000\200p\334^`\177\000\000\200p\334ha\177\000`\000\b\322b\001\001\004@\200p\334`Z\177\000`\000\b\322b\001\351\005@\200p\334`[\177\000Z\000\b\322b\001\361\005@\200p\334Z\\\177\000Z\000\b\322b\001\371\005@\200p\334Z]\177\000Z\000\b\322b\001\001\006\\\000\b\322b\001\021\006\000\200p\334ZV\177\000\000\200p\334\\W\177\000V\000\b\322b\001\331\005`\000\b\322b\001i\006\000\200p\334VX\177\000\000\200p\334`Y\177\000X\000\b\322b\001\341\005@\200p\334XR\177\000X\000\b\322b\001A\006@\200p\334XS\177\000R\000\b\322b\001\311\005@\200p\334RT\177\000R\000\b\322b\001I\006@\200p\334RU\177\000R\000\b\322b\001\001\000\000\202p\334dN\177\000\000\202p\334fO\177\000\000\202p\334^P\177\000\000\202p\334hQ\177\000N\000\b\322R\001\001\004@\200p\334NJ\177\000N\000\b\322R\001\351\005@\200p\334NK\177\000J\000\b\322R\001\361\005@\200p\334JL\177\000J\000\b\322R\001\371\005@\200p\334JM\177\000\000\202p\334ZF\177\000\000\202p\334\\G\177\000\000\202p\334VH\177\000\000\202p\334`I\177\000F\000\b\322R\001\341\005@\200p\334FB\177\000F\000\b\322R\001A\006@\200p\334FC\177\000B\000\b\322R\001\311\005@\200p\334BD\177\000B\000\b\322R\001I\006@\200p\334BE\177\000\377\\\205(\200\000\000\000D\000\205\322\017\204\002\000B\004\350\321\016\204\002\002C\000\377\321C\005\020\005B\000\b\322B\0051\000B\000\b\322B\001\201\006D\000\b\322B\001!\006F\000\b\322B\001)\006\000\200p\334D>\177\000\000\200p\334F?\177\000>\000\b\322B\0011\006H\000\b\322B\0019\006\000\200p\334>@\177\000\000\200p\334HA\177\000@\000\b\322B\001\001\004@\200p\334@:\177\000@\000\b\322B\001\351\005@\200p\334@;\177\000:\000\b\322B\001\361\005@\200p\334:<\177\000:\000\b\322B\001\371\005@\200p\334:=\177\000:\000\b\322B\001\001\006<\000\b\322B\001\021\006\000\200p\334:6\177\000\000\200p\334<7\177\0006\000\b\322B\001\331\005@\000\b\322B\001i\006\000\200p\33468\177\000\000\200p\334@9\177\0008\000\b\322B\001\341\005@\200p\33482\177\0008\000\b\322B\001A\006@\200p\33483\177\0002\000\b\322B\001\311\005@\200p\33424\177\0002\000\b\322B\001I\006@\200p\33425\177\0002\000\b\322B\001\001\000\000\202p\334D.\177\000\000\202p\334F/\177\000\000\202p\334>0\177\000\000\202p\334H1\177\000.\000\b\3222\001\001\004@\200p\334.*\177\000.\000\b\3222\001\351\005@\200p\334.+\177\000*\000\b\3222\001\361\005@\200p\334*,\177\000*\000\b\3222\001\371\005@\200p\334*-\177\000\000\202p\334:&\177\000\000\202p\334<'\177\000\000\202p\3346(\177\000\000\202p\334@)\177\000&\000\b\3222\001\341\005@\200p\334&\"\177\000&\000\b\3222\001A\006@\200p\334&#\177\000\"\000\b\3222\001\311\005@\200p\334\"$\177\000\"\000\b\3222\001I\006@\200p\334\"%\177\000\377\\E(\300\000\000\000$\000\205\322\017D\002\000\"\004\350\321\016D\002\002#\000\377\321#\005\220\004\"\000\b\322\"\0051\000\"\000\b\322\"\001\201\006$\000\b\322\"\001!\006&\000\b\322\"\001)\006\000\200p\334$\036\177\000\000\200p\334&\037\177\000\036\000\b\322\"\0011\006(\000\b\322\"\0019\006\000\200p\334\036 \177\000\000\200p\334(!\177\000 \000\b\322\"\001\001\004@\200p\334 \032\177\000 \000\b\322\"\001\351\005@\200p\334 \033\177\000\032\000\b\322\"\001\361\005@\200p\334\032\034\177\000\032\000\b\322\"\001\371\005@\200p\334\032\035\177\000\032\000\b\322\"\001\001\006\034\000\b\322\"\001\021\006\000\200p\334\032\026\177\000\000\200p\334\034\027\177\000\026\000\b\322\"\001\331\005 \000\b\322\"\001i\006\000\200p\334\026\030\177\000\000\200p\334 \031\177\000\030\000\b\322\"\001\341\005@\200p\334\030\022\177\000\030\000\b\322\"\001A\006@\200p\334\030\023\177\000\022\000\b\322\"\001\311\005@\200p\334\022\024\177\000\022\000\b\322\"\001I\006@\200p\334\022\025\177\000\022\000\b\322\"\001\001\000\000\000\b\322\022\001\001\004\000\202p\334$\016\177\000\000\202p\334&\017\177\000\000\202p\334\036\020\177\000\000\202p\334(\021\177\000@\200p\334\000\n\177\000\000\000\b\322\022\001\351\005@\200p\334\000\013\177\000\000\000\b\322\022\001\361\005@\200p\334\000\f\177\000\000\000\b\322\022\001\371\005@\200p\334\000\r\177\000\000\202p\334\032\006\177\000\000\202p\334\034\007\177\000\000\202p\334\026\b\177\000\000\202p\334 \t\177\000\000\000\b\322\022\001\341\005@\200p\334\000\002\177\000\000\000\b\322\022\001A\006@\200p\334\000\003\177\000\000\000\b\322\022\001\311\005@\200p\334\000\004\177\000\000\000\b\322\022\001I\006@\200pn\000\000\000\000\000\000\000V\000\000\000\000\000\000\000\365\376\377o\000\000\000\000\260\004\000\000\000\000\000\000\004\000\000\000\000\000\000\000\330\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000Linker: AMD LLD 19.0.0 (/longer_pathname_so_that_rpms_can_support_packaging_the_debug_info_for_all_os_profiles/src/llvm-project/llvm c87081df219c42dc27c5b6d86c0525bc7d01f727)\000AMD clang version 19.0.0git (https://github.com/RadeonOpenCompute/llvm-project roc-6.4.1 25184 c87081df219c42dc27c5b6d86c0525bc7d01f727)\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\000\000\000\000\002\b\000@A\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\022\003\007\000\000\026\000\000\000\000\000\000$\027\000\000\000\000\000\000\034\000\000\000\021\003\006\000\200\005\000\000\000\000\000\000@\000\000\000\000\000\000\000:\000\000\000\021\000\n\000\260Q\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000.note\000.dynsym\000.gnu.hash\000.hash\000.dynstr\000.rodata\000.text\000.dynamic\000.relro_padding\000.bss\000.AMDGPU.csdata\000.comment\000.symtab\000.shstrtab\000.strtab\000\000_Z8micro_tk13micro_globals\000_Z8micro_tk13micro_globals.kd\000__hip_cuid_9be0291b55b`\000\000\000\000\000\000\000\005\000\000\000\001\000\000\000\b\000\000\000\000\000\000\000\030\000\000\000\000\000\000\000\017\000\000\000\366\377\377o\002\000\000\000\000\000\000\000\260\004\000\000\000\000\000\000\260\004\000\000\000\000\000\000(\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\000\000\000\005\000\000\000\002\000\000\000\000\000\000\000\330\004\000\000\000\000\000\000\330\004\000\000\000\000\000\000(\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\037\000\000\000\003\000\000\000\002\000\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\005\000\000\000\000\000\000V\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000'\000\000\000\001\000\000\000\002\000\000\000\000\000\000\000\200\005\000\000\000\000\000\000\200\005\000\000\000\000\000\000@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\000\000\000\001\000\000\000\006\000\000\000\000\000\000\000\000\026\000\000\000\000\000\000\000\006\000\000\000\000\000\000@\033\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\000\000\000\006\000\000\000\003\000\000\000\000\000\000\000@A\000\000\000\000\000\000@!\000\000\000\000\000\000p\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\b\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000>\000\000\000\b\000\000\000\003\000\000\000\000\000\000\000\260A\000\000\000\000\000\000\260!\000\000\000\000\000\000P\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\000\000\000\b\000\000\000\003\000\000\000\000\000\000\000\260Q\000\000\000\000\000\000\260!\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260!\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\000\000\000\001\000\000\0000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260!\000\000\000\000\000\0009\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000j\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\"\000\000\000\000\000\000x\000\000\000\000\000\000\000\017\000\000\000\002\000\000\000\b\000\000\000\000\000\000\000\030\000\000\000\000\000\000\000r\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000h#\000\000\000\000\000\000\204\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354#\000\000\000\000\000\000_\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
	.size	.L__unnamed_2, 14416

	.type	__hip_fatbin_wrapper,@object    # @__hip_fatbin_wrapper
	.section	.hipFatBinSegment,"aw",@progbits
	.p2align	3, 0x0
__hip_fatbin_wrapper:
	.long	1212764230                      # 0x48495046
	.long	1                               # 0x1
	.quad	.L__unnamed_2
	.quad	0
	.size	__hip_fatbin_wrapper, 24

	.type	__hip_gpubin_handle_9be0291b55b98188,@object # @__hip_gpubin_handle_9be0291b55b98188
	.local	__hip_gpubin_handle_9be0291b55b98188
	.comm	__hip_gpubin_handle_9be0291b55b98188,8,8
	.section	.init_array,"aw",@init_array
	.p2align	3, 0x0
	.quad	__hip_module_ctor
	.type	__hip_cuid_9be0291b55b98188,@object # @__hip_cuid_9be0291b55b98188
	.bss
	.globl	__hip_cuid_9be0291b55b98188
__hip_cuid_9be0291b55b98188:
	.byte	0                               # 0x0
	.size	__hip_cuid_9be0291b55b98188, 1

	.section	".linker-options","e",@llvm_linker_options
	.data
	.p2align	3, 0x0
.L_ZTIN10__cxxabiv115__forced_unwindE.DW.stub:
	.quad	_ZTIN10__cxxabiv115__forced_unwindE
.L_ZTIN8pybind1117builtin_exceptionE.DW.stub:
	.quad	_ZTIN8pybind1117builtin_exceptionE
.L_ZTIN8pybind1117error_already_setE.DW.stub:
	.quad	_ZTIN8pybind1117error_already_setE
.L_ZTIN8pybind1120reference_cast_errorE.DW.stub:
	.quad	_ZTIN8pybind1120reference_cast_errorE
.L_ZTISt11range_error.DW.stub:
	.quad	_ZTISt11range_error
.L_ZTISt12domain_error.DW.stub:
	.quad	_ZTISt12domain_error
.L_ZTISt12length_error.DW.stub:
	.quad	_ZTISt12length_error
.L_ZTISt12out_of_range.DW.stub:
	.quad	_ZTISt12out_of_range
.L_ZTISt14overflow_error.DW.stub:
	.quad	_ZTISt14overflow_error
.L_ZTISt16invalid_argument.DW.stub:
	.quad	_ZTISt16invalid_argument
.L_ZTISt16nested_exception.DW.stub:
	.quad	_ZTISt16nested_exception
.L_ZTISt9bad_alloc.DW.stub:
	.quad	_ZTISt9bad_alloc
.L_ZTISt9exception.DW.stub:
	.quad	_ZTISt9exception
	.hidden	DW.ref.__gxx_personality_v0
	.weak	DW.ref.__gxx_personality_v0
	.section	.data.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,comdat
	.p2align	3, 0x0
	.type	DW.ref.__gxx_personality_v0,@object
	.size	DW.ref.__gxx_personality_v0, 8
DW.ref.__gxx_personality_v0:
	.quad	__gxx_personality_v0
	.ident	"AMD clang version 19.0.0git (https://github.com/RadeonOpenCompute/llvm-project roc-6.4.1 25184 c87081df219c42dc27c5b6d86c0525bc7d01f727)"
	.section	".note.GNU-stack","",@progbits
	.addrsig
	.addrsig_sym __gxx_personality_v0
	.addrsig_sym _Z23__device_stub__micro_tk13micro_globals
	.addrsig_sym _ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE
	.addrsig_sym _ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE
	.addrsig_sym pybind11_static_get
	.addrsig_sym pybind11_static_set
	.addrsig_sym pybind11_traverse
	.addrsig_sym pybind11_clear
	.addrsig_sym PyObject_GenericGetDict
	.addrsig_sym PyObject_GenericSetDict
	.addrsig_sym pybind11_meta_call
	.addrsig_sym pybind11_meta_setattro
	.addrsig_sym pybind11_meta_getattro
	.addrsig_sym pybind11_meta_dealloc
	.addrsig_sym _ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_
	.addrsig_sym _ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_
	.addrsig_sym _ZZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infomENUlPvE_8__invokeESE_
	.addrsig_sym _ZZN8pybind117capsule35initialize_with_void_ptr_destructorEPKvPKcPFvPvEENUlP7_objectE_8__invokeES9_
	.addrsig_sym pybind11_object_new
	.addrsig_sym pybind11_object_init
	.addrsig_sym pybind11_object_dealloc
	.addrsig_sym _ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE
	.addrsig_sym _ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeES10_
	.addrsig_sym _ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeES10_
	.addrsig_sym __hip_module_ctor
	.addrsig_sym __hip_module_dtor
	.addrsig_sym _Unwind_Resume
	.addrsig_sym _Z8micro_tk13micro_globals
	.addrsig_sym _ZL29pybind11_module_def_tk_kernel
	.addrsig_sym _ZTVN10__cxxabiv120__si_class_type_infoE
	.addrsig_sym _ZTSN8pybind1117error_already_setE
	.addrsig_sym _ZTISt9exception
	.addrsig_sym _ZTIN8pybind1117error_already_setE
	.addrsig_sym _ZTISt13runtime_error
	.addrsig_sym _ZTSN8pybind1110cast_errorE
	.addrsig_sym _ZTSN8pybind1117builtin_exceptionE
	.addrsig_sym _ZTIN8pybind1117builtin_exceptionE
	.addrsig_sym _ZTIN8pybind1110cast_errorE
	.addrsig_sym PyByteArray_Type
	.addrsig_sym _ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTVN10__cxxabiv117__class_type_infoE
	.addrsig_sym _ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE
	.addrsig_sym PyDict_Type
	.addrsig_sym _ZTISt9bad_alloc
	.addrsig_sym _ZTISt12domain_error
	.addrsig_sym _ZTISt16invalid_argument
	.addrsig_sym _ZTISt12length_error
	.addrsig_sym _ZTISt12out_of_range
	.addrsig_sym _ZTISt11range_error
	.addrsig_sym _ZTISt14overflow_error
	.addrsig_sym _ZTISt16nested_exception
	.addrsig_sym PyType_Type
	.addrsig_sym PyProperty_Type
	.addrsig_sym _ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset
	.addrsig_sym _ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature
	.addrsig_sym _ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types
	.addrsig_sym _Py_NoneStruct
	.addrsig_sym PyInstanceMethod_Type
	.addrsig_sym PyCFunction_Type
	.addrsig_sym _ZGVZN8pybind116detail19get_local_internalsEvE6locals
	.addrsig_sym PyCapsule_Type
	.addrsig_sym _ZTIN10__cxxabiv115__forced_unwindE
	.addrsig_sym _ZTSN8pybind1120reference_cast_errorE
	.addrsig_sym _ZTIN8pybind1120reference_cast_errorE
	.addrsig_sym _Py_NotImplementedStruct
	.addrsig_sym PyLong_Type
	.addrsig_sym PyBool_Type
	.addrsig_sym PyBaseObject_Type
	.addrsig_sym _ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E9signature
	.addrsig_sym _ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E5types
	.addrsig_sym _Py_TrueStruct
	.addrsig_sym _Py_FalseStruct
	.addrsig_sym PyFloat_Type
	.addrsig_sym _ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E9signature
	.addrsig_sym _ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_NS9_IfLin1ELin1ELin1ELin1EJEEEEEEvT1_T2_DpMT0_T3_EUlNS_6objectESJ_SJ_E_vJSJ_SJ_SJ_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSF_DpT1_EDpRKT2_E5types
	.addrsig_sym .L__unnamed_2
	.addrsig_sym __hip_fatbin_wrapper
	.addrsig_sym __hip_cuid_9be0291b55b98188
