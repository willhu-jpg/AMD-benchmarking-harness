	.text
	.file	"256_256_64_16.cpp"
                                        # Start of file scope inline assembly
	.globl	_ZSt21ios_base_library_initv

                                        # End of file scope inline assembly
	.section	.text._ZNK8pybind1117error_already_set4whatEv,"axG",@progbits,_ZNK8pybind1117error_already_set4whatEv,comdat
	.hidden	_ZNK8pybind1117error_already_set4whatEv # -- Begin function _ZNK8pybind1117error_already_set4whatEv
	.weak	_ZNK8pybind1117error_already_set4whatEv
	.p2align	4, 0x90
	.type	_ZNK8pybind1117error_already_set4whatEv,@function
_ZNK8pybind1117error_already_set4whatEv: # @_ZNK8pybind1117error_already_set4whatEv
.Lfunc_begin0:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception0
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$48, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp0:
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind1118gil_scoped_acquireC2Ev
.Ltmp1:
# %bb.1:
	leaq	16(%rsp), %rsi
	leaq	24(%rsp), %rdx
.Ltmp2:
	leaq	8(%rsp), %rdi
	callq	PyErr_Fetch@PLT
.Ltmp3:
# %bb.2:                                # %_ZN8pybind1111error_scopeC2Ev.exit
	movq	8(%rbx), %rdi
.Ltmp4:
	callq	_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev
.Ltmp5:
# %bb.3:
	movq	(%rax), %rbx
	movq	8(%rsp), %rdi
	movq	16(%rsp), %rsi
	movq	24(%rsp), %rdx
.Ltmp7:
	callq	PyErr_Restore@PLT
.Ltmp8:
# %bb.4:                                # %_ZN8pybind1111error_scopeD2Ev.exit
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind1118gil_scoped_acquireD2Ev
	movq	%rbx, %rax
	addq	$48, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB0_6:
	.cfi_def_cfa_offset 64
.Ltmp9:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_5:
.Ltmp6:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end0:
	.size	_ZNK8pybind1117error_already_set4whatEv, .Lfunc_end0-_ZNK8pybind1117error_already_set4whatEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind1117error_already_set4whatEv,"aG",@progbits,_ZNK8pybind1117error_already_set4whatEv,comdat
	.p2align	2, 0x0
GCC_except_table0:
.Lexception0:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase0-.Lttbaseref0
.Lttbaseref0:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end0-.Lcst_begin0
.Lcst_begin0:
	.uleb128 .Ltmp0-.Lfunc_begin0           # >> Call Site 1 <<
	.uleb128 .Ltmp5-.Ltmp0                  #   Call between .Ltmp0 and .Ltmp5
	.uleb128 .Ltmp6-.Lfunc_begin0           #     jumps to .Ltmp6
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp7-.Lfunc_begin0           # >> Call Site 2 <<
	.uleb128 .Ltmp8-.Ltmp7                  #   Call between .Ltmp7 and .Ltmp8
	.uleb128 .Ltmp9-.Lfunc_begin0           #     jumps to .Ltmp9
	.byte	1                               #   On action: 1
.Lcst_end0:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase0:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1118gil_scoped_acquireC2Ev,"axG",@progbits,_ZN8pybind1118gil_scoped_acquireC2Ev,comdat
	.hidden	_ZN8pybind1118gil_scoped_acquireC2Ev # -- Begin function _ZN8pybind1118gil_scoped_acquireC2Ev
	.weak	_ZN8pybind1118gil_scoped_acquireC2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind1118gil_scoped_acquireC2Ev,@function
_ZN8pybind1118gil_scoped_acquireC2Ev:   # @_ZN8pybind1118gil_scoped_acquireC2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	$0, (%rdi)
	movw	$257, 8(%rdi)                   # imm = 0x101
	callq	_ZN8pybind116detail13get_internalsEv
	movq	%rax, %r15
	leaq	432(%rax), %r14
	movq	%r14, %rdi
	callq	PyThread_tss_get@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	jne	.LBB1_4
# %bb.1:
	callq	PyGILState_GetThisThreadState@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB1_2
.LBB1_4:                                # %.thread
	callq	_PyThreadState_UncheckedGet@PLT
	movq	(%rbx), %rdi
	cmpq	%rdi, %rax
	setne	8(%rbx)
	je	.LBB1_7
.LBB1_6:                                # %._crit_edge
	callq	PyEval_AcquireThread@PLT
	movq	(%rbx), %rdi
.LBB1_7:
	incl	120(%rdi)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB1_2:
	.cfi_def_cfa_offset 32
	movq	448(%r15), %rdi
	callq	PyThreadState_New@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB1_3
# %bb.5:
	movl	$0, 120(%rax)
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	PyThread_tss_set@PLT
	movq	(%rbx), %rdi
	testb	$1, 8(%rbx)
	jne	.LBB1_6
	jmp	.LBB1_7
.LBB1_3:
	leaq	.L.str.3(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Lfunc_end1:
	.size	_ZN8pybind1118gil_scoped_acquireC2Ev, .Lfunc_end1-_ZN8pybind1118gil_scoped_acquireC2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text.__clang_call_terminate,"axG",@progbits,__clang_call_terminate,comdat
	.hidden	__clang_call_terminate          # -- Begin function __clang_call_terminate
	.weak	__clang_call_terminate
	.p2align	4, 0x90
	.type	__clang_call_terminate,@function
__clang_call_terminate:                 # @__clang_call_terminate
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	callq	__cxa_begin_catch@PLT
	callq	_ZSt9terminatev@PLT
.Lfunc_end2:
	.size	__clang_call_terminate, .Lfunc_end2-__clang_call_terminate
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev,"axG",@progbits,_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev,comdat
	.hidden	_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev # -- Begin function _ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev
	.weak	_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev
	.p2align	4, 0x90
	.type	_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev,@function
_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev: # @_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev
.Lfunc_begin1:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception1
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	cmpb	$0, 56(%rdi)
	jne	.LBB3_39
# %bb.1:
	leaq	8(%rsp), %rdi
	movq	%rbx, %rsi
	callq	_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev
	movq	16(%rsp), %r12
	movq	%r12, %rax
	shrq	%rax
	movabsq	$4611686018427387903, %rcx      # imm = 0x3FFFFFFFFFFFFFFF
	cmpq	%rcx, %rax
	je	.LBB3_44
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	leaq	2(%r12), %r14
	movq	8(%rsp), %r15
	leaq	24(%rsp), %rax
	cmpq	%rax, %r15
	je	.LBB3_13
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.thread
	movq	24(%rsp), %r13
	movq	%r13, %rax
	cmpq	%r13, %r14
	jbe	.LBB3_16
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i19
	cmpq	$-3, %r12
	jle	.LBB3_15
.LBB3_5:
	addq	%rax, %rax
	movabsq	$9223372036854775807, %rbp      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rbp, %rax
	cmovbq	%rax, %rbp
	cmpq	%rax, %r14
	cmovaeq	%r14, %rbp
	movq	%rbp, %rdi
	incq	%rdi
	js	.LBB3_42
# %bb.6:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i
.Ltmp12:
	callq	_Znwm@PLT
.Ltmp13:
# %bb.7:                                # %.noexc24
	movq	%rax, %rcx
	movw	$8250, (%rax)                   # imm = 0x203A
	testq	%r12, %r12
	je	.LBB3_10
# %bb.8:
	movq	%rcx, %rdi
	addq	$2, %rdi
	cmpq	$1, %r12
	jne	.LBB3_40
# %bb.9:
	movzbl	(%r15), %eax
	movb	%al, (%rdi)
.LBB3_10:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit27.i
	leaq	24(%rsp), %rax
	cmpq	%rax, %r15
	je	.LBB3_12
.LBB3_11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i20
	incq	%r13
	movq	%r15, %rdi
	movq	%r13, %rsi
	movq	%rcx, %r15
	callq	_ZdlPvm@PLT
	movq	%r15, %rcx
.LBB3_12:                               # %.noexc18
	movq	%rcx, 8(%rsp)
	movq	%rbp, 24(%rsp)
	jmp	.LBB3_22
.LBB3_13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i
	cmpq	$15, %r14
	jbe	.LBB3_16
# %bb.14:
	movl	$15, %eax
	movq	24(%rsp), %r13
	cmpq	$-3, %r12
	jg	.LBB3_5
.LBB3_15:
	leaq	.L.str.9(%rip), %rdi
	jmp	.LBB3_45
.LBB3_16:
	leaq	.L.str.6(%rip), %rax
	cmpq	%rax, %r15
	seta	%cl
	leaq	(%r15,%r12), %rdx
	cmpq	%rax, %rdx
	setb	%al
	orb	%cl, %al
	cmpb	$1, %al
	jne	.LBB3_41
# %bb.17:
	testq	%r12, %r12
	je	.LBB3_21
# %bb.18:
	cmpq	$1, %r12
	jne	.LBB3_20
# %bb.19:
	movzbl	(%r15), %eax
	movb	%al, 2(%r15)
	jmp	.LBB3_21
.LBB3_20:
	leaq	2(%r15), %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memmove@PLT
.LBB3_21:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm.exit.i
	movw	$8250, (%r15)                   # imm = 0x203A
.LBB3_22:                               # %.noexc
	movabsq	$9223372036854775806, %r13      # imm = 0x7FFFFFFFFFFFFFFE
	movq	%r14, 16(%rsp)
	movq	8(%rsp), %rax
	movb	$0, (%rax,%r14)
	leaq	56(%rsp), %r15
	movq	%r15, 40(%rsp)
	movq	8(%rsp), %rcx
	leaq	24(%rsp), %r14
	cmpq	%r14, %rcx
	je	.LBB3_24
# %bb.23:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	%rcx, 40(%rsp)
	movq	16(%rsp), %r12
	movq	24(%rsp), %rax
	movq	%rax, 56(%rsp)
	jmp	.LBB3_25
.LBB3_24:
	movq	16(%rsp), %r12
	leaq	1(%r12), %rdx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	memcpy@PLT
	movq	%r15, %rcx
.LBB3_25:
	movq	%r12, 48(%rsp)
	movq	%r14, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
	movq	32(%rbx), %rsi
	subq	%rsi, %r13
	incq	%r13
	cmpq	%r12, %r13
	jb	.LBB3_47
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	leaq	(%rsi,%r12), %r14
	movq	24(%rbx), %rdi
	leaq	40(%rbx), %rdx
	movl	$15, %eax
	cmpq	%rdx, %rdi
	je	.LBB3_28
# %bb.27:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	movq	40(%rbx), %rax
.LBB3_28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	cmpq	%rax, %r14
	jbe	.LBB3_30
# %bb.29:
.Ltmp14:
	leaq	24(%rbx), %rdi
	xorl	%edx, %edx
	movq	%r12, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp15:
	jmp	.LBB3_34
.LBB3_30:
	testq	%r12, %r12
	je	.LBB3_34
# %bb.31:
	addq	%rsi, %rdi
	cmpq	$1, %r12
	jne	.LBB3_33
# %bb.32:
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB3_34
.LBB3_33:
	movq	%rcx, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB3_34:
	movq	%r14, 32(%rbx)
	movq	24(%rbx), %rax
	movb	$0, (%rax,%r14)
	movq	40(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB3_36
# %bb.35:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6
	movq	56(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB3_36:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_38
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i7
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB3_38:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit9
	movb	$1, 56(%rbx)
.LBB3_39:
	addq	$24, %rbx
	movq	%rbx, %rax
	addq	$72, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB3_40:
	.cfi_def_cfa_offset 128
	movq	%r15, %rsi
	movq	%r12, %rdx
	movq	%rcx, %r12
	callq	memcpy@PLT
	movq	%r12, %rcx
	leaq	24(%rsp), %rax
	cmpq	%rax, %r15
	jne	.LBB3_11
	jmp	.LBB3_12
.LBB3_41:
.Ltmp10:
	leaq	.L.str.6(%rip), %rcx
	leaq	8(%rsp), %rdi
	movl	$2, %r8d
	movq	%r15, %rsi
	xorl	%edx, %edx
	movq	%r12, %r9
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@PLT
.Ltmp11:
	jmp	.LBB3_22
.LBB3_42:
.Ltmp19:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp20:
# %bb.43:                               # %.noexc23
.LBB3_44:
	leaq	.L.str.8(%rip), %rdi
.LBB3_45:                               # %.invoke
.Ltmp21:
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp22:
# %bb.46:                               # %.cont
.LBB3_47:
.Ltmp16:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp17:
# %bb.48:                               # %.noexc4
.LBB3_49:
.Ltmp18:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	cmpq	%r15, %rdi
	jne	.LBB3_52
# %bb.50:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit12
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB3_54
.LBB3_51:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit15
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB3_52:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i10
	movq	56(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_51
	jmp	.LBB3_54
.LBB3_53:
.Ltmp23:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_51
.LBB3_54:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i13
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end3:
	.size	_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev, .Lfunc_end3-_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev,"aG",@progbits,_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev,comdat
	.p2align	2, 0x0
GCC_except_table3:
.Lexception1:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end1-.Lcst_begin1
.Lcst_begin1:
	.uleb128 .Lfunc_begin1-.Lfunc_begin1    # >> Call Site 1 <<
	.uleb128 .Ltmp12-.Lfunc_begin1          #   Call between .Lfunc_begin1 and .Ltmp12
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp12-.Lfunc_begin1          # >> Call Site 2 <<
	.uleb128 .Ltmp13-.Ltmp12                #   Call between .Ltmp12 and .Ltmp13
	.uleb128 .Ltmp23-.Lfunc_begin1          #     jumps to .Ltmp23
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp13-.Lfunc_begin1          # >> Call Site 3 <<
	.uleb128 .Ltmp14-.Ltmp13                #   Call between .Ltmp13 and .Ltmp14
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp14-.Lfunc_begin1          # >> Call Site 4 <<
	.uleb128 .Ltmp15-.Ltmp14                #   Call between .Ltmp14 and .Ltmp15
	.uleb128 .Ltmp18-.Lfunc_begin1          #     jumps to .Ltmp18
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp15-.Lfunc_begin1          # >> Call Site 5 <<
	.uleb128 .Ltmp10-.Ltmp15                #   Call between .Ltmp15 and .Ltmp10
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp10-.Lfunc_begin1          # >> Call Site 6 <<
	.uleb128 .Ltmp22-.Ltmp10                #   Call between .Ltmp10 and .Ltmp22
	.uleb128 .Ltmp23-.Lfunc_begin1          #     jumps to .Ltmp23
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp16-.Lfunc_begin1          # >> Call Site 7 <<
	.uleb128 .Ltmp17-.Ltmp16                #   Call between .Ltmp16 and .Ltmp17
	.uleb128 .Ltmp18-.Lfunc_begin1          #     jumps to .Ltmp18
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp17-.Lfunc_begin1          # >> Call Site 8 <<
	.uleb128 .Lfunc_end3-.Ltmp17            #   Call between .Ltmp17 and .Lfunc_end3
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end1:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1111error_scopeD2Ev,"axG",@progbits,_ZN8pybind1111error_scopeD2Ev,comdat
	.hidden	_ZN8pybind1111error_scopeD2Ev   # -- Begin function _ZN8pybind1111error_scopeD2Ev
	.weak	_ZN8pybind1111error_scopeD2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind1111error_scopeD2Ev,@function
_ZN8pybind1111error_scopeD2Ev:          # @_ZN8pybind1111error_scopeD2Ev
.Lfunc_begin2:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception2
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	movq	(%rdi), %rax
	movq	8(%rdi), %rsi
	movq	16(%rdi), %rdx
.Ltmp24:
	movq	%rax, %rdi
	callq	PyErr_Restore@PLT
.Ltmp25:
# %bb.1:
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.LBB4_2:
	.cfi_def_cfa_offset 16
.Ltmp26:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end4:
	.size	_ZN8pybind1111error_scopeD2Ev, .Lfunc_end4-_ZN8pybind1111error_scopeD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1111error_scopeD2Ev,"aG",@progbits,_ZN8pybind1111error_scopeD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table4:
.Lexception2:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase1-.Lttbaseref1
.Lttbaseref1:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end2-.Lcst_begin2
.Lcst_begin2:
	.uleb128 .Ltmp24-.Lfunc_begin2          # >> Call Site 1 <<
	.uleb128 .Ltmp25-.Ltmp24                #   Call between .Ltmp24 and .Ltmp25
	.uleb128 .Ltmp26-.Lfunc_begin2          #     jumps to .Ltmp26
	.byte	1                               #   On action: 1
.Lcst_end2:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase1:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1118gil_scoped_acquireD2Ev,"axG",@progbits,_ZN8pybind1118gil_scoped_acquireD2Ev,comdat
	.hidden	_ZN8pybind1118gil_scoped_acquireD2Ev # -- Begin function _ZN8pybind1118gil_scoped_acquireD2Ev
	.weak	_ZN8pybind1118gil_scoped_acquireD2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind1118gil_scoped_acquireD2Ev,@function
_ZN8pybind1118gil_scoped_acquireD2Ev:   # @_ZN8pybind1118gil_scoped_acquireD2Ev
.Lfunc_begin3:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception3
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
.Ltmp27:
	callq	_ZN8pybind1118gil_scoped_acquire7dec_refEv
.Ltmp28:
# %bb.1:
	cmpb	$1, 8(%rbx)
	jne	.LBB5_3
# %bb.2:
.Ltmp29:
	callq	PyEval_SaveThread@PLT
.Ltmp30:
.LBB5_3:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB5_4:
	.cfi_def_cfa_offset 16
.Ltmp31:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end5:
	.size	_ZN8pybind1118gil_scoped_acquireD2Ev, .Lfunc_end5-_ZN8pybind1118gil_scoped_acquireD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1118gil_scoped_acquireD2Ev,"aG",@progbits,_ZN8pybind1118gil_scoped_acquireD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table5:
.Lexception3:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase2-.Lttbaseref2
.Lttbaseref2:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end3-.Lcst_begin3
.Lcst_begin3:
	.uleb128 .Ltmp27-.Lfunc_begin3          # >> Call Site 1 <<
	.uleb128 .Ltmp30-.Ltmp27                #   Call between .Ltmp27 and .Ltmp30
	.uleb128 .Ltmp31-.Lfunc_begin3          #     jumps to .Ltmp31
	.byte	1                               #   On action: 1
.Lcst_end3:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase2:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.globl	_Z23__device_stub__micro_tk13micro_globals # -- Begin function _Z23__device_stub__micro_tk13micro_globals
	.p2align	4, 0x90
	.type	_Z23__device_stub__micro_tk13micro_globals,@function
_Z23__device_stub__micro_tk13micro_globals: # @_Z23__device_stub__micro_tk13micro_globals
	.cfi_startproc
# %bb.0:
	subq	$56, %rsp
	.cfi_def_cfa_offset 64
	movq	%rdi, (%rsp)
	leaq	40(%rsp), %rdi
	leaq	24(%rsp), %rsi
	leaq	16(%rsp), %rdx
	leaq	8(%rsp), %rcx
	callq	__hipPopCallConfiguration@PLT
	movq	40(%rsp), %rsi
	movl	48(%rsp), %edx
	movq	24(%rsp), %rcx
	movl	32(%rsp), %r8d
	movq	_Z8micro_tk13micro_globals@GOTPCREL(%rip), %rdi
	movq	%rsp, %r9
	pushq	8(%rsp)
	.cfi_adjust_cfa_offset 8
	pushq	24(%rsp)
	.cfi_adjust_cfa_offset 8
	callq	hipLaunchKernel@PLT
	addq	$72, %rsp
	.cfi_adjust_cfa_offset -72
	retq
.Lfunc_end6:
	.size	_Z23__device_stub__micro_tk13micro_globals, .Lfunc_end6-_Z23__device_stub__micro_tk13micro_globals
	.cfi_endproc
                                        # -- End function
	.globl	_Z14dispatch_micro13micro_globals # -- Begin function _Z14dispatch_micro13micro_globals
	.p2align	4, 0x90
	.type	_Z14dispatch_micro13micro_globals,@function
_Z14dispatch_micro13micro_globals:      # @_Z14dispatch_micro13micro_globals
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$208, %rsp
	.cfi_def_cfa_offset 224
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	_Z8micro_tk13micro_globals@GOTPCREL(%rip), %rdi
	movl	$8, %esi
	movl	$65536, %edx                    # imm = 0x10000
	callq	hipFuncSetAttribute@PLT
	movabsq	$4294967808, %rdx               # imm = 0x100000200
	leaq	512(%rdx), %rdi
	movl	$65536, %r8d                    # imm = 0x10000
	movl	$1, %esi
	movl	$1, %ecx
	xorl	%r9d, %r9d
	callq	__hipPushCallConfiguration@PLT
	testl	%eax, %eax
	je	.LBB7_1
# %bb.2:
	callq	hipDeviceSynchronize@PLT
	addq	$208, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB7_1:
	.cfi_def_cfa_offset 224
	movq	(%rbx), %rax
	movq	%rax, 64(%rsp)
	movups	8(%rbx), %xmm0
	movups	%xmm0, 72(%rsp)
	movups	24(%rbx), %xmm0
	movups	%xmm0, 88(%rsp)
	movq	48(%rbx), %rax
	movq	%rax, 112(%rsp)
	movups	56(%rbx), %xmm0
	movups	%xmm0, 120(%rsp)
	movups	72(%rbx), %xmm0
	movups	%xmm0, 136(%rsp)
	movq	96(%rbx), %rax
	movq	%rax, 160(%rsp)
	movups	104(%rbx), %xmm0
	movups	%xmm0, 168(%rsp)
	movups	120(%rbx), %xmm0
	movups	%xmm0, 184(%rsp)
	leaq	64(%rsp), %rax
	movq	%rax, (%rsp)
	leaq	48(%rsp), %rdi
	leaq	32(%rsp), %rsi
	leaq	24(%rsp), %rdx
	leaq	16(%rsp), %rcx
	callq	__hipPopCallConfiguration@PLT
	movq	48(%rsp), %rsi
	movl	56(%rsp), %edx
	movq	32(%rsp), %rcx
	movl	40(%rsp), %r8d
	movq	_Z8micro_tk13micro_globals@GOTPCREL(%rip), %rdi
	movq	%rsp, %r9
	pushq	16(%rsp)
	.cfi_adjust_cfa_offset 8
	pushq	32(%rsp)
	.cfi_adjust_cfa_offset 8
	callq	hipLaunchKernel@PLT
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
	callq	hipDeviceSynchronize@PLT
	addq	$208, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end7:
	.size	_Z14dispatch_micro13micro_globals, .Lfunc_end7-_Z14dispatch_micro13micro_globals
	.cfi_endproc
                                        # -- End function
	.globl	PyInit_tk_kernel                # -- Begin function PyInit_tk_kernel
	.p2align	4, 0x90
	.type	PyInit_tk_kernel,@function
PyInit_tk_kernel:                       # @PyInit_tk_kernel
.Lfunc_begin4:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception4
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	callq	Py_GetVersion@PLT
	movq	%rax, %rbx
	leaq	.L.str(%rip), %rsi
	movl	$4, %edx
	movq	%rax, %rdi
	callq	strncmp@PLT
	testl	%eax, %eax
	jne	.LBB8_13
# %bb.1:
	movzbl	4(%rbx), %eax
	addb	$-48, %al
	cmpb	$9, %al
	ja	.LBB8_2
.LBB8_13:
	movq	PyExc_ImportError@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
	leaq	.L.str.1(%rip), %rsi
	leaq	.L.str(%rip), %rdx
	movq	%rbx, %rcx
	xorl	%eax, %eax
	callq	PyErr_Format@PLT
	xorl	%eax, %eax
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB8_2:
	.cfi_def_cfa_offset 16
	lock		incl	_ZZN8pybind116detail25get_num_interpreters_seenEvE7counter(%rip)
	movzbl	_ZGVZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager(%rip), %eax
	testb	%al, %al
	je	.LBB8_3
.LBB8_6:                                # %_ZN8pybind116detail24get_internals_pp_managerEv.exit
	movl	_ZZN8pybind116detail25get_num_interpreters_seenEvE7counter(%rip), %eax
	cmpl	$2, %eax
	jl	.LBB8_8
# %bb.7:
	leaq	_ZZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager+16(%rip), %rdi
	xorl	%esi, %esi
	callq	PyThread_tss_set@PLT
	leaq	_ZZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager+24(%rip), %rdi
	xorl	%esi, %esi
	callq	PyThread_tss_set@PLT
	jmp	.LBB8_9
.LBB8_8:
	movq	$0, _ZZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager+32(%rip)
.LBB8_9:                                # %_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE5unrefEv.exit
	callq	_ZN8pybind116detail13get_internalsEv
	movzbl	_ZGVZ16PyInit_tk_kernelE5slots(%rip), %eax
	testb	%al, %al
	je	.LBB8_10
.LBB8_12:
	leaq	_ZZ16PyInit_tk_kernelE3def(%rip), %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	PyModuleDef_Init@PLT            # TAILCALL
.LBB8_3:
	.cfi_def_cfa_offset 16
	leaq	_ZGVZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager(%rip), %rdi
	callq	__cxa_guard_acquire@PLT
	testl	%eax, %eax
	je	.LBB8_6
# %bb.4:
.Ltmp32:
	leaq	_ZZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager(%rip), %rdi
	leaq	.L.str.55(%rip), %rsi
	xorl	%edx, %edx
	callq	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEEC2EPKcPFvPS2_E
.Ltmp33:
# %bb.5:
	leaq	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEED2Ev(%rip), %rdi
	leaq	_ZZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager(%rip), %rsi
	leaq	__dso_handle(%rip), %rdx
	callq	__cxa_atexit@PLT
	leaq	_ZGVZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager(%rip), %rdi
	callq	__cxa_guard_release@PLT
	jmp	.LBB8_6
.LBB8_10:
	leaq	_ZGVZ16PyInit_tk_kernelE5slots(%rip), %rdi
	callq	__cxa_guard_acquire@PLT
	testl	%eax, %eax
	je	.LBB8_12
# %bb.11:
	movl	$2, _ZZ16PyInit_tk_kernelE5slots(%rip)
	leaq	_ZL23pybind11_exec_tk_kernelP7_object(%rip), %rax
	movq	%rax, _ZZ16PyInit_tk_kernelE5slots+8(%rip)
	movl	$3, _ZZ16PyInit_tk_kernelE5slots+16(%rip)
	movq	$0, _ZZ16PyInit_tk_kernelE5slots+24(%rip)
	movl	$0, _ZZ16PyInit_tk_kernelE5slots+32(%rip)
	movq	$0, _ZZ16PyInit_tk_kernelE5slots+40(%rip)
	leaq	_ZGVZ16PyInit_tk_kernelE5slots(%rip), %rdi
	callq	__cxa_guard_release@PLT
	leaq	_ZZ16PyInit_tk_kernelE3def(%rip), %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	PyModuleDef_Init@PLT            # TAILCALL
.LBB8_14:
	.cfi_def_cfa_offset 16
.Ltmp34:
	movq	%rax, %rbx
	leaq	_ZGVZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager(%rip), %rdi
	callq	__cxa_guard_abort@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end8:
	.size	PyInit_tk_kernel, .Lfunc_end8-PyInit_tk_kernel
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table8:
.Lexception4:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end4-.Lcst_begin4
.Lcst_begin4:
	.uleb128 .Lfunc_begin4-.Lfunc_begin4    # >> Call Site 1 <<
	.uleb128 .Ltmp32-.Lfunc_begin4          #   Call between .Lfunc_begin4 and .Ltmp32
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp32-.Lfunc_begin4          # >> Call Site 2 <<
	.uleb128 .Ltmp33-.Ltmp32                #   Call between .Ltmp32 and .Ltmp33
	.uleb128 .Ltmp34-.Lfunc_begin4          #     jumps to .Ltmp34
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp33-.Lfunc_begin4          # >> Call Site 3 <<
	.uleb128 .Lfunc_end8-.Ltmp33            #   Call between .Ltmp33 and .Lfunc_end8
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end4:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail13get_internalsEv,"axG",@progbits,_ZN8pybind116detail13get_internalsEv,comdat
	.hidden	_ZN8pybind116detail13get_internalsEv # -- Begin function _ZN8pybind116detail13get_internalsEv
	.weak	_ZN8pybind116detail13get_internalsEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail13get_internalsEv,@function
_ZN8pybind116detail13get_internalsEv:   # @_ZN8pybind116detail13get_internalsEv
.Lfunc_begin5:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception5
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$24, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movzbl	_ZGVZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager(%rip), %eax
	testb	%al, %al
	je	.LBB9_1
.LBB9_4:                                # %_ZN8pybind116detail24get_internals_pp_managerEv.exit
	leaq	_ZZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager(%rip), %rdi
	callq	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE6get_ppEv
	movq	%rax, %r14
	movq	(%rax), %rax
	testq	%rax, %rax
	jne	.LBB9_16
# %bb.5:
	callq	PyGILState_Ensure@PLT
	movl	%eax, %ebx
	leaq	8(%rsp), %rsi
	leaq	16(%rsp), %rdx
.Ltmp38:
	movq	%rsp, %rdi
	callq	PyErr_Fetch@PLT
.Ltmp39:
# %bb.6:                                # %_ZN8pybind1111error_scopeC2Ev.exit
.Ltmp41:
	movl	$512, %edi                      # imm = 0x200
	callq	_Znwm@PLT
.Ltmp42:
# %bb.7:
.Ltmp43:
	movq	%rax, %r15
	movq	%rax, %rdi
	callq	_ZN8pybind116detail9internalsC2Ev
.Ltmp44:
# %bb.8:
	movq	(%r14), %r12
	movq	%r15, (%r14)
	testq	%r12, %r12
	je	.LBB9_10
# %bb.9:                                # %_ZNKSt14default_deleteIN8pybind116detail9internalsEEclEPS2_.exit.i.i
	movq	%r12, %rdi
	callq	_ZN8pybind116detail9internalsD2Ev
	movl	$512, %esi                      # imm = 0x200
	movq	%r12, %rdi
	callq	_ZdlPvm@PLT
	movq	(%r14), %r15
.LBB9_10:                               # %_ZNSt10unique_ptrIN8pybind116detail9internalsESt14default_deleteIS2_EE5resetEPS2_.exit
	cmpq	$0, 424(%r15)
	jne	.LBB9_13
# %bb.11:
	movq	416(%r15), %rdi
.Ltmp46:
	callq	_ZN8pybind116detail21make_object_base_typeEP11_typeobject
.Ltmp47:
# %bb.12:
	movq	(%r14), %rcx
	movq	%rax, 424(%rcx)
.LBB9_13:
	movq	(%rsp), %rdi
	movq	8(%rsp), %rsi
	movq	16(%rsp), %rdx
.Ltmp52:
	callq	PyErr_Restore@PLT
.Ltmp53:
# %bb.14:                               # %_ZN8pybind1111error_scopeD2Ev.exit
.Ltmp55:
	movl	%ebx, %edi
	callq	PyGILState_Release@PLT
.Ltmp56:
# %bb.15:                               # %_ZN8pybind1111error_scopeD2Ev.exit._ZN8pybind1125gil_scoped_acquire_simpleD2Ev.exit_crit_edge
	movq	(%r14), %rax
.LBB9_16:                               # %_ZN8pybind1125gil_scoped_acquire_simpleD2Ev.exit
	addq	$24, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB9_1:
	.cfi_def_cfa_offset 64
	leaq	_ZGVZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager(%rip), %rdi
	callq	__cxa_guard_acquire@PLT
	testl	%eax, %eax
	je	.LBB9_4
# %bb.2:
.Ltmp35:
	leaq	_ZZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager(%rip), %rdi
	leaq	.L.str.55(%rip), %rsi
	xorl	%edx, %edx
	callq	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEEC2EPKcPFvPS2_E
.Ltmp36:
# %bb.3:
	leaq	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEED2Ev(%rip), %rdi
	leaq	_ZZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager(%rip), %rsi
	leaq	__dso_handle(%rip), %rdx
	callq	__cxa_atexit@PLT
	leaq	_ZGVZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager(%rip), %rdi
	callq	__cxa_guard_release@PLT
	jmp	.LBB9_4
.LBB9_17:
.Ltmp37:
	movq	%rax, %r14
	leaq	_ZGVZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager(%rip), %rdi
	callq	__cxa_guard_abort@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB9_22:
.Ltmp57:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB9_21:
.Ltmp54:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB9_20:
.Ltmp45:
	movq	%rax, %r14
	movl	$512, %esi                      # imm = 0x200
	movq	%r15, %rdi
	callq	_ZdlPvm@PLT
	jmp	.LBB9_24
.LBB9_19:
.Ltmp40:
	movq	%rax, %r14
	jmp	.LBB9_25
.LBB9_23:
.Ltmp48:
	movq	%rax, %r14
.LBB9_24:
	movq	%rsp, %rdi
	callq	_ZN8pybind1111error_scopeD2Ev
.LBB9_25:
.Ltmp49:
	movl	%ebx, %edi
	callq	PyGILState_Release@PLT
.Ltmp50:
# %bb.18:                               # %common.resume
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB9_26:
.Ltmp51:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end9:
	.size	_ZN8pybind116detail13get_internalsEv, .Lfunc_end9-_ZN8pybind116detail13get_internalsEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail13get_internalsEv,"aG",@progbits,_ZN8pybind116detail13get_internalsEv,comdat
	.p2align	2, 0x0
GCC_except_table9:
.Lexception5:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase3-.Lttbaseref3
.Lttbaseref3:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end5-.Lcst_begin5
.Lcst_begin5:
	.uleb128 .Lfunc_begin5-.Lfunc_begin5    # >> Call Site 1 <<
	.uleb128 .Ltmp38-.Lfunc_begin5          #   Call between .Lfunc_begin5 and .Ltmp38
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp38-.Lfunc_begin5          # >> Call Site 2 <<
	.uleb128 .Ltmp39-.Ltmp38                #   Call between .Ltmp38 and .Ltmp39
	.uleb128 .Ltmp40-.Lfunc_begin5          #     jumps to .Ltmp40
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp41-.Lfunc_begin5          # >> Call Site 3 <<
	.uleb128 .Ltmp42-.Ltmp41                #   Call between .Ltmp41 and .Ltmp42
	.uleb128 .Ltmp48-.Lfunc_begin5          #     jumps to .Ltmp48
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp43-.Lfunc_begin5          # >> Call Site 4 <<
	.uleb128 .Ltmp44-.Ltmp43                #   Call between .Ltmp43 and .Ltmp44
	.uleb128 .Ltmp45-.Lfunc_begin5          #     jumps to .Ltmp45
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp46-.Lfunc_begin5          # >> Call Site 5 <<
	.uleb128 .Ltmp47-.Ltmp46                #   Call between .Ltmp46 and .Ltmp47
	.uleb128 .Ltmp48-.Lfunc_begin5          #     jumps to .Ltmp48
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp52-.Lfunc_begin5          # >> Call Site 6 <<
	.uleb128 .Ltmp53-.Ltmp52                #   Call between .Ltmp52 and .Ltmp53
	.uleb128 .Ltmp54-.Lfunc_begin5          #     jumps to .Ltmp54
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp55-.Lfunc_begin5          # >> Call Site 7 <<
	.uleb128 .Ltmp56-.Ltmp55                #   Call between .Ltmp55 and .Ltmp56
	.uleb128 .Ltmp57-.Lfunc_begin5          #     jumps to .Ltmp57
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp35-.Lfunc_begin5          # >> Call Site 8 <<
	.uleb128 .Ltmp36-.Ltmp35                #   Call between .Ltmp35 and .Ltmp36
	.uleb128 .Ltmp37-.Lfunc_begin5          #     jumps to .Ltmp37
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp36-.Lfunc_begin5          # >> Call Site 9 <<
	.uleb128 .Ltmp49-.Ltmp36                #   Call between .Ltmp36 and .Ltmp49
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp49-.Lfunc_begin5          # >> Call Site 10 <<
	.uleb128 .Ltmp50-.Ltmp49                #   Call between .Ltmp49 and .Ltmp50
	.uleb128 .Ltmp51-.Lfunc_begin5          #     jumps to .Ltmp51
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp50-.Lfunc_begin5          # >> Call Site 11 <<
	.uleb128 .Lfunc_end9-.Ltmp50            #   Call between .Ltmp50 and .Lfunc_end9
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end5:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase3:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZL23pybind11_exec_tk_kernelP7_object
	.type	_ZL23pybind11_exec_tk_kernelP7_object,@function
_ZL23pybind11_exec_tk_kernelP7_object:  # @_ZL23pybind11_exec_tk_kernelP7_object
.Lfunc_begin6:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception6
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$80, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, 24(%rsp)
.Ltmp58:
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp59:
# %bb.1:                                # %_ZN8pybind1118reinterpret_borrowINS_7module_EEET_NS_6handleE.exit
	movq	24(%rsp), %rax
	movq	%rax, 56(%rsp)
	leaq	.L.str.186(%rip), %rax
	movq	%rax, 64(%rsp)
	leaq	72(%rsp), %r15
	movq	$0, 72(%rsp)
.Ltmp61:
	leaq	.L.str.183(%rip), %rsi
	leaq	48(%rsp), %rdi
	callq	_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_
.Ltmp62:
# %bb.2:
.Ltmp67:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp68:
# %bb.3:                                # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit.i
	movq	24(%rsp), %rax
	movq	%rax, 40(%rsp)
.Ltmp70:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp71:
# %bb.4:                                # %.noexc
	movq	40(%rsp), %rbx
	movq	_Py_NoneStruct@GOTPCREL(%rip), %r12
	movq	%r12, 16(%rsp)
.Ltmp72:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp73:
# %bb.5:                                # %.noexc.i
	movq	16(%rsp), %r13
.Ltmp75:
	leaq	.L.str.184(%rip), %r14
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	PyObject_GetAttrString@PLT
.Ltmp76:
# %bb.6:                                # %.noexc.i.i.i
	movq	%rax, %r15
	testq	%rax, %rax
	je	.LBB10_8
# %bb.7:
	movq	%r15, 8(%rsp)
	jmp	.LBB10_11
.LBB10_8:
.Ltmp77:
	callq	PyErr_Clear@PLT
.Ltmp78:
# %bb.9:                                # %.noexc13.i.i.i
	movq	%r13, 8(%rsp)
.Ltmp79:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp80:
# %bb.10:                               # %.noexc13._crit_edge.i.i.i
	movq	8(%rsp), %r15
.LBB10_11:
	movq	$0, (%rsp)
.Ltmp82:
	leaq	48(%rsp), %rdi
	movq	%rsp, %rsi
	callq	_ZN8pybind1112cpp_function20make_function_recordEv
.Ltmp83:
# %bb.12:                               # %.noexc.i.i.i.i
	movq	48(%rsp), %rax
	leaq	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeESZ_(%rip), %rcx
	movq	%rcx, 48(%rax)
	movw	$3, 94(%rax)
	andb	$63, 89(%rax)
	movq	%r14, (%rax)
	movq	%rbx, 112(%rax)
	movq	%r15, 120(%rax)
.Ltmp85:
	leaq	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E9signature(%rip), %rdx
	leaq	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E5types(%rip), %rcx
	movq	%rsp, %rdi
	leaq	48(%rsp), %rsi
	movl	$3, %r8d
	callq	_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom
.Ltmp86:
# %bb.13:
	movq	48(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB10_15
# %bb.14:
.Ltmp97:
	xorl	%esi, %esi
	callq	_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb
.Ltmp98:
.LBB10_15:
.Ltmp100:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp101:
# %bb.16:                               # %_ZN8pybind116objectD2Ev.exit.i.i.i
.Ltmp103:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp104:
# %bb.17:                               # %_ZN8pybind116objectD2Ev.exit15.i.i.i
	movq	(%rsp), %rdx
.Ltmp106:
	leaq	.L.str.184(%rip), %rsi
	leaq	40(%rsp), %rdi
	movl	$1, %ecx
	callq	_ZN8pybind117module_10add_objectEPKcNS_6handleEb
.Ltmp107:
# %bb.18:
.Ltmp115:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp116:
# %bb.19:
.Ltmp118:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp119:
# %bb.20:                               # %_ZN8pybind116objectD2Ev.exit.i
	movq	24(%rsp), %rax
	movq	%rax, 32(%rsp)
.Ltmp121:
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp122:
# %bb.21:                               # %.noexc12
	movq	32(%rsp), %rbx
	movq	%r12, 16(%rsp)
.Ltmp124:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp125:
# %bb.22:                               # %.noexc27.i
	movq	16(%rsp), %r12
.Ltmp127:
	leaq	.L.str.185(%rip), %r14
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	PyObject_GetAttrString@PLT
.Ltmp128:
# %bb.23:                               # %.noexc.i.i14.i
	movq	%rax, %r15
	testq	%rax, %rax
	je	.LBB10_39
# %bb.24:
	movq	%r15, 8(%rsp)
	jmp	.LBB10_42
.LBB10_39:
.Ltmp129:
	callq	PyErr_Clear@PLT
.Ltmp130:
# %bb.40:                               # %.noexc13.i.i24.i
	movq	%r12, 8(%rsp)
.Ltmp131:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp132:
# %bb.41:                               # %.noexc13._crit_edge.i.i25.i
	movq	8(%rsp), %r15
.LBB10_42:
	movq	$0, (%rsp)
.Ltmp134:
	leaq	48(%rsp), %rdi
	movq	%rsp, %rsi
	callq	_ZN8pybind1112cpp_function20make_function_recordEv
.Ltmp135:
# %bb.43:                               # %.noexc.i.i.i19.i
	movq	48(%rsp), %rax
	leaq	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeESZ_(%rip), %rcx
	movq	%rcx, 48(%rax)
	movw	$3, 94(%rax)
	andb	$63, 89(%rax)
	movq	%r14, (%rax)
	movq	%rbx, 112(%rax)
	movq	%r15, 120(%rax)
.Ltmp137:
	leaq	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E9signature(%rip), %rdx
	leaq	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E5types(%rip), %rcx
	movq	%rsp, %rdi
	leaq	48(%rsp), %rsi
	movl	$3, %r8d
	callq	_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom
.Ltmp138:
# %bb.44:
	movq	48(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB10_46
# %bb.45:
.Ltmp149:
	xorl	%esi, %esi
	callq	_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb
.Ltmp150:
.LBB10_46:
.Ltmp152:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp153:
# %bb.47:                               # %_ZN8pybind116objectD2Ev.exit.i.i21.i
.Ltmp155:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp156:
# %bb.48:                               # %_ZN8pybind116objectD2Ev.exit15.i.i22.i
	movq	(%rsp), %rdx
.Ltmp158:
	leaq	.L.str.185(%rip), %rsi
	leaq	32(%rsp), %rdi
	movl	$1, %ecx
	callq	_ZN8pybind117module_10add_objectEPKcNS_6handleEb
.Ltmp159:
# %bb.49:
.Ltmp183:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp184:
# %bb.50:
.Ltmp186:
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp187:
# %bb.51:
.Ltmp189:
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp190:
# %bb.52:                               # %_ZN8pybind116objectD2Ev.exit
	xorl	%eax, %eax
.LBB10_84:
	addq	$80, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB10_53:
	.cfi_def_cfa_offset 128
.Ltmp151:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_25:
.Ltmp99:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_75:
.Ltmp191:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_66:
.Ltmp188:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_61:
.Ltmp185:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_65:
.Ltmp160:
	movq	%rdx, %r14
	movq	%rax, %rbx
.Ltmp161:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp162:
	jmp	.LBB10_73
.LBB10_95:
.Ltmp163:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_60:
.Ltmp157:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_59:
.Ltmp154:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_54:
.Ltmp139:
	movq	%rdx, %r14
	movq	%rax, %rbx
	leaq	48(%rsp), %rdi
	callq	_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev
	jmp	.LBB10_56
.LBB10_55:
.Ltmp136:
	movq	%rdx, %r14
	movq	%rax, %rbx
.LBB10_56:                              # %.body.i.i.i16.i
.Ltmp140:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp141:
# %bb.57:                               # %.body.i.i18.i
.Ltmp143:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp144:
	jmp	.LBB10_64
.LBB10_62:
.Ltmp145:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_58:
.Ltmp142:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_72:
.Ltmp126:
	movq	%rdx, %r14
	movq	%rax, %rbx
	jmp	.LBB10_73
.LBB10_38:
.Ltmp120:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_33:
.Ltmp117:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_37:
.Ltmp108:
	movq	%rdx, %r14
	movq	%rax, %rbx
.Ltmp109:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp110:
	jmp	.LBB10_70
.LBB10_93:
.Ltmp111:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_32:
.Ltmp105:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_31:
.Ltmp102:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_26:
.Ltmp87:
	movq	%rdx, %r14
	movq	%rax, %rbx
	leaq	48(%rsp), %rdi
	callq	_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev
	jmp	.LBB10_28
.LBB10_27:
.Ltmp84:
	movq	%rdx, %r14
	movq	%rax, %rbx
.LBB10_28:                              # %.body.i.i.i.i
.Ltmp88:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp89:
# %bb.29:                               # %.body.i.i.i
.Ltmp91:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp92:
	jmp	.LBB10_36
.LBB10_34:
.Ltmp93:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_30:
.Ltmp90:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_69:
.Ltmp74:
	movq	%rdx, %r14
	movq	%rax, %rbx
	jmp	.LBB10_70
.LBB10_91:
.Ltmp69:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_68:
.Ltmp63:
	movq	%rdx, %r14
	movq	%rax, %rbx
.Ltmp64:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp65:
	jmp	.LBB10_77
.LBB10_67:
.Ltmp66:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_79:
.Ltmp60:
	movq	%rdx, %r14
	movq	%rax, %rbx
	jmp	.LBB10_80
.LBB10_63:
.Ltmp133:
	movq	%rdx, %r14
	movq	%rax, %rbx
.LBB10_64:                              # %_ZN8pybind116objectD2Ev.exit17.i.i9.i
.Ltmp146:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp147:
.LBB10_73:                              # %.body28.i
.Ltmp164:
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp165:
	jmp	.LBB10_77
.LBB10_94:
.Ltmp148:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_74:
.Ltmp166:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_35:
.Ltmp81:
	movq	%rdx, %r14
	movq	%rax, %rbx
.LBB10_36:                              # %_ZN8pybind116objectD2Ev.exit17.i.i.i
.Ltmp94:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp95:
.LBB10_70:                              # %.body.i
.Ltmp112:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp113:
	jmp	.LBB10_77
.LBB10_92:
.Ltmp96:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_71:
.Ltmp114:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_76:
.Ltmp123:
	movq	%rdx, %r14
	movq	%rax, %rbx
.LBB10_77:                              # %.body
.Ltmp167:
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp168:
.LBB10_80:                              # %_ZN8pybind116objectD2Ev.exit13
	cmpl	$2, %r14d
	jne	.LBB10_85
# %bb.81:
	movq	%rbx, %rdi
	callq	__cxa_begin_catch@PLT
	movq	PyExc_ImportError@GOTPCREL(%rip), %rcx
	movq	(%rcx), %rbx
	movq	8(%rax), %rdi
.Ltmp175:
	callq	_ZN8pybind116detail25error_fetch_and_normalize7restoreEv
.Ltmp176:
# %bb.82:                               # %.noexc14
.Ltmp177:
	leaq	.L.str.182(%rip), %rsi
	movq	%rbx, %rdi
	callq	_ZN8pybind1110raise_fromEP7_objectPKc
.Ltmp178:
	jmp	.LBB10_83
.LBB10_85:
	cmpl	$1, %r14d
	jne	.LBB10_89
# %bb.86:
	movq	%rbx, %rdi
	callq	__cxa_begin_catch@PLT
	movq	PyExc_ImportError@GOTPCREL(%rip), %rcx
	movq	(%rcx), %rbx
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*16(%rcx)
.Ltmp170:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	PyErr_SetString@PLT
.Ltmp171:
.LBB10_83:                              # %_ZN8pybind1110raise_fromERNS_17error_already_setEP7_objectPKc.exit
	callq	__cxa_end_catch@PLT
	movl	$-1, %eax
	jmp	.LBB10_84
.LBB10_87:
.Ltmp172:
	movq	%rax, %rbx
.Ltmp173:
	callq	__cxa_end_catch@PLT
.Ltmp174:
	jmp	.LBB10_89
.LBB10_78:
.Ltmp169:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB10_88:
.Ltmp179:
	movq	%rax, %rbx
.Ltmp180:
	callq	__cxa_end_catch@PLT
.Ltmp181:
.LBB10_89:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB10_90:
.Ltmp182:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end10:
	.size	_ZL23pybind11_exec_tk_kernelP7_object, .Lfunc_end10-_ZL23pybind11_exec_tk_kernelP7_object
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table10:
.Lexception6:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase4-.Lttbaseref4
.Lttbaseref4:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end6-.Lcst_begin6
.Lcst_begin6:
	.uleb128 .Ltmp58-.Lfunc_begin6          # >> Call Site 1 <<
	.uleb128 .Ltmp59-.Ltmp58                #   Call between .Ltmp58 and .Ltmp59
	.uleb128 .Ltmp60-.Lfunc_begin6          #     jumps to .Ltmp60
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp61-.Lfunc_begin6          # >> Call Site 2 <<
	.uleb128 .Ltmp62-.Ltmp61                #   Call between .Ltmp61 and .Ltmp62
	.uleb128 .Ltmp63-.Lfunc_begin6          #     jumps to .Ltmp63
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp67-.Lfunc_begin6          # >> Call Site 3 <<
	.uleb128 .Ltmp68-.Ltmp67                #   Call between .Ltmp67 and .Ltmp68
	.uleb128 .Ltmp69-.Lfunc_begin6          #     jumps to .Ltmp69
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp70-.Lfunc_begin6          # >> Call Site 4 <<
	.uleb128 .Ltmp71-.Ltmp70                #   Call between .Ltmp70 and .Ltmp71
	.uleb128 .Ltmp123-.Lfunc_begin6         #     jumps to .Ltmp123
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp72-.Lfunc_begin6          # >> Call Site 5 <<
	.uleb128 .Ltmp73-.Ltmp72                #   Call between .Ltmp72 and .Ltmp73
	.uleb128 .Ltmp74-.Lfunc_begin6          #     jumps to .Ltmp74
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp75-.Lfunc_begin6          # >> Call Site 6 <<
	.uleb128 .Ltmp80-.Ltmp75                #   Call between .Ltmp75 and .Ltmp80
	.uleb128 .Ltmp81-.Lfunc_begin6          #     jumps to .Ltmp81
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp82-.Lfunc_begin6          # >> Call Site 7 <<
	.uleb128 .Ltmp83-.Ltmp82                #   Call between .Ltmp82 and .Ltmp83
	.uleb128 .Ltmp84-.Lfunc_begin6          #     jumps to .Ltmp84
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp85-.Lfunc_begin6          # >> Call Site 8 <<
	.uleb128 .Ltmp86-.Ltmp85                #   Call between .Ltmp85 and .Ltmp86
	.uleb128 .Ltmp87-.Lfunc_begin6          #     jumps to .Ltmp87
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp97-.Lfunc_begin6          # >> Call Site 9 <<
	.uleb128 .Ltmp98-.Ltmp97                #   Call between .Ltmp97 and .Ltmp98
	.uleb128 .Ltmp99-.Lfunc_begin6          #     jumps to .Ltmp99
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp100-.Lfunc_begin6         # >> Call Site 10 <<
	.uleb128 .Ltmp101-.Ltmp100              #   Call between .Ltmp100 and .Ltmp101
	.uleb128 .Ltmp102-.Lfunc_begin6         #     jumps to .Ltmp102
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp103-.Lfunc_begin6         # >> Call Site 11 <<
	.uleb128 .Ltmp104-.Ltmp103              #   Call between .Ltmp103 and .Ltmp104
	.uleb128 .Ltmp105-.Lfunc_begin6         #     jumps to .Ltmp105
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp106-.Lfunc_begin6         # >> Call Site 12 <<
	.uleb128 .Ltmp107-.Ltmp106              #   Call between .Ltmp106 and .Ltmp107
	.uleb128 .Ltmp108-.Lfunc_begin6         #     jumps to .Ltmp108
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp115-.Lfunc_begin6         # >> Call Site 13 <<
	.uleb128 .Ltmp116-.Ltmp115              #   Call between .Ltmp115 and .Ltmp116
	.uleb128 .Ltmp117-.Lfunc_begin6         #     jumps to .Ltmp117
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp118-.Lfunc_begin6         # >> Call Site 14 <<
	.uleb128 .Ltmp119-.Ltmp118              #   Call between .Ltmp118 and .Ltmp119
	.uleb128 .Ltmp120-.Lfunc_begin6         #     jumps to .Ltmp120
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp121-.Lfunc_begin6         # >> Call Site 15 <<
	.uleb128 .Ltmp122-.Ltmp121              #   Call between .Ltmp121 and .Ltmp122
	.uleb128 .Ltmp123-.Lfunc_begin6         #     jumps to .Ltmp123
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp124-.Lfunc_begin6         # >> Call Site 16 <<
	.uleb128 .Ltmp125-.Ltmp124              #   Call between .Ltmp124 and .Ltmp125
	.uleb128 .Ltmp126-.Lfunc_begin6         #     jumps to .Ltmp126
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp127-.Lfunc_begin6         # >> Call Site 17 <<
	.uleb128 .Ltmp132-.Ltmp127              #   Call between .Ltmp127 and .Ltmp132
	.uleb128 .Ltmp133-.Lfunc_begin6         #     jumps to .Ltmp133
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp134-.Lfunc_begin6         # >> Call Site 18 <<
	.uleb128 .Ltmp135-.Ltmp134              #   Call between .Ltmp134 and .Ltmp135
	.uleb128 .Ltmp136-.Lfunc_begin6         #     jumps to .Ltmp136
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp137-.Lfunc_begin6         # >> Call Site 19 <<
	.uleb128 .Ltmp138-.Ltmp137              #   Call between .Ltmp137 and .Ltmp138
	.uleb128 .Ltmp139-.Lfunc_begin6         #     jumps to .Ltmp139
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp149-.Lfunc_begin6         # >> Call Site 20 <<
	.uleb128 .Ltmp150-.Ltmp149              #   Call between .Ltmp149 and .Ltmp150
	.uleb128 .Ltmp151-.Lfunc_begin6         #     jumps to .Ltmp151
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp152-.Lfunc_begin6         # >> Call Site 21 <<
	.uleb128 .Ltmp153-.Ltmp152              #   Call between .Ltmp152 and .Ltmp153
	.uleb128 .Ltmp154-.Lfunc_begin6         #     jumps to .Ltmp154
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp155-.Lfunc_begin6         # >> Call Site 22 <<
	.uleb128 .Ltmp156-.Ltmp155              #   Call between .Ltmp155 and .Ltmp156
	.uleb128 .Ltmp157-.Lfunc_begin6         #     jumps to .Ltmp157
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp158-.Lfunc_begin6         # >> Call Site 23 <<
	.uleb128 .Ltmp159-.Ltmp158              #   Call between .Ltmp158 and .Ltmp159
	.uleb128 .Ltmp160-.Lfunc_begin6         #     jumps to .Ltmp160
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp183-.Lfunc_begin6         # >> Call Site 24 <<
	.uleb128 .Ltmp184-.Ltmp183              #   Call between .Ltmp183 and .Ltmp184
	.uleb128 .Ltmp185-.Lfunc_begin6         #     jumps to .Ltmp185
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp186-.Lfunc_begin6         # >> Call Site 25 <<
	.uleb128 .Ltmp187-.Ltmp186              #   Call between .Ltmp186 and .Ltmp187
	.uleb128 .Ltmp188-.Lfunc_begin6         #     jumps to .Ltmp188
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp189-.Lfunc_begin6         # >> Call Site 26 <<
	.uleb128 .Ltmp190-.Ltmp189              #   Call between .Ltmp189 and .Ltmp190
	.uleb128 .Ltmp191-.Lfunc_begin6         #     jumps to .Ltmp191
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp161-.Lfunc_begin6         # >> Call Site 27 <<
	.uleb128 .Ltmp162-.Ltmp161              #   Call between .Ltmp161 and .Ltmp162
	.uleb128 .Ltmp163-.Lfunc_begin6         #     jumps to .Ltmp163
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp140-.Lfunc_begin6         # >> Call Site 28 <<
	.uleb128 .Ltmp141-.Ltmp140              #   Call between .Ltmp140 and .Ltmp141
	.uleb128 .Ltmp142-.Lfunc_begin6         #     jumps to .Ltmp142
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp143-.Lfunc_begin6         # >> Call Site 29 <<
	.uleb128 .Ltmp144-.Ltmp143              #   Call between .Ltmp143 and .Ltmp144
	.uleb128 .Ltmp145-.Lfunc_begin6         #     jumps to .Ltmp145
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp109-.Lfunc_begin6         # >> Call Site 30 <<
	.uleb128 .Ltmp110-.Ltmp109              #   Call between .Ltmp109 and .Ltmp110
	.uleb128 .Ltmp111-.Lfunc_begin6         #     jumps to .Ltmp111
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp88-.Lfunc_begin6          # >> Call Site 31 <<
	.uleb128 .Ltmp89-.Ltmp88                #   Call between .Ltmp88 and .Ltmp89
	.uleb128 .Ltmp90-.Lfunc_begin6          #     jumps to .Ltmp90
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp91-.Lfunc_begin6          # >> Call Site 32 <<
	.uleb128 .Ltmp92-.Ltmp91                #   Call between .Ltmp91 and .Ltmp92
	.uleb128 .Ltmp93-.Lfunc_begin6          #     jumps to .Ltmp93
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp64-.Lfunc_begin6          # >> Call Site 33 <<
	.uleb128 .Ltmp65-.Ltmp64                #   Call between .Ltmp64 and .Ltmp65
	.uleb128 .Ltmp66-.Lfunc_begin6          #     jumps to .Ltmp66
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp146-.Lfunc_begin6         # >> Call Site 34 <<
	.uleb128 .Ltmp147-.Ltmp146              #   Call between .Ltmp146 and .Ltmp147
	.uleb128 .Ltmp148-.Lfunc_begin6         #     jumps to .Ltmp148
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp164-.Lfunc_begin6         # >> Call Site 35 <<
	.uleb128 .Ltmp165-.Ltmp164              #   Call between .Ltmp164 and .Ltmp165
	.uleb128 .Ltmp166-.Lfunc_begin6         #     jumps to .Ltmp166
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp94-.Lfunc_begin6          # >> Call Site 36 <<
	.uleb128 .Ltmp95-.Ltmp94                #   Call between .Ltmp94 and .Ltmp95
	.uleb128 .Ltmp96-.Lfunc_begin6          #     jumps to .Ltmp96
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp112-.Lfunc_begin6         # >> Call Site 37 <<
	.uleb128 .Ltmp113-.Ltmp112              #   Call between .Ltmp112 and .Ltmp113
	.uleb128 .Ltmp114-.Lfunc_begin6         #     jumps to .Ltmp114
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp167-.Lfunc_begin6         # >> Call Site 38 <<
	.uleb128 .Ltmp168-.Ltmp167              #   Call between .Ltmp167 and .Ltmp168
	.uleb128 .Ltmp169-.Lfunc_begin6         #     jumps to .Ltmp169
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp168-.Lfunc_begin6         # >> Call Site 39 <<
	.uleb128 .Ltmp175-.Ltmp168              #   Call between .Ltmp168 and .Ltmp175
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp175-.Lfunc_begin6         # >> Call Site 40 <<
	.uleb128 .Ltmp178-.Ltmp175              #   Call between .Ltmp175 and .Ltmp178
	.uleb128 .Ltmp179-.Lfunc_begin6         #     jumps to .Ltmp179
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp178-.Lfunc_begin6         # >> Call Site 41 <<
	.uleb128 .Ltmp170-.Ltmp178              #   Call between .Ltmp178 and .Ltmp170
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp170-.Lfunc_begin6         # >> Call Site 42 <<
	.uleb128 .Ltmp171-.Ltmp170              #   Call between .Ltmp170 and .Ltmp171
	.uleb128 .Ltmp172-.Lfunc_begin6         #     jumps to .Ltmp172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp171-.Lfunc_begin6         # >> Call Site 43 <<
	.uleb128 .Ltmp173-.Ltmp171              #   Call between .Ltmp171 and .Ltmp173
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp173-.Lfunc_begin6         # >> Call Site 44 <<
	.uleb128 .Ltmp181-.Ltmp173              #   Call between .Ltmp173 and .Ltmp181
	.uleb128 .Ltmp182-.Lfunc_begin6         #     jumps to .Ltmp182
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp181-.Lfunc_begin6         # >> Call Site 45 <<
	.uleb128 .Lfunc_end10-.Ltmp181          #   Call between .Ltmp181 and .Lfunc_end10
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end6:
	.byte	0                               # >> Action Record 1 <<
                                        #   Cleanup
	.byte	0                               #   No further actions
	.byte	1                               # >> Action Record 2 <<
                                        #   Catch TypeInfo 1
	.byte	125                             #   Continue to action 1
	.byte	2                               # >> Action Record 3 <<
                                        #   Catch TypeInfo 2
	.byte	125                             #   Continue to action 2
	.byte	3                               # >> Action Record 4 <<
                                        #   Catch TypeInfo 3
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 3
.Ltmp192:                               # TypeInfo 2
	.long	.L_ZTIN8pybind1117error_already_setE.DW.stub-.Ltmp192
.Ltmp193:                               # TypeInfo 1
	.long	.L_ZTISt9exception.DW.stub-.Ltmp193
.Lttbase4:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1117error_already_setD2Ev,"axG",@progbits,_ZN8pybind1117error_already_setD2Ev,comdat
	.hidden	_ZN8pybind1117error_already_setD2Ev # -- Begin function _ZN8pybind1117error_already_setD2Ev
	.weak	_ZN8pybind1117error_already_setD2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind1117error_already_setD2Ev,@function
_ZN8pybind1117error_already_setD2Ev:    # @_ZN8pybind1117error_already_setD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	leaq	_ZTVN8pybind1117error_already_setE+16(%rip), %rax
	movq	%rax, (%rdi)
	movq	16(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB11_9
# %bb.1:
	movq	8(%rbx), %rax
	movabsq	$4294967297, %rcx               # imm = 0x100000001
	cmpq	%rcx, %rax
	jne	.LBB11_3
# %bb.2:
	movq	$0, 8(%rbx)
	movq	(%rbx), %rax
	movq	%rdi, %r14
	movq	%rbx, %rdi
	callq	*16(%rax)
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*24(%rax)
.LBB11_8:                               # %_ZNSt12__shared_ptrIN8pybind116detail25error_fetch_and_normalizeELN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	movq	%r14, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZNSt9exceptionD2Ev@PLT         # TAILCALL
.LBB11_3:
	.cfi_def_cfa_offset 32
	movq	__libc_single_threaded@GOTPCREL(%rip), %rcx
	cmpb	$0, (%rcx)
	je	.LBB11_5
# %bb.4:
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%rbx)
	cmpl	$1, %eax
	je	.LBB11_7
.LBB11_9:                               # %_ZNSt12__shared_ptrIN8pybind116detail25error_fetch_and_normalizeELN9__gnu_cxx12_Lock_policyE2EED2Ev.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZNSt9exceptionD2Ev@PLT         # TAILCALL
.LBB11_5:
	.cfi_def_cfa_offset 32
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%rbx)
	cmpl	$1, %eax
	jne	.LBB11_9
.LBB11_7:
	movq	%rdi, %r14
	movq	%rbx, %rdi
	callq	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv@PLT
	jmp	.LBB11_8
.Lfunc_end11:
	.size	_ZN8pybind1117error_already_setD2Ev, .Lfunc_end11-_ZN8pybind1117error_already_setD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind1117error_already_setD0Ev,"axG",@progbits,_ZN8pybind1117error_already_setD0Ev,comdat
	.hidden	_ZN8pybind1117error_already_setD0Ev # -- Begin function _ZN8pybind1117error_already_setD0Ev
	.weak	_ZN8pybind1117error_already_setD0Ev
	.p2align	4, 0x90
	.type	_ZN8pybind1117error_already_setD0Ev,@function
_ZN8pybind1117error_already_setD0Ev:    # @_ZN8pybind1117error_already_setD0Ev
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	leaq	_ZTVN8pybind1117error_already_setE+16(%rip), %rax
	movq	%rax, (%rdi)
	movq	16(%rdi), %r14
	testq	%r14, %r14
	je	.LBB12_8
# %bb.1:
	movq	8(%r14), %rax
	movabsq	$4294967297, %rcx               # imm = 0x100000001
	cmpq	%rcx, %rax
	jne	.LBB12_3
# %bb.2:
	movq	$0, 8(%r14)
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*24(%rax)
	jmp	.LBB12_8
.LBB12_3:
	movq	__libc_single_threaded@GOTPCREL(%rip), %rcx
	cmpb	$0, (%rcx)
	je	.LBB12_5
# %bb.4:
	leal	-1(%rax), %ecx
	movl	%ecx, 8(%r14)
	cmpl	$1, %eax
	je	.LBB12_7
.LBB12_8:                               # %_ZN8pybind1117error_already_setD2Ev.exit
	movq	%rbx, %rdi
	callq	_ZNSt9exceptionD2Ev@PLT
	movl	$24, %esi
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB12_5:
	.cfi_def_cfa_offset 32
	movl	$-1, %eax
	lock		xaddl	%eax, 8(%r14)
	cmpl	$1, %eax
	jne	.LBB12_8
.LBB12_7:
	movq	%r14, %rdi
	callq	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv@PLT
	jmp	.LBB12_8
.Lfunc_end12:
	.size	_ZN8pybind1117error_already_setD0Ev, .Lfunc_end12-_ZN8pybind1117error_already_setD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind1113pybind11_failEPKc,"axG",@progbits,_ZN8pybind1113pybind11_failEPKc,comdat
	.hidden	_ZN8pybind1113pybind11_failEPKc # -- Begin function _ZN8pybind1113pybind11_failEPKc
	.weak	_ZN8pybind1113pybind11_failEPKc
	.p2align	4, 0x90
	.type	_ZN8pybind1113pybind11_failEPKc,@function
_ZN8pybind1113pybind11_failEPKc:        # @_ZN8pybind1113pybind11_failEPKc
.Lfunc_begin7:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception7
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	callq	PyErr_Occurred@PLT
	testq	%rax, %rax
	jne	.LBB13_4
# %bb.1:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp194:
	movq	%rax, %rdi
	movq	%r14, %rsi
	callq	_ZNSt13runtime_errorC1EPKc@PLT
.Ltmp195:
# %bb.2:
	movq	_ZTISt13runtime_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt13runtime_errorD1Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.LBB13_4:
	leaq	.L.str.4(%rip), %rdi
	leaq	.L.str.5(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failEPKc(%rip), %rcx
	movl	$1064, %edx                     # imm = 0x428
	callq	__assert_fail@PLT
.LBB13_3:
.Ltmp196:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end13:
	.size	_ZN8pybind1113pybind11_failEPKc, .Lfunc_end13-_ZN8pybind1113pybind11_failEPKc
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1113pybind11_failEPKc,"aG",@progbits,_ZN8pybind1113pybind11_failEPKc,comdat
	.p2align	2, 0x0
GCC_except_table13:
.Lexception7:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end7-.Lcst_begin7
.Lcst_begin7:
	.uleb128 .Lfunc_begin7-.Lfunc_begin7    # >> Call Site 1 <<
	.uleb128 .Ltmp194-.Lfunc_begin7         #   Call between .Lfunc_begin7 and .Ltmp194
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp194-.Lfunc_begin7         # >> Call Site 2 <<
	.uleb128 .Ltmp195-.Ltmp194              #   Call between .Ltmp194 and .Ltmp195
	.uleb128 .Ltmp196-.Lfunc_begin7         #     jumps to .Ltmp196
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp195-.Lfunc_begin7         # >> Call Site 3 <<
	.uleb128 .Lfunc_end13-.Ltmp195          #   Call between .Ltmp195 and .Lfunc_end13
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end7:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	strlen@PLT
	movq	%r14, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	movq	%r15, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
	movq	%rax, %r14
	leaq	16(%rbx), %rdi
	movq	%rdi, (%rbx)
	movq	(%rax), %rax
	movq	%r14, %r15
	addq	$16, %r15
	cmpq	%r15, %rax
	je	.LBB14_1
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	%rax, (%rbx)
	movq	16(%r14), %rax
	movq	%rax, 16(%rbx)
	movq	8(%r14), %r12
	jmp	.LBB14_3
.LBB14_1:
	movq	8(%r14), %r12
	leaq	1(%r12), %rdx
	movq	%r15, %rsi
	callq	memcpy@PLT
.LBB14_3:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	%r12, 8(%rbx)
	movq	%r15, (%r14)
	movq	$0, 8(%r14)
	movb	$0, 16(%r14)
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end14:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_, .Lfunc_end14-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev,"axG",@progbits,_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev,comdat
	.hidden	_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev # -- Begin function _ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev
	.weak	_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev
	.p2align	4, 0x90
	.type	_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev,@function
_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev: # @_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev
.Lfunc_begin8:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception8
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$280, %rsp                      # imm = 0x118
	.cfi_def_cfa_offset 336
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %rax
	movq	%rax, 40(%rsp)                  # 8-byte Spill
	movq	%rax, (%rdi)
	movq	$0, 8(%rdi)
	movb	$0, 16(%rdi)
	leaq	168(%rsp), %rax
	movq	%rax, 152(%rsp)
	movq	$0, 160(%rsp)
	movb	$0, 168(%rsp)
	movq	%rsi, 240(%rsp)                 # 8-byte Spill
	movq	8(%rsi), %rdi
	testq	%rdi, %rdi
	movq	%rbx, (%rsp)                    # 8-byte Spill
	je	.LBB15_16
# %bb.1:
.Ltmp197:
	callq	PyObject_Str@PLT
.Ltmp198:
# %bb.2:
	movq	%rax, 272(%rsp)
	testq	%rax, %rax
	je	.LBB15_19
# %bb.3:
.Ltmp200:
	leaq	.L.str.12(%rip), %rsi
	leaq	.L.str.13(%rip), %rdx
	movq	%rax, %rdi
	callq	PyUnicode_AsEncodedString@PLT
.Ltmp201:
# %bb.4:
	movq	%rax, 48(%rsp)
	testq	%rax, %rax
	je	.LBB15_24
# %bb.5:
	movq	$0, 80(%rsp)
	movq	$0, 112(%rsp)
.Ltmp203:
	leaq	80(%rsp), %rsi
	leaq	112(%rsp), %rdx
	movq	%rax, %rdi
	callq	PyBytes_AsStringAndSize@PLT
.Ltmp204:
# %bb.6:
	cmpl	$-1, %eax
	je	.LBB15_29
# %bb.7:
	movq	80(%rsp), %r15
	movq	112(%rsp), %r14
	leaq	24(%rsp), %rbx
	movq	%rbx, 8(%rsp)
	testq	%r15, %r15
	setne	%al
	testq	%r14, %r14
	sete	%cl
	orb	%al, %cl
	je	.LBB15_577
# %bb.8:
	movq	%rbx, %r12
	cmpq	$16, %r14
	jb	.LBB15_13
# %bb.9:
	testq	%r14, %r14
	js	.LBB15_585
# %bb.10:
	movq	%r14, %rdi
	incq	%rdi
	js	.LBB15_530
# %bb.11:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
.Ltmp205:
	callq	_Znwm@PLT
.Ltmp206:
# %bb.12:                               # %.noexc153
	movq	%rax, %r12
	movq	%rax, 8(%rsp)
	movq	%r14, 24(%rsp)
.LBB15_13:                              # %._crit_edge.i.i
	testq	%r14, %r14
	je	.LBB15_47
# %bb.14:                               # %._crit_edge.i.i
	cmpq	$1, %r14
	jne	.LBB15_46
# %bb.15:
	movzbl	(%r15), %eax
	movb	%al, (%r12)
	jmp	.LBB15_47
.LBB15_16:
.Ltmp390:
	leaq	.L.str.23(%rip), %rcx
	movl	$21, %r8d
	movq	%rbx, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp391:
# %bb.17:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm.exit865
	movq	$21, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, 21(%rax)
	cmpq	$0, 8(%rbx)
	jne	.LBB15_18
.LBB15_382:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i866
	movq	(%rsp), %rbx                    # 8-byte Reload
	movq	(%rbx), %rsi
	cmpq	40(%rsp), %rsi                  # 8-byte Folded Reload
	je	.LBB15_385
# %bb.383:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i866
	cmpq	$15, 16(%rbx)
	jae	.LBB15_385
# %bb.384:
.Ltmp394:
	leaq	.L.str.24(%rip), %rcx
	movl	$15, %r8d
	movq	%rbx, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp395:
	jmp	.LBB15_387
.LBB15_19:
.Ltmp232:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind116detail12error_stringB5cxx11Ev
.Ltmp233:
# %bb.20:
	movq	152(%rsp), %rdi
	leaq	168(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_34
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	movq	8(%rsp), %rsi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rsi
	je	.LBB15_37
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	movq	168(%rsp), %rcx
	movq	%rsi, 152(%rsp)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 160(%rsp)
	testq	%rdi, %rdi
	je	.LBB15_36
# %bb.23:
	movq	%rdi, 8(%rsp)
	movq	%rcx, 24(%rsp)
	jmp	.LBB15_66
.LBB15_385:
	leaq	.L.str.24(%rip), %rax
	cmpq	%rax, %rsi
	je	.LBB15_525
# %bb.386:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm.exit.i872
	movabsq	$4487070949640979789, %rax      # imm = 0x3E4547415353454D
	movq	%rax, 7(%rsi)
	movabsq	$5557540158834558268, %rax      # imm = 0x4D205954504D453C
	movq	%rax, (%rsi)
	movq	(%rsp), %rbx                    # 8-byte Reload
.LBB15_387:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm.exit876
	movq	$15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, 15(%rax)
	movq	240(%rsp), %rax                 # 8-byte Reload
	movq	16(%rax), %rax
	testq	%rax, %rax
	jne	.LBB15_388
	jmp	.LBB15_397
.LBB15_24:
.Ltmp220:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind116detail12error_stringB5cxx11Ev
.Ltmp221:
# %bb.25:
	movq	152(%rsp), %rdi
	leaq	168(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_40
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i124
	movq	8(%rsp), %rsi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rsi
	je	.LBB15_43
# %bb.27:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i125
	movq	168(%rsp), %rcx
	movq	%rsi, 152(%rsp)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 160(%rsp)
	testq	%rdi, %rdi
	je	.LBB15_42
# %bb.28:
	movq	%rdi, 8(%rsp)
	movq	%rcx, 24(%rsp)
	jmp	.LBB15_75
.LBB15_29:
.Ltmp214:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind116detail12error_stringB5cxx11Ev
.Ltmp215:
# %bb.30:
	movq	152(%rsp), %rdi
	leaq	168(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_58
# %bb.31:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i137
	movq	8(%rsp), %rsi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rsi
	je	.LBB15_61
# %bb.32:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i138
	movq	168(%rsp), %rcx
	movq	%rsi, 152(%rsp)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 160(%rsp)
	testq	%rdi, %rdi
	je	.LBB15_60
# %bb.33:
	movq	%rdi, 8(%rsp)
	movq	%rcx, 24(%rsp)
	jmp	.LBB15_80
.LBB15_34:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	8(%rsp), %rsi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rsi
	je	.LBB15_37
# %bb.35:                               # %.thread.i
	movq	%rsi, 152(%rsp)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 160(%rsp)
.LBB15_36:
	movq	%rax, 8(%rsp)
	movq	%rax, %rdi
	jmp	.LBB15_66
.LBB15_37:
	movq	16(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB15_65
# %bb.38:
	cmpq	$1, %rdx
	jne	.LBB15_64
# %bb.39:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_65
.LBB15_40:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i129
	movq	8(%rsp), %rsi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rsi
	je	.LBB15_43
# %bb.41:                               # %.thread.i130
	movq	%rsi, 152(%rsp)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 160(%rsp)
.LBB15_42:
	movq	%rax, 8(%rsp)
	movq	%rax, %rdi
	jmp	.LBB15_75
.LBB15_43:
	movq	16(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB15_74
# %bb.44:
	cmpq	$1, %rdx
	jne	.LBB15_73
# %bb.45:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_74
.LBB15_46:
	movq	%r12, %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
.LBB15_47:
	movq	%r14, 16(%rsp)
	movb	$0, (%r12,%r14)
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %rdi
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB15_51
# %bb.48:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i154
	movq	8(%rsp), %rsi
	cmpq	%rbx, %rsi
	je	.LBB15_54
# %bb.49:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i155
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	16(%rcx), %rax
	movq	%rsi, (%rcx)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 8(%rcx)
	testq	%rdi, %rdi
	je	.LBB15_53
# %bb.50:
	movq	%rdi, 8(%rsp)
	movq	%rax, 24(%rsp)
	jmp	.LBB15_71
.LBB15_51:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i159
	movq	8(%rsp), %rsi
	cmpq	%rbx, %rsi
	je	.LBB15_54
# %bb.52:                               # %.thread.i160
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%rsi, (%rax)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 8(%rax)
.LBB15_53:
	movq	%rbx, 8(%rsp)
	movq	%rbx, %rdi
	jmp	.LBB15_71
.LBB15_54:
	leaq	8(%rsp), %rax
	cmpq	(%rsp), %rax                    # 8-byte Folded Reload
	je	.LBB15_533
# %bb.55:
	movq	16(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB15_70
# %bb.56:
	cmpq	$1, %rdx
	jne	.LBB15_69
# %bb.57:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_70
.LBB15_58:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i142
	movq	8(%rsp), %rsi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rsi
	je	.LBB15_61
# %bb.59:                               # %.thread.i143
	movq	%rsi, 152(%rsp)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 160(%rsp)
.LBB15_60:
	movq	%rax, 8(%rsp)
	movq	%rax, %rdi
	jmp	.LBB15_80
.LBB15_61:
	movq	16(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB15_79
# %bb.62:
	cmpq	$1, %rdx
	jne	.LBB15_78
# %bb.63:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_79
.LBB15_64:
	callq	memcpy@PLT
.LBB15_65:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	movq	16(%rsp), %rax
	movq	%rax, 160(%rsp)
	movq	152(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rsp), %rdi
.LBB15_66:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	movq	$0, 16(%rsp)
	movb	$0, (%rdi)
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_68
# %bb.67:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_68:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	8(%rdi), %rdx
.Ltmp235:
	leaq	.L.str.11(%rip), %rcx
	movl	$46, %r8d
	xorl	%esi, %esi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.Ltmp236:
	jmp	.LBB15_84
.LBB15_69:
	callq	memcpy@PLT
.LBB15_70:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i157
	movq	16(%rsp), %rax
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	%rax, 8(%rcx)
	movq	(%rcx), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rsp), %rdi
.LBB15_71:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit161
	movq	$0, 16(%rsp)
	movb	$0, (%rdi)
	movq	8(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB15_83
# %bb.72:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i162
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB15_83
.LBB15_73:
	callq	memcpy@PLT
.LBB15_74:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i127
	movq	16(%rsp), %rax
	movq	%rax, 160(%rsp)
	movq	152(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rsp), %rdi
.LBB15_75:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit131
	movq	$0, 16(%rsp)
	movb	$0, (%rdi)
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_77
# %bb.76:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i132
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_77:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit134
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	8(%rdi), %rdx
.Ltmp223:
	leaq	.L.str.11(%rip), %rcx
	movl	$46, %r8d
	xorl	%esi, %esi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.Ltmp224:
	jmp	.LBB15_83
.LBB15_78:
	callq	memcpy@PLT
.LBB15_79:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i140
	movq	16(%rsp), %rax
	movq	%rax, 160(%rsp)
	movq	152(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rsp), %rdi
.LBB15_80:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit144
	movq	$0, 16(%rsp)
	movb	$0, (%rdi)
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_82
# %bb.81:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i145
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_82:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit147
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	8(%rdi), %rdx
.Ltmp217:
	leaq	.L.str.11(%rip), %rcx
	movl	$46, %r8d
	xorl	%esi, %esi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.Ltmp218:
.LBB15_83:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit136
.Ltmp229:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp230:
.LBB15_84:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit
	movq	240(%rsp), %rax                 # 8-byte Reload
	movq	8(%rax), %rdi
.Ltmp238:
	leaq	.L.str.14(%rip), %rsi
	callq	PyObject_GetAttrString@PLT
.Ltmp239:
# %bb.85:
	movq	%rax, 200(%rsp)
	testq	%rax, %rax
	je	.LBB15_91
# %bb.86:
.Ltmp241:
	movq	%rax, %rdi
	callq	PyList_Size@PLT
.Ltmp242:
# %bb.87:
	testq	%rax, %rax
	js	.LBB15_92
# %bb.88:
	movabsq	$3777893186295716171, %rsi      # imm = 0x346DC5D63886594B
	cmpq	$10, %rax
	movq	%rax, 184(%rsp)                 # 8-byte Spill
	leaq	96(%rsp), %rbx
	jae	.LBB15_100
# %bb.89:                               # %.thread781
	movq	%rbx, 80(%rsp)
.LBB15_90:
	movb	$45, 96(%rsp)
	movl	$1, %r12d
	movl	$1, %r14d
	movq	%rbx, %r15
	jmp	.LBB15_125
.LBB15_91:
.Ltmp375:
	callq	PyErr_Clear@PLT
.Ltmp376:
	jmp	.LBB15_379
.LBB15_92:
.Ltmp358:
	leaq	48(%rsp), %rdi
	callq	_ZN8pybind116detail12error_stringB5cxx11Ev
.Ltmp359:
# %bb.93:
	movq	56(%rsp), %r12
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-35, %rax
	cmpq	%rax, %r12
	jg	.LBB15_579
# %bb.94:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	leaq	35(%r12), %rbx
	movq	48(%rsp), %r15
	leaq	64(%rsp), %r14
	cmpq	%r14, %r15
	je	.LBB15_106
# %bb.95:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.thread
	movq	64(%rsp), %r13
	movq	%r13, %rax
	cmpq	%r13, %rbx
	ja	.LBB15_107
# %bb.96:
	leaq	.L.str.15(%rip), %rax
	cmpq	%rax, %r15
	seta	%cl
	leaq	(%r15,%r12), %rdx
	cmpq	%rax, %rdx
	setb	%al
	orb	%cl, %al
	cmpb	$1, %al
	jne	.LBB15_536
# %bb.97:
	testq	%r12, %r12
	je	.LBB15_362
# %bb.98:
	cmpq	$1, %r12
	jne	.LBB15_361
# %bb.99:
	movzbl	(%r15), %eax
	movb	%al, 35(%r15)
	jmp	.LBB15_362
.LBB15_100:                             # %.lr.ph.i.i.preheader
	movl	$4, %r12d
	movq	%rax, %rcx
	.p2align	4, 0x90
.LBB15_101:                             # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	cmpq	$99, %rcx
	jbe	.LBB15_113
# %bb.102:                              #   in Loop: Header=BB15_101 Depth=1
	cmpq	$999, %rcx                      # imm = 0x3E7
	jbe	.LBB15_121
# %bb.103:                              #   in Loop: Header=BB15_101 Depth=1
	cmpq	$10000, %rcx                    # imm = 0x2710
	jb	.LBB15_114
# %bb.104:                              #   in Loop: Header=BB15_101 Depth=1
	movq	%rcx, %rax
	mulq	%rsi
	shrq	$11, %rdx
	addl	$4, %r12d
	cmpq	$99999, %rcx                    # imm = 0x1869F
	movq	%rdx, %rcx
	ja	.LBB15_101
# %bb.105:                              # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit.i.loopexit
	addl	$-3, %r12d
	movl	%r12d, %r14d
	movq	%rbx, 80(%rsp)
	cmpl	$16, %r12d
	jae	.LBB15_115
	jmp	.LBB15_122
.LBB15_106:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i
	movl	$15, %eax
	movq	64(%rsp), %r13
.LBB15_107:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i877
	cmpq	$-36, %r12
	jle	.LBB15_582
# %bb.108:
	addq	%rax, %rax
	movabsq	$9223372036854775807, %r14      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%r14, %rax
	cmovbq	%rax, %r14
	cmpq	%rax, %rbx
	cmovaeq	%rbx, %r14
	movq	%r14, %rdi
	incq	%rdi
	js	.LBB15_528
# %bb.109:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i
.Ltmp363:
	callq	_Znwm@PLT
.Ltmp364:
# %bb.110:                              # %.noexc883
	movq	%rax, %rbp
	movups	.L.str.15+16(%rip), %xmm0
	movups	%xmm0, 16(%rax)
	movups	.L.str.15(%rip), %xmm0
	movups	%xmm0, (%rax)
	movl	$540682591, 31(%rax)            # imm = 0x203A295F
	testq	%r12, %r12
	je	.LBB15_118
# %bb.111:
	movq	%rbp, %rdi
	addq	$35, %rdi
	cmpq	$1, %r12
	jne	.LBB15_117
# %bb.112:
	movzbl	(%r15), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_118
.LBB15_113:
	addl	$-2, %r12d
.LBB15_114:                             # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit.i
	movl	%r12d, %r14d
	movq	%rbx, 80(%rsp)
	cmpl	$16, %r12d
	jb	.LBB15_122
.LBB15_115:                             # %.noexc.i184
	leaq	1(%r14), %rdi
.Ltmp244:
	callq	_Znwm@PLT
.Ltmp245:
# %bb.116:                              # %.noexc185
	movq	%rax, %r15
	movq	%rax, 80(%rsp)
	movq	%r14, 96(%rsp)
	jmp	.LBB15_124
.LBB15_117:
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB15_118:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit27.i
	leaq	64(%rsp), %rax
	cmpq	%rax, %r15
	je	.LBB15_120
# %bb.119:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i879
	incq	%r13
	movq	%r15, %rdi
	movq	%r13, %rsi
	callq	_ZdlPvm@PLT
.LBB15_120:                             # %.noexc821
	movq	%rbp, 48(%rsp)
	movq	%r14, 64(%rsp)
	movq	%rbp, %r15
	leaq	64(%rsp), %r14
	jmp	.LBB15_363
.LBB15_121:
	decl	%r12d
	movl	%r12d, %r14d
	movq	%rbx, 80(%rsp)
	cmpl	$16, %r12d
	jae	.LBB15_115
.LBB15_122:
	movq	%rbx, %r15
	testl	%r12d, %r12d
	je	.LBB15_125
# %bb.123:
	cmpl	$1, %r12d
	je	.LBB15_90
.LBB15_124:
	movq	%r15, %rdi
	movl	$45, %esi
	movq	%r14, %rdx
	callq	memset@PLT
.LBB15_125:
	movq	%r14, 88(%rsp)
	movb	$0, (%r15,%r14)
	movq	80(%rsp), %rcx
	movabsq	$2951479051793528259, %r9       # imm = 0x28F5C28F5C28F5C3
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %r10
	movq	184(%rsp), %rsi                 # 8-byte Reload
	cmpq	$100, %rsi
	jb	.LBB15_130
# %bb.126:                              # %.lr.ph.preheader.i.i
	addl	$-2, %r12d
	.p2align	4, 0x90
.LBB15_127:                             # %.lr.ph.i13.i
                                        # =>This Inner Loop Header: Depth=1
	leal	1(%r12), %edi
	movq	%rsi, %rax
	shrq	$2, %rax
	mulq	%r9
	shrq	$2, %rdx
	imull	$100, %edx, %eax
	movl	%esi, %r8d
	subl	%eax, %r8d
	movzbl	(%r10,%r8,2), %eax
	movzbl	1(%r10,%r8,2), %r8d
	movb	%r8b, (%rcx,%rdi)
	movl	%r12d, %edi
	movb	%al, (%rcx,%rdi)
	addl	$-2, %r12d
	cmpq	$9999, %rsi                     # imm = 0x270F
	movq	%rdx, %rsi
	ja	.LBB15_127
# %bb.128:                              # %._crit_edge.i.i183
	cmpq	$10, %rdx
	jb	.LBB15_131
.LBB15_129:
	movzbl	(%r10,%rdx,2), %eax
	movzbl	1(%r10,%rdx,2), %edx
	movb	%dl, 1(%rcx)
	jmp	.LBB15_132
.LBB15_130:
	movq	%rsi, %rdx
	cmpq	$10, %rdx
	jae	.LBB15_129
.LBB15_131:
	orb	$48, %dl
	movl	%edx, %eax
.LBB15_132:
	movq	%rbx, 144(%rsp)                 # 8-byte Spill
	movb	%al, (%rcx)
	movq	88(%rsp), %r12
	movq	%r12, %rax
	andq	$-16, %rax
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-15, %rcx
	cmpq	%rcx, %rax
	je	.LBB15_569
# %bb.133:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i822
	leaq	16(%r12), %rbp
	movq	80(%rsp), %r14
	leaq	96(%rsp), %rax
	cmpq	%rax, %r14
	je	.LBB15_139
# %bb.134:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i823.thread
	movq	96(%rsp), %r15
	movq	%r15, %rax
	cmpq	%r15, %rbp
	ja	.LBB15_140
# %bb.135:
	leaq	.L.str.16(%rip), %rax
	cmpq	%rax, %r14
	seta	%cl
	leaq	(%r14,%r12), %rdx
	cmpq	%rax, %rdx
	setb	%al
	orb	%cl, %al
	cmpb	$1, %al
	jne	.LBB15_532
# %bb.136:
	testq	%r12, %r12
	je	.LBB15_151
# %bb.137:
	cmpq	$1, %r12
	jne	.LBB15_150
# %bb.138:
	movzbl	(%r14), %eax
	movb	%al, 16(%r14)
	jmp	.LBB15_151
.LBB15_139:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i823
	movl	$15, %eax
	movq	96(%rsp), %r15
.LBB15_140:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i884
	cmpq	$-17, %r12
	jle	.LBB15_574
# %bb.141:
	addq	%rax, %rax
	movabsq	$9223372036854775807, %rbx      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rbx, %rax
	cmovbq	%rax, %rbx
	cmpq	%rax, %rbp
	cmovaeq	%rbp, %rbx
	movq	%rbx, %rdi
	incq	%rdi
	js	.LBB15_526
# %bb.142:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i886
.Ltmp249:
	callq	_Znwm@PLT
.Ltmp250:
# %bb.143:                              # %.noexc895
	movq	%rax, %r13
	movups	.L.str.16(%rip), %xmm0
	movups	%xmm0, (%rax)
	testq	%r12, %r12
	je	.LBB15_147
# %bb.144:
	movq	%r13, %rdi
	addq	$16, %rdi
	cmpq	$1, %r12
	jne	.LBB15_146
# %bb.145:
	movzbl	(%r14), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_147
.LBB15_146:
	movq	%r14, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB15_147:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit27.i889
	leaq	96(%rsp), %rax
	cmpq	%rax, %r14
	je	.LBB15_149
# %bb.148:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i890
	incq	%r15
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	_ZdlPvm@PLT
.LBB15_149:                             # %.noexc831
	movq	%r13, 80(%rsp)
	movq	%rbx, 96(%rsp)
	jmp	.LBB15_152
.LBB15_150:
	leaq	16(%r14), %rdi
	movq	%r14, %rsi
	movq	%r12, %rdx
	callq	memmove@PLT
.LBB15_151:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm.exit.i828
	movups	.L.str.16(%rip), %xmm0
	movups	%xmm0, (%r14)
.LBB15_152:                             # %.noexc189
	movq	%rbp, 88(%rsp)
	movq	80(%rsp), %rax
	movb	$0, (%rax,%rbp)
	leaq	64(%rsp), %r14
	movq	%r14, 48(%rsp)
	movq	80(%rsp), %rax
	leaq	96(%rsp), %rbx
	cmpq	%rbx, %rax
	je	.LBB15_154
# %bb.153:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i186
	movq	%rax, 48(%rsp)
	movq	88(%rsp), %r15
	movq	96(%rsp), %rcx
	movq	%rcx, 64(%rsp)
	jmp	.LBB15_155
.LBB15_154:
	movq	88(%rsp), %r15
	leaq	1(%r15), %rdx
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	memcpy@PLT
	movq	%r14, %rax
.LBB15_155:
	movq	144(%rsp), %r13                 # 8-byte Reload
	movq	%r15, 56(%rsp)
	movq	%rbx, 80(%rsp)
	movq	$0, 88(%rsp)
	movb	$0, 96(%rsp)
	movq	%r15, %rcx
	andq	$-2, %rcx
	movabsq	$9223372036854775807, %rdx      # imm = 0x7FFFFFFFFFFFFFFF
	decq	%rdx
	cmpq	%rdx, %rcx
	je	.LBB15_570
# %bb.156:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	leaq	2(%r15), %rbx
	movl	$15, %ecx
	cmpq	%r14, %rax
	je	.LBB15_158
# %bb.157:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	64(%rsp), %rcx
.LBB15_158:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	cmpq	%rcx, %rbx
	jbe	.LBB15_160
# %bb.159:
.Ltmp251:
	leaq	.L.str.17(%rip), %rcx
	leaq	48(%rsp), %rdi
	movl	$2, %r8d
	movq	%r15, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp252:
	jmp	.LBB15_161
.LBB15_160:
	movw	$14889, (%rax,%r15)             # imm = 0x3A29
.LBB15_161:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
	movq	%rbx, 56(%rsp)
	movq	48(%rsp), %rax
	movb	$0, (%rax,%rbx)
	leaq	24(%rsp), %r12
	movq	%r12, 8(%rsp)
	movq	48(%rsp), %rcx
	cmpq	%r14, %rcx
	je	.LBB15_163
# %bb.162:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i191
	movq	%rcx, 8(%rsp)
	movq	56(%rsp), %r15
	movq	64(%rsp), %rax
	movq	%rax, 24(%rsp)
	jmp	.LBB15_164
.LBB15_163:
	movq	56(%rsp), %r15
	leaq	1(%r15), %rdx
	movq	%r12, %rdi
	movq	%r14, %rsi
	callq	memcpy@PLT
	movq	%r12, %rcx
.LBB15_164:
	movq	%r15, 16(%rsp)
	movq	%r14, 48(%rsp)
	movq	$0, 56(%rsp)
	movb	$0, 64(%rsp)
	movq	(%rsp), %rdx                    # 8-byte Reload
	movq	8(%rdx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r15, %rax
	jb	.LBB15_572
# %bb.165:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i195
	leaq	(%rsi,%r15), %rbx
	movq	(%rdx), %rdi
	movl	$15, %eax
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB15_167
# %bb.166:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i195
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
.LBB15_167:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i195
	cmpq	%rax, %rbx
	jbe	.LBB15_169
# %bb.168:
.Ltmp253:
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	movq	%r15, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp254:
	jmp	.LBB15_173
.LBB15_169:
	testq	%r15, %r15
	je	.LBB15_173
# %bb.170:
	addq	%rsi, %rdi
	cmpq	$1, %r15
	jne	.LBB15_172
# %bb.171:
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_173
.LBB15_172:
	movq	%rcx, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB15_173:
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%rbx, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%rbx)
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB15_175
# %bb.174:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i203
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_175:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit205
	movq	48(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB15_177
# %bb.176:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i206
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_177:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit208
	movq	80(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB15_179
# %bb.178:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i209
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_179:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit211
	cmpq	$0, 184(%rsp)                   # 8-byte Folded Reload
	je	.LBB15_379
# %bb.180:                              # %.lr.ph.preheader
	leaq	24(%rsp), %r15
	movq	$0, 144(%rsp)                   # 8-byte Folded Spill
	leaq	.L.str.8(%rip), %rax
	movq	%rax, 192(%rsp)                 # 8-byte Spill
	.p2align	4, 0x90
.LBB15_181:                             # %.lr.ph
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB15_222 Depth 2
                                        #     Child Loop BB15_297 Depth 2
                                        #     Child Loop BB15_207 Depth 2
                                        #     Child Loop BB15_241 Depth 2
	movq	200(%rsp), %rax
	movq	8(%rax), %rcx
	testb	$2, 171(%rcx)
	je	.LBB15_544
# %bb.182:                              #   in Loop: Header=BB15_181 Depth=1
	movq	24(%rax), %rax
	movq	144(%rsp), %rcx                 # 8-byte Reload
	movq	(%rax,%rcx,8), %rdi
.Ltmp255:
	leaq	.L.str.12(%rip), %rsi
	leaq	.L.str.13(%rip), %rdx
	callq	PyUnicode_AsEncodedString@PLT
.Ltmp256:
# %bb.183:                              #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, 264(%rsp)
	testq	%rax, %rax
	je	.LBB15_200
# %bb.184:                              #   in Loop: Header=BB15_181 Depth=1
	movq	$0, 256(%rsp)
	movq	$0, 248(%rsp)
.Ltmp258:
	movq	%rax, %rdi
	leaq	256(%rsp), %rsi
	leaq	248(%rsp), %rdx
	callq	PyBytes_AsStringAndSize@PLT
.Ltmp259:
# %bb.185:                              #   in Loop: Header=BB15_181 Depth=1
	cmpl	$-1, %eax
	movabsq	$3777893186295716171, %rsi      # imm = 0x346DC5D63886594B
	je	.LBB15_203
# %bb.186:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %rax
	movl	$15, %ecx
	cmpq	40(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB15_188
# %bb.187:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	(%rcx), %rcx
.LBB15_188:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	8(%rdi), %r14
	leaq	1(%r14), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB15_191
# %bb.189:                              #   in Loop: Header=BB15_181 Depth=1
.Ltmp260:
	movl	$1, %r8d
	movq	%r14, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp261:
# %bb.190:                              # %.noexc361
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	(%rdi), %rax
.LBB15_191:                             #   in Loop: Header=BB15_181 Depth=1
	movb	$10, (%rax,%r14)
	movq	%rbx, 8(%rdi)
	movq	(%rdi), %rax
	movb	$0, 1(%rax,%r14)
	movq	%r15, %r12
	movq	256(%rsp), %r15
	movq	248(%rsp), %r14
	movq	%r12, 8(%rsp)
	testq	%r15, %r15
	setne	%al
	testq	%r14, %r14
	sete	%cl
	orb	%al, %cl
	je	.LBB15_545
# %bb.192:                              #   in Loop: Header=BB15_181 Depth=1
	cmpq	$16, %r14
	jb	.LBB15_197
# %bb.193:                              #   in Loop: Header=BB15_181 Depth=1
	testq	%r14, %r14
	js	.LBB15_555
# %bb.194:                              #   in Loop: Header=BB15_181 Depth=1
	movq	%r14, %rdi
	incq	%rdi
	js	.LBB15_519
# %bb.195:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i364
                                        #   in Loop: Header=BB15_181 Depth=1
.Ltmp263:
	callq	_Znwm@PLT
.Ltmp264:
# %bb.196:                              # %.noexc370
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, %r12
	movq	%rax, 8(%rsp)
	movq	%r14, 24(%rsp)
.LBB15_197:                             # %._crit_edge.i.i363
                                        #   in Loop: Header=BB15_181 Depth=1
	testq	%r14, %r14
	je	.LBB15_213
# %bb.198:                              # %._crit_edge.i.i363
                                        #   in Loop: Header=BB15_181 Depth=1
	cmpq	$1, %r14
	jne	.LBB15_212
# %bb.199:                              #   in Loop: Header=BB15_181 Depth=1
	movzbl	(%r15), %eax
	movb	%al, (%r12)
	jmp	.LBB15_213
	.p2align	4, 0x90
.LBB15_200:                             #   in Loop: Header=BB15_181 Depth=1
	movq	144(%rsp), %rcx                 # 8-byte Reload
	cmpq	$10, %rcx
	jae	.LBB15_206
# %bb.201:                              # %.thread788
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	128(%rsp), %rax
	movq	%rax, 112(%rsp)
.LBB15_202:                             #   in Loop: Header=BB15_181 Depth=1
	movb	$45, 128(%rsp)
	movl	$1, %ebx
	movl	$1, %r14d
	movq	%rax, %r15
	jmp	.LBB15_239
	.p2align	4, 0x90
.LBB15_203:                             #   in Loop: Header=BB15_181 Depth=1
	movq	144(%rsp), %rcx                 # 8-byte Reload
	cmpq	$10, %rcx
	jae	.LBB15_221
# %bb.204:                              # %.thread795
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	128(%rsp), %rax
	movq	%rax, 112(%rsp)
.LBB15_205:                             #   in Loop: Header=BB15_181 Depth=1
	movb	$45, 128(%rsp)
	movl	$1, %ebx
	movl	$1, %r14d
	movq	%rax, %r15
	jmp	.LBB15_295
.LBB15_206:                             # %.lr.ph.i.i221.preheader
                                        #   in Loop: Header=BB15_181 Depth=1
	movl	$4, %ebx
	movabsq	$3777893186295716171, %rsi      # imm = 0x346DC5D63886594B
	.p2align	4, 0x90
.LBB15_207:                             # %.lr.ph.i.i221
                                        #   Parent Loop BB15_181 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpq	$99, %rcx
	jbe	.LBB15_230
# %bb.208:                              #   in Loop: Header=BB15_207 Depth=2
	cmpq	$999, %rcx                      # imm = 0x3E7
	jbe	.LBB15_231
# %bb.209:                              #   in Loop: Header=BB15_207 Depth=2
	cmpq	$10000, %rcx                    # imm = 0x2710
	jb	.LBB15_232
# %bb.210:                              #   in Loop: Header=BB15_207 Depth=2
	movq	%rcx, %rax
	mulq	%rsi
	shrq	$11, %rdx
	addl	$4, %ebx
	cmpq	$99999, %rcx                    # imm = 0x1869F
	movq	%rdx, %rcx
	ja	.LBB15_207
# %bb.211:                              # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit.i224.loopexit
                                        #   in Loop: Header=BB15_181 Depth=1
	addl	$-3, %ebx
	jmp	.LBB15_232
.LBB15_212:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%r12, %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
.LBB15_213:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%r14, 16(%rsp)
	movb	$0, (%r12,%r14)
	movq	16(%rsp), %r8
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	8(%rcx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB15_547
# %bb.214:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i372
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	(%rcx), %rdi
	movl	$15, %eax
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	leaq	24(%rsp), %r15
	je	.LBB15_216
# %bb.215:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i372
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
.LBB15_216:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i372
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	8(%rsp), %rcx
	leaq	(%rsi,%r8), %rbx
	cmpq	%rax, %rbx
	jbe	.LBB15_218
# %bb.217:                              #   in Loop: Header=BB15_181 Depth=1
.Ltmp266:
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp267:
	jmp	.LBB15_228
.LBB15_218:                             #   in Loop: Header=BB15_181 Depth=1
	testq	%r8, %r8
	je	.LBB15_228
# %bb.219:                              #   in Loop: Header=BB15_181 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB15_227
# %bb.220:                              #   in Loop: Header=BB15_181 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_228
.LBB15_221:                             # %.lr.ph.i.i291.preheader
                                        #   in Loop: Header=BB15_181 Depth=1
	movl	$4, %ebx
	.p2align	4, 0x90
.LBB15_222:                             # %.lr.ph.i.i291
                                        #   Parent Loop BB15_181 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpq	$99, %rcx
	jbe	.LBB15_286
# %bb.223:                              #   in Loop: Header=BB15_222 Depth=2
	cmpq	$999, %rcx                      # imm = 0x3E7
	jbe	.LBB15_287
# %bb.224:                              #   in Loop: Header=BB15_222 Depth=2
	cmpq	$10000, %rcx                    # imm = 0x2710
	jb	.LBB15_288
# %bb.225:                              #   in Loop: Header=BB15_222 Depth=2
	movq	%rcx, %rax
	mulq	%rsi
	shrq	$11, %rdx
	addl	$4, %ebx
	cmpq	$99999, %rcx                    # imm = 0x1869F
	movq	%rdx, %rcx
	ja	.LBB15_222
# %bb.226:                              # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit.i294.loopexit
                                        #   in Loop: Header=BB15_181 Depth=1
	addl	$-3, %ebx
	jmp	.LBB15_288
.LBB15_227:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB15_228:                             #   in Loop: Header=BB15_181 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%rbx, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%rbx)
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB15_356
# %bb.229:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i380
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	24(%rsp), %rsi
	jmp	.LBB15_355
.LBB15_230:                             #   in Loop: Header=BB15_181 Depth=1
	addl	$-2, %ebx
	jmp	.LBB15_232
.LBB15_231:                             #   in Loop: Header=BB15_181 Depth=1
	decl	%ebx
.LBB15_232:                             # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit.i224
                                        #   in Loop: Header=BB15_181 Depth=1
	movl	%ebx, %r14d
	leaq	128(%rsp), %rax
	movq	%rax, 112(%rsp)
	cmpl	$16, %ebx
	jb	.LBB15_235
# %bb.233:                              # %.noexc.i234
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	1(%r14), %rdi
.Ltmp310:
	callq	_Znwm@PLT
.Ltmp311:
# %bb.234:                              # %.noexc235
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, %r15
	movq	%rax, 112(%rsp)
	movq	%r14, 128(%rsp)
	jmp	.LBB15_237
.LBB15_235:                             #   in Loop: Header=BB15_181 Depth=1
	testl	%ebx, %ebx
	je	.LBB15_238
# %bb.236:                              #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, %r15
	cmpl	$1, %ebx
	je	.LBB15_202
.LBB15_237:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%r15, %rdi
	movl	$45, %esi
	movq	%r14, %rdx
	callq	memset@PLT
	jmp	.LBB15_239
.LBB15_238:                             #   in Loop: Header=BB15_181 Depth=1
	leaq	128(%rsp), %r15
	.p2align	4, 0x90
.LBB15_239:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%r14, 120(%rsp)
	movb	$0, (%r15,%r14)
	movq	112(%rsp), %rcx
	movq	144(%rsp), %rsi                 # 8-byte Reload
	movq	%rsi, %rdx
	cmpq	$100, %rsi
	movabsq	$2951479051793528259, %r9       # imm = 0x28F5C28F5C28F5C3
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %r10
	jb	.LBB15_242
# %bb.240:                              # %.lr.ph.preheader.i.i230
                                        #   in Loop: Header=BB15_181 Depth=1
	addl	$-2, %ebx
	.p2align	4, 0x90
.LBB15_241:                             # %.lr.ph.i13.i231
                                        #   Parent Loop BB15_181 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	leal	1(%rbx), %edi
	movq	%rsi, %rax
	shrq	$2, %rax
	mulq	%r9
	shrq	$2, %rdx
	imull	$100, %edx, %eax
	movl	%esi, %r8d
	subl	%eax, %r8d
	movzbl	(%r10,%r8,2), %eax
	movzbl	1(%r10,%r8,2), %r8d
	movb	%r8b, (%rcx,%rdi)
	movl	%ebx, %edi
	movb	%al, (%rcx,%rdi)
	addl	$-2, %ebx
	cmpq	$9999, %rsi                     # imm = 0x270F
	movq	%rdx, %rsi
	ja	.LBB15_241
.LBB15_242:                             # %._crit_edge.i.i227
                                        #   in Loop: Header=BB15_181 Depth=1
	cmpq	$10, %rdx
	jb	.LBB15_244
# %bb.243:                              #   in Loop: Header=BB15_181 Depth=1
	movzbl	(%r10,%rdx,2), %eax
	movzbl	1(%r10,%rdx,2), %edx
	movb	%dl, 1(%rcx)
	jmp	.LBB15_245
.LBB15_244:                             #   in Loop: Header=BB15_181 Depth=1
	orb	$48, %dl
	movl	%edx, %eax
.LBB15_245:                             #   in Loop: Header=BB15_181 Depth=1
	movb	%al, (%rcx)
	movq	120(%rsp), %r13
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-29, %rax
	cmpq	%rax, %r13
	jg	.LBB15_558
# %bb.246:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i833
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	29(%r13), %rbx
	movq	112(%rsp), %r14
	leaq	128(%rsp), %rax
	cmpq	%rax, %r14
	je	.LBB15_249
# %bb.247:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i834.thread
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	128(%rsp), %r15
	movq	%r15, %rax
	cmpq	%r15, %rbx
	jbe	.LBB15_259
# %bb.248:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i897
                                        #   in Loop: Header=BB15_181 Depth=1
	cmpq	$-29, %r13
	jge	.LBB15_251
	jmp	.LBB15_557
.LBB15_249:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i834
                                        #   in Loop: Header=BB15_181 Depth=1
	cmpq	$15, %rbx
	jbe	.LBB15_259
# %bb.250:                              #   in Loop: Header=BB15_181 Depth=1
	movl	$15, %eax
	movq	128(%rsp), %r15
	cmpq	$-29, %r13
	jl	.LBB15_557
.LBB15_251:                             #   in Loop: Header=BB15_181 Depth=1
	addq	%rax, %rax
	movabsq	$9223372036854775807, %rbp      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rbp, %rax
	cmovbq	%rax, %rbp
	cmpq	%rax, %rbx
	cmovaeq	%rbx, %rbp
	movq	%rbp, %rdi
	incq	%rdi
	js	.LBB15_521
# %bb.252:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i899
                                        #   in Loop: Header=BB15_181 Depth=1
.Ltmp315:
	callq	_Znwm@PLT
.Ltmp316:
# %bb.253:                              # %.noexc908
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, %r12
	movups	.L.str.20+13(%rip), %xmm0
	movups	%xmm0, 13(%rax)
	movups	.L.str.20(%rip), %xmm0
	movups	%xmm0, (%rax)
	testq	%r13, %r13
	je	.LBB15_256
# %bb.254:                              #   in Loop: Header=BB15_181 Depth=1
	movq	%r12, %rdi
	addq	$29, %rdi
	cmpq	$1, %r13
	jne	.LBB15_285
# %bb.255:                              #   in Loop: Header=BB15_181 Depth=1
	movzbl	(%r14), %eax
	movb	%al, (%rdi)
.LBB15_256:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit27.i902
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	128(%rsp), %rax
	cmpq	%rax, %r14
	je	.LBB15_258
.LBB15_257:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i903
                                        #   in Loop: Header=BB15_181 Depth=1
	incq	%r15
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	_ZdlPvm@PLT
.LBB15_258:                             # %.noexc842
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%r12, 112(%rsp)
	movq	%rbp, 128(%rsp)
	jmp	.LBB15_265
.LBB15_259:                             #   in Loop: Header=BB15_181 Depth=1
	leaq	.L.str.20(%rip), %rdx
	cmpq	%rdx, %r14
	seta	%al
	leaq	(%r14,%r13), %rcx
	cmpq	%rdx, %rcx
	setb	%cl
	orb	%al, %cl
	cmpb	$1, %cl
	jne	.LBB15_359
# %bb.260:                              #   in Loop: Header=BB15_181 Depth=1
	testq	%r13, %r13
	je	.LBB15_264
# %bb.261:                              #   in Loop: Header=BB15_181 Depth=1
	cmpq	$1, %r13
	jne	.LBB15_263
# %bb.262:                              #   in Loop: Header=BB15_181 Depth=1
	movzbl	(%r14), %eax
	movb	%al, 29(%r14)
	jmp	.LBB15_264
.LBB15_263:                             #   in Loop: Header=BB15_181 Depth=1
	leaq	29(%r14), %rdi
	movq	%r14, %rsi
	movq	%r13, %rdx
	callq	memmove@PLT
.LBB15_264:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm.exit.i839
                                        #   in Loop: Header=BB15_181 Depth=1
	movups	.L.str.20+13(%rip), %xmm0
	movups	%xmm0, 13(%r14)
	movups	.L.str.20(%rip), %xmm0
	movups	%xmm0, (%r14)
.LBB15_265:                             # %.noexc240
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rbx, 120(%rsp)
	movq	112(%rsp), %rax
	movb	$0, (%rax,%rbx)
	leaq	96(%rsp), %r15
	movq	%r15, 80(%rsp)
	movq	112(%rsp), %rax
	leaq	128(%rsp), %rsi
	cmpq	%rsi, %rax
	je	.LBB15_269
# %bb.266:                              #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, 80(%rsp)
	movq	120(%rsp), %r14
	movq	120(%rsp), %rcx
	movq	%rcx, 88(%rsp)
	movq	128(%rsp), %rcx
	movq	%rcx, 96(%rsp)
	movq	%rsi, 112(%rsp)
	movq	$0, 120(%rsp)
	movb	$0, 128(%rsp)
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-3, %rcx
	cmpq	%rcx, %r14
	jg	.LBB15_551
# %bb.267:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i242
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	3(%r14), %rbx
	leaq	96(%rsp), %rcx
	cmpq	%rcx, %rax
	leaq	24(%rsp), %r15
	je	.LBB15_270
# %bb.268:                              #   in Loop: Header=BB15_181 Depth=1
	xorl	%ecx, %ecx
	movl	$15, %edx
	testb	%cl, %cl
	je	.LBB15_271
	jmp	.LBB15_272
.LBB15_269:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i242.thread
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	120(%rsp), %r14
	leaq	1(%r14), %rdx
	movq	%r15, %rdi
	callq	memcpy@PLT
	movq	%r14, 88(%rsp)
	movq	$0, 120(%rsp)
	movb	$0, 128(%rsp)
	leaq	3(%r14), %rbx
	movq	%r15, %rax
	leaq	24(%rsp), %r15
.LBB15_270:                             #   in Loop: Header=BB15_181 Depth=1
	movb	$1, %cl
	movl	$15, %edx
	testb	%cl, %cl
	jne	.LBB15_272
.LBB15_271:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i243
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	96(%rsp), %rdx
.LBB15_272:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i243
                                        #   in Loop: Header=BB15_181 Depth=1
	cmpq	%rdx, %rbx
	jbe	.LBB15_274
# %bb.273:                              #   in Loop: Header=BB15_181 Depth=1
.Ltmp321:
	movl	$3, %r8d
	leaq	80(%rsp), %rdi
	movq	%r14, %rsi
	xorl	%edx, %edx
	leaq	.L.str.21(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp322:
	jmp	.LBB15_275
.LBB15_274:                             #   in Loop: Header=BB15_181 Depth=1
	movb	$32, 2(%rax,%r14)
	movw	$14941, (%rax,%r14)             # imm = 0x3A5D
.LBB15_275:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i247
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rbx, 88(%rsp)
	movq	80(%rsp), %rax
	movb	$0, (%rax,%rbx)
	leaq	64(%rsp), %rdi
	movq	%rdi, 48(%rsp)
	movq	80(%rsp), %rax
	leaq	96(%rsp), %r14
	cmpq	%r14, %rax
	je	.LBB15_277
# %bb.276:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i248
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, 48(%rsp)
	movq	88(%rsp), %rbx
	movq	96(%rsp), %rax
	movq	%rax, 64(%rsp)
	jmp	.LBB15_278
.LBB15_277:                             #   in Loop: Header=BB15_181 Depth=1
	movq	88(%rsp), %rbx
	leaq	1(%rbx), %rdx
	movq	%r14, %rsi
	callq	memcpy@PLT
.LBB15_278:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%rbx, 56(%rsp)
	movq	%r14, 80(%rsp)
	movq	$0, 88(%rsp)
	movb	$0, 96(%rsp)
.Ltmp324:
	leaq	208(%rsp), %rbx
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail12error_stringB5cxx11Ev
.Ltmp325:
# %bb.279:                              #   in Loop: Header=BB15_181 Depth=1
.Ltmp327:
	leaq	8(%rsp), %rdi
	leaq	48(%rsp), %rsi
	movq	%rbx, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp328:
# %bb.280:                              #   in Loop: Header=BB15_181 Depth=1
	movq	16(%rsp), %r8
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	8(%rcx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB15_549
# %bb.281:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i253
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	(%rcx), %rdi
	movl	$15, %eax
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB15_283
# %bb.282:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i253
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
.LBB15_283:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i253
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	8(%rsp), %rcx
	leaq	(%rsi,%r8), %rbx
	cmpq	%rax, %rbx
	jbe	.LBB15_341
# %bb.284:                              #   in Loop: Header=BB15_181 Depth=1
.Ltmp330:
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp331:
	jmp	.LBB15_345
.LBB15_285:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%r14, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
	leaq	128(%rsp), %rax
	cmpq	%rax, %r14
	jne	.LBB15_257
	jmp	.LBB15_258
.LBB15_286:                             #   in Loop: Header=BB15_181 Depth=1
	addl	$-2, %ebx
	jmp	.LBB15_288
.LBB15_287:                             #   in Loop: Header=BB15_181 Depth=1
	decl	%ebx
.LBB15_288:                             # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit.i294
                                        #   in Loop: Header=BB15_181 Depth=1
	movl	%ebx, %r14d
	leaq	128(%rsp), %rax
	movq	%rax, 112(%rsp)
	cmpl	$16, %ebx
	jb	.LBB15_291
# %bb.289:                              # %.noexc.i304
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	1(%r14), %rdi
.Ltmp279:
	callq	_Znwm@PLT
.Ltmp280:
# %bb.290:                              # %.noexc305
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, %r15
	movq	%rax, 112(%rsp)
	movq	%r14, 128(%rsp)
	jmp	.LBB15_293
.LBB15_291:                             #   in Loop: Header=BB15_181 Depth=1
	testl	%ebx, %ebx
	je	.LBB15_294
# %bb.292:                              #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, %r15
	cmpl	$1, %ebx
	je	.LBB15_205
.LBB15_293:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%r15, %rdi
	movl	$45, %esi
	movq	%r14, %rdx
	callq	memset@PLT
	jmp	.LBB15_295
.LBB15_294:                             #   in Loop: Header=BB15_181 Depth=1
	leaq	128(%rsp), %r15
	.p2align	4, 0x90
.LBB15_295:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%r14, 120(%rsp)
	movb	$0, (%r15,%r14)
	movq	112(%rsp), %rcx
	movq	144(%rsp), %rsi                 # 8-byte Reload
	movq	%rsi, %rdx
	cmpq	$100, %rsi
	movabsq	$2951479051793528259, %r9       # imm = 0x28F5C28F5C28F5C3
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %r10
	jb	.LBB15_298
# %bb.296:                              # %.lr.ph.preheader.i.i300
                                        #   in Loop: Header=BB15_181 Depth=1
	addl	$-2, %ebx
	.p2align	4, 0x90
.LBB15_297:                             # %.lr.ph.i13.i301
                                        #   Parent Loop BB15_181 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	leal	1(%rbx), %edi
	movq	%rsi, %rax
	shrq	$2, %rax
	mulq	%r9
	shrq	$2, %rdx
	imull	$100, %edx, %eax
	movl	%esi, %r8d
	subl	%eax, %r8d
	movzbl	(%r10,%r8,2), %eax
	movzbl	1(%r10,%r8,2), %r8d
	movb	%r8b, (%rcx,%rdi)
	movl	%ebx, %edi
	movb	%al, (%rcx,%rdi)
	addl	$-2, %ebx
	cmpq	$9999, %rsi                     # imm = 0x270F
	movq	%rdx, %rsi
	ja	.LBB15_297
.LBB15_298:                             # %._crit_edge.i.i297
                                        #   in Loop: Header=BB15_181 Depth=1
	cmpq	$10, %rdx
	jb	.LBB15_300
# %bb.299:                              #   in Loop: Header=BB15_181 Depth=1
	movzbl	(%r10,%rdx,2), %eax
	movzbl	1(%r10,%rdx,2), %edx
	movb	%dl, 1(%rcx)
	jmp	.LBB15_301
.LBB15_300:                             #   in Loop: Header=BB15_181 Depth=1
	orb	$48, %dl
	movl	%edx, %eax
.LBB15_301:                             #   in Loop: Header=BB15_181 Depth=1
	movb	%al, (%rcx)
	movq	120(%rsp), %r13
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-30, %rax
	cmpq	%rax, %r13
	jg	.LBB15_567
# %bb.302:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i844
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	30(%r13), %rbx
	movq	112(%rsp), %r14
	leaq	128(%rsp), %rax
	cmpq	%rax, %r14
	je	.LBB15_305
# %bb.303:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i845.thread
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	128(%rsp), %r15
	movq	%r15, %rax
	cmpq	%r15, %rbx
	jbe	.LBB15_315
# %bb.304:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i910
                                        #   in Loop: Header=BB15_181 Depth=1
	cmpq	$-30, %r13
	jge	.LBB15_307
	jmp	.LBB15_566
.LBB15_305:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i845
                                        #   in Loop: Header=BB15_181 Depth=1
	cmpq	$15, %rbx
	jbe	.LBB15_315
# %bb.306:                              #   in Loop: Header=BB15_181 Depth=1
	movl	$15, %eax
	movq	128(%rsp), %r15
	cmpq	$-30, %r13
	jl	.LBB15_566
.LBB15_307:                             #   in Loop: Header=BB15_181 Depth=1
	addq	%rax, %rax
	movabsq	$9223372036854775807, %rbp      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rbp, %rax
	cmovbq	%rax, %rbp
	cmpq	%rax, %rbx
	cmovaeq	%rbx, %rbp
	movq	%rbp, %rdi
	incq	%rdi
	js	.LBB15_523
# %bb.308:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i912
                                        #   in Loop: Header=BB15_181 Depth=1
.Ltmp284:
	callq	_Znwm@PLT
.Ltmp285:
# %bb.309:                              # %.noexc921
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, %r12
	movups	.L.str.22+14(%rip), %xmm0
	movups	%xmm0, 14(%rax)
	movups	.L.str.22(%rip), %xmm0
	movups	%xmm0, (%rax)
	testq	%r13, %r13
	je	.LBB15_312
# %bb.310:                              #   in Loop: Header=BB15_181 Depth=1
	movq	%r12, %rdi
	addq	$30, %rdi
	cmpq	$1, %r13
	jne	.LBB15_358
# %bb.311:                              #   in Loop: Header=BB15_181 Depth=1
	movzbl	(%r14), %eax
	movb	%al, (%rdi)
.LBB15_312:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit27.i915
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	128(%rsp), %rax
	cmpq	%rax, %r14
	je	.LBB15_314
.LBB15_313:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i916
                                        #   in Loop: Header=BB15_181 Depth=1
	incq	%r15
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	_ZdlPvm@PLT
.LBB15_314:                             # %.noexc853
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%r12, 112(%rsp)
	movq	%rbp, 128(%rsp)
	jmp	.LBB15_321
.LBB15_315:                             #   in Loop: Header=BB15_181 Depth=1
	leaq	.L.str.22(%rip), %rdx
	cmpq	%rdx, %r14
	seta	%al
	leaq	(%r14,%r13), %rcx
	cmpq	%rdx, %rcx
	setb	%cl
	orb	%al, %cl
	cmpb	$1, %cl
	jne	.LBB15_360
# %bb.316:                              #   in Loop: Header=BB15_181 Depth=1
	testq	%r13, %r13
	je	.LBB15_320
# %bb.317:                              #   in Loop: Header=BB15_181 Depth=1
	cmpq	$1, %r13
	jne	.LBB15_319
# %bb.318:                              #   in Loop: Header=BB15_181 Depth=1
	movzbl	(%r14), %eax
	movb	%al, 30(%r14)
	jmp	.LBB15_320
.LBB15_319:                             #   in Loop: Header=BB15_181 Depth=1
	leaq	30(%r14), %rdi
	movq	%r14, %rsi
	movq	%r13, %rdx
	callq	memmove@PLT
.LBB15_320:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm.exit.i850
                                        #   in Loop: Header=BB15_181 Depth=1
	movups	.L.str.22+14(%rip), %xmm0
	movups	%xmm0, 14(%r14)
	movups	.L.str.22(%rip), %xmm0
	movups	%xmm0, (%r14)
.LBB15_321:                             # %.noexc310
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rbx, 120(%rsp)
	movq	112(%rsp), %rax
	movb	$0, (%rax,%rbx)
	leaq	96(%rsp), %r15
	movq	%r15, 80(%rsp)
	movq	112(%rsp), %rax
	leaq	128(%rsp), %rsi
	cmpq	%rsi, %rax
	je	.LBB15_325
# %bb.322:                              #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, 80(%rsp)
	movq	120(%rsp), %r14
	movq	120(%rsp), %rcx
	movq	%rcx, 88(%rsp)
	movq	128(%rsp), %rcx
	movq	%rcx, 96(%rsp)
	movq	%rsi, 112(%rsp)
	movq	$0, 120(%rsp)
	movb	$0, 128(%rsp)
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-3, %rcx
	cmpq	%rcx, %r14
	jg	.LBB15_560
# %bb.323:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i312
                                        #   in Loop: Header=BB15_181 Depth=1
	leaq	3(%r14), %rbx
	leaq	96(%rsp), %rcx
	cmpq	%rcx, %rax
	leaq	24(%rsp), %r15
	je	.LBB15_326
# %bb.324:                              #   in Loop: Header=BB15_181 Depth=1
	xorl	%ecx, %ecx
	movl	$15, %edx
	testb	%cl, %cl
	je	.LBB15_327
	jmp	.LBB15_328
.LBB15_325:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i312.thread
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	120(%rsp), %r14
	leaq	1(%r14), %rdx
	movq	%r15, %rdi
	callq	memcpy@PLT
	movq	%r14, 88(%rsp)
	movq	$0, 120(%rsp)
	movb	$0, 128(%rsp)
	leaq	3(%r14), %rbx
	movq	%r15, %rax
	leaq	24(%rsp), %r15
.LBB15_326:                             #   in Loop: Header=BB15_181 Depth=1
	movb	$1, %cl
	movl	$15, %edx
	testb	%cl, %cl
	jne	.LBB15_328
.LBB15_327:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i313
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	96(%rsp), %rdx
.LBB15_328:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i313
                                        #   in Loop: Header=BB15_181 Depth=1
	cmpq	%rdx, %rbx
	jbe	.LBB15_330
# %bb.329:                              #   in Loop: Header=BB15_181 Depth=1
.Ltmp290:
	movl	$3, %r8d
	leaq	80(%rsp), %rdi
	movq	%r14, %rsi
	xorl	%edx, %edx
	leaq	.L.str.21(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp291:
	jmp	.LBB15_331
.LBB15_330:                             #   in Loop: Header=BB15_181 Depth=1
	movb	$32, 2(%rax,%r14)
	movw	$14941, (%rax,%r14)             # imm = 0x3A5D
.LBB15_331:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i317
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rbx, 88(%rsp)
	movq	80(%rsp), %rax
	movb	$0, (%rax,%rbx)
	leaq	64(%rsp), %rdi
	movq	%rdi, 48(%rsp)
	movq	80(%rsp), %rax
	leaq	96(%rsp), %r14
	cmpq	%r14, %rax
	je	.LBB15_333
# %bb.332:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i318
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	%rax, 48(%rsp)
	movq	88(%rsp), %rbx
	movq	96(%rsp), %rax
	movq	%rax, 64(%rsp)
	jmp	.LBB15_334
.LBB15_333:                             #   in Loop: Header=BB15_181 Depth=1
	movq	88(%rsp), %rbx
	leaq	1(%rbx), %rdx
	movq	%r14, %rsi
	callq	memcpy@PLT
.LBB15_334:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%rbx, 56(%rsp)
	movq	%r14, 80(%rsp)
	movq	$0, 88(%rsp)
	movb	$0, 96(%rsp)
.Ltmp293:
	leaq	208(%rsp), %rbx
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail12error_stringB5cxx11Ev
.Ltmp294:
# %bb.335:                              #   in Loop: Header=BB15_181 Depth=1
.Ltmp296:
	leaq	8(%rsp), %rdi
	leaq	48(%rsp), %rsi
	movq	%rbx, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp297:
# %bb.336:                              #   in Loop: Header=BB15_181 Depth=1
	movq	16(%rsp), %r8
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	8(%rcx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB15_553
# %bb.337:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i323
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	(%rcx), %rdi
	movl	$15, %eax
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB15_339
# %bb.338:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i323
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
.LBB15_339:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i323
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	8(%rsp), %rcx
	leaq	(%rsi,%r8), %rbx
	cmpq	%rax, %rbx
	jbe	.LBB15_341
# %bb.340:                              #   in Loop: Header=BB15_181 Depth=1
.Ltmp299:
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp300:
	jmp	.LBB15_345
	.p2align	4, 0x90
.LBB15_341:                             #   in Loop: Header=BB15_181 Depth=1
	testq	%r8, %r8
	je	.LBB15_345
# %bb.342:                              #   in Loop: Header=BB15_181 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB15_344
# %bb.343:                              #   in Loop: Header=BB15_181 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_345
.LBB15_344:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB15_345:                             #   in Loop: Header=BB15_181 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%rbx, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%rbx)
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_347
# %bb.346:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i261
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_347:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit263
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_349
# %bb.348:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i264
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	224(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_349:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit266
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_351
# %bb.350:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i267
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_351:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit269
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_353
# %bb.352:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i270
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_353:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit272
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_356
# %bb.354:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i273
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	128(%rsp), %rsi
.LBB15_355:                             #   in Loop: Header=BB15_181 Depth=1
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_356:                             #   in Loop: Header=BB15_181 Depth=1
.Ltmp333:
	leaq	264(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp334:
# %bb.357:                              # %_ZN8pybind116objectD2Ev.exit386
                                        #   in Loop: Header=BB15_181 Depth=1
	movq	144(%rsp), %rcx                 # 8-byte Reload
	incq	%rcx
	movq	%rcx, 144(%rsp)                 # 8-byte Spill
	cmpq	184(%rsp), %rcx                 # 8-byte Folded Reload
	jne	.LBB15_181
	jmp	.LBB15_379
.LBB15_358:                             #   in Loop: Header=BB15_181 Depth=1
	movq	%r14, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
	leaq	128(%rsp), %rax
	cmpq	%rax, %r14
	jne	.LBB15_313
	jmp	.LBB15_314
.LBB15_359:                             #   in Loop: Header=BB15_181 Depth=1
.Ltmp313:
	movl	$29, %r8d
	leaq	112(%rsp), %rdi
	movq	%r14, %rsi
	xorl	%edx, %edx
	leaq	.L.str.20(%rip), %rcx
	movq	%r13, %r9
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@PLT
.Ltmp314:
	jmp	.LBB15_265
.LBB15_360:                             #   in Loop: Header=BB15_181 Depth=1
.Ltmp282:
	movl	$30, %r8d
	leaq	112(%rsp), %rdi
	movq	%r14, %rsi
	xorl	%edx, %edx
	leaq	.L.str.22(%rip), %rcx
	movq	%r13, %r9
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@PLT
.Ltmp283:
	jmp	.LBB15_321
.LBB15_361:
	leaq	35(%r15), %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memmove@PLT
.LBB15_362:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm.exit.i
	movups	.L.str.15+16(%rip), %xmm0
	movups	%xmm0, 16(%r15)
	movups	.L.str.15(%rip), %xmm0
	movups	%xmm0, (%r15)
	movl	$540682591, 31(%r15)            # imm = 0x203A295F
.LBB15_363:                             # %.noexc168
	movq	%rbx, 56(%rsp)
	movb	$0, (%r15,%rbx)
	leaq	24(%rsp), %r15
	movq	%r15, 8(%rsp)
	movq	48(%rsp), %rcx
	cmpq	%r14, %rcx
	je	.LBB15_365
# %bb.364:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i166
	movq	%rcx, 8(%rsp)
	movq	56(%rsp), %r12
	movq	64(%rsp), %rax
	movq	%rax, 24(%rsp)
	jmp	.LBB15_366
.LBB15_365:
	movq	56(%rsp), %r12
	leaq	1(%r12), %rdx
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	memcpy@PLT
	movq	%r15, %rcx
.LBB15_366:
	movq	%r12, 16(%rsp)
	movq	%r14, 48(%rsp)
	movq	$0, 56(%rsp)
	movb	$0, 64(%rsp)
	movq	(%rsp), %rdx                    # 8-byte Reload
	movq	8(%rdx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r12, %rax
	jb	.LBB15_580
# %bb.367:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	leaq	(%rsi,%r12), %rbx
	movq	(%rdx), %rdi
	movl	$15, %eax
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB15_369
# %bb.368:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
.LBB15_369:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	cmpq	%rax, %rbx
	jbe	.LBB15_371
# %bb.370:
.Ltmp365:
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	movq	%r12, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp366:
	jmp	.LBB15_375
.LBB15_371:
	testq	%r12, %r12
	je	.LBB15_375
# %bb.372:
	addq	%rsi, %rdi
	cmpq	$1, %r12
	jne	.LBB15_374
# %bb.373:
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_375
.LBB15_374:
	movq	%rcx, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB15_375:
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%rbx, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%rbx)
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB15_377
# %bb.376:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i171
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_377:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit173
	movq	48(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB15_379
# %bb.378:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i174
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_379:                             # %.loopexit
.Ltmp384:
	leaq	200(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp385:
# %bb.380:                              # %_ZN8pybind116objectD2Ev.exit388
.Ltmp387:
	leaq	272(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp388:
# %bb.381:                              # %_ZN8pybind116objectD2Ev.exit389
	movq	(%rsp), %rbx                    # 8-byte Reload
	cmpq	$0, 8(%rbx)
	je	.LBB15_382
.LBB15_18:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit395
	movq	240(%rsp), %rax                 # 8-byte Reload
	movq	16(%rax), %rax
	testq	%rax, %rax
	je	.LBB15_397
	.p2align	4, 0x90
.LBB15_388:                             # %.preheader550
                                        # =>This Inner Loop Header: Depth=1
	movq	%rax, %rcx
	movq	16(%rax), %rax
	testq	%rax, %rax
	jne	.LBB15_388
# %bb.389:
	movq	24(%rcx), %r12
	testq	%r12, %r12
	je	.LBB15_392
# %bb.390:
	movl	(%r12), %eax
	incl	%eax
	je	.LBB15_392
# %bb.391:
	movl	%eax, (%r12)
.LBB15_392:                             # %_ZL10Py_XINCREFP7_object.exit
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	8(%rcx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-6, %rax
	cmpq	%rax, %rsi
	jg	.LBB15_562
# %bb.393:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i397
	leaq	6(%rsi), %rbx
	movq	(%rcx), %rax
	movl	$15, %ecx
	cmpq	40(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB15_395
# %bb.394:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i397
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	(%rcx), %rcx
.LBB15_395:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i397
	cmpq	%rcx, %rbx
	jbe	.LBB15_404
# %bb.396:
.Ltmp397:
	leaq	.L.str.25(%rip), %rcx
	movl	$6, %r8d
	movq	(%rsp), %r14                    # 8-byte Reload
	movq	%r14, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp398:
	jmp	.LBB15_405
.LBB15_397:                             # %.thread
	cmpq	$0, 160(%rsp)
	je	.LBB15_516
# %bb.398:                              # %.thread115
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	(%rcx), %rax
	movq	8(%rcx), %r14
	leaq	1(%r14), %rbx
	movl	$15, %ecx
	cmpq	40(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB15_400
# %bb.399:                              # %.thread115
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	(%rcx), %rcx
.LBB15_400:                             # %.thread115
	cmpq	%rcx, %rbx
	jbe	.LBB15_403
# %bb.401:
.Ltmp453:
	movl	$1, %r8d
	movq	(%rsp), %r15                    # 8-byte Reload
	movq	%r15, %rdi
	movq	%r14, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp454:
# %bb.402:                              # %.noexc493
	movq	(%r15), %rax
.LBB15_403:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit494
	movb	$10, (%rax,%r14)
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%rbx, 8(%rax)
	movq	(%rax), %rax
	movb	$0, 1(%rax,%r14)
	movq	160(%rsp), %r8
	jmp	.LBB15_504
.LBB15_404:
	movw	$2618, 4(%rax,%rsi)             # imm = 0xA3A
	movl	$1950419466, (%rax,%rsi)        # imm = 0x74410A0A
	movq	(%rsp), %r14                    # 8-byte Reload
.LBB15_405:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit
	movq	%rbx, 8(%r14)
	movq	(%r14), %rax
	movb	$0, (%rax,%rbx)
	testq	%r12, %r12
	je	.LBB15_503
# %bb.406:                              # %.lr.ph755
	leaq	24(%rsp), %rbp
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	decq	%rax
	movq	%rax, 184(%rsp)                 # 8-byte Spill
	jmp	.LBB15_408
	.p2align	4, 0x90
.LBB15_407:                             # %_ZL9Py_DECREFP7_object.exit122
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	%r15, %r12
	testq	%r15, %r15
	je	.LBB15_503
.LBB15_408:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB15_438 Depth 2
                                        #     Child Loop BB15_454 Depth 2
.Ltmp399:
	movq	%r12, %rdi
	callq	PyFrame_GetCode@PLT
.Ltmp400:
# %bb.409:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp402:
	movq	%rax, %rbx
	movq	%r12, 144(%rsp)                 # 8-byte Spill
	movq	%r12, %rdi
	callq	PyFrame_GetLineNumber@PLT
.Ltmp403:
# %bb.410:                              #   in Loop: Header=BB15_408 Depth=1
	movl	%eax, %r12d
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	8(%rcx), %rsi
	movq	%rsi, %rax
	andq	$-2, %rax
	cmpq	184(%rsp), %rax                 # 8-byte Folded Reload
	je	.LBB15_534
# %bb.411:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i405
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rcx), %rax
	movl	$15, %ecx
	cmpq	40(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB15_413
# %bb.412:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i405
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	(%rcx), %rcx
.LBB15_413:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i405
                                        #   in Loop: Header=BB15_408 Depth=1
	leaq	2(%rsi), %r14
	cmpq	%rcx, %r14
	jbe	.LBB15_415
# %bb.414:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp404:
	movl	$2, %r8d
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	leaq	.L.str.26(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp405:
	jmp	.LBB15_416
	.p2align	4, 0x90
.LBB15_415:                             #   in Loop: Header=BB15_408 Depth=1
	movw	$8224, (%rax,%rsi)              # imm = 0x2020
.LBB15_416:                             #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%r14, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%r14)
	movq	112(%rbx), %rax
	movq	%rax, 80(%rsp)
	movq	%rbp, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp406:
	leaq	8(%rsp), %rdi
	leaq	80(%rsp), %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp407:
# %bb.417:                              # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i
                                        #   in Loop: Header=BB15_408 Depth=1
	leaq	64(%rsp), %rdi
	movq	%rdi, 48(%rsp)
	movq	8(%rsp), %rcx
	cmpq	%rbp, %rcx
	je	.LBB15_419
# %bb.418:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	%rcx, 48(%rsp)
	movq	16(%rsp), %r13
	movq	24(%rsp), %rax
	movq	%rax, 64(%rsp)
	jmp	.LBB15_420
	.p2align	4, 0x90
.LBB15_419:                             #   in Loop: Header=BB15_408 Depth=1
	movq	16(%rsp), %r13
	leaq	1(%r13), %rdx
	movq	%rbp, %rsi
	movq	%rdi, %r14
	callq	memcpy@PLT
	movq	%r14, %rcx
.LBB15_420:                             #   in Loop: Header=BB15_408 Depth=1
	movq	%r13, 56(%rsp)
	movq	(%rsp), %rdx                    # 8-byte Reload
	movq	8(%rdx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r13, %rax
	jb	.LBB15_538
# %bb.421:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i414
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rdx), %rdi
	movl	$15, %eax
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB15_423
# %bb.422:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i414
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
.LBB15_423:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i414
                                        #   in Loop: Header=BB15_408 Depth=1
	leaq	(%rsi,%r13), %r14
	cmpq	%rax, %r14
	jbe	.LBB15_425
# %bb.424:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp409:
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	movq	%r13, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp410:
	jmp	.LBB15_429
	.p2align	4, 0x90
.LBB15_425:                             #   in Loop: Header=BB15_408 Depth=1
	testq	%r13, %r13
	je	.LBB15_429
# %bb.426:                              #   in Loop: Header=BB15_408 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r13
	jne	.LBB15_428
# %bb.427:                              #   in Loop: Header=BB15_408 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_429
.LBB15_428:                             #   in Loop: Header=BB15_408 Depth=1
	movq	%rcx, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB15_429:                             #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%r14, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%r14)
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_431
# %bb.430:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i422
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_431:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit424
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	(%rcx), %rax
	movq	8(%rcx), %r13
	movl	$15, %ecx
	cmpq	40(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB15_433
# %bb.432:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit424
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	(%rcx), %rcx
.LBB15_433:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit424
                                        #   in Loop: Header=BB15_408 Depth=1
	leaq	1(%r13), %r14
	cmpq	%rcx, %r14
	jbe	.LBB15_436
# %bb.434:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp412:
	movl	$1, %r8d
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	%r13, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp413:
# %bb.435:                              # %.noexc427
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %rax
.LBB15_436:                             #   in Loop: Header=BB15_408 Depth=1
	movb	$40, (%rax,%r13)
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%r14, 8(%rax)
	movq	(%rax), %rax
	movb	$0, 1(%rax,%r13)
	movl	%r12d, %ebp
	negl	%ebp
	cmovsl	%r12d, %ebp
	movl	$1, %r14d
	cmpl	$10, %ebp
	jb	.LBB15_445
# %bb.437:                              # %.lr.ph.i.i429.preheader
                                        #   in Loop: Header=BB15_408 Depth=1
	movl	$4, %r14d
	movl	%ebp, %eax
	.p2align	4, 0x90
.LBB15_438:                             # %.lr.ph.i.i429
                                        #   Parent Loop BB15_408 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpl	$99, %eax
	jbe	.LBB15_443
# %bb.439:                              #   in Loop: Header=BB15_438 Depth=2
	cmpl	$999, %eax                      # imm = 0x3E7
	jbe	.LBB15_444
# %bb.440:                              #   in Loop: Header=BB15_438 Depth=2
	cmpl	$10000, %eax                    # imm = 0x2710
	jb	.LBB15_445
# %bb.441:                              #   in Loop: Header=BB15_438 Depth=2
	movl	%eax, %ecx
	movl	$3518437209, %edx               # imm = 0xD1B71759
	imulq	%rdx, %rcx
	shrq	$45, %rcx
	addl	$4, %r14d
	cmpl	$99999, %eax                    # imm = 0x1869F
	movl	%ecx, %eax
	ja	.LBB15_438
# %bb.442:                              # %_ZNSt8__detail14__to_chars_lenIjEEjT_i.exit.i.loopexit
                                        #   in Loop: Header=BB15_408 Depth=1
	addl	$-3, %r14d
	jmp	.LBB15_445
.LBB15_443:                             #   in Loop: Header=BB15_408 Depth=1
	addl	$-2, %r14d
	jmp	.LBB15_445
.LBB15_444:                             #   in Loop: Header=BB15_408 Depth=1
	decl	%r14d
	.p2align	4, 0x90
.LBB15_445:                             # %_ZNSt8__detail14__to_chars_lenIjEEjT_i.exit.i
                                        #   in Loop: Header=BB15_408 Depth=1
	shrl	$31, %r12d
	leal	(%r14,%r12), %r13d
	leaq	24(%rsp), %r15
	movq	%r15, 8(%rsp)
	cmpl	$16, %r13d
	jb	.LBB15_448
# %bb.446:                              #   in Loop: Header=BB15_408 Depth=1
	leaq	1(%r13), %rdi
.Ltmp414:
	callq	_Znwm@PLT
.Ltmp415:
# %bb.447:                              # %.noexc.i438
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	%rax, %r15
	movq	%rax, 8(%rsp)
	movq	%r13, 24(%rsp)
	jmp	.LBB15_451
	.p2align	4, 0x90
.LBB15_448:                             #   in Loop: Header=BB15_408 Depth=1
	testq	%r13, %r13
	je	.LBB15_452
# %bb.449:                              #   in Loop: Header=BB15_408 Depth=1
	cmpl	$1, %r13d
	jne	.LBB15_451
# %bb.450:                              #   in Loop: Header=BB15_408 Depth=1
	movb	$45, 24(%rsp)
	jmp	.LBB15_452
	.p2align	4, 0x90
.LBB15_451:                             #   in Loop: Header=BB15_408 Depth=1
	movq	%r15, %rdi
	movl	$45, %esi
	movq	%r13, %rdx
	callq	memset@PLT
.LBB15_452:                             #   in Loop: Header=BB15_408 Depth=1
	movq	%r13, 16(%rsp)
	movb	$0, (%r15,%r13)
	movl	%r12d, %eax
	addq	8(%rsp), %rax
	cmpl	$100, %ebp
	jb	.LBB15_457
# %bb.453:                              # %.lr.ph.preheader.i.i435
                                        #   in Loop: Header=BB15_408 Depth=1
	addl	$-2, %r14d
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %r8
	.p2align	4, 0x90
.LBB15_454:                             # %.lr.ph.i11.i
                                        #   Parent Loop BB15_408 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	leal	1(%r14), %edx
	movl	%ebp, %ecx
	imulq	$1374389535, %rcx, %rcx         # imm = 0x51EB851F
	shrq	$37, %rcx
	imull	$100, %ecx, %esi
	movl	%ebp, %edi
	subl	%esi, %edi
	movzbl	(%r8,%rdi,2), %esi
	movzbl	1(%r8,%rdi,2), %edi
	movb	%dil, (%rax,%rdx)
	movl	%r14d, %edx
	movb	%sil, (%rax,%rdx)
	addl	$-2, %r14d
	cmpl	$9999, %ebp                     # imm = 0x270F
	movl	%ecx, %ebp
	ja	.LBB15_454
# %bb.455:                              # %._crit_edge.i.i432
                                        #   in Loop: Header=BB15_408 Depth=1
	cmpl	$10, %ecx
	jb	.LBB15_458
.LBB15_456:                             #   in Loop: Header=BB15_408 Depth=1
	movl	%ecx, %ecx
	leaq	(%rcx,%rcx), %rdx
	movl	%edx, %edx
	movzbl	1(%rdx,%r8), %edx
	movb	%dl, 1(%rax)
	movzbl	(%r8,%rcx,2), %ecx
	jmp	.LBB15_459
	.p2align	4, 0x90
.LBB15_457:                             #   in Loop: Header=BB15_408 Depth=1
	movl	%ebp, %ecx
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %r8
	cmpl	$10, %ecx
	jae	.LBB15_456
.LBB15_458:                             #   in Loop: Header=BB15_408 Depth=1
	orb	$48, %cl
.LBB15_459:                             # %_ZNSt7__cxx119to_stringEi.exit
                                        #   in Loop: Header=BB15_408 Depth=1
	leaq	24(%rsp), %rbp
	movb	%cl, (%rax)
	movq	16(%rsp), %r8
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	8(%rcx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB15_540
# %bb.460:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i439
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rcx), %rdi
	movl	$15, %eax
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB15_462
# %bb.461:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i439
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
.LBB15_462:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i439
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	8(%rsp), %rcx
	leaq	(%rsi,%r8), %r14
	cmpq	%rax, %r14
	jbe	.LBB15_464
# %bb.463:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp417:
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp418:
	jmp	.LBB15_468
	.p2align	4, 0x90
.LBB15_464:                             #   in Loop: Header=BB15_408 Depth=1
	testq	%r8, %r8
	je	.LBB15_468
# %bb.465:                              #   in Loop: Header=BB15_408 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB15_467
# %bb.466:                              #   in Loop: Header=BB15_408 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_468
.LBB15_467:                             #   in Loop: Header=BB15_408 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB15_468:                             #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%r14, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%r14)
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB15_470
# %bb.469:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i447
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_470:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit449
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	8(%rcx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-3, %rax
	cmpq	%rax, %rsi
	jg	.LBB15_534
# %bb.471:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i450
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rcx), %rax
	movl	$15, %ecx
	cmpq	40(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB15_473
# %bb.472:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i450
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	(%rcx), %rcx
.LBB15_473:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i450
                                        #   in Loop: Header=BB15_408 Depth=1
	leaq	3(%rsi), %r14
	cmpq	%rcx, %r14
	jbe	.LBB15_475
# %bb.474:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp420:
	movl	$3, %r8d
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	leaq	.L.str.27(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp421:
	jmp	.LBB15_476
	.p2align	4, 0x90
.LBB15_475:                             #   in Loop: Header=BB15_408 Depth=1
	movb	$32, 2(%rax,%rsi)
	movw	$14889, (%rax,%rsi)             # imm = 0x3A29
.LBB15_476:                             #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%r14, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%r14)
	movq	120(%rbx), %rax
	movq	%rax, 80(%rsp)
	leaq	24(%rsp), %r14
	movq	%r14, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp422:
	leaq	8(%rsp), %rdi
	leaq	80(%rsp), %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp423:
# %bb.477:                              # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i459
                                        #   in Loop: Header=BB15_408 Depth=1
	leaq	64(%rsp), %rdi
	movq	%rdi, 48(%rsp)
	movq	8(%rsp), %rcx
	cmpq	%r14, %rcx
	je	.LBB15_479
# %bb.478:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i460
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	%rcx, 48(%rsp)
	movq	16(%rsp), %r12
	movq	24(%rsp), %rax
	movq	%rax, 64(%rsp)
	jmp	.LBB15_480
	.p2align	4, 0x90
.LBB15_479:                             #   in Loop: Header=BB15_408 Depth=1
	movq	%r14, %rsi
	movq	16(%rsp), %r12
	leaq	1(%r12), %rdx
	movq	%rdi, %r14
	callq	memcpy@PLT
	movq	%r14, %rcx
.LBB15_480:                             #   in Loop: Header=BB15_408 Depth=1
	movq	%r12, 56(%rsp)
	movq	(%rsp), %rdx                    # 8-byte Reload
	movq	8(%rdx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r12, %rax
	jb	.LBB15_542
# %bb.481:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i467
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rdx), %rdi
	movl	$15, %eax
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB15_483
# %bb.482:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i467
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
.LBB15_483:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i467
                                        #   in Loop: Header=BB15_408 Depth=1
	leaq	(%rsi,%r12), %r14
	cmpq	%rax, %r14
	jbe	.LBB15_485
# %bb.484:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp425:
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	movq	%r12, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp426:
	jmp	.LBB15_489
	.p2align	4, 0x90
.LBB15_485:                             #   in Loop: Header=BB15_408 Depth=1
	testq	%r12, %r12
	je	.LBB15_489
# %bb.486:                              #   in Loop: Header=BB15_408 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r12
	jne	.LBB15_488
# %bb.487:                              #   in Loop: Header=BB15_408 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_489
.LBB15_488:                             #   in Loop: Header=BB15_408 Depth=1
	movq	%rcx, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB15_489:                             #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%r14, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%r14)
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_491
# %bb.490:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i475
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_491:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit477
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	(%rcx), %rax
	movq	8(%rcx), %r12
	movl	$15, %ecx
	cmpq	40(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB15_493
# %bb.492:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit477
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	(%rcx), %rcx
.LBB15_493:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit477
                                        #   in Loop: Header=BB15_408 Depth=1
	leaq	1(%r12), %r14
	cmpq	%rcx, %r14
	jbe	.LBB15_496
# %bb.494:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp428:
	movl	$1, %r8d
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	%r12, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp429:
# %bb.495:                              # %.noexc480
                                        #   in Loop: Header=BB15_408 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %rax
.LBB15_496:                             #   in Loop: Header=BB15_408 Depth=1
	movb	$10, (%rax,%r12)
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%r14, 8(%rax)
	movq	(%rax), %rax
	movb	$0, 1(%rax,%r12)
	movq	(%rbx), %rax
	testl	%eax, %eax
	js	.LBB15_499
# %bb.497:                              #   in Loop: Header=BB15_408 Depth=1
	decq	%rax
	movq	%rax, (%rbx)
	jne	.LBB15_499
# %bb.498:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp430:
	movq	%rbx, %rdi
	callq	_Py_Dealloc@PLT
.Ltmp431:
	.p2align	4, 0x90
.LBB15_499:                             # %_ZL9Py_DECREFP7_object.exit
                                        #   in Loop: Header=BB15_408 Depth=1
.Ltmp433:
	movq	144(%rsp), %r14                 # 8-byte Reload
	movq	%r14, %rdi
	callq	PyFrame_GetBack@PLT
.Ltmp434:
# %bb.500:                              #   in Loop: Header=BB15_408 Depth=1
	movq	%rax, %r15
	movq	(%r14), %rax
	testl	%eax, %eax
	js	.LBB15_407
# %bb.501:                              #   in Loop: Header=BB15_408 Depth=1
	decq	%rax
	movq	%rax, (%r14)
	jne	.LBB15_407
# %bb.502:                              #   in Loop: Header=BB15_408 Depth=1
.Ltmp435:
	movq	%r14, %rdi
	callq	_Py_Dealloc@PLT
.Ltmp436:
	jmp	.LBB15_407
.LBB15_503:                             # %.preheader._crit_edge
	movq	160(%rsp), %r8
	testq	%r8, %r8
	je	.LBB15_516
.LBB15_504:
	movq	152(%rsp), %rcx
.Ltmp456:
	leaq	.L.str.28(%rip), %rsi
	leaq	8(%rsp), %rdi
	leaq	48(%rsp), %r9
	movl	$39, %edx
	callq	_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE@PLT
.Ltmp457:
# %bb.505:
	movq	16(%rsp), %r8
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	8(%rax), %rsi
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rcx
	cmpq	%r8, %rcx
	jb	.LBB15_564
# %bb.506:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i496
	leaq	(%rsi,%r8), %rbx
	movq	(%rax), %rdi
	movl	$15, %eax
	cmpq	40(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB15_508
# %bb.507:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i496
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
.LBB15_508:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i496
	movq	8(%rsp), %rcx
	cmpq	%rax, %rbx
	jbe	.LBB15_510
# %bb.509:
.Ltmp459:
	movq	(%rsp), %rdi                    # 8-byte Reload
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp460:
	jmp	.LBB15_514
.LBB15_510:
	testq	%r8, %r8
	je	.LBB15_514
# %bb.511:
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB15_513
# %bb.512:
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB15_514
.LBB15_513:
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB15_514:
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	%rbx, 8(%rax)
	movq	(%rax), %rax
	movb	$0, (%rax,%rbx)
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_516
# %bb.515:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i504
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_516:
	movq	152(%rsp), %rdi
	leaq	168(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_518
# %bb.517:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i510
	movq	168(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_518:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit512
	movq	(%rsp), %rax                    # 8-byte Reload
	addq	$280, %rsp                      # imm = 0x118
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB15_519:                             # %.noexc9.i365
	.cfi_def_cfa_offset 336
.Ltmp272:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp273:
# %bb.520:                              # %.noexc369
.LBB15_521:
.Ltmp339:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp340:
# %bb.522:                              # %.noexc907
.LBB15_523:
.Ltmp305:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp306:
# %bb.524:                              # %.noexc920
.LBB15_525:
.Ltmp392:
	leaq	.L.str.24(%rip), %rcx
	movl	$15, %r8d
	movq	(%rsp), %rbx                    # 8-byte Reload
	movq	%rbx, %rdi
	xorl	%edx, %edx
	xorl	%r9d, %r9d
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@PLT
.Ltmp393:
	jmp	.LBB15_387
.LBB15_526:
.Ltmp353:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp354:
# %bb.527:                              # %.noexc894
.LBB15_528:
.Ltmp370:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp371:
# %bb.529:                              # %.noexc882
.LBB15_530:                             # %.noexc9.i
.Ltmp207:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp208:
# %bb.531:                              # %.noexc152
.LBB15_532:
.Ltmp247:
	leaq	.L.str.16(%rip), %rcx
	leaq	80(%rsp), %rdi
	movl	$16, %r8d
	movq	%r14, %rsi
	xorl	%edx, %edx
	movq	%r12, %r9
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@PLT
.Ltmp248:
	jmp	.LBB15_152
.LBB15_533:
	movq	%rsi, %rdi
	jmp	.LBB15_71
.LBB15_534:                             # %.invoke
.Ltmp447:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp448:
# %bb.535:                              # %.cont
.LBB15_536:
.Ltmp361:
	leaq	.L.str.15(%rip), %rcx
	leaq	48(%rsp), %rdi
	movl	$35, %r8d
	movq	%r15, %rsi
	xorl	%edx, %edx
	movq	%r12, %r9
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@PLT
.Ltmp362:
# %bb.537:                              # %..noexc168_crit_edge
	movq	48(%rsp), %r15
	jmp	.LBB15_363
.LBB15_538:
.Ltmp444:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp445:
# %bb.539:                              # %.noexc419
.LBB15_540:
.Ltmp441:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp442:
# %bb.541:                              # %.noexc444
.LBB15_542:
.Ltmp438:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp439:
# %bb.543:                              # %.noexc472
.LBB15_544:
	leaq	.L.str.18(%rip), %rdi
	leaq	.L.str.19(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev(%rip), %rcx
	movl	$626, %edx                      # imm = 0x272
	callq	__assert_fail@PLT
.LBB15_545:
.Ltmp276:
	leaq	.L.str.34(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.Ltmp277:
# %bb.546:                              # %.noexc367
.LBB15_547:
.Ltmp269:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp270:
# %bb.548:                              # %.noexc377
.LBB15_549:
.Ltmp336:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp337:
# %bb.550:                              # %.noexc258
.LBB15_551:
.Ltmp318:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp319:
# %bb.552:                              # %.noexc250
.LBB15_553:
.Ltmp302:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp303:
# %bb.554:                              # %.noexc328
.LBB15_555:                             # %.noexc.i366
.Ltmp274:
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp275:
# %bb.556:                              # %.noexc368
.LBB15_557:
	leaq	.L.str.9(%rip), %rax
	movq	%rax, 192(%rsp)                 # 8-byte Spill
.LBB15_558:                             # %.invoke1013
.Ltmp341:
	movq	192(%rsp), %rdi                 # 8-byte Reload
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp342:
# %bb.559:                              # %.cont1014
.LBB15_560:
.Ltmp287:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp288:
# %bb.561:                              # %.noexc320
.LBB15_562:
.Ltmp450:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp451:
# %bb.563:                              # %.noexc403
.LBB15_564:
.Ltmp461:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp462:
# %bb.565:                              # %.noexc501
.LBB15_566:
	leaq	.L.str.9(%rip), %rax
	movq	%rax, 192(%rsp)                 # 8-byte Spill
.LBB15_567:                             # %.invoke1015
.Ltmp307:
	movq	192(%rsp), %rdi                 # 8-byte Reload
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp308:
# %bb.568:                              # %.cont1016
.LBB15_569:
	leaq	.L.str.8(%rip), %rdi
	jmp	.LBB15_575
.LBB15_570:
.Ltmp350:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp351:
# %bb.571:                              # %.noexc193
.LBB15_572:
.Ltmp347:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp348:
# %bb.573:                              # %.noexc200
.LBB15_574:
	leaq	.L.str.9(%rip), %rdi
.LBB15_575:                             # %.invoke1011
.Ltmp355:
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp356:
# %bb.576:                              # %.cont1012
.LBB15_577:
.Ltmp211:
	leaq	.L.str.34(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.Ltmp212:
# %bb.578:                              # %.noexc150
.LBB15_579:
	leaq	.L.str.8(%rip), %rdi
	jmp	.LBB15_583
.LBB15_580:
.Ltmp367:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp368:
# %bb.581:                              # %.noexc169
.LBB15_582:
	leaq	.L.str.9(%rip), %rdi
.LBB15_583:                             # %.invoke1009
.Ltmp372:
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp373:
# %bb.584:                              # %.cont1010
.LBB15_585:                             # %.noexc.i
.Ltmp209:
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp210:
# %bb.586:                              # %.noexc151
.LBB15_587:
.Ltmp246:
	jmp	.LBB15_653
.LBB15_588:
.Ltmp216:
	jmp	.LBB15_676
.LBB15_589:
.Ltmp455:
	jmp	.LBB15_674
.LBB15_590:
.Ltmp360:
	jmp	.LBB15_653
.LBB15_591:
.Ltmp225:
	jmp	.LBB15_676
.LBB15_592:
.Ltmp222:
	jmp	.LBB15_676
.LBB15_593:
.Ltmp369:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB15_679
# %bb.594:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i177
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB15_679
.LBB15_595:
.Ltmp377:
	jmp	.LBB15_653
.LBB15_596:
.Ltmp237:
	jmp	.LBB15_618
.LBB15_597:
.Ltmp234:
	jmp	.LBB15_618
.LBB15_598:
.Ltmp281:
	jmp	.LBB15_690
.LBB15_599:
.Ltmp219:
	jmp	.LBB15_676
.LBB15_600:
.Ltmp349:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	jne	.LBB15_603
# %bb.601:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit214
	movq	48(%rsp), %rdi
	cmpq	%r14, %rdi
	jne	.LBB15_605
.LBB15_602:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit217
	movq	80(%rsp), %rdi
	cmpq	144(%rsp), %rdi                 # 8-byte Folded Reload
	jne	.LBB15_682
	jmp	.LBB15_692
.LBB15_603:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i212
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB15_602
	jmp	.LBB15_605
.LBB15_604:
.Ltmp352:
	movq	%rax, %rbx
	movq	48(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB15_602
.LBB15_605:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i215
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rdi
	cmpq	144(%rsp), %rdi                 # 8-byte Folded Reload
	jne	.LBB15_682
	jmp	.LBB15_692
.LBB15_606:
.Ltmp231:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB15_607:
.Ltmp243:
	jmp	.LBB15_653
.LBB15_608:
.Ltmp202:
	jmp	.LBB15_618
.LBB15_609:
.Ltmp312:
	jmp	.LBB15_690
.LBB15_610:
.Ltmp396:
	jmp	.LBB15_674
.LBB15_611:                             # %.loopexit561
.Ltmp292:
	jmp	.LBB15_623
.LBB15_612:                             # %.loopexit566
.Ltmp301:
	jmp	.LBB15_634
.LBB15_613:                             # %.loopexit941
.Ltmp286:
	jmp	.LBB15_686
.LBB15_614:
.Ltmp389:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB15_615:
.Ltmp386:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB15_616:
.Ltmp458:
	jmp	.LBB15_674
.LBB15_617:
.Ltmp240:
.LBB15_618:
	movq	%rax, %rbx
	jmp	.LBB15_693
.LBB15_619:
.Ltmp199:
	jmp	.LBB15_674
.LBB15_620:                             # %.loopexit.split-lp562
.Ltmp289:
	jmp	.LBB15_623
.LBB15_621:                             # %.loopexit576
.Ltmp332:
	jmp	.LBB15_634
.LBB15_622:                             # %.loopexit571
.Ltmp323:
	jmp	.LBB15_623
.LBB15_624:                             # %.loopexit945
.Ltmp317:
	jmp	.LBB15_686
.LBB15_625:
.Ltmp463:
	jmp	.LBB15_665
.LBB15_626:
.Ltmp452:
	jmp	.LBB15_674
.LBB15_627:                             # %.loopexit551
.Ltmp265:
	jmp	.LBB15_690
.LBB15_628:                             # %.loopexit556
.Ltmp268:
	jmp	.LBB15_648
.LBB15_629:                             # %.loopexit.split-lp567
.Ltmp304:
	jmp	.LBB15_634
.LBB15_630:                             # %.loopexit.split-lp572
.Ltmp320:
.LBB15_623:                             # %.loopexit571
	movq	%rax, %rbx
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_638
	jmp	.LBB15_646
.LBB15_631:
.Ltmp298:
	jmp	.LBB15_641
.LBB15_632:
.Ltmp295:
	jmp	.LBB15_644
.LBB15_633:                             # %.loopexit.split-lp577
.Ltmp338:
.LBB15_634:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB15_639
# %bb.635:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit278
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB15_642
.LBB15_636:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit281
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB15_645
.LBB15_637:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit284
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB15_646
.LBB15_638:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit287
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB15_687
	jmp	.LBB15_691
.LBB15_639:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i276
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_636
	jmp	.LBB15_642
.LBB15_640:
.Ltmp329:
.LBB15_641:
	movq	%rax, %rbx
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_636
.LBB15_642:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i279
	movq	224(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_637
.LBB15_645:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i282
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_638
.LBB15_646:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i285
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB15_687
	jmp	.LBB15_691
.LBB15_643:
.Ltmp326:
.LBB15_644:
	movq	%rax, %rbx
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_637
	jmp	.LBB15_645
.LBB15_647:                             # %.loopexit.split-lp557
.Ltmp271:
.LBB15_648:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_691
# %bb.649:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i383
	movq	24(%rsp), %rsi
	jmp	.LBB15_688
.LBB15_650:
.Ltmp262:
	jmp	.LBB15_690
.LBB15_651:
.Ltmp335:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB15_652:
.Ltmp257:
.LBB15_653:
	movq	%rax, %rbx
	jmp	.LBB15_692
.LBB15_654:                             # %.loopexit535
.Ltmp411:
	jmp	.LBB15_668
.LBB15_655:                             # %.loopexit540
.Ltmp419:
	jmp	.LBB15_665
.LBB15_656:
.Ltmp416:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB15_657:                             # %.loopexit545
.Ltmp427:
	jmp	.LBB15_668
.LBB15_658:
.Ltmp401:
	jmp	.LBB15_674
.LBB15_659:
.Ltmp408:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB15_694
	jmp	.LBB15_660
.LBB15_661:
.Ltmp424:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	jne	.LBB15_660
	jmp	.LBB15_694
.LBB15_663:                             # %.loopexit.split-lp546
.Ltmp440:
	jmp	.LBB15_668
.LBB15_664:                             # %.loopexit.split-lp541
.Ltmp443:
.LBB15_665:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_694
.LBB15_660:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i519
	movq	24(%rsp), %rsi
	jmp	.LBB15_670
.LBB15_667:                             # %.loopexit.split-lp536
.Ltmp446:
.LBB15_668:
	movq	%rax, %rbx
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_694
# %bb.669:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i482
	movq	64(%rsp), %rsi
.LBB15_670:                             # %.body
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB15_694
.LBB15_671:
.Ltmp437:
	jmp	.LBB15_674
.LBB15_672:                             # %.loopexit.split-lp
.Ltmp449:
	jmp	.LBB15_674
.LBB15_673:                             # %.loopexit534
.Ltmp432:
.LBB15_674:
	movq	%rax, %rbx
	jmp	.LBB15_694
.LBB15_675:
.Ltmp213:
.LBB15_676:
	movq	%rax, %rbx
.Ltmp226:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp227:
	jmp	.LBB15_693
.LBB15_677:
.Ltmp228:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB15_678:
.Ltmp374:
	movq	%rax, %rbx
.LBB15_679:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit179
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_692
# %bb.680:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i180
	movq	64(%rsp), %rsi
	jmp	.LBB15_683
.LBB15_681:
.Ltmp357:
	movq	%rax, %rbx
	movq	80(%rsp), %rdi
	cmpq	144(%rsp), %rdi                 # 8-byte Folded Reload
	je	.LBB15_692
.LBB15_682:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i218
	movq	96(%rsp), %rsi
.LBB15_683:
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB15_692
.LBB15_684:                             # %.loopexit.split-lp942
.Ltmp309:
	jmp	.LBB15_686
.LBB15_685:                             # %.loopexit.split-lp946
.Ltmp343:
.LBB15_686:                             # %.loopexit.split-lp946
	movq	%rax, %rbx
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_691
.LBB15_687:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i288
	movq	128(%rsp), %rsi
.LBB15_688:
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB15_691
.LBB15_689:                             # %.loopexit.split-lp552
.Ltmp278:
.LBB15_690:
	movq	%rax, %rbx
.LBB15_691:
.Ltmp344:
	leaq	264(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp345:
.LBB15_692:
.Ltmp378:
	leaq	200(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp379:
.LBB15_693:
.Ltmp381:
	leaq	272(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp382:
.LBB15_694:
	movq	152(%rsp), %rdi
	leaq	168(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB15_696
# %bb.695:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i513
	movq	168(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_696:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit515
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %rdi
	movq	40(%rsp), %rax                  # 8-byte Reload
	cmpq	%rax, %rdi
	je	.LBB15_698
# %bb.697:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i516
	movq	(%rax), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB15_698:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit518
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB15_699:
.Ltmp383:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB15_700:
.Ltmp380:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB15_701:
.Ltmp346:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end15:
	.size	_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev, .Lfunc_end15-_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev,"aG",@progbits,_ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev,comdat
	.p2align	2, 0x0
GCC_except_table15:
.Lexception8:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase5-.Lttbaseref5
.Lttbaseref5:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end8-.Lcst_begin8
.Lcst_begin8:
	.uleb128 .Ltmp197-.Lfunc_begin8         # >> Call Site 1 <<
	.uleb128 .Ltmp198-.Ltmp197              #   Call between .Ltmp197 and .Ltmp198
	.uleb128 .Ltmp199-.Lfunc_begin8         #     jumps to .Ltmp199
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp200-.Lfunc_begin8         # >> Call Site 2 <<
	.uleb128 .Ltmp201-.Ltmp200              #   Call between .Ltmp200 and .Ltmp201
	.uleb128 .Ltmp202-.Lfunc_begin8         #     jumps to .Ltmp202
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp203-.Lfunc_begin8         # >> Call Site 3 <<
	.uleb128 .Ltmp204-.Ltmp203              #   Call between .Ltmp203 and .Ltmp204
	.uleb128 .Ltmp219-.Lfunc_begin8         #     jumps to .Ltmp219
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp205-.Lfunc_begin8         # >> Call Site 4 <<
	.uleb128 .Ltmp206-.Ltmp205              #   Call between .Ltmp205 and .Ltmp206
	.uleb128 .Ltmp213-.Lfunc_begin8         #     jumps to .Ltmp213
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp390-.Lfunc_begin8         # >> Call Site 5 <<
	.uleb128 .Ltmp395-.Ltmp390              #   Call between .Ltmp390 and .Ltmp395
	.uleb128 .Ltmp396-.Lfunc_begin8         #     jumps to .Ltmp396
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp232-.Lfunc_begin8         # >> Call Site 6 <<
	.uleb128 .Ltmp233-.Ltmp232              #   Call between .Ltmp232 and .Ltmp233
	.uleb128 .Ltmp234-.Lfunc_begin8         #     jumps to .Ltmp234
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp220-.Lfunc_begin8         # >> Call Site 7 <<
	.uleb128 .Ltmp221-.Ltmp220              #   Call between .Ltmp220 and .Ltmp221
	.uleb128 .Ltmp222-.Lfunc_begin8         #     jumps to .Ltmp222
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp214-.Lfunc_begin8         # >> Call Site 8 <<
	.uleb128 .Ltmp215-.Ltmp214              #   Call between .Ltmp214 and .Ltmp215
	.uleb128 .Ltmp216-.Lfunc_begin8         #     jumps to .Ltmp216
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp215-.Lfunc_begin8         # >> Call Site 9 <<
	.uleb128 .Ltmp235-.Ltmp215              #   Call between .Ltmp215 and .Ltmp235
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp235-.Lfunc_begin8         # >> Call Site 10 <<
	.uleb128 .Ltmp236-.Ltmp235              #   Call between .Ltmp235 and .Ltmp236
	.uleb128 .Ltmp237-.Lfunc_begin8         #     jumps to .Ltmp237
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp236-.Lfunc_begin8         # >> Call Site 11 <<
	.uleb128 .Ltmp223-.Ltmp236              #   Call between .Ltmp236 and .Ltmp223
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp223-.Lfunc_begin8         # >> Call Site 12 <<
	.uleb128 .Ltmp224-.Ltmp223              #   Call between .Ltmp223 and .Ltmp224
	.uleb128 .Ltmp225-.Lfunc_begin8         #     jumps to .Ltmp225
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp224-.Lfunc_begin8         # >> Call Site 13 <<
	.uleb128 .Ltmp217-.Ltmp224              #   Call between .Ltmp224 and .Ltmp217
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp217-.Lfunc_begin8         # >> Call Site 14 <<
	.uleb128 .Ltmp218-.Ltmp217              #   Call between .Ltmp217 and .Ltmp218
	.uleb128 .Ltmp219-.Lfunc_begin8         #     jumps to .Ltmp219
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp229-.Lfunc_begin8         # >> Call Site 15 <<
	.uleb128 .Ltmp230-.Ltmp229              #   Call between .Ltmp229 and .Ltmp230
	.uleb128 .Ltmp231-.Lfunc_begin8         #     jumps to .Ltmp231
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp238-.Lfunc_begin8         # >> Call Site 16 <<
	.uleb128 .Ltmp239-.Ltmp238              #   Call between .Ltmp238 and .Ltmp239
	.uleb128 .Ltmp240-.Lfunc_begin8         #     jumps to .Ltmp240
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp241-.Lfunc_begin8         # >> Call Site 17 <<
	.uleb128 .Ltmp242-.Ltmp241              #   Call between .Ltmp241 and .Ltmp242
	.uleb128 .Ltmp243-.Lfunc_begin8         #     jumps to .Ltmp243
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp375-.Lfunc_begin8         # >> Call Site 18 <<
	.uleb128 .Ltmp376-.Ltmp375              #   Call between .Ltmp375 and .Ltmp376
	.uleb128 .Ltmp377-.Lfunc_begin8         #     jumps to .Ltmp377
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp358-.Lfunc_begin8         # >> Call Site 19 <<
	.uleb128 .Ltmp359-.Ltmp358              #   Call between .Ltmp358 and .Ltmp359
	.uleb128 .Ltmp360-.Lfunc_begin8         #     jumps to .Ltmp360
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp363-.Lfunc_begin8         # >> Call Site 20 <<
	.uleb128 .Ltmp364-.Ltmp363              #   Call between .Ltmp363 and .Ltmp364
	.uleb128 .Ltmp374-.Lfunc_begin8         #     jumps to .Ltmp374
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp244-.Lfunc_begin8         # >> Call Site 21 <<
	.uleb128 .Ltmp245-.Ltmp244              #   Call between .Ltmp244 and .Ltmp245
	.uleb128 .Ltmp246-.Lfunc_begin8         #     jumps to .Ltmp246
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp245-.Lfunc_begin8         # >> Call Site 22 <<
	.uleb128 .Ltmp249-.Ltmp245              #   Call between .Ltmp245 and .Ltmp249
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp249-.Lfunc_begin8         # >> Call Site 23 <<
	.uleb128 .Ltmp250-.Ltmp249              #   Call between .Ltmp249 and .Ltmp250
	.uleb128 .Ltmp357-.Lfunc_begin8         #     jumps to .Ltmp357
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp250-.Lfunc_begin8         # >> Call Site 24 <<
	.uleb128 .Ltmp251-.Ltmp250              #   Call between .Ltmp250 and .Ltmp251
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp251-.Lfunc_begin8         # >> Call Site 25 <<
	.uleb128 .Ltmp252-.Ltmp251              #   Call between .Ltmp251 and .Ltmp252
	.uleb128 .Ltmp352-.Lfunc_begin8         #     jumps to .Ltmp352
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp252-.Lfunc_begin8         # >> Call Site 26 <<
	.uleb128 .Ltmp253-.Ltmp252              #   Call between .Ltmp252 and .Ltmp253
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp253-.Lfunc_begin8         # >> Call Site 27 <<
	.uleb128 .Ltmp254-.Ltmp253              #   Call between .Ltmp253 and .Ltmp254
	.uleb128 .Ltmp349-.Lfunc_begin8         #     jumps to .Ltmp349
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp254-.Lfunc_begin8         # >> Call Site 28 <<
	.uleb128 .Ltmp255-.Ltmp254              #   Call between .Ltmp254 and .Ltmp255
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp255-.Lfunc_begin8         # >> Call Site 29 <<
	.uleb128 .Ltmp256-.Ltmp255              #   Call between .Ltmp255 and .Ltmp256
	.uleb128 .Ltmp257-.Lfunc_begin8         #     jumps to .Ltmp257
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp258-.Lfunc_begin8         # >> Call Site 30 <<
	.uleb128 .Ltmp261-.Ltmp258              #   Call between .Ltmp258 and .Ltmp261
	.uleb128 .Ltmp262-.Lfunc_begin8         #     jumps to .Ltmp262
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp263-.Lfunc_begin8         # >> Call Site 31 <<
	.uleb128 .Ltmp264-.Ltmp263              #   Call between .Ltmp263 and .Ltmp264
	.uleb128 .Ltmp265-.Lfunc_begin8         #     jumps to .Ltmp265
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp264-.Lfunc_begin8         # >> Call Site 32 <<
	.uleb128 .Ltmp266-.Ltmp264              #   Call between .Ltmp264 and .Ltmp266
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp266-.Lfunc_begin8         # >> Call Site 33 <<
	.uleb128 .Ltmp267-.Ltmp266              #   Call between .Ltmp266 and .Ltmp267
	.uleb128 .Ltmp268-.Lfunc_begin8         #     jumps to .Ltmp268
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp267-.Lfunc_begin8         # >> Call Site 34 <<
	.uleb128 .Ltmp310-.Ltmp267              #   Call between .Ltmp267 and .Ltmp310
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp310-.Lfunc_begin8         # >> Call Site 35 <<
	.uleb128 .Ltmp311-.Ltmp310              #   Call between .Ltmp310 and .Ltmp311
	.uleb128 .Ltmp312-.Lfunc_begin8         #     jumps to .Ltmp312
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp311-.Lfunc_begin8         # >> Call Site 36 <<
	.uleb128 .Ltmp315-.Ltmp311              #   Call between .Ltmp311 and .Ltmp315
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp315-.Lfunc_begin8         # >> Call Site 37 <<
	.uleb128 .Ltmp316-.Ltmp315              #   Call between .Ltmp315 and .Ltmp316
	.uleb128 .Ltmp317-.Lfunc_begin8         #     jumps to .Ltmp317
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp316-.Lfunc_begin8         # >> Call Site 38 <<
	.uleb128 .Ltmp321-.Ltmp316              #   Call between .Ltmp316 and .Ltmp321
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp321-.Lfunc_begin8         # >> Call Site 39 <<
	.uleb128 .Ltmp322-.Ltmp321              #   Call between .Ltmp321 and .Ltmp322
	.uleb128 .Ltmp323-.Lfunc_begin8         #     jumps to .Ltmp323
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp322-.Lfunc_begin8         # >> Call Site 40 <<
	.uleb128 .Ltmp324-.Ltmp322              #   Call between .Ltmp322 and .Ltmp324
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp324-.Lfunc_begin8         # >> Call Site 41 <<
	.uleb128 .Ltmp325-.Ltmp324              #   Call between .Ltmp324 and .Ltmp325
	.uleb128 .Ltmp326-.Lfunc_begin8         #     jumps to .Ltmp326
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp327-.Lfunc_begin8         # >> Call Site 42 <<
	.uleb128 .Ltmp328-.Ltmp327              #   Call between .Ltmp327 and .Ltmp328
	.uleb128 .Ltmp329-.Lfunc_begin8         #     jumps to .Ltmp329
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp330-.Lfunc_begin8         # >> Call Site 43 <<
	.uleb128 .Ltmp331-.Ltmp330              #   Call between .Ltmp330 and .Ltmp331
	.uleb128 .Ltmp332-.Lfunc_begin8         #     jumps to .Ltmp332
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp331-.Lfunc_begin8         # >> Call Site 44 <<
	.uleb128 .Ltmp279-.Ltmp331              #   Call between .Ltmp331 and .Ltmp279
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp279-.Lfunc_begin8         # >> Call Site 45 <<
	.uleb128 .Ltmp280-.Ltmp279              #   Call between .Ltmp279 and .Ltmp280
	.uleb128 .Ltmp281-.Lfunc_begin8         #     jumps to .Ltmp281
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp280-.Lfunc_begin8         # >> Call Site 46 <<
	.uleb128 .Ltmp284-.Ltmp280              #   Call between .Ltmp280 and .Ltmp284
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp284-.Lfunc_begin8         # >> Call Site 47 <<
	.uleb128 .Ltmp285-.Ltmp284              #   Call between .Ltmp284 and .Ltmp285
	.uleb128 .Ltmp286-.Lfunc_begin8         #     jumps to .Ltmp286
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp285-.Lfunc_begin8         # >> Call Site 48 <<
	.uleb128 .Ltmp290-.Ltmp285              #   Call between .Ltmp285 and .Ltmp290
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp290-.Lfunc_begin8         # >> Call Site 49 <<
	.uleb128 .Ltmp291-.Ltmp290              #   Call between .Ltmp290 and .Ltmp291
	.uleb128 .Ltmp292-.Lfunc_begin8         #     jumps to .Ltmp292
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp291-.Lfunc_begin8         # >> Call Site 50 <<
	.uleb128 .Ltmp293-.Ltmp291              #   Call between .Ltmp291 and .Ltmp293
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp293-.Lfunc_begin8         # >> Call Site 51 <<
	.uleb128 .Ltmp294-.Ltmp293              #   Call between .Ltmp293 and .Ltmp294
	.uleb128 .Ltmp295-.Lfunc_begin8         #     jumps to .Ltmp295
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp296-.Lfunc_begin8         # >> Call Site 52 <<
	.uleb128 .Ltmp297-.Ltmp296              #   Call between .Ltmp296 and .Ltmp297
	.uleb128 .Ltmp298-.Lfunc_begin8         #     jumps to .Ltmp298
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp299-.Lfunc_begin8         # >> Call Site 53 <<
	.uleb128 .Ltmp300-.Ltmp299              #   Call between .Ltmp299 and .Ltmp300
	.uleb128 .Ltmp301-.Lfunc_begin8         #     jumps to .Ltmp301
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp300-.Lfunc_begin8         # >> Call Site 54 <<
	.uleb128 .Ltmp333-.Ltmp300              #   Call between .Ltmp300 and .Ltmp333
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp333-.Lfunc_begin8         # >> Call Site 55 <<
	.uleb128 .Ltmp334-.Ltmp333              #   Call between .Ltmp333 and .Ltmp334
	.uleb128 .Ltmp335-.Lfunc_begin8         #     jumps to .Ltmp335
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp334-.Lfunc_begin8         # >> Call Site 56 <<
	.uleb128 .Ltmp313-.Ltmp334              #   Call between .Ltmp334 and .Ltmp313
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp313-.Lfunc_begin8         # >> Call Site 57 <<
	.uleb128 .Ltmp314-.Ltmp313              #   Call between .Ltmp313 and .Ltmp314
	.uleb128 .Ltmp317-.Lfunc_begin8         #     jumps to .Ltmp317
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp282-.Lfunc_begin8         # >> Call Site 58 <<
	.uleb128 .Ltmp283-.Ltmp282              #   Call between .Ltmp282 and .Ltmp283
	.uleb128 .Ltmp286-.Lfunc_begin8         #     jumps to .Ltmp286
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp283-.Lfunc_begin8         # >> Call Site 59 <<
	.uleb128 .Ltmp365-.Ltmp283              #   Call between .Ltmp283 and .Ltmp365
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp365-.Lfunc_begin8         # >> Call Site 60 <<
	.uleb128 .Ltmp366-.Ltmp365              #   Call between .Ltmp365 and .Ltmp366
	.uleb128 .Ltmp369-.Lfunc_begin8         #     jumps to .Ltmp369
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp366-.Lfunc_begin8         # >> Call Site 61 <<
	.uleb128 .Ltmp384-.Ltmp366              #   Call between .Ltmp366 and .Ltmp384
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp384-.Lfunc_begin8         # >> Call Site 62 <<
	.uleb128 .Ltmp385-.Ltmp384              #   Call between .Ltmp384 and .Ltmp385
	.uleb128 .Ltmp386-.Lfunc_begin8         #     jumps to .Ltmp386
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp387-.Lfunc_begin8         # >> Call Site 63 <<
	.uleb128 .Ltmp388-.Ltmp387              #   Call between .Ltmp387 and .Ltmp388
	.uleb128 .Ltmp389-.Lfunc_begin8         #     jumps to .Ltmp389
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp397-.Lfunc_begin8         # >> Call Site 64 <<
	.uleb128 .Ltmp398-.Ltmp397              #   Call between .Ltmp397 and .Ltmp398
	.uleb128 .Ltmp452-.Lfunc_begin8         #     jumps to .Ltmp452
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp453-.Lfunc_begin8         # >> Call Site 65 <<
	.uleb128 .Ltmp454-.Ltmp453              #   Call between .Ltmp453 and .Ltmp454
	.uleb128 .Ltmp455-.Lfunc_begin8         #     jumps to .Ltmp455
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp399-.Lfunc_begin8         # >> Call Site 66 <<
	.uleb128 .Ltmp400-.Ltmp399              #   Call between .Ltmp399 and .Ltmp400
	.uleb128 .Ltmp401-.Lfunc_begin8         #     jumps to .Ltmp401
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp402-.Lfunc_begin8         # >> Call Site 67 <<
	.uleb128 .Ltmp405-.Ltmp402              #   Call between .Ltmp402 and .Ltmp405
	.uleb128 .Ltmp432-.Lfunc_begin8         #     jumps to .Ltmp432
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp406-.Lfunc_begin8         # >> Call Site 68 <<
	.uleb128 .Ltmp407-.Ltmp406              #   Call between .Ltmp406 and .Ltmp407
	.uleb128 .Ltmp408-.Lfunc_begin8         #     jumps to .Ltmp408
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp407-.Lfunc_begin8         # >> Call Site 69 <<
	.uleb128 .Ltmp409-.Ltmp407              #   Call between .Ltmp407 and .Ltmp409
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp409-.Lfunc_begin8         # >> Call Site 70 <<
	.uleb128 .Ltmp410-.Ltmp409              #   Call between .Ltmp409 and .Ltmp410
	.uleb128 .Ltmp411-.Lfunc_begin8         #     jumps to .Ltmp411
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp410-.Lfunc_begin8         # >> Call Site 71 <<
	.uleb128 .Ltmp412-.Ltmp410              #   Call between .Ltmp410 and .Ltmp412
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp412-.Lfunc_begin8         # >> Call Site 72 <<
	.uleb128 .Ltmp413-.Ltmp412              #   Call between .Ltmp412 and .Ltmp413
	.uleb128 .Ltmp432-.Lfunc_begin8         #     jumps to .Ltmp432
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp414-.Lfunc_begin8         # >> Call Site 73 <<
	.uleb128 .Ltmp415-.Ltmp414              #   Call between .Ltmp414 and .Ltmp415
	.uleb128 .Ltmp416-.Lfunc_begin8         #     jumps to .Ltmp416
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp415-.Lfunc_begin8         # >> Call Site 74 <<
	.uleb128 .Ltmp417-.Ltmp415              #   Call between .Ltmp415 and .Ltmp417
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp417-.Lfunc_begin8         # >> Call Site 75 <<
	.uleb128 .Ltmp418-.Ltmp417              #   Call between .Ltmp417 and .Ltmp418
	.uleb128 .Ltmp419-.Lfunc_begin8         #     jumps to .Ltmp419
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp418-.Lfunc_begin8         # >> Call Site 76 <<
	.uleb128 .Ltmp420-.Ltmp418              #   Call between .Ltmp418 and .Ltmp420
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp420-.Lfunc_begin8         # >> Call Site 77 <<
	.uleb128 .Ltmp421-.Ltmp420              #   Call between .Ltmp420 and .Ltmp421
	.uleb128 .Ltmp432-.Lfunc_begin8         #     jumps to .Ltmp432
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp422-.Lfunc_begin8         # >> Call Site 78 <<
	.uleb128 .Ltmp423-.Ltmp422              #   Call between .Ltmp422 and .Ltmp423
	.uleb128 .Ltmp424-.Lfunc_begin8         #     jumps to .Ltmp424
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp423-.Lfunc_begin8         # >> Call Site 79 <<
	.uleb128 .Ltmp425-.Ltmp423              #   Call between .Ltmp423 and .Ltmp425
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp425-.Lfunc_begin8         # >> Call Site 80 <<
	.uleb128 .Ltmp426-.Ltmp425              #   Call between .Ltmp425 and .Ltmp426
	.uleb128 .Ltmp427-.Lfunc_begin8         #     jumps to .Ltmp427
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp426-.Lfunc_begin8         # >> Call Site 81 <<
	.uleb128 .Ltmp428-.Ltmp426              #   Call between .Ltmp426 and .Ltmp428
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp428-.Lfunc_begin8         # >> Call Site 82 <<
	.uleb128 .Ltmp431-.Ltmp428              #   Call between .Ltmp428 and .Ltmp431
	.uleb128 .Ltmp432-.Lfunc_begin8         #     jumps to .Ltmp432
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp433-.Lfunc_begin8         # >> Call Site 83 <<
	.uleb128 .Ltmp436-.Ltmp433              #   Call between .Ltmp433 and .Ltmp436
	.uleb128 .Ltmp437-.Lfunc_begin8         #     jumps to .Ltmp437
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp456-.Lfunc_begin8         # >> Call Site 84 <<
	.uleb128 .Ltmp457-.Ltmp456              #   Call between .Ltmp456 and .Ltmp457
	.uleb128 .Ltmp458-.Lfunc_begin8         #     jumps to .Ltmp458
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp459-.Lfunc_begin8         # >> Call Site 85 <<
	.uleb128 .Ltmp460-.Ltmp459              #   Call between .Ltmp459 and .Ltmp460
	.uleb128 .Ltmp463-.Lfunc_begin8         #     jumps to .Ltmp463
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp460-.Lfunc_begin8         # >> Call Site 86 <<
	.uleb128 .Ltmp272-.Ltmp460              #   Call between .Ltmp460 and .Ltmp272
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp272-.Lfunc_begin8         # >> Call Site 87 <<
	.uleb128 .Ltmp273-.Ltmp272              #   Call between .Ltmp272 and .Ltmp273
	.uleb128 .Ltmp278-.Lfunc_begin8         #     jumps to .Ltmp278
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp339-.Lfunc_begin8         # >> Call Site 88 <<
	.uleb128 .Ltmp340-.Ltmp339              #   Call between .Ltmp339 and .Ltmp340
	.uleb128 .Ltmp343-.Lfunc_begin8         #     jumps to .Ltmp343
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp305-.Lfunc_begin8         # >> Call Site 89 <<
	.uleb128 .Ltmp306-.Ltmp305              #   Call between .Ltmp305 and .Ltmp306
	.uleb128 .Ltmp309-.Lfunc_begin8         #     jumps to .Ltmp309
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp392-.Lfunc_begin8         # >> Call Site 90 <<
	.uleb128 .Ltmp393-.Ltmp392              #   Call between .Ltmp392 and .Ltmp393
	.uleb128 .Ltmp396-.Lfunc_begin8         #     jumps to .Ltmp396
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp353-.Lfunc_begin8         # >> Call Site 91 <<
	.uleb128 .Ltmp354-.Ltmp353              #   Call between .Ltmp353 and .Ltmp354
	.uleb128 .Ltmp357-.Lfunc_begin8         #     jumps to .Ltmp357
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp370-.Lfunc_begin8         # >> Call Site 92 <<
	.uleb128 .Ltmp371-.Ltmp370              #   Call between .Ltmp370 and .Ltmp371
	.uleb128 .Ltmp374-.Lfunc_begin8         #     jumps to .Ltmp374
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp207-.Lfunc_begin8         # >> Call Site 93 <<
	.uleb128 .Ltmp208-.Ltmp207              #   Call between .Ltmp207 and .Ltmp208
	.uleb128 .Ltmp213-.Lfunc_begin8         #     jumps to .Ltmp213
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp247-.Lfunc_begin8         # >> Call Site 94 <<
	.uleb128 .Ltmp248-.Ltmp247              #   Call between .Ltmp247 and .Ltmp248
	.uleb128 .Ltmp357-.Lfunc_begin8         #     jumps to .Ltmp357
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp447-.Lfunc_begin8         # >> Call Site 95 <<
	.uleb128 .Ltmp448-.Ltmp447              #   Call between .Ltmp447 and .Ltmp448
	.uleb128 .Ltmp449-.Lfunc_begin8         #     jumps to .Ltmp449
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp361-.Lfunc_begin8         # >> Call Site 96 <<
	.uleb128 .Ltmp362-.Ltmp361              #   Call between .Ltmp361 and .Ltmp362
	.uleb128 .Ltmp374-.Lfunc_begin8         #     jumps to .Ltmp374
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp444-.Lfunc_begin8         # >> Call Site 97 <<
	.uleb128 .Ltmp445-.Ltmp444              #   Call between .Ltmp444 and .Ltmp445
	.uleb128 .Ltmp446-.Lfunc_begin8         #     jumps to .Ltmp446
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp441-.Lfunc_begin8         # >> Call Site 98 <<
	.uleb128 .Ltmp442-.Ltmp441              #   Call between .Ltmp441 and .Ltmp442
	.uleb128 .Ltmp443-.Lfunc_begin8         #     jumps to .Ltmp443
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp438-.Lfunc_begin8         # >> Call Site 99 <<
	.uleb128 .Ltmp439-.Ltmp438              #   Call between .Ltmp438 and .Ltmp439
	.uleb128 .Ltmp440-.Lfunc_begin8         #     jumps to .Ltmp440
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp276-.Lfunc_begin8         # >> Call Site 100 <<
	.uleb128 .Ltmp277-.Ltmp276              #   Call between .Ltmp276 and .Ltmp277
	.uleb128 .Ltmp278-.Lfunc_begin8         #     jumps to .Ltmp278
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp269-.Lfunc_begin8         # >> Call Site 101 <<
	.uleb128 .Ltmp270-.Ltmp269              #   Call between .Ltmp269 and .Ltmp270
	.uleb128 .Ltmp271-.Lfunc_begin8         #     jumps to .Ltmp271
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp336-.Lfunc_begin8         # >> Call Site 102 <<
	.uleb128 .Ltmp337-.Ltmp336              #   Call between .Ltmp336 and .Ltmp337
	.uleb128 .Ltmp338-.Lfunc_begin8         #     jumps to .Ltmp338
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp318-.Lfunc_begin8         # >> Call Site 103 <<
	.uleb128 .Ltmp319-.Ltmp318              #   Call between .Ltmp318 and .Ltmp319
	.uleb128 .Ltmp320-.Lfunc_begin8         #     jumps to .Ltmp320
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp302-.Lfunc_begin8         # >> Call Site 104 <<
	.uleb128 .Ltmp303-.Ltmp302              #   Call between .Ltmp302 and .Ltmp303
	.uleb128 .Ltmp304-.Lfunc_begin8         #     jumps to .Ltmp304
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp274-.Lfunc_begin8         # >> Call Site 105 <<
	.uleb128 .Ltmp275-.Ltmp274              #   Call between .Ltmp274 and .Ltmp275
	.uleb128 .Ltmp278-.Lfunc_begin8         #     jumps to .Ltmp278
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp341-.Lfunc_begin8         # >> Call Site 106 <<
	.uleb128 .Ltmp342-.Ltmp341              #   Call between .Ltmp341 and .Ltmp342
	.uleb128 .Ltmp343-.Lfunc_begin8         #     jumps to .Ltmp343
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp287-.Lfunc_begin8         # >> Call Site 107 <<
	.uleb128 .Ltmp288-.Ltmp287              #   Call between .Ltmp287 and .Ltmp288
	.uleb128 .Ltmp289-.Lfunc_begin8         #     jumps to .Ltmp289
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp450-.Lfunc_begin8         # >> Call Site 108 <<
	.uleb128 .Ltmp451-.Ltmp450              #   Call between .Ltmp450 and .Ltmp451
	.uleb128 .Ltmp452-.Lfunc_begin8         #     jumps to .Ltmp452
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp461-.Lfunc_begin8         # >> Call Site 109 <<
	.uleb128 .Ltmp462-.Ltmp461              #   Call between .Ltmp461 and .Ltmp462
	.uleb128 .Ltmp463-.Lfunc_begin8         #     jumps to .Ltmp463
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp307-.Lfunc_begin8         # >> Call Site 110 <<
	.uleb128 .Ltmp308-.Ltmp307              #   Call between .Ltmp307 and .Ltmp308
	.uleb128 .Ltmp309-.Lfunc_begin8         #     jumps to .Ltmp309
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp350-.Lfunc_begin8         # >> Call Site 111 <<
	.uleb128 .Ltmp351-.Ltmp350              #   Call between .Ltmp350 and .Ltmp351
	.uleb128 .Ltmp352-.Lfunc_begin8         #     jumps to .Ltmp352
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp347-.Lfunc_begin8         # >> Call Site 112 <<
	.uleb128 .Ltmp348-.Ltmp347              #   Call between .Ltmp347 and .Ltmp348
	.uleb128 .Ltmp349-.Lfunc_begin8         #     jumps to .Ltmp349
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp355-.Lfunc_begin8         # >> Call Site 113 <<
	.uleb128 .Ltmp356-.Ltmp355              #   Call between .Ltmp355 and .Ltmp356
	.uleb128 .Ltmp357-.Lfunc_begin8         #     jumps to .Ltmp357
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp211-.Lfunc_begin8         # >> Call Site 114 <<
	.uleb128 .Ltmp212-.Ltmp211              #   Call between .Ltmp211 and .Ltmp212
	.uleb128 .Ltmp213-.Lfunc_begin8         #     jumps to .Ltmp213
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp367-.Lfunc_begin8         # >> Call Site 115 <<
	.uleb128 .Ltmp368-.Ltmp367              #   Call between .Ltmp367 and .Ltmp368
	.uleb128 .Ltmp369-.Lfunc_begin8         #     jumps to .Ltmp369
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp372-.Lfunc_begin8         # >> Call Site 116 <<
	.uleb128 .Ltmp373-.Ltmp372              #   Call between .Ltmp372 and .Ltmp373
	.uleb128 .Ltmp374-.Lfunc_begin8         #     jumps to .Ltmp374
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp209-.Lfunc_begin8         # >> Call Site 117 <<
	.uleb128 .Ltmp210-.Ltmp209              #   Call between .Ltmp209 and .Ltmp210
	.uleb128 .Ltmp213-.Lfunc_begin8         #     jumps to .Ltmp213
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp226-.Lfunc_begin8         # >> Call Site 118 <<
	.uleb128 .Ltmp227-.Ltmp226              #   Call between .Ltmp226 and .Ltmp227
	.uleb128 .Ltmp228-.Lfunc_begin8         #     jumps to .Ltmp228
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp344-.Lfunc_begin8         # >> Call Site 119 <<
	.uleb128 .Ltmp345-.Ltmp344              #   Call between .Ltmp344 and .Ltmp345
	.uleb128 .Ltmp346-.Lfunc_begin8         #     jumps to .Ltmp346
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp378-.Lfunc_begin8         # >> Call Site 120 <<
	.uleb128 .Ltmp379-.Ltmp378              #   Call between .Ltmp378 and .Ltmp379
	.uleb128 .Ltmp380-.Lfunc_begin8         #     jumps to .Ltmp380
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp381-.Lfunc_begin8         # >> Call Site 121 <<
	.uleb128 .Ltmp382-.Ltmp381              #   Call between .Ltmp381 and .Ltmp382
	.uleb128 .Ltmp383-.Lfunc_begin8         #     jumps to .Ltmp383
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp382-.Lfunc_begin8         # >> Call Site 122 <<
	.uleb128 .Lfunc_end15-.Ltmp382          #   Call between .Ltmp382 and .Lfunc_end15
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end8:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase5:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev
	.cfi_startproc
# %bb.0:
	movq	%rdi, %rax
	movq	(%rdi), %rdi
	addq	$16, %rax
	cmpq	%rax, %rdi
	je	.LBB16_1
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	(%rax), %rsi
	incq	%rsi
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB16_1:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv.exit
	retq
.Lfunc_end16:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev, .Lfunc_end16-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	8(%rdi), %rax
	movq	%rdx, %rdi
	subq	%rax, %rdi
	movabsq	$9223372036854775807, %r9       # imm = 0x7FFFFFFFFFFFFFFF
	addq	%rdi, %r9
	cmpq	%r8, %r9
	jb	.LBB17_17
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit
	movq	%r8, %r15
	subq	%rdx, %r15
	addq	%rax, %r15
	movq	(%rbx), %rdi
	leaq	16(%rbx), %r10
	movl	$15, %r9d
	cmpq	%r10, %rdi
	je	.LBB17_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit
	movq	16(%rbx), %r9
.LBB17_3:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit
	cmpq	%r9, %r15
	jbe	.LBB17_4
# %bb.15:
	movq	%rbx, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
	jmp	.LBB17_16
.LBB17_4:
	leaq	(%rdi,%rsi), %r14
	addq	%rdx, %rsi
	movq	%rax, %r9
	subq	%rsi, %r9
	cmpq	%rcx, %rdi
	seta	%r10b
	addq	%rax, %rdi
	cmpq	%rcx, %rdi
	setb	%dil
	orb	%r10b, %dil
	cmpb	$1, %dil
	jne	.LBB17_14
# %bb.5:
	cmpq	%rsi, %rax
	sete	%al
	cmpq	%rdx, %r8
	sete	%sil
	orb	%al, %sil
	jne	.LBB17_10
# %bb.6:
	testq	%r9, %r9
	je	.LBB17_10
# %bb.7:
	leaq	(%r14,%r8), %rdi
	addq	%r14, %rdx
	cmpq	$1, %r9
	jne	.LBB17_9
# %bb.8:
	movzbl	(%rdx), %eax
	movb	%al, (%rdi)
.LBB17_10:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm.exit
	testq	%r8, %r8
	je	.LBB17_16
.LBB17_11:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm.exit
	cmpq	$1, %r8
	jne	.LBB17_13
# %bb.12:
	movzbl	(%rcx), %eax
	movb	%al, (%r14)
	jmp	.LBB17_16
.LBB17_13:
	movq	%r14, %rdi
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB17_16:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit
	movq	%r15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r15)
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB17_9:
	.cfi_def_cfa_offset 48
	movq	%rdx, %rsi
	movq	%r9, %rdx
	movq	%r8, %r12
	movq	%rcx, %r13
	callq	memmove@PLT
	movq	%r13, %rcx
	movq	%r12, %r8
	testq	%r8, %r8
	jne	.LBB17_11
	jmp	.LBB17_16
.LBB17_14:
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm@PLT
	jmp	.LBB17_16
.LBB17_17:
	leaq	.L.str.8(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end17:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm, .Lfunc_end17-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm
	.cfi_startproc
# %bb.0:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, 16(%rsp)                  # 8-byte Spill
	movq	(%rdi), %r15
	movq	8(%rdi), %r13
	movq	%r8, %rbp
	movq	%rdx, 32(%rsp)                  # 8-byte Spill
	subq	%rdx, %rbp
	leaq	16(%rdi), %rdx
	cmpq	%rdx, %r15
	movq	16(%rdi), %rcx
	movl	$15, %eax
	cmovneq	%rcx, %rax
	addq	%r13, %rbp
	js	.LBB18_21
# %bb.1:
	movq	%r8, %r14
	movq	%rsi, %r12
	movq	%rdi, %rbx
	cmpq	%rax, %rbp
	movq	%rcx, 40(%rsp)                  # 8-byte Spill
	movq	%rdx, 48(%rsp)                  # 8-byte Spill
	jbe	.LBB18_4
# %bb.2:
	addq	%rax, %rax
	cmpq	%rax, %rbp
	jae	.LBB18_4
# %bb.3:
	movabsq	$9223372036854775807, %rbp      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rbp, %rax
	cmovbq	%rax, %rbp
.LBB18_4:
	movq	%rbp, %rdi
	incq	%rdi
	js	.LBB18_22
# %bb.5:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit
	callq	_Znwm@PLT
	movq	%rax, %rdx
	testq	%r12, %r12
	movq	%rax, 8(%rsp)                   # 8-byte Spill
	je	.LBB18_9
# %bb.6:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit
	cmpq	$1, %r12
	jne	.LBB18_8
# %bb.7:
	movzbl	(%r15), %eax
	movb	%al, (%rdx)
	jmp	.LBB18_9
.LBB18_8:
	movq	%rdx, %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
	movq	8(%rsp), %rdx                   # 8-byte Reload
.LBB18_9:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit
	movq	%r15, 24(%rsp)                  # 8-byte Spill
	movq	32(%rsp), %rax                  # 8-byte Reload
	leaq	(%rax,%r12), %r15
	cmpq	$0, 16(%rsp)                    # 8-byte Folded Reload
	sete	%al
	testq	%r14, %r14
	sete	%cl
	orb	%al, %cl
	jne	.LBB18_13
# %bb.10:
	leaq	(%rdx,%r12), %rdi
	cmpq	$1, %r14
	jne	.LBB18_12
# %bb.11:
	movq	16(%rsp), %rax                  # 8-byte Reload
	movzbl	(%rax), %eax
	movb	%al, (%rdi)
.LBB18_13:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit26
	cmpq	%r15, %r13
	je	.LBB18_18
.LBB18_14:
	subq	%r15, %r13
	je	.LBB18_18
# %bb.15:
	movq	%rdx, %rdi
	addq	%r12, %rdi
	addq	%r14, %rdi
	addq	24(%rsp), %r12                  # 8-byte Folded Reload
	addq	32(%rsp), %r12                  # 8-byte Folded Reload
	cmpq	$1, %r13
	jne	.LBB18_17
# %bb.16:
	movzbl	(%r12), %eax
	movb	%al, (%rdi)
	movq	24(%rsp), %rdi                  # 8-byte Reload
	cmpq	48(%rsp), %rdi                  # 8-byte Folded Reload
	jne	.LBB18_19
	jmp	.LBB18_20
.LBB18_12:
	movq	16(%rsp), %rsi                  # 8-byte Reload
	movq	%r14, %rdx
	callq	memcpy@PLT
	movq	8(%rsp), %rdx                   # 8-byte Reload
	cmpq	%r15, %r13
	jne	.LBB18_14
.LBB18_18:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit27
	movq	24(%rsp), %rdi                  # 8-byte Reload
	cmpq	48(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB18_20
.LBB18_19:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	40(%rsp), %rsi                  # 8-byte Reload
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	8(%rsp), %rdx                   # 8-byte Reload
.LBB18_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv.exit
	movq	%rdx, (%rbx)
	movq	%rbp, 16(%rbx)
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB18_17:
	.cfi_def_cfa_offset 112
	movq	%r12, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
	movq	8(%rsp), %rdx                   # 8-byte Reload
	movq	24(%rsp), %rdi                  # 8-byte Reload
	cmpq	48(%rsp), %rdi                  # 8-byte Folded Reload
	jne	.LBB18_19
	jmp	.LBB18_20
.LBB18_22:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB18_21:
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end18:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm, .Lfunc_end18-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail12error_stringB5cxx11Ev,"axG",@progbits,_ZN8pybind116detail12error_stringB5cxx11Ev,comdat
	.hidden	_ZN8pybind116detail12error_stringB5cxx11Ev # -- Begin function _ZN8pybind116detail12error_stringB5cxx11Ev
	.weak	_ZN8pybind116detail12error_stringB5cxx11Ev
	.p2align	4, 0x90
	.type	_ZN8pybind116detail12error_stringB5cxx11Ev,@function
_ZN8pybind116detail12error_stringB5cxx11Ev: # @_ZN8pybind116detail12error_stringB5cxx11Ev
.Lfunc_begin9:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception9
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$72, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	.L.str.29(%rip), %rsi
	leaq	8(%rsp), %r14
	movq	%r14, %rdi
	callq	_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc
.Ltmp464:
	movq	%r14, %rdi
	callq	_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev
.Ltmp465:
# %bb.1:
	leaq	16(%rbx), %r12
	movq	%r12, (%rbx)
	movq	(%rax), %r15
	movq	8(%rax), %r14
	cmpq	$16, %r14
	jb	.LBB19_10
# %bb.2:
	testq	%r14, %r14
	js	.LBB19_3
# %bb.5:
	movq	%r14, %rdi
	incq	%rdi
	js	.LBB19_6
# %bb.8:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
.Ltmp466:
	callq	_Znwm@PLT
.Ltmp467:
# %bb.9:                                # %.noexc2
	movq	%rax, %r12
	movq	%rax, (%rbx)
	movq	%r14, 16(%rbx)
.LBB19_10:                              # %._crit_edge.i.i
	testq	%r14, %r14
	je	.LBB19_14
# %bb.11:                               # %._crit_edge.i.i
	cmpq	$1, %r14
	jne	.LBB19_13
# %bb.12:
	movzbl	(%r15), %eax
	movb	%al, (%r12)
	jmp	.LBB19_14
.LBB19_13:
	movq	%r12, %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
.LBB19_14:
	movq	%r14, 8(%rbx)
	movb	$0, (%r12,%r14)
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB19_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	movq	48(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB19_16:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	leaq	24(%rsp), %rdi
.Ltmp468:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp469:
# %bb.17:                               # %_ZN8pybind116objectD2Ev.exit.i
	leaq	16(%rsp), %rdi
.Ltmp471:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp472:
# %bb.18:                               # %_ZN8pybind116objectD2Ev.exit1.i
.Ltmp474:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp475:
# %bb.19:                               # %_ZN8pybind116detail25error_fetch_and_normalizeD2Ev.exit
	movq	%rbx, %rax
	addq	$72, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB19_6:                               # %.noexc6.i
	.cfi_def_cfa_offset 112
.Ltmp477:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp478:
# %bb.7:                                # %.noexc1
.LBB19_3:                               # %.noexc.i
.Ltmp479:
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp480:
# %bb.4:                                # %.noexc
.LBB19_23:
.Ltmp476:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB19_22:
.Ltmp473:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB19_21:
.Ltmp470:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB19_20:
.Ltmp481:
	movq	%rax, %rbx
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind116detail25error_fetch_and_normalizeD2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end19:
	.size	_ZN8pybind116detail12error_stringB5cxx11Ev, .Lfunc_end19-_ZN8pybind116detail12error_stringB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail12error_stringB5cxx11Ev,"aG",@progbits,_ZN8pybind116detail12error_stringB5cxx11Ev,comdat
	.p2align	2, 0x0
GCC_except_table19:
.Lexception9:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase6-.Lttbaseref6
.Lttbaseref6:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end9-.Lcst_begin9
.Lcst_begin9:
	.uleb128 .Lfunc_begin9-.Lfunc_begin9    # >> Call Site 1 <<
	.uleb128 .Ltmp464-.Lfunc_begin9         #   Call between .Lfunc_begin9 and .Ltmp464
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp464-.Lfunc_begin9         # >> Call Site 2 <<
	.uleb128 .Ltmp467-.Ltmp464              #   Call between .Ltmp464 and .Ltmp467
	.uleb128 .Ltmp481-.Lfunc_begin9         #     jumps to .Ltmp481
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp467-.Lfunc_begin9         # >> Call Site 3 <<
	.uleb128 .Ltmp468-.Ltmp467              #   Call between .Ltmp467 and .Ltmp468
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp468-.Lfunc_begin9         # >> Call Site 4 <<
	.uleb128 .Ltmp469-.Ltmp468              #   Call between .Ltmp468 and .Ltmp469
	.uleb128 .Ltmp470-.Lfunc_begin9         #     jumps to .Ltmp470
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp471-.Lfunc_begin9         # >> Call Site 5 <<
	.uleb128 .Ltmp472-.Ltmp471              #   Call between .Ltmp471 and .Ltmp472
	.uleb128 .Ltmp473-.Lfunc_begin9         #     jumps to .Ltmp473
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp474-.Lfunc_begin9         # >> Call Site 6 <<
	.uleb128 .Ltmp475-.Ltmp474              #   Call between .Ltmp474 and .Ltmp475
	.uleb128 .Ltmp476-.Lfunc_begin9         #     jumps to .Ltmp476
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp477-.Lfunc_begin9         # >> Call Site 7 <<
	.uleb128 .Ltmp480-.Ltmp477              #   Call between .Ltmp477 and .Ltmp480
	.uleb128 .Ltmp481-.Lfunc_begin9         #     jumps to .Ltmp481
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp480-.Lfunc_begin9         # >> Call Site 8 <<
	.uleb128 .Lfunc_end19-.Ltmp480          #   Call between .Ltmp480 and .Lfunc_end19
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end9:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase6:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r12
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	%rdx, %rdi
	callq	strlen@PLT
	movq	8(%r14), %rsi
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	xorq	%rsi, %rcx
	cmpq	%rax, %rcx
	jb	.LBB20_13
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	leaq	(%rsi,%rax), %r13
	movq	(%r14), %rdi
	leaq	16(%r14), %r15
	movl	$15, %ecx
	cmpq	%r15, %rdi
	je	.LBB20_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	movq	16(%r14), %rcx
.LBB20_3:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	cmpq	%rcx, %r13
	jbe	.LBB20_4
# %bb.8:
	movq	%r14, %rdi
	xorl	%edx, %edx
	movq	%r12, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
	jmp	.LBB20_9
.LBB20_4:
	testq	%rax, %rax
	je	.LBB20_9
# %bb.5:
	addq	%rsi, %rdi
	cmpq	$1, %rax
	jne	.LBB20_7
# %bb.6:
	movzbl	(%r12), %eax
	movb	%al, (%rdi)
	jmp	.LBB20_9
.LBB20_7:
	movq	%r12, %rsi
	movq	%rax, %rdx
	callq	memcpy@PLT
.LBB20_9:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit
	movq	%r13, 8(%r14)
	movq	(%r14), %rax
	movb	$0, (%rax,%r13)
	leaq	16(%rbx), %rdi
	movq	%rdi, (%rbx)
	movq	(%r14), %rax
	cmpq	%r15, %rax
	je	.LBB20_10
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	%rax, (%rbx)
	movq	16(%r14), %rax
	movq	%rax, 16(%rbx)
	movq	8(%r14), %r12
	jmp	.LBB20_12
.LBB20_10:
	movq	8(%r14), %r12
	leaq	1(%r12), %rdx
	movq	%r15, %rsi
	callq	memcpy@PLT
.LBB20_12:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	%r12, 8(%rbx)
	movq	%r15, (%r14)
	movq	$0, 8(%r14)
	movb	$0, 16(%r14)
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB20_13:
	.cfi_def_cfa_offset 48
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end20:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_, .Lfunc_end20-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_
	.cfi_startproc
# %bb.0:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r15
	movq	%rdi, %rbx
	movq	(%rsi), %rcx
	movq	8(%rsi), %rax
	movq	8(%rdx), %r8
	leaq	(%r8,%rax), %r12
	leaq	16(%rsi), %r14
	movl	$15, %esi
	cmpq	%r14, %rcx
	je	.LBB21_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit
	movq	16(%r15), %rsi
.LBB21_2:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit
	movq	(%rdx), %r9
	cmpq	%rsi, %r12
	jbe	.LBB21_10
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit12
	leaq	16(%rdx), %r10
	movl	$15, %edi
	cmpq	%r10, %r9
	je	.LBB21_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit12
	movq	16(%rdx), %rdi
.LBB21_5:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit12
	cmpq	%rdi, %r12
	jbe	.LBB21_6
.LBB21_10:
	movabsq	$9223372036854775807, %rdx      # imm = 0x7FFFFFFFFFFFFFFF
	xorq	%rax, %rdx
	cmpq	%r8, %rdx
	jb	.LBB21_22
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	cmpq	%rsi, %r12
	jbe	.LBB21_12
# %bb.16:
	movq	%r15, %rdi
	movq	%rax, %rsi
	xorl	%edx, %edx
	movq	%r9, %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
	jmp	.LBB21_17
.LBB21_12:
	testq	%r8, %r8
	je	.LBB21_17
# %bb.13:
	addq	%rax, %rcx
	cmpq	$1, %r8
	jne	.LBB21_15
# %bb.14:
	movzbl	(%r9), %eax
	movb	%al, (%rcx)
	jmp	.LBB21_17
.LBB21_6:                               # %.critedge
	movq	%rdx, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
	movq	%rax, %r15
	leaq	16(%rbx), %rdi
	movq	%rdi, (%rbx)
	movq	(%rax), %rax
	leaq	16(%r15), %r14
	cmpq	%r14, %rax
	je	.LBB21_7
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	%rax, (%rbx)
	movq	(%r14), %rax
	movq	%rax, 16(%rbx)
	jmp	.LBB21_9
.LBB21_15:
	movq	%rcx, %rdi
	movq	%r9, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB21_17:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_.exit
	leaq	8(%r15), %r13
	movq	%r12, 8(%r15)
	movq	(%r15), %rax
	movb	$0, (%rax,%r12)
	leaq	16(%rbx), %rdi
	movq	%rdi, (%rbx)
	movq	(%r15), %rax
	cmpq	%r14, %rax
	je	.LBB21_18
# %bb.19:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i13
	movq	%rax, (%rbx)
	movq	(%r14), %rax
	movq	%rax, 16(%rbx)
	movq	(%r13), %r12
	jmp	.LBB21_20
.LBB21_18:
	movq	(%r13), %r12
	leaq	1(%r12), %rdx
	movq	%r14, %rsi
	callq	memcpy@PLT
.LBB21_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit14
	movq	%r12, 8(%rbx)
	jmp	.LBB21_21
.LBB21_7:
	movq	8(%r15), %rdx
	incq	%rdx
	movq	%r14, %rsi
	callq	memcpy@PLT
.LBB21_9:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	%r15, %r13
	addq	$8, %r13
	movq	8(%r15), %rax
	movq	%rax, 8(%rbx)
.LBB21_21:
	movq	%r14, (%r15)
	movq	$0, (%r13)
	movb	$0, (%r14)
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB21_22:
	.cfi_def_cfa_offset 48
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end21:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_, .Lfunc_end21-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	strlen@PLT
	movq	8(%rbx), %rsi
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	xorq	%rsi, %rcx
	cmpq	%rax, %rcx
	jb	.LBB22_10
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	leaq	(%rsi,%rax), %r15
	movq	(%rbx), %rdi
	leaq	16(%rbx), %rdx
	movl	$15, %ecx
	cmpq	%rdx, %rdi
	je	.LBB22_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	movq	16(%rbx), %rcx
.LBB22_3:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	cmpq	%rcx, %r15
	jbe	.LBB22_4
# %bb.8:
	movq	%rbx, %rdi
	xorl	%edx, %edx
	movq	%r14, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
	jmp	.LBB22_9
.LBB22_4:
	testq	%rax, %rax
	je	.LBB22_9
# %bb.5:
	addq	%rsi, %rdi
	cmpq	$1, %rax
	jne	.LBB22_7
# %bb.6:
	movzbl	(%r14), %eax
	movb	%al, (%rdi)
	jmp	.LBB22_9
.LBB22_7:
	movq	%r14, %rsi
	movq	%rax, %rdx
	callq	memcpy@PLT
.LBB22_9:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit
	movq	%r15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r15)
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB22_10:
	.cfi_def_cfa_offset 32
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end22:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc, .Lfunc_end22-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %rbx
	movq	%rsi, %r14
	movq	%rdi, %r15
	movq	%rsi, %rdi
	callq	strlen@PLT
	movq	(%rbx), %rcx
	movq	8(%rbx), %r8
	leaq	15(%rsp), %r9
	movq	%r15, %rdi
	movq	%r14, %rsi
	movq	%rax, %rdx
	callq	_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE@PLT
	movq	%r15, %rax
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end23:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_, .Lfunc_end23-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail25error_fetch_and_normalizeC2EPKc,"axG",@progbits,_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc,comdat
	.hidden	_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc # -- Begin function _ZN8pybind116detail25error_fetch_and_normalizeC2EPKc
	.weak	_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc
	.p2align	4, 0x90
	.type	_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc,@function
_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc: # @_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc
.Lfunc_begin10:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception10
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$120, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r13
	movq	%rdi, %rbx
	leaq	8(%rdi), %r14
	leaq	16(%rdi), %rdx
	leaq	24(%rdi), %r12
	leaq	40(%rdi), %r15
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rdi)
	movq	$0, 16(%rdi)
	movq	%r15, 24(%rdi)
	movq	$0, 32(%rdi)
	movb	$0, 40(%rdi)
	movw	$0, 56(%rdi)
.Ltmp482:
	movq	%r14, %rsi
	movq	%rdx, 112(%rsp)                 # 8-byte Spill
	callq	PyErr_Fetch@PLT
.Ltmp483:
# %bb.1:
	movq	(%rbx), %rax
	testq	%rax, %rax
	je	.LBB24_14
# %bb.2:
	movq	8(%rax), %rcx
	testb	$-128, 171(%rcx)
	cmoveq	%rcx, %rax
	movq	24(%rax), %rbp
	testq	%rbp, %rbp
	je	.LBB24_19
# %bb.3:
	movq	32(%rbx), %r13
	movq	%rbp, %rdi
	callq	strlen@PLT
.Ltmp485:
	movq	%r12, %rdi
	xorl	%esi, %esi
	movq	%r13, %rdx
	movq	%rbp, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.Ltmp486:
# %bb.4:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit
	movq	(%r14), %rdi
.Ltmp487:
	leaq	.L.str.14(%rip), %rsi
	callq	PyObject_HasAttrString@PLT
.Ltmp488:
# %bb.5:
	testl	%eax, %eax
	je	.LBB24_13
# %bb.6:
	movq	32(%rbx), %rsi
	movq	%rsi, %rax
	shrq	$4, %rax
	movabsq	$576460752303423487, %rcx       # imm = 0x7FFFFFFFFFFFFFF
	cmpq	%rcx, %rax
	je	.LBB24_24
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	leaq	16(%rsi), %r13
	movq	(%r12), %rax
	movl	$15, %ecx
	cmpq	%r15, %rax
	je	.LBB24_9
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	(%r15), %rcx
.LBB24_9:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	cmpq	%rcx, %r13
	jbe	.LBB24_11
# %bb.10:
.Ltmp489:
	leaq	.L.str.33(%rip), %rcx
	movl	$16, %r8d
	movq	%r12, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp490:
	jmp	.LBB24_12
.LBB24_11:
	movups	.L.str.33(%rip), %xmm0
	movups	%xmm0, (%rax,%rsi)
.LBB24_12:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit
	movq	%r13, 32(%rbx)
	movq	24(%rbx), %rax
	movb	$0, (%rax,%r13)
.LBB24_13:
	addq	$120, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB24_14:
	.cfi_def_cfa_offset 176
.Ltmp506:
	leaq	16(%rsp), %rdi
	leaq	15(%rsp), %rdx
	movq	%r13, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_@PLT
.Ltmp507:
# %bb.15:
.Ltmp509:
	leaq	.L.str.30(%rip), %rsi
	leaq	48(%rsp), %rdi
	leaq	16(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp510:
# %bb.16:
.Ltmp512:
	leaq	.L.str.31(%rip), %rdx
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp513:
# %bb.17:
.Ltmp515:
	leaq	80(%rsp), %rdi
	callq	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp516:
# %bb.18:
.LBB24_19:
.Ltmp494:
	leaq	16(%rsp), %rdi
	leaq	15(%rsp), %rdx
	movq	%r13, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_@PLT
.Ltmp495:
# %bb.20:
.Ltmp497:
	leaq	.L.str.30(%rip), %rsi
	leaq	48(%rsp), %rdi
	leaq	16(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp498:
# %bb.21:
.Ltmp500:
	leaq	.L.str.32(%rip), %rdx
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp501:
# %bb.22:
.Ltmp503:
	leaq	80(%rsp), %rdi
	callq	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp504:
# %bb.23:
.LBB24_24:
.Ltmp491:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp492:
# %bb.25:                               # %.noexc
.LBB24_26:
.Ltmp505:
	jmp	.LBB24_29
.LBB24_27:
.Ltmp502:
	jmp	.LBB24_40
.LBB24_28:
.Ltmp517:
.LBB24_29:
	movq	%rax, %r13
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB24_38
# %bb.30:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB24_41
.LBB24_31:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit26
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB24_45
.LBB24_32:
	movq	(%r12), %rdi
	cmpq	%r15, %rdi
	je	.LBB24_34
.LBB24_33:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i40
	movq	(%r15), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB24_34:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit42
.Ltmp518:
	movq	112(%rsp), %rdi                 # 8-byte Reload
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp519:
# %bb.35:                               # %_ZN8pybind116objectD2Ev.exit
.Ltmp521:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp522:
# %bb.36:                               # %_ZN8pybind116objectD2Ev.exit43
.Ltmp524:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp525:
# %bb.37:                               # %_ZN8pybind116objectD2Ev.exit44
	movq	%r13, %rdi
	callq	_Unwind_Resume@PLT
.LBB24_38:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB24_31
	jmp	.LBB24_41
.LBB24_39:
.Ltmp514:
.LBB24_40:
	movq	%rax, %r13
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB24_31
.LBB24_41:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i24
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB24_32
	jmp	.LBB24_45
.LBB24_42:
.Ltmp499:
	jmp	.LBB24_44
.LBB24_43:
.Ltmp511:
.LBB24_44:
	movq	%rax, %r13
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB24_32
.LBB24_45:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i27
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	(%r12), %rdi
	cmpq	%r15, %rdi
	jne	.LBB24_33
	jmp	.LBB24_34
.LBB24_46:
.Ltmp496:
	jmp	.LBB24_52
.LBB24_47:
.Ltmp508:
	jmp	.LBB24_52
.LBB24_48:
.Ltmp526:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB24_49:
.Ltmp484:
	jmp	.LBB24_52
.LBB24_50:
.Ltmp523:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB24_51:
.Ltmp493:
.LBB24_52:
	movq	%rax, %r13
	movq	(%r12), %rdi
	cmpq	%r15, %rdi
	jne	.LBB24_33
	jmp	.LBB24_34
.LBB24_53:
.Ltmp520:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end24:
	.size	_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc, .Lfunc_end24-_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail25error_fetch_and_normalizeC2EPKc,"aG",@progbits,_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc,comdat
	.p2align	2, 0x0
GCC_except_table24:
.Lexception10:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase7-.Lttbaseref7
.Lttbaseref7:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end10-.Lcst_begin10
.Lcst_begin10:
	.uleb128 .Ltmp482-.Lfunc_begin10        # >> Call Site 1 <<
	.uleb128 .Ltmp483-.Ltmp482              #   Call between .Ltmp482 and .Ltmp483
	.uleb128 .Ltmp484-.Lfunc_begin10        #     jumps to .Ltmp484
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp485-.Lfunc_begin10        # >> Call Site 2 <<
	.uleb128 .Ltmp490-.Ltmp485              #   Call between .Ltmp485 and .Ltmp490
	.uleb128 .Ltmp493-.Lfunc_begin10        #     jumps to .Ltmp493
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp506-.Lfunc_begin10        # >> Call Site 3 <<
	.uleb128 .Ltmp507-.Ltmp506              #   Call between .Ltmp506 and .Ltmp507
	.uleb128 .Ltmp508-.Lfunc_begin10        #     jumps to .Ltmp508
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp509-.Lfunc_begin10        # >> Call Site 4 <<
	.uleb128 .Ltmp510-.Ltmp509              #   Call between .Ltmp509 and .Ltmp510
	.uleb128 .Ltmp511-.Lfunc_begin10        #     jumps to .Ltmp511
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp512-.Lfunc_begin10        # >> Call Site 5 <<
	.uleb128 .Ltmp513-.Ltmp512              #   Call between .Ltmp512 and .Ltmp513
	.uleb128 .Ltmp514-.Lfunc_begin10        #     jumps to .Ltmp514
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp515-.Lfunc_begin10        # >> Call Site 6 <<
	.uleb128 .Ltmp516-.Ltmp515              #   Call between .Ltmp515 and .Ltmp516
	.uleb128 .Ltmp517-.Lfunc_begin10        #     jumps to .Ltmp517
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp494-.Lfunc_begin10        # >> Call Site 7 <<
	.uleb128 .Ltmp495-.Ltmp494              #   Call between .Ltmp494 and .Ltmp495
	.uleb128 .Ltmp496-.Lfunc_begin10        #     jumps to .Ltmp496
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp497-.Lfunc_begin10        # >> Call Site 8 <<
	.uleb128 .Ltmp498-.Ltmp497              #   Call between .Ltmp497 and .Ltmp498
	.uleb128 .Ltmp499-.Lfunc_begin10        #     jumps to .Ltmp499
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp500-.Lfunc_begin10        # >> Call Site 9 <<
	.uleb128 .Ltmp501-.Ltmp500              #   Call between .Ltmp500 and .Ltmp501
	.uleb128 .Ltmp502-.Lfunc_begin10        #     jumps to .Ltmp502
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp503-.Lfunc_begin10        # >> Call Site 10 <<
	.uleb128 .Ltmp504-.Ltmp503              #   Call between .Ltmp503 and .Ltmp504
	.uleb128 .Ltmp505-.Lfunc_begin10        #     jumps to .Ltmp505
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp491-.Lfunc_begin10        # >> Call Site 11 <<
	.uleb128 .Ltmp492-.Ltmp491              #   Call between .Ltmp491 and .Ltmp492
	.uleb128 .Ltmp493-.Lfunc_begin10        #     jumps to .Ltmp493
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp518-.Lfunc_begin10        # >> Call Site 12 <<
	.uleb128 .Ltmp519-.Ltmp518              #   Call between .Ltmp518 and .Ltmp519
	.uleb128 .Ltmp520-.Lfunc_begin10        #     jumps to .Ltmp520
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp521-.Lfunc_begin10        # >> Call Site 13 <<
	.uleb128 .Ltmp522-.Ltmp521              #   Call between .Ltmp521 and .Ltmp522
	.uleb128 .Ltmp523-.Lfunc_begin10        #     jumps to .Ltmp523
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp524-.Lfunc_begin10        # >> Call Site 14 <<
	.uleb128 .Ltmp525-.Ltmp524              #   Call between .Ltmp524 and .Ltmp525
	.uleb128 .Ltmp526-.Lfunc_begin10        #     jumps to .Ltmp526
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp525-.Lfunc_begin10        # >> Call Site 15 <<
	.uleb128 .Lfunc_end24-.Ltmp525          #   Call between .Ltmp525 and .Lfunc_end24
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end10:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase7:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail25error_fetch_and_normalizeD2Ev,"axG",@progbits,_ZN8pybind116detail25error_fetch_and_normalizeD2Ev,comdat
	.hidden	_ZN8pybind116detail25error_fetch_and_normalizeD2Ev # -- Begin function _ZN8pybind116detail25error_fetch_and_normalizeD2Ev
	.weak	_ZN8pybind116detail25error_fetch_and_normalizeD2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind116detail25error_fetch_and_normalizeD2Ev,@function
_ZN8pybind116detail25error_fetch_and_normalizeD2Ev: # @_ZN8pybind116detail25error_fetch_and_normalizeD2Ev
.Lfunc_begin11:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception11
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	24(%rdi), %rdi
	leaq	40(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB25_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	(%rax), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB25_2:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	leaq	16(%rbx), %rdi
.Ltmp527:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp528:
# %bb.3:                                # %_ZN8pybind116objectD2Ev.exit
	leaq	8(%rbx), %rdi
.Ltmp530:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp531:
# %bb.4:                                # %_ZN8pybind116objectD2Ev.exit1
.Ltmp533:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp534:
# %bb.5:                                # %_ZN8pybind116objectD2Ev.exit2
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB25_8:
	.cfi_def_cfa_offset 16
.Ltmp535:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB25_7:
.Ltmp532:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB25_6:
.Ltmp529:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end25:
	.size	_ZN8pybind116detail25error_fetch_and_normalizeD2Ev, .Lfunc_end25-_ZN8pybind116detail25error_fetch_and_normalizeD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail25error_fetch_and_normalizeD2Ev,"aG",@progbits,_ZN8pybind116detail25error_fetch_and_normalizeD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table25:
.Lexception11:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase8-.Lttbaseref8
.Lttbaseref8:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end11-.Lcst_begin11
.Lcst_begin11:
	.uleb128 .Ltmp527-.Lfunc_begin11        # >> Call Site 1 <<
	.uleb128 .Ltmp528-.Ltmp527              #   Call between .Ltmp527 and .Ltmp528
	.uleb128 .Ltmp529-.Lfunc_begin11        #     jumps to .Ltmp529
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp530-.Lfunc_begin11        # >> Call Site 2 <<
	.uleb128 .Ltmp531-.Ltmp530              #   Call between .Ltmp530 and .Ltmp531
	.uleb128 .Ltmp532-.Lfunc_begin11        #     jumps to .Ltmp532
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp533-.Lfunc_begin11        # >> Call Site 3 <<
	.uleb128 .Ltmp534-.Ltmp533              #   Call between .Ltmp533 and .Ltmp534
	.uleb128 .Ltmp535-.Lfunc_begin11        #     jumps to .Ltmp535
	.byte	1                               #   On action: 1
.Lcst_end11:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase8:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	4, 0x90
	.type	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin12:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception12
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	callq	PyErr_Occurred@PLT
	testq	%rax, %rax
	jne	.LBB26_4
# %bb.1:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp536:
	movq	%rax, %rdi
	movq	%r14, %rsi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp537:
# %bb.2:
	movq	_ZTISt13runtime_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt13runtime_errorD1Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.LBB26_4:
	leaq	.L.str.4(%rip), %rdi
	leaq	.L.str.5(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%rip), %rcx
	movl	$1068, %edx                     # imm = 0x42C
	callq	__assert_fail@PLT
.LBB26_3:
.Ltmp538:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end26:
	.size	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end26-_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table26:
.Lexception12:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end12-.Lcst_begin12
.Lcst_begin12:
	.uleb128 .Lfunc_begin12-.Lfunc_begin12  # >> Call Site 1 <<
	.uleb128 .Ltmp536-.Lfunc_begin12        #   Call between .Lfunc_begin12 and .Ltmp536
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp536-.Lfunc_begin12        # >> Call Site 2 <<
	.uleb128 .Ltmp537-.Ltmp536              #   Call between .Ltmp536 and .Ltmp537
	.uleb128 .Ltmp538-.Lfunc_begin12        #     jumps to .Ltmp538
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp537-.Lfunc_begin12        # >> Call Site 3 <<
	.uleb128 .Lfunc_end26-.Ltmp537          #   Call between .Ltmp537 and .Lfunc_end26
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end12:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_ # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	leaq	16(%rdi), %r12
	movq	%r12, (%rdi)
	testq	%rsi, %rsi
	je	.LBB27_10
# %bb.1:
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	strlen@PLT
	movq	%rax, %r15
	cmpq	$16, %rax
	jb	.LBB27_5
# %bb.2:
	testq	%r15, %r15
	js	.LBB27_11
# %bb.3:
	movq	%r15, %rdi
	incq	%rdi
	js	.LBB27_12
# %bb.4:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i
	callq	_Znwm@PLT
	movq	%rax, %r12
	movq	%rax, (%rbx)
	movq	%r15, 16(%rbx)
.LBB27_5:                               # %._crit_edge.i
	testq	%r15, %r15
	je	.LBB27_9
# %bb.6:                                # %._crit_edge.i
	cmpq	$1, %r15
	jne	.LBB27_8
# %bb.7:
	movzbl	(%r14), %eax
	movb	%al, (%r12)
	jmp	.LBB27_9
.LBB27_8:
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB27_9:
	movq	%r15, 8(%rbx)
	movb	$0, (%r12,%r15)
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB27_12:                              # %.noexc11
	.cfi_def_cfa_offset 48
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB27_10:
	leaq	.L.str.34(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.LBB27_11:                              # %.noexc
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end27:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_, .Lfunc_end27-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKR8pybind116handle7dec_refEv,"axG",@progbits,_ZNKR8pybind116handle7dec_refEv,comdat
	.hidden	_ZNKR8pybind116handle7dec_refEv # -- Begin function _ZNKR8pybind116handle7dec_refEv
	.weak	_ZNKR8pybind116handle7dec_refEv
	.p2align	4, 0x90
	.type	_ZNKR8pybind116handle7dec_refEv,@function
_ZNKR8pybind116handle7dec_refEv:        # @_ZNKR8pybind116handle7dec_refEv
.Lfunc_begin13:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception13
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$40, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	cmpq	$0, (%rdi)
	je	.LBB28_9
# %bb.1:
	callq	PyGILState_Check@PLT
	testl	%eax, %eax
	jne	.LBB28_5
# %bb.2:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
	leaq	24(%rsp), %r14
	movl	$28, %edi
	callq	_Znwm@PLT
	movq	%rax, 8(%rsp)
	movq	$27, 24(%rsp)
	movups	.L.str.35(%rip), %xmm0
	movups	%xmm0, (%rax)
	movups	.L.str.35+11(%rip), %xmm0
	movups	%xmm0, 11(%rax)
	movq	$27, 16(%rsp)
	movb	$0, 27(%rax)
.Ltmp539:
	leaq	8(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp540:
# %bb.3:
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB28_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB28_5:
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB28_9
# %bb.6:
	movq	(%rdi), %rax
	testl	%eax, %eax
	js	.LBB28_9
# %bb.7:
	decq	%rax
	movq	%rax, (%rdi)
	jne	.LBB28_9
# %bb.8:
	callq	_Py_Dealloc@PLT
.LBB28_9:                               # %_ZL10Py_XDECREFP7_object.exit
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB28_10:
	.cfi_def_cfa_offset 64
.Ltmp541:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB28_12
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB28_12:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit8
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end28:
	.size	_ZNKR8pybind116handle7dec_refEv, .Lfunc_end28-_ZNKR8pybind116handle7dec_refEv
	.cfi_endproc
	.section	.gcc_except_table._ZNKR8pybind116handle7dec_refEv,"aG",@progbits,_ZNKR8pybind116handle7dec_refEv,comdat
	.p2align	2, 0x0
GCC_except_table28:
.Lexception13:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end13-.Lcst_begin13
.Lcst_begin13:
	.uleb128 .Lfunc_begin13-.Lfunc_begin13  # >> Call Site 1 <<
	.uleb128 .Ltmp539-.Lfunc_begin13        #   Call between .Lfunc_begin13 and .Ltmp539
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp539-.Lfunc_begin13        # >> Call Site 2 <<
	.uleb128 .Ltmp540-.Ltmp539              #   Call between .Ltmp539 and .Ltmp540
	.uleb128 .Ltmp541-.Lfunc_begin13        #     jumps to .Ltmp541
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp540-.Lfunc_begin13        # >> Call Site 3 <<
	.uleb128 .Lfunc_end28-.Ltmp540          #   Call between .Ltmp540 and .Lfunc_end28
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end13:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	4, 0x90
	.type	_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin14:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception14
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$40, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	stderr@GOTPCREL(%rip), %r15
	movq	(%r15), %rdi
	movq	(%rsi), %rdx
	leaq	.L.str.36(%rip), %rsi
	xorl	%eax, %eax
	callq	fprintf@PLT
	movq	(%rbx), %rax
	movq	8(%rax), %rax
	movq	24(%rax), %rcx
	testq	%rcx, %rcx
	je	.LBB29_2
# %bb.1:
	movq	(%r15), %rdi
	movq	(%r14), %rdx
	leaq	.L.str.37(%rip), %rsi
	xorl	%eax, %eax
	callq	fprintf@PLT
.LBB29_2:
	movq	(%r15), %rsi
	movl	$10, %edi
	callq	fputc@PLT
	movq	(%r15), %rdi
	callq	fflush@PLT
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
	movq	(%r14), %rsi
	movq	8(%r14), %rdx
.Ltmp542:
	leaq	.L.str.39(%rip), %rcx
	leaq	8(%rsp), %rdi
	leaq	7(%rsp), %r9
	movl	$28, %r8d
	callq	_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE@PLT
.Ltmp543:
# %bb.3:
	movb	$1, %bpl
.Ltmp545:
	leaq	8(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp546:
# %bb.4:
	xorl	%ebp, %ebp
.Ltmp547:
	movq	_ZTISt13runtime_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt13runtime_errorD1Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp548:
# %bb.11:
.LBB29_6:
.Ltmp549:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB29_7
# %bb.8:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	testb	%bpl, %bpl
	jne	.LBB29_9
.LBB29_10:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB29_7:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	testb	%bpl, %bpl
	je	.LBB29_10
.LBB29_9:
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB29_5:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.thread
.Ltmp544:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end29:
	.size	_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end29-_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table29:
.Lexception14:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end14-.Lcst_begin14
.Lcst_begin14:
	.uleb128 .Lfunc_begin14-.Lfunc_begin14  # >> Call Site 1 <<
	.uleb128 .Ltmp542-.Lfunc_begin14        #   Call between .Lfunc_begin14 and .Ltmp542
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp542-.Lfunc_begin14        # >> Call Site 2 <<
	.uleb128 .Ltmp543-.Ltmp542              #   Call between .Ltmp542 and .Ltmp543
	.uleb128 .Ltmp544-.Lfunc_begin14        #     jumps to .Ltmp544
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp545-.Lfunc_begin14        # >> Call Site 3 <<
	.uleb128 .Ltmp548-.Ltmp545              #   Call between .Ltmp545 and .Ltmp548
	.uleb128 .Ltmp549-.Lfunc_begin14        #     jumps to .Ltmp549
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp548-.Lfunc_begin14        # >> Call Site 4 <<
	.uleb128 .Lfunc_end29-.Ltmp548          #   Call between .Ltmp548 and .Lfunc_end29
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end14:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE,"axG",@progbits,_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE,comdat
	.weak	_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE # -- Begin function _ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE
	.p2align	4, 0x90
	.type	_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE,@function
_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE: # @_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE
.Lfunc_begin15:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception15
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %r14
	movq	%rcx, 8(%rsp)                   # 8-byte Spill
	movq	%rdx, %r12
	movq	%rsi, 16(%rsp)                  # 8-byte Spill
	movq	%rdi, %rbx
	leaq	16(%rdi), %rbp
	movq	%rbp, (%rdi)
	movq	$0, 8(%rdi)
	movb	$0, 16(%rdi)
	leaq	(%r8,%rdx), %rsi
.Ltmp550:
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@PLT
.Ltmp551:
# %bb.1:
	movabsq	$9223372036854775807, %r15      # imm = 0x7FFFFFFFFFFFFFFF
	movq	8(%rbx), %rsi
	movq	%r15, %rax
	subq	%rsi, %rax
	cmpq	%r12, %rax
	jb	.LBB30_11
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	leaq	(%rsi,%r12), %r13
	movq	(%rbx), %rdi
	movl	$15, %eax
	cmpq	%rbp, %rdi
	je	.LBB30_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	movq	(%rbp), %rax
.LBB30_4:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
	cmpq	%rax, %r13
	jbe	.LBB30_5
# %bb.9:
.Ltmp552:
	movq	%rbx, %rdi
	xorl	%edx, %edx
	movq	16(%rsp), %rcx                  # 8-byte Reload
	movq	%r12, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp553:
	jmp	.LBB30_10
.LBB30_5:
	testq	%r12, %r12
	je	.LBB30_10
# %bb.6:
	addq	%rsi, %rdi
	cmpq	$1, %r12
	jne	.LBB30_8
# %bb.7:
	movq	16(%rsp), %rax                  # 8-byte Reload
	movzbl	(%rax), %eax
	movb	%al, (%rdi)
	jmp	.LBB30_10
.LBB30_8:
	movq	16(%rsp), %rsi                  # 8-byte Reload
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB30_10:
	movq	%r13, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r13)
	movq	8(%rbx), %rsi
	subq	%rsi, %r15
	cmpq	%r14, %r15
	jb	.LBB30_11
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i10
	leaq	(%rsi,%r14), %r15
	movq	(%rbx), %rdi
	movl	$15, %eax
	cmpq	%rbp, %rdi
	je	.LBB30_15
# %bb.14:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i10
	movq	(%rbp), %rax
.LBB30_15:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i10
	cmpq	%rax, %r15
	jbe	.LBB30_16
# %bb.19:
.Ltmp554:
	movq	%rbx, %rdi
	xorl	%edx, %edx
	movq	8(%rsp), %rcx                   # 8-byte Reload
	movq	%r14, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp555:
	jmp	.LBB30_24
.LBB30_16:
	testq	%r14, %r14
	je	.LBB30_24
# %bb.17:
	addq	%rsi, %rdi
	cmpq	$1, %r14
	jne	.LBB30_23
# %bb.18:
	movq	8(%rsp), %rax                   # 8-byte Reload
	movzbl	(%rax), %eax
	movb	%al, (%rdi)
	jmp	.LBB30_24
.LBB30_23:
	movq	8(%rsp), %rsi                   # 8-byte Reload
	movq	%r14, %rdx
	callq	memcpy@PLT
.LBB30_24:
	movq	%r15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r15)
	movq	%rbx, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB30_11:                              # %.invoke
	.cfi_def_cfa_offset 80
.Ltmp556:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp557:
# %bb.12:                               # %.cont
.LBB30_20:
.Ltmp558:
	movq	%rax, %r14
	movq	(%rbx), %rdi
	cmpq	%rbp, %rdi
	je	.LBB30_22
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	(%rbp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB30_22:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end30:
	.size	_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE, .Lfunc_end30-_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE
	.cfi_endproc
	.section	.gcc_except_table._ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE,"aG",@progbits,_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE,comdat
	.p2align	2, 0x0
GCC_except_table30:
.Lexception15:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end15-.Lcst_begin15
.Lcst_begin15:
	.uleb128 .Ltmp550-.Lfunc_begin15        # >> Call Site 1 <<
	.uleb128 .Ltmp553-.Ltmp550              #   Call between .Ltmp550 and .Ltmp553
	.uleb128 .Ltmp558-.Lfunc_begin15        #     jumps to .Ltmp558
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp553-.Lfunc_begin15        # >> Call Site 2 <<
	.uleb128 .Ltmp554-.Ltmp553              #   Call between .Ltmp553 and .Ltmp554
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp554-.Lfunc_begin15        # >> Call Site 3 <<
	.uleb128 .Ltmp555-.Ltmp554              #   Call between .Ltmp554 and .Ltmp555
	.uleb128 .Ltmp558-.Lfunc_begin15        #     jumps to .Ltmp558
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp555-.Lfunc_begin15        # >> Call Site 4 <<
	.uleb128 .Ltmp556-.Ltmp555              #   Call between .Ltmp555 and .Ltmp556
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp556-.Lfunc_begin15        # >> Call Site 5 <<
	.uleb128 .Ltmp557-.Ltmp556              #   Call between .Ltmp556 and .Ltmp557
	.uleb128 .Ltmp558-.Lfunc_begin15        #     jumps to .Ltmp558
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp557-.Lfunc_begin15        # >> Call Site 6 <<
	.uleb128 .Lfunc_end30-.Ltmp557          #   Call between .Ltmp557 and .Lfunc_end30
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end15:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm
	.cfi_startproc
# %bb.0:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	(%rdi), %r14
	movq	16(%rdi), %r15
	leaq	16(%rdi), %r13
	cmpq	%r13, %r14
	movl	$15, %eax
	cmovneq	%r15, %rax
	cmpq	%rsi, %rax
	jae	.LBB31_10
# %bb.1:
	testq	%rsi, %rsi
	js	.LBB31_11
# %bb.2:
	movq	%rdi, %rbx
	addq	%rax, %rax
	movabsq	$9223372036854775807, %rbp      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rbp, %rax
	cmovbq	%rax, %rbp
	cmpq	%rsi, %rax
	cmovbeq	%rsi, %rbp
	movq	%rbp, %rdi
	incq	%rdi
	js	.LBB31_12
# %bb.3:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit
	callq	_Znwm@PLT
	movq	%rax, %r12
	movq	8(%rbx), %rdx
	cmpq	$-1, %rdx
	je	.LBB31_7
# %bb.4:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit
	testq	%rdx, %rdx
	jne	.LBB31_6
# %bb.5:
	movzbl	(%r14), %eax
	movb	%al, (%r12)
.LBB31_7:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit
	cmpq	%r13, %r14
	je	.LBB31_9
.LBB31_8:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	incq	%r15
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	_ZdlPvm@PLT
.LBB31_9:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv.exit
	movq	%r12, (%rbx)
	movq	%rbp, 16(%rbx)
.LBB31_10:
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB31_6:
	.cfi_def_cfa_offset 64
	incq	%rdx
	movq	%r12, %rdi
	movq	%r14, %rsi
	callq	memcpy@PLT
	cmpq	%r13, %r14
	jne	.LBB31_8
	jmp	.LBB31_9
.LBB31_12:
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB31_11:
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end31:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm, .Lfunc_end31-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE,"axG",@progbits,_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE,comdat
	.hidden	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE # -- Begin function _ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
	.weak	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE,@function
_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE: # @_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Lfunc_begin16:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception16
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$208, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	(%rsi), %rsi
	movl	$1, %edx
	callq	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb
	testb	%al, %al
	je	.LBB32_1
# %bb.36:
	movq	%rbx, %rax
	addq	$208, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB32_1:
	.cfi_def_cfa_offset 240
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
	movq	(%r14), %rax
	movq	8(%rax), %rsi
.Ltmp559:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2ENS_6handleE
.Ltmp560:
# %bb.2:
.Ltmp562:
	leaq	48(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE
.Ltmp563:
# %bb.3:                                # %_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v.exit
.Ltmp568:
	leaq	.L.str.41(%rip), %rsi
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp569:
# %bb.4:
.Ltmp571:
	leaq	.L.str.42(%rip), %rdx
	leaq	112(%rsp), %rdi
	leaq	80(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp572:
# %bb.5:
.Ltmp574:
	leaq	16(%rsp), %rdi
	callq	_ZN8pybind11L7type_idINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES6_v
.Ltmp575:
# %bb.6:
.Ltmp577:
	leaq	144(%rsp), %rdi
	leaq	112(%rsp), %rsi
	leaq	16(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp578:
# %bb.7:
.Ltmp580:
	leaq	.L.str.43(%rip), %rdx
	leaq	176(%rsp), %rdi
	leaq	144(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp581:
# %bb.8:
	movb	$1, %bpl
.Ltmp583:
	leaq	176(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp584:
# %bb.9:
	leaq	_ZTVN8pybind1110cast_errorE+16(%rip), %rax
	movq	%rax, (%rbx)
	xorl	%ebp, %ebp
.Ltmp585:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp586:
# %bb.34:
.LBB32_18:
.Ltmp587:
	movq	%rax, %r14
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB32_19
# %bb.20:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB32_21
.LBB32_22:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB32_23
.LBB32_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit41
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB32_25
.LBB32_26:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit44
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB32_27
.LBB32_28:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB32_30
.LBB32_29:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i48
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB32_30:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit50
.Ltmp588:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp589:
# %bb.31:                               # %_ZN8pybind116objectD2Ev.exit51
	testb	%bpl, %bpl
	jne	.LBB32_32
	jmp	.LBB32_33
.LBB32_19:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	192(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB32_22
	jmp	.LBB32_21
.LBB32_17:
.Ltmp582:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB32_22
.LBB32_21:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i36
	movq	160(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB32_24
	jmp	.LBB32_23
.LBB32_16:
.Ltmp579:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB32_24
.LBB32_23:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i39
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB32_26
	jmp	.LBB32_25
.LBB32_15:
.Ltmp576:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB32_26
.LBB32_25:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i42
	movq	128(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB32_28
	jmp	.LBB32_27
.LBB32_14:
.Ltmp573:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB32_28
.LBB32_27:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i45
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB32_29
	jmp	.LBB32_30
.LBB32_35:
.Ltmp590:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB32_13:
.Ltmp570:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB32_29
	jmp	.LBB32_30
.LBB32_12:                              # %.thread33
.Ltmp564:
	movq	%rax, %r14
.Ltmp565:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp566:
	jmp	.LBB32_32
.LBB32_11:
.Ltmp567:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB32_10:                              # %.thread
.Ltmp561:
	movq	%rax, %r14
.LBB32_32:
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
.LBB32_33:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end32:
	.size	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE, .Lfunc_end32-_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE,"aG",@progbits,_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE,comdat
	.p2align	2, 0x0
GCC_except_table32:
.Lexception16:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase9-.Lttbaseref9
.Lttbaseref9:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end16-.Lcst_begin16
.Lcst_begin16:
	.uleb128 .Lfunc_begin16-.Lfunc_begin16  # >> Call Site 1 <<
	.uleb128 .Ltmp559-.Lfunc_begin16        #   Call between .Lfunc_begin16 and .Ltmp559
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp559-.Lfunc_begin16        # >> Call Site 2 <<
	.uleb128 .Ltmp560-.Ltmp559              #   Call between .Ltmp559 and .Ltmp560
	.uleb128 .Ltmp561-.Lfunc_begin16        #     jumps to .Ltmp561
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp562-.Lfunc_begin16        # >> Call Site 3 <<
	.uleb128 .Ltmp563-.Ltmp562              #   Call between .Ltmp562 and .Ltmp563
	.uleb128 .Ltmp564-.Lfunc_begin16        #     jumps to .Ltmp564
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp568-.Lfunc_begin16        # >> Call Site 4 <<
	.uleb128 .Ltmp569-.Ltmp568              #   Call between .Ltmp568 and .Ltmp569
	.uleb128 .Ltmp570-.Lfunc_begin16        #     jumps to .Ltmp570
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp571-.Lfunc_begin16        # >> Call Site 5 <<
	.uleb128 .Ltmp572-.Ltmp571              #   Call between .Ltmp571 and .Ltmp572
	.uleb128 .Ltmp573-.Lfunc_begin16        #     jumps to .Ltmp573
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp574-.Lfunc_begin16        # >> Call Site 6 <<
	.uleb128 .Ltmp575-.Ltmp574              #   Call between .Ltmp574 and .Ltmp575
	.uleb128 .Ltmp576-.Lfunc_begin16        #     jumps to .Ltmp576
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp577-.Lfunc_begin16        # >> Call Site 7 <<
	.uleb128 .Ltmp578-.Ltmp577              #   Call between .Ltmp577 and .Ltmp578
	.uleb128 .Ltmp579-.Lfunc_begin16        #     jumps to .Ltmp579
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp580-.Lfunc_begin16        # >> Call Site 8 <<
	.uleb128 .Ltmp581-.Ltmp580              #   Call between .Ltmp580 and .Ltmp581
	.uleb128 .Ltmp582-.Lfunc_begin16        #     jumps to .Ltmp582
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp583-.Lfunc_begin16        # >> Call Site 9 <<
	.uleb128 .Ltmp586-.Ltmp583              #   Call between .Ltmp583 and .Ltmp586
	.uleb128 .Ltmp587-.Lfunc_begin16        #     jumps to .Ltmp587
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp588-.Lfunc_begin16        # >> Call Site 10 <<
	.uleb128 .Ltmp589-.Ltmp588              #   Call between .Ltmp588 and .Ltmp589
	.uleb128 .Ltmp590-.Lfunc_begin16        #     jumps to .Ltmp590
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp565-.Lfunc_begin16        # >> Call Site 11 <<
	.uleb128 .Ltmp566-.Ltmp565              #   Call between .Ltmp565 and .Ltmp566
	.uleb128 .Ltmp567-.Lfunc_begin16        #     jumps to .Ltmp567
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp566-.Lfunc_begin16        # >> Call Site 12 <<
	.uleb128 .Lfunc_end32-.Ltmp566          #   Call between .Ltmp566 and .Lfunc_end32
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end16:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase9:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb,"axG",@progbits,_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb,comdat
	.hidden	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb # -- Begin function _ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb
	.weak	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb
	.p2align	4, 0x90
	.type	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb,@function
_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb: # @_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	testq	%rsi, %rsi
	je	.LBB33_1
# %bb.2:
	movq	8(%rsi), %rax
	testb	$16, 171(%rax)
	jne	.LBB33_3
# %bb.30:
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE # TAILCALL
.LBB33_1:
	.cfi_def_cfa_offset 96
	xorl	%ebx, %ebx
	jmp	.LBB33_29
.LBB33_3:
	movq	%rdi, %r13
	movq	$-1, 32(%rsp)
	leaq	32(%rsp), %rax
	movq	%rsi, %rdi
	movq	%rax, %rsi
	callq	PyUnicode_AsUTF8AndSize@PLT
	testq	%rax, %rax
	setne	%bl
	je	.LBB33_4
# %bb.5:
	movq	32(%rsp), %r14
	leaq	16(%rsp), %r12
	movq	%r12, (%rsp)
	movq	%r12, %r15
	cmpq	$16, %r14
	jb	.LBB33_9
# %bb.6:
	testq	%r14, %r14
	js	.LBB33_31
# %bb.7:
	movq	%r14, %rdi
	incq	%rdi
	js	.LBB33_32
# %bb.8:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
	movq	%rax, %rbp
	callq	_Znwm@PLT
	movq	%rax, %r15
	movq	%rax, (%rsp)
	movq	%r14, 16(%rsp)
	movq	%rbp, %rax
.LBB33_9:                               # %._crit_edge.i.i
	testq	%r14, %r14
	movq	%r13, %rcx
	je	.LBB33_13
# %bb.10:                               # %._crit_edge.i.i
	cmpq	$1, %r14
	jne	.LBB33_12
# %bb.11:
	movzbl	(%rax), %eax
	movb	%al, (%r15)
	jmp	.LBB33_13
.LBB33_4:
	callq	PyErr_Clear@PLT
	jmp	.LBB33_29
.LBB33_12:
	movq	%r15, %rdi
	movq	%rax, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
	movq	%r13, %rcx
.LBB33_13:
	movq	%r14, 8(%rsp)
	movb	$0, (%r15,%r14)
	movq	(%rcx), %rdi
	leaq	16(%rcx), %rax
	cmpq	%rax, %rdi
	je	.LBB33_14
# %bb.17:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	movq	(%rsp), %rsi
	cmpq	%r12, %rsi
	je	.LBB33_18
# %bb.25:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	movq	16(%rcx), %rax
	movq	%rsi, (%rcx)
	movups	8(%rsp), %xmm0
	movups	%xmm0, 8(%rcx)
	testq	%rdi, %rdi
	je	.LBB33_16
# %bb.26:
	movq	%rdi, (%rsp)
	movq	%rax, 16(%rsp)
	jmp	.LBB33_27
.LBB33_14:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	(%rsp), %rsi
	cmpq	%r12, %rsi
	je	.LBB33_18
# %bb.15:                               # %.thread.i
	movq	%rsi, (%rcx)
	movups	8(%rsp), %xmm0
	movups	%xmm0, 8(%rcx)
.LBB33_16:
	movq	%r12, (%rsp)
	movq	%r12, %rdi
	jmp	.LBB33_27
.LBB33_18:
	movq	%rsp, %rax
	cmpq	%rcx, %rax
	je	.LBB33_19
# %bb.20:
	movq	8(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB33_24
# %bb.21:
	cmpq	$1, %rdx
	jne	.LBB33_23
# %bb.22:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB33_24
.LBB33_23:
	callq	memcpy@PLT
	movq	%r13, %rcx
.LBB33_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	movq	8(%rsp), %rax
	movq	%rax, 8(%rcx)
	movq	(%rcx), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%rsp), %rdi
.LBB33_27:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	movq	$0, 8(%rsp)
	movb	$0, (%rdi)
	movq	(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB33_29
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB33_29:
	movl	%ebx, %eax
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB33_32:                              # %.noexc9.i
	.cfi_def_cfa_offset 96
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB33_19:
	movq	%rsi, %rdi
	jmp	.LBB33_27
.LBB33_31:                              # %.noexc.i
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end33:
	.size	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb, .Lfunc_end33-_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4loadENS_6handleEb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind113strC2ENS_6handleE,"axG",@progbits,_ZN8pybind113strC2ENS_6handleE,comdat
	.hidden	_ZN8pybind113strC2ENS_6handleE  # -- Begin function _ZN8pybind113strC2ENS_6handleE
	.weak	_ZN8pybind113strC2ENS_6handleE
	.p2align	4, 0x90
	.type	_ZN8pybind113strC2ENS_6handleE,@function
_ZN8pybind113strC2ENS_6handleE:         # @_ZN8pybind113strC2ENS_6handleE
.Lfunc_begin17:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception17
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	PyObject_Str@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB34_1
# %bb.4:
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB34_1:
	.cfi_def_cfa_offset 32
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp591:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp592:
# %bb.2:
.Ltmp594:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp595:
# %bb.8:
.LBB34_3:
.Ltmp596:
	movq	%rax, %r14
	jmp	.LBB34_6
.LBB34_5:
.Ltmp593:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
.LBB34_6:
.Ltmp597:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp598:
# %bb.7:                                # %_ZN8pybind116objectD2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB34_9:
.Ltmp599:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end34:
	.size	_ZN8pybind113strC2ENS_6handleE, .Lfunc_end34-_ZN8pybind113strC2ENS_6handleE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind113strC2ENS_6handleE,"aG",@progbits,_ZN8pybind113strC2ENS_6handleE,comdat
	.p2align	2, 0x0
GCC_except_table34:
.Lexception17:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase10-.Lttbaseref10
.Lttbaseref10:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end17-.Lcst_begin17
.Lcst_begin17:
	.uleb128 .Lfunc_begin17-.Lfunc_begin17  # >> Call Site 1 <<
	.uleb128 .Ltmp591-.Lfunc_begin17        #   Call between .Lfunc_begin17 and .Ltmp591
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp591-.Lfunc_begin17        # >> Call Site 2 <<
	.uleb128 .Ltmp592-.Ltmp591              #   Call between .Ltmp591 and .Ltmp592
	.uleb128 .Ltmp593-.Lfunc_begin17        #     jumps to .Ltmp593
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp594-.Lfunc_begin17        # >> Call Site 3 <<
	.uleb128 .Ltmp595-.Ltmp594              #   Call between .Ltmp594 and .Ltmp595
	.uleb128 .Ltmp596-.Lfunc_begin17        #     jumps to .Ltmp596
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp595-.Lfunc_begin17        # >> Call Site 4 <<
	.uleb128 .Ltmp597-.Ltmp595              #   Call between .Ltmp595 and .Ltmp597
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp597-.Lfunc_begin17        # >> Call Site 5 <<
	.uleb128 .Ltmp598-.Ltmp597              #   Call between .Ltmp597 and .Ltmp598
	.uleb128 .Ltmp599-.Lfunc_begin17        #     jumps to .Ltmp599
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp598-.Lfunc_begin17        # >> Call Site 6 <<
	.uleb128 .Lfunc_end34-.Ltmp598          #   Call between .Ltmp598 and .Lfunc_end34
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end17:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase10:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v,"axG",@progbits,_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v,comdat
	.hidden	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v # -- Begin function _ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
	.weak	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
	.p2align	4, 0x90
	.type	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v,@function
_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v: # @_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
.Lfunc_begin18:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception18
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$32, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	(%rsi), %rax
	cmpq	$2, (%rax)
	jl	.LBB35_10
# %bb.1:
	leaq	16(%rsp), %r14
	movq	%r14, (%rsp)
	movq	$0, 8(%rsp)
	movb	$0, 16(%rsp)
.Ltmp600:
	movq	%rsp, %rdi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp601:
# %bb.2:                                # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i
	leaq	16(%rbx), %rdi
	movq	%rdi, (%rbx)
	movq	(%rsp), %rax
	cmpq	%r14, %rax
	je	.LBB35_3
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	%rax, (%rbx)
	movq	16(%rsp), %rax
	movq	%rax, 16(%rbx)
	movq	8(%rsp), %r15
	jmp	.LBB35_8
.LBB35_10:
	movq	%rbx, %rdi
	callq	_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE
	jmp	.LBB35_9
.LBB35_3:
	movq	8(%rsp), %r15
	leaq	1(%r15), %rdx
	movq	%r14, %rsi
	callq	memcpy@PLT
.LBB35_8:                               # %_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEETnNSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuentsr6detail22is_same_ignoring_cvrefIS8_P7_objectEE5valueEiE4typeELi0EEES8_RKNS_6handleE.exit
	movq	%r15, 8(%rbx)
.LBB35_9:                               # %_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEETnNSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuentsr6detail22is_same_ignoring_cvrefIS8_P7_objectEE5valueEiE4typeELi0EEES8_RKNS_6handleE.exit
	movq	%rbx, %rax
	addq	$32, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB35_4:
	.cfi_def_cfa_offset 64
.Ltmp602:
	movq	%rax, %rbx
	movq	(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB35_6
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB35_6:                               # %_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EED2Ev.exit7.i
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end35:
	.size	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v, .Lfunc_end35-_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
	.cfi_endproc
	.section	.gcc_except_table._ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v,"aG",@progbits,_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v,comdat
	.p2align	2, 0x0
GCC_except_table35:
.Lexception18:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end18-.Lcst_begin18
.Lcst_begin18:
	.uleb128 .Ltmp600-.Lfunc_begin18        # >> Call Site 1 <<
	.uleb128 .Ltmp601-.Ltmp600              #   Call between .Ltmp600 and .Ltmp601
	.uleb128 .Ltmp602-.Lfunc_begin18        #     jumps to .Ltmp602
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp601-.Lfunc_begin18        # >> Call Site 2 <<
	.uleb128 .Lfunc_end35-.Ltmp601          #   Call between .Ltmp601 and .Lfunc_end35
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end18:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZN8pybind11L7type_idINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES6_v
	.type	_ZN8pybind11L7type_idINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES6_v,@function
_ZN8pybind11L7type_idINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES6_v: # @_ZN8pybind11L7type_idINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES6_v
.Lfunc_begin19:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception19
# %bb.0:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r15
	movl	$53, %edi
	callq	_Znwm@PLT
	movq	%rax, (%rbx)
	movq	$52, 16(%rbx)
	movq	_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GOTPCREL(%rip), %rcx
	movups	(%rcx), %xmm0
	movups	16(%rcx), %xmm1
	movups	32(%rcx), %xmm2
	movups	%xmm0, (%rax)
	movups	%xmm1, 16(%rax)
	movups	%xmm2, 32(%rax)
	movl	$1162167651, 48(%rax)           # imm = 0x45454563
	movq	$52, 8(%rbx)
	movb	$0, 52(%rax)
.Ltmp603:
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp604:
# %bb.1:                                # %_ZN8pybind116detail13clean_type_idB5cxx11EPKc.exit
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB36_2:
	.cfi_def_cfa_offset 32
.Ltmp605:
	movq	%rax, %r14
	movq	(%rbx), %rdi
	cmpq	%r15, %rdi
	je	.LBB36_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	movq	(%r15), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB36_4:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end36:
	.size	_ZN8pybind11L7type_idINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES6_v, .Lfunc_end36-_ZN8pybind11L7type_idINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES6_v
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table36:
.Lexception19:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end19-.Lcst_begin19
.Lcst_begin19:
	.uleb128 .Lfunc_begin19-.Lfunc_begin19  # >> Call Site 1 <<
	.uleb128 .Ltmp603-.Lfunc_begin19        #   Call between .Lfunc_begin19 and .Ltmp603
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp603-.Lfunc_begin19        # >> Call Site 2 <<
	.uleb128 .Ltmp604-.Ltmp603              #   Call between .Ltmp603 and .Ltmp604
	.uleb128 .Ltmp605-.Lfunc_begin19        #     jumps to .Ltmp605
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp604-.Lfunc_begin19        # >> Call Site 3 <<
	.uleb128 .Lfunc_end36-.Ltmp604          #   Call between .Ltmp604 and .Lfunc_end36
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end19:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE,"axG",@progbits,_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE,comdat
	.hidden	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE # -- Begin function _ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE
	.weak	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE,@function
_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE: # @_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$32, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r15
	movq	%rdi, %rbx
	movq	8(%rsi), %rdi
	testb	$8, 171(%rdi)
	jne	.LBB37_11
# %bb.1:
	cmpq	PyByteArray_Type@GOTPCREL(%rip), %rdi
	je	.LBB37_3
# %bb.2:                                # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit
	movq	PyByteArray_Type@GOTPCREL(%rip), %rsi
	callq	PyType_IsSubtype@PLT
	testl	%eax, %eax
	je	.LBB37_33
.LBB37_3:                               # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.thread
	movq	%r15, %rdi
	callq	PyByteArray_AsString@PLT
	testq	%rax, %rax
	je	.LBB37_43
# %bb.4:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	PyByteArray_Size@PLT
	movq	%rax, %r15
	leaq	16(%rsp), %r13
	movq	%r13, (%rsp)
	movq	%r13, %r12
	cmpq	$16, %rax
	jb	.LBB37_8
# %bb.5:
	testq	%r15, %r15
	js	.LBB37_42
# %bb.6:
	movq	%r15, %rdi
	incq	%rdi
	js	.LBB37_40
# %bb.7:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i23
	callq	_Znwm@PLT
	movq	%rax, %r12
	movq	%rax, (%rsp)
	movq	%r15, 16(%rsp)
.LBB37_8:                               # %._crit_edge.i.i22
	testq	%r15, %r15
	je	.LBB37_20
# %bb.9:                                # %._crit_edge.i.i22
	cmpq	$1, %r15
	je	.LBB37_10
.LBB37_19:
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
	jmp	.LBB37_20
.LBB37_11:
	movq	%r15, %rdi
	callq	PyBytes_AsString@PLT
	testq	%rax, %rax
	je	.LBB37_41
# %bb.12:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	PyBytes_Size@PLT
	movq	%rax, %r15
	leaq	16(%rsp), %r13
	movq	%r13, (%rsp)
	movq	%r13, %r12
	cmpq	$16, %rax
	jb	.LBB37_16
# %bb.13:
	testq	%r15, %r15
	js	.LBB37_42
# %bb.14:
	movq	%r15, %rdi
	incq	%rdi
	js	.LBB37_40
# %bb.15:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
	callq	_Znwm@PLT
	movq	%rax, %r12
	movq	%rax, (%rsp)
	movq	%r15, 16(%rsp)
.LBB37_16:                              # %._crit_edge.i.i
	testq	%r15, %r15
	je	.LBB37_20
# %bb.17:                               # %._crit_edge.i.i
	cmpq	$1, %r15
	jne	.LBB37_19
.LBB37_10:
	movzbl	(%r14), %eax
	movb	%al, (%r12)
.LBB37_20:
	movq	%r15, 8(%rsp)
	movb	$0, (%r12,%r15)
	movq	(%rbx), %rdi
	leaq	16(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB37_24
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i
	movq	(%rsp), %rsi
	cmpq	%r13, %rsi
	je	.LBB37_25
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit23.thread25.i
	movq	16(%rbx), %rax
	movq	%rsi, (%rbx)
	movups	8(%rsp), %xmm0
	movups	%xmm0, 8(%rbx)
	testq	%rdi, %rdi
	je	.LBB37_29
# %bb.23:
	movq	%rdi, (%rsp)
	movq	%rax, 16(%rsp)
	jmp	.LBB37_36
.LBB37_24:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	(%rsp), %rsi
	cmpq	%r13, %rsi
	je	.LBB37_25
# %bb.28:                               # %.thread.i
	movq	%rsi, (%rbx)
	movups	8(%rsp), %xmm0
	movups	%xmm0, 8(%rbx)
.LBB37_29:
	movq	%r13, (%rsp)
	movq	%r13, %rdi
	jmp	.LBB37_36
.LBB37_25:
	movq	%rsp, %rax
	cmpq	%rbx, %rax
	je	.LBB37_26
# %bb.30:
	movq	8(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB37_35
# %bb.31:
	cmpq	$1, %rdx
	jne	.LBB37_34
# %bb.32:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB37_35
.LBB37_33:
	xorl	%eax, %eax
	jmp	.LBB37_39
.LBB37_34:
	callq	memcpy@PLT
.LBB37_35:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	movq	8(%rsp), %rax
	movq	%rax, 8(%rbx)
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%rsp), %rdi
.LBB37_36:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit39
	movq	$0, 8(%rsp)
	movb	$0, (%rdi)
	movq	(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB37_38
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i40
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB37_38:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit42
	movb	$1, %al
.LBB37_39:
                                        # kill: def $al killed $al killed $eax
	addq	$32, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB37_40:                              # %.noexc9.i
	.cfi_def_cfa_offset 80
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB37_26:
	movq	%rsi, %rdi
	jmp	.LBB37_36
.LBB37_41:
	leaq	.L.str.44(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.LBB37_42:                              # %.noexc.i
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB37_43:
	leaq	.L.str.45(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Lfunc_end37:
	.size	_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE, .Lfunc_end37-_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE8load_rawIcEEbNSt9enable_ifIXsr3std7is_sameIT_cEE5valueENS_6handleEE4typeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind1117error_already_setC2Ev,"axG",@progbits,_ZN8pybind1117error_already_setC2Ev,comdat
	.hidden	_ZN8pybind1117error_already_setC2Ev # -- Begin function _ZN8pybind1117error_already_setC2Ev
	.weak	_ZN8pybind1117error_already_setC2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind1117error_already_setC2Ev,@function
_ZN8pybind1117error_already_setC2Ev:    # @_ZN8pybind1117error_already_setC2Ev
.Lfunc_begin20:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception20
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	_ZTVN8pybind1117error_already_setE+16(%rip), %rax
	movq	%rax, (%rdi)
.Ltmp606:
	movl	$64, %edi
	callq	_Znwm@PLT
.Ltmp607:
# %bb.1:
.Ltmp609:
	movq	%rax, %r14
	leaq	.L.str.46(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZN8pybind116detail25error_fetch_and_normalizeC2EPKc
.Ltmp610:
# %bb.2:
	movq	%r14, 8(%rbx)
	movq	$0, 16(%rbx)
.Ltmp612:
	movl	$32, %edi
	callq	_Znwm@PLT
.Ltmp613:
# %bb.3:
	movabsq	$4294967297, %rcx               # imm = 0x100000001
	movq	%rcx, 8(%rax)
	leaq	_ZTVSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE+16(%rip), %rcx
	movq	%rcx, (%rax)
	leaq	_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE(%rip), %rcx
	movq	%rcx, 16(%rax)
	movq	%r14, 24(%rax)
	movq	%rax, 16(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB38_4:
	.cfi_def_cfa_offset 32
.Ltmp614:
	movq	%rax, %rdi
	callq	__cxa_begin_catch@PLT
.Ltmp615:
	movq	%r14, %rdi
	callq	_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE
.Ltmp616:
# %bb.5:
.Ltmp617:
	callq	__cxa_rethrow@PLT
.Ltmp618:
# %bb.8:
.LBB38_6:
.Ltmp619:
	movq	%rax, %r15
.Ltmp620:
	callq	__cxa_end_catch@PLT
.Ltmp621:
	jmp	.LBB38_11
.LBB38_7:
.Ltmp622:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB38_10:
.Ltmp611:
	movq	%rax, %r15
	movl	$64, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%rbx, %rdi
	callq	_ZNSt9exceptionD2Ev@PLT
	movq	%r15, %rdi
	callq	_Unwind_Resume@PLT
.LBB38_9:
.Ltmp608:
	movq	%rax, %r15
.LBB38_11:                              # %.body
	movq	%rbx, %rdi
	callq	_ZNSt9exceptionD2Ev@PLT
	movq	%r15, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end38:
	.size	_ZN8pybind1117error_already_setC2Ev, .Lfunc_end38-_ZN8pybind1117error_already_setC2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1117error_already_setC2Ev,"aG",@progbits,_ZN8pybind1117error_already_setC2Ev,comdat
	.p2align	2, 0x0
GCC_except_table38:
.Lexception20:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase11-.Lttbaseref11
.Lttbaseref11:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end20-.Lcst_begin20
.Lcst_begin20:
	.uleb128 .Ltmp606-.Lfunc_begin20        # >> Call Site 1 <<
	.uleb128 .Ltmp607-.Ltmp606              #   Call between .Ltmp606 and .Ltmp607
	.uleb128 .Ltmp608-.Lfunc_begin20        #     jumps to .Ltmp608
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp609-.Lfunc_begin20        # >> Call Site 2 <<
	.uleb128 .Ltmp610-.Ltmp609              #   Call between .Ltmp609 and .Ltmp610
	.uleb128 .Ltmp611-.Lfunc_begin20        #     jumps to .Ltmp611
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp612-.Lfunc_begin20        # >> Call Site 3 <<
	.uleb128 .Ltmp613-.Ltmp612              #   Call between .Ltmp612 and .Ltmp613
	.uleb128 .Ltmp614-.Lfunc_begin20        #     jumps to .Ltmp614
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp613-.Lfunc_begin20        # >> Call Site 4 <<
	.uleb128 .Ltmp615-.Ltmp613              #   Call between .Ltmp613 and .Ltmp615
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp615-.Lfunc_begin20        # >> Call Site 5 <<
	.uleb128 .Ltmp618-.Ltmp615              #   Call between .Ltmp615 and .Ltmp618
	.uleb128 .Ltmp619-.Lfunc_begin20        #     jumps to .Ltmp619
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp620-.Lfunc_begin20        # >> Call Site 6 <<
	.uleb128 .Ltmp621-.Ltmp620              #   Call between .Ltmp620 and .Ltmp621
	.uleb128 .Ltmp622-.Lfunc_begin20        #     jumps to .Ltmp622
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp621-.Lfunc_begin20        # >> Call Site 7 <<
	.uleb128 .Lfunc_end38-.Ltmp621          #   Call between .Ltmp621 and .Lfunc_end38
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end20:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase11:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE,"axG",@progbits,_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE,comdat
	.hidden	_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE # -- Begin function _ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE
	.weak	_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE
	.p2align	4, 0x90
	.type	_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE,@function
_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE: # @_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE
.Lfunc_begin21:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception21
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$48, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind1118gil_scoped_acquireC2Ev
	leaq	16(%rsp), %rsi
	leaq	24(%rsp), %rdx
.Ltmp623:
	leaq	8(%rsp), %rdi
	callq	PyErr_Fetch@PLT
.Ltmp624:
# %bb.1:                                # %_ZN8pybind1111error_scopeC2Ev.exit
	testq	%rbx, %rbx
	je	.LBB39_8
# %bb.2:
	movq	24(%rbx), %rdi
	leaq	40(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB39_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	movq	(%rax), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB39_4:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	leaq	16(%rbx), %rdi
.Ltmp626:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp627:
# %bb.5:                                # %_ZN8pybind116objectD2Ev.exit.i
	leaq	8(%rbx), %rdi
.Ltmp629:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp630:
# %bb.6:                                # %_ZN8pybind116objectD2Ev.exit1.i
.Ltmp632:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp633:
# %bb.7:                                # %_ZN8pybind116detail25error_fetch_and_normalizeD2Ev.exit
	movl	$64, %esi
	movq	%rbx, %rdi
	callq	_ZdlPvm@PLT
.LBB39_8:
	movq	8(%rsp), %rdi
	movq	16(%rsp), %rsi
	movq	24(%rsp), %rdx
.Ltmp635:
	callq	PyErr_Restore@PLT
.Ltmp636:
# %bb.9:                                # %_ZN8pybind1111error_scopeD2Ev.exit
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind1118gil_scoped_acquireD2Ev
	addq	$48, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB39_13:
	.cfi_def_cfa_offset 64
.Ltmp634:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB39_12:
.Ltmp631:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB39_11:
.Ltmp628:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB39_14:
.Ltmp637:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB39_10:
.Ltmp625:
	movq	%rax, %rbx
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind1118gil_scoped_acquireD2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end39:
	.size	_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE, .Lfunc_end39-_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE,"aG",@progbits,_ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE,comdat
	.p2align	2, 0x0
GCC_except_table39:
.Lexception21:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase12-.Lttbaseref12
.Lttbaseref12:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end21-.Lcst_begin21
.Lcst_begin21:
	.uleb128 .Lfunc_begin21-.Lfunc_begin21  # >> Call Site 1 <<
	.uleb128 .Ltmp623-.Lfunc_begin21        #   Call between .Lfunc_begin21 and .Ltmp623
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp623-.Lfunc_begin21        # >> Call Site 2 <<
	.uleb128 .Ltmp624-.Ltmp623              #   Call between .Ltmp623 and .Ltmp624
	.uleb128 .Ltmp625-.Lfunc_begin21        #     jumps to .Ltmp625
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp626-.Lfunc_begin21        # >> Call Site 3 <<
	.uleb128 .Ltmp627-.Ltmp626              #   Call between .Ltmp626 and .Ltmp627
	.uleb128 .Ltmp628-.Lfunc_begin21        #     jumps to .Ltmp628
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp629-.Lfunc_begin21        # >> Call Site 4 <<
	.uleb128 .Ltmp630-.Ltmp629              #   Call between .Ltmp629 and .Ltmp630
	.uleb128 .Ltmp631-.Lfunc_begin21        #     jumps to .Ltmp631
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp632-.Lfunc_begin21        # >> Call Site 5 <<
	.uleb128 .Ltmp633-.Ltmp632              #   Call between .Ltmp632 and .Ltmp633
	.uleb128 .Ltmp634-.Lfunc_begin21        #     jumps to .Ltmp634
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp635-.Lfunc_begin21        # >> Call Site 6 <<
	.uleb128 .Ltmp636-.Ltmp635              #   Call between .Ltmp635 and .Ltmp636
	.uleb128 .Ltmp637-.Lfunc_begin21        #     jumps to .Ltmp637
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp636-.Lfunc_begin21        # >> Call Site 7 <<
	.uleb128 .Lfunc_end39-.Ltmp636          #   Call between .Ltmp636 and .Lfunc_end39
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end21:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase12:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev,"axG",@progbits,_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev,comdat
	.weak	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev # -- Begin function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev,@function
_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev: # @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_startproc
# %bb.0:
	retq
.Lfunc_end40:
	.size	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev, .Lfunc_end40-_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev,"axG",@progbits,_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev,comdat
	.hidden	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev # -- Begin function _ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.weak	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.p2align	4, 0x90
	.type	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev,@function
_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev: # @_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_startproc
# %bb.0:
	movl	$32, %esi
	jmp	_ZdlPvm@PLT                     # TAILCALL
.Lfunc_end41:
	.size	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev, .Lfunc_end41-_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,"axG",@progbits,_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,comdat
	.hidden	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv # -- Begin function _ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.weak	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.p2align	4, 0x90
	.type	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,@function
_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv: # @_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
.Lfunc_begin22:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception22
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	movq	%rdi, %rax
	movq	24(%rdi), %rdi
.Ltmp638:
	callq	*16(%rax)
.Ltmp639:
# %bb.1:
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.LBB42_2:
	.cfi_def_cfa_offset 16
.Ltmp640:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end42:
	.size	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv, .Lfunc_end42-_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.cfi_endproc
	.section	.gcc_except_table._ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,"aG",@progbits,_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv,comdat
	.p2align	2, 0x0
GCC_except_table42:
.Lexception22:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase13-.Lttbaseref13
.Lttbaseref13:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end22-.Lcst_begin22
.Lcst_begin22:
	.uleb128 .Ltmp638-.Lfunc_begin22        # >> Call Site 1 <<
	.uleb128 .Ltmp639-.Ltmp638              #   Call between .Ltmp638 and .Ltmp639
	.uleb128 .Ltmp640-.Lfunc_begin22        #     jumps to .Ltmp640
	.byte	1                               #   On action: 1
.Lcst_end22:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase13:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,"axG",@progbits,_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,comdat
	.hidden	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv # -- Begin function _ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.weak	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.p2align	4, 0x90
	.type	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv,@function
_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv: # @_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_startproc
# %bb.0:                                # %_ZNSt15__allocated_ptrISaISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS4_ESaIvELN9__gnu_cxx12_Lock_policyE2EEEED2Ev.exit
	movl	$32, %esi
	jmp	_ZdlPvm@PLT                     # TAILCALL
.Lfunc_end43:
	.size	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv, .Lfunc_end43-_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,"axG",@progbits,_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,comdat
	.hidden	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info # -- Begin function _ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.weak	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.p2align	4, 0x90
	.type	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info,@function
_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info: # @_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_startproc
# %bb.0:
	movq	%rdi, %rax
	movq	8(%rsi), %rdi
	leaq	_ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE(%rip), %rcx
	cmpq	%rcx, %rdi
	je	.LBB44_5
# %bb.1:
	cmpb	$42, (%rdi)
	jne	.LBB44_3
# %bb.2:
	xorl	%eax, %eax
	retq
.LBB44_3:                               # %_ZNKSt9type_infoeqERKS_.exit
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	leaq	_ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE(%rip), %rsi
	movq	%rax, %rbx
	callq	strcmp@PLT
	movl	%eax, %ecx
	movq	%rbx, %rax
	testl	%ecx, %ecx
	popq	%rbx
	.cfi_def_cfa_offset 8
	.cfi_restore %rbx
	je	.LBB44_5
# %bb.4:
	xorl	%eax, %eax
	retq
.LBB44_5:                               # %_ZNKSt9type_infoeqERKS_.exit.thread
	addq	$16, %rax
	retq
.Lfunc_end44:
	.size	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info, .Lfunc_end44-_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE,"axG",@progbits,_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE,comdat
	.hidden	_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE # -- Begin function _ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE
	.weak	_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE
	.p2align	4, 0x90
	.type	_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE,@function
_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE: # @_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE
.Lfunc_begin23:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception23
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$32, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	(%rsi), %rax
	cmpq	$2, (%rax)
	jl	.LBB45_10
# %bb.1:
	leaq	16(%rsp), %r14
	movq	%r14, (%rsp)
	movq	$0, 8(%rsp)
	movb	$0, 16(%rsp)
.Ltmp641:
	movq	%rsp, %rdi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp642:
# %bb.2:                                # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i
	leaq	16(%rbx), %rdi
	movq	%rdi, (%rbx)
	movq	(%rsp), %rax
	cmpq	%r14, %rax
	je	.LBB45_3
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	%rax, (%rbx)
	movq	16(%rsp), %rax
	movq	%rax, 16(%rbx)
	movq	8(%rsp), %r15
	jmp	.LBB45_8
.LBB45_10:
	movq	%rbx, %rdi
	callq	_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE
	jmp	.LBB45_9
.LBB45_3:
	movq	8(%rsp), %r15
	leaq	1(%r15), %rdx
	movq	%r14, %rsi
	callq	memcpy@PLT
.LBB45_8:                               # %_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEETnNSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuentsr6detail22is_same_ignoring_cvrefIS8_P7_objectEE5valueEiE4typeELi0EEES8_RKNS_6handleE.exit
	movq	%r15, 8(%rbx)
.LBB45_9:                               # %_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEETnNSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuentsr6detail22is_same_ignoring_cvrefIS8_P7_objectEE5valueEiE4typeELi0EEES8_RKNS_6handleE.exit
	movq	%rbx, %rax
	addq	$32, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB45_4:
	.cfi_def_cfa_offset 64
.Ltmp643:
	movq	%rax, %rbx
	movq	(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB45_6
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB45_6:                               # %_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EED2Ev.exit
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end45:
	.size	_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE, .Lfunc_end45-_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE,"aG",@progbits,_ZN8pybind114castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS8_EE5valueES8_E4typeEONS_6objectE,comdat
	.p2align	2, 0x0
GCC_except_table45:
.Lexception23:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end23-.Lcst_begin23
.Lcst_begin23:
	.uleb128 .Ltmp641-.Lfunc_begin23        # >> Call Site 1 <<
	.uleb128 .Ltmp642-.Ltmp641              #   Call between .Ltmp641 and .Ltmp642
	.uleb128 .Ltmp643-.Lfunc_begin23        #     jumps to .Ltmp643
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp642-.Lfunc_begin23        # >> Call Site 2 <<
	.uleb128 .Lfunc_end45-.Ltmp642          #   Call between .Ltmp642 and .Lfunc_end45
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end23:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE,"axG",@progbits,_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE,comdat
	.hidden	_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE # -- Begin function _ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE
	.weak	_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE
	.p2align	4, 0x90
	.type	_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE,@function
_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE: # @_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE
.Lfunc_begin24:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception24
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$200, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	(%rsi), %rax
	cmpq	$2, (%rax)
	jge	.LBB46_1
# %bb.36:
	movq	%rdi, %rbx
	leaq	24(%rsp), %r15
	movq	%r15, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp644:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp645:
# %bb.37:                               # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit
	leaq	16(%rbx), %rdi
	movq	%rdi, (%rbx)
	movq	8(%rsp), %rax
	cmpq	%r15, %rax
	je	.LBB46_38
# %bb.39:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	%rax, (%rbx)
	movq	24(%rsp), %rax
	movq	%rax, 16(%rbx)
	movq	16(%rsp), %r14
	jmp	.LBB46_40
.LBB46_38:
	movq	16(%rsp), %r14
	leaq	1(%r14), %rdx
	movq	%r15, %rsi
	callq	memcpy@PLT
.LBB46_40:                              # %_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EED2Ev.exit
	movq	%r14, 8(%rbx)
	movq	%rbx, %rax
	addq	$200, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB46_1:
	.cfi_def_cfa_offset 240
	movl	$16, %edi
	movq	%rsi, %r14
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
	movq	(%r14), %rax
	movq	8(%rax), %rsi
.Ltmp647:
	movq	%rsp, %rdi
	callq	_ZN8pybind113strC2ENS_6handleE
.Ltmp648:
# %bb.2:
.Ltmp650:
	leaq	72(%rsp), %rdi
	movq	%rsp, %rsi
	callq	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
.Ltmp651:
# %bb.3:
.Ltmp656:
	leaq	.L.str.47(%rip), %rsi
	leaq	104(%rsp), %rdi
	leaq	72(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp657:
# %bb.4:
.Ltmp659:
	leaq	.L.str.48(%rip), %rdx
	leaq	136(%rsp), %rdi
	leaq	104(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp660:
# %bb.5:
.Ltmp662:
	leaq	40(%rsp), %rdi
	callq	_ZN8pybind11L7type_idINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES6_v
.Ltmp663:
# %bb.6:
.Ltmp665:
	leaq	168(%rsp), %rdi
	leaq	136(%rsp), %rsi
	leaq	40(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp666:
# %bb.7:
.Ltmp668:
	leaq	.L.str.49(%rip), %rdx
	leaq	8(%rsp), %rdi
	leaq	168(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp669:
# %bb.8:
	movb	$1, %bpl
.Ltmp671:
	leaq	8(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp672:
# %bb.9:
	leaq	_ZTVN8pybind1110cast_errorE+16(%rip), %rax
	movq	%rax, (%rbx)
	xorl	%ebp, %ebp
.Ltmp673:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp674:
# %bb.41:
.LBB46_18:
.Ltmp675:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB46_19
# %bb.20:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB46_21
.LBB46_22:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB46_23
.LBB46_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit41
	movq	136(%rsp), %rdi
	leaq	152(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB46_25
.LBB46_26:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit44
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB46_27
.LBB46_28:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB46_30
.LBB46_29:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i48
	movq	88(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB46_30:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit50
.Ltmp676:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp677:
# %bb.31:                               # %_ZN8pybind116objectD2Ev.exit51
	testb	%bpl, %bpl
	jne	.LBB46_32
	jmp	.LBB46_35
.LBB46_19:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB46_22
	jmp	.LBB46_21
.LBB46_17:
.Ltmp670:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB46_22
.LBB46_21:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i36
	movq	184(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB46_24
	jmp	.LBB46_23
.LBB46_16:
.Ltmp667:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB46_24
.LBB46_23:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i39
	movq	56(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	136(%rsp), %rdi
	leaq	152(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB46_26
	jmp	.LBB46_25
.LBB46_15:
.Ltmp664:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	136(%rsp), %rdi
	leaq	152(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB46_26
.LBB46_25:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i42
	movq	152(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB46_28
	jmp	.LBB46_27
.LBB46_14:
.Ltmp661:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB46_28
.LBB46_27:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i45
	movq	120(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB46_29
	jmp	.LBB46_30
.LBB46_42:
.Ltmp678:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB46_13:
.Ltmp658:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB46_29
	jmp	.LBB46_30
.LBB46_12:                              # %.thread32
.Ltmp652:
	movq	%rax, %r14
.Ltmp653:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp654:
	jmp	.LBB46_32
.LBB46_11:
.Ltmp655:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB46_10:                              # %.thread
.Ltmp649:
	movq	%rax, %r14
.LBB46_32:
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB46_33:
.Ltmp646:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB46_35
# %bb.34:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB46_35:                              # %common.resume
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end46:
	.size	_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE, .Lfunc_end46-_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE,"aG",@progbits,_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE,comdat
	.p2align	2, 0x0
GCC_except_table46:
.Lexception24:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase14-.Lttbaseref14
.Lttbaseref14:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end24-.Lcst_begin24
.Lcst_begin24:
	.uleb128 .Ltmp644-.Lfunc_begin24        # >> Call Site 1 <<
	.uleb128 .Ltmp645-.Ltmp644              #   Call between .Ltmp644 and .Ltmp645
	.uleb128 .Ltmp646-.Lfunc_begin24        #     jumps to .Ltmp646
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp645-.Lfunc_begin24        # >> Call Site 2 <<
	.uleb128 .Ltmp647-.Ltmp645              #   Call between .Ltmp645 and .Ltmp647
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp647-.Lfunc_begin24        # >> Call Site 3 <<
	.uleb128 .Ltmp648-.Ltmp647              #   Call between .Ltmp647 and .Ltmp648
	.uleb128 .Ltmp649-.Lfunc_begin24        #     jumps to .Ltmp649
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp650-.Lfunc_begin24        # >> Call Site 4 <<
	.uleb128 .Ltmp651-.Ltmp650              #   Call between .Ltmp650 and .Ltmp651
	.uleb128 .Ltmp652-.Lfunc_begin24        #     jumps to .Ltmp652
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp656-.Lfunc_begin24        # >> Call Site 5 <<
	.uleb128 .Ltmp657-.Ltmp656              #   Call between .Ltmp656 and .Ltmp657
	.uleb128 .Ltmp658-.Lfunc_begin24        #     jumps to .Ltmp658
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp659-.Lfunc_begin24        # >> Call Site 6 <<
	.uleb128 .Ltmp660-.Ltmp659              #   Call between .Ltmp659 and .Ltmp660
	.uleb128 .Ltmp661-.Lfunc_begin24        #     jumps to .Ltmp661
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp662-.Lfunc_begin24        # >> Call Site 7 <<
	.uleb128 .Ltmp663-.Ltmp662              #   Call between .Ltmp662 and .Ltmp663
	.uleb128 .Ltmp664-.Lfunc_begin24        #     jumps to .Ltmp664
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp665-.Lfunc_begin24        # >> Call Site 8 <<
	.uleb128 .Ltmp666-.Ltmp665              #   Call between .Ltmp665 and .Ltmp666
	.uleb128 .Ltmp667-.Lfunc_begin24        #     jumps to .Ltmp667
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp668-.Lfunc_begin24        # >> Call Site 9 <<
	.uleb128 .Ltmp669-.Ltmp668              #   Call between .Ltmp668 and .Ltmp669
	.uleb128 .Ltmp670-.Lfunc_begin24        #     jumps to .Ltmp670
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp671-.Lfunc_begin24        # >> Call Site 10 <<
	.uleb128 .Ltmp674-.Ltmp671              #   Call between .Ltmp671 and .Ltmp674
	.uleb128 .Ltmp675-.Lfunc_begin24        #     jumps to .Ltmp675
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp676-.Lfunc_begin24        # >> Call Site 11 <<
	.uleb128 .Ltmp677-.Ltmp676              #   Call between .Ltmp676 and .Ltmp677
	.uleb128 .Ltmp678-.Lfunc_begin24        #     jumps to .Ltmp678
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp653-.Lfunc_begin24        # >> Call Site 12 <<
	.uleb128 .Ltmp654-.Ltmp653              #   Call between .Ltmp653 and .Ltmp654
	.uleb128 .Ltmp655-.Lfunc_begin24        #     jumps to .Ltmp655
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp654-.Lfunc_begin24        # >> Call Site 13 <<
	.uleb128 .Lfunc_end46-.Ltmp654          #   Call between .Ltmp654 and .Lfunc_end46
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end24:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase14:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail13clean_type_idB5cxx11EPKc,"axG",@progbits,_ZN8pybind116detail13clean_type_idB5cxx11EPKc,comdat
	.hidden	_ZN8pybind116detail13clean_type_idB5cxx11EPKc # -- Begin function _ZN8pybind116detail13clean_type_idB5cxx11EPKc
	.weak	_ZN8pybind116detail13clean_type_idB5cxx11EPKc
	.p2align	4, 0x90
	.type	_ZN8pybind116detail13clean_type_idB5cxx11EPKc,@function
_ZN8pybind116detail13clean_type_idB5cxx11EPKc: # @_ZN8pybind116detail13clean_type_idB5cxx11EPKc
.Lfunc_begin25:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception25
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	leaq	16(%rdi), %r13
	movq	%r13, (%rdi)
	testq	%rsi, %rsi
	je	.LBB47_14
# %bb.1:
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	strlen@PLT
	movq	%rax, %r15
	movq	%r13, %r12
	cmpq	$16, %rax
	jb	.LBB47_5
# %bb.2:
	testq	%r15, %r15
	js	.LBB47_15
# %bb.3:
	movq	%r15, %rdi
	incq	%rdi
	js	.LBB47_16
# %bb.4:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
	callq	_Znwm@PLT
	movq	%rax, %r12
	movq	%rax, (%rbx)
	movq	%r15, 16(%rbx)
.LBB47_5:                               # %._crit_edge.i.i
	testq	%r15, %r15
	je	.LBB47_9
# %bb.6:                                # %._crit_edge.i.i
	cmpq	$1, %r15
	jne	.LBB47_8
# %bb.7:
	movzbl	(%r14), %eax
	movb	%al, (%r12)
	jmp	.LBB47_9
.LBB47_8:
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB47_9:
	movq	%r15, 8(%rbx)
	movb	$0, (%r12,%r15)
.Ltmp679:
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp680:
# %bb.10:
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB47_16:                              # %.noexc11.i
	.cfi_def_cfa_offset 48
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB47_14:                              # %.noexc
	leaq	.L.str.34(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.LBB47_15:                              # %.noexc.i
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB47_11:
.Ltmp681:
	movq	%rax, %r14
	movq	(%rbx), %rdi
	cmpq	%r13, %rdi
	je	.LBB47_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	(%r13), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB47_13:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end47:
	.size	_ZN8pybind116detail13clean_type_idB5cxx11EPKc, .Lfunc_end47-_ZN8pybind116detail13clean_type_idB5cxx11EPKc
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail13clean_type_idB5cxx11EPKc,"aG",@progbits,_ZN8pybind116detail13clean_type_idB5cxx11EPKc,comdat
	.p2align	2, 0x0
GCC_except_table47:
.Lexception25:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end25-.Lcst_begin25
.Lcst_begin25:
	.uleb128 .Lfunc_begin25-.Lfunc_begin25  # >> Call Site 1 <<
	.uleb128 .Ltmp679-.Lfunc_begin25        #   Call between .Lfunc_begin25 and .Ltmp679
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp679-.Lfunc_begin25        # >> Call Site 2 <<
	.uleb128 .Ltmp680-.Ltmp679              #   Call between .Ltmp679 and .Ltmp680
	.uleb128 .Ltmp681-.Lfunc_begin25        #     jumps to .Ltmp681
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp680-.Lfunc_begin25        # >> Call Site 3 <<
	.uleb128 .Lfunc_end47-.Ltmp680          #   Call between .Ltmp680 and .Lfunc_end47
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end25:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"axG",@progbits,_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.hidden	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # -- Begin function _ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.weak	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@function
_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE: # @_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Lfunc_begin26:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception26
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$48, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	movl	$0, 12(%rsp)
	movq	(%rdi), %rdi
	leaq	12(%rsp), %rcx
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	__cxa_demangle@PLT
	movq	%rax, %rbx
	cmpl	$0, 12(%rsp)
	jne	.LBB48_2
# %bb.1:
	movq	8(%r14), %r15
	movq	%rbx, %rdi
	callq	strlen@PLT
.Ltmp682:
	movq	%r14, %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	movq	%rbx, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.Ltmp683:
.LBB48_2:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc.exit
	leaq	32(%rsp), %r15
	movq	%r15, 16(%rsp)
	movabsq	$3544724807094532464, %rax      # imm = 0x3131646E69627970
	movq	%rax, 32(%rsp)
	movw	$14906, 40(%rsp)                # imm = 0x3A3A
	movq	$10, 24(%rsp)
	movb	$0, 42(%rsp)
.Ltmp685:
	leaq	16(%rsp), %rsi
	movq	%r14, %rdi
	callq	_ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_
.Ltmp686:
# %bb.3:
	movq	16(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB48_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB48_5:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	testq	%rbx, %rbx
	je	.LBB48_7
# %bb.6:
	movq	%rbx, %rdi
	callq	free@PLT
.LBB48_7:                               # %_ZNSt10unique_ptrIcPFvPvEED2Ev.exit
	addq	$48, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB48_13:
	.cfi_def_cfa_offset 80
.Ltmp684:
	movq	%rax, %r14
	testq	%rbx, %rbx
	je	.LBB48_12
	jmp	.LBB48_11
.LBB48_8:
.Ltmp687:
	movq	%rax, %r14
	movq	16(%rsp), %rdi
	cmpq	%r15, %rdi
	jne	.LBB48_9
# %bb.10:
	testq	%rbx, %rbx
	jne	.LBB48_11
.LBB48_12:                              # %_ZNSt10unique_ptrIcPFvPvEED2Ev.exit14
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB48_9:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i10
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	testq	%rbx, %rbx
	je	.LBB48_12
.LBB48_11:
	movq	%rbx, %rdi
	callq	free@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end48:
	.size	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, .Lfunc_end48-_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.p2align	2, 0x0
GCC_except_table48:
.Lexception26:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end26-.Lcst_begin26
.Lcst_begin26:
	.uleb128 .Lfunc_begin26-.Lfunc_begin26  # >> Call Site 1 <<
	.uleb128 .Ltmp682-.Lfunc_begin26        #   Call between .Lfunc_begin26 and .Ltmp682
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp682-.Lfunc_begin26        # >> Call Site 2 <<
	.uleb128 .Ltmp683-.Ltmp682              #   Call between .Ltmp682 and .Ltmp683
	.uleb128 .Ltmp684-.Lfunc_begin26        #     jumps to .Ltmp684
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp685-.Lfunc_begin26        # >> Call Site 3 <<
	.uleb128 .Ltmp686-.Ltmp685              #   Call between .Ltmp685 and .Ltmp686
	.uleb128 .Ltmp687-.Lfunc_begin26        #     jumps to .Ltmp687
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp686-.Lfunc_begin26        # >> Call Site 4 <<
	.uleb128 .Lfunc_end48-.Ltmp686          #   Call between .Ltmp686 and .Lfunc_end48
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end26:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_,"axG",@progbits,_ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_,comdat
	.hidden	_ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_ # -- Begin function _ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_
	.weak	_ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_
	.p2align	4, 0x90
	.type	_ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_,@function
_ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_: # @_ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, 8(%rsp)                   # 8-byte Spill
	xorl	%ebx, %ebx
	movq	%rdi, (%rsp)                    # 8-byte Spill
.LBB49_1:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm.exit
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB49_6 Depth 2
	movq	8(%rsp), %rax                   # 8-byte Reload
	movq	8(%rax), %r12
	movq	8(%rdi), %rdx
	movq	%rdx, %r15
	testq	%r12, %r12
	je	.LBB49_2
# %bb.3:                                #   in Loop: Header=BB49_1 Depth=1
	subq	%rbx, %rdx
	jbe	.LBB49_10
# %bb.4:                                #   in Loop: Header=BB49_1 Depth=1
	cmpq	%r12, %rdx
	jb	.LBB49_10
# %bb.5:                                # %.lr.ph.i.i
                                        #   in Loop: Header=BB49_1 Depth=1
	movq	8(%rsp), %rax                   # 8-byte Reload
	movq	(%rax), %rbp
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %rax
	leaq	(%rax,%r15), %r13
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	addq	%rax, %rbx
	movsbl	(%rbp), %r14d
	.p2align	4, 0x90
.LBB49_6:                               #   Parent Loop BB49_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	subq	%r12, %rdx
	incq	%rdx
	je	.LBB49_10
# %bb.7:                                # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i
                                        #   in Loop: Header=BB49_6 Depth=2
	movq	%rbx, %rdi
	movl	%r14d, %esi
	callq	memchr@PLT
	testq	%rax, %rax
	je	.LBB49_10
# %bb.8:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i
                                        #   in Loop: Header=BB49_6 Depth=2
	movq	%rax, %rbx
	movq	%rax, %rdi
	movq	%rbp, %rsi
	movq	%r12, %rdx
	callq	bcmp@PLT
	testl	%eax, %eax
	je	.LBB49_11
# %bb.9:                                #   in Loop: Header=BB49_6 Depth=2
	incq	%rbx
	movq	%r13, %rdx
	subq	%rbx, %rdx
	cmpq	%r12, %rdx
	jae	.LBB49_6
	jmp	.LBB49_10
	.p2align	4, 0x90
.LBB49_2:                               #   in Loop: Header=BB49_1 Depth=1
	cmpq	%rbx, %rdx
	jae	.LBB49_12
	jmp	.LBB49_10
.LBB49_11:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_m.exit
                                        #   in Loop: Header=BB49_1 Depth=1
	subq	16(%rsp), %rbx                  # 8-byte Folded Reload
	cmpq	$-1, %rbx
	je	.LBB49_10
.LBB49_12:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_m.exit.thread8
                                        #   in Loop: Header=BB49_1 Depth=1
	movq	%r15, %rax
	subq	%rbx, %rax
	jb	.LBB49_23
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i
                                        #   in Loop: Header=BB49_1 Depth=1
	movq	%rbx, %rcx
	cmpq	$-1, %r12
	movq	(%rsp), %rdi                    # 8-byte Reload
	je	.LBB49_22
# %bb.14:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i
                                        #   in Loop: Header=BB49_1 Depth=1
	testq	%r12, %r12
	je	.LBB49_1
# %bb.15:                               #   in Loop: Header=BB49_1 Depth=1
	cmpq	%r12, %rax
	cmovbq	%rax, %r12
	leaq	(%r12,%rbx), %rax
	cmpq	%rax, %r15
	sete	%cl
	testq	%r12, %r12
	sete	%dl
	orb	%cl, %dl
	jne	.LBB49_21
# %bb.16:                               #   in Loop: Header=BB49_1 Depth=1
	subq	%rax, %r15
	je	.LBB49_21
# %bb.17:                               #   in Loop: Header=BB49_1 Depth=1
	movq	%rdi, %r14
	movq	(%rdi), %rdi
	addq	%rbx, %rdi
	leaq	(%rdi,%r12), %rsi
	cmpq	$1, %r15
	jne	.LBB49_19
# %bb.18:                               #   in Loop: Header=BB49_1 Depth=1
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB49_20
.LBB49_19:                              #   in Loop: Header=BB49_1 Depth=1
	movq	%r15, %rdx
	callq	memmove@PLT
.LBB49_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm.exit.i
                                        #   in Loop: Header=BB49_1 Depth=1
	movq	%r14, %rdi
.LBB49_21:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm.exit.i
                                        #   in Loop: Header=BB49_1 Depth=1
	movq	8(%rdi), %rcx
	subq	%r12, %rcx
.LBB49_22:                              # %.sink.split.i
                                        #   in Loop: Header=BB49_1 Depth=1
	movq	%rcx, 8(%rdi)
	movq	(%rdi), %rax
	movb	$0, (%rax,%rcx)
	jmp	.LBB49_1
.LBB49_10:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_m.exit.thread
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB49_23:
	.cfi_def_cfa_offset 80
	leaq	.L.str.10(%rip), %rdi
	leaq	.L.str.51(%rip), %rsi
	movq	%rbx, %rdx
	movq	%r15, %rcx
	xorl	%eax, %eax
	callq	_ZSt24__throw_out_of_range_fmtPKcz@PLT
.Lfunc_end49:
	.size	_ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_, .Lfunc_end49-_ZN8pybind116detail9erase_allERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS6_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind1110cast_errorD0Ev,"axG",@progbits,_ZN8pybind1110cast_errorD0Ev,comdat
	.hidden	_ZN8pybind1110cast_errorD0Ev    # -- Begin function _ZN8pybind1110cast_errorD0Ev
	.weak	_ZN8pybind1110cast_errorD0Ev
	.p2align	4, 0x90
	.type	_ZN8pybind1110cast_errorD0Ev,@function
_ZN8pybind1110cast_errorD0Ev:           # @_ZN8pybind1110cast_errorD0Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	callq	_ZNSt13runtime_errorD2Ev@PLT
	movl	$16, %esi
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.Lfunc_end50:
	.size	_ZN8pybind1110cast_errorD0Ev, .Lfunc_end50-_ZN8pybind1110cast_errorD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK8pybind1110cast_error9set_errorEv,"axG",@progbits,_ZNK8pybind1110cast_error9set_errorEv,comdat
	.hidden	_ZNK8pybind1110cast_error9set_errorEv # -- Begin function _ZNK8pybind1110cast_error9set_errorEv
	.weak	_ZNK8pybind1110cast_error9set_errorEv
	.p2align	4, 0x90
	.type	_ZNK8pybind1110cast_error9set_errorEv,@function
_ZNK8pybind1110cast_error9set_errorEv:  # @_ZNK8pybind1110cast_error9set_errorEv
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	PyExc_RuntimeError@GOTPCREL(%rip), %rax
	movq	(%rax), %rbx
	movq	(%rdi), %rax
	callq	*16(%rax)
	movq	%rbx, %rdi
	movq	%rax, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	PyErr_SetString@PLT             # TAILCALL
.Lfunc_end51:
	.size	_ZNK8pybind1110cast_error9set_errorEv, .Lfunc_end51-_ZNK8pybind1110cast_error9set_errorEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind1118gil_scoped_acquire7dec_refEv,"axG",@progbits,_ZN8pybind1118gil_scoped_acquire7dec_refEv,comdat
	.hidden	_ZN8pybind1118gil_scoped_acquire7dec_refEv # -- Begin function _ZN8pybind1118gil_scoped_acquire7dec_refEv
	.weak	_ZN8pybind1118gil_scoped_acquire7dec_refEv
	.p2align	4, 0x90
	.type	_ZN8pybind1118gil_scoped_acquire7dec_refEv,@function
_ZN8pybind1118gil_scoped_acquire7dec_refEv: # @_ZN8pybind1118gil_scoped_acquire7dec_refEv
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	(%rdi), %rax
	decl	120(%rax)
	callq	_PyThreadState_UncheckedGet@PLT
	movq	(%rbx), %rdi
	cmpq	%rdi, %rax
	jne	.LBB52_8
# %bb.1:
	cmpl	$0, 120(%rdi)
	js	.LBB52_9
# %bb.2:
	je	.LBB52_3
# %bb.7:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB52_3:
	.cfi_def_cfa_offset 16
	cmpb	$0, 8(%rbx)
	je	.LBB52_10
# %bb.4:
	callq	PyThreadState_Clear@PLT
	cmpb	$1, 9(%rbx)
	jne	.LBB52_6
# %bb.5:
	callq	PyThreadState_DeleteCurrent@PLT
.LBB52_6:
	callq	_ZN8pybind116detail13get_internalsEv
	leaq	432(%rax), %rdi
	xorl	%esi, %esi
	callq	PyThread_tss_set@PLT
	movb	$0, 8(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB52_8:
	.cfi_def_cfa_offset 16
	leaq	.L.str.52(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.LBB52_9:
	leaq	.L.str.53(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.LBB52_10:
	leaq	.L.str.54(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Lfunc_end52:
	.size	_ZN8pybind1118gil_scoped_acquire7dec_refEv, .Lfunc_end52-_ZN8pybind1118gil_scoped_acquire7dec_refEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail20internals_pp_managerINS0_9internalsEEC2EPKcPFvPS2_E,"axG",@progbits,_ZN8pybind116detail20internals_pp_managerINS0_9internalsEEC2EPKcPFvPS2_E,comdat
	.hidden	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEEC2EPKcPFvPS2_E # -- Begin function _ZN8pybind116detail20internals_pp_managerINS0_9internalsEEC2EPKcPFvPS2_E
	.weak	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEEC2EPKcPFvPS2_E
	.p2align	4, 0x90
	.type	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEEC2EPKcPFvPS2_E,@function
_ZN8pybind116detail20internals_pp_managerINS0_9internalsEEC2EPKcPFvPS2_E: # @_ZN8pybind116detail20internals_pp_managerINS0_9internalsEEC2EPKcPFvPS2_E
.Lfunc_begin27:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception27
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	movq	%rsi, (%rdi)
	movq	%rdx, 8(%rdi)
	leaq	16(%rdi), %rbx
	movq	$0, 16(%rdi)
	movq	%rbx, %rdi
	callq	PyThread_tss_create@PLT
	testl	%eax, %eax
	jne	.LBB53_9
# %bb.1:                                # %_ZN8pybind1123thread_specific_storageI3_isEC2Ev.exit
	movq	$0, 24(%r14)
	addq	$24, %r14
.Ltmp688:
	movq	%r14, %rdi
	callq	PyThread_tss_create@PLT
.Ltmp689:
# %bb.2:                                # %.noexc
	testl	%eax, %eax
	jne	.LBB53_3
# %bb.5:                                # %_ZN8pybind1123thread_specific_storageISt10unique_ptrINS_6detail9internalsESt14default_deleteIS3_EEEC2Ev.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB53_9:
	.cfi_def_cfa_offset 32
	leaq	.L.str.56(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.LBB53_3:
.Ltmp690:
	leaq	.L.str.56(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp691:
# %bb.4:                                # %.noexc4
.LBB53_7:
.Ltmp692:
	movq	%rax, %r14
.Ltmp693:
	movq	%rbx, %rdi
	callq	PyThread_tss_delete@PLT
.Ltmp694:
# %bb.8:                                # %_ZN8pybind1123thread_specific_storageI3_isED2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB53_6:
.Ltmp695:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end53:
	.size	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEEC2EPKcPFvPS2_E, .Lfunc_end53-_ZN8pybind116detail20internals_pp_managerINS0_9internalsEEC2EPKcPFvPS2_E
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail20internals_pp_managerINS0_9internalsEEC2EPKcPFvPS2_E,"aG",@progbits,_ZN8pybind116detail20internals_pp_managerINS0_9internalsEEC2EPKcPFvPS2_E,comdat
	.p2align	2, 0x0
GCC_except_table53:
.Lexception27:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase15-.Lttbaseref15
.Lttbaseref15:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end27-.Lcst_begin27
.Lcst_begin27:
	.uleb128 .Lfunc_begin27-.Lfunc_begin27  # >> Call Site 1 <<
	.uleb128 .Ltmp688-.Lfunc_begin27        #   Call between .Lfunc_begin27 and .Ltmp688
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp688-.Lfunc_begin27        # >> Call Site 2 <<
	.uleb128 .Ltmp689-.Ltmp688              #   Call between .Ltmp688 and .Ltmp689
	.uleb128 .Ltmp692-.Lfunc_begin27        #     jumps to .Ltmp692
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp689-.Lfunc_begin27        # >> Call Site 3 <<
	.uleb128 .Ltmp690-.Ltmp689              #   Call between .Ltmp689 and .Ltmp690
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp690-.Lfunc_begin27        # >> Call Site 4 <<
	.uleb128 .Ltmp691-.Ltmp690              #   Call between .Ltmp690 and .Ltmp691
	.uleb128 .Ltmp692-.Lfunc_begin27        #     jumps to .Ltmp692
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp693-.Lfunc_begin27        # >> Call Site 5 <<
	.uleb128 .Ltmp694-.Ltmp693              #   Call between .Ltmp693 and .Ltmp694
	.uleb128 .Ltmp695-.Lfunc_begin27        #     jumps to .Ltmp695
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp694-.Lfunc_begin27        # >> Call Site 6 <<
	.uleb128 .Lfunc_end53-.Ltmp694          #   Call between .Ltmp694 and .Lfunc_end53
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end27:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase15:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail20internals_pp_managerINS0_9internalsEED2Ev,"axG",@progbits,_ZN8pybind116detail20internals_pp_managerINS0_9internalsEED2Ev,comdat
	.hidden	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEED2Ev # -- Begin function _ZN8pybind116detail20internals_pp_managerINS0_9internalsEED2Ev
	.weak	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEED2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEED2Ev,@function
_ZN8pybind116detail20internals_pp_managerINS0_9internalsEED2Ev: # @_ZN8pybind116detail20internals_pp_managerINS0_9internalsEED2Ev
.Lfunc_begin28:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception28
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	addq	$24, %rdi
.Ltmp696:
	callq	PyThread_tss_delete@PLT
.Ltmp697:
# %bb.1:                                # %_ZN8pybind1123thread_specific_storageISt10unique_ptrINS_6detail9internalsESt14default_deleteIS3_EEED2Ev.exit
	addq	$16, %rbx
.Ltmp699:
	movq	%rbx, %rdi
	callq	PyThread_tss_delete@PLT
.Ltmp700:
# %bb.2:                                # %_ZN8pybind1123thread_specific_storageI3_isED2Ev.exit
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB54_4:
	.cfi_def_cfa_offset 16
.Ltmp701:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB54_3:
.Ltmp698:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end54:
	.size	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEED2Ev, .Lfunc_end54-_ZN8pybind116detail20internals_pp_managerINS0_9internalsEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail20internals_pp_managerINS0_9internalsEED2Ev,"aG",@progbits,_ZN8pybind116detail20internals_pp_managerINS0_9internalsEED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table54:
.Lexception28:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase16-.Lttbaseref16
.Lttbaseref16:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end28-.Lcst_begin28
.Lcst_begin28:
	.uleb128 .Ltmp696-.Lfunc_begin28        # >> Call Site 1 <<
	.uleb128 .Ltmp697-.Ltmp696              #   Call between .Ltmp696 and .Ltmp697
	.uleb128 .Ltmp698-.Lfunc_begin28        #     jumps to .Ltmp698
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp699-.Lfunc_begin28        # >> Call Site 2 <<
	.uleb128 .Ltmp700-.Ltmp699              #   Call between .Ltmp699 and .Ltmp700
	.uleb128 .Ltmp701-.Lfunc_begin28        #     jumps to .Ltmp701
	.byte	1                               #   On action: 1
.Lcst_end28:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase16:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail20internals_pp_managerINS0_9internalsEE6get_ppEv,"axG",@progbits,_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE6get_ppEv,comdat
	.hidden	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE6get_ppEv # -- Begin function _ZN8pybind116detail20internals_pp_managerINS0_9internalsEE6get_ppEv
	.weak	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE6get_ppEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE6get_ppEv,@function
_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE6get_ppEv: # @_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE6get_ppEv
.Lfunc_begin29:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception29
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movl	_ZZN8pybind116detail25get_num_interpreters_seenEvE7counter(%rip), %eax
	cmpl	$2, %eax
	jl	.LBB55_14
# %bb.1:
	callq	_PyThreadState_UncheckedGet@PLT
	testq	%rax, %rax
	je	.LBB55_9
# %bb.2:
	movq	%rax, %r14
	movq	16(%rax), %r15
	leaq	16(%rbx), %rdi
	callq	PyThread_tss_get@PLT
	cmpq	%rax, %r15
	je	.LBB55_8
# %bb.3:
	callq	PyGILState_Ensure@PLT
	movl	%eax, %ebp
	movq	%r14, %rax
	jmp	.LBB55_4
.LBB55_14:
	movq	32(%rbx), %rax
	testq	%rax, %rax
	jne	.LBB55_18
# %bb.15:
	callq	PyGILState_Ensure@PLT
	movl	%eax, %ebp
.Ltmp702:
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE30get_or_create_pp_in_state_dictEv
.Ltmp703:
# %bb.16:
	movq	%rax, 32(%rbx)
.Ltmp708:
	movl	%ebp, %edi
	callq	PyGILState_Release@PLT
.Ltmp709:
# %bb.17:                               # %_ZN8pybind1125gil_scoped_acquire_simpleD2Ev.exit15
	movq	32(%rbx), %rax
.LBB55_18:
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB55_9:
	.cfi_def_cfa_offset 48
	callq	PyGILState_Ensure@PLT
	movl	%eax, %ebp
.Ltmp711:
	callq	_PyThreadState_UncheckedGet@PLT
.Ltmp712:
.LBB55_4:                               # %_ZN8pybind116detail26get_thread_state_uncheckedEv.exit
	movq	16(%rax), %rsi
	leaq	16(%rbx), %rdi
.Ltmp713:
	callq	PyThread_tss_set@PLT
.Ltmp714:
# %bb.5:                                # %_ZN8pybind1123thread_specific_storageI3_isEaSEPS1_.exit
.Ltmp715:
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE30get_or_create_pp_in_state_dictEv
.Ltmp716:
# %bb.6:
	leaq	24(%rbx), %rdi
.Ltmp717:
	movq	%rax, %rsi
	callq	PyThread_tss_set@PLT
.Ltmp718:
# %bb.7:                                # %_ZN8pybind1123thread_specific_storageISt10unique_ptrINS_6detail9internalsESt14default_deleteIS3_EEEaSEPS6_.exit
.Ltmp723:
	movl	%ebp, %edi
	callq	PyGILState_Release@PLT
.Ltmp724:
.LBB55_8:                               # %_ZN8pybind1125gil_scoped_acquire_simpleD2Ev.exit14
	addq	$24, %rbx
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	PyThread_tss_get@PLT            # TAILCALL
.LBB55_21:
	.cfi_def_cfa_offset 48
.Ltmp710:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB55_19:
.Ltmp704:
	movq	%rax, %rbx
.Ltmp705:
	movl	%ebp, %edi
	callq	PyGILState_Release@PLT
.Ltmp706:
	jmp	.LBB55_11
.LBB55_20:
.Ltmp707:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB55_13:
.Ltmp725:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB55_10:
.Ltmp719:
	movq	%rax, %rbx
.Ltmp720:
	movl	%ebp, %edi
	callq	PyGILState_Release@PLT
.Ltmp721:
.LBB55_11:                              # %_ZN8pybind1125gil_scoped_acquire_simpleD2Ev.exit
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB55_12:
.Ltmp722:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end55:
	.size	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE6get_ppEv, .Lfunc_end55-_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE6get_ppEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail20internals_pp_managerINS0_9internalsEE6get_ppEv,"aG",@progbits,_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE6get_ppEv,comdat
	.p2align	2, 0x0
GCC_except_table55:
.Lexception29:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase17-.Lttbaseref17
.Lttbaseref17:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end29-.Lcst_begin29
.Lcst_begin29:
	.uleb128 .Lfunc_begin29-.Lfunc_begin29  # >> Call Site 1 <<
	.uleb128 .Ltmp702-.Lfunc_begin29        #   Call between .Lfunc_begin29 and .Ltmp702
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp702-.Lfunc_begin29        # >> Call Site 2 <<
	.uleb128 .Ltmp703-.Ltmp702              #   Call between .Ltmp702 and .Ltmp703
	.uleb128 .Ltmp704-.Lfunc_begin29        #     jumps to .Ltmp704
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp708-.Lfunc_begin29        # >> Call Site 3 <<
	.uleb128 .Ltmp709-.Ltmp708              #   Call between .Ltmp708 and .Ltmp709
	.uleb128 .Ltmp710-.Lfunc_begin29        #     jumps to .Ltmp710
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp709-.Lfunc_begin29        # >> Call Site 4 <<
	.uleb128 .Ltmp711-.Ltmp709              #   Call between .Ltmp709 and .Ltmp711
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp711-.Lfunc_begin29        # >> Call Site 5 <<
	.uleb128 .Ltmp718-.Ltmp711              #   Call between .Ltmp711 and .Ltmp718
	.uleb128 .Ltmp719-.Lfunc_begin29        #     jumps to .Ltmp719
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp723-.Lfunc_begin29        # >> Call Site 6 <<
	.uleb128 .Ltmp724-.Ltmp723              #   Call between .Ltmp723 and .Ltmp724
	.uleb128 .Ltmp725-.Lfunc_begin29        #     jumps to .Ltmp725
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp724-.Lfunc_begin29        # >> Call Site 7 <<
	.uleb128 .Ltmp705-.Ltmp724              #   Call between .Ltmp724 and .Ltmp705
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp705-.Lfunc_begin29        # >> Call Site 8 <<
	.uleb128 .Ltmp706-.Ltmp705              #   Call between .Ltmp705 and .Ltmp706
	.uleb128 .Ltmp707-.Lfunc_begin29        #     jumps to .Ltmp707
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp720-.Lfunc_begin29        # >> Call Site 9 <<
	.uleb128 .Ltmp721-.Ltmp720              #   Call between .Ltmp720 and .Ltmp721
	.uleb128 .Ltmp722-.Lfunc_begin29        #     jumps to .Ltmp722
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp721-.Lfunc_begin29        # >> Call Site 10 <<
	.uleb128 .Lfunc_end55-.Ltmp721          #   Call between .Ltmp721 and .Lfunc_end55
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end29:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase17:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail9internalsC2Ev,"axG",@progbits,_ZN8pybind116detail9internalsC2Ev,comdat
	.hidden	_ZN8pybind116detail9internalsC2Ev # -- Begin function _ZN8pybind116detail9internalsC2Ev
	.weak	_ZN8pybind116detail9internalsC2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind116detail9internalsC2Ev,@function
_ZN8pybind116detail9internalsC2Ev:      # @_ZN8pybind116detail9internalsC2Ev
.Lfunc_begin30:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception30
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	leaq	48(%rdi), %rax
	movq	%rax, (%rdi)
	movq	$1, 8(%rdi)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rdi)
	movl	$1065353216, 32(%rdi)           # imm = 0x3F800000
	movups	%xmm0, 40(%rdi)
	leaq	104(%rdi), %rax
	movq	%rax, 56(%rdi)
	movq	$1, 64(%rdi)
	movups	%xmm0, 72(%rdi)
	movl	$1065353216, 88(%rdi)           # imm = 0x3F800000
	movups	%xmm0, 96(%rdi)
	leaq	160(%rdi), %rax
	movq	%rax, 112(%rdi)
	movq	$1, 120(%rdi)
	movups	%xmm0, 128(%rdi)
	movl	$1065353216, 144(%rdi)          # imm = 0x3F800000
	movups	%xmm0, 152(%rdi)
	leaq	216(%rdi), %rax
	movq	%rax, 168(%rdi)
	movq	$1, 176(%rdi)
	movups	%xmm0, 184(%rdi)
	movl	$1065353216, 200(%rdi)          # imm = 0x3F800000
	movups	%xmm0, 208(%rdi)
	leaq	272(%rdi), %rax
	movq	%rax, 224(%rdi)
	movq	$1, 232(%rdi)
	movups	%xmm0, 240(%rdi)
	movl	$1065353216, 256(%rdi)          # imm = 0x3F800000
	movups	%xmm0, 264(%rdi)
	leaq	328(%rdi), %rax
	movq	%rax, 280(%rdi)
	movq	$1, 288(%rdi)
	movups	%xmm0, 296(%rdi)
	movl	$1065353216, 312(%rdi)          # imm = 0x3F800000
	leaq	392(%rdi), %rax
	movups	%xmm0, 320(%rdi)
	movq	$0, 336(%rdi)
	movq	%rax, 344(%rdi)
	movq	$1, 352(%rdi)
	movups	%xmm0, 360(%rdi)
	movl	$1065353216, 376(%rdi)          # imm = 0x3F800000
	movups	%xmm0, 384(%rdi)
	movq	$0, 400(%rdi)
.Ltmp726:
	callq	_ZN8pybind116detail25make_static_property_typeEv
.Ltmp727:
# %bb.1:
	movq	%rax, 408(%rbx)
.Ltmp728:
	callq	_ZN8pybind116detail22make_default_metaclassEv
.Ltmp729:
# %bb.2:
	movq	%rax, 416(%rbx)
	leaq	432(%rbx), %r14
	xorps	%xmm0, %xmm0
	movups	%xmm0, 424(%rbx)
.Ltmp730:
	movq	%r14, %rdi
	callq	PyThread_tss_create@PLT
.Ltmp731:
# %bb.3:                                # %.noexc
	testl	%eax, %eax
	jne	.LBB56_4
# %bb.6:                                # %_ZN8pybind1123thread_specific_storageI3_tsEC2Ev.exit
	leaq	440(%rbx), %r12
	movq	$0, 440(%rbx)
.Ltmp735:
	movq	%r12, %rdi
	callq	PyThread_tss_create@PLT
.Ltmp736:
# %bb.7:                                # %.noexc11
	testl	%eax, %eax
	jne	.LBB56_8
# %bb.10:                               # %_ZN8pybind1123thread_specific_storageINS_6detail19loader_life_supportEEC2Ev.exit
	movq	$0, 448(%rbx)
	leaq	504(%rbx), %rax
	movq	%rax, 456(%rbx)
	movq	$1, 464(%rbx)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 472(%rbx)
	movl	$1065353216, 488(%rbx)          # imm = 0x3F800000
	movups	%xmm0, 496(%rbx)
.Ltmp740:
	callq	PyThreadState_Get@PLT
.Ltmp741:
# %bb.11:
.Ltmp742:
	movq	%rax, %r15
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	PyThread_tss_set@PLT
.Ltmp743:
# %bb.12:                               # %_ZN8pybind1123thread_specific_storageI3_tsEaSEPS1_.exit
	movq	16(%r15), %rax
	movq	%rax, 448(%rbx)
.Ltmp745:
	movl	$16, %edi
	callq	_Znwm@PLT
.Ltmp746:
# %bb.13:
	leaq	_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE(%rip), %rcx
	movq	%rcx, 8(%rax)
	movq	336(%rbx), %rcx
	movq	%rcx, (%rax)
	movq	%rax, 336(%rbx)
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB56_4:
	.cfi_def_cfa_offset 80
.Ltmp732:
	leaq	.L.str.56(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp733:
# %bb.5:                                # %.noexc10
.LBB56_8:
.Ltmp737:
	leaq	.L.str.56(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp738:
# %bb.9:                                # %.noexc12
.LBB56_15:
.Ltmp747:
	jmp	.LBB56_16
.LBB56_14:
.Ltmp744:
.LBB56_16:
	movq	%rax, 8(%rsp)                   # 8-byte Spill
	leaq	456(%rbx), %rdi
	callq	_ZNSt13unordered_mapISt10type_indexP7_objectSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S2_EEED2Ev@PLT
.Ltmp748:
	movq	%r12, %rdi
	callq	PyThread_tss_delete@PLT
.Ltmp749:
	jmp	.LBB56_19
.LBB56_17:
.Ltmp750:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB56_18:
.Ltmp739:
	movq	%rax, 8(%rsp)                   # 8-byte Spill
.LBB56_19:                              # %_ZN8pybind1123thread_specific_storageINS_6detail19loader_life_supportEED2Ev.exit
.Ltmp751:
	movq	%r14, %rdi
	callq	PyThread_tss_delete@PLT
.Ltmp752:
	jmp	.LBB56_22
.LBB56_20:
.Ltmp753:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB56_21:
.Ltmp734:
	movq	%rax, 8(%rsp)                   # 8-byte Spill
.LBB56_22:                              # %_ZN8pybind1123thread_specific_storageI3_tsED2Ev.exit
	leaq	56(%rbx), %rax
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	leaq	112(%rbx), %r12
	leaq	168(%rbx), %r13
	leaq	224(%rbx), %rbp
	leaq	280(%rbx), %r15
	leaq	344(%rbx), %r14
	leaq	400(%rbx), %rdi
	callq	_ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@PLT
	movq	%r14, %rdi
	callq	_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev@PLT
	movq	336(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB56_24
	.p2align	4, 0x90
.LBB56_23:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r14
	movl	$16, %esi
	callq	_ZdlPvm@PLT
	movq	%r14, %rdi
	testq	%r14, %r14
	jne	.LBB56_23
.LBB56_24:                              # %_ZNSt14_Fwd_list_baseIPFvNSt15__exception_ptr13exception_ptrEESaIS3_EED2Ev.exit
	movq	$0, 336(%rbx)
	movq	%r15, %rdi
	callq	_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev@PLT
	movq	%rbp, %rdi
	callq	_ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev@PLT
	movq	%r13, %rdi
	callq	_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev
	movq	%r12, %rdi
	callq	_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev
	movq	16(%rsp), %rdi                  # 8-byte Reload
	callq	_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev
	movq	%rbx, %rdi
	callq	_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev
	movq	8(%rsp), %rdi                   # 8-byte Reload
	callq	_Unwind_Resume@PLT
.Lfunc_end56:
	.size	_ZN8pybind116detail9internalsC2Ev, .Lfunc_end56-_ZN8pybind116detail9internalsC2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail9internalsC2Ev,"aG",@progbits,_ZN8pybind116detail9internalsC2Ev,comdat
	.p2align	2, 0x0
GCC_except_table56:
.Lexception30:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase18-.Lttbaseref18
.Lttbaseref18:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end30-.Lcst_begin30
.Lcst_begin30:
	.uleb128 .Ltmp726-.Lfunc_begin30        # >> Call Site 1 <<
	.uleb128 .Ltmp731-.Ltmp726              #   Call between .Ltmp726 and .Ltmp731
	.uleb128 .Ltmp734-.Lfunc_begin30        #     jumps to .Ltmp734
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp735-.Lfunc_begin30        # >> Call Site 2 <<
	.uleb128 .Ltmp736-.Ltmp735              #   Call between .Ltmp735 and .Ltmp736
	.uleb128 .Ltmp739-.Lfunc_begin30        #     jumps to .Ltmp739
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp740-.Lfunc_begin30        # >> Call Site 3 <<
	.uleb128 .Ltmp743-.Ltmp740              #   Call between .Ltmp740 and .Ltmp743
	.uleb128 .Ltmp744-.Lfunc_begin30        #     jumps to .Ltmp744
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp745-.Lfunc_begin30        # >> Call Site 4 <<
	.uleb128 .Ltmp746-.Ltmp745              #   Call between .Ltmp745 and .Ltmp746
	.uleb128 .Ltmp747-.Lfunc_begin30        #     jumps to .Ltmp747
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp732-.Lfunc_begin30        # >> Call Site 5 <<
	.uleb128 .Ltmp733-.Ltmp732              #   Call between .Ltmp732 and .Ltmp733
	.uleb128 .Ltmp734-.Lfunc_begin30        #     jumps to .Ltmp734
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp737-.Lfunc_begin30        # >> Call Site 6 <<
	.uleb128 .Ltmp738-.Ltmp737              #   Call between .Ltmp737 and .Ltmp738
	.uleb128 .Ltmp739-.Lfunc_begin30        #     jumps to .Ltmp739
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp748-.Lfunc_begin30        # >> Call Site 7 <<
	.uleb128 .Ltmp749-.Ltmp748              #   Call between .Ltmp748 and .Ltmp749
	.uleb128 .Ltmp750-.Lfunc_begin30        #     jumps to .Ltmp750
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp751-.Lfunc_begin30        # >> Call Site 8 <<
	.uleb128 .Ltmp752-.Ltmp751              #   Call between .Ltmp751 and .Ltmp752
	.uleb128 .Ltmp753-.Lfunc_begin30        #     jumps to .Ltmp753
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp752-.Lfunc_begin30        # >> Call Site 9 <<
	.uleb128 .Lfunc_end56-.Ltmp752          #   Call between .Ltmp752 and .Lfunc_end56
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end30:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase18:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail21make_object_base_typeEP11_typeobject,"axG",@progbits,_ZN8pybind116detail21make_object_base_typeEP11_typeobject,comdat
	.hidden	_ZN8pybind116detail21make_object_base_typeEP11_typeobject # -- Begin function _ZN8pybind116detail21make_object_base_typeEP11_typeobject
	.weak	_ZN8pybind116detail21make_object_base_typeEP11_typeobject
	.p2align	4, 0x90
	.type	_ZN8pybind116detail21make_object_base_typeEP11_typeobject,@function
_ZN8pybind116detail21make_object_base_typeEP11_typeobject: # @_ZN8pybind116detail21make_object_base_typeEP11_typeobject
.Lfunc_begin31:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception31
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$72, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	leaq	.L.str.173(%rip), %r14
	movq	%r14, %rdi
	callq	PyUnicode_FromString@PLT
	movq	%rax, (%rsp)
.Ltmp754:
	movq	%rbx, %rdi
	xorl	%esi, %esi
	callq	*304(%rbx)
.Ltmp755:
# %bb.1:
	movq	%rax, %rbx
	testq	%rax, %rax
	je	.LBB57_2
# %bb.4:
.Ltmp756:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp757:
# %bb.5:
	movq	(%rax), %rax
	movq	%rax, 856(%rbx)
.Ltmp758:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp759:
# %bb.6:
	movq	(%rax), %rax
	movq	%rax, 872(%rbx)
	movq	%r14, 24(%rbx)
	movq	PyBaseObject_Type@GOTPCREL(%rip), %rax
	movl	(%rax), %ecx
	incl	%ecx
	je	.LBB57_8
# %bb.7:
	movl	%ecx, (%rax)
.LBB57_8:                               # %_ZN8pybind116detail11type_increfEP11_typeobject.exit
	movq	%rax, 256(%rbx)
	movq	$56, 32(%rbx)
	movq	$1536, 168(%rbx)                # imm = 0x600
	leaq	pybind11_object_new(%rip), %rax
	movq	%rax, 312(%rbx)
	leaq	pybind11_object_init(%rip), %rax
	movq	%rax, 296(%rbx)
	leaq	pybind11_object_dealloc(%rip), %rax
	movq	%rax, 48(%rbx)
	movq	$40, 208(%rbx)
.Ltmp760:
	movq	%rbx, %rdi
	callq	PyType_Ready@PLT
.Ltmp761:
# %bb.9:
	testl	%eax, %eax
	js	.LBB57_10
# %bb.21:
.Ltmp763:
	leaq	.L.str.66(%rip), %rsi
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2EPKc
.Ltmp764:
# %bb.22:
	movq	8(%rsp), %rdx
.Ltmp766:
	leaq	.L.str.65(%rip), %rsi
	movq	%rbx, %rdi
	callq	PyObject_SetAttrString@PLT
.Ltmp767:
# %bb.23:                               # %.noexc
	testl	%eax, %eax
	jne	.LBB57_24
# %bb.29:                               # %_ZN8pybind117setattrENS_6handleEPKcS0_.exit
.Ltmp777:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp778:
# %bb.30:                               # %_ZN8pybind116objectD2Ev.exit
	testb	$64, 169(%rbx)
	jne	.LBB57_31
# %bb.37:
.Ltmp780:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp781:
# %bb.38:                               # %_ZN8pybind116objectD2Ev.exit37
	movq	%rbx, %rax
	addq	$72, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB57_2:
	.cfi_def_cfa_offset 96
.Ltmp792:
	leaq	.L.str.174(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp793:
# %bb.3:
.LBB57_10:
.Ltmp783:
	leaq	40(%rsp), %rdi
	callq	_ZN8pybind116detail12error_stringB5cxx11Ev
.Ltmp784:
# %bb.11:
.Ltmp786:
	leaq	.L.str.175(%rip), %rsi
	leaq	8(%rsp), %rdi
	leaq	40(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp787:
# %bb.12:
.Ltmp789:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp790:
# %bb.13:
.LBB57_24:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp768:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp769:
# %bb.25:
.Ltmp771:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp772:
# %bb.26:                               # %.noexc35
.LBB57_31:
	leaq	.L.str.176(%rip), %rdi
	leaq	.L.str.177(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind116detail21make_object_base_typeEP11_typeobject(%rip), %rcx
	movl	$550, %edx                      # imm = 0x226
	callq	__assert_fail@PLT
.LBB57_17:
.Ltmp791:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB57_19
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB57_19
.LBB57_16:
.Ltmp788:
	movq	%rax, %rbx
.LBB57_19:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB57_41
# %bb.20:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i32
	movq	56(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB57_41
.LBB57_27:
.Ltmp770:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB57_33
.LBB57_15:
.Ltmp785:
	jmp	.LBB57_40
.LBB57_36:
.Ltmp782:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB57_28:
.Ltmp779:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB57_35:
.Ltmp765:
	jmp	.LBB57_40
.LBB57_14:
.Ltmp762:
	jmp	.LBB57_40
.LBB57_32:
.Ltmp773:
	movq	%rax, %rbx
.LBB57_33:                              # %.body
.Ltmp774:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp775:
	jmp	.LBB57_41
.LBB57_34:
.Ltmp776:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB57_39:
.Ltmp794:
.LBB57_40:
	movq	%rax, %rbx
.LBB57_41:
.Ltmp795:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp796:
# %bb.42:                               # %_ZN8pybind116objectD2Ev.exit38
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB57_43:
.Ltmp797:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end57:
	.size	_ZN8pybind116detail21make_object_base_typeEP11_typeobject, .Lfunc_end57-_ZN8pybind116detail21make_object_base_typeEP11_typeobject
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail21make_object_base_typeEP11_typeobject,"aG",@progbits,_ZN8pybind116detail21make_object_base_typeEP11_typeobject,comdat
	.p2align	2, 0x0
GCC_except_table57:
.Lexception31:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase19-.Lttbaseref19
.Lttbaseref19:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end31-.Lcst_begin31
.Lcst_begin31:
	.uleb128 .Lfunc_begin31-.Lfunc_begin31  # >> Call Site 1 <<
	.uleb128 .Ltmp754-.Lfunc_begin31        #   Call between .Lfunc_begin31 and .Ltmp754
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp754-.Lfunc_begin31        # >> Call Site 2 <<
	.uleb128 .Ltmp759-.Ltmp754              #   Call between .Ltmp754 and .Ltmp759
	.uleb128 .Ltmp794-.Lfunc_begin31        #     jumps to .Ltmp794
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp760-.Lfunc_begin31        # >> Call Site 3 <<
	.uleb128 .Ltmp761-.Ltmp760              #   Call between .Ltmp760 and .Ltmp761
	.uleb128 .Ltmp762-.Lfunc_begin31        #     jumps to .Ltmp762
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp763-.Lfunc_begin31        # >> Call Site 4 <<
	.uleb128 .Ltmp764-.Ltmp763              #   Call between .Ltmp763 and .Ltmp764
	.uleb128 .Ltmp765-.Lfunc_begin31        #     jumps to .Ltmp765
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp766-.Lfunc_begin31        # >> Call Site 5 <<
	.uleb128 .Ltmp767-.Ltmp766              #   Call between .Ltmp766 and .Ltmp767
	.uleb128 .Ltmp773-.Lfunc_begin31        #     jumps to .Ltmp773
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp777-.Lfunc_begin31        # >> Call Site 6 <<
	.uleb128 .Ltmp778-.Ltmp777              #   Call between .Ltmp777 and .Ltmp778
	.uleb128 .Ltmp779-.Lfunc_begin31        #     jumps to .Ltmp779
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp780-.Lfunc_begin31        # >> Call Site 7 <<
	.uleb128 .Ltmp781-.Ltmp780              #   Call between .Ltmp780 and .Ltmp781
	.uleb128 .Ltmp782-.Lfunc_begin31        #     jumps to .Ltmp782
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp792-.Lfunc_begin31        # >> Call Site 8 <<
	.uleb128 .Ltmp793-.Ltmp792              #   Call between .Ltmp792 and .Ltmp793
	.uleb128 .Ltmp794-.Lfunc_begin31        #     jumps to .Ltmp794
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp783-.Lfunc_begin31        # >> Call Site 9 <<
	.uleb128 .Ltmp784-.Ltmp783              #   Call between .Ltmp783 and .Ltmp784
	.uleb128 .Ltmp785-.Lfunc_begin31        #     jumps to .Ltmp785
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp786-.Lfunc_begin31        # >> Call Site 10 <<
	.uleb128 .Ltmp787-.Ltmp786              #   Call between .Ltmp786 and .Ltmp787
	.uleb128 .Ltmp788-.Lfunc_begin31        #     jumps to .Ltmp788
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp789-.Lfunc_begin31        # >> Call Site 11 <<
	.uleb128 .Ltmp790-.Ltmp789              #   Call between .Ltmp789 and .Ltmp790
	.uleb128 .Ltmp791-.Lfunc_begin31        #     jumps to .Ltmp791
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp790-.Lfunc_begin31        # >> Call Site 12 <<
	.uleb128 .Ltmp768-.Ltmp790              #   Call between .Ltmp790 and .Ltmp768
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp768-.Lfunc_begin31        # >> Call Site 13 <<
	.uleb128 .Ltmp769-.Ltmp768              #   Call between .Ltmp768 and .Ltmp769
	.uleb128 .Ltmp770-.Lfunc_begin31        #     jumps to .Ltmp770
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp771-.Lfunc_begin31        # >> Call Site 14 <<
	.uleb128 .Ltmp772-.Ltmp771              #   Call between .Ltmp771 and .Ltmp772
	.uleb128 .Ltmp773-.Lfunc_begin31        #     jumps to .Ltmp773
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp772-.Lfunc_begin31        # >> Call Site 15 <<
	.uleb128 .Ltmp774-.Ltmp772              #   Call between .Ltmp772 and .Ltmp774
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp774-.Lfunc_begin31        # >> Call Site 16 <<
	.uleb128 .Ltmp775-.Ltmp774              #   Call between .Ltmp774 and .Ltmp775
	.uleb128 .Ltmp776-.Lfunc_begin31        #     jumps to .Ltmp776
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp795-.Lfunc_begin31        # >> Call Site 17 <<
	.uleb128 .Ltmp796-.Ltmp795              #   Call between .Ltmp795 and .Ltmp796
	.uleb128 .Ltmp797-.Lfunc_begin31        #     jumps to .Ltmp797
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp796-.Lfunc_begin31        # >> Call Site 18 <<
	.uleb128 .Lfunc_end57-.Ltmp796          #   Call between .Ltmp796 and .Lfunc_end57
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end31:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase19:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail20internals_pp_managerINS0_9internalsEE30get_or_create_pp_in_state_dictEv,"axG",@progbits,_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE30get_or_create_pp_in_state_dictEv,comdat
	.hidden	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE30get_or_create_pp_in_state_dictEv # -- Begin function _ZN8pybind116detail20internals_pp_managerINS0_9internalsEE30get_or_create_pp_in_state_dictEv
	.weak	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE30get_or_create_pp_in_state_dictEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE30get_or_create_pp_in_state_dictEv,@function
_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE30get_or_create_pp_in_state_dictEv: # @_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE30get_or_create_pp_in_state_dictEv
.Lfunc_begin32:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception32
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$96, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	leaq	72(%rsp), %rsi
	leaq	80(%rsp), %rdx
	leaq	64(%rsp), %rdi
	callq	PyErr_Fetch@PLT
.Ltmp798:
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind116detail21get_python_state_dictEv
.Ltmp799:
# %bb.1:
.Ltmp801:
	movq	%rsp, %rdi
	leaq	32(%rsp), %rsi
	callq	_ZN8pybind114dictC2EONS_6objectE
.Ltmp802:
# %bb.2:
.Ltmp807:
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp808:
# %bb.3:                                # %_ZN8pybind116objectD2Ev.exit
	movq	(%rsp), %rdi
	movq	(%r14), %rsi
.Ltmp810:
	callq	_ZN8pybind116detail18dict_getitemstringEP7_objectPKc
.Ltmp811:
# %bb.4:                                # %.noexc
	testq	%rax, %rax
	je	.LBB58_12
# %bb.5:                                # %.split.i
	movl	(%rax), %ecx
	incl	%ecx
	je	.LBB58_7
# %bb.6:
	movl	%ecx, (%rax)
.LBB58_7:
	movq	%rax, 16(%rsp)
.Ltmp812:
	movq	%rax, %rdi
	xorl	%esi, %esi
	callq	PyCapsule_GetPointer@PLT
.Ltmp813:
# %bb.8:
	movq	%rax, %rbx
	testq	%rax, %rax
	je	.LBB58_9
# %bb.22:
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.LBB58_24
# %bb.23:
	movq	(%rbx), %rdi
.Ltmp814:
	callq	*%rax
.Ltmp815:
	jmp	.LBB58_24
.LBB58_12:
.Ltmp824:
	callq	PyErr_Occurred@PLT
.Ltmp825:
# %bb.13:                               # %.noexc29
	testq	%rax, %rax
	jne	.LBB58_14
# %bb.28:
	movq	$0, 16(%rsp)
.Ltmp832:
	movl	$8, %edi
	callq	_Znwm@PLT
.Ltmp833:
# %bb.29:
	movq	%rax, %rbx
	movq	$0, (%rax)
.Ltmp835:
	leaq	8(%rsp), %rdi
	movq	%rax, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE
.Ltmp836:
# %bb.30:
	movq	(%r14), %rsi
	movq	(%rsp), %r14
.Ltmp838:
	leaq	24(%rsp), %rdi
	callq	_ZN8pybind113strC2EPKc
.Ltmp839:
# %bb.31:                               # %.noexc32
	movq	24(%rsp), %r15
	movq	$0, 24(%rsp)
	movq	%r14, 40(%rsp)
	movq	%r15, 48(%rsp)
	movq	$0, 88(%rsp)
	movq	$0, 56(%rsp)
.Ltmp841:
	leaq	88(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp842:
# %bb.32:                               # %_ZN8pybind116objectD2Ev.exit.i
.Ltmp844:
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp845:
# %bb.33:
	movq	8(%rsp), %rdx
.Ltmp847:
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	PyObject_SetItem@PLT
.Ltmp848:
# %bb.34:                               # %.noexc34
	testl	%eax, %eax
	jne	.LBB58_35
# %bb.40:                               # %_ZNO8pybind116detail8accessorINS0_17accessor_policies12generic_itemEEaSINS_7capsuleEEEvOT_.exit
.Ltmp864:
	leaq	56(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp865:
# %bb.41:                               # %_ZN8pybind116objectD2Ev.exit.i38
.Ltmp867:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp868:
# %bb.42:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev.exit
.Ltmp870:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp871:
.LBB58_24:
.Ltmp873:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp874:
# %bb.25:                               # %_ZN8pybind116objectD2Ev.exit41
.Ltmp876:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp877:
# %bb.26:                               # %_ZN8pybind116objectD2Ev.exit42
	movq	64(%rsp), %rdi
	movq	72(%rsp), %rsi
	movq	80(%rsp), %rdx
.Ltmp879:
	callq	PyErr_Restore@PLT
.Ltmp880:
# %bb.27:                               # %_ZN8pybind1111error_scopeD2Ev.exit
	movq	%rbx, %rax
	addq	$96, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB58_9:
	.cfi_def_cfa_offset 128
	movq	PyExc_SystemError@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
.Ltmp816:
	leaq	.L.str.57(%rip), %rsi
	callq	_ZN8pybind1110raise_fromEP7_objectPKc
.Ltmp817:
# %bb.10:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp818:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp819:
# %bb.11:
.Ltmp821:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp822:
# %bb.60:
.LBB58_14:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp826:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp827:
# %bb.15:
.Ltmp829:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp830:
# %bb.16:                               # %.noexc30
.LBB58_35:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp849:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp850:
# %bb.36:
.Ltmp852:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp853:
# %bb.37:                               # %.noexc35
.LBB58_21:
.Ltmp820:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB58_55
.LBB58_38:
.Ltmp851:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB58_46
.LBB58_57:
.Ltmp828:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB58_58
.LBB58_65:
.Ltmp872:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB58_64:
.Ltmp869:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB58_39:
.Ltmp866:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB58_63:
.Ltmp846:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB58_62:
.Ltmp843:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB58_44:
.Ltmp840:
	movq	%rax, %rbx
	jmp	.LBB58_47
.LBB58_49:
.Ltmp837:
	jmp	.LBB58_54
.LBB58_43:
.Ltmp834:
	jmp	.LBB58_54
.LBB58_45:
.Ltmp854:
	movq	%rax, %rbx
.LBB58_46:                              # %.body36
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev
.LBB58_47:
.Ltmp855:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp856:
	jmp	.LBB58_55
.LBB58_48:
.Ltmp857:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB58_52:
.Ltmp881:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB58_51:
.Ltmp878:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB58_50:
.Ltmp875:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB58_61:
.Ltmp809:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB58_17:
.Ltmp803:
	movq	%rax, %rbx
.Ltmp804:
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp805:
	jmp	.LBB58_59
.LBB58_18:
.Ltmp806:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB58_19:
.Ltmp800:
	movq	%rax, %rbx
	leaq	64(%rsp), %rdi
	callq	_ZN8pybind1111error_scopeD2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB58_53:
.Ltmp823:
.LBB58_54:
	movq	%rax, %rbx
.LBB58_55:
.Ltmp858:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp859:
	jmp	.LBB58_58
.LBB58_56:
.Ltmp860:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB58_20:
.Ltmp831:
	movq	%rax, %rbx
.LBB58_58:                              # %.body
.Ltmp861:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp862:
.LBB58_59:                              # %_ZN8pybind116objectD2Ev.exit44
	leaq	64(%rsp), %rdi
	callq	_ZN8pybind1111error_scopeD2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB58_66:
.Ltmp863:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end58:
	.size	_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE30get_or_create_pp_in_state_dictEv, .Lfunc_end58-_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE30get_or_create_pp_in_state_dictEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail20internals_pp_managerINS0_9internalsEE30get_or_create_pp_in_state_dictEv,"aG",@progbits,_ZN8pybind116detail20internals_pp_managerINS0_9internalsEE30get_or_create_pp_in_state_dictEv,comdat
	.p2align	2, 0x0
GCC_except_table58:
.Lexception32:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase20-.Lttbaseref20
.Lttbaseref20:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end32-.Lcst_begin32
.Lcst_begin32:
	.uleb128 .Lfunc_begin32-.Lfunc_begin32  # >> Call Site 1 <<
	.uleb128 .Ltmp798-.Lfunc_begin32        #   Call between .Lfunc_begin32 and .Ltmp798
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp798-.Lfunc_begin32        # >> Call Site 2 <<
	.uleb128 .Ltmp799-.Ltmp798              #   Call between .Ltmp798 and .Ltmp799
	.uleb128 .Ltmp800-.Lfunc_begin32        #     jumps to .Ltmp800
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp801-.Lfunc_begin32        # >> Call Site 3 <<
	.uleb128 .Ltmp802-.Ltmp801              #   Call between .Ltmp801 and .Ltmp802
	.uleb128 .Ltmp803-.Lfunc_begin32        #     jumps to .Ltmp803
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp807-.Lfunc_begin32        # >> Call Site 4 <<
	.uleb128 .Ltmp808-.Ltmp807              #   Call between .Ltmp807 and .Ltmp808
	.uleb128 .Ltmp809-.Lfunc_begin32        #     jumps to .Ltmp809
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp810-.Lfunc_begin32        # >> Call Site 5 <<
	.uleb128 .Ltmp811-.Ltmp810              #   Call between .Ltmp810 and .Ltmp811
	.uleb128 .Ltmp831-.Lfunc_begin32        #     jumps to .Ltmp831
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp812-.Lfunc_begin32        # >> Call Site 6 <<
	.uleb128 .Ltmp815-.Ltmp812              #   Call between .Ltmp812 and .Ltmp815
	.uleb128 .Ltmp823-.Lfunc_begin32        #     jumps to .Ltmp823
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp824-.Lfunc_begin32        # >> Call Site 7 <<
	.uleb128 .Ltmp825-.Ltmp824              #   Call between .Ltmp824 and .Ltmp825
	.uleb128 .Ltmp831-.Lfunc_begin32        #     jumps to .Ltmp831
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp832-.Lfunc_begin32        # >> Call Site 8 <<
	.uleb128 .Ltmp833-.Ltmp832              #   Call between .Ltmp832 and .Ltmp833
	.uleb128 .Ltmp834-.Lfunc_begin32        #     jumps to .Ltmp834
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp835-.Lfunc_begin32        # >> Call Site 9 <<
	.uleb128 .Ltmp836-.Ltmp835              #   Call between .Ltmp835 and .Ltmp836
	.uleb128 .Ltmp837-.Lfunc_begin32        #     jumps to .Ltmp837
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp838-.Lfunc_begin32        # >> Call Site 10 <<
	.uleb128 .Ltmp839-.Ltmp838              #   Call between .Ltmp838 and .Ltmp839
	.uleb128 .Ltmp840-.Lfunc_begin32        #     jumps to .Ltmp840
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp841-.Lfunc_begin32        # >> Call Site 11 <<
	.uleb128 .Ltmp842-.Ltmp841              #   Call between .Ltmp841 and .Ltmp842
	.uleb128 .Ltmp843-.Lfunc_begin32        #     jumps to .Ltmp843
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp844-.Lfunc_begin32        # >> Call Site 12 <<
	.uleb128 .Ltmp845-.Ltmp844              #   Call between .Ltmp844 and .Ltmp845
	.uleb128 .Ltmp846-.Lfunc_begin32        #     jumps to .Ltmp846
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp847-.Lfunc_begin32        # >> Call Site 13 <<
	.uleb128 .Ltmp848-.Ltmp847              #   Call between .Ltmp847 and .Ltmp848
	.uleb128 .Ltmp854-.Lfunc_begin32        #     jumps to .Ltmp854
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp864-.Lfunc_begin32        # >> Call Site 14 <<
	.uleb128 .Ltmp865-.Ltmp864              #   Call between .Ltmp864 and .Ltmp865
	.uleb128 .Ltmp866-.Lfunc_begin32        #     jumps to .Ltmp866
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp867-.Lfunc_begin32        # >> Call Site 15 <<
	.uleb128 .Ltmp868-.Ltmp867              #   Call between .Ltmp867 and .Ltmp868
	.uleb128 .Ltmp869-.Lfunc_begin32        #     jumps to .Ltmp869
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp870-.Lfunc_begin32        # >> Call Site 16 <<
	.uleb128 .Ltmp871-.Ltmp870              #   Call between .Ltmp870 and .Ltmp871
	.uleb128 .Ltmp872-.Lfunc_begin32        #     jumps to .Ltmp872
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp873-.Lfunc_begin32        # >> Call Site 17 <<
	.uleb128 .Ltmp874-.Ltmp873              #   Call between .Ltmp873 and .Ltmp874
	.uleb128 .Ltmp875-.Lfunc_begin32        #     jumps to .Ltmp875
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp876-.Lfunc_begin32        # >> Call Site 18 <<
	.uleb128 .Ltmp877-.Ltmp876              #   Call between .Ltmp876 and .Ltmp877
	.uleb128 .Ltmp878-.Lfunc_begin32        #     jumps to .Ltmp878
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp879-.Lfunc_begin32        # >> Call Site 19 <<
	.uleb128 .Ltmp880-.Ltmp879              #   Call between .Ltmp879 and .Ltmp880
	.uleb128 .Ltmp881-.Lfunc_begin32        #     jumps to .Ltmp881
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp816-.Lfunc_begin32        # >> Call Site 20 <<
	.uleb128 .Ltmp817-.Ltmp816              #   Call between .Ltmp816 and .Ltmp817
	.uleb128 .Ltmp823-.Lfunc_begin32        #     jumps to .Ltmp823
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp817-.Lfunc_begin32        # >> Call Site 21 <<
	.uleb128 .Ltmp818-.Ltmp817              #   Call between .Ltmp817 and .Ltmp818
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp818-.Lfunc_begin32        # >> Call Site 22 <<
	.uleb128 .Ltmp819-.Ltmp818              #   Call between .Ltmp818 and .Ltmp819
	.uleb128 .Ltmp820-.Lfunc_begin32        #     jumps to .Ltmp820
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp821-.Lfunc_begin32        # >> Call Site 23 <<
	.uleb128 .Ltmp822-.Ltmp821              #   Call between .Ltmp821 and .Ltmp822
	.uleb128 .Ltmp823-.Lfunc_begin32        #     jumps to .Ltmp823
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp822-.Lfunc_begin32        # >> Call Site 24 <<
	.uleb128 .Ltmp826-.Ltmp822              #   Call between .Ltmp822 and .Ltmp826
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp826-.Lfunc_begin32        # >> Call Site 25 <<
	.uleb128 .Ltmp827-.Ltmp826              #   Call between .Ltmp826 and .Ltmp827
	.uleb128 .Ltmp828-.Lfunc_begin32        #     jumps to .Ltmp828
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp829-.Lfunc_begin32        # >> Call Site 26 <<
	.uleb128 .Ltmp830-.Ltmp829              #   Call between .Ltmp829 and .Ltmp830
	.uleb128 .Ltmp831-.Lfunc_begin32        #     jumps to .Ltmp831
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp830-.Lfunc_begin32        # >> Call Site 27 <<
	.uleb128 .Ltmp849-.Ltmp830              #   Call between .Ltmp830 and .Ltmp849
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp849-.Lfunc_begin32        # >> Call Site 28 <<
	.uleb128 .Ltmp850-.Ltmp849              #   Call between .Ltmp849 and .Ltmp850
	.uleb128 .Ltmp851-.Lfunc_begin32        #     jumps to .Ltmp851
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp852-.Lfunc_begin32        # >> Call Site 29 <<
	.uleb128 .Ltmp853-.Ltmp852              #   Call between .Ltmp852 and .Ltmp853
	.uleb128 .Ltmp854-.Lfunc_begin32        #     jumps to .Ltmp854
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp853-.Lfunc_begin32        # >> Call Site 30 <<
	.uleb128 .Ltmp855-.Ltmp853              #   Call between .Ltmp853 and .Ltmp855
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp855-.Lfunc_begin32        # >> Call Site 31 <<
	.uleb128 .Ltmp856-.Ltmp855              #   Call between .Ltmp855 and .Ltmp856
	.uleb128 .Ltmp857-.Lfunc_begin32        #     jumps to .Ltmp857
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp804-.Lfunc_begin32        # >> Call Site 32 <<
	.uleb128 .Ltmp805-.Ltmp804              #   Call between .Ltmp804 and .Ltmp805
	.uleb128 .Ltmp806-.Lfunc_begin32        #     jumps to .Ltmp806
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp805-.Lfunc_begin32        # >> Call Site 33 <<
	.uleb128 .Ltmp858-.Ltmp805              #   Call between .Ltmp805 and .Ltmp858
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp858-.Lfunc_begin32        # >> Call Site 34 <<
	.uleb128 .Ltmp859-.Ltmp858              #   Call between .Ltmp858 and .Ltmp859
	.uleb128 .Ltmp860-.Lfunc_begin32        #     jumps to .Ltmp860
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp861-.Lfunc_begin32        # >> Call Site 35 <<
	.uleb128 .Ltmp862-.Ltmp861              #   Call between .Ltmp861 and .Ltmp862
	.uleb128 .Ltmp863-.Lfunc_begin32        #     jumps to .Ltmp863
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp862-.Lfunc_begin32        # >> Call Site 36 <<
	.uleb128 .Lfunc_end58-.Ltmp862          #   Call between .Ltmp862 and .Lfunc_end58
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end32:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase20:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail21get_python_state_dictEv,"axG",@progbits,_ZN8pybind116detail21get_python_state_dictEv,comdat
	.hidden	_ZN8pybind116detail21get_python_state_dictEv # -- Begin function _ZN8pybind116detail21get_python_state_dictEv
	.weak	_ZN8pybind116detail21get_python_state_dictEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail21get_python_state_dictEv,@function
_ZN8pybind116detail21get_python_state_dictEv: # @_ZN8pybind116detail21get_python_state_dictEv
.Lfunc_begin33:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception33
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	$0, (%rdi)
.Ltmp882:
	callq	PyInterpreterState_Get@PLT
.Ltmp883:
# %bb.1:
	testq	%rax, %rax
	je	.LBB59_9
# %bb.2:
.Ltmp884:
	movq	%rax, %rdi
	callq	PyInterpreterState_GetDict@PLT
.Ltmp885:
# %bb.3:
	movq	%rax, (%rsp)
.Ltmp886:
	movq	%rsp, %r14
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp887:
# %bb.4:                                # %_ZN8pybind1118reinterpret_borrowINS_6objectEEET_NS_6handleE.exit
	cmpq	%rbx, %r14
	je	.LBB59_6
# %bb.5:
	movq	(%rbx), %rax
	movq	%rax, 8(%rsp)
	movq	(%rsp), %rax
	movq	%rax, (%rbx)
	movq	$0, (%rsp)
.Ltmp889:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp890:
.LBB59_6:                               # %_ZN8pybind116objectaSEOS0_.exit
.Ltmp892:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp893:
# %bb.7:
	cmpq	$0, (%rbx)
	je	.LBB59_9
# %bb.8:
	movq	%rbx, %rax
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB59_9:                               # %.thread
	.cfi_def_cfa_offset 48
	movq	PyExc_SystemError@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
.Ltmp895:
	leaq	.L.str.58(%rip), %rsi
	callq	_ZN8pybind1110raise_fromEP7_objectPKc
.Ltmp896:
# %bb.10:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp897:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp898:
# %bb.11:
.Ltmp900:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp901:
# %bb.12:
.LBB59_13:
.Ltmp899:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB59_19
.LBB59_14:
.Ltmp891:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB59_15:
.Ltmp894:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB59_16:
.Ltmp888:
	jmp	.LBB59_18
.LBB59_17:
.Ltmp902:
.LBB59_18:
	movq	%rax, %r14
.LBB59_19:
.Ltmp903:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp904:
# %bb.20:                               # %_ZN8pybind116objectD2Ev.exit7
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB59_21:
.Ltmp905:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end59:
	.size	_ZN8pybind116detail21get_python_state_dictEv, .Lfunc_end59-_ZN8pybind116detail21get_python_state_dictEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail21get_python_state_dictEv,"aG",@progbits,_ZN8pybind116detail21get_python_state_dictEv,comdat
	.p2align	2, 0x0
GCC_except_table59:
.Lexception33:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase21-.Lttbaseref21
.Lttbaseref21:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end33-.Lcst_begin33
.Lcst_begin33:
	.uleb128 .Ltmp882-.Lfunc_begin33        # >> Call Site 1 <<
	.uleb128 .Ltmp883-.Ltmp882              #   Call between .Ltmp882 and .Ltmp883
	.uleb128 .Ltmp902-.Lfunc_begin33        #     jumps to .Ltmp902
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp884-.Lfunc_begin33        # >> Call Site 2 <<
	.uleb128 .Ltmp887-.Ltmp884              #   Call between .Ltmp884 and .Ltmp887
	.uleb128 .Ltmp888-.Lfunc_begin33        #     jumps to .Ltmp888
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp889-.Lfunc_begin33        # >> Call Site 3 <<
	.uleb128 .Ltmp890-.Ltmp889              #   Call between .Ltmp889 and .Ltmp890
	.uleb128 .Ltmp891-.Lfunc_begin33        #     jumps to .Ltmp891
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp892-.Lfunc_begin33        # >> Call Site 4 <<
	.uleb128 .Ltmp893-.Ltmp892              #   Call between .Ltmp892 and .Ltmp893
	.uleb128 .Ltmp894-.Lfunc_begin33        #     jumps to .Ltmp894
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp895-.Lfunc_begin33        # >> Call Site 5 <<
	.uleb128 .Ltmp896-.Ltmp895              #   Call between .Ltmp895 and .Ltmp896
	.uleb128 .Ltmp902-.Lfunc_begin33        #     jumps to .Ltmp902
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp896-.Lfunc_begin33        # >> Call Site 6 <<
	.uleb128 .Ltmp897-.Ltmp896              #   Call between .Ltmp896 and .Ltmp897
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp897-.Lfunc_begin33        # >> Call Site 7 <<
	.uleb128 .Ltmp898-.Ltmp897              #   Call between .Ltmp897 and .Ltmp898
	.uleb128 .Ltmp899-.Lfunc_begin33        #     jumps to .Ltmp899
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp900-.Lfunc_begin33        # >> Call Site 8 <<
	.uleb128 .Ltmp901-.Ltmp900              #   Call between .Ltmp900 and .Ltmp901
	.uleb128 .Ltmp902-.Lfunc_begin33        #     jumps to .Ltmp902
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp901-.Lfunc_begin33        # >> Call Site 9 <<
	.uleb128 .Ltmp903-.Ltmp901              #   Call between .Ltmp901 and .Ltmp903
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp903-.Lfunc_begin33        # >> Call Site 10 <<
	.uleb128 .Ltmp904-.Ltmp903              #   Call between .Ltmp903 and .Ltmp904
	.uleb128 .Ltmp905-.Lfunc_begin33        #     jumps to .Ltmp905
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp904-.Lfunc_begin33        # >> Call Site 11 <<
	.uleb128 .Lfunc_end59-.Ltmp904          #   Call between .Ltmp904 and .Lfunc_end59
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end33:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase21:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind114dictC2EONS_6objectE,"axG",@progbits,_ZN8pybind114dictC2EONS_6objectE,comdat
	.hidden	_ZN8pybind114dictC2EONS_6objectE # -- Begin function _ZN8pybind114dictC2EONS_6objectE
	.weak	_ZN8pybind114dictC2EONS_6objectE
	.p2align	4, 0x90
	.type	_ZN8pybind114dictC2EONS_6objectE,@function
_ZN8pybind114dictC2EONS_6objectE:       # @_ZN8pybind114dictC2EONS_6objectE
.Lfunc_begin34:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception34
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %rax
	movq	%rdi, %rbx
	movq	(%rsi), %rsi
	testq	%rsi, %rsi
	je	.LBB60_1
# %bb.4:                                # %_ZN8pybind114dict6check_ENS_6handleE.exit
	movq	8(%rsi), %rcx
	movq	168(%rcx), %rcx
	testl	$536870912, %ecx                # imm = 0x20000000
	je	.LBB60_2
# %bb.5:                                # %_ZN8pybind114dict8raw_dictEP7_object.exit.thread
	movq	$0, (%rax)
	movq	%rsi, (%rbx)
	jmp	.LBB60_6
.LBB60_1:                               # %._ZN8pybind114dict6check_ENS_6handleE.exit.thread_crit_edge
	movq	8, %rax
	movq	168(%rax), %rcx
.LBB60_2:                               # %_ZN8pybind114dict6check_ENS_6handleE.exit.thread
	testl	$536870912, %ecx                # imm = 0x20000000
	jne	.LBB60_3
# %bb.7:
	movq	PyDict_Type@GOTPCREL(%rip), %rdi
	xorl	%edx, %edx
	xorl	%eax, %eax
	callq	PyObject_CallFunctionObjArgs@PLT
	jmp	.LBB60_8
.LBB60_3:
	movq	%rsi, 8(%rsp)
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rax), %rax
.LBB60_8:                               # %_ZN8pybind114dict8raw_dictEP7_object.exit
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB60_9
.LBB60_6:
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB60_9:
	.cfi_def_cfa_offset 48
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp906:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp907:
# %bb.10:
.Ltmp909:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp910:
# %bb.15:
.LBB60_11:
.Ltmp911:
	movq	%rax, %r14
	jmp	.LBB60_13
.LBB60_12:
.Ltmp908:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
.LBB60_13:
.Ltmp912:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp913:
# %bb.14:                               # %_ZN8pybind116objectD2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB60_16:
.Ltmp914:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end60:
	.size	_ZN8pybind114dictC2EONS_6objectE, .Lfunc_end60-_ZN8pybind114dictC2EONS_6objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind114dictC2EONS_6objectE,"aG",@progbits,_ZN8pybind114dictC2EONS_6objectE,comdat
	.p2align	2, 0x0
GCC_except_table60:
.Lexception34:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase22-.Lttbaseref22
.Lttbaseref22:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end34-.Lcst_begin34
.Lcst_begin34:
	.uleb128 .Lfunc_begin34-.Lfunc_begin34  # >> Call Site 1 <<
	.uleb128 .Ltmp906-.Lfunc_begin34        #   Call between .Lfunc_begin34 and .Ltmp906
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp906-.Lfunc_begin34        # >> Call Site 2 <<
	.uleb128 .Ltmp907-.Ltmp906              #   Call between .Ltmp906 and .Ltmp907
	.uleb128 .Ltmp908-.Lfunc_begin34        #     jumps to .Ltmp908
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp909-.Lfunc_begin34        # >> Call Site 3 <<
	.uleb128 .Ltmp910-.Ltmp909              #   Call between .Ltmp909 and .Ltmp910
	.uleb128 .Ltmp911-.Lfunc_begin34        #     jumps to .Ltmp911
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp910-.Lfunc_begin34        # >> Call Site 4 <<
	.uleb128 .Ltmp912-.Ltmp910              #   Call between .Ltmp910 and .Ltmp912
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp912-.Lfunc_begin34        # >> Call Site 5 <<
	.uleb128 .Ltmp913-.Ltmp912              #   Call between .Ltmp912 and .Ltmp913
	.uleb128 .Ltmp914-.Lfunc_begin34        #     jumps to .Ltmp914
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp913-.Lfunc_begin34        # >> Call Site 6 <<
	.uleb128 .Lfunc_end60-.Ltmp913          #   Call between .Ltmp913 and .Lfunc_end60
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end34:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase22:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1110raise_fromEP7_objectPKc,"axG",@progbits,_ZN8pybind1110raise_fromEP7_objectPKc,comdat
	.hidden	_ZN8pybind1110raise_fromEP7_objectPKc # -- Begin function _ZN8pybind1110raise_fromEP7_objectPKc
	.weak	_ZN8pybind1110raise_fromEP7_objectPKc
	.p2align	4, 0x90
	.type	_ZN8pybind1110raise_fromEP7_objectPKc,@function
_ZN8pybind1110raise_fromEP7_objectPKc:  # @_ZN8pybind1110raise_fromEP7_objectPKc
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$32, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	$0, 24(%rsp)
	movq	$0, 8(%rsp)
	movq	$0, 16(%rsp)
	movq	$0, (%rsp)
	callq	PyErr_Occurred@PLT
	testq	%rax, %rax
	je	.LBB61_12
# %bb.1:
	leaq	24(%rsp), %r15
	leaq	8(%rsp), %r12
	movq	%rsp, %r13
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%r13, %rdx
	callq	PyErr_Fetch@PLT
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%r13, %rdx
	callq	PyErr_NormalizeException@PLT
	movq	(%rsp), %rsi
	testq	%rsi, %rsi
	je	.LBB61_5
# %bb.2:
	movq	8(%rsp), %rdi
	callq	PyException_SetTraceback@PLT
	movq	(%rsp), %rdi
	movq	(%rdi), %rax
	testl	%eax, %eax
	js	.LBB61_5
# %bb.3:
	decq	%rax
	movq	%rax, (%rdi)
	jne	.LBB61_5
# %bb.4:
	callq	_Py_Dealloc@PLT
.LBB61_5:                               # %_ZL9Py_DECREFP7_object.exit
	movq	24(%rsp), %rdi
	movq	(%rdi), %rax
	testl	%eax, %eax
	js	.LBB61_8
# %bb.6:
	decq	%rax
	movq	%rax, (%rdi)
	jne	.LBB61_8
# %bb.7:
	callq	_Py_Dealloc@PLT
.LBB61_8:                               # %_ZL9Py_DECREFP7_object.exit6
	callq	PyErr_Occurred@PLT
	testq	%rax, %rax
	jne	.LBB61_13
# %bb.9:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	PyErr_SetString@PLT
	leaq	24(%rsp), %rbx
	leaq	16(%rsp), %r14
	movq	%rsp, %r15
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	PyErr_Fetch@PLT
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	PyErr_NormalizeException@PLT
	movq	8(%rsp), %rsi
	movl	(%rsi), %eax
	incl	%eax
	je	.LBB61_11
# %bb.10:
	movl	%eax, (%rsi)
	movq	8(%rsp), %rsi
.LBB61_11:                              # %_ZL9Py_INCREFP7_object.exit
	movq	16(%rsp), %rdi
	callq	PyException_SetCause@PLT
	movq	16(%rsp), %rdi
	movq	8(%rsp), %rsi
	callq	PyException_SetContext@PLT
	movq	24(%rsp), %rdi
	movq	16(%rsp), %rsi
	movq	(%rsp), %rdx
	callq	PyErr_Restore@PLT
	addq	$32, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB61_12:
	.cfi_def_cfa_offset 80
	leaq	.L.str.60(%rip), %rdi
	leaq	.L.str.19(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1110raise_fromEP7_objectPKc(%rip), %rcx
	movl	$814, %edx                      # imm = 0x32E
	callq	__assert_fail@PLT
.LBB61_13:
	leaq	.L.str.4(%rip), %rdi
	leaq	.L.str.19(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1110raise_fromEP7_objectPKc(%rip), %rcx
	movl	$822, %edx                      # imm = 0x336
	callq	__assert_fail@PLT
.Lfunc_end61:
	.size	_ZN8pybind1110raise_fromEP7_objectPKc, .Lfunc_end61-_ZN8pybind1110raise_fromEP7_objectPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE,"axG",@progbits,_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE,comdat
	.hidden	_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE # -- Begin function _ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE
	.weak	_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE
	.p2align	4, 0x90
	.type	_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE,@function
_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE: # @_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE
.Lfunc_begin35:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception35
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	movq	%rdx, %rsi
	movq	%rcx, %rdx
	callq	PyCapsule_New@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB62_1
# %bb.4:
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB62_1:
	.cfi_def_cfa_offset 32
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp915:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp916:
# %bb.2:
.Ltmp918:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp919:
# %bb.8:
.LBB62_3:
.Ltmp920:
	movq	%rax, %r14
	jmp	.LBB62_6
.LBB62_5:
.Ltmp917:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
.LBB62_6:
.Ltmp921:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp922:
# %bb.7:                                # %_ZN8pybind116objectD2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB62_9:
.Ltmp923:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end62:
	.size	_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE, .Lfunc_end62-_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE,"aG",@progbits,_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE,comdat
	.p2align	2, 0x0
GCC_except_table62:
.Lexception35:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase23-.Lttbaseref23
.Lttbaseref23:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end35-.Lcst_begin35
.Lcst_begin35:
	.uleb128 .Lfunc_begin35-.Lfunc_begin35  # >> Call Site 1 <<
	.uleb128 .Ltmp915-.Lfunc_begin35        #   Call between .Lfunc_begin35 and .Ltmp915
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp915-.Lfunc_begin35        # >> Call Site 2 <<
	.uleb128 .Ltmp916-.Ltmp915              #   Call between .Ltmp915 and .Ltmp916
	.uleb128 .Ltmp917-.Lfunc_begin35        #     jumps to .Ltmp917
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp918-.Lfunc_begin35        # >> Call Site 3 <<
	.uleb128 .Ltmp919-.Ltmp918              #   Call between .Ltmp918 and .Ltmp919
	.uleb128 .Ltmp920-.Lfunc_begin35        #     jumps to .Ltmp920
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp919-.Lfunc_begin35        # >> Call Site 4 <<
	.uleb128 .Ltmp921-.Ltmp919              #   Call between .Ltmp919 and .Ltmp921
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp921-.Lfunc_begin35        # >> Call Site 5 <<
	.uleb128 .Ltmp922-.Ltmp921              #   Call between .Ltmp921 and .Ltmp922
	.uleb128 .Ltmp923-.Lfunc_begin35        #     jumps to .Ltmp923
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp922-.Lfunc_begin35        # >> Call Site 6 <<
	.uleb128 .Lfunc_end62-.Ltmp922          #   Call between .Ltmp922 and .Lfunc_end62
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end35:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase23:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev,"axG",@progbits,_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev,comdat
	.hidden	_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev # -- Begin function _ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev
	.weak	_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev,@function
_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev: # @_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev
.Lfunc_begin36:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception36
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	addq	$24, %rdi
.Ltmp924:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp925:
# %bb.1:                                # %_ZN8pybind116objectD2Ev.exit
	addq	$16, %rbx
.Ltmp927:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp928:
# %bb.2:                                # %_ZN8pybind116objectD2Ev.exit1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB63_4:
	.cfi_def_cfa_offset 16
.Ltmp929:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB63_3:
.Ltmp926:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end63:
	.size	_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev, .Lfunc_end63-_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev,"aG",@progbits,_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table63:
.Lexception36:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase24-.Lttbaseref24
.Lttbaseref24:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end36-.Lcst_begin36
.Lcst_begin36:
	.uleb128 .Ltmp924-.Lfunc_begin36        # >> Call Site 1 <<
	.uleb128 .Ltmp925-.Ltmp924              #   Call between .Ltmp924 and .Ltmp925
	.uleb128 .Ltmp926-.Lfunc_begin36        #     jumps to .Ltmp926
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp927-.Lfunc_begin36        # >> Call Site 2 <<
	.uleb128 .Ltmp928-.Ltmp927              #   Call between .Ltmp927 and .Ltmp928
	.uleb128 .Ltmp929-.Lfunc_begin36        #     jumps to .Ltmp929
	.byte	1                               #   On action: 1
.Lcst_end36:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase24:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKR8pybind116handle7inc_refEv,"axG",@progbits,_ZNKR8pybind116handle7inc_refEv,comdat
	.hidden	_ZNKR8pybind116handle7inc_refEv # -- Begin function _ZNKR8pybind116handle7inc_refEv
	.weak	_ZNKR8pybind116handle7inc_refEv
	.p2align	4, 0x90
	.type	_ZNKR8pybind116handle7inc_refEv,@function
_ZNKR8pybind116handle7inc_refEv:        # @_ZNKR8pybind116handle7inc_refEv
.Lfunc_begin37:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception37
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$40, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	leaq	_ZZN8pybind116handle15inc_ref_counterEmE7counter@TLSLD(%rip), %rdi
	callq	__tls_get_addr@PLT
	incq	_ZZN8pybind116handle15inc_ref_counterEmE7counter@DTPOFF(%rax)
	cmpq	$0, (%rbx)
	je	.LBB64_8
# %bb.1:
	callq	PyGILState_Check@PLT
	testl	%eax, %eax
	jne	.LBB64_5
# %bb.2:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
	leaq	24(%rsp), %r14
	movl	$28, %edi
	callq	_Znwm@PLT
	movq	%rax, 8(%rsp)
	movq	$27, 24(%rsp)
	movups	.L.str.59(%rip), %xmm0
	movups	%xmm0, (%rax)
	movups	.L.str.59+11(%rip), %xmm0
	movups	%xmm0, 11(%rax)
	movq	$27, 16(%rsp)
	movb	$0, 27(%rax)
.Ltmp930:
	leaq	8(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNK8pybind116handle20throw_gilstate_errorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp931:
# %bb.3:
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB64_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB64_5:
	movq	(%rbx), %rax
	testq	%rax, %rax
	je	.LBB64_8
# %bb.6:
	movl	(%rax), %ecx
	incl	%ecx
	je	.LBB64_8
# %bb.7:
	movl	%ecx, (%rax)
.LBB64_8:                               # %_ZL10Py_XINCREFP7_object.exit
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB64_9:
	.cfi_def_cfa_offset 64
.Ltmp932:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB64_11
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB64_11:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit8
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end64:
	.size	_ZNKR8pybind116handle7inc_refEv, .Lfunc_end64-_ZNKR8pybind116handle7inc_refEv
	.cfi_endproc
	.section	.gcc_except_table._ZNKR8pybind116handle7inc_refEv,"aG",@progbits,_ZNKR8pybind116handle7inc_refEv,comdat
	.p2align	2, 0x0
GCC_except_table64:
.Lexception37:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end37-.Lcst_begin37
.Lcst_begin37:
	.uleb128 .Lfunc_begin37-.Lfunc_begin37  # >> Call Site 1 <<
	.uleb128 .Ltmp930-.Lfunc_begin37        #   Call between .Lfunc_begin37 and .Ltmp930
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp930-.Lfunc_begin37        # >> Call Site 2 <<
	.uleb128 .Ltmp931-.Ltmp930              #   Call between .Ltmp930 and .Ltmp931
	.uleb128 .Ltmp932-.Lfunc_begin37        #     jumps to .Ltmp932
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp931-.Lfunc_begin37        # >> Call Site 3 <<
	.uleb128 .Lfunc_end64-.Ltmp931          #   Call between .Ltmp931 and .Lfunc_end64
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end37:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail18dict_getitemstringEP7_objectPKc,"axG",@progbits,_ZN8pybind116detail18dict_getitemstringEP7_objectPKc,comdat
	.hidden	_ZN8pybind116detail18dict_getitemstringEP7_objectPKc # -- Begin function _ZN8pybind116detail18dict_getitemstringEP7_objectPKc
	.weak	_ZN8pybind116detail18dict_getitemstringEP7_objectPKc
	.p2align	4, 0x90
	.type	_ZN8pybind116detail18dict_getitemstringEP7_objectPKc,@function
_ZN8pybind116detail18dict_getitemstringEP7_objectPKc: # @_ZN8pybind116detail18dict_getitemstringEP7_objectPKc
.Lfunc_begin38:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception38
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	movq	%rsi, %rdi
	callq	PyUnicode_FromString@PLT
	testq	%rax, %rax
	je	.LBB65_1
# %bb.3:
	movq	%rax, %rbx
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	PyDict_GetItemWithError@PLT
	movq	(%rbx), %rcx
	testl	%ecx, %ecx
	js	.LBB65_6
# %bb.4:
	decq	%rcx
	movq	%rcx, (%rbx)
	je	.LBB65_5
.LBB65_6:                               # %_ZL9Py_DECREFP7_object.exit
	testq	%rax, %rax
	jne	.LBB65_10
.LBB65_7:
	movq	%rax, %rbx
	callq	PyErr_Occurred@PLT
	movq	%rax, %rcx
	movq	%rbx, %rax
	testq	%rcx, %rcx
	je	.LBB65_10
# %bb.8:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp933:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp934:
	jmp	.LBB65_2
.LBB65_5:
	movq	%rbx, %rdi
	movq	%rax, %rbx
	callq	_Py_Dealloc@PLT
	movq	%rbx, %rax
	testq	%rax, %rax
	je	.LBB65_7
.LBB65_10:
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB65_1:
	.cfi_def_cfa_offset 32
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp936:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp937:
.LBB65_2:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.LBB65_9:
.Ltmp935:
	jmp	.LBB65_12
.LBB65_11:
.Ltmp938:
.LBB65_12:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end65:
	.size	_ZN8pybind116detail18dict_getitemstringEP7_objectPKc, .Lfunc_end65-_ZN8pybind116detail18dict_getitemstringEP7_objectPKc
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail18dict_getitemstringEP7_objectPKc,"aG",@progbits,_ZN8pybind116detail18dict_getitemstringEP7_objectPKc,comdat
	.p2align	2, 0x0
GCC_except_table65:
.Lexception38:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end38-.Lcst_begin38
.Lcst_begin38:
	.uleb128 .Lfunc_begin38-.Lfunc_begin38  # >> Call Site 1 <<
	.uleb128 .Ltmp933-.Lfunc_begin38        #   Call between .Lfunc_begin38 and .Ltmp933
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp933-.Lfunc_begin38        # >> Call Site 2 <<
	.uleb128 .Ltmp934-.Ltmp933              #   Call between .Ltmp933 and .Ltmp934
	.uleb128 .Ltmp935-.Lfunc_begin38        #     jumps to .Ltmp935
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp934-.Lfunc_begin38        # >> Call Site 3 <<
	.uleb128 .Ltmp936-.Ltmp934              #   Call between .Ltmp934 and .Ltmp936
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp936-.Lfunc_begin38        # >> Call Site 4 <<
	.uleb128 .Ltmp937-.Ltmp936              #   Call between .Ltmp936 and .Ltmp937
	.uleb128 .Ltmp938-.Lfunc_begin38        #     jumps to .Ltmp938
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp937-.Lfunc_begin38        # >> Call Site 5 <<
	.uleb128 .Lfunc_end65-.Ltmp937          #   Call between .Ltmp937 and .Lfunc_end65
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end38:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind113strC2EPKc,"axG",@progbits,_ZN8pybind113strC2EPKc,comdat
	.hidden	_ZN8pybind113strC2EPKc          # -- Begin function _ZN8pybind113strC2EPKc
	.weak	_ZN8pybind113strC2EPKc
	.p2align	4, 0x90
	.type	_ZN8pybind113strC2EPKc,@function
_ZN8pybind113strC2EPKc:                 # @_ZN8pybind113strC2EPKc
.Lfunc_begin39:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception39
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	PyUnicode_FromString@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB66_1
# %bb.8:
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB66_1:
	.cfi_def_cfa_offset 32
.Ltmp939:
	callq	PyErr_Occurred@PLT
.Ltmp940:
# %bb.2:
	testq	%rax, %rax
	jne	.LBB66_3
# %bb.6:
.Ltmp946:
	leaq	.L.str.61(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp947:
# %bb.7:
.LBB66_3:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp941:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp942:
# %bb.4:
.Ltmp944:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp945:
# %bb.12:
.LBB66_5:
.Ltmp943:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB66_10
.LBB66_9:
.Ltmp948:
	movq	%rax, %r14
.LBB66_10:
.Ltmp949:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp950:
# %bb.11:                               # %_ZN8pybind116objectD2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB66_13:
.Ltmp951:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end66:
	.size	_ZN8pybind113strC2EPKc, .Lfunc_end66-_ZN8pybind113strC2EPKc
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind113strC2EPKc,"aG",@progbits,_ZN8pybind113strC2EPKc,comdat
	.p2align	2, 0x0
GCC_except_table66:
.Lexception39:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase25-.Lttbaseref25
.Lttbaseref25:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end39-.Lcst_begin39
.Lcst_begin39:
	.uleb128 .Lfunc_begin39-.Lfunc_begin39  # >> Call Site 1 <<
	.uleb128 .Ltmp939-.Lfunc_begin39        #   Call between .Lfunc_begin39 and .Ltmp939
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp939-.Lfunc_begin39        # >> Call Site 2 <<
	.uleb128 .Ltmp947-.Ltmp939              #   Call between .Ltmp939 and .Ltmp947
	.uleb128 .Ltmp948-.Lfunc_begin39        #     jumps to .Ltmp948
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp947-.Lfunc_begin39        # >> Call Site 3 <<
	.uleb128 .Ltmp941-.Ltmp947              #   Call between .Ltmp947 and .Ltmp941
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp941-.Lfunc_begin39        # >> Call Site 4 <<
	.uleb128 .Ltmp942-.Ltmp941              #   Call between .Ltmp941 and .Ltmp942
	.uleb128 .Ltmp943-.Lfunc_begin39        #     jumps to .Ltmp943
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp944-.Lfunc_begin39        # >> Call Site 5 <<
	.uleb128 .Ltmp945-.Ltmp944              #   Call between .Ltmp944 and .Ltmp945
	.uleb128 .Ltmp948-.Lfunc_begin39        #     jumps to .Ltmp948
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp945-.Lfunc_begin39        # >> Call Site 6 <<
	.uleb128 .Ltmp949-.Ltmp945              #   Call between .Ltmp945 and .Ltmp949
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp949-.Lfunc_begin39        # >> Call Site 7 <<
	.uleb128 .Ltmp950-.Ltmp949              #   Call between .Ltmp949 and .Ltmp950
	.uleb128 .Ltmp951-.Lfunc_begin39        #     jumps to .Ltmp951
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp950-.Lfunc_begin39        # >> Call Site 8 <<
	.uleb128 .Lfunc_end66-.Ltmp950          #   Call between .Ltmp950 and .Lfunc_end66
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end39:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase25:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail9internalsD2Ev,"axG",@progbits,_ZN8pybind116detail9internalsD2Ev,comdat
	.hidden	_ZN8pybind116detail9internalsD2Ev # -- Begin function _ZN8pybind116detail9internalsD2Ev
	.weak	_ZN8pybind116detail9internalsD2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind116detail9internalsD2Ev,@function
_ZN8pybind116detail9internalsD2Ev:      # @_ZN8pybind116detail9internalsD2Ev
.Lfunc_begin40:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception40
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	472(%rdi), %r14
	movq	472(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB67_2
	.p2align	4, 0x90
.LBB67_1:                               # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r15
	movl	$24, %esi
	callq	_ZdlPvm@PLT
	movq	%r15, %rdi
	testq	%r15, %r15
	jne	.LBB67_1
.LBB67_2:                               # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv.exit.i.i
	movq	456(%rbx), %rdi
	movq	464(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r14)
	movq	456(%rbx), %rdi
	leaq	504(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB67_4
# %bb.3:
	movq	464(%rbx), %rsi
	shlq	$3, %rsi
	callq	_ZdlPvm@PLT
.LBB67_4:                               # %_ZNSt13unordered_mapISt10type_indexP7_objectSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S2_EEED2Ev.exit
	leaq	440(%rbx), %rdi
.Ltmp952:
	callq	PyThread_tss_delete@PLT
.Ltmp953:
# %bb.5:                                # %_ZN8pybind1123thread_specific_storageINS_6detail19loader_life_supportEED2Ev.exit
	leaq	432(%rbx), %rdi
.Ltmp955:
	callq	PyThread_tss_delete@PLT
.Ltmp956:
# %bb.6:                                # %_ZN8pybind1123thread_specific_storageI3_tsED2Ev.exit
	movq	400(%rbx), %r14
	testq	%r14, %r14
	jne	.LBB67_7
.LBB67_10:                              # %_ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	movq	$0, 400(%rbx)
	leaq	360(%rbx), %r15
	movq	360(%rbx), %r14
	testq	%r14, %r14
	jne	.LBB67_11
.LBB67_14:                              # %_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PvESaIS9_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSB_18_Mod_range_hashingENSB_20_Default_ranged_hashENSB_20_Prime_rehash_policyENSB_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv.exit.i.i
	movq	344(%rbx), %rdi
	movq	352(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r15)
	movq	344(%rbx), %rdi
	leaq	392(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB67_16
# %bb.15:
	movq	352(%rbx), %rsi
	shlq	$3, %rsi
	callq	_ZdlPvm@PLT
.LBB67_16:                              # %_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev.exit
	movq	336(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB67_18
	.p2align	4, 0x90
.LBB67_17:                              # %.lr.ph.i.i6
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r14
	movl	$16, %esi
	callq	_ZdlPvm@PLT
	movq	%r14, %rdi
	testq	%r14, %r14
	jne	.LBB67_17
.LBB67_18:                              # %_ZNSt14_Fwd_list_baseIPFvNSt15__exception_ptr13exception_ptrEESaIS3_EED2Ev.exit
	movq	$0, 336(%rbx)
	leaq	296(%rbx), %r15
	movq	296(%rbx), %r14
	testq	%r14, %r14
	jne	.LBB67_19
.LBB67_22:                              # %_ZNSt10_HashtableIPK7_objectSt4pairIKS2_St6vectorIPS0_SaIS6_EEESaIS9_ENSt8__detail10_Select1stESt8equal_toIS2_ESt4hashIS2_ENSB_18_Mod_range_hashingENSB_20_Default_ranged_hashENSB_20_Prime_rehash_policyENSB_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv.exit.i.i
	movq	280(%rbx), %rdi
	movq	288(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r15)
	movq	280(%rbx), %rdi
	leaq	328(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB67_24
# %bb.23:
	movq	288(%rbx), %rsi
	shlq	$3, %rsi
	callq	_ZdlPvm@PLT
.LBB67_24:                              # %_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev.exit
	leaq	240(%rbx), %r15
	movq	240(%rbx), %r14
	testq	%r14, %r14
	jne	.LBB67_25
.LBB67_28:                              # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv.exit.i.i
	movq	224(%rbx), %rdi
	movq	232(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r15)
	movq	224(%rbx), %rdi
	leaq	272(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB67_30
# %bb.29:
	movq	232(%rbx), %rsi
	shlq	$3, %rsi
	callq	_ZdlPvm@PLT
.LBB67_30:                              # %_ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev.exit
	leaq	184(%rbx), %r14
	movq	184(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB67_32
	.p2align	4, 0x90
.LBB67_31:                              # %.lr.ph.i.i.i.i19
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r15
	movl	$32, %esi
	callq	_ZdlPvm@PLT
	movq	%r15, %rdi
	testq	%r15, %r15
	jne	.LBB67_31
.LBB67_32:                              # %_ZNSt10_HashtableISt4pairIPK7_objectPKcES6_SaIS6_ENSt8__detail9_IdentityESt8equal_toIS6_EN8pybind116detail13override_hashENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb1ELb1ELb1EEEE5clearEv.exit.i.i
	movq	168(%rbx), %rdi
	movq	176(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r14)
	movq	168(%rbx), %rdi
	leaq	216(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB67_34
# %bb.33:
	movq	176(%rbx), %rsi
	shlq	$3, %rsi
	callq	_ZdlPvm@PLT
.LBB67_34:                              # %_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev.exit
	leaq	128(%rbx), %r14
	movq	128(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB67_36
	.p2align	4, 0x90
.LBB67_35:                              # %.lr.ph.i.i.i.i23
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r15
	movl	$24, %esi
	callq	_ZdlPvm@PLT
	movq	%r15, %rdi
	testq	%r15, %r15
	jne	.LBB67_35
.LBB67_36:                              # %_ZNSt10_HashtableIPKvSt4pairIKS1_PN8pybind116detail8instanceEESaIS8_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb0ELb0ELb0EEEE5clearEv.exit.i.i
	movq	112(%rbx), %rdi
	movq	120(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r14)
	movq	112(%rbx), %rdi
	leaq	160(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB67_38
# %bb.37:
	movq	120(%rbx), %rsi
	shlq	$3, %rsi
	callq	_ZdlPvm@PLT
.LBB67_38:                              # %_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev.exit
	leaq	72(%rbx), %r15
	movq	72(%rbx), %r14
	testq	%r14, %r14
	jne	.LBB67_39
.LBB67_42:                              # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv.exit.i.i
	movq	56(%rbx), %rdi
	movq	64(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r15)
	movq	56(%rbx), %rdi
	leaq	104(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB67_44
# %bb.43:
	movq	64(%rbx), %rsi
	shlq	$3, %rsi
	callq	_ZdlPvm@PLT
.LBB67_44:                              # %_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev.exit
	leaq	16(%rbx), %r14
	movq	16(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB67_46
	.p2align	4, 0x90
.LBB67_45:                              # %.lr.ph.i.i.i.i32
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r15
	movl	$24, %esi
	callq	_ZdlPvm@PLT
	movq	%r15, %rdi
	testq	%r15, %r15
	jne	.LBB67_45
.LBB67_46:                              # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv.exit.i.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r14)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB67_47
# %bb.50:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
	.p2align	4, 0x90
.LBB67_9:                               # %_ZNSt16allocator_traitsISaISt14_Fwd_list_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7destroyIS6_EEvRS8_PT_.exit.i.i
                                        #   in Loop: Header=BB67_7 Depth=1
	.cfi_def_cfa_offset 48
	movl	$40, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%r15, %r14
	testq	%r15, %r15
	je	.LBB67_10
.LBB67_7:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r15
	movq	8(%r14), %rdi
	leaq	24(%r14), %rax
	cmpq	%rax, %rdi
	je	.LBB67_9
# %bb.8:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB67_7 Depth=1
	movq	(%rax), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB67_9
	.p2align	4, 0x90
.LBB67_13:                              # %_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvELb1EEEEE18_M_deallocate_nodeEPSC_.exit.i.i.i.i
                                        #   in Loop: Header=BB67_11 Depth=1
	movl	$56, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%r12, %r14
	testq	%r12, %r12
	je	.LBB67_14
.LBB67_11:                              # %.lr.ph.i.i.i.i2
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r12
	movq	8(%r14), %rdi
	leaq	24(%r14), %rax
	cmpq	%rax, %rdi
	je	.LBB67_13
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB67_11 Depth=1
	movq	(%rax), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB67_13
	.p2align	4, 0x90
.LBB67_21:                              # %_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKPK7_objectSt6vectorIPS3_SaIS8_EEELb0EEEEE18_M_deallocate_nodeEPSC_.exit.i.i.i.i
                                        #   in Loop: Header=BB67_19 Depth=1
	movl	$40, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%r12, %r14
	testq	%r12, %r12
	je	.LBB67_22
.LBB67_19:                              # %.lr.ph.i.i.i.i10
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r12
	movq	16(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB67_21
# %bb.20:                               #   in Loop: Header=BB67_19 Depth=1
	movq	32(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB67_21
	.p2align	4, 0x90
.LBB67_27:                              # %_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt10type_indexSt6vectorIPFbP7_objectRPvESaISB_EEELb0EEEEE18_M_deallocate_nodeEPSF_.exit.i.i.i.i
                                        #   in Loop: Header=BB67_25 Depth=1
	movl	$40, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%r12, %r14
	testq	%r12, %r12
	je	.LBB67_28
.LBB67_25:                              # %.lr.ph.i.i.i.i14
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r12
	movq	16(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB67_27
# %bb.26:                               #   in Loop: Header=BB67_25 Depth=1
	movq	32(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB67_27
	.p2align	4, 0x90
.LBB67_41:                              # %_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaISA_EEELb0EEEEE18_M_deallocate_nodeEPSE_.exit.i.i.i.i
                                        #   in Loop: Header=BB67_39 Depth=1
	movl	$40, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%r12, %r14
	testq	%r12, %r12
	je	.LBB67_42
.LBB67_39:                              # %.lr.ph.i.i.i.i27
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r12
	movq	16(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB67_41
# %bb.40:                               #   in Loop: Header=BB67_39 Depth=1
	movq	32(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB67_41
.LBB67_47:                              # %_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB67_49:
	.cfi_def_cfa_offset 48
.Ltmp957:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB67_48:
.Ltmp954:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end67:
	.size	_ZN8pybind116detail9internalsD2Ev, .Lfunc_end67-_ZN8pybind116detail9internalsD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail9internalsD2Ev,"aG",@progbits,_ZN8pybind116detail9internalsD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table67:
.Lexception40:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase26-.Lttbaseref26
.Lttbaseref26:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end40-.Lcst_begin40
.Lcst_begin40:
	.uleb128 .Lfunc_begin40-.Lfunc_begin40  # >> Call Site 1 <<
	.uleb128 .Ltmp952-.Lfunc_begin40        #   Call between .Lfunc_begin40 and .Ltmp952
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp952-.Lfunc_begin40        # >> Call Site 2 <<
	.uleb128 .Ltmp953-.Ltmp952              #   Call between .Ltmp952 and .Ltmp953
	.uleb128 .Ltmp954-.Lfunc_begin40        #     jumps to .Ltmp954
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp955-.Lfunc_begin40        # >> Call Site 3 <<
	.uleb128 .Ltmp956-.Ltmp955              #   Call between .Ltmp955 and .Ltmp956
	.uleb128 .Ltmp957-.Lfunc_begin40        #     jumps to .Ltmp957
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp956-.Lfunc_begin40        # >> Call Site 4 <<
	.uleb128 .Lfunc_end67-.Ltmp956          #   Call between .Ltmp956 and .Lfunc_end67
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end40:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase26:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt13unordered_mapISt10type_indexP7_objectSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S2_EEED2Ev,"axG",@progbits,_ZNSt13unordered_mapISt10type_indexP7_objectSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S2_EEED2Ev,comdat
	.weak	_ZNSt13unordered_mapISt10type_indexP7_objectSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S2_EEED2Ev # -- Begin function _ZNSt13unordered_mapISt10type_indexP7_objectSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S2_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13unordered_mapISt10type_indexP7_objectSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S2_EEED2Ev,@function
_ZNSt13unordered_mapISt10type_indexP7_objectSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S2_EEED2Ev: # @_ZNSt13unordered_mapISt10type_indexP7_objectSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S2_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r14
	movq	16(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB68_2
	.p2align	4, 0x90
.LBB68_1:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r15
	movl	$24, %esi
	callq	_ZdlPvm@PLT
	movq	%r15, %rdi
	testq	%r15, %r15
	jne	.LBB68_1
.LBB68_2:                               # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv.exit.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r14)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB68_3
# %bb.4:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB68_3:                               # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEED2Ev.exit
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end68:
	.size	_ZNSt13unordered_mapISt10type_indexP7_objectSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S2_EEED2Ev, .Lfunc_end68-_ZNSt13unordered_mapISt10type_indexP7_objectSt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S2_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,"axG",@progbits,_ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,comdat
	.weak	_ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev # -- Begin function _ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,@function
_ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev: # @_ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	(%rdi), %r14
	testq	%r14, %r14
	jne	.LBB69_1
.LBB69_4:                               # %.loopexit
	movq	$0, (%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
	.p2align	4, 0x90
.LBB69_3:                               # %_ZNSt16allocator_traitsISaISt14_Fwd_list_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7destroyIS6_EEvRS8_PT_.exit.i
                                        #   in Loop: Header=BB69_1 Depth=1
	.cfi_def_cfa_offset 32
	movl	$40, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%r15, %r14
	testq	%r15, %r15
	je	.LBB69_4
.LBB69_1:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r15
	movq	8(%r14), %rdi
	leaq	24(%r14), %rax
	cmpq	%rax, %rdi
	je	.LBB69_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i
                                        #   in Loop: Header=BB69_1 Depth=1
	movq	(%rax), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB69_3
.Lfunc_end69:
	.size	_ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev, .Lfunc_end69-_ZNSt14_Fwd_list_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev,"axG",@progbits,_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev,comdat
	.weak	_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev # -- Begin function _ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev,@function
_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev: # @_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r15
	movq	16(%rdi), %r14
	testq	%r14, %r14
	jne	.LBB70_1
.LBB70_4:                               # %_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PvESaIS9_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSB_18_Mod_range_hashingENSB_20_Default_ranged_hashENSB_20_Prime_rehash_policyENSB_17_Hashtable_traitsILb1ELb0ELb1EEEE5clearEv.exit.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r15)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB70_5
# %bb.6:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
	.p2align	4, 0x90
.LBB70_3:                               # %_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvELb1EEEEE18_M_deallocate_nodeEPSC_.exit.i.i.i
                                        #   in Loop: Header=BB70_1 Depth=1
	.cfi_def_cfa_offset 48
	movl	$56, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%r12, %r14
	testq	%r12, %r12
	je	.LBB70_4
.LBB70_1:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r12
	movq	8(%r14), %rdi
	leaq	24(%r14), %rax
	cmpq	%rax, %rdi
	je	.LBB70_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB70_1 Depth=1
	movq	(%rax), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB70_3
.LBB70_5:                               # %_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PvESaIS9_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSB_18_Mod_range_hashingENSB_20_Default_ranged_hashENSB_20_Prime_rehash_policyENSB_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end70:
	.size	_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev, .Lfunc_end70-_ZNSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPvSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_S6_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev,"axG",@progbits,_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev,comdat
	.weak	_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev # -- Begin function _ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev,@function
_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev: # @_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r15
	movq	16(%rdi), %r14
	testq	%r14, %r14
	jne	.LBB71_1
.LBB71_4:                               # %_ZNSt10_HashtableIPK7_objectSt4pairIKS2_St6vectorIPS0_SaIS6_EEESaIS9_ENSt8__detail10_Select1stESt8equal_toIS2_ESt4hashIS2_ENSB_18_Mod_range_hashingENSB_20_Default_ranged_hashENSB_20_Prime_rehash_policyENSB_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv.exit.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r15)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB71_5
# %bb.6:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
	.p2align	4, 0x90
.LBB71_3:                               # %_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKPK7_objectSt6vectorIPS3_SaIS8_EEELb0EEEEE18_M_deallocate_nodeEPSC_.exit.i.i.i
                                        #   in Loop: Header=BB71_1 Depth=1
	.cfi_def_cfa_offset 48
	movl	$40, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%r12, %r14
	testq	%r12, %r12
	je	.LBB71_4
.LBB71_1:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r12
	movq	16(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB71_3
# %bb.2:                                #   in Loop: Header=BB71_1 Depth=1
	movq	32(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB71_3
.LBB71_5:                               # %_ZNSt10_HashtableIPK7_objectSt4pairIKS2_St6vectorIPS0_SaIS6_EEESaIS9_ENSt8__detail10_Select1stESt8equal_toIS2_ESt4hashIS2_ENSB_18_Mod_range_hashingENSB_20_Default_ranged_hashENSB_20_Prime_rehash_policyENSB_17_Hashtable_traitsILb0ELb0ELb1EEEED2Ev.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end71:
	.size	_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev, .Lfunc_end71-_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev,"axG",@progbits,_ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev,comdat
	.weak	_ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev # -- Begin function _ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev,@function
_ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev: # @_ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r15
	movq	16(%rdi), %r14
	testq	%r14, %r14
	jne	.LBB72_1
.LBB72_4:                               # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv.exit.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r15)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB72_5
# %bb.6:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
	.p2align	4, 0x90
.LBB72_3:                               # %_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt10type_indexSt6vectorIPFbP7_objectRPvESaISB_EEELb0EEEEE18_M_deallocate_nodeEPSF_.exit.i.i.i
                                        #   in Loop: Header=BB72_1 Depth=1
	.cfi_def_cfa_offset 48
	movl	$40, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%r12, %r14
	testq	%r12, %r12
	je	.LBB72_4
.LBB72_1:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r12
	movq	16(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB72_3
# %bb.2:                                #   in Loop: Header=BB72_1 Depth=1
	movq	32(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB72_3
.LBB72_5:                               # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEED2Ev.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end72:
	.size	_ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev, .Lfunc_end72-_ZNSt13unordered_mapISt10type_indexSt6vectorIPFbP7_objectRPvESaIS7_EESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S9_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev,"axG",@progbits,_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev,comdat
	.hidden	_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev # -- Begin function _ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev
	.weak	_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev,@function
_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev: # @_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r14
	movq	16(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB73_2
	.p2align	4, 0x90
.LBB73_1:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r15
	movl	$32, %esi
	callq	_ZdlPvm@PLT
	movq	%r15, %rdi
	testq	%r15, %r15
	jne	.LBB73_1
.LBB73_2:                               # %_ZNSt10_HashtableISt4pairIPK7_objectPKcES6_SaIS6_ENSt8__detail9_IdentityESt8equal_toIS6_EN8pybind116detail13override_hashENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb1ELb1ELb1EEEE5clearEv.exit.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r14)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB73_3
# %bb.4:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB73_3:                               # %_ZNSt10_HashtableISt4pairIPK7_objectPKcES6_SaIS6_ENSt8__detail9_IdentityESt8equal_toIS6_EN8pybind116detail13override_hashENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb1ELb1ELb1EEEED2Ev.exit
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end73:
	.size	_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev, .Lfunc_end73-_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev,"axG",@progbits,_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev,comdat
	.hidden	_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev # -- Begin function _ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev
	.weak	_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev,@function
_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev: # @_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r14
	movq	16(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB74_2
	.p2align	4, 0x90
.LBB74_1:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r15
	movl	$24, %esi
	callq	_ZdlPvm@PLT
	movq	%r15, %rdi
	testq	%r15, %r15
	jne	.LBB74_1
.LBB74_2:                               # %_ZNSt10_HashtableIPKvSt4pairIKS1_PN8pybind116detail8instanceEESaIS8_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb0ELb0ELb0EEEE5clearEv.exit.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r14)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB74_3
# %bb.4:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB74_3:                               # %_ZNSt10_HashtableIPKvSt4pairIKS1_PN8pybind116detail8instanceEESaIS8_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb0ELb0ELb0EEEED2Ev.exit
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end74:
	.size	_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev, .Lfunc_end74-_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev,"axG",@progbits,_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev,comdat
	.hidden	_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev # -- Begin function _ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev
	.weak	_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev,@function
_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev: # @_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r15
	movq	16(%rdi), %r14
	testq	%r14, %r14
	jne	.LBB75_1
.LBB75_4:                               # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv.exit.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r15)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB75_5
# %bb.6:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
	.p2align	4, 0x90
.LBB75_3:                               # %_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaISA_EEELb0EEEEE18_M_deallocate_nodeEPSE_.exit.i.i.i
                                        #   in Loop: Header=BB75_1 Depth=1
	.cfi_def_cfa_offset 48
	movl	$40, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%r12, %r14
	testq	%r12, %r12
	je	.LBB75_4
.LBB75_1:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r12
	movq	16(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB75_3
# %bb.2:                                #   in Loop: Header=BB75_1 Depth=1
	movq	32(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB75_3
.LBB75_5:                               # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEED2Ev.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end75:
	.size	_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev, .Lfunc_end75-_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev,"axG",@progbits,_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev,comdat
	.hidden	_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev # -- Begin function _ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev
	.weak	_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev,@function
_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev: # @_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r14
	movq	16(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB76_2
	.p2align	4, 0x90
.LBB76_1:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r15
	movl	$24, %esi
	callq	_ZdlPvm@PLT
	movq	%r15, %rdi
	testq	%r15, %r15
	jne	.LBB76_1
.LBB76_2:                               # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv.exit.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r14)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB76_3
# %bb.4:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB76_3:                               # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEED2Ev.exit
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end76:
	.size	_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev, .Lfunc_end76-_ZNSt13unordered_mapISt10type_indexPN8pybind116detail9type_infoESt4hashIS0_ESt8equal_toIS0_ESaISt4pairIKS0_S4_EEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail25make_static_property_typeEv,"axG",@progbits,_ZN8pybind116detail25make_static_property_typeEv,comdat
	.hidden	_ZN8pybind116detail25make_static_property_typeEv # -- Begin function _ZN8pybind116detail25make_static_property_typeEv
	.weak	_ZN8pybind116detail25make_static_property_typeEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail25make_static_property_typeEv,@function
_ZN8pybind116detail25make_static_property_typeEv: # @_ZN8pybind116detail25make_static_property_typeEv
.Lfunc_begin41:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception41
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$24, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	leaq	.L.str.62(%rip), %r14
	movq	%r14, %rdi
	callq	PyUnicode_FromString@PLT
	movq	%rax, 8(%rsp)
	movq	PyType_Type@GOTPCREL(%rip), %rdi
.Ltmp958:
	xorl	%esi, %esi
	callq	*304(%rdi)
.Ltmp959:
# %bb.1:
	movq	%rax, %rbx
	testq	%rax, %rax
	je	.LBB77_2
# %bb.5:
.Ltmp960:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp961:
# %bb.6:
	movq	(%rax), %rax
	movq	%rax, 856(%rbx)
.Ltmp962:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp963:
# %bb.7:
	movq	(%rax), %rax
	movq	%rax, 872(%rbx)
	movq	%r14, 24(%rbx)
	movq	PyProperty_Type@GOTPCREL(%rip), %rax
	movl	(%rax), %ecx
	incl	%ecx
	je	.LBB77_9
# %bb.8:
	movl	%ecx, (%rax)
.LBB77_9:                               # %_ZN8pybind116detail11type_increfEP11_typeobject.exit
	movq	%rax, 256(%rbx)
	leaq	pybind11_static_get(%rip), %rax
	movq	%rax, 272(%rbx)
	leaq	pybind11_static_set(%rip), %rax
	movq	%rax, 280(%rbx)
	movq	$17936, 168(%rbx)               # imm = 0x4610
	leaq	pybind11_traverse(%rip), %rax
	movq	%rax, 184(%rbx)
	leaq	pybind11_clear(%rip), %rax
	movq	%rax, 192(%rbx)
	leaq	_ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset(%rip), %rax
	movq	%rax, 248(%rbx)
.Ltmp964:
	movq	%rbx, %rdi
	callq	PyType_Ready@PLT
.Ltmp965:
# %bb.10:
	testl	%eax, %eax
	js	.LBB77_11
# %bb.14:
.Ltmp966:
	leaq	.L.str.66(%rip), %rsi
	leaq	16(%rsp), %rdi
	callq	_ZN8pybind113strC2EPKc
.Ltmp967:
# %bb.15:
	movq	16(%rsp), %rdx
.Ltmp969:
	leaq	.L.str.65(%rip), %rsi
	movq	%rbx, %rdi
	callq	PyObject_SetAttrString@PLT
.Ltmp970:
# %bb.16:                               # %.noexc
	testl	%eax, %eax
	jne	.LBB77_17
# %bb.22:                               # %_ZN8pybind117setattrENS_6handleEPKcS0_.exit
.Ltmp980:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp981:
# %bb.23:                               # %_ZN8pybind116objectD2Ev.exit
.Ltmp983:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp984:
# %bb.24:                               # %_ZN8pybind116objectD2Ev.exit23
	movq	%rbx, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB77_2:
	.cfi_def_cfa_offset 48
.Ltmp989:
	leaq	.L.str.63(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp990:
# %bb.3:
.LBB77_11:
.Ltmp986:
	leaq	.L.str.64(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp987:
# %bb.12:
.LBB77_17:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp971:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp972:
# %bb.18:
.Ltmp974:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp975:
# %bb.19:                               # %.noexc22
.LBB77_20:
.Ltmp973:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB77_26
.LBB77_32:
.Ltmp985:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB77_21:
.Ltmp982:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB77_28:
.Ltmp968:
	jmp	.LBB77_29
.LBB77_25:
.Ltmp976:
	movq	%rax, %rbx
.LBB77_26:                              # %.body
.Ltmp977:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp978:
	jmp	.LBB77_30
.LBB77_27:
.Ltmp979:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB77_13:
.Ltmp988:
	jmp	.LBB77_29
.LBB77_4:
.Ltmp991:
.LBB77_29:
	movq	%rax, %rbx
.LBB77_30:
.Ltmp992:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp993:
# %bb.31:                               # %_ZN8pybind116objectD2Ev.exit25
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB77_33:
.Ltmp994:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end77:
	.size	_ZN8pybind116detail25make_static_property_typeEv, .Lfunc_end77-_ZN8pybind116detail25make_static_property_typeEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail25make_static_property_typeEv,"aG",@progbits,_ZN8pybind116detail25make_static_property_typeEv,comdat
	.p2align	2, 0x0
GCC_except_table77:
.Lexception41:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase27-.Lttbaseref27
.Lttbaseref27:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end41-.Lcst_begin41
.Lcst_begin41:
	.uleb128 .Lfunc_begin41-.Lfunc_begin41  # >> Call Site 1 <<
	.uleb128 .Ltmp958-.Lfunc_begin41        #   Call between .Lfunc_begin41 and .Ltmp958
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp958-.Lfunc_begin41        # >> Call Site 2 <<
	.uleb128 .Ltmp963-.Ltmp958              #   Call between .Ltmp958 and .Ltmp963
	.uleb128 .Ltmp991-.Lfunc_begin41        #     jumps to .Ltmp991
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp964-.Lfunc_begin41        # >> Call Site 3 <<
	.uleb128 .Ltmp965-.Ltmp964              #   Call between .Ltmp964 and .Ltmp965
	.uleb128 .Ltmp988-.Lfunc_begin41        #     jumps to .Ltmp988
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp966-.Lfunc_begin41        # >> Call Site 4 <<
	.uleb128 .Ltmp967-.Ltmp966              #   Call between .Ltmp966 and .Ltmp967
	.uleb128 .Ltmp968-.Lfunc_begin41        #     jumps to .Ltmp968
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp969-.Lfunc_begin41        # >> Call Site 5 <<
	.uleb128 .Ltmp970-.Ltmp969              #   Call between .Ltmp969 and .Ltmp970
	.uleb128 .Ltmp976-.Lfunc_begin41        #     jumps to .Ltmp976
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp980-.Lfunc_begin41        # >> Call Site 6 <<
	.uleb128 .Ltmp981-.Ltmp980              #   Call between .Ltmp980 and .Ltmp981
	.uleb128 .Ltmp982-.Lfunc_begin41        #     jumps to .Ltmp982
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp983-.Lfunc_begin41        # >> Call Site 7 <<
	.uleb128 .Ltmp984-.Ltmp983              #   Call between .Ltmp983 and .Ltmp984
	.uleb128 .Ltmp985-.Lfunc_begin41        #     jumps to .Ltmp985
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp989-.Lfunc_begin41        # >> Call Site 8 <<
	.uleb128 .Ltmp990-.Ltmp989              #   Call between .Ltmp989 and .Ltmp990
	.uleb128 .Ltmp991-.Lfunc_begin41        #     jumps to .Ltmp991
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp986-.Lfunc_begin41        # >> Call Site 9 <<
	.uleb128 .Ltmp987-.Ltmp986              #   Call between .Ltmp986 and .Ltmp987
	.uleb128 .Ltmp988-.Lfunc_begin41        #     jumps to .Ltmp988
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp987-.Lfunc_begin41        # >> Call Site 10 <<
	.uleb128 .Ltmp971-.Ltmp987              #   Call between .Ltmp987 and .Ltmp971
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp971-.Lfunc_begin41        # >> Call Site 11 <<
	.uleb128 .Ltmp972-.Ltmp971              #   Call between .Ltmp971 and .Ltmp972
	.uleb128 .Ltmp973-.Lfunc_begin41        #     jumps to .Ltmp973
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp974-.Lfunc_begin41        # >> Call Site 12 <<
	.uleb128 .Ltmp975-.Ltmp974              #   Call between .Ltmp974 and .Ltmp975
	.uleb128 .Ltmp976-.Lfunc_begin41        #     jumps to .Ltmp976
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp975-.Lfunc_begin41        # >> Call Site 13 <<
	.uleb128 .Ltmp977-.Ltmp975              #   Call between .Ltmp975 and .Ltmp977
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp977-.Lfunc_begin41        # >> Call Site 14 <<
	.uleb128 .Ltmp978-.Ltmp977              #   Call between .Ltmp977 and .Ltmp978
	.uleb128 .Ltmp979-.Lfunc_begin41        #     jumps to .Ltmp979
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp992-.Lfunc_begin41        # >> Call Site 15 <<
	.uleb128 .Ltmp993-.Ltmp992              #   Call between .Ltmp992 and .Ltmp993
	.uleb128 .Ltmp994-.Lfunc_begin41        #     jumps to .Ltmp994
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp993-.Lfunc_begin41        # >> Call Site 16 <<
	.uleb128 .Lfunc_end77-.Ltmp993          #   Call between .Ltmp993 and .Lfunc_end77
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end41:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase27:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail22make_default_metaclassEv,"axG",@progbits,_ZN8pybind116detail22make_default_metaclassEv,comdat
	.hidden	_ZN8pybind116detail22make_default_metaclassEv # -- Begin function _ZN8pybind116detail22make_default_metaclassEv
	.weak	_ZN8pybind116detail22make_default_metaclassEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail22make_default_metaclassEv,@function
_ZN8pybind116detail22make_default_metaclassEv: # @_ZN8pybind116detail22make_default_metaclassEv
.Lfunc_begin42:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception42
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	leaq	.L.str.68(%rip), %r15
	movq	%r15, %rdi
	callq	PyUnicode_FromString@PLT
	movq	%rax, (%rsp)
	movq	PyType_Type@GOTPCREL(%rip), %r14
.Ltmp995:
	movq	%r14, %rdi
	xorl	%esi, %esi
	callq	*304(%r14)
.Ltmp996:
# %bb.1:
	movq	%rax, %rbx
	testq	%rax, %rax
	je	.LBB78_2
# %bb.5:
.Ltmp997:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp998:
# %bb.6:
	movq	(%rax), %rax
	movq	%rax, 856(%rbx)
.Ltmp999:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1000:
# %bb.7:
	movq	(%rax), %rax
	movq	%rax, 872(%rbx)
	movq	%r15, 24(%rbx)
	movl	(%r14), %eax
	incl	%eax
	je	.LBB78_9
# %bb.8:
	movl	%eax, (%r14)
.LBB78_9:                               # %_ZN8pybind116detail11type_increfEP11_typeobject.exit
	movq	%r14, 256(%rbx)
	movq	$1536, 168(%rbx)                # imm = 0x600
	leaq	pybind11_meta_call(%rip), %rax
	movq	%rax, 128(%rbx)
	leaq	pybind11_meta_setattro(%rip), %rax
	movq	%rax, 152(%rbx)
	leaq	pybind11_meta_getattro(%rip), %rax
	movq	%rax, 144(%rbx)
	leaq	pybind11_meta_dealloc(%rip), %rax
	movq	%rax, 48(%rbx)
.Ltmp1001:
	movq	%rbx, %rdi
	callq	PyType_Ready@PLT
.Ltmp1002:
# %bb.10:
	testl	%eax, %eax
	js	.LBB78_11
# %bb.14:
.Ltmp1003:
	leaq	.L.str.66(%rip), %rsi
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2EPKc
.Ltmp1004:
# %bb.15:
	movq	8(%rsp), %rdx
.Ltmp1006:
	leaq	.L.str.65(%rip), %rsi
	movq	%rbx, %rdi
	callq	PyObject_SetAttrString@PLT
.Ltmp1007:
# %bb.16:                               # %.noexc
	testl	%eax, %eax
	jne	.LBB78_17
# %bb.22:                               # %_ZN8pybind117setattrENS_6handleEPKcS0_.exit
.Ltmp1017:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1018:
# %bb.23:                               # %_ZN8pybind116objectD2Ev.exit
.Ltmp1020:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1021:
# %bb.24:                               # %_ZN8pybind116objectD2Ev.exit24
	movq	%rbx, %rax
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB78_2:
	.cfi_def_cfa_offset 48
.Ltmp1026:
	leaq	.L.str.69(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1027:
# %bb.3:
.LBB78_11:
.Ltmp1023:
	leaq	.L.str.70(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1024:
# %bb.12:
.LBB78_17:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp1008:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1009:
# %bb.18:
.Ltmp1011:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp1012:
# %bb.19:                               # %.noexc23
.LBB78_20:
.Ltmp1010:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB78_26
.LBB78_32:
.Ltmp1022:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB78_21:
.Ltmp1019:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB78_28:
.Ltmp1005:
	jmp	.LBB78_29
.LBB78_25:
.Ltmp1013:
	movq	%rax, %rbx
.LBB78_26:                              # %.body
.Ltmp1014:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1015:
	jmp	.LBB78_30
.LBB78_27:
.Ltmp1016:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB78_13:
.Ltmp1025:
	jmp	.LBB78_29
.LBB78_4:
.Ltmp1028:
.LBB78_29:
	movq	%rax, %rbx
.LBB78_30:
.Ltmp1029:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1030:
# %bb.31:                               # %_ZN8pybind116objectD2Ev.exit26
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB78_33:
.Ltmp1031:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end78:
	.size	_ZN8pybind116detail22make_default_metaclassEv, .Lfunc_end78-_ZN8pybind116detail22make_default_metaclassEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail22make_default_metaclassEv,"aG",@progbits,_ZN8pybind116detail22make_default_metaclassEv,comdat
	.p2align	2, 0x0
GCC_except_table78:
.Lexception42:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase28-.Lttbaseref28
.Lttbaseref28:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end42-.Lcst_begin42
.Lcst_begin42:
	.uleb128 .Lfunc_begin42-.Lfunc_begin42  # >> Call Site 1 <<
	.uleb128 .Ltmp995-.Lfunc_begin42        #   Call between .Lfunc_begin42 and .Ltmp995
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp995-.Lfunc_begin42        # >> Call Site 2 <<
	.uleb128 .Ltmp1000-.Ltmp995             #   Call between .Ltmp995 and .Ltmp1000
	.uleb128 .Ltmp1028-.Lfunc_begin42       #     jumps to .Ltmp1028
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1001-.Lfunc_begin42       # >> Call Site 3 <<
	.uleb128 .Ltmp1002-.Ltmp1001            #   Call between .Ltmp1001 and .Ltmp1002
	.uleb128 .Ltmp1025-.Lfunc_begin42       #     jumps to .Ltmp1025
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1003-.Lfunc_begin42       # >> Call Site 4 <<
	.uleb128 .Ltmp1004-.Ltmp1003            #   Call between .Ltmp1003 and .Ltmp1004
	.uleb128 .Ltmp1005-.Lfunc_begin42       #     jumps to .Ltmp1005
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1006-.Lfunc_begin42       # >> Call Site 5 <<
	.uleb128 .Ltmp1007-.Ltmp1006            #   Call between .Ltmp1006 and .Ltmp1007
	.uleb128 .Ltmp1013-.Lfunc_begin42       #     jumps to .Ltmp1013
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1017-.Lfunc_begin42       # >> Call Site 6 <<
	.uleb128 .Ltmp1018-.Ltmp1017            #   Call between .Ltmp1017 and .Ltmp1018
	.uleb128 .Ltmp1019-.Lfunc_begin42       #     jumps to .Ltmp1019
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1020-.Lfunc_begin42       # >> Call Site 7 <<
	.uleb128 .Ltmp1021-.Ltmp1020            #   Call between .Ltmp1020 and .Ltmp1021
	.uleb128 .Ltmp1022-.Lfunc_begin42       #     jumps to .Ltmp1022
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1026-.Lfunc_begin42       # >> Call Site 8 <<
	.uleb128 .Ltmp1027-.Ltmp1026            #   Call between .Ltmp1026 and .Ltmp1027
	.uleb128 .Ltmp1028-.Lfunc_begin42       #     jumps to .Ltmp1028
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1023-.Lfunc_begin42       # >> Call Site 9 <<
	.uleb128 .Ltmp1024-.Ltmp1023            #   Call between .Ltmp1023 and .Ltmp1024
	.uleb128 .Ltmp1025-.Lfunc_begin42       #     jumps to .Ltmp1025
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1024-.Lfunc_begin42       # >> Call Site 10 <<
	.uleb128 .Ltmp1008-.Ltmp1024            #   Call between .Ltmp1024 and .Ltmp1008
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1008-.Lfunc_begin42       # >> Call Site 11 <<
	.uleb128 .Ltmp1009-.Ltmp1008            #   Call between .Ltmp1008 and .Ltmp1009
	.uleb128 .Ltmp1010-.Lfunc_begin42       #     jumps to .Ltmp1010
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1011-.Lfunc_begin42       # >> Call Site 12 <<
	.uleb128 .Ltmp1012-.Ltmp1011            #   Call between .Ltmp1011 and .Ltmp1012
	.uleb128 .Ltmp1013-.Lfunc_begin42       #     jumps to .Ltmp1013
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1012-.Lfunc_begin42       # >> Call Site 13 <<
	.uleb128 .Ltmp1014-.Ltmp1012            #   Call between .Ltmp1012 and .Ltmp1014
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1014-.Lfunc_begin42       # >> Call Site 14 <<
	.uleb128 .Ltmp1015-.Ltmp1014            #   Call between .Ltmp1014 and .Ltmp1015
	.uleb128 .Ltmp1016-.Lfunc_begin42       #     jumps to .Ltmp1016
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1029-.Lfunc_begin42       # >> Call Site 15 <<
	.uleb128 .Ltmp1030-.Ltmp1029            #   Call between .Ltmp1029 and .Ltmp1030
	.uleb128 .Ltmp1031-.Lfunc_begin42       #     jumps to .Ltmp1031
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1030-.Lfunc_begin42       # >> Call Site 16 <<
	.uleb128 .Lfunc_end78-.Ltmp1030         #   Call between .Ltmp1030 and .Lfunc_end78
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end42:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase28:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE
.Lfunc_begin43:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception43
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	(%rdi), %rax
	testq	%rax, %rax
	jne	.LBB79_1
.LBB79_57:
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB79_1:                               # %_ZNSt15__exception_ptr13exception_ptrC2ERKS0_.exit
	.cfi_def_cfa_offset 48
	movq	%rdi, %rbx
	movq	%rax, 8(%rsp)
	leaq	8(%rsp), %r14
	movq	%r14, %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv@PLT
.Ltmp1032:
	movq	%r14, %rdi
	callq	_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE@PLT
.Ltmp1033:
# %bb.2:
.LBB79_3:
.Ltmp1034:
	movq	%rdx, %r15
	movq	%rax, %r14
	cmpq	$0, 8(%rsp)
	je	.LBB79_5
# %bb.4:
	leaq	8(%rsp), %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
.LBB79_5:                               # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit
	movq	%r14, %rdi
	cmpl	$12, %r15d
	jne	.LBB79_8
# %bb.6:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
.Ltmp1111:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
.Ltmp1112:
# %bb.7:
	movq	8(%r14), %rdi
.Ltmp1113:
	callq	_ZN8pybind116detail25error_fetch_and_normalize7restoreEv
.Ltmp1114:
	jmp	.LBB79_56
.LBB79_8:
	cmpl	$11, %r15d
	jne	.LBB79_13
# %bb.9:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB79_12
# %bb.10:
	leaq	_ZTIN8pybind1117builtin_exceptionE(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	%r14, %rdi
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	testq	%rax, %rax
	je	.LBB79_12
# %bb.11:
.Ltmp1103:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
.Ltmp1104:
.LBB79_12:                              # %.thread
	movq	(%r14), %rax
.Ltmp1106:
	movq	%r14, %rdi
	callq	*24(%rax)
.Ltmp1107:
	jmp	.LBB79_56
.LBB79_13:
	cmpl	$10, %r15d
	jne	.LBB79_16
# %bb.14:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
.Ltmp1096:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
.Ltmp1097:
# %bb.15:
	movq	PyExc_MemoryError@GOTPCREL(%rip), %rax
	movq	(%rax), %rbx
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
.Ltmp1098:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp1099:
	jmp	.LBB79_56
.LBB79_16:
	cmpl	$9, %r15d
	jne	.LBB79_19
# %bb.17:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
.Ltmp1089:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
.Ltmp1090:
# %bb.18:
	movq	PyExc_ValueError@GOTPCREL(%rip), %rax
	movq	(%rax), %rbx
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
.Ltmp1091:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp1092:
	jmp	.LBB79_56
.LBB79_19:
	cmpl	$8, %r15d
	jne	.LBB79_22
# %bb.20:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
.Ltmp1082:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
.Ltmp1083:
# %bb.21:
	movq	PyExc_ValueError@GOTPCREL(%rip), %rax
	movq	(%rax), %rbx
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
.Ltmp1084:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp1085:
	jmp	.LBB79_56
.LBB79_22:
	cmpl	$7, %r15d
	jne	.LBB79_25
# %bb.23:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
.Ltmp1075:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
.Ltmp1076:
# %bb.24:
	movq	PyExc_ValueError@GOTPCREL(%rip), %rax
	movq	(%rax), %rbx
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
.Ltmp1077:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp1078:
	jmp	.LBB79_56
.LBB79_25:
	cmpl	$6, %r15d
	jne	.LBB79_28
# %bb.26:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
.Ltmp1068:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
.Ltmp1069:
# %bb.27:
	movq	PyExc_IndexError@GOTPCREL(%rip), %rax
	movq	(%rax), %rbx
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
.Ltmp1070:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp1071:
	jmp	.LBB79_56
.LBB79_28:
	cmpl	$5, %r15d
	jne	.LBB79_31
# %bb.29:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
.Ltmp1061:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
.Ltmp1062:
# %bb.30:
	movq	PyExc_ValueError@GOTPCREL(%rip), %rax
	movq	(%rax), %rbx
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
.Ltmp1063:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp1064:
	jmp	.LBB79_56
.LBB79_31:
	cmpl	$4, %r15d
	jne	.LBB79_34
# %bb.32:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
.Ltmp1054:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
.Ltmp1055:
# %bb.33:
	movq	PyExc_OverflowError@GOTPCREL(%rip), %rax
	movq	(%rax), %rbx
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
.Ltmp1056:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp1057:
	jmp	.LBB79_56
.LBB79_34:
	cmpl	$3, %r15d
	jne	.LBB79_37
# %bb.35:
	callq	__cxa_begin_catch@PLT
	movq	%rax, %r14
.Ltmp1047:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
.Ltmp1048:
# %bb.36:
	movq	PyExc_RuntimeError@GOTPCREL(%rip), %rax
	movq	(%rax), %rbx
	movq	(%r14), %rax
	movq	%r14, %rdi
	callq	*16(%rax)
.Ltmp1049:
	movq	%rbx, %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp1050:
	jmp	.LBB79_56
.LBB79_37:
	callq	__cxa_begin_catch@PLT
	cmpl	$2, %r15d
	jne	.LBB79_55
# %bb.38:
.Ltmp1040:
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
.Ltmp1041:
# %bb.39:
	movq	PyExc_RuntimeError@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
.Ltmp1042:
	leaq	.L.str.172(%rip), %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp1043:
	jmp	.LBB79_56
.LBB79_55:
	movq	PyExc_RuntimeError@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
.Ltmp1035:
	leaq	.L.str.171(%rip), %rsi
	callq	_ZN8pybind116detail9raise_errEP7_objectPKc
.Ltmp1036:
.LBB79_56:                              # %.sink.split
	callq	__cxa_end_catch@PLT
	jmp	.LBB79_57
.LBB79_40:
.Ltmp1037:
	movq	%rax, %rbx
.Ltmp1038:
	callq	__cxa_end_catch@PLT
.Ltmp1039:
	jmp	.LBB79_41
.LBB79_42:
.Ltmp1044:
	movq	%rax, %rbx
.Ltmp1045:
	callq	__cxa_end_catch@PLT
.Ltmp1046:
	jmp	.LBB79_41
.LBB79_43:
.Ltmp1051:
	movq	%rax, %rbx
.Ltmp1052:
	callq	__cxa_end_catch@PLT
.Ltmp1053:
	jmp	.LBB79_41
.LBB79_44:
.Ltmp1058:
	movq	%rax, %rbx
.Ltmp1059:
	callq	__cxa_end_catch@PLT
.Ltmp1060:
	jmp	.LBB79_41
.LBB79_45:
.Ltmp1065:
	movq	%rax, %rbx
.Ltmp1066:
	callq	__cxa_end_catch@PLT
.Ltmp1067:
	jmp	.LBB79_41
.LBB79_46:
.Ltmp1072:
	movq	%rax, %rbx
.Ltmp1073:
	callq	__cxa_end_catch@PLT
.Ltmp1074:
	jmp	.LBB79_41
.LBB79_47:
.Ltmp1079:
	movq	%rax, %rbx
.Ltmp1080:
	callq	__cxa_end_catch@PLT
.Ltmp1081:
	jmp	.LBB79_41
.LBB79_48:
.Ltmp1086:
	movq	%rax, %rbx
.Ltmp1087:
	callq	__cxa_end_catch@PLT
.Ltmp1088:
	jmp	.LBB79_41
.LBB79_51:
.Ltmp1105:
	jmp	.LBB79_53
.LBB79_49:
.Ltmp1093:
	movq	%rax, %rbx
.Ltmp1094:
	callq	__cxa_end_catch@PLT
.Ltmp1095:
	jmp	.LBB79_41
.LBB79_50:
.Ltmp1100:
	movq	%rax, %rbx
.Ltmp1101:
	callq	__cxa_end_catch@PLT
.Ltmp1102:
	jmp	.LBB79_41
.LBB79_52:
.Ltmp1108:
.LBB79_53:
	movq	%rax, %rbx
.Ltmp1109:
	callq	__cxa_end_catch@PLT
.Ltmp1110:
	jmp	.LBB79_41
.LBB79_54:
.Ltmp1115:
	movq	%rax, %rbx
.Ltmp1116:
	callq	__cxa_end_catch@PLT
.Ltmp1117:
.LBB79_41:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB79_58:
.Ltmp1118:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end79:
	.size	_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE, .Lfunc_end79-_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE,"aG",@progbits,_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE,comdat
	.p2align	2, 0x0
GCC_except_table79:
.Lexception43:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase29-.Lttbaseref29
.Lttbaseref29:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end43-.Lcst_begin43
.Lcst_begin43:
	.uleb128 .Ltmp1032-.Lfunc_begin43       # >> Call Site 1 <<
	.uleb128 .Ltmp1033-.Ltmp1032            #   Call between .Ltmp1032 and .Ltmp1033
	.uleb128 .Ltmp1034-.Lfunc_begin43       #     jumps to .Ltmp1034
	.byte	23                              #   On action: 12
	.uleb128 .Ltmp1033-.Lfunc_begin43       # >> Call Site 2 <<
	.uleb128 .Ltmp1111-.Ltmp1033            #   Call between .Ltmp1033 and .Ltmp1111
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1111-.Lfunc_begin43       # >> Call Site 3 <<
	.uleb128 .Ltmp1114-.Ltmp1111            #   Call between .Ltmp1111 and .Ltmp1114
	.uleb128 .Ltmp1115-.Lfunc_begin43       #     jumps to .Ltmp1115
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1114-.Lfunc_begin43       # >> Call Site 4 <<
	.uleb128 .Ltmp1103-.Ltmp1114            #   Call between .Ltmp1114 and .Ltmp1103
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1103-.Lfunc_begin43       # >> Call Site 5 <<
	.uleb128 .Ltmp1104-.Ltmp1103            #   Call between .Ltmp1103 and .Ltmp1104
	.uleb128 .Ltmp1105-.Lfunc_begin43       #     jumps to .Ltmp1105
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1106-.Lfunc_begin43       # >> Call Site 6 <<
	.uleb128 .Ltmp1107-.Ltmp1106            #   Call between .Ltmp1106 and .Ltmp1107
	.uleb128 .Ltmp1108-.Lfunc_begin43       #     jumps to .Ltmp1108
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1107-.Lfunc_begin43       # >> Call Site 7 <<
	.uleb128 .Ltmp1096-.Ltmp1107            #   Call between .Ltmp1107 and .Ltmp1096
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1096-.Lfunc_begin43       # >> Call Site 8 <<
	.uleb128 .Ltmp1097-.Ltmp1096            #   Call between .Ltmp1096 and .Ltmp1097
	.uleb128 .Ltmp1100-.Lfunc_begin43       #     jumps to .Ltmp1100
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1097-.Lfunc_begin43       # >> Call Site 9 <<
	.uleb128 .Ltmp1098-.Ltmp1097            #   Call between .Ltmp1097 and .Ltmp1098
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1098-.Lfunc_begin43       # >> Call Site 10 <<
	.uleb128 .Ltmp1099-.Ltmp1098            #   Call between .Ltmp1098 and .Ltmp1099
	.uleb128 .Ltmp1100-.Lfunc_begin43       #     jumps to .Ltmp1100
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1099-.Lfunc_begin43       # >> Call Site 11 <<
	.uleb128 .Ltmp1089-.Ltmp1099            #   Call between .Ltmp1099 and .Ltmp1089
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1089-.Lfunc_begin43       # >> Call Site 12 <<
	.uleb128 .Ltmp1090-.Ltmp1089            #   Call between .Ltmp1089 and .Ltmp1090
	.uleb128 .Ltmp1093-.Lfunc_begin43       #     jumps to .Ltmp1093
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1090-.Lfunc_begin43       # >> Call Site 13 <<
	.uleb128 .Ltmp1091-.Ltmp1090            #   Call between .Ltmp1090 and .Ltmp1091
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1091-.Lfunc_begin43       # >> Call Site 14 <<
	.uleb128 .Ltmp1092-.Ltmp1091            #   Call between .Ltmp1091 and .Ltmp1092
	.uleb128 .Ltmp1093-.Lfunc_begin43       #     jumps to .Ltmp1093
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1092-.Lfunc_begin43       # >> Call Site 15 <<
	.uleb128 .Ltmp1082-.Ltmp1092            #   Call between .Ltmp1092 and .Ltmp1082
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1082-.Lfunc_begin43       # >> Call Site 16 <<
	.uleb128 .Ltmp1083-.Ltmp1082            #   Call between .Ltmp1082 and .Ltmp1083
	.uleb128 .Ltmp1086-.Lfunc_begin43       #     jumps to .Ltmp1086
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1083-.Lfunc_begin43       # >> Call Site 17 <<
	.uleb128 .Ltmp1084-.Ltmp1083            #   Call between .Ltmp1083 and .Ltmp1084
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1084-.Lfunc_begin43       # >> Call Site 18 <<
	.uleb128 .Ltmp1085-.Ltmp1084            #   Call between .Ltmp1084 and .Ltmp1085
	.uleb128 .Ltmp1086-.Lfunc_begin43       #     jumps to .Ltmp1086
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1085-.Lfunc_begin43       # >> Call Site 19 <<
	.uleb128 .Ltmp1075-.Ltmp1085            #   Call between .Ltmp1085 and .Ltmp1075
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1075-.Lfunc_begin43       # >> Call Site 20 <<
	.uleb128 .Ltmp1076-.Ltmp1075            #   Call between .Ltmp1075 and .Ltmp1076
	.uleb128 .Ltmp1079-.Lfunc_begin43       #     jumps to .Ltmp1079
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1076-.Lfunc_begin43       # >> Call Site 21 <<
	.uleb128 .Ltmp1077-.Ltmp1076            #   Call between .Ltmp1076 and .Ltmp1077
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1077-.Lfunc_begin43       # >> Call Site 22 <<
	.uleb128 .Ltmp1078-.Ltmp1077            #   Call between .Ltmp1077 and .Ltmp1078
	.uleb128 .Ltmp1079-.Lfunc_begin43       #     jumps to .Ltmp1079
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1078-.Lfunc_begin43       # >> Call Site 23 <<
	.uleb128 .Ltmp1068-.Ltmp1078            #   Call between .Ltmp1078 and .Ltmp1068
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1068-.Lfunc_begin43       # >> Call Site 24 <<
	.uleb128 .Ltmp1069-.Ltmp1068            #   Call between .Ltmp1068 and .Ltmp1069
	.uleb128 .Ltmp1072-.Lfunc_begin43       #     jumps to .Ltmp1072
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1069-.Lfunc_begin43       # >> Call Site 25 <<
	.uleb128 .Ltmp1070-.Ltmp1069            #   Call between .Ltmp1069 and .Ltmp1070
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1070-.Lfunc_begin43       # >> Call Site 26 <<
	.uleb128 .Ltmp1071-.Ltmp1070            #   Call between .Ltmp1070 and .Ltmp1071
	.uleb128 .Ltmp1072-.Lfunc_begin43       #     jumps to .Ltmp1072
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1071-.Lfunc_begin43       # >> Call Site 27 <<
	.uleb128 .Ltmp1061-.Ltmp1071            #   Call between .Ltmp1071 and .Ltmp1061
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1061-.Lfunc_begin43       # >> Call Site 28 <<
	.uleb128 .Ltmp1062-.Ltmp1061            #   Call between .Ltmp1061 and .Ltmp1062
	.uleb128 .Ltmp1065-.Lfunc_begin43       #     jumps to .Ltmp1065
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1062-.Lfunc_begin43       # >> Call Site 29 <<
	.uleb128 .Ltmp1063-.Ltmp1062            #   Call between .Ltmp1062 and .Ltmp1063
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1063-.Lfunc_begin43       # >> Call Site 30 <<
	.uleb128 .Ltmp1064-.Ltmp1063            #   Call between .Ltmp1063 and .Ltmp1064
	.uleb128 .Ltmp1065-.Lfunc_begin43       #     jumps to .Ltmp1065
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1064-.Lfunc_begin43       # >> Call Site 31 <<
	.uleb128 .Ltmp1054-.Ltmp1064            #   Call between .Ltmp1064 and .Ltmp1054
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1054-.Lfunc_begin43       # >> Call Site 32 <<
	.uleb128 .Ltmp1055-.Ltmp1054            #   Call between .Ltmp1054 and .Ltmp1055
	.uleb128 .Ltmp1058-.Lfunc_begin43       #     jumps to .Ltmp1058
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1055-.Lfunc_begin43       # >> Call Site 33 <<
	.uleb128 .Ltmp1056-.Ltmp1055            #   Call between .Ltmp1055 and .Ltmp1056
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1056-.Lfunc_begin43       # >> Call Site 34 <<
	.uleb128 .Ltmp1057-.Ltmp1056            #   Call between .Ltmp1056 and .Ltmp1057
	.uleb128 .Ltmp1058-.Lfunc_begin43       #     jumps to .Ltmp1058
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1057-.Lfunc_begin43       # >> Call Site 35 <<
	.uleb128 .Ltmp1047-.Ltmp1057            #   Call between .Ltmp1057 and .Ltmp1047
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1047-.Lfunc_begin43       # >> Call Site 36 <<
	.uleb128 .Ltmp1048-.Ltmp1047            #   Call between .Ltmp1047 and .Ltmp1048
	.uleb128 .Ltmp1051-.Lfunc_begin43       #     jumps to .Ltmp1051
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1048-.Lfunc_begin43       # >> Call Site 37 <<
	.uleb128 .Ltmp1049-.Ltmp1048            #   Call between .Ltmp1048 and .Ltmp1049
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1049-.Lfunc_begin43       # >> Call Site 38 <<
	.uleb128 .Ltmp1050-.Ltmp1049            #   Call between .Ltmp1049 and .Ltmp1050
	.uleb128 .Ltmp1051-.Lfunc_begin43       #     jumps to .Ltmp1051
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1050-.Lfunc_begin43       # >> Call Site 39 <<
	.uleb128 .Ltmp1040-.Ltmp1050            #   Call between .Ltmp1050 and .Ltmp1040
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1040-.Lfunc_begin43       # >> Call Site 40 <<
	.uleb128 .Ltmp1043-.Ltmp1040            #   Call between .Ltmp1040 and .Ltmp1043
	.uleb128 .Ltmp1044-.Lfunc_begin43       #     jumps to .Ltmp1044
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1035-.Lfunc_begin43       # >> Call Site 41 <<
	.uleb128 .Ltmp1036-.Ltmp1035            #   Call between .Ltmp1035 and .Ltmp1036
	.uleb128 .Ltmp1037-.Lfunc_begin43       #     jumps to .Ltmp1037
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1036-.Lfunc_begin43       # >> Call Site 42 <<
	.uleb128 .Ltmp1038-.Ltmp1036            #   Call between .Ltmp1036 and .Ltmp1038
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1038-.Lfunc_begin43       # >> Call Site 43 <<
	.uleb128 .Ltmp1117-.Ltmp1038            #   Call between .Ltmp1038 and .Ltmp1117
	.uleb128 .Ltmp1118-.Lfunc_begin43       #     jumps to .Ltmp1118
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1117-.Lfunc_begin43       # >> Call Site 44 <<
	.uleb128 .Lfunc_end79-.Ltmp1117         #   Call between .Ltmp1117 and .Lfunc_end79
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end43:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.byte	2                               # >> Action Record 2 <<
                                        #   Catch TypeInfo 2
	.byte	125                             #   Continue to action 1
	.byte	3                               # >> Action Record 3 <<
                                        #   Catch TypeInfo 3
	.byte	125                             #   Continue to action 2
	.byte	4                               # >> Action Record 4 <<
                                        #   Catch TypeInfo 4
	.byte	125                             #   Continue to action 3
	.byte	5                               # >> Action Record 5 <<
                                        #   Catch TypeInfo 5
	.byte	125                             #   Continue to action 4
	.byte	6                               # >> Action Record 6 <<
                                        #   Catch TypeInfo 6
	.byte	125                             #   Continue to action 5
	.byte	7                               # >> Action Record 7 <<
                                        #   Catch TypeInfo 7
	.byte	125                             #   Continue to action 6
	.byte	8                               # >> Action Record 8 <<
                                        #   Catch TypeInfo 8
	.byte	125                             #   Continue to action 7
	.byte	9                               # >> Action Record 9 <<
                                        #   Catch TypeInfo 9
	.byte	125                             #   Continue to action 8
	.byte	10                              # >> Action Record 10 <<
                                        #   Catch TypeInfo 10
	.byte	125                             #   Continue to action 9
	.byte	11                              # >> Action Record 11 <<
                                        #   Catch TypeInfo 11
	.byte	125                             #   Continue to action 10
	.byte	12                              # >> Action Record 12 <<
                                        #   Catch TypeInfo 12
	.byte	125                             #   Continue to action 11
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
.Ltmp1119:                              # TypeInfo 12
	.long	.L_ZTIN8pybind1117error_already_setE.DW.stub-.Ltmp1119
.Ltmp1120:                              # TypeInfo 11
	.long	.L_ZTIN8pybind1117builtin_exceptionE.DW.stub-.Ltmp1120
.Ltmp1121:                              # TypeInfo 10
	.long	.L_ZTISt9bad_alloc.DW.stub-.Ltmp1121
.Ltmp1122:                              # TypeInfo 9
	.long	.L_ZTISt12domain_error.DW.stub-.Ltmp1122
.Ltmp1123:                              # TypeInfo 8
	.long	.L_ZTISt16invalid_argument.DW.stub-.Ltmp1123
.Ltmp1124:                              # TypeInfo 7
	.long	.L_ZTISt12length_error.DW.stub-.Ltmp1124
.Ltmp1125:                              # TypeInfo 6
	.long	.L_ZTISt12out_of_range.DW.stub-.Ltmp1125
.Ltmp1126:                              # TypeInfo 5
	.long	.L_ZTISt11range_error.DW.stub-.Ltmp1126
.Ltmp1127:                              # TypeInfo 4
	.long	.L_ZTISt14overflow_error.DW.stub-.Ltmp1127
.Ltmp1128:                              # TypeInfo 3
	.long	.L_ZTISt9exception.DW.stub-.Ltmp1128
.Ltmp1129:                              # TypeInfo 2
	.long	.L_ZTISt16nested_exception.DW.stub-.Ltmp1129
	.long	0                               # TypeInfo 1
.Lttbase29:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text.pybind11_static_get,"axG",@progbits,pybind11_static_get,comdat
	.hidden	pybind11_static_get             # -- Begin function pybind11_static_get
	.weak	pybind11_static_get
	.p2align	4, 0x90
	.type	pybind11_static_get,@function
pybind11_static_get:                    # @pybind11_static_get
	.cfi_startproc
# %bb.0:
	movq	PyProperty_Type@GOTPCREL(%rip), %rax
	movq	272(%rax), %rax
	movq	%rdx, %rsi
	jmpq	*%rax                           # TAILCALL
.Lfunc_end80:
	.size	pybind11_static_get, .Lfunc_end80-pybind11_static_get
	.cfi_endproc
                                        # -- End function
	.section	.text.pybind11_static_set,"axG",@progbits,pybind11_static_set,comdat
	.hidden	pybind11_static_set             # -- Begin function pybind11_static_set
	.weak	pybind11_static_set
	.p2align	4, 0x90
	.type	pybind11_static_set,@function
pybind11_static_set:                    # @pybind11_static_set
	.cfi_startproc
# %bb.0:
	movq	8(%rsi), %rax
	cmpl	$0, 168(%rax)
	cmovnsq	%rax, %rsi
	movq	PyProperty_Type@GOTPCREL(%rip), %rax
	movq	280(%rax), %rax
	jmpq	*%rax                           # TAILCALL
.Lfunc_end81:
	.size	pybind11_static_set, .Lfunc_end81-pybind11_static_set
	.cfi_endproc
                                        # -- End function
	.section	.text.pybind11_traverse,"axG",@progbits,pybind11_traverse,comdat
	.hidden	pybind11_traverse               # -- Begin function pybind11_traverse
	.weak	pybind11_traverse
	.p2align	4, 0x90
	.type	pybind11_traverse,@function
pybind11_traverse:                      # @pybind11_traverse
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %rbx
	movq	%rdi, %r15
	callq	_PyObject_GetDictPtr@PLT
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB82_2
# %bb.1:
	movq	%r14, %rsi
	callq	*%rbx
	testl	%eax, %eax
	je	.LBB82_2
.LBB82_5:
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB82_2:
	.cfi_def_cfa_offset 32
	movq	8(%r15), %rdi
	testq	%rdi, %rdi
	je	.LBB82_4
# %bb.3:
	movq	%r14, %rsi
	callq	*%rbx
	testl	%eax, %eax
	jne	.LBB82_5
.LBB82_4:
	xorl	%eax, %eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end82:
	.size	pybind11_traverse, .Lfunc_end82-pybind11_traverse
	.cfi_endproc
                                        # -- End function
	.section	.text.pybind11_clear,"axG",@progbits,pybind11_clear,comdat
	.hidden	pybind11_clear                  # -- Begin function pybind11_clear
	.weak	pybind11_clear
	.p2align	4, 0x90
	.type	pybind11_clear,@function
pybind11_clear:                         # @pybind11_clear
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	callq	_PyObject_GetDictPtr@PLT
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB83_4
# %bb.1:
	movq	$0, (%rax)
	movq	(%rdi), %rax
	testl	%eax, %eax
	js	.LBB83_4
# %bb.2:
	decq	%rax
	movq	%rax, (%rdi)
	je	.LBB83_3
.LBB83_4:                               # %_ZL9Py_DECREFP7_object.exit
	xorl	%eax, %eax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.LBB83_3:
	.cfi_def_cfa_offset 16
	callq	_Py_Dealloc@PLT
	xorl	%eax, %eax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end83:
	.size	pybind11_clear, .Lfunc_end83-pybind11_clear
	.cfi_endproc
                                        # -- End function
	.section	.text.pybind11_meta_call,"axG",@progbits,pybind11_meta_call,comdat
	.hidden	pybind11_meta_call              # -- Begin function pybind11_meta_call
	.weak	pybind11_meta_call
	.p2align	4, 0x90
	.type	pybind11_meta_call,@function
pybind11_meta_call:                     # @pybind11_meta_call
.Lfunc_begin44:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception44
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	PyType_Type@GOTPCREL(%rip), %rax
	callq	*128(%rax)
	testq	%rax, %rax
	je	.LBB84_32
# %bb.1:
	movq	%rax, %rbx
	movq	8(%rax), %rdi
	callq	_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
	movq	%rax, %r14
	movq	16(%rax), %rax
	movq	24(%r14), %r15
	cmpq	%r15, %rax
	je	.LBB84_33
# %bb.2:                                # %.lr.ph
	movq	(%rax), %r13
	subq	%rax, %r15
	sarq	$3, %r15
	movzbl	48(%rbx), %eax
	xorl	%r12d, %r12d
	jmp	.LBB84_4
	.p2align	4, 0x90
.LBB84_3:                               #   in Loop: Header=BB84_4 Depth=1
	movq	(%rcx,%r12,8), %r13
	cmpq	%r15, %r12
	je	.LBB84_33
.LBB84_4:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB84_9 Depth 2
	testb	$2, %al
	jne	.LBB84_6
# %bb.5:                                #   in Loop: Header=BB84_4 Depth=1
	movq	24(%rbx), %rcx
	movzbl	(%rcx,%r12), %ecx
	andb	$1, %cl
	testb	%cl, %cl
	jne	.LBB84_12
	jmp	.LBB84_7
	.p2align	4, 0x90
.LBB84_6:                               #   in Loop: Header=BB84_4 Depth=1
	movl	%eax, %ecx
	andb	$4, %cl
	testb	%cl, %cl
	jne	.LBB84_12
.LBB84_7:                               #   in Loop: Header=BB84_4 Depth=1
	testq	%r12, %r12
	je	.LBB84_15
# %bb.8:                                # %.lr.ph.i.preheader
                                        #   in Loop: Header=BB84_4 Depth=1
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB84_9:                               # %.lr.ph.i
                                        #   Parent Loop BB84_4 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	16(%r14), %rax
	movq	(%rax,%rbp,8), %rcx
	movq	(%rcx), %rdi
	movq	(%rax,%r12,8), %rax
	movq	(%rax), %rsi
	callq	PyType_IsSubtype@PLT
	testl	%eax, %eax
	jne	.LBB84_11
# %bb.10:                               #   in Loop: Header=BB84_9 Depth=2
	incq	%rbp
	cmpq	%rbp, %r12
	jne	.LBB84_9
	jmp	.LBB84_15
.LBB84_11:                              # %_ZN8pybind116detail18values_and_holders29is_redundant_value_and_holderERKNS0_16value_and_holderE.exit.loopexit
                                        #   in Loop: Header=BB84_4 Depth=1
	movzbl	48(%rbx), %eax
.LBB84_12:                              # %._crit_edge.i
                                        #   in Loop: Header=BB84_4 Depth=1
	movq	16(%r14), %rcx
	movq	24(%r14), %rdx
	incq	%r12
	subq	%rcx, %rdx
	sarq	$3, %rdx
	cmpq	%rdx, %r12
	jb	.LBB84_3
# %bb.13:                               #   in Loop: Header=BB84_4 Depth=1
	xorl	%r13d, %r13d
	cmpq	%r15, %r12
	jne	.LBB84_4
	jmp	.LBB84_33
.LBB84_15:                              # %.loopexit
	movq	PyExc_TypeError@GOTPCREL(%rip), %rax
	movq	(%rax), %r14
	movq	(%r13), %rax
	movq	24(%rax), %r15
	leaq	24(%rsp), %rbp
	movq	%rbp, 8(%rsp)
	testq	%r15, %r15
	je	.LBB84_35
# %bb.16:
	movq	%r15, %rdi
	callq	strlen@PLT
	movq	%rax, %r12
	movq	%rbp, %r13
	cmpq	$16, %rax
	jb	.LBB84_20
# %bb.17:
	testq	%r12, %r12
	js	.LBB84_36
# %bb.18:
	movq	%r12, %rdi
	incq	%rdi
	js	.LBB84_34
# %bb.19:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i
	callq	_Znwm@PLT
	movq	%rax, %r13
	movq	%rax, 8(%rsp)
	movq	%r12, 24(%rsp)
.LBB84_20:                              # %._crit_edge.i.i.i
	testq	%r12, %r12
	je	.LBB84_24
# %bb.21:                               # %._crit_edge.i.i.i
	cmpq	$1, %r12
	jne	.LBB84_23
# %bb.22:
	movzbl	(%r15), %eax
	movb	%al, (%r13)
	jmp	.LBB84_24
.LBB84_23:
	movq	%r13, %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB84_24:                              # %_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject.exit
	movq	%r12, 16(%rsp)
	movb	$0, (%r13,%r12)
	movq	8(%rsp), %rdx
.Ltmp1130:
	leaq	.L.str.71(%rip), %rsi
	movq	%r14, %rdi
	xorl	%eax, %eax
	callq	PyErr_Format@PLT
.Ltmp1131:
# %bb.25:                               # %.critedge
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB84_27
# %bb.26:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB84_27:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	(%rbx), %rax
	testl	%eax, %eax
	js	.LBB84_32
# %bb.28:
	decq	%rax
	movq	%rax, (%rbx)
	jne	.LBB84_32
# %bb.31:
	movq	%rbx, %rdi
	callq	_Py_Dealloc@PLT
.LBB84_32:                              # %_ZL9Py_DECREFP7_object.exit
	xorl	%ebx, %ebx
.LBB84_33:                              # %_ZL9Py_DECREFP7_object.exit
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB84_34:                              # %.noexc11.i.i
	.cfi_def_cfa_offset 96
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB84_35:                              # %.noexc.i
	leaq	.L.str.34(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.LBB84_36:                              # %.noexc.i.i
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB84_37:
.Ltmp1132:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB84_39
# %bb.38:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i21
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB84_39:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit23
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end84:
	.size	pybind11_meta_call, .Lfunc_end84-pybind11_meta_call
	.cfi_endproc
	.section	.gcc_except_table.pybind11_meta_call,"aG",@progbits,pybind11_meta_call,comdat
	.p2align	2, 0x0
GCC_except_table84:
.Lexception44:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end44-.Lcst_begin44
.Lcst_begin44:
	.uleb128 .Lfunc_begin44-.Lfunc_begin44  # >> Call Site 1 <<
	.uleb128 .Ltmp1130-.Lfunc_begin44       #   Call between .Lfunc_begin44 and .Ltmp1130
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1130-.Lfunc_begin44       # >> Call Site 2 <<
	.uleb128 .Ltmp1131-.Ltmp1130            #   Call between .Ltmp1130 and .Ltmp1131
	.uleb128 .Ltmp1132-.Lfunc_begin44       #     jumps to .Ltmp1132
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1131-.Lfunc_begin44       # >> Call Site 3 <<
	.uleb128 .Lfunc_end84-.Ltmp1131         #   Call between .Ltmp1131 and .Lfunc_end84
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end44:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text.pybind11_meta_setattro,"axG",@progbits,pybind11_meta_setattro,comdat
	.hidden	pybind11_meta_setattro          # -- Begin function pybind11_meta_setattro
	.weak	pybind11_meta_setattro
	.p2align	4, 0x90
	.type	pybind11_meta_setattro,@function
pybind11_meta_setattro:                 # @pybind11_meta_setattro
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %rbx
	movq	%rsi, %r15
	movq	%rdi, %r14
	callq	_PyType_Lookup@PLT
	movq	%rax, %r12
	callq	_ZN8pybind116detail13get_internalsEv
	testq	%r12, %r12
	sete	%cl
	testq	%rbx, %rbx
	sete	%dl
	orb	%cl, %dl
	jne	.LBB85_5
# %bb.1:
	movq	408(%rax), %r13
	movq	%r12, %rdi
	movq	%r13, %rsi
	callq	PyObject_IsInstance@PLT
	testl	%eax, %eax
	je	.LBB85_5
# %bb.2:
	movq	%rbx, %rdi
	movq	%r13, %rsi
	callq	PyObject_IsInstance@PLT
	testl	%eax, %eax
	je	.LBB85_3
.LBB85_5:                               # %.critedge
	movq	PyType_Type@GOTPCREL(%rip), %rax
	movq	152(%rax), %rax
	movq	%r14, %rdi
	movq	%r15, %rsi
.LBB85_4:
	movq	%rbx, %rdx
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmpq	*%rax                           # TAILCALL
.LBB85_3:
	.cfi_def_cfa_offset 48
	movq	8(%r12), %rax
	movq	280(%rax), %rax
	movq	%r12, %rdi
	movq	%r14, %rsi
	jmp	.LBB85_4
.Lfunc_end85:
	.size	pybind11_meta_setattro, .Lfunc_end85-pybind11_meta_setattro
	.cfi_endproc
                                        # -- End function
	.section	.text.pybind11_meta_getattro,"axG",@progbits,pybind11_meta_getattro,comdat
	.hidden	pybind11_meta_getattro          # -- Begin function pybind11_meta_getattro
	.weak	pybind11_meta_getattro
	.p2align	4, 0x90
	.type	pybind11_meta_getattro,@function
pybind11_meta_getattro:                 # @pybind11_meta_getattro
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	callq	_PyType_Lookup@PLT
	testq	%rax, %rax
	je	.LBB86_5
# %bb.1:
	movq	8(%rax), %rcx
	cmpq	PyInstanceMethod_Type@GOTPCREL(%rip), %rcx
	je	.LBB86_2
.LBB86_5:
	movq	PyType_Type@GOTPCREL(%rip), %rax
	movq	144(%rax), %rax
	movq	%r14, %rdi
	movq	%rbx, %rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmpq	*%rax                           # TAILCALL
.LBB86_2:
	.cfi_def_cfa_offset 32
	movl	(%rax), %ecx
	incl	%ecx
	je	.LBB86_4
# %bb.3:
	movl	%ecx, (%rax)
.LBB86_4:                               # %_ZL9Py_INCREFP7_object.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end86:
	.size	pybind11_meta_getattro, .Lfunc_end86-pybind11_meta_getattro
	.cfi_endproc
                                        # -- End function
	.section	.text.pybind11_meta_dealloc,"axG",@progbits,pybind11_meta_dealloc,comdat
	.hidden	pybind11_meta_dealloc           # -- Begin function pybind11_meta_dealloc
	.weak	pybind11_meta_dealloc
	.p2align	4, 0x90
	.type	pybind11_meta_dealloc,@function
pybind11_meta_dealloc:                  # @pybind11_meta_dealloc
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	%rdi, 8(%rsp)
	callq	_ZN8pybind116detail13get_internalsEv
	leaq	8(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_
	movq	PyType_Type@GOTPCREL(%rip), %rax
	movq	%rbx, %rdi
	callq	*48(%rax)
	addq	$16, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end87:
	.size	pybind11_meta_dealloc, .Lfunc_end87-pybind11_meta_dealloc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject,"axG",@progbits,_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject,comdat
	.hidden	_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject # -- Begin function _ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject
	.weak	_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject
	.p2align	4, 0x90
	.type	_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject,@function
_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject: # @_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	24(%rsi), %r14
	leaq	16(%rdi), %r12
	movq	%r12, (%rdi)
	testq	%r14, %r14
	je	.LBB88_10
# %bb.1:
	movq	%rdi, %rbx
	movq	%r14, %rdi
	callq	strlen@PLT
	movq	%rax, %r15
	cmpq	$16, %rax
	jb	.LBB88_5
# %bb.2:
	testq	%r15, %r15
	js	.LBB88_11
# %bb.3:
	movq	%r15, %rdi
	incq	%rdi
	js	.LBB88_12
# %bb.4:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
	callq	_Znwm@PLT
	movq	%rax, %r12
	movq	%rax, (%rbx)
	movq	%r15, 16(%rbx)
.LBB88_5:                               # %._crit_edge.i.i
	testq	%r15, %r15
	je	.LBB88_9
# %bb.6:                                # %._crit_edge.i.i
	cmpq	$1, %r15
	jne	.LBB88_8
# %bb.7:
	movzbl	(%r14), %eax
	movb	%al, (%r12)
	jmp	.LBB88_9
.LBB88_8:
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB88_9:
	movq	%r15, 8(%rbx)
	movb	$0, (%r12,%r15)
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB88_12:                              # %.noexc11.i
	.cfi_def_cfa_offset 48
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB88_10:                              # %.noexc
	leaq	.L.str.34(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.LBB88_11:                              # %.noexc.i
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end88:
	.size	_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject, .Lfunc_end88-_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject,"axG",@progbits,_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject,comdat
	.hidden	_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject # -- Begin function _ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
	.weak	_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject,@function
_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject: # @_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
.Lfunc_begin45:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception45
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$40, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	callq	_ZN8pybind116detail13get_internalsEv
	movq	%rax, %r15
	movq	64(%rax), %rsi
	addq	$56, %r15
	movq	%rbx, %rax
	orq	%rsi, %rax
	shrq	$32, %rax
	je	.LBB89_2
# %bb.1:
	movq	%rbx, %rax
	xorl	%edx, %edx
	divq	%rsi
	movq	%rdx, %r12
	movq	(%r15), %rax
	movq	(%rax,%r12,8), %rax
	testq	%rax, %rax
	jne	.LBB89_3
	jmp	.LBB89_10
.LBB89_2:
	movl	%ebx, %eax
	xorl	%edx, %edx
	divl	%esi
	movl	%edx, %r12d
	movq	(%r15), %rax
	movq	(%rax,%r12,8), %rax
	testq	%rax, %rax
	je	.LBB89_10
.LBB89_3:
	movq	(%rax), %r14
	cmpq	%rbx, 8(%r14)
	jne	.LBB89_4
.LBB89_15:
	xorl	%edx, %edx
	jmp	.LBB89_16
	.p2align	4, 0x90
.LBB89_7:                               #   in Loop: Header=BB89_4 Depth=1
	movl	%ecx, %eax
	xorl	%edx, %edx
	divl	%esi
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%r12, %rdx
	jne	.LBB89_10
.LBB89_8:                               #   in Loop: Header=BB89_4 Depth=1
	cmpq	%rbx, %rcx
	je	.LBB89_15
.LBB89_4:                               # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB89_10
# %bb.5:                                #   in Loop: Header=BB89_4 Depth=1
	movq	8(%r14), %rcx
	movq	%rcx, %rax
	orq	%rsi, %rax
	shrq	$32, %rax
	je	.LBB89_7
# %bb.6:                                #   in Loop: Header=BB89_4 Depth=1
	movq	%rcx, %rax
	xorl	%edx, %edx
	divq	%rsi
	cmpq	%r12, %rdx
	je	.LBB89_8
.LBB89_10:                              # %.critedge.i.i.i.i
	movq	%r15, 16(%rsp)
	movl	$40, %edi
	callq	_Znwm@PLT
	movq	$0, (%rax)
	movq	%rbx, 8(%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rax)
	movq	$0, 32(%rax)
	movq	%rax, 24(%rsp)
.Ltmp1133:
	movl	$1, %r8d
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%rbx, %rdx
	movq	%rax, %rcx
	callq	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm
.Ltmp1134:
# %bb.11:
	movq	%rax, %r14
	leaq	16(%rax), %rsi
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE
	movq	%rbx, 32(%rsp)
	leaq	8(%rsp), %rdi
	leaq	32(%rsp), %rsi
	callq	_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_
	movq	8(%rsp), %rdx
.Ltmp1136:
	leaq	16(%rsp), %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind117weakrefC2ENS_6handleES1_
.Ltmp1137:
# %bb.12:
	movq	$0, 16(%rsp)
.Ltmp1142:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1143:
# %bb.13:                               # %_ZN8pybind116objectD2Ev.exit
.Ltmp1145:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1146:
# %bb.14:                               # %_ZN8pybind116objectD2Ev.exit9
	movb	$1, %dl
.LBB89_16:                              # %_ZN8pybind116detail14with_internalsIZNS0_23all_type_info_get_cacheEP11_typeobjectEUlRNS0_9internalsEE_EEDTclfp_clL_ZNS0_13get_internalsEvEEEERKT_.exit.thread
	movq	%r14, %rax
                                        # kill: def $dl killed $dl killed $edx
	addq	$40, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB89_17:
	.cfi_def_cfa_offset 80
.Ltmp1147:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB89_18:
.Ltmp1144:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB89_19:
.Ltmp1138:
	movq	%rax, %rbx
.Ltmp1139:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1140:
	jmp	.LBB89_22
.LBB89_20:
.Ltmp1141:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB89_21:
.Ltmp1135:
	movq	%rax, %rbx
	leaq	16(%rsp), %rdi
	callq	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev
.LBB89_22:                              # %common.resume
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end89:
	.size	_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject, .Lfunc_end89-_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject,"aG",@progbits,_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject,comdat
	.p2align	2, 0x0
GCC_except_table89:
.Lexception45:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase30-.Lttbaseref30
.Lttbaseref30:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end45-.Lcst_begin45
.Lcst_begin45:
	.uleb128 .Lfunc_begin45-.Lfunc_begin45  # >> Call Site 1 <<
	.uleb128 .Ltmp1133-.Lfunc_begin45       #   Call between .Lfunc_begin45 and .Ltmp1133
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1133-.Lfunc_begin45       # >> Call Site 2 <<
	.uleb128 .Ltmp1134-.Ltmp1133            #   Call between .Ltmp1133 and .Ltmp1134
	.uleb128 .Ltmp1135-.Lfunc_begin45       #     jumps to .Ltmp1135
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1134-.Lfunc_begin45       # >> Call Site 3 <<
	.uleb128 .Ltmp1136-.Ltmp1134            #   Call between .Ltmp1134 and .Ltmp1136
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1136-.Lfunc_begin45       # >> Call Site 4 <<
	.uleb128 .Ltmp1137-.Ltmp1136            #   Call between .Ltmp1136 and .Ltmp1137
	.uleb128 .Ltmp1138-.Lfunc_begin45       #     jumps to .Ltmp1138
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1142-.Lfunc_begin45       # >> Call Site 5 <<
	.uleb128 .Ltmp1143-.Ltmp1142            #   Call between .Ltmp1142 and .Ltmp1143
	.uleb128 .Ltmp1144-.Lfunc_begin45       #     jumps to .Ltmp1144
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1145-.Lfunc_begin45       # >> Call Site 6 <<
	.uleb128 .Ltmp1146-.Ltmp1145            #   Call between .Ltmp1145 and .Ltmp1146
	.uleb128 .Ltmp1147-.Lfunc_begin45       #     jumps to .Ltmp1147
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1139-.Lfunc_begin45       # >> Call Site 7 <<
	.uleb128 .Ltmp1140-.Ltmp1139            #   Call between .Ltmp1139 and .Ltmp1140
	.uleb128 .Ltmp1141-.Lfunc_begin45       #     jumps to .Ltmp1141
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1140-.Lfunc_begin45       # >> Call Site 8 <<
	.uleb128 .Lfunc_end89-.Ltmp1140         #   Call between .Ltmp1140 and .Lfunc_end89
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end45:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase30:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_,"axG",@progbits,_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_,comdat
	.hidden	_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_ # -- Begin function _ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_
	.weak	_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_
	.p2align	4, 0x90
	.type	_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_,@function
_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_: # @_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_
.Lfunc_begin46:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception46
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	$0, (%rdi)
.Ltmp1148:
	movq	%rsp, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind1112cpp_function20make_function_recordEv
.Ltmp1149:
# %bb.1:                                # %.noexc
	movq	(%rsp), %rax
	movq	(%r14), %rcx
	movq	%rcx, 56(%rax)
	leaq	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_(%rip), %rcx
	movq	%rcx, 48(%rax)
	movw	$1, 94(%rax)
	andb	$63, 89(%rax)
.Ltmp1151:
	leaq	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature(%rip), %rdx
	leaq	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types(%rip), %rcx
	movq	%rsp, %rsi
	movl	$1, %r8d
	movq	%rbx, %rdi
	callq	_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom
.Ltmp1152:
# %bb.2:
	movq	(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB90_4
# %bb.3:
.Ltmp1157:
	xorl	%esi, %esi
	callq	_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb
.Ltmp1158:
.LBB90_4:
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB90_5:
	.cfi_def_cfa_offset 32
.Ltmp1159:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB90_6:
.Ltmp1153:
	movq	%rax, %r14
	movq	%rsp, %rdi
	callq	_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev
	jmp	.LBB90_8
.LBB90_7:
.Ltmp1150:
	movq	%rax, %r14
.LBB90_8:                               # %.body
.Ltmp1154:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1155:
# %bb.9:                                # %_ZN8pybind116objectD2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB90_10:
.Ltmp1156:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end90:
	.size	_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_, .Lfunc_end90-_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_,"aG",@progbits,_ZN8pybind1112cpp_functionC2IZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_JEvEEOT_DpRKT0_,comdat
	.p2align	2, 0x0
GCC_except_table90:
.Lexception46:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase31-.Lttbaseref31
.Lttbaseref31:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end46-.Lcst_begin46
.Lcst_begin46:
	.uleb128 .Ltmp1148-.Lfunc_begin46       # >> Call Site 1 <<
	.uleb128 .Ltmp1149-.Ltmp1148            #   Call between .Ltmp1148 and .Ltmp1149
	.uleb128 .Ltmp1150-.Lfunc_begin46       #     jumps to .Ltmp1150
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1151-.Lfunc_begin46       # >> Call Site 2 <<
	.uleb128 .Ltmp1152-.Ltmp1151            #   Call between .Ltmp1151 and .Ltmp1152
	.uleb128 .Ltmp1153-.Lfunc_begin46       #     jumps to .Ltmp1153
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1157-.Lfunc_begin46       # >> Call Site 3 <<
	.uleb128 .Ltmp1158-.Ltmp1157            #   Call between .Ltmp1157 and .Ltmp1158
	.uleb128 .Ltmp1159-.Lfunc_begin46       #     jumps to .Ltmp1159
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1154-.Lfunc_begin46       # >> Call Site 4 <<
	.uleb128 .Ltmp1155-.Ltmp1154            #   Call between .Ltmp1154 and .Ltmp1155
	.uleb128 .Ltmp1156-.Lfunc_begin46       #     jumps to .Ltmp1156
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1155-.Lfunc_begin46       # >> Call Site 5 <<
	.uleb128 .Lfunc_end90-.Ltmp1155         #   Call between .Ltmp1155 and .Lfunc_end90
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end46:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase31:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind117weakrefC2ENS_6handleES1_,"axG",@progbits,_ZN8pybind117weakrefC2ENS_6handleES1_,comdat
	.hidden	_ZN8pybind117weakrefC2ENS_6handleES1_ # -- Begin function _ZN8pybind117weakrefC2ENS_6handleES1_
	.weak	_ZN8pybind117weakrefC2ENS_6handleES1_
	.p2align	4, 0x90
	.type	_ZN8pybind117weakrefC2ENS_6handleES1_,@function
_ZN8pybind117weakrefC2ENS_6handleES1_:  # @_ZN8pybind117weakrefC2ENS_6handleES1_
.Lfunc_begin47:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception47
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	movq	%rdx, %rsi
	callq	PyWeakref_NewRef@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB91_1
# %bb.8:
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB91_1:
	.cfi_def_cfa_offset 32
.Ltmp1160:
	callq	PyErr_Occurred@PLT
.Ltmp1161:
# %bb.2:
	testq	%rax, %rax
	jne	.LBB91_3
# %bb.6:
.Ltmp1167:
	leaq	.L.str.169(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1168:
# %bb.7:
.LBB91_3:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp1162:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1163:
# %bb.4:
.Ltmp1165:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp1166:
# %bb.12:
.LBB91_5:
.Ltmp1164:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB91_10
.LBB91_9:
.Ltmp1169:
	movq	%rax, %r14
.LBB91_10:
.Ltmp1170:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1171:
# %bb.11:                               # %_ZN8pybind116objectD2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB91_13:
.Ltmp1172:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end91:
	.size	_ZN8pybind117weakrefC2ENS_6handleES1_, .Lfunc_end91-_ZN8pybind117weakrefC2ENS_6handleES1_
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind117weakrefC2ENS_6handleES1_,"aG",@progbits,_ZN8pybind117weakrefC2ENS_6handleES1_,comdat
	.p2align	2, 0x0
GCC_except_table91:
.Lexception47:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase32-.Lttbaseref32
.Lttbaseref32:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end47-.Lcst_begin47
.Lcst_begin47:
	.uleb128 .Lfunc_begin47-.Lfunc_begin47  # >> Call Site 1 <<
	.uleb128 .Ltmp1160-.Lfunc_begin47       #   Call between .Lfunc_begin47 and .Ltmp1160
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1160-.Lfunc_begin47       # >> Call Site 2 <<
	.uleb128 .Ltmp1168-.Ltmp1160            #   Call between .Ltmp1160 and .Ltmp1168
	.uleb128 .Ltmp1169-.Lfunc_begin47       #     jumps to .Ltmp1169
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1168-.Lfunc_begin47       # >> Call Site 3 <<
	.uleb128 .Ltmp1162-.Ltmp1168            #   Call between .Ltmp1168 and .Ltmp1162
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1162-.Lfunc_begin47       # >> Call Site 4 <<
	.uleb128 .Ltmp1163-.Ltmp1162            #   Call between .Ltmp1162 and .Ltmp1163
	.uleb128 .Ltmp1164-.Lfunc_begin47       #     jumps to .Ltmp1164
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1165-.Lfunc_begin47       # >> Call Site 5 <<
	.uleb128 .Ltmp1166-.Ltmp1165            #   Call between .Ltmp1165 and .Ltmp1166
	.uleb128 .Ltmp1169-.Lfunc_begin47       #     jumps to .Ltmp1169
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1166-.Lfunc_begin47       # >> Call Site 6 <<
	.uleb128 .Ltmp1170-.Ltmp1166            #   Call between .Ltmp1166 and .Ltmp1170
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1170-.Lfunc_begin47       # >> Call Site 7 <<
	.uleb128 .Ltmp1171-.Ltmp1170            #   Call between .Ltmp1170 and .Ltmp1171
	.uleb128 .Ltmp1172-.Lfunc_begin47       #     jumps to .Ltmp1172
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1171-.Lfunc_begin47       # >> Call Site 8 <<
	.uleb128 .Lfunc_end91-.Ltmp1171         #   Call between .Ltmp1171 and .Lfunc_end91
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end47:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase32:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE,"axG",@progbits,_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE,comdat
	.hidden	_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE # -- Begin function _ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE
	.weak	_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE,@function
_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE: # @_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE
.Lfunc_begin48:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception48
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	(%rsi), %rax
	cmpq	8(%rsi), %rax
	jne	.LBB92_112
# %bb.1:                                # %_ZN8pybind1118reinterpret_borrowINS_5tupleEEET_NS_6handleE.exit
	movq	%rsi, %r15
	movq	336(%rdi), %rax
	movq	%rax, 16(%rsp)
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	16(%rsp), %rcx
	movq	8(%rcx), %rsi
	movq	168(%rsi), %rdx
	leaq	24(%rcx), %rax
	movq	%rax, %rbx
	testl	$33554432, %edx                 # imm = 0x2000000
	je	.LBB92_3
# %bb.2:
	movq	(%rax), %rbx
.LBB92_3:                               # %_ZNK8pybind115tuple5beginEv.exit
	testl	$67108864, %edx                 # imm = 0x4000000
	je	.LBB92_109
# %bb.4:
	cmpq	PyLong_Type@GOTPCREL(%rip), %rsi
	je	.LBB92_110
# %bb.5:
	cmpq	PyBool_Type@GOTPCREL(%rip), %rsi
	je	.LBB92_111
# %bb.6:                                # %_ZL16PyTuple_GET_SIZEP7_object.exit.i
	movq	16(%rcx), %rcx
	testl	$33554432, %edx                 # imm = 0x2000000
	je	.LBB92_8
# %bb.7:
	movq	(%rax), %rax
.LBB92_8:
	leaq	(%rax,%rcx,8), %rax
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	cmpq	%rax, %rbx
	movq	%r15, 40(%rsp)                  # 8-byte Spill
	je	.LBB92_26
# %bb.9:                                # %.lr.ph.preheader
	xorl	%eax, %eax
	xorl	%r12d, %r12d
	xorl	%r13d, %r13d
	jmp	.LBB92_12
	.p2align	4, 0x90
.LBB92_10:                              #   in Loop: Header=BB92_12 Depth=1
	movq	%r14, (%r12)
	movq	8(%rsp), %rax                   # 8-byte Reload
	movq	%rax, %rbp
	addq	$8, %r12
	addq	$8, %rbx
	cmpq	32(%rsp), %rbx                  # 8-byte Folded Reload
	je	.LBB92_27
.LBB92_12:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	%rax, 8(%rsp)                   # 8-byte Spill
	movq	(%rbx), %r14
	cmpq	%r13, %r12
	jne	.LBB92_10
# %bb.13:                               #   in Loop: Header=BB92_12 Depth=1
	movq	%r12, 24(%rsp)                  # 8-byte Spill
	subq	8(%rsp), %r12                   # 8-byte Folded Reload
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %r12
	je	.LBB92_107
# %bb.14:                               # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i
                                        #   in Loop: Header=BB92_12 Depth=1
	movq	%r12, %r15
	sarq	$3, %r15
	cmpq	$1, %r15
	movq	%r15, %rax
	adcq	$0, %rax
	leaq	(%rax,%r15), %rcx
	movabsq	$1152921504606846975, %rdx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rdx, %rcx
	jb	.LBB92_15
# %bb.23:                               # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i
                                        #   in Loop: Header=BB92_12 Depth=1
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	movabsq	$1152921504606846975, %r13      # imm = 0xFFFFFFFFFFFFFFF
	addq	%r15, %rax
	jae	.LBB92_24
.LBB92_16:                              # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i
                                        #   in Loop: Header=BB92_12 Depth=1
	testq	%r13, %r13
	je	.LBB92_25
.LBB92_17:                              #   in Loop: Header=BB92_12 Depth=1
	leaq	(,%r13,8), %rdi
.Ltmp1173:
	callq	_Znwm@PLT
.Ltmp1174:
# %bb.18:                               #   in Loop: Header=BB92_12 Depth=1
	movq	%rax, %rbp
	movq	%r14, (%rbp,%r15,8)
	testq	%r12, %r12
	movq	8(%rsp), %r14                   # 8-byte Reload
	jle	.LBB92_20
.LBB92_19:                              #   in Loop: Header=BB92_12 Depth=1
	movq	%rbp, %rdi
	movq	%r14, %rsi
	movq	%r12, %rdx
	callq	memmove@PLT
.LBB92_20:                              # %_ZNSt6vectorIP11_typeobjectSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit16.i.i.i
                                        #   in Loop: Header=BB92_12 Depth=1
	testq	%r14, %r14
	movq	40(%rsp), %r15                  # 8-byte Reload
	je	.LBB92_22
# %bb.21:                               #   in Loop: Header=BB92_12 Depth=1
	movq	%r14, %rdi
	movq	%r12, %rsi
	callq	_ZdlPvm@PLT
.LBB92_22:                              # %_ZNSt6vectorIP11_typeobjectSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_.exit.i.i
                                        #   in Loop: Header=BB92_12 Depth=1
	addq	%rbp, %r12
	leaq	(,%r13,8), %r13
	addq	%rbp, %r13
	movq	%rbp, %rax
	addq	$8, %r12
	addq	$8, %rbx
	cmpq	32(%rsp), %rbx                  # 8-byte Folded Reload
	jne	.LBB92_12
	jmp	.LBB92_27
	.p2align	4, 0x90
.LBB92_15:                              # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i
                                        #   in Loop: Header=BB92_12 Depth=1
	movabsq	$1152921504606846975, %r13      # imm = 0xFFFFFFFFFFFFFFF
	addq	%r15, %rax
	jb	.LBB92_16
.LBB92_24:                              # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i
                                        #   in Loop: Header=BB92_12 Depth=1
	movq	%rcx, %r13
	testq	%r13, %r13
	jne	.LBB92_17
.LBB92_25:                              #   in Loop: Header=BB92_12 Depth=1
	xorl	%ebp, %ebp
	movq	%r14, (%rbp,%r15,8)
	testq	%r12, %r12
	movq	8(%rsp), %r14                   # 8-byte Reload
	jg	.LBB92_19
	jmp	.LBB92_20
.LBB92_26:
	xorl	%r13d, %r13d
	xorl	%r12d, %r12d
	xorl	%ebp, %ebp
.LBB92_27:                              # %._crit_edge
.Ltmp1182:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1183:
# %bb.28:                               # %_ZN8pybind116objectD2Ev.exit
.Ltmp1185:
	callq	_ZN8pybind116detail13get_internalsEv
.Ltmp1186:
# %bb.29:
	movq	%r12, %r8
	subq	%rbp, %r8
	je	.LBB92_100
# %bb.30:                               # %.lr.ph268
	movq	%rax, %r11
	sarq	$3, %r8
	addq	$72, %rax
	movq	%rax, 72(%rsp)                  # 8-byte Spill
	xorl	%r14d, %r14d
	movq	%r12, %rax
	movq	%r13, %r12
	movq	%rax, %r13
	movq	%r11, 64(%rsp)                  # 8-byte Spill
	jmp	.LBB92_33
.LBB92_31:                              #   in Loop: Header=BB92_33 Depth=1
	movq	8(%rsp), %rbp                   # 8-byte Reload
	movq	64(%rsp), %r11                  # 8-byte Reload
	movq	48(%rsp), %r14                  # 8-byte Reload
	movq	56(%rsp), %r13                  # 8-byte Reload
	.p2align	4, 0x90
.LBB92_32:                              # %.loopexit169
                                        #   in Loop: Header=BB92_33 Depth=1
	incq	%r14
	movq	%r13, %r8
	subq	%rbp, %r8
	sarq	$3, %r8
	cmpq	%r8, %r14
	jae	.LBB92_99
.LBB92_33:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB92_42 Depth 2
                                        #     Child Loop BB92_38 Depth 2
                                        #     Child Loop BB92_52 Depth 2
                                        #       Child Loop BB92_53 Depth 3
                                        #       Child Loop BB92_56 Depth 3
                                        #     Child Loop BB92_85 Depth 2
	movq	(%rbp,%r14,8), %rcx
	movq	8(%rcx), %rax
	testb	$-128, 171(%rax)
	je	.LBB92_32
# %bb.34:                               #   in Loop: Header=BB92_33 Depth=1
	cmpq	$0, 80(%r11)
	je	.LBB92_37
# %bb.35:                               #   in Loop: Header=BB92_33 Depth=1
	movq	64(%r11), %r9
	movq	%rcx, %rax
	orq	%r9, %rax
	shrq	$32, %rax
	je	.LBB92_40
# %bb.36:                               #   in Loop: Header=BB92_33 Depth=1
	movq	%rcx, %rax
	xorl	%edx, %edx
	divq	%r9
	movq	%rdx, %rsi
	movq	56(%r11), %rax
	movq	(%rax,%rsi,8), %rax
	testq	%rax, %rax
	jne	.LBB92_41
	jmp	.LBB92_71
.LBB92_37:                              # %.preheader.preheader
                                        #   in Loop: Header=BB92_33 Depth=1
	movq	72(%rsp), %r10                  # 8-byte Reload
	.p2align	4, 0x90
.LBB92_38:                              # %.preheader
                                        #   Parent Loop BB92_33 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	(%r10), %r10
	testq	%r10, %r10
	je	.LBB92_71
# %bb.39:                               #   in Loop: Header=BB92_38 Depth=2
	cmpq	8(%r10), %rcx
	jne	.LBB92_38
	jmp	.LBB92_47
.LBB92_40:                              #   in Loop: Header=BB92_33 Depth=1
	movl	%ecx, %eax
	xorl	%edx, %edx
	divl	%r9d
	movl	%edx, %esi
	movq	56(%r11), %rax
	movq	(%rax,%rsi,8), %rax
	testq	%rax, %rax
	je	.LBB92_71
.LBB92_41:                              #   in Loop: Header=BB92_33 Depth=1
	movq	(%rax), %r10
	cmpq	8(%r10), %rcx
	jne	.LBB92_42
.LBB92_47:                              # %_ZNKSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEE4findERSE_.exit
                                        #   in Loop: Header=BB92_33 Depth=1
	movq	16(%r10), %rbx
	movq	24(%r10), %rax
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	cmpq	%rax, %rbx
	je	.LBB92_32
# %bb.48:                               # %.lr.ph249.preheader
                                        #   in Loop: Header=BB92_33 Depth=1
	movq	%r13, 56(%rsp)                  # 8-byte Spill
	movq	%r14, 48(%rsp)                  # 8-byte Spill
	movq	%rbp, 8(%rsp)                   # 8-byte Spill
	movq	%r12, 24(%rsp)                  # 8-byte Spill
	jmp	.LBB92_52
	.p2align	4, 0x90
.LBB92_60:                              # %.critedge.thread
                                        #   in Loop: Header=BB92_52 Depth=2
	movq	%r14, 16(%rsp)
	cmpq	16(%r15), %r13
	je	.LBB92_61
.LBB92_49:                              #   in Loop: Header=BB92_52 Depth=2
	movq	%r14, (%r13)
	addq	$8, 8(%r15)
.LBB92_50:                              # %_ZN8pybind116detail41all_type_info_add_base_most_derived_firstERSt6vectorIPNS0_9type_infoESaIS3_EES3_.exit
                                        #   in Loop: Header=BB92_52 Depth=2
	movq	40(%rsp), %r15                  # 8-byte Reload
	movq	24(%rsp), %r12                  # 8-byte Reload
.LBB92_51:                              # %.loopexit314
                                        #   in Loop: Header=BB92_52 Depth=2
	addq	$8, %rbx
	cmpq	32(%rsp), %rbx                  # 8-byte Folded Reload
	je	.LBB92_31
.LBB92_52:                              # %.lr.ph249
                                        #   Parent Loop BB92_33 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB92_53 Depth 3
                                        #       Child Loop BB92_56 Depth 3
	movq	(%rbx), %r14
	movq	(%r15), %rbp
	movq	8(%r15), %r13
	movq	%rbp, %rax
	cmpq	%r13, %rbp
	je	.LBB92_60
	.p2align	4, 0x90
.LBB92_53:                              # %.lr.ph247
                                        #   Parent Loop BB92_33 Depth=1
                                        #     Parent Loop BB92_52 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	cmpq	%r14, (%rax)
	je	.LBB92_51
# %bb.54:                               #   in Loop: Header=BB92_53 Depth=3
	addq	$8, %rax
	cmpq	%r13, %rax
	jne	.LBB92_53
# %bb.55:                               # %.critedge
                                        #   in Loop: Header=BB92_52 Depth=2
	movq	%r14, 16(%rsp)
	cmpq	%r13, %rbp
	je	.LBB92_59
	.p2align	4, 0x90
.LBB92_56:                              # %.lr.ph.i
                                        #   Parent Loop BB92_33 Depth=1
                                        #     Parent Loop BB92_52 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	(%rbp), %rax
	movq	(%r14), %rdi
	movq	(%rax), %rsi
.Ltmp1188:
	callq	PyType_IsSubtype@PLT
.Ltmp1189:
# %bb.57:                               # %.noexc74
                                        #   in Loop: Header=BB92_56 Depth=3
	testl	%eax, %eax
	jne	.LBB92_69
# %bb.58:                               # %.critedge.i
                                        #   in Loop: Header=BB92_56 Depth=3
	addq	$8, %rbp
	movq	8(%r15), %r13
	cmpq	%r13, %rbp
	jne	.LBB92_56
.LBB92_59:                              # %._crit_edge.i
                                        #   in Loop: Header=BB92_52 Depth=2
	cmpq	16(%r15), %r13
	jne	.LBB92_49
.LBB92_61:                              #   in Loop: Header=BB92_52 Depth=2
	movq	(%r15), %rax
	movq	%rax, 80(%rsp)                  # 8-byte Spill
	subq	%rax, %r13
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %r13
	je	.LBB92_105
# %bb.62:                               # %_ZNKSt6vectorIPN8pybind116detail9type_infoESaIS3_EE12_M_check_lenEmPKc.exit.i.i.i
                                        #   in Loop: Header=BB92_52 Depth=2
	movq	%r13, %rbp
	sarq	$3, %rbp
	cmpq	$1, %rbp
	movq	%rbp, %rax
	adcq	$0, %rax
	leaq	(%rax,%rbp), %r15
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rcx, %r15
	cmovaeq	%rcx, %r15
	addq	%rbp, %rax
	movabsq	$1152921504606846975, %rax      # imm = 0xFFFFFFFFFFFFFFF
	cmovbq	%rax, %r15
	testq	%r15, %r15
	je	.LBB92_70
# %bb.63:                               #   in Loop: Header=BB92_52 Depth=2
	leaq	(,%r15,8), %rdi
.Ltmp1193:
	callq	_Znwm@PLT
.Ltmp1194:
# %bb.64:                               #   in Loop: Header=BB92_52 Depth=2
	movq	%rax, %r12
	movq	%r14, (%r12,%rbp,8)
	testq	%r13, %r13
	movq	80(%rsp), %r14                  # 8-byte Reload
	jle	.LBB92_66
.LBB92_65:                              #   in Loop: Header=BB92_52 Depth=2
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%r13, %rdx
	callq	memmove@PLT
.LBB92_66:                              # %_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_.exit16.i.i.i
                                        #   in Loop: Header=BB92_52 Depth=2
	testq	%r14, %r14
	je	.LBB92_68
# %bb.67:                               #   in Loop: Header=BB92_52 Depth=2
	movq	%r14, %rdi
	movq	%r13, %rsi
	callq	_ZdlPvm@PLT
.LBB92_68:                              # %_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_.exit.i.i
                                        #   in Loop: Header=BB92_52 Depth=2
	leaq	(%r12,%r13), %rax
	addq	$8, %rax
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	%r12, (%rcx)
	movq	%rax, 8(%rcx)
	leaq	(%r12,%r15,8), %rax
	movq	%rax, 16(%rcx)
	jmp	.LBB92_50
.LBB92_69:                              #   in Loop: Header=BB92_52 Depth=2
.Ltmp1191:
	movq	%r15, %rdi
	movq	%rbp, %rsi
	leaq	16(%rsp), %rdx
	callq	_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_
.Ltmp1192:
	jmp	.LBB92_50
.LBB92_70:                              #   in Loop: Header=BB92_52 Depth=2
	xorl	%r12d, %r12d
	movq	%r14, (%r12,%rbp,8)
	testq	%r13, %r13
	movq	80(%rsp), %r14                  # 8-byte Reload
	jg	.LBB92_65
	jmp	.LBB92_66
	.p2align	4, 0x90
.LBB92_45:                              #   in Loop: Header=BB92_42 Depth=2
	movl	%edi, %eax
	xorl	%edx, %edx
	divl	%r9d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rsi, %rdx
	jne	.LBB92_71
.LBB92_46:                              #   in Loop: Header=BB92_42 Depth=2
	cmpq	%rdi, %rcx
	je	.LBB92_47
.LBB92_42:                              # %.lr.ph.i.i.i.i
                                        #   Parent Loop BB92_33 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	(%r10), %r10
	testq	%r10, %r10
	je	.LBB92_71
# %bb.43:                               #   in Loop: Header=BB92_42 Depth=2
	movq	8(%r10), %rdi
	movq	%rdi, %rax
	orq	%r9, %rax
	shrq	$32, %rax
	je	.LBB92_45
# %bb.44:                               #   in Loop: Header=BB92_42 Depth=2
	movq	%rdi, %rax
	xorl	%edx, %edx
	divq	%r9
	cmpq	%rsi, %rdx
	je	.LBB92_46
	.p2align	4, 0x90
.LBB92_71:                              # %.loopexit173
                                        #   in Loop: Header=BB92_33 Depth=1
	movq	336(%rcx), %rax
	testq	%rax, %rax
	je	.LBB92_32
# %bb.72:                               #   in Loop: Header=BB92_33 Depth=1
	movq	%rbp, 8(%rsp)                   # 8-byte Spill
	movq	%r14, 48(%rsp)                  # 8-byte Spill
	leaq	1(%r14), %rcx
	xorl	%r14d, %r14d
	cmpq	%r8, %rcx
	sete	24(%rsp)                        # 1-byte Folded Spill
	setne	%bpl
	movq	%rax, 16(%rsp)
.Ltmp1199:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1200:
# %bb.73:                               # %_ZN8pybind1118reinterpret_borrowINS_5tupleEEET_NS_6handleE.exit79
                                        #   in Loop: Header=BB92_33 Depth=1
	movq	16(%rsp), %rax
	movq	8(%rax), %rsi
	movq	168(%rsi), %rdx
	leaq	24(%rax), %rcx
	movq	%rcx, %rbx
	testl	$33554432, %edx                 # imm = 0x2000000
	je	.LBB92_75
# %bb.74:                               #   in Loop: Header=BB92_33 Depth=1
	movq	(%rcx), %rbx
.LBB92_75:                              # %_ZNK8pybind115tuple5beginEv.exit84
                                        #   in Loop: Header=BB92_33 Depth=1
	testl	$67108864, %edx                 # imm = 0x4000000
	je	.LBB92_109
# %bb.76:                               #   in Loop: Header=BB92_33 Depth=1
	cmpq	PyLong_Type@GOTPCREL(%rip), %rsi
	je	.LBB92_110
# %bb.77:                               #   in Loop: Header=BB92_33 Depth=1
	cmpq	PyBool_Type@GOTPCREL(%rip), %rsi
	je	.LBB92_111
# %bb.78:                               # %_ZL16PyTuple_GET_SIZEP7_object.exit.i91
                                        #   in Loop: Header=BB92_33 Depth=1
	testl	$33554432, %edx                 # imm = 0x2000000
	je	.LBB92_80
# %bb.79:                               #   in Loop: Header=BB92_33 Depth=1
	movq	(%rcx), %rcx
.LBB92_80:                              #   in Loop: Header=BB92_33 Depth=1
	movb	%bpl, %r14b
	leaq	-8(%r13,%r14,8), %r13
	movq	16(%rax), %rax
	leaq	(%rcx,%rax,8), %rsi
	cmpq	%rsi, %rbx
	movq	%rsi, 32(%rsp)                  # 8-byte Spill
	jne	.LBB92_85
.LBB92_81:                              # %._crit_edge257
                                        #   in Loop: Header=BB92_33 Depth=1
.Ltmp1211:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1212:
	movq	8(%rsp), %rbp                   # 8-byte Reload
	movq	64(%rsp), %r11                  # 8-byte Reload
# %bb.82:                               # %_ZN8pybind116objectD2Ev.exit94
                                        #   in Loop: Header=BB92_33 Depth=1
	xorl	%eax, %eax
	movzbl	24(%rsp), %ecx                  # 1-byte Folded Reload
	movb	%cl, %al
	movq	48(%rsp), %r14                  # 8-byte Reload
	subq	%rax, %r14
	jmp	.LBB92_32
	.p2align	4, 0x90
.LBB92_83:                              #   in Loop: Header=BB92_85 Depth=2
	movq	%r14, (%r13)
	addq	$8, %r13
	addq	$8, %rbx
	cmpq	%rsi, %rbx
	je	.LBB92_81
.LBB92_85:                              # %.lr.ph256
                                        #   Parent Loop BB92_33 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	(%rbx), %r14
	cmpq	%r12, %r13
	jne	.LBB92_83
# %bb.86:                               #   in Loop: Header=BB92_85 Depth=2
	movq	%r13, 56(%rsp)                  # 8-byte Spill
	subq	8(%rsp), %r13                   # 8-byte Folded Reload
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %r13
	je	.LBB92_103
# %bb.87:                               # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i96
                                        #   in Loop: Header=BB92_85 Depth=2
	movq	%r13, %r12
	sarq	$3, %r12
	cmpq	$1, %r12
	movq	%r12, %rax
	adcq	$0, %rax
	leaq	(%rax,%r12), %rcx
	movabsq	$1152921504606846975, %rdx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rdx, %rcx
	jb	.LBB92_88
# %bb.96:                               # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i96
                                        #   in Loop: Header=BB92_85 Depth=2
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	movabsq	$1152921504606846975, %r15      # imm = 0xFFFFFFFFFFFFFFF
	addq	%r12, %rax
	jae	.LBB92_97
.LBB92_89:                              # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i96
                                        #   in Loop: Header=BB92_85 Depth=2
	testq	%r15, %r15
	je	.LBB92_98
.LBB92_90:                              #   in Loop: Header=BB92_85 Depth=2
	leaq	(,%r15,8), %rdi
.Ltmp1202:
	callq	_Znwm@PLT
.Ltmp1203:
# %bb.91:                               #   in Loop: Header=BB92_85 Depth=2
	movq	%rax, %rbp
	movq	%r14, (%rbp,%r12,8)
	testq	%r13, %r13
	movq	8(%rsp), %r14                   # 8-byte Reload
	jle	.LBB92_93
.LBB92_92:                              #   in Loop: Header=BB92_85 Depth=2
	movq	%rbp, %rdi
	movq	%r14, %rsi
	movq	%r13, %rdx
	callq	memmove@PLT
.LBB92_93:                              # %_ZNSt6vectorIP11_typeobjectSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit16.i.i.i100
                                        #   in Loop: Header=BB92_85 Depth=2
	testq	%r14, %r14
	je	.LBB92_95
# %bb.94:                               #   in Loop: Header=BB92_85 Depth=2
	movq	%r14, %rdi
	movq	%r13, %rsi
	callq	_ZdlPvm@PLT
.LBB92_95:                              # %_ZNSt6vectorIP11_typeobjectSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_.exit.i.i102
                                        #   in Loop: Header=BB92_85 Depth=2
	addq	%rbp, %r13
	leaq	(,%r15,8), %r12
	addq	%rbp, %r12
	movq	%rbp, 8(%rsp)                   # 8-byte Spill
	movq	40(%rsp), %r15                  # 8-byte Reload
	movq	32(%rsp), %rsi                  # 8-byte Reload
	addq	$8, %r13
	addq	$8, %rbx
	cmpq	%rsi, %rbx
	jne	.LBB92_85
	jmp	.LBB92_81
	.p2align	4, 0x90
.LBB92_88:                              # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i96
                                        #   in Loop: Header=BB92_85 Depth=2
	movabsq	$1152921504606846975, %r15      # imm = 0xFFFFFFFFFFFFFFF
	addq	%r12, %rax
	jb	.LBB92_89
.LBB92_97:                              # %_ZNKSt6vectorIP11_typeobjectSaIS1_EE12_M_check_lenEmPKc.exit.i.i.i96
                                        #   in Loop: Header=BB92_85 Depth=2
	movq	%rcx, %r15
	testq	%r15, %r15
	jne	.LBB92_90
.LBB92_98:                              #   in Loop: Header=BB92_85 Depth=2
	xorl	%ebp, %ebp
	movq	%r14, (%rbp,%r12,8)
	testq	%r13, %r13
	movq	8(%rsp), %r14                   # 8-byte Reload
	jg	.LBB92_92
	jmp	.LBB92_93
.LBB92_99:
	movq	%r12, %r13
.LBB92_100:                             # %._crit_edge269
	testq	%rbp, %rbp
	je	.LBB92_102
# %bb.101:
	subq	%rbp, %r13
	movq	%rbp, %rdi
	movq	%r13, %rsi
	callq	_ZdlPvm@PLT
.LBB92_102:                             # %_ZNSt6vectorIP11_typeobjectSaIS1_EED2Ev.exit
	addq	$88, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB92_103:
	.cfi_def_cfa_offset 144
.Ltmp1205:
	leaq	.L.str.79(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1206:
# %bb.104:                              # %.noexc103
.LBB92_105:
.Ltmp1196:
	leaq	.L.str.79(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1197:
# %bb.106:                              # %.noexc76
.LBB92_107:
.Ltmp1176:
	leaq	.L.str.79(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1177:
# %bb.108:                              # %.noexc
.LBB92_109:
	leaq	.L.str.74(%rip), %rdi
	leaq	.L.str.75(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL16PyTuple_GET_SIZEP7_object(%rip), %rcx
	movl	$23, %edx
	callq	__assert_fail@PLT
.LBB92_110:
	leaq	.L.str.76(%rip), %rdi
	leaq	.L.str.77(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object(%rip), %rcx
	movl	$231, %edx
	callq	__assert_fail@PLT
.LBB92_111:
	leaq	.L.str.78(%rip), %rdi
	leaq	.L.str.77(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object(%rip), %rcx
	movl	$232, %edx
	callq	__assert_fail@PLT
.LBB92_112:
	leaq	.L.str.72(%rip), %rdi
	leaq	.L.str.73(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE(%rip), %rcx
	movl	$109, %edx
	callq	__assert_fail@PLT
.LBB92_113:
.Ltmp1187:
	movq	%rax, %r14
	movq	%r13, %r12
	movq	%rbp, 8(%rsp)                   # 8-byte Spill
	jmp	.LBB92_132
.LBB92_114:
.Ltmp1184:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB92_115:
.Ltmp1201:
	jmp	.LBB92_131
.LBB92_116:
.Ltmp1213:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB92_117:                             # %.loopexit176
.Ltmp1175:
	jmp	.LBB92_119
.LBB92_118:                             # %.loopexit.split-lp177
.Ltmp1178:
.LBB92_119:
	movq	%rax, %r14
.Ltmp1179:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1180:
# %bb.120:                              # %_ZN8pybind116objectD2Ev.exit67
	movq	24(%rsp), %r12                  # 8-byte Reload
	jmp	.LBB92_132
.LBB92_121:
.Ltmp1181:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB92_122:                             # %.loopexit164
.Ltmp1204:
	jmp	.LBB92_127
.LBB92_123:                             # %.loopexit.split-lp.loopexit.split-lp
.Ltmp1198:
	jmp	.LBB92_125
.LBB92_124:                             # %.loopexit.split-lp.loopexit
.Ltmp1195:
.LBB92_125:                             # %.loopexit.split-lp
	movq	%rax, %r14
	movq	24(%rsp), %r12                  # 8-byte Reload
	jmp	.LBB92_132
.LBB92_126:                             # %.loopexit.split-lp165
.Ltmp1207:
.LBB92_127:
	movq	%rax, %r14
.Ltmp1208:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1209:
# %bb.128:                              # %_ZN8pybind116objectD2Ev.exit106
	movq	56(%rsp), %r12                  # 8-byte Reload
	jmp	.LBB92_132
.LBB92_129:
.Ltmp1210:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB92_130:                             # %.loopexit
.Ltmp1190:
.LBB92_131:                             # %.loopexit.split-lp
	movq	%rax, %r14
.LBB92_132:                             # %.loopexit.split-lp
	movq	8(%rsp), %rdi                   # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB92_134
# %bb.133:
	subq	%rdi, %r12
	movq	%r12, %rsi
	callq	_ZdlPvm@PLT
.LBB92_134:                             # %_ZNSt6vectorIP11_typeobjectSaIS1_EED2Ev.exit108
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end92:
	.size	_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE, .Lfunc_end92-_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE,"aG",@progbits,_ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE,comdat
	.p2align	2, 0x0
GCC_except_table92:
.Lexception48:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase33-.Lttbaseref33
.Lttbaseref33:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end48-.Lcst_begin48
.Lcst_begin48:
	.uleb128 .Lfunc_begin48-.Lfunc_begin48  # >> Call Site 1 <<
	.uleb128 .Ltmp1173-.Lfunc_begin48       #   Call between .Lfunc_begin48 and .Ltmp1173
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1173-.Lfunc_begin48       # >> Call Site 2 <<
	.uleb128 .Ltmp1174-.Ltmp1173            #   Call between .Ltmp1173 and .Ltmp1174
	.uleb128 .Ltmp1175-.Lfunc_begin48       #     jumps to .Ltmp1175
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1174-.Lfunc_begin48       # >> Call Site 3 <<
	.uleb128 .Ltmp1182-.Ltmp1174            #   Call between .Ltmp1174 and .Ltmp1182
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1182-.Lfunc_begin48       # >> Call Site 4 <<
	.uleb128 .Ltmp1183-.Ltmp1182            #   Call between .Ltmp1182 and .Ltmp1183
	.uleb128 .Ltmp1184-.Lfunc_begin48       #     jumps to .Ltmp1184
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1185-.Lfunc_begin48       # >> Call Site 5 <<
	.uleb128 .Ltmp1186-.Ltmp1185            #   Call between .Ltmp1185 and .Ltmp1186
	.uleb128 .Ltmp1187-.Lfunc_begin48       #     jumps to .Ltmp1187
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1188-.Lfunc_begin48       # >> Call Site 6 <<
	.uleb128 .Ltmp1189-.Ltmp1188            #   Call between .Ltmp1188 and .Ltmp1189
	.uleb128 .Ltmp1190-.Lfunc_begin48       #     jumps to .Ltmp1190
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1193-.Lfunc_begin48       # >> Call Site 7 <<
	.uleb128 .Ltmp1194-.Ltmp1193            #   Call between .Ltmp1193 and .Ltmp1194
	.uleb128 .Ltmp1195-.Lfunc_begin48       #     jumps to .Ltmp1195
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1194-.Lfunc_begin48       # >> Call Site 8 <<
	.uleb128 .Ltmp1191-.Ltmp1194            #   Call between .Ltmp1194 and .Ltmp1191
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1191-.Lfunc_begin48       # >> Call Site 9 <<
	.uleb128 .Ltmp1192-.Ltmp1191            #   Call between .Ltmp1191 and .Ltmp1192
	.uleb128 .Ltmp1195-.Lfunc_begin48       #     jumps to .Ltmp1195
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1199-.Lfunc_begin48       # >> Call Site 10 <<
	.uleb128 .Ltmp1200-.Ltmp1199            #   Call between .Ltmp1199 and .Ltmp1200
	.uleb128 .Ltmp1201-.Lfunc_begin48       #     jumps to .Ltmp1201
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1211-.Lfunc_begin48       # >> Call Site 11 <<
	.uleb128 .Ltmp1212-.Ltmp1211            #   Call between .Ltmp1211 and .Ltmp1212
	.uleb128 .Ltmp1213-.Lfunc_begin48       #     jumps to .Ltmp1213
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1202-.Lfunc_begin48       # >> Call Site 12 <<
	.uleb128 .Ltmp1203-.Ltmp1202            #   Call between .Ltmp1202 and .Ltmp1203
	.uleb128 .Ltmp1204-.Lfunc_begin48       #     jumps to .Ltmp1204
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1203-.Lfunc_begin48       # >> Call Site 13 <<
	.uleb128 .Ltmp1205-.Ltmp1203            #   Call between .Ltmp1203 and .Ltmp1205
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1205-.Lfunc_begin48       # >> Call Site 14 <<
	.uleb128 .Ltmp1206-.Ltmp1205            #   Call between .Ltmp1205 and .Ltmp1206
	.uleb128 .Ltmp1207-.Lfunc_begin48       #     jumps to .Ltmp1207
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1196-.Lfunc_begin48       # >> Call Site 15 <<
	.uleb128 .Ltmp1197-.Ltmp1196            #   Call between .Ltmp1196 and .Ltmp1197
	.uleb128 .Ltmp1198-.Lfunc_begin48       #     jumps to .Ltmp1198
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1176-.Lfunc_begin48       # >> Call Site 16 <<
	.uleb128 .Ltmp1177-.Ltmp1176            #   Call between .Ltmp1176 and .Ltmp1177
	.uleb128 .Ltmp1178-.Lfunc_begin48       #     jumps to .Ltmp1178
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1179-.Lfunc_begin48       # >> Call Site 17 <<
	.uleb128 .Ltmp1180-.Ltmp1179            #   Call between .Ltmp1179 and .Ltmp1180
	.uleb128 .Ltmp1181-.Lfunc_begin48       #     jumps to .Ltmp1181
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1208-.Lfunc_begin48       # >> Call Site 18 <<
	.uleb128 .Ltmp1209-.Ltmp1208            #   Call between .Ltmp1208 and .Ltmp1209
	.uleb128 .Ltmp1210-.Lfunc_begin48       #     jumps to .Ltmp1210
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1209-.Lfunc_begin48       # >> Call Site 19 <<
	.uleb128 .Lfunc_end92-.Ltmp1209         #   Call between .Ltmp1209 and .Lfunc_end92
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end48:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase33:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm,"axG",@progbits,_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm,comdat
	.hidden	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm # -- Begin function _ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm
	.weak	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm,@function
_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm: # @_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm
.Lfunc_begin49:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception49
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rcx, %r14
	movq	%rdx, %r12
	movq	%rsi, %r15
	movq	%rdi, %rbx
	addq	$32, %rdi
	movq	40(%rbx), %r13
	movq	8(%rbx), %rsi
	movq	24(%rbx), %rdx
	movq	%r8, %rcx
	callq	_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm@PLT
	testb	$1, %al
	je	.LBB93_10
# %bb.1:
.Ltmp1214:
	movq	%rbx, %rdi
	movq	%rdx, %rsi
	callq	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE
.Ltmp1215:
# %bb.2:                                # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_rehashEmRKm.exit
	movq	8(%rbx), %rcx
	movq	%r12, %rax
	orq	%rcx, %rax
	shrq	$32, %rax
	je	.LBB93_3
# %bb.9:
	movq	%r12, %rax
	xorl	%edx, %edx
	divq	%rcx
	movq	%rdx, %r15
.LBB93_10:
	movq	(%rbx), %rcx
	movq	(%rcx,%r15,8), %rax
	testq	%rax, %rax
	je	.LBB93_12
.LBB93_11:
	movq	(%rax), %rax
	movq	%rax, (%r14)
	movq	(%rcx,%r15,8), %rax
	movq	%r14, (%rax)
	jmp	.LBB93_18
.LBB93_3:
	movl	%r12d, %eax
	xorl	%edx, %edx
	divl	%ecx
	movl	%edx, %r15d
	movq	(%rbx), %rcx
	movq	(%rcx,%r15,8), %rax
	testq	%rax, %rax
	jne	.LBB93_11
.LBB93_12:
	leaq	16(%rbx), %rsi
	movq	16(%rbx), %rax
	movq	%rax, (%r14)
	movq	%r14, 16(%rbx)
	movq	(%r14), %rax
	testq	%rax, %rax
	je	.LBB93_17
# %bb.13:
	movq	8(%rbx), %rdi
	movq	8(%rax), %rax
	movq	%rax, %rdx
	orq	%rdi, %rdx
	shrq	$32, %rdx
	je	.LBB93_14
# %bb.15:
	xorl	%edx, %edx
	divq	%rdi
	jmp	.LBB93_16
.LBB93_14:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%edi
                                        # kill: def $edx killed $edx def $rdx
.LBB93_16:
	movq	%r14, (%rcx,%rdx,8)
	movq	(%rbx), %rcx
.LBB93_17:
	movq	%rsi, (%rcx,%r15,8)
.LBB93_18:                              # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE22_M_insert_bucket_beginEmPNSD_10_Hash_nodeISB_Lb0EEE.exit
	incq	24(%rbx)
	movq	%r14, %rax
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB93_7:
	.cfi_def_cfa_offset 48
.Ltmp1216:
	movq	%rax, %rdi
	callq	__cxa_begin_catch@PLT
	movq	%r13, 40(%rbx)
.Ltmp1217:
	callq	__cxa_rethrow@PLT
.Ltmp1218:
# %bb.8:
.LBB93_4:
.Ltmp1219:
	movq	%rax, %rbx
.Ltmp1220:
	callq	__cxa_end_catch@PLT
.Ltmp1221:
# %bb.5:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB93_6:
.Ltmp1222:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end93:
	.size	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm, .Lfunc_end93-_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm,"aG",@progbits,_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeEmmPNSD_10_Hash_nodeISB_Lb0EEEm,comdat
	.p2align	2, 0x0
GCC_except_table93:
.Lexception49:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase34-.Lttbaseref34
.Lttbaseref34:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end49-.Lcst_begin49
.Lcst_begin49:
	.uleb128 .Lfunc_begin49-.Lfunc_begin49  # >> Call Site 1 <<
	.uleb128 .Ltmp1214-.Lfunc_begin49       #   Call between .Lfunc_begin49 and .Ltmp1214
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1214-.Lfunc_begin49       # >> Call Site 2 <<
	.uleb128 .Ltmp1215-.Ltmp1214            #   Call between .Ltmp1214 and .Ltmp1215
	.uleb128 .Ltmp1216-.Lfunc_begin49       #     jumps to .Ltmp1216
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1215-.Lfunc_begin49       # >> Call Site 3 <<
	.uleb128 .Ltmp1217-.Ltmp1215            #   Call between .Ltmp1215 and .Ltmp1217
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1217-.Lfunc_begin49       # >> Call Site 4 <<
	.uleb128 .Ltmp1218-.Ltmp1217            #   Call between .Ltmp1217 and .Ltmp1218
	.uleb128 .Ltmp1219-.Lfunc_begin49       #     jumps to .Ltmp1219
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1220-.Lfunc_begin49       # >> Call Site 5 <<
	.uleb128 .Ltmp1221-.Ltmp1220            #   Call between .Ltmp1220 and .Ltmp1221
	.uleb128 .Ltmp1222-.Lfunc_begin49       #     jumps to .Ltmp1222
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1221-.Lfunc_begin49       # >> Call Site 6 <<
	.uleb128 .Lfunc_end93-.Ltmp1221         #   Call between .Ltmp1221 and .Lfunc_end93
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end49:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase34:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev,"axG",@progbits,_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev,comdat
	.hidden	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev # -- Begin function _ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev
	.weak	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev,@function
_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev: # @_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	8(%rdi), %rbx
	testq	%rbx, %rbx
	je	.LBB94_4
# %bb.1:
	movq	16(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB94_3
# %bb.2:
	movq	32(%rbx), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB94_3:                               # %_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaISA_EEELb0EEEEE18_M_deallocate_nodeEPSE_.exit
	movl	$40, %esi
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB94_4:
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end94:
	.size	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev, .Lfunc_end94-_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE12_Scoped_nodeD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE,"axG",@progbits,_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE,comdat
	.hidden	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE # -- Begin function _ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE
	.weak	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE,@function
_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE: # @_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	cmpq	$1, %rsi
	je	.LBB95_1
# %bb.2:
	movq	%rbx, %rax
	shrq	$60, %rax
	jne	.LBB95_3
# %bb.5:                                # %_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaISA_EEELb0EEEEE19_M_allocate_bucketsEm.exit.i
	leaq	(,%rbx,8), %r12
	movq	%r12, %rdi
	callq	_Znwm@PLT
	movq	%rax, %r15
	movq	%rax, %rdi
	xorl	%esi, %esi
	movq	%r12, %rdx
	callq	memset@PLT
	movq	16(%r14), %rsi
	movq	$0, 16(%r14)
	testq	%rsi, %rsi
	je	.LBB95_17
.LBB95_7:                               # %.lr.ph.preheader
	leaq	16(%r14), %rcx
	xorl	%r8d, %r8d
	jmp	.LBB95_8
	.p2align	4, 0x90
.LBB95_14:                              #   in Loop: Header=BB95_8 Depth=1
	movq	(%rax), %rax
	movq	%rax, (%rsi)
	movq	(%r15,%rdx,8), %rax
	movq	%r8, %rdx
.LBB95_15:                              # %.sink.split
                                        #   in Loop: Header=BB95_8 Depth=1
	movq	%rsi, (%rax)
.LBB95_16:                              #   in Loop: Header=BB95_8 Depth=1
	movq	%rdi, %rsi
	movq	%rdx, %r8
	testq	%rdi, %rdi
	je	.LBB95_17
.LBB95_8:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rsi), %rdi
	movq	8(%rsi), %rax
	movq	%rax, %rdx
	orq	%rbx, %rdx
	shrq	$32, %rdx
	je	.LBB95_9
# %bb.10:                               #   in Loop: Header=BB95_8 Depth=1
	xorl	%edx, %edx
	divq	%rbx
	movq	(%r15,%rdx,8), %rax
	testq	%rax, %rax
	jne	.LBB95_14
	jmp	.LBB95_12
	.p2align	4, 0x90
.LBB95_9:                               #   in Loop: Header=BB95_8 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%ebx
                                        # kill: def $edx killed $edx def $rdx
	movq	(%r15,%rdx,8), %rax
	testq	%rax, %rax
	jne	.LBB95_14
.LBB95_12:                              #   in Loop: Header=BB95_8 Depth=1
	movq	(%rcx), %rax
	movq	%rax, (%rsi)
	movq	%rsi, (%rcx)
	movq	%rcx, (%r15,%rdx,8)
	cmpq	$0, (%rsi)
	je	.LBB95_16
# %bb.13:                               #   in Loop: Header=BB95_8 Depth=1
	leaq	(%r15,%r8,8), %rax
	jmp	.LBB95_15
.LBB95_1:
	leaq	48(%r14), %r15
	movq	$0, 48(%r14)
	movq	16(%r14), %rsi
	movq	$0, 16(%r14)
	testq	%rsi, %rsi
	jne	.LBB95_7
.LBB95_17:                              # %._crit_edge
	movq	(%r14), %rdi
	leaq	48(%r14), %rax
	cmpq	%rdi, %rax
	je	.LBB95_19
# %bb.18:
	movq	8(%r14), %rsi
	shlq	$3, %rsi
	callq	_ZdlPvm@PLT
.LBB95_19:                              # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_deallocate_bucketsEv.exit
	movq	%rbx, 8(%r14)
	movq	%r15, (%r14)
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB95_3:
	.cfi_def_cfa_offset 48
	shrq	$61, %rbx
	je	.LBB95_4
# %bb.20:
	callq	_ZSt28__throw_bad_array_new_lengthv@PLT
.LBB95_4:
	callq	_ZSt17__throw_bad_allocv@PLT
.Lfunc_end95:
	.size	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE, .Lfunc_end95-_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_,"axG",@progbits,_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_,comdat
	.hidden	_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_ # -- Begin function _ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_
	.weak	_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_,@function
_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_: # @_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movq	(%rdi), %r15
	movq	8(%rdi), %r12
	movq	%rsi, %r14
	subq	%r15, %r14
	cmpq	16(%rdi), %r12
	je	.LBB96_8
# %bb.1:
	cmpq	%rsi, %r12
	je	.LBB96_2
# %bb.3:
	addq	%r14, %r15
	movq	(%rdx), %r13
	movq	-8(%r12), %rax
	movq	%rax, (%r12)
	movq	8(%rbx), %rdi
	leaq	8(%rdi), %rax
	movq	%rax, 8(%rbx)
	leaq	-8(%rdi), %rax
	movq	%rax, %rdx
	subq	%rsi, %rdx
	movq	%rdx, %rcx
	sarq	$3, %rcx
	cmpq	$2, %rcx
	jl	.LBB96_5
# %bb.4:
	shlq	$3, %rcx
	subq	%rcx, %rdi
	movq	%r15, %rsi
	callq	memmove@PLT
	movq	%r13, (%r15)
	jmp	.LBB96_19
.LBB96_8:
	movq	%rsi, 16(%rsp)                  # 8-byte Spill
	movq	%r12, %rcx
	subq	%r15, %rcx
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %rcx
	je	.LBB96_20
# %bb.9:                                # %_ZNKSt6vectorIPN8pybind116detail9type_infoESaIS3_EE12_M_check_lenEmPKc.exit.i
	movq	%rcx, 8(%rsp)                   # 8-byte Spill
	movq	%rcx, %rax
	sarq	$3, %rax
	cmpq	$1, %rax
	movq	%rax, %rcx
	adcq	$0, %rcx
	leaq	(%rcx,%rax), %r13
	movabsq	$1152921504606846975, %rsi      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rsi, %r13
	cmovaeq	%rsi, %r13
	addq	%rax, %rcx
	cmovbq	%rsi, %r13
	movq	%r14, %rbp
	sarq	$3, %rbp
	testq	%r13, %r13
	je	.LBB96_10
# %bb.11:
	leaq	(,%r13,8), %rdi
	movq	%rdx, (%rsp)                    # 8-byte Spill
	callq	_Znwm@PLT
	movq	(%rsp), %rdx                    # 8-byte Reload
	jmp	.LBB96_12
.LBB96_2:
	movq	(%rdx), %rax
	movq	%rax, (%r12)
	addq	$8, 8(%rbx)
	jmp	.LBB96_19
.LBB96_10:
	xorl	%eax, %eax
.LBB96_12:                              # %_ZNSt12_Vector_baseIPN8pybind116detail9type_infoESaIS3_EE11_M_allocateEm.exit.i
	movq	(%rdx), %rcx
	movq	%rcx, (%rax,%rbp,8)
	testq	%r14, %r14
	movq	%rax, (%rsp)                    # 8-byte Spill
	jle	.LBB96_14
# %bb.13:
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	memmove@PLT
	movq	(%rsp), %rax                    # 8-byte Reload
.LBB96_14:                              # %_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_.exit.i
	leaq	(%rax,%r14), %rbp
	addq	$8, %rbp
	subq	16(%rsp), %r12                  # 8-byte Folded Reload
	testq	%r12, %r12
	jle	.LBB96_16
# %bb.15:
	leaq	(%r15,%r14), %rsi
	movq	%rbp, %rdi
	movq	%r12, %rdx
	callq	memmove@PLT
	movq	(%rsp), %rax                    # 8-byte Reload
.LBB96_16:                              # %_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE11_S_relocateEPS3_S6_S6_RS4_.exit16.i
	testq	%r15, %r15
	je	.LBB96_18
# %bb.17:
	movq	%r15, %rdi
	movq	8(%rsp), %rsi                   # 8-byte Reload
	callq	_ZdlPvm@PLT
	movq	(%rsp), %rax                    # 8-byte Reload
.LBB96_18:                              # %_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_.exit
	addq	%r12, %rbp
	movq	%rax, (%rbx)
	movq	%rbp, 8(%rbx)
	leaq	(%rax,%r13,8), %rax
	movq	%rax, 16(%rbx)
.LBB96_19:
	addq	(%rbx), %r14
	movq	%r14, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB96_5:
	.cfi_def_cfa_offset 80
	cmpq	$8, %rdx
	jne	.LBB96_7
# %bb.6:
	movq	(%r15), %rcx
	movq	%rcx, (%rax)
.LBB96_7:
	movq	%r13, (%r15)
	jmp	.LBB96_19
.LBB96_20:
	leaq	.L.str.79(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end96:
	.size	_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_, .Lfunc_end96-_ZNSt6vectorIPN8pybind116detail9type_infoESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EERS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind1112cpp_function20make_function_recordEv,"axG",@progbits,_ZN8pybind1112cpp_function20make_function_recordEv,comdat
	.hidden	_ZN8pybind1112cpp_function20make_function_recordEv # -- Begin function _ZN8pybind1112cpp_function20make_function_recordEv
	.weak	_ZN8pybind1112cpp_function20make_function_recordEv
	.p2align	4, 0x90
	.type	_ZN8pybind1112cpp_function20make_function_recordEv,@function
_ZN8pybind1112cpp_function20make_function_recordEv: # @_ZN8pybind1112cpp_function20make_function_recordEv
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movl	$136, %edi
	callq	_Znwm@PLT
	movl	$0, 94(%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 104(%rax)
	movups	%xmm0, 120(%rax)
	movups	%xmm0, (%rax)
	movups	%xmm0, 16(%rax)
	movups	%xmm0, 32(%rax)
	movups	%xmm0, 48(%rax)
	movups	%xmm0, 64(%rax)
	movups	%xmm0, 75(%rax)
	movq	%rax, (%rbx)
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end97:
	.size	_ZN8pybind1112cpp_function20make_function_recordEv, .Lfunc_end97-_ZN8pybind1112cpp_function20make_function_recordEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom,"axG",@progbits,_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom,comdat
	.hidden	_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom # -- Begin function _ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom
	.weak	_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom
	.p2align	4, 0x90
	.type	_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom,@function
_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom: # @_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom
.Lfunc_begin50:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception50
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$488, %rsp                      # imm = 0x1E8
	.cfi_def_cfa_offset 544
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, 280(%rsp)                  # 8-byte Spill
	movq	%rcx, 320(%rsp)                 # 8-byte Spill
	movq	%rdx, 312(%rsp)                 # 8-byte Spill
	movq	%rsi, %rbx
	movq	%rdi, 192(%rsp)                 # 8-byte Spill
	movq	(%rsi), %rbp
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 32(%rsp)
	movq	$0, 48(%rsp)
	movq	(%rbp), %rax
	testq	%rax, %rax
	leaq	.L.str.80(%rip), %rdi
	cmovneq	%rax, %rdi
	callq	strdup@PLT
	movq	%rax, %r12
.Ltmp1223:
	movl	$8, %edi
	callq	_Znwm@PLT
.Ltmp1224:
# %bb.1:                                # %_ZN8pybind1112cpp_function12strdup_guardclEPKc.exit
	movq	%rax, %r15
	movq	%r12, (%rax)
	movq	%rax, %r14
	addq	$8, %r14
	movq	%rax, 32(%rsp)
	movq	%r14, 40(%rsp)
	movq	%r14, 48(%rsp)
	movq	%r12, (%rbp)
	movq	8(%rbp), %rdi
	testq	%rdi, %rdi
	je	.LBB98_4
# %bb.2:
	callq	strdup@PLT
	movq	%rax, %r12
.Ltmp1225:
	movl	$16, %edi
	callq	_Znwm@PLT
.Ltmp1226:
# %bb.3:                                # %_ZN8pybind1112cpp_function12strdup_guardclEPKc.exit238
	movq	%rax, %r13
	movq	%r12, 8(%rax)
	movq	(%r15), %rax
	movq	%rax, (%r13)
	movq	%r13, %r14
	addq	$16, %r14
	movl	$8, %esi
	movq	%r15, %rdi
	callq	_ZdlPvm@PLT
	movq	%r13, 32(%rsp)
	movq	%r14, 40(%rsp)
	movq	%r14, 48(%rsp)
	movq	%r12, 8(%rbp)
.LBB98_4:
	movq	%rbx, 272(%rsp)                 # 8-byte Spill
	movq	24(%rbp), %rbx
	movq	32(%rbp), %rax
	movq	%rax, 56(%rsp)                  # 8-byte Spill
	cmpq	%rax, %rbx
	movq	%rbp, %r15
	movq	%rbp, 96(%rsp)                  # 8-byte Spill
	je	.LBB98_66
# %bb.5:                                # %.lr.ph
	leaq	152(%rsp), %rbp
	leaq	16(%rsp), %r12
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-7, %rax
	movq	%rax, 168(%rsp)                 # 8-byte Spill
	jmp	.LBB98_8
	.p2align	4, 0x90
.LBB98_6:                               #   in Loop: Header=BB98_8 Depth=1
	movq	%r13, (%r14)
	movq	40(%rsp), %r14
	addq	$8, %r14
	movq	%r14, 40(%rsp)
	movq	%r13, 8(%rbx)
.LBB98_7:                               #   in Loop: Header=BB98_8 Depth=1
	addq	$32, %rbx
	cmpq	56(%rsp), %rbx                  # 8-byte Folded Reload
	je	.LBB98_66
.LBB98_8:                               # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB98_11
# %bb.9:                                #   in Loop: Header=BB98_8 Depth=1
	callq	strdup@PLT
	movq	%rax, %r13
	cmpq	48(%rsp), %r14
	je	.LBB98_23
# %bb.10:                               #   in Loop: Header=BB98_8 Depth=1
	movq	%r13, (%r14)
	movq	40(%rsp), %r14
	addq	$8, %r14
	movq	%r14, 40(%rsp)
	movq	%r13, (%rbx)
.LBB98_11:                              #   in Loop: Header=BB98_8 Depth=1
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB98_33
.LBB98_12:                              #   in Loop: Header=BB98_8 Depth=1
	callq	strdup@PLT
	movq	%rax, %r13
	cmpq	48(%rsp), %r14
	jne	.LBB98_6
# %bb.13:                               #   in Loop: Header=BB98_8 Depth=1
	movq	32(%rsp), %rbp
	subq	%rbp, %r14
	cmpq	168(%rsp), %r14                 # 8-byte Folded Reload
	je	.LBB98_362
# %bb.14:                               # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i251
                                        #   in Loop: Header=BB98_8 Depth=1
	movq	%r14, %r15
	sarq	$3, %r15
	cmpq	$1, %r15
	movq	%r15, %rax
	adcq	$0, %rax
	leaq	(%rax,%r15), %rcx
	movabsq	$1152921504606846975, %rdx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rdx, %rcx
	jb	.LBB98_15
# %bb.43:                               # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i251
                                        #   in Loop: Header=BB98_8 Depth=1
	movq	%rdx, %rcx
	addq	%r15, %rax
	jae	.LBB98_44
.LBB98_16:                              # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i251
                                        #   in Loop: Header=BB98_8 Depth=1
	testq	%rdx, %rdx
	movq	%rdx, 176(%rsp)                 # 8-byte Spill
	je	.LBB98_45
.LBB98_17:                              #   in Loop: Header=BB98_8 Depth=1
	leaq	(,%rdx,8), %rdi
.Ltmp1230:
	callq	_Znwm@PLT
.Ltmp1231:
# %bb.18:                               #   in Loop: Header=BB98_8 Depth=1
	movq	%rax, %r12
	movq	%r13, (%r12,%r15,8)
	testq	%r14, %r14
	jle	.LBB98_20
.LBB98_19:                              #   in Loop: Header=BB98_8 Depth=1
	movq	%r12, %rdi
	movq	%rbp, %rsi
	movq	%r14, %rdx
	callq	memmove@PLT
.LBB98_20:                              # %_ZNSt6vectorIPcSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exit16.i.i.i255
                                        #   in Loop: Header=BB98_8 Depth=1
	testq	%rbp, %rbp
	movq	96(%rsp), %r15                  # 8-byte Reload
	je	.LBB98_22
# %bb.21:                               #   in Loop: Header=BB98_8 Depth=1
	movq	%rbp, %rdi
	movq	%r14, %rsi
	callq	_ZdlPvm@PLT
.LBB98_22:                              # %_ZNSt6vectorIPcSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_.exit.i.i257
                                        #   in Loop: Header=BB98_8 Depth=1
	addq	%r12, %r14
	addq	$8, %r14
	movq	%r12, 32(%rsp)
	movq	%r14, 40(%rsp)
	movq	176(%rsp), %rax                 # 8-byte Reload
	leaq	(%r12,%rax,8), %rax
	movq	%rax, 48(%rsp)
	movq	%r13, 8(%rbx)
	leaq	16(%rsp), %r12
	leaq	152(%rsp), %rbp
	jmp	.LBB98_7
	.p2align	4, 0x90
.LBB98_23:                              #   in Loop: Header=BB98_8 Depth=1
	movq	32(%rsp), %rbp
	subq	%rbp, %r14
	cmpq	168(%rsp), %r14                 # 8-byte Folded Reload
	je	.LBB98_362
# %bb.24:                               # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i240
                                        #   in Loop: Header=BB98_8 Depth=1
	movq	%r14, %r15
	sarq	$3, %r15
	cmpq	$1, %r15
	movq	%r15, %rax
	adcq	$0, %rax
	leaq	(%rax,%r15), %rcx
	movabsq	$1152921504606846975, %rdx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rdx, %rcx
	jb	.LBB98_25
# %bb.40:                               # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i240
                                        #   in Loop: Header=BB98_8 Depth=1
	movq	%rdx, %rcx
	addq	%r15, %rax
	jae	.LBB98_41
.LBB98_26:                              # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i240
                                        #   in Loop: Header=BB98_8 Depth=1
	testq	%rdx, %rdx
	movq	%rdx, 176(%rsp)                 # 8-byte Spill
	je	.LBB98_42
.LBB98_27:                              #   in Loop: Header=BB98_8 Depth=1
	leaq	(,%rdx,8), %rdi
.Ltmp1228:
	callq	_Znwm@PLT
.Ltmp1229:
# %bb.28:                               #   in Loop: Header=BB98_8 Depth=1
	movq	%rax, %r12
	movq	%r13, (%r12,%r15,8)
	testq	%r14, %r14
	jle	.LBB98_30
.LBB98_29:                              #   in Loop: Header=BB98_8 Depth=1
	movq	%r12, %rdi
	movq	%rbp, %rsi
	movq	%r14, %rdx
	callq	memmove@PLT
.LBB98_30:                              # %_ZNSt6vectorIPcSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exit16.i.i.i244
                                        #   in Loop: Header=BB98_8 Depth=1
	testq	%rbp, %rbp
	movq	96(%rsp), %r15                  # 8-byte Reload
	je	.LBB98_32
# %bb.31:                               #   in Loop: Header=BB98_8 Depth=1
	movq	%rbp, %rdi
	movq	%r14, %rsi
	callq	_ZdlPvm@PLT
.LBB98_32:                              # %_ZNSt6vectorIPcSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_.exit.i.i246
                                        #   in Loop: Header=BB98_8 Depth=1
	addq	%r12, %r14
	addq	$8, %r14
	movq	%r12, 32(%rsp)
	movq	%r14, 40(%rsp)
	movq	176(%rsp), %rax                 # 8-byte Reload
	leaq	(%r12,%rax,8), %rax
	movq	%rax, 48(%rsp)
	movq	%r13, (%rbx)
	leaq	16(%rsp), %r12
	leaq	152(%rsp), %rbp
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	jne	.LBB98_12
.LBB98_33:                              #   in Loop: Header=BB98_8 Depth=1
	movq	16(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB98_7
# %bb.34:                               #   in Loop: Header=BB98_8 Depth=1
.Ltmp1236:
	callq	PyObject_Repr@PLT
.Ltmp1237:
# %bb.35:                               # %.noexc261
                                        #   in Loop: Header=BB98_8 Depth=1
	testq	%rax, %rax
	je	.LBB98_368
# %bb.36:                               #   in Loop: Header=BB98_8 Depth=1
	movq	%rax, 104(%rsp)
	cmpq	$2, (%rax)
	jl	.LBB98_46
# %bb.37:                               #   in Loop: Header=BB98_8 Depth=1
	movq	%rbp, 136(%rsp)
	movq	$0, 144(%rsp)
	movb	$0, 152(%rsp)
.Ltmp1242:
	leaq	136(%rsp), %rdi
	leaq	104(%rsp), %rsi
	movq	%rbp, %r13
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp1243:
# %bb.38:                               # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i
                                        #   in Loop: Header=BB98_8 Depth=1
	movq	%r12, (%rsp)
	movq	136(%rsp), %rbp
	cmpq	%r13, %rbp
	je	.LBB98_51
# %bb.39:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
                                        #   in Loop: Header=BB98_8 Depth=1
	movq	%rbp, (%rsp)
	movq	144(%rsp), %rax
	movq	152(%rsp), %rcx
	movq	%rcx, 16(%rsp)
	movq	%rax, 8(%rsp)
	movq	%rbp, %rdi
	callq	strdup@PLT
	cmpq	48(%rsp), %r14
	jne	.LBB98_48
.LBB98_52:                              #   in Loop: Header=BB98_8 Depth=1
	movq	%rax, 176(%rsp)                 # 8-byte Spill
	movq	32(%rsp), %r12
	subq	%r12, %r14
	cmpq	168(%rsp), %r14                 # 8-byte Folded Reload
	je	.LBB98_373
# %bb.53:                               # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i267
                                        #   in Loop: Header=BB98_8 Depth=1
	movq	%r14, %r13
	sarq	$3, %r13
	cmpq	$1, %r13
	movq	%r13, %rax
	adcq	$0, %rax
	leaq	(%rax,%r13), %rcx
	movabsq	$1152921504606846975, %rdx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rdx, %rcx
	jb	.LBB98_54
# %bb.58:                               # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i267
                                        #   in Loop: Header=BB98_8 Depth=1
	movq	%rdx, %rcx
	addq	%r13, %rax
	jae	.LBB98_59
.LBB98_55:                              # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i267
                                        #   in Loop: Header=BB98_8 Depth=1
	testq	%rdx, %rdx
	movq	%rdx, 200(%rsp)                 # 8-byte Spill
	je	.LBB98_60
.LBB98_56:                              #   in Loop: Header=BB98_8 Depth=1
	leaq	(,%rdx,8), %rdi
.Ltmp1245:
	callq	_Znwm@PLT
.Ltmp1246:
# %bb.57:                               #   in Loop: Header=BB98_8 Depth=1
	movq	%rax, %r15
	jmp	.LBB98_61
	.p2align	4, 0x90
.LBB98_25:                              # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i240
                                        #   in Loop: Header=BB98_8 Depth=1
	addq	%r15, %rax
	jb	.LBB98_26
.LBB98_41:                              # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i240
                                        #   in Loop: Header=BB98_8 Depth=1
	movq	%rcx, %rdx
	testq	%rdx, %rdx
	movq	%rdx, 176(%rsp)                 # 8-byte Spill
	jne	.LBB98_27
.LBB98_42:                              #   in Loop: Header=BB98_8 Depth=1
	xorl	%r12d, %r12d
	movq	%r13, (%r12,%r15,8)
	testq	%r14, %r14
	jg	.LBB98_29
	jmp	.LBB98_30
	.p2align	4, 0x90
.LBB98_15:                              # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i251
                                        #   in Loop: Header=BB98_8 Depth=1
	addq	%r15, %rax
	jb	.LBB98_16
.LBB98_44:                              # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i251
                                        #   in Loop: Header=BB98_8 Depth=1
	movq	%rcx, %rdx
	testq	%rdx, %rdx
	movq	%rdx, 176(%rsp)                 # 8-byte Spill
	jne	.LBB98_17
.LBB98_45:                              #   in Loop: Header=BB98_8 Depth=1
	xorl	%r12d, %r12d
	movq	%r13, (%r12,%r15,8)
	testq	%r14, %r14
	jg	.LBB98_19
	jmp	.LBB98_20
.LBB98_46:                              #   in Loop: Header=BB98_8 Depth=1
.Ltmp1239:
	movq	%rsp, %rdi
	leaq	104(%rsp), %rsi
	callq	_ZN8pybind114moveINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES8_E4typeEONS_6objectE
.Ltmp1240:
# %bb.47:                               # %._ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v.exit_crit_edge
                                        #   in Loop: Header=BB98_8 Depth=1
	movq	(%rsp), %rbp
	movq	%rbp, %rdi
	callq	strdup@PLT
	cmpq	48(%rsp), %r14
	je	.LBB98_52
.LBB98_48:                              #   in Loop: Header=BB98_8 Depth=1
	movq	%rax, (%r14)
	movq	40(%rsp), %r14
	addq	$8, %r14
	movq	%r14, 40(%rsp)
	leaq	152(%rsp), %rbp
	movq	%rax, 8(%rbx)
	movq	(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB98_50
.LBB98_49:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
                                        #   in Loop: Header=BB98_8 Depth=1
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB98_50:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB98_8 Depth=1
.Ltmp1248:
	leaq	104(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1249:
	jmp	.LBB98_7
.LBB98_54:                              # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i267
                                        #   in Loop: Header=BB98_8 Depth=1
	addq	%r13, %rax
	jb	.LBB98_55
.LBB98_59:                              # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i267
                                        #   in Loop: Header=BB98_8 Depth=1
	movq	%rcx, %rdx
	testq	%rdx, %rdx
	movq	%rdx, 200(%rsp)                 # 8-byte Spill
	jne	.LBB98_56
.LBB98_60:                              #   in Loop: Header=BB98_8 Depth=1
	xorl	%r15d, %r15d
.LBB98_61:                              # %_ZNSt12_Vector_baseIPcSaIS0_EE11_M_allocateEm.exit.i.i.i270
                                        #   in Loop: Header=BB98_8 Depth=1
	movq	176(%rsp), %rax                 # 8-byte Reload
	movq	%rax, (%r15,%r13,8)
	movq	%rax, %r13
	testq	%r14, %r14
	leaq	152(%rsp), %rbp
	jle	.LBB98_63
# %bb.62:                               #   in Loop: Header=BB98_8 Depth=1
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	memmove@PLT
.LBB98_63:                              # %_ZNSt6vectorIPcSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exit16.i.i.i271
                                        #   in Loop: Header=BB98_8 Depth=1
	testq	%r12, %r12
	je	.LBB98_65
# %bb.64:                               #   in Loop: Header=BB98_8 Depth=1
	movq	%r12, %rdi
	movq	%r14, %rsi
	callq	_ZdlPvm@PLT
.LBB98_65:                              # %_ZNSt6vectorIPcSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_.exit.i.i273
                                        #   in Loop: Header=BB98_8 Depth=1
	addq	%r15, %r14
	addq	$8, %r14
	movq	%r15, 32(%rsp)
	movq	%r14, 40(%rsp)
	movq	200(%rsp), %rax                 # 8-byte Reload
	leaq	(%r15,%rax,8), %rax
	movq	%rax, 48(%rsp)
	movq	96(%rsp), %r15                  # 8-byte Reload
	leaq	16(%rsp), %r12
	movq	%r13, %rax
	movq	%rax, 8(%rbx)
	movq	(%rsp), %rdi
	cmpq	%r12, %rdi
	jne	.LBB98_49
	jmp	.LBB98_50
.LBB98_51:                              #   in Loop: Header=BB98_8 Depth=1
	movq	144(%rsp), %r15
	leaq	1(%r15), %rdx
	movq	%r12, %rdi
	movq	%r13, %rsi
	callq	memcpy@PLT
	movq	%r15, 8(%rsp)
	movq	96(%rsp), %r15                  # 8-byte Reload
	movq	%r12, %rbp
	movq	%rbp, %rdi
	callq	strdup@PLT
	cmpq	48(%rsp), %r14
	jne	.LBB98_48
	jmp	.LBB98_52
.LBB98_66:                              # %._crit_edge
	movq	(%r15), %r14
	leaq	.L.str.81(%rip), %rsi
	movq	%r14, %rdi
	callq	strcmp@PLT
	testl	%eax, %eax
	je	.LBB98_68
# %bb.67:
	leaq	.L.str.82(%rip), %rsi
	movq	%r14, %rdi
	callq	strcmp@PLT
	testl	%eax, %eax
	sete	%al
	jmp	.LBB98_69
.LBB98_68:
	movb	$1, %al
.LBB98_69:
	movzbl	%al, %eax
	movzwl	89(%r15), %ecx
	movl	%ecx, %edx
	andl	$-2, %edx
	orl	%eax, %edx
	movw	%dx, 89(%r15)
	testb	$2, %cl
	sete	%cl
	andb	%cl, %al
	cmpb	$1, %al
	jne	.LBB98_136
# %bb.70:
	movq	112(%r15), %rax
	movq	24(%rax), %r15
	leaq	152(%rsp), %rbp
	movq	%rbp, 136(%rsp)
	testq	%r15, %r15
	je	.LBB98_380
# %bb.71:
	movq	%r15, %rdi
	callq	strlen@PLT
	movq	%rax, %r12
	movq	%rbp, %r13
	cmpq	$16, %rax
	jb	.LBB98_76
# %bb.72:
	testq	%r12, %r12
	js	.LBB98_397
# %bb.73:
	movq	%r12, %rdi
	incq	%rdi
	js	.LBB98_356
# %bb.74:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i
.Ltmp1263:
	callq	_Znwm@PLT
.Ltmp1264:
# %bb.75:                               # %.noexc284
	movq	%rax, %r13
	movq	%rax, 136(%rsp)
	movq	%r12, 152(%rsp)
.LBB98_76:                              # %._crit_edge.i.i.i
	testq	%r12, %r12
	je	.LBB98_80
# %bb.77:                               # %._crit_edge.i.i.i
	cmpq	$1, %r12
	jne	.LBB98_79
# %bb.78:
	movzbl	(%r15), %eax
	movb	%al, (%r13)
	jmp	.LBB98_80
.LBB98_79:
	movq	%r13, %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB98_80:
	movq	%r12, 144(%rsp)
	movb	$0, (%r13,%r12)
	leaq	16(%rsp), %r12
	movq	%r12, (%rsp)
	testq	%r14, %r14
	je	.LBB98_382
# %bb.81:
	movq	%r14, %rdi
	callq	strlen@PLT
	movq	%rax, %r15
	cmpq	$16, %rax
	jb	.LBB98_86
# %bb.82:
	testq	%r15, %r15
	js	.LBB98_399
# %bb.83:
	movq	%r15, %rdi
	incq	%rdi
	js	.LBB98_358
# %bb.84:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
.Ltmp1265:
	callq	_Znwm@PLT
.Ltmp1266:
# %bb.85:                               # %.noexc289
	movq	%rax, %r12
	movq	%rax, (%rsp)
	movq	%r15, 16(%rsp)
.LBB98_86:                              # %._crit_edge.i.i
	testq	%r15, %r15
	je	.LBB98_90
# %bb.87:                               # %._crit_edge.i.i
	cmpq	$1, %r15
	jne	.LBB98_89
# %bb.88:
	movzbl	(%r14), %eax
	movb	%al, (%r12)
	jmp	.LBB98_90
.LBB98_89:
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB98_90:
	movq	%r15, 8(%rsp)
	movb	$0, (%r12,%r15)
	movq	PyExc_FutureWarning@GOTPCREL(%rip), %rax
	movq	(%rax), %r12
	movq	136(%rsp), %rcx
	movq	144(%rsp), %r8
.Ltmp1267:
	leaq	.L.str.83(%rip), %rsi
	leaq	240(%rsp), %rdi
	leaq	328(%rsp), %r9
	movl	$22, %edx
	callq	_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE@PLT
.Ltmp1268:
# %bb.91:
	movq	248(%rsp), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-39, %rax
	cmpq	%rax, %rsi
	jg	.LBB98_386
# %bb.92:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	leaq	39(%rsi), %rbx
	movq	240(%rsp), %rax
	leaq	256(%rsp), %r15
	movl	$15, %ecx
	cmpq	%r15, %rax
	je	.LBB98_94
# %bb.93:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	256(%rsp), %rcx
.LBB98_94:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	cmpq	%rcx, %rbx
	jbe	.LBB98_97
# %bb.95:
.Ltmp1270:
	leaq	.L.str.84(%rip), %rcx
	leaq	240(%rsp), %rdi
	movl	$39, %r8d
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1271:
# %bb.96:                               # %._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i_crit_edge
	movq	240(%rsp), %rax
	jmp	.LBB98_98
.LBB98_97:
	movups	.L.str.84+16(%rip), %xmm0
	movups	%xmm0, 16(%rax,%rsi)
	movups	.L.str.84(%rip), %xmm0
	movups	%xmm0, (%rax,%rsi)
	movabsq	$2819384644257805422, %rcx      # imm = 0x272077656E2D746E
	movq	%rcx, 31(%rax,%rsi)
.LBB98_98:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
	movq	%rbx, 248(%rsp)
	movb	$0, (%rax,%rbx)
	leaq	224(%rsp), %r14
	movq	%r14, 208(%rsp)
	movq	240(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB98_100
# %bb.99:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i291
	movq	%rdi, 208(%rsp)
	movq	248(%rsp), %r13
	movq	256(%rsp), %rax
	movq	%rax, 224(%rsp)
	jmp	.LBB98_101
.LBB98_100:
	movq	248(%rsp), %r13
	leaq	1(%r13), %rdx
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	memcpy@PLT
	movq	%r14, %rdi
.LBB98_101:
	movq	%r13, 216(%rsp)
	movq	%r15, 240(%rsp)
	movq	$0, 248(%rsp)
	movb	$0, 256(%rsp)
	movq	8(%rsp), %r8
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%r13, %rax
	cmpq	%r8, %rax
	jb	.LBB98_388
# %bb.102:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	leaq	(%r8,%r13), %rbx
	movl	$15, %eax
	cmpq	%r14, %rdi
	je	.LBB98_104
# %bb.103:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	movq	224(%rsp), %rax
.LBB98_104:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	movq	(%rsp), %rcx
	cmpq	%rax, %rbx
	jbe	.LBB98_106
# %bb.105:
.Ltmp1272:
	leaq	208(%rsp), %rdi
	movq	%r13, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1273:
	jmp	.LBB98_110
.LBB98_106:
	testq	%r8, %r8
	je	.LBB98_110
# %bb.107:
	addq	%r13, %rdi
	cmpq	$1, %r8
	jne	.LBB98_109
# %bb.108:
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB98_110
.LBB98_109:
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB98_110:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_.exit.i
	movq	%rbx, 216(%rsp)
	movq	208(%rsp), %rax
	movb	$0, (%rax,%rbx)
	leaq	80(%rsp), %r13
	movq	%r13, 64(%rsp)
	movq	208(%rsp), %rax
	cmpq	%r14, %rax
	je	.LBB98_112
# %bb.111:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i296
	movq	%rax, 64(%rsp)
	movq	216(%rsp), %rbp
	movq	224(%rsp), %rcx
	movq	%rcx, 80(%rsp)
	jmp	.LBB98_113
.LBB98_112:
	movq	216(%rsp), %rbp
	leaq	1(%rbp), %rdx
	movq	%r13, %rdi
	movq	%r14, %rsi
	callq	memcpy@PLT
	movq	%r13, %rax
.LBB98_113:
	movq	%rbp, 72(%rsp)
	movq	%r14, 208(%rsp)
	movq	$0, 216(%rsp)
	movb	$0, 224(%rsp)
	movq	%rbp, %rcx
	andq	$-128, %rcx
	movabsq	$9223372036854775807, %rdx      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-127, %rdx
	cmpq	%rdx, %rcx
	je	.LBB98_390
# %bb.114:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i300
	leaq	128(%rbp), %rbx
	movl	$15, %ecx
	cmpq	%r13, %rax
	je	.LBB98_116
# %bb.115:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i300
	movq	80(%rsp), %rcx
.LBB98_116:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i300
	cmpq	%rcx, %rbx
	jbe	.LBB98_119
# %bb.117:
.Ltmp1274:
	leaq	.L.str.85(%rip), %rcx
	leaq	64(%rsp), %rdi
	movl	$128, %r8d
	movq	%rbp, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1275:
# %bb.118:                              # %._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i305_crit_edge
	movq	64(%rsp), %rax
	jmp	.LBB98_120
.LBB98_119:
	movups	.L.str.85+112(%rip), %xmm0
	movups	%xmm0, 112(%rax,%rbp)
	movups	.L.str.85+96(%rip), %xmm0
	movups	%xmm0, 96(%rax,%rbp)
	movups	.L.str.85+80(%rip), %xmm0
	movups	%xmm0, 80(%rax,%rbp)
	movups	.L.str.85+64(%rip), %xmm0
	movups	%xmm0, 64(%rax,%rbp)
	movups	.L.str.85+48(%rip), %xmm0
	movups	%xmm0, 48(%rax,%rbp)
	movups	.L.str.85+32(%rip), %xmm0
	movups	%xmm0, 32(%rax,%rbp)
	movups	.L.str.85+16(%rip), %xmm0
	movups	%xmm0, 16(%rax,%rbp)
	movups	.L.str.85(%rip), %xmm0
	movups	%xmm0, (%rax,%rbp)
.LBB98_120:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i305
	movq	%rbx, 72(%rsp)
	movb	$0, (%rax,%rbx)
	leaq	120(%rsp), %rbp
	movq	%rbp, 104(%rsp)
	movq	64(%rsp), %rsi
	cmpq	%r13, %rsi
	je	.LBB98_122
# %bb.121:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i306
	movq	%rsi, 104(%rsp)
	movq	72(%rsp), %rbx
	movq	80(%rsp), %rax
	movq	%rax, 120(%rsp)
	jmp	.LBB98_123
.LBB98_122:
	movq	72(%rsp), %rbx
	leaq	1(%rbx), %rdx
	movq	%rbp, %rdi
	movq	%r13, %rsi
	callq	memcpy@PLT
	movq	%rbp, %rsi
.LBB98_123:
	movq	%rbx, 112(%rsp)
	movq	%r13, 64(%rsp)
	movq	$0, 72(%rsp)
	movb	$0, 80(%rsp)
.Ltmp1276:
	movq	%r12, %rdi
	xorl	%edx, %edx
	callq	PyErr_WarnEx@PLT
.Ltmp1277:
# %bb.124:
	movq	104(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB98_126
# %bb.125:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i311
	movq	120(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB98_126:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit313
	movq	64(%rsp), %rdi
	cmpq	%r13, %rdi
	leaq	152(%rsp), %r12
	je	.LBB98_128
# %bb.127:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i314
	movq	80(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB98_128:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit316
	movq	208(%rsp), %rdi
	cmpq	%r14, %rdi
	leaq	16(%rsp), %rbx
	je	.LBB98_130
# %bb.129:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i317
	movq	224(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB98_130:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit319
	movq	240(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB98_132
# %bb.131:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i320
	movq	256(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB98_132:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit322
	movq	(%rsp), %rdi
	cmpq	%rbx, %rdi
	movq	96(%rsp), %r15                  # 8-byte Reload
	je	.LBB98_134
# %bb.133:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i323
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB98_134:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit325
	movq	136(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB98_136
# %bb.135:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i326
	movq	152(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB98_136:
	movq	$0, 304(%rsp)
	movq	$0, 296(%rsp)
.Ltmp1279:
	leaq	136(%rsp), %rdi
	leaq	304(%rsp), %r8
	leaq	296(%rsp), %r9
	movq	312(%rsp), %rsi                 # 8-byte Reload
	movq	%r15, %rdx
	movq	320(%rsp), %rbx                 # 8-byte Reload
	movq	%rbx, %rcx
	callq	_ZN8pybind116detail27generate_function_signatureB5cxx11EPKcPNS0_15function_recordEPKPKSt9type_infoRmSA_
.Ltmp1280:
# %bb.137:
	movzwl	89(%r15), %eax
	movl	%eax, %ecx
	shrl	$6, %ecx
	andl	$1, %ecx
	btl	$7, %eax
	movq	280(%rsp), %rax                 # 8-byte Reload
	sbbq	%rcx, %rax
	cmpq	%rax, 296(%rsp)
	jne	.LBB98_371
# %bb.138:
	movq	304(%rsp), %rax
	cmpq	$0, (%rbx,%rax,8)
	jne	.LBB98_371
# %bb.139:
	movq	136(%rsp), %rdi
	callq	strdup@PLT
	movq	%rax, %r14
	movq	40(%rsp), %r15
	cmpq	48(%rsp), %r15
	je	.LBB98_141
# %bb.140:
	movq	%r14, (%r15)
	addq	$8, %r15
	movq	%r15, 40(%rsp)
	movq	%r15, %rbp
	jmp	.LBB98_149
.LBB98_141:
	movq	32(%rsp), %r12
	subq	%r12, %r15
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-7, %rax
	cmpq	%rax, %r15
	je	.LBB98_395
# %bb.142:                              # %_ZNKSt6vectorIPcSaIS0_EE12_M_check_lenEmPKc.exit.i.i.i348
	movq	%r15, %rbp
	sarq	$3, %rbp
	cmpq	$1, %rbp
	movq	%rbp, %rax
	adcq	$0, %rax
	leaq	(%rax,%rbp), %rbx
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rcx, %rbx
	cmovaeq	%rcx, %rbx
	addq	%rbp, %rax
	cmovbq	%rcx, %rbx
	testq	%rbx, %rbx
	je	.LBB98_173
# %bb.143:
	leaq	(,%rbx,8), %rdi
.Ltmp1284:
	callq	_Znwm@PLT
.Ltmp1285:
# %bb.144:
	movq	%rax, %r13
	movq	%r14, (%r13,%rbp,8)
	testq	%r15, %r15
	jle	.LBB98_146
.LBB98_145:
	movq	%r13, %rdi
	movq	%r12, %rsi
	movq	%r15, %rdx
	callq	memmove@PLT
.LBB98_146:                             # %_ZNSt6vectorIPcSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exit16.i.i.i352
	leaq	(%r15,%r13), %rbp
	addq	$8, %rbp
	testq	%r12, %r12
	je	.LBB98_148
# %bb.147:
	movq	%r12, %rdi
	movq	%r15, %rsi
	callq	_ZdlPvm@PLT
.LBB98_148:                             # %_ZNSt6vectorIPcSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_.exit.i.i354
	movq	%r13, 32(%rsp)
	movq	%rbp, 40(%rsp)
	leaq	(,%rbx,8), %rax
	addq	%r13, %rax
	movq	%rax, 48(%rsp)
.LBB98_149:                             # %_ZN8pybind1112cpp_function12strdup_guardclEPKc.exit357
	movq	96(%rsp), %r15                  # 8-byte Reload
	movq	%r14, 16(%r15)
	movq	40(%r15), %rax
	cmpq	32(%r15), %rax
	je	.LBB98_151
# %bb.150:
	leaq	24(%r15), %rdi
	callq	_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_
.LBB98_151:                             # %_ZNSt6vectorIN8pybind116detail15argument_recordESaIS2_EE13shrink_to_fitEv.exit
	movq	280(%rsp), %rax                 # 8-byte Reload
	movw	%ax, 92(%r15)
	movq	120(%r15), %rbx
	testq	%rbx, %rbx
	je	.LBB98_176
# %bb.152:
	movq	8(%rbx), %rax
	cmpq	PyInstanceMethod_Type@GOTPCREL(%rip), %rax
	jne	.LBB98_154
# %bb.153:                              # %thread-pre-split
	movq	16(%rbx), %rbx
	movq	%rbx, 120(%r15)
	testq	%rbx, %rbx
	je	.LBB98_176
.LBB98_154:                             # %thread-pre-split.thread
	movq	8(%rbx), %rdi
	cmpq	PyCFunction_Type@GOTPCREL(%rip), %rdi
	je	.LBB98_160
# %bb.155:
.Ltmp1286:
	movq	PyCFunction_Type@GOTPCREL(%rip), %rsi
	callq	PyType_IsSubtype@PLT
.Ltmp1287:
# %bb.156:                              # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit
	movq	120(%r15), %rbx
	testl	%eax, %eax
	je	.LBB98_174
# %bb.157:                              # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.thread
	movq	8(%rbx), %rdi
	cmpq	PyCFunction_Type@GOTPCREL(%rip), %rdi
	je	.LBB98_160
# %bb.158:                              # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.i
.Ltmp1288:
	movq	PyCFunction_Type@GOTPCREL(%rip), %rsi
	callq	PyType_IsSubtype@PLT
.Ltmp1289:
# %bb.159:                              # %.noexc364
	testl	%eax, %eax
	je	.LBB98_401
.LBB98_160:                             # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.thread.i
	movq	16(%rbx), %rax
	testb	$32, 16(%rax)
	jne	.LBB98_162
# %bb.161:
	movq	24(%rbx), %rbx
	movq	8(%rbx), %rax
	testb	$-128, 171(%rax)
	je	.LBB98_163
	jmp	.LBB98_176
.LBB98_162:
	xorl	%ebx, %ebx
	movq	8(%rbx), %rax
	testb	$-128, 171(%rax)
	jne	.LBB98_176
.LBB98_163:
	leaq	_ZN8pybind116detailL28function_record_PyTypeObjectE(%rip), %rcx
	cmpq	%rcx, %rax
	je	.LBB98_165
# %bb.164:                              # %_ZN8pybind116detail27is_function_record_PyObjectEP7_object.exit.i
	movq	24(%rax), %rdi
	movq	_ZN8pybind116detailL28function_record_PyTypeObjectE+24(%rip), %rsi
	callq	strcmp@PLT
	testl	%eax, %eax
	jne	.LBB98_176
.LBB98_165:                             # %_ZN8pybind116detail33function_record_ptr_from_PyObjectEP7_object.exit
	movq	16(%rbx), %rbx
	testq	%rbx, %rbx
	je	.LBB98_176
# %bb.166:
	movq	112(%rbx), %rax
	cmpq	112(%r15), %rax
	jne	.LBB98_176
# %bb.167:
	movq	120(%r15), %rax
	movq	192(%rsp), %rdi                 # 8-byte Reload
	movq	%rax, (%rdi)
.Ltmp1303:
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1304:
# %bb.168:
	movzwl	89(%r15), %eax
	movzwl	89(%rbx), %ecx
	xorw	%ax, %cx
	testb	$16, %cl
	jne	.LBB98_407
# %bb.169:
	testl	$256, %eax                      # imm = 0x100
	jne	.LBB98_325
# %bb.170:
	movq	%rbx, %rcx
	.p2align	4, 0x90
.LBB98_171:                             # %.preheader
                                        # =>This Inner Loop Header: Depth=1
	movq	%rcx, %rax
	movq	128(%rcx), %rcx
	testq	%rcx, %rcx
	jne	.LBB98_171
# %bb.172:
	movq	272(%rsp), %rdx                 # 8-byte Reload
	movq	(%rdx), %rcx
	movq	$0, (%rdx)
	movq	%rcx, 128(%rax)
	movq	32(%rsp), %rax
	jmp	.LBB98_329
.LBB98_173:
	xorl	%r13d, %r13d
	movq	%r14, (%r13,%rbp,8)
	testq	%r15, %r15
	jg	.LBB98_145
	jmp	.LBB98_146
.LBB98_174:
	cmpq	_Py_NoneStruct@GOTPCREL(%rip), %rbx
	je	.LBB98_176
# %bb.175:
	movq	(%r15), %rsi
	cmpb	$95, (%rsi)
	jne	.LBB98_402
.LBB98_176:                             # %.thread
.Ltmp1356:
	movl	$32, %edi
	callq	_Znwm@PLT
.Ltmp1357:
# %bb.177:
	movq	%rax, 104(%r15)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rax)
	movq	(%r15), %rcx
	movq	%rcx, (%rax)
	leaq	_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_(%rip), %rcx
	movq	%rcx, 8(%rax)
	movl	$3, 16(%rax)
	cmpb	$0, _ZN8pybind116detailL52function_record_PyTypeObject_PyType_Ready_first_callE(%rip)
	jne	.LBB98_181
# %bb.178:
.Ltmp1358:
	leaq	_ZN8pybind116detailL28function_record_PyTypeObjectE(%rip), %rdi
	callq	PyType_Ready@PLT
.Ltmp1359:
# %bb.179:                              # %.noexc375
	testl	%eax, %eax
	js	.LBB98_392
# %bb.180:
	movb	$1, _ZN8pybind116detailL52function_record_PyTypeObject_PyType_Ready_first_callE(%rip)
.LBB98_181:                             # %_ZN8pybind116detail41function_record_PyTypeObject_PyType_ReadyEv.exit
.Ltmp1366:
	leaq	_ZN8pybind116detailL28function_record_PyTypeObjectE(%rip), %rdi
	callq	_PyObject_New@PLT
.Ltmp1367:
# %bb.182:                              # %.noexc379
	testq	%rax, %rax
	movq	272(%rsp), %rdx                 # 8-byte Reload
	je	.LBB98_375
# %bb.183:
	movq	$0, 16(%rax)
	movq	%rax, (%rsp)
	movq	(%rdx), %rcx
	movq	$0, (%rdx)
	movq	%rcx, 16(%rax)
	movq	32(%rsp), %rax
	cmpq	%rax, %rbp
	je	.LBB98_185
# %bb.184:
	movq	%rax, 40(%rsp)
.LBB98_185:                             # %_ZN8pybind1112cpp_function12strdup_guard7releaseEv.exit
	movq	112(%r15), %rsi
.Ltmp1368:
	leaq	104(%rsp), %rdi
	callq	_ZN8pybind116detail16get_scope_moduleENS_6handleE
.Ltmp1369:
# %bb.186:
	movq	104(%r15), %rdi
	movq	(%rsp), %rsi
	movq	104(%rsp), %rdx
.Ltmp1371:
	xorl	%ecx, %ecx
	callq	PyCMethod_New@PLT
.Ltmp1372:
# %bb.187:
	movq	192(%rsp), %rcx                 # 8-byte Reload
	movq	%rax, (%rcx)
	testq	%rax, %rax
	je	.LBB98_378
# %bb.188:
.Ltmp1373:
	leaq	104(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1374:
# %bb.189:                              # %_ZN8pybind116objectD2Ev.exit385
.Ltmp1376:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1377:
# %bb.190:                              # %_ZN8pybind1112cpp_function12strdup_guard7releaseEv.exit426
	leaq	16(%rsp), %r14
	movq	%r14, (%rsp)
	movq	$0, 8(%rsp)
	movb	$1, %al
	movl	%eax, 200(%rsp)                 # 4-byte Spill
	movq	%r14, 56(%rsp)                  # 8-byte Spill
	movq	%r15, %rbx
.LBB98_191:                             # %.sink.split648
	movb	$0, (%r14)
.LBB98_192:
	movq	$0, 168(%rsp)                   # 8-byte Folded Spill
	movb	$1, %r12b
	jmp	.LBB98_196
.LBB98_193:                             # %.noexc530
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	(%rsp), %rax
.LBB98_194:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit531
                                        #   in Loop: Header=BB98_196 Depth=1
	movb	$10, (%rax,%r13)
	movq	%r14, 8(%rsp)
	movq	(%rsp), %rax
	movb	$0, 1(%rax,%r13)
	.p2align	4, 0x90
.LBB98_195:                             #   in Loop: Header=BB98_196 Depth=1
	movq	128(%rbx), %rbx
	testq	%rbx, %rbx
	je	.LBB98_306
.LBB98_196:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB98_208 Depth 2
                                        #     Child Loop BB98_224 Depth 2
	cmpb	$1, _ZZN8pybind117options12global_stateEvE8instance+1(%rip)
	jne	.LBB98_275
# %bb.197:                              #   in Loop: Header=BB98_196 Depth=1
	movq	(%r15), %rdi
	leaq	.L.str.96(%rip), %rsi
	callq	strcmp@PLT
	testl	%eax, %eax
	je	.LBB98_275
# %bb.198:                              #   in Loop: Header=BB98_196 Depth=1
	cmpl	$0, 168(%rsp)                   # 4-byte Folded Reload
	movl	%r12d, 176(%rsp)                # 4-byte Spill
	jle	.LBB98_205
# %bb.199:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	(%rsp), %rax
	movl	$15, %ecx
	cmpq	56(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB98_201
# %bb.200:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	16(%rsp), %rcx
.LBB98_201:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	8(%rsp), %r13
	leaq	1(%r13), %r14
	cmpq	%rcx, %r14
	jbe	.LBB98_204
# %bb.202:                              #   in Loop: Header=BB98_196 Depth=1
.Ltmp1379:
	movl	$1, %r8d
	movq	%rsp, %rdi
	movq	%r13, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1380:
# %bb.203:                              # %.noexc455
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	(%rsp), %rax
.LBB98_204:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit
                                        #   in Loop: Header=BB98_196 Depth=1
	movb	$10, (%rax,%r13)
	movq	%r14, 8(%rsp)
	movq	(%rsp), %rax
	movb	$0, 1(%rax,%r13)
.LBB98_205:                             #   in Loop: Header=BB98_196 Depth=1
	cmpb	$0, 200(%rsp)                   # 1-byte Folded Reload
	jne	.LBB98_251
# %bb.206:                              #   in Loop: Header=BB98_196 Depth=1
	movq	168(%rsp), %rax                 # 8-byte Reload
	incl	%eax
	movl	%eax, %r14d
	negl	%r14d
	movq	%rax, 168(%rsp)                 # 8-byte Spill
	cmovsl	%eax, %r14d
	movl	$1, %r15d
	cmpl	$10, %r14d
	jb	.LBB98_215
# %bb.207:                              # %.lr.ph.i.i.preheader
                                        #   in Loop: Header=BB98_196 Depth=1
	movl	$4, %r15d
	movl	%r14d, %eax
	.p2align	4, 0x90
.LBB98_208:                             # %.lr.ph.i.i
                                        #   Parent Loop BB98_196 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpl	$99, %eax
	jbe	.LBB98_213
# %bb.209:                              #   in Loop: Header=BB98_208 Depth=2
	cmpl	$999, %eax                      # imm = 0x3E7
	jbe	.LBB98_214
# %bb.210:                              #   in Loop: Header=BB98_208 Depth=2
	cmpl	$10000, %eax                    # imm = 0x2710
	jb	.LBB98_215
# %bb.211:                              #   in Loop: Header=BB98_208 Depth=2
	movl	%eax, %ecx
	movl	$3518437209, %edx               # imm = 0xD1B71759
	imulq	%rdx, %rcx
	shrq	$45, %rcx
	addl	$4, %r15d
	cmpl	$99999, %eax                    # imm = 0x1869F
	movl	%ecx, %eax
	ja	.LBB98_208
# %bb.212:                              # %_ZNSt8__detail14__to_chars_lenIjEEjT_i.exit.i.loopexit
                                        #   in Loop: Header=BB98_196 Depth=1
	addl	$-3, %r15d
	jmp	.LBB98_215
.LBB98_213:                             #   in Loop: Header=BB98_196 Depth=1
	addl	$-2, %r15d
	jmp	.LBB98_215
.LBB98_214:                             #   in Loop: Header=BB98_196 Depth=1
	decl	%r15d
.LBB98_215:                             # %_ZNSt8__detail14__to_chars_lenIjEEjT_i.exit.i
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	168(%rsp), %r12                 # 8-byte Reload
                                        # kill: def $r12d killed $r12d killed $r12 def $r12
	shrl	$31, %r12d
	leal	(%r15,%r12), %r13d
	leaq	80(%rsp), %rbp
	movq	%rbp, 64(%rsp)
	cmpl	$16, %r13d
	jb	.LBB98_218
# %bb.216:                              #   in Loop: Header=BB98_196 Depth=1
	leaq	1(%r13), %rdi
.Ltmp1381:
	callq	_Znwm@PLT
.Ltmp1382:
# %bb.217:                              # %.noexc.i457
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	%rax, %rbp
	movq	%rax, 64(%rsp)
	movq	%r13, 80(%rsp)
	jmp	.LBB98_221
.LBB98_218:                             #   in Loop: Header=BB98_196 Depth=1
	testq	%r13, %r13
	je	.LBB98_222
# %bb.219:                              #   in Loop: Header=BB98_196 Depth=1
	cmpl	$1, %r13d
	jne	.LBB98_221
# %bb.220:                              #   in Loop: Header=BB98_196 Depth=1
	movb	$45, 80(%rsp)
	jmp	.LBB98_222
.LBB98_221:                             #   in Loop: Header=BB98_196 Depth=1
	movq	%rbp, %rdi
	movl	$45, %esi
	movq	%r13, %rdx
	callq	memset@PLT
.LBB98_222:                             #   in Loop: Header=BB98_196 Depth=1
	movq	%r13, 72(%rsp)
	movb	$0, (%rbp,%r13)
	movl	%r12d, %eax
	addq	64(%rsp), %rax
	cmpl	$100, %r14d
	jb	.LBB98_227
# %bb.223:                              # %.lr.ph.preheader.i.i
                                        #   in Loop: Header=BB98_196 Depth=1
	addl	$-2, %r15d
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %r8
	.p2align	4, 0x90
.LBB98_224:                             # %.lr.ph.i11.i
                                        #   Parent Loop BB98_196 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	leal	1(%r15), %edx
	movl	%r14d, %ecx
	imulq	$1374389535, %rcx, %rcx         # imm = 0x51EB851F
	shrq	$37, %rcx
	imull	$100, %ecx, %esi
	movl	%r14d, %edi
	subl	%esi, %edi
	movzbl	(%r8,%rdi,2), %esi
	movzbl	1(%r8,%rdi,2), %edi
	movb	%dil, (%rax,%rdx)
	movl	%r15d, %edx
	movb	%sil, (%rax,%rdx)
	addl	$-2, %r15d
	cmpl	$9999, %r14d                    # imm = 0x270F
	movl	%ecx, %r14d
	ja	.LBB98_224
# %bb.225:                              # %._crit_edge.i.i456
                                        #   in Loop: Header=BB98_196 Depth=1
	cmpl	$10, %ecx
	jb	.LBB98_228
.LBB98_226:                             #   in Loop: Header=BB98_196 Depth=1
	movl	%ecx, %ecx
	leaq	(%rcx,%rcx), %rdx
	movl	%edx, %edx
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %rsi
	movzbl	1(%rdx,%rsi), %edx
	movb	%dl, 1(%rax)
	movzbl	(%rsi,%rcx,2), %ecx
	jmp	.LBB98_229
.LBB98_227:                             #   in Loop: Header=BB98_196 Depth=1
	movl	%r14d, %ecx
	cmpl	$10, %ecx
	jae	.LBB98_226
.LBB98_228:                             #   in Loop: Header=BB98_196 Depth=1
	orb	$48, %cl
.LBB98_229:                             # %_ZNSt7__cxx119to_stringEi.exit
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	96(%rsp), %r15                  # 8-byte Reload
	movb	%cl, (%rax)
	movq	72(%rsp), %rsi
	movq	%rsi, %rax
	andq	$-2, %rax
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	decq	%rcx
	cmpq	%rcx, %rax
	je	.LBB98_366
# %bb.230:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i458
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	64(%rsp), %rax
	movl	$15, %ecx
	leaq	80(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB98_232
# %bb.231:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i458
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	80(%rsp), %rcx
.LBB98_232:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i458
                                        #   in Loop: Header=BB98_196 Depth=1
	leaq	2(%rsi), %r14
	cmpq	%rcx, %r14
	jbe	.LBB98_234
# %bb.233:                              #   in Loop: Header=BB98_196 Depth=1
.Ltmp1384:
	movl	$2, %r8d
	leaq	64(%rsp), %rdi
	xorl	%edx, %edx
	leaq	.L.str.99(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1385:
	jmp	.LBB98_235
.LBB98_234:                             #   in Loop: Header=BB98_196 Depth=1
	movw	$8238, (%rax,%rsi)              # imm = 0x202E
.LBB98_235:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i463
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	%r14, 72(%rsp)
	movq	64(%rsp), %rax
	movb	$0, (%rax,%r14)
	leaq	120(%rsp), %rdi
	movq	%rdi, 104(%rsp)
	movq	64(%rsp), %rcx
	leaq	80(%rsp), %rsi
	cmpq	%rsi, %rcx
	je	.LBB98_237
# %bb.236:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i464
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	%rcx, 104(%rsp)
	movq	72(%rsp), %r13
	movq	%rsi, %r14
	movq	80(%rsp), %rax
	movq	%rax, 120(%rsp)
	jmp	.LBB98_238
.LBB98_237:                             #   in Loop: Header=BB98_196 Depth=1
	movq	72(%rsp), %r13
	leaq	1(%r13), %rdx
	movq	%rsi, %r14
	movq	%rdi, %rbp
	callq	memcpy@PLT
	movq	%rbp, %rcx
.LBB98_238:                             #   in Loop: Header=BB98_196 Depth=1
	movq	%r13, 112(%rsp)
	movq	%r14, 64(%rsp)
	movq	$0, 72(%rsp)
	movb	$0, 80(%rsp)
	movq	8(%rsp), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r13, %rax
	jb	.LBB98_364
# %bb.239:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i469
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	(%rsp), %rdi
	movl	$15, %eax
	cmpq	56(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB98_241
# %bb.240:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i469
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	16(%rsp), %rax
.LBB98_241:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i469
                                        #   in Loop: Header=BB98_196 Depth=1
	leaq	(%rsi,%r13), %r14
	cmpq	%rax, %r14
	jbe	.LBB98_243
# %bb.242:                              #   in Loop: Header=BB98_196 Depth=1
.Ltmp1387:
	movq	%rsp, %rdi
	xorl	%edx, %edx
	movq	%r13, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1388:
	jmp	.LBB98_247
.LBB98_243:                             #   in Loop: Header=BB98_196 Depth=1
	testq	%r13, %r13
	je	.LBB98_247
# %bb.244:                              #   in Loop: Header=BB98_196 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r13
	jne	.LBB98_246
# %bb.245:                              #   in Loop: Header=BB98_196 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB98_247
.LBB98_246:                             #   in Loop: Header=BB98_196 Depth=1
	movq	%rcx, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
.LBB98_247:                             #   in Loop: Header=BB98_196 Depth=1
	movq	%r14, 8(%rsp)
	movq	(%rsp), %rax
	movb	$0, (%rax,%r14)
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_249
# %bb.248:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i477
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	120(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB98_249:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit479
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_251
# %bb.250:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i480
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	80(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB98_251:                             #   in Loop: Header=BB98_196 Depth=1
	movq	(%r15), %r13
	movq	%r13, %rdi
	callq	strlen@PLT
	movq	8(%rsp), %rsi
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rcx
	cmpq	%rax, %rcx
	jb	.LBB98_360
# %bb.252:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i489
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	(%rsp), %rdi
	movl	$15, %ecx
	cmpq	56(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB98_254
# %bb.253:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i489
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	16(%rsp), %rcx
.LBB98_254:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i489
                                        #   in Loop: Header=BB98_196 Depth=1
	leaq	(%rsi,%rax), %r14
	cmpq	%rcx, %r14
	jbe	.LBB98_256
# %bb.255:                              #   in Loop: Header=BB98_196 Depth=1
.Ltmp1396:
	movq	%rsp, %rdi
	xorl	%edx, %edx
	movq	%r13, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1397:
	jmp	.LBB98_260
.LBB98_256:                             #   in Loop: Header=BB98_196 Depth=1
	testq	%rax, %rax
	je	.LBB98_260
# %bb.257:                              #   in Loop: Header=BB98_196 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %rax
	jne	.LBB98_259
# %bb.258:                              #   in Loop: Header=BB98_196 Depth=1
	movzbl	(%r13), %eax
	movb	%al, (%rdi)
	jmp	.LBB98_260
.LBB98_259:                             #   in Loop: Header=BB98_196 Depth=1
	movq	%r13, %rsi
	movq	%rax, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB98_260:                             #   in Loop: Header=BB98_196 Depth=1
	movq	%r14, 8(%rsp)
	movq	(%rsp), %rax
	movb	$0, (%rax,%r14)
	movq	16(%rbx), %r13
	movq	%r13, %rdi
	callq	strlen@PLT
	movq	8(%rsp), %rsi
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rcx
	cmpq	%rax, %rcx
	jb	.LBB98_360
# %bb.261:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i498
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	(%rsp), %rdi
	movl	$15, %ecx
	cmpq	56(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB98_263
# %bb.262:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i498
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	16(%rsp), %rcx
.LBB98_263:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i498
                                        #   in Loop: Header=BB98_196 Depth=1
	leaq	(%rsi,%rax), %r14
	cmpq	%rcx, %r14
	jbe	.LBB98_265
# %bb.264:                              #   in Loop: Header=BB98_196 Depth=1
.Ltmp1398:
	movq	%rsp, %rdi
	xorl	%edx, %edx
	movq	%r13, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1399:
	jmp	.LBB98_269
.LBB98_265:                             #   in Loop: Header=BB98_196 Depth=1
	testq	%rax, %rax
	je	.LBB98_269
# %bb.266:                              #   in Loop: Header=BB98_196 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %rax
	jne	.LBB98_268
# %bb.267:                              #   in Loop: Header=BB98_196 Depth=1
	movzbl	(%r13), %eax
	movb	%al, (%rdi)
	jmp	.LBB98_269
.LBB98_268:                             #   in Loop: Header=BB98_196 Depth=1
	movq	%r13, %rsi
	movq	%rax, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB98_269:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i507
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	%r14, 8(%rsp)
	movq	(%rsp), %rax
	movb	$0, (%rax,%r14)
	movq	(%rsp), %rax
	movq	8(%rsp), %r13
	movl	$15, %ecx
	cmpq	56(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB98_271
# %bb.270:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i507
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	16(%rsp), %rcx
.LBB98_271:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i507
                                        #   in Loop: Header=BB98_196 Depth=1
	leaq	1(%r13), %r14
	cmpq	%rcx, %r14
	jbe	.LBB98_274
# %bb.272:                              #   in Loop: Header=BB98_196 Depth=1
.Ltmp1400:
	movl	$1, %r8d
	movq	%rsp, %rdi
	movq	%r13, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1401:
# %bb.273:                              # %.noexc509
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	(%rsp), %rax
.LBB98_274:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit510
                                        #   in Loop: Header=BB98_196 Depth=1
	movb	$10, (%rax,%r13)
	movq	%r14, 8(%rsp)
	movq	(%rsp), %rax
	movb	$0, 1(%rax,%r13)
	movl	176(%rsp), %r12d                # 4-byte Reload
.LBB98_275:                             #   in Loop: Header=BB98_196 Depth=1
	movq	8(%rbx), %rax
	testq	%rax, %rax
	je	.LBB98_195
# %bb.276:                              #   in Loop: Header=BB98_196 Depth=1
	cmpb	$0, (%rax)
	je	.LBB98_195
# %bb.277:                              #   in Loop: Header=BB98_196 Depth=1
	cmpb	$1, _ZZN8pybind117options12global_stateEvE8instance(%rip)
	jne	.LBB98_195
# %bb.278:                              #   in Loop: Header=BB98_196 Depth=1
	movzbl	_ZZN8pybind117options12global_stateEvE8instance+1(%rip), %eax
	movl	%eax, %ecx
	orb	%r12b, %cl
	movq	8(%rsp), %r13
	testb	$1, %cl
	je	.LBB98_280
# %bb.279:                              #   in Loop: Header=BB98_196 Depth=1
	andb	%al, %r12b
	testb	$1, %al
	jne	.LBB98_286
	jmp	.LBB98_292
.LBB98_280:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i511
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	(%rsp), %rax
	movl	$15, %ecx
	cmpq	56(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB98_282
# %bb.281:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i511
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	16(%rsp), %rcx
.LBB98_282:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i511
                                        #   in Loop: Header=BB98_196 Depth=1
	leaq	1(%r13), %r14
	cmpq	%rcx, %r14
	jbe	.LBB98_285
# %bb.283:                              #   in Loop: Header=BB98_196 Depth=1
.Ltmp1402:
	movl	$1, %r8d
	movq	%rsp, %rdi
	movq	%r13, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1403:
# %bb.284:                              # %.noexc513
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	(%rsp), %rax
.LBB98_285:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit514
                                        #   in Loop: Header=BB98_196 Depth=1
	movb	$10, (%rax,%r13)
	movq	%r14, 8(%rsp)
	movq	(%rsp), %rax
	movb	$0, 1(%rax,%r13)
	movzbl	_ZZN8pybind117options12global_stateEvE8instance+1(%rip), %eax
	xorl	%r12d, %r12d
	movq	8(%rsp), %r13
	testb	$1, %al
	je	.LBB98_292
.LBB98_286:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i515
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	(%rsp), %rax
	movl	$15, %ecx
	cmpq	56(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB98_288
# %bb.287:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i515
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	16(%rsp), %rcx
.LBB98_288:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i515
                                        #   in Loop: Header=BB98_196 Depth=1
	leaq	1(%r13), %r14
	cmpq	%rcx, %r14
	jbe	.LBB98_291
# %bb.289:                              #   in Loop: Header=BB98_196 Depth=1
.Ltmp1404:
	movl	$1, %r8d
	movq	%rsp, %rdi
	movq	%r13, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1405:
# %bb.290:                              # %.noexc517
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	(%rsp), %rax
.LBB98_291:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit518
                                        #   in Loop: Header=BB98_196 Depth=1
	movb	$10, (%rax,%r13)
	movq	%r14, 8(%rsp)
	movq	(%rsp), %rax
	movb	$0, 1(%rax,%r13)
	movq	8(%rsp), %r13
.LBB98_292:                             #   in Loop: Header=BB98_196 Depth=1
	movq	8(%rbx), %rbp
	movq	%rbp, %rdi
	callq	strlen@PLT
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%r13, %rcx
	cmpq	%rax, %rcx
	jb	.LBB98_360
# %bb.293:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i519
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	(%rsp), %rdi
	movl	$15, %ecx
	cmpq	56(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB98_295
# %bb.294:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i519
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	16(%rsp), %rcx
.LBB98_295:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i519
                                        #   in Loop: Header=BB98_196 Depth=1
	leaq	(%rax,%r13), %r14
	cmpq	%rcx, %r14
	jbe	.LBB98_297
# %bb.296:                              #   in Loop: Header=BB98_196 Depth=1
.Ltmp1406:
	movq	%rsp, %rdi
	movq	%r13, %rsi
	xorl	%edx, %edx
	movq	%rbp, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1407:
	jmp	.LBB98_301
.LBB98_297:                             #   in Loop: Header=BB98_196 Depth=1
	testq	%rax, %rax
	je	.LBB98_301
# %bb.298:                              #   in Loop: Header=BB98_196 Depth=1
	addq	%r13, %rdi
	cmpq	$1, %rax
	jne	.LBB98_300
# %bb.299:                              #   in Loop: Header=BB98_196 Depth=1
	movzbl	(%rbp), %eax
	movb	%al, (%rdi)
	jmp	.LBB98_301
.LBB98_300:                             #   in Loop: Header=BB98_196 Depth=1
	movq	%rbp, %rsi
	movq	%rax, %rdx
	callq	memcpy@PLT
.LBB98_301:                             #   in Loop: Header=BB98_196 Depth=1
	movq	%r14, 8(%rsp)
	movq	(%rsp), %rax
	movb	$0, (%rax,%r14)
	cmpb	$1, _ZZN8pybind117options12global_stateEvE8instance+1(%rip)
	jne	.LBB98_195
# %bb.302:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i528
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	(%rsp), %rax
	movl	$15, %ecx
	cmpq	56(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB98_304
# %bb.303:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i528
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	16(%rsp), %rcx
.LBB98_304:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i528
                                        #   in Loop: Header=BB98_196 Depth=1
	movq	8(%rsp), %r13
	leaq	1(%r13), %r14
	cmpq	%rcx, %r14
	jbe	.LBB98_194
# %bb.305:                              #   in Loop: Header=BB98_196 Depth=1
.Ltmp1408:
	movl	$1, %r8d
	movq	%rsp, %rdi
	movq	%r13, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1409:
	jmp	.LBB98_193
.LBB98_306:
	movq	192(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %r14
	cmpq	$0, 8(%rsp)
	je	.LBB98_308
# %bb.307:
	movq	(%rsp), %rdi
	callq	strdup@PLT
	movq	%rax, %r12
	jmp	.LBB98_309
.LBB98_308:
	xorl	%r12d, %r12d
.LBB98_309:
	movq	16(%r14), %rax
	movq	24(%rax), %rdi
	callq	free@PLT
	movq	16(%r14), %rax
	movq	%r12, 24(%rax)
	testb	$16, 89(%r15)
	je	.LBB98_315
# %bb.310:
	movq	192(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rdi
.Ltmp1414:
	callq	PyInstanceMethod_New@PLT
.Ltmp1415:
# %bb.311:
	movq	192(%rsp), %rcx                 # 8-byte Reload
	movq	%rax, (%rcx)
	testq	%rax, %rax
	je	.LBB98_384
# %bb.312:
	movq	(%r14), %rax
	testl	%eax, %eax
	js	.LBB98_315
# %bb.313:
	decq	%rax
	movq	%rax, (%r14)
	jne	.LBB98_315
# %bb.314:
.Ltmp1416:
	movq	%r14, %rdi
	callq	_Py_Dealloc@PLT
.Ltmp1417:
.LBB98_315:                             # %_ZL9Py_DECREFP7_object.exit
	movq	(%rsp), %rdi
	cmpq	56(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB98_317
# %bb.316:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i532
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB98_317:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit534
	movq	136(%rsp), %rdi
	leaq	152(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_319
# %bb.318:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i535
	movq	152(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB98_319:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit537
	movq	32(%rsp), %rbx
	movq	40(%rsp), %r14
	cmpq	%r14, %rbx
	je	.LBB98_322
# %bb.320:
	movq	%rbx, %r15
	.p2align	4, 0x90
.LBB98_321:                             # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r15), %rdi
	callq	free@PLT
	addq	$8, %r15
	cmpq	%r14, %r15
	jne	.LBB98_321
.LBB98_322:                             # %._crit_edge.i
	testq	%rbx, %rbx
	je	.LBB98_324
# %bb.323:
	movq	48(%rsp), %rsi
	subq	%rbx, %rsi
	movq	%rbx, %rdi
	callq	_ZdlPvm@PLT
.LBB98_324:                             # %_ZN8pybind1112cpp_function12strdup_guardD2Ev.exit
	addq	$488, %rsp                      # imm = 0x1E8
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB98_325:
	.cfi_def_cfa_offset 544
	movq	%rbx, 128(%r15)
	movq	192(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rbx
	movq	8(%rbx), %rdi
	cmpq	PyCFunction_Type@GOTPCREL(%rip), %rdi
	je	.LBB98_328
# %bb.326:                              # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.i418
.Ltmp1344:
	movq	PyCFunction_Type@GOTPCREL(%rip), %rsi
	callq	PyType_IsSubtype@PLT
.Ltmp1345:
# %bb.327:                              # %.noexc423
	testl	%eax, %eax
	je	.LBB98_401
.LBB98_328:                             # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.thread.i420
	movq	24(%rbx), %rax
	movq	272(%rsp), %rdx                 # 8-byte Reload
	movq	(%rdx), %rcx
	movq	$0, (%rdx)
	movq	%rcx, 16(%rax)
	movq	32(%rsp), %rax
	movq	%r15, %rbx
.LBB98_329:
	cmpq	%rax, %rbp
	je	.LBB98_331
# %bb.330:                              # %.sink.split
	movq	%rax, 40(%rsp)
.LBB98_331:
	leaq	16(%rsp), %rax
	movq	%rax, 56(%rsp)                  # 8-byte Spill
	movq	%rax, (%rsp)
	movq	$0, 8(%rsp)
	movb	$0, 16(%rsp)
	cmpb	$1, _ZZN8pybind117options12global_stateEvE8instance+1(%rip)
	jne	.LBB98_338
# %bb.332:
	movq	(%r15), %r12
	leaq	.L.str.96(%rip), %rsi
	movq	%r12, %rdi
	callq	strcmp@PLT
	testl	%eax, %eax
	je	.LBB98_338
# %bb.333:
	movq	%r12, %rdi
	callq	strlen@PLT
	testq	%rax, %rax
	js	.LBB98_419
# %bb.334:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i430
	movq	%rax, %r14
	cmpq	$15, %rax
	jbe	.LBB98_339
# %bb.335:
.Ltmp1347:
	movq	%rsp, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	movq	%r12, %rcx
	movq	%r14, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1348:
# %bb.336:                              # %._crit_edge627
	movq	(%rsp), %rax
	jmp	.LBB98_343
.LBB98_338:
	movl	$0, 200(%rsp)                   # 4-byte Folded Spill
	jmp	.LBB98_192
.LBB98_339:
	leaq	16(%rsp), %rax
	testq	%r14, %r14
	je	.LBB98_343
# %bb.340:
	cmpq	$1, %r14
	jne	.LBB98_342
# %bb.341:
	movzbl	(%r12), %eax
	movb	%al, 16(%rsp)
	leaq	16(%rsp), %rax
	jmp	.LBB98_343
.LBB98_342:
	leaq	16(%rsp), %r13
	movq	%r13, %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
	movq	%r13, %rax
.LBB98_343:
	movq	%r14, 8(%rsp)
	movb	$0, (%rax,%r14)
	movq	8(%rsp), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-18, %rax
	cmpq	%rax, %rsi
	jg	.LBB98_419
# %bb.344:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i437
	leaq	18(%rsi), %r14
	movq	(%rsp), %rax
	movl	$15, %ecx
	leaq	16(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB98_346
# %bb.345:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i437
	movq	16(%rsp), %rcx
.LBB98_346:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i437
	cmpq	%rcx, %r14
	jbe	.LBB98_348
# %bb.347:
.Ltmp1349:
	leaq	.L.str.97(%rip), %rcx
	movq	%rsp, %rdi
	movl	$18, %r8d
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1350:
	jmp	.LBB98_349
.LBB98_348:
	movups	.L.str.97(%rip), %xmm0
	movups	%xmm0, (%rax,%rsi)
	movw	$2601, 16(%rax,%rsi)            # imm = 0xA29
.LBB98_349:
	movq	%r14, 8(%rsp)
	movq	(%rsp), %rax
	movb	$0, (%rax,%r14)
	movq	8(%rsp), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-22, %rax
	cmpq	%rax, %rsi
	jg	.LBB98_419
# %bb.350:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i446
	leaq	22(%rsi), %r14
	movq	(%rsp), %rax
	movl	$15, %ecx
	leaq	16(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB98_352
# %bb.351:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i446
	movq	16(%rsp), %rcx
.LBB98_352:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i446
	cmpq	%rcx, %r14
	jbe	.LBB98_354
# %bb.353:
.Ltmp1351:
	leaq	.L.str.98(%rip), %rcx
	movq	%rsp, %rdi
	movl	$22, %r8d
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1352:
	jmp	.LBB98_355
.LBB98_354:
	movups	.L.str.98(%rip), %xmm0
	movups	%xmm0, (%rax,%rsi)
	movabsq	$723441741996848227, %rcx       # imm = 0xA0A2E6E6F697463
	movq	%rcx, 14(%rax,%rsi)
.LBB98_355:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit454
	movq	%r14, 8(%rsp)
	addq	(%rsp), %r14
	movl	$0, 200(%rsp)                   # 4-byte Folded Spill
	jmp	.LBB98_191
.LBB98_356:                             # %.noexc11.i.i
.Ltmp1455:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp1456:
# %bb.357:                              # %.noexc283
.LBB98_358:                             # %.noexc11.i
.Ltmp1448:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp1449:
# %bb.359:                              # %.noexc288
.LBB98_360:                             # %.invoke651
.Ltmp1411:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1412:
# %bb.361:                              # %.cont652
.LBB98_362:                             # %.invoke
.Ltmp1233:
	leaq	.L.str.79(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1234:
# %bb.363:                              # %.cont
.LBB98_364:
.Ltmp1390:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1391:
# %bb.365:                              # %.noexc475
.LBB98_366:
.Ltmp1393:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1394:
# %bb.367:                              # %.noexc466
.LBB98_368:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp1257:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1258:
# %bb.369:
.Ltmp1260:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp1261:
# %bb.370:                              # %.noexc262
.LBB98_371:
.Ltmp1282:
	leaq	.L.str.86(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1283:
# %bb.372:
.LBB98_373:
.Ltmp1251:
	leaq	.L.str.79(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1252:
# %bb.374:                              # %.noexc274
.LBB98_375:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp1430:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1431:
# %bb.376:
.Ltmp1433:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp1434:
# %bb.377:                              # %.noexc380
.LBB98_378:
.Ltmp1421:
	leaq	.L.str.89(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1422:
# %bb.379:
.LBB98_380:                             # %.noexc.i
.Ltmp1459:
	leaq	.L.str.34(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.Ltmp1460:
# %bb.381:                              # %.noexc281
.LBB98_382:
.Ltmp1452:
	leaq	.L.str.34(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.Ltmp1453:
# %bb.383:                              # %.noexc286
.LBB98_384:
.Ltmp1418:
	leaq	.L.str.100(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1419:
# %bb.385:
.LBB98_386:
.Ltmp1445:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1446:
# %bb.387:                              # %.noexc293
.LBB98_388:
.Ltmp1442:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1443:
# %bb.389:                              # %.noexc298
.LBB98_390:
.Ltmp1439:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1440:
# %bb.391:                              # %.noexc308
.LBB98_392:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp1360:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1361:
# %bb.393:
.Ltmp1363:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp1364:
# %bb.394:                              # %.noexc376
.LBB98_395:
.Ltmp1436:
	leaq	.L.str.79(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1437:
# %bb.396:                              # %.noexc355
.LBB98_397:                             # %.noexc.i.i
.Ltmp1457:
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1458:
# %bb.398:                              # %.noexc282
.LBB98_399:                             # %.noexc.i285
.Ltmp1450:
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1451:
# %bb.400:                              # %.noexc287
.LBB98_401:
	leaq	.L.str.119(%rip), %rdi
	leaq	.L.str.120(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL20PyCFunction_GET_SELFP7_object(%rip), %rcx
	movl	$46, %edx
	callq	__assert_fail@PLT
.LBB98_402:
.Ltmp1291:
	leaq	64(%rsp), %rdi
	leaq	208(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_@PLT
.Ltmp1292:
# %bb.403:
.Ltmp1294:
	leaq	.L.str.87(%rip), %rsi
	leaq	104(%rsp), %rdi
	leaq	64(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp1295:
# %bb.404:
.Ltmp1297:
	leaq	.L.str.88(%rip), %rdx
	movq	%rsp, %rdi
	leaq	104(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp1298:
# %bb.405:
.Ltmp1300:
	movq	%rsp, %rdi
	callq	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1301:
# %bb.406:
.LBB98_407:
	testb	$16, %al
	leaq	.L.str.92(%rip), %rax
	leaq	.L.str.91(%rip), %rsi
	cmoveq	%rax, %rsi
.Ltmp1305:
	leaq	456(%rsp), %rdi
	leaq	191(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_@PLT
.Ltmp1306:
# %bb.408:
.Ltmp1308:
	leaq	.L.str.90(%rip), %rsi
	leaq	328(%rsp), %rdi
	leaq	456(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp1309:
# %bb.409:
.Ltmp1311:
	leaq	.L.str.93(%rip), %rdx
	leaq	240(%rsp), %rdi
	leaq	328(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp1312:
# %bb.410:
	movq	96(%rsp), %rax                  # 8-byte Reload
	movq	112(%rax), %rax
	movq	%rax, 400(%rsp)
	leaq	.L.str.94(%rip), %rax
	movq	%rax, 408(%rsp)
	movq	$0, 416(%rsp)
.Ltmp1314:
	leaq	288(%rsp), %rdi
	leaq	392(%rsp), %rsi
	callq	_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE
.Ltmp1315:
# %bb.411:
.Ltmp1317:
	leaq	424(%rsp), %rdi
	leaq	288(%rsp), %rsi
	callq	_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv
.Ltmp1318:
# %bb.412:
.Ltmp1320:
	leaq	208(%rsp), %rdi
	leaq	240(%rsp), %rsi
	leaq	424(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp1321:
# %bb.413:
.Ltmp1323:
	leaq	.L.str.95(%rip), %rdx
	leaq	64(%rsp), %rdi
	leaq	208(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp1324:
# %bb.414:
	movq	96(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rsi
.Ltmp1326:
	leaq	360(%rsp), %rdi
	leaq	190(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_@PLT
.Ltmp1327:
# %bb.415:
.Ltmp1329:
	leaq	104(%rsp), %rdi
	leaq	64(%rsp), %rsi
	leaq	360(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp1330:
# %bb.416:
.Ltmp1332:
	movq	%rsp, %rdi
	leaq	104(%rsp), %rsi
	leaq	136(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_@PLT
.Ltmp1333:
# %bb.417:
.Ltmp1335:
	movq	%rsp, %rdi
	callq	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1336:
# %bb.418:
.LBB98_419:                             # %.invoke646
.Ltmp1353:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1354:
# %bb.420:                              # %.cont647
.LBB98_421:
.Ltmp1337:
	movq	%rax, %rbx
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_427
# %bb.422:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit390
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_429
.LBB98_423:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit393
	movq	360(%rsp), %rdi
	leaq	376(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_431
.LBB98_424:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit396
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_433
.LBB98_425:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit399
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_435
.LBB98_426:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit402
	movq	424(%rsp), %rdi
	leaq	440(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_437
	jmp	.LBB98_439
.LBB98_427:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i388
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_423
	jmp	.LBB98_429
.LBB98_428:
.Ltmp1334:
	movq	%rax, %rbx
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_423
.LBB98_429:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i391
	movq	120(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	360(%rsp), %rdi
	leaq	376(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_424
	jmp	.LBB98_431
.LBB98_430:
.Ltmp1331:
	movq	%rax, %rbx
	movq	360(%rsp), %rdi
	leaq	376(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_424
.LBB98_431:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i394
	movq	376(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_425
	jmp	.LBB98_433
.LBB98_432:
.Ltmp1328:
	movq	%rax, %rbx
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_425
.LBB98_433:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i397
	movq	80(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_426
	jmp	.LBB98_435
.LBB98_434:
.Ltmp1325:
	movq	%rax, %rbx
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_426
.LBB98_435:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i400
	movq	224(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	424(%rsp), %rdi
	leaq	440(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_437
	jmp	.LBB98_439
.LBB98_436:
.Ltmp1322:
	movq	%rax, %rbx
	movq	424(%rsp), %rdi
	leaq	440(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_439
.LBB98_437:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i403
	movq	440(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB98_439
.LBB98_438:
.Ltmp1319:
	movq	%rax, %rbx
.LBB98_439:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit405
.Ltmp1338:
	leaq	288(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1339:
	jmp	.LBB98_442
.LBB98_440:
.Ltmp1340:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB98_441:
.Ltmp1316:
	movq	%rax, %rbx
.LBB98_442:                             # %_ZN8pybind116objectD2Ev.exit406
.Ltmp1341:
	leaq	416(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1342:
# %bb.443:                              # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit
	movq	240(%rsp), %rdi
	leaq	256(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_446
# %bb.444:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit409
	movq	328(%rsp), %rdi
	leaq	344(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_449
.LBB98_445:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit412
	movq	456(%rsp), %rdi
	leaq	472(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_451
	jmp	.LBB98_529
.LBB98_446:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i407
	movq	256(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	328(%rsp), %rdi
	leaq	344(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_445
	jmp	.LBB98_449
.LBB98_447:
.Ltmp1343:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB98_448:
.Ltmp1313:
	movq	%rax, %rbx
	movq	328(%rsp), %rdi
	leaq	344(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_445
.LBB98_449:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i410
	movq	344(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	456(%rsp), %rdi
	leaq	472(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_451
	jmp	.LBB98_529
.LBB98_450:
.Ltmp1310:
	movq	%rax, %rbx
	movq	456(%rsp), %rdi
	leaq	472(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_529
.LBB98_451:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i413
	movq	472(%rsp), %rsi
	jmp	.LBB98_528
.LBB98_452:
.Ltmp1346:
	movq	%rax, %rbx
	jmp	.LBB98_529
.LBB98_453:
.Ltmp1302:
	movq	%rax, %rbx
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_456
# %bb.454:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit368
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_458
.LBB98_455:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit371
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_461
	jmp	.LBB98_529
.LBB98_456:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i366
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_455
	jmp	.LBB98_458
.LBB98_457:
.Ltmp1299:
	movq	%rax, %rbx
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_455
.LBB98_458:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i369
	movq	120(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_461
	jmp	.LBB98_529
.LBB98_459:
.Ltmp1307:
	movq	%rax, %rbx
	jmp	.LBB98_529
.LBB98_460:
.Ltmp1296:
	movq	%rax, %rbx
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_529
.LBB98_461:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i372
	movq	80(%rsp), %rsi
	jmp	.LBB98_528
.LBB98_462:
.Ltmp1293:
	movq	%rax, %rbx
	jmp	.LBB98_529
.LBB98_463:
.Ltmp1355:
	jmp	.LBB98_526
.LBB98_464:
.Ltmp1290:
	movq	%rax, %rbx
	jmp	.LBB98_529
.LBB98_465:
.Ltmp1362:
	jmp	.LBB98_467
.LBB98_466:
.Ltmp1432:
.LBB98_467:                             # %.body377
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB98_529
.LBB98_468:
.Ltmp1278:
	movq	%rax, %rbx
	movq	104(%rsp), %rdi
	cmpq	%rbp, %rdi
	jne	.LBB98_475
# %bb.469:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit331
	movq	64(%rsp), %rdi
	cmpq	%r13, %rdi
	jne	.LBB98_478
.LBB98_470:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit334
	movq	208(%rsp), %rdi
	cmpq	%r14, %rdi
	jne	.LBB98_480
.LBB98_471:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit337
	movq	240(%rsp), %rdi
	leaq	256(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_482
.LBB98_472:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit340
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_474
.LBB98_473:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i341
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB98_474:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit343
	leaq	152(%rsp), %rbp
	jmp	.LBB98_531
.LBB98_475:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i329
	movq	120(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	64(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB98_470
	jmp	.LBB98_478
.LBB98_476:
.Ltmp1269:
	movq	%rax, %rbx
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_473
	jmp	.LBB98_474
.LBB98_477:
.Ltmp1441:
	movq	%rax, %rbx
	movq	64(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB98_470
.LBB98_478:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i332
	movq	80(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	208(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB98_471
	jmp	.LBB98_480
.LBB98_479:
.Ltmp1444:
	movq	%rax, %rbx
	movq	208(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB98_471
.LBB98_480:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i335
	movq	224(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	240(%rsp), %rdi
	leaq	256(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_472
.LBB98_482:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i338
	movq	256(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_473
	jmp	.LBB98_474
.LBB98_481:
.Ltmp1447:
	movq	%rax, %rbx
	movq	240(%rsp), %rdi
	leaq	256(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_472
	jmp	.LBB98_482
.LBB98_483:
.Ltmp1378:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB98_484:
.Ltmp1375:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB98_485:
.Ltmp1370:
	movq	%rax, %rbx
	jmp	.LBB98_495
.LBB98_486:
.Ltmp1281:
	jmp	.LBB98_522
.LBB98_487:
.Ltmp1420:
	jmp	.LBB98_526
.LBB98_488:                             # %.loopexit590
.Ltmp1247:
	movq	%rax, %rbx
	jmp	.LBB98_492
.LBB98_489:
.Ltmp1435:
	movq	%rax, %rbx
	jmp	.LBB98_529
.LBB98_490:
.Ltmp1227:
	jmp	.LBB98_522
.LBB98_491:                             # %.loopexit.split-lp591
.Ltmp1253:
	movq	%rax, %rbx
	movq	(%rsp), %rbp
.LBB98_492:
	leaq	16(%rsp), %rax
	cmpq	%rax, %rbp
	je	.LBB98_505
# %bb.493:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i277
	movq	16(%rsp), %rsi
	incq	%rsi
	movq	%rbp, %rdi
	jmp	.LBB98_503
.LBB98_494:
.Ltmp1423:
	movq	%rax, %rbx
.Ltmp1424:
	leaq	104(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1425:
.LBB98_495:                             # %_ZN8pybind116objectD2Ev.exit384
.Ltmp1427:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1428:
	jmp	.LBB98_529
.LBB98_496:
.Ltmp1426:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB98_497:
.Ltmp1429:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB98_498:
.Ltmp1365:
	movq	%rax, %rbx
	jmp	.LBB98_529
.LBB98_499:                             # %.loopexit.split-lp586
.Ltmp1262:
	jmp	.LBB98_522
.LBB98_500:
.Ltmp1259:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind1112cpp_function12strdup_guardD2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB98_501:
.Ltmp1244:
	movq	%rax, %rbx
	movq	136(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB98_505
# %bb.502:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i.i
	movq	152(%rsp), %rsi
	incq	%rsi
.LBB98_503:                             # %.body263
	callq	_ZdlPvm@PLT
	jmp	.LBB98_505
.LBB98_504:
.Ltmp1241:
	movq	%rax, %rbx
.LBB98_505:                             # %.body263
.Ltmp1254:
	leaq	104(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1255:
	jmp	.LBB98_534
.LBB98_506:                             # %.loopexit575
.Ltmp1389:
	jmp	.LBB98_516
.LBB98_507:                             # %.loopexit570
.Ltmp1386:
	jmp	.LBB98_508
.LBB98_509:
.Ltmp1383:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB98_510:
.Ltmp1438:
	movq	%rax, %rbx
	jmp	.LBB98_529
.LBB98_511:
.Ltmp1256:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB98_512:
.Ltmp1250:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB98_513:                             # %.loopexit585
.Ltmp1238:
	jmp	.LBB98_522
.LBB98_514:                             # %.loopexit.split-lp571
.Ltmp1395:
.LBB98_508:                             # %.loopexit570
	movq	%rax, %rbx
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_518
.LBB98_520:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i486
	movq	80(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	(%rsp), %rdi
	cmpq	56(%rsp), %rdi                  # 8-byte Folded Reload
	jne	.LBB98_527
	jmp	.LBB98_529
.LBB98_515:                             # %.loopexit.split-lp576
.Ltmp1392:
.LBB98_516:
	movq	%rax, %rbx
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_519
# %bb.517:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit485
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_520
.LBB98_518:
	movq	(%rsp), %rdi
	cmpq	56(%rsp), %rdi                  # 8-byte Folded Reload
	jne	.LBB98_527
	jmp	.LBB98_529
.LBB98_519:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i483
	movq	120(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB98_518
	jmp	.LBB98_520
.LBB98_521:                             # %.loopexit580
.Ltmp1232:
	jmp	.LBB98_522
.LBB98_523:                             # %.loopexit.split-lp581
.Ltmp1235:
.LBB98_522:                             # %.loopexit580
	movq	%rax, %rbx
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind1112cpp_function12strdup_guardD2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB98_524:                             # %.loopexit
.Ltmp1410:
	jmp	.LBB98_526
.LBB98_525:                             # %.loopexit.split-lp
.Ltmp1413:
.LBB98_526:
	movq	%rax, %rbx
	movq	(%rsp), %rdi
	cmpq	56(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB98_529
.LBB98_527:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i540
	movq	16(%rsp), %rsi
.LBB98_528:                             # %.body377
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB98_529:                             # %.body377
	movq	136(%rsp), %rdi
	leaq	152(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB98_532
	jmp	.LBB98_534
.LBB98_530:
.Ltmp1454:
	movq	%rax, %rbx
.LBB98_531:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit343
	movq	136(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB98_534
.LBB98_532:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i543
	movq	152(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind1112cpp_function12strdup_guardD2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB98_533:
.Ltmp1461:
	movq	%rax, %rbx
.LBB98_534:
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind1112cpp_function12strdup_guardD2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end98:
	.size	_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom, .Lfunc_end98-_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom,"aG",@progbits,_ZN8pybind1112cpp_function18initialize_genericEOSt10unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEPKcPKPKSt9type_infom,comdat
	.p2align	2, 0x0
GCC_except_table98:
.Lexception50:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase35-.Lttbaseref35
.Lttbaseref35:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end50-.Lcst_begin50
.Lcst_begin50:
	.uleb128 .Ltmp1223-.Lfunc_begin50       # >> Call Site 1 <<
	.uleb128 .Ltmp1226-.Ltmp1223            #   Call between .Ltmp1223 and .Ltmp1226
	.uleb128 .Ltmp1227-.Lfunc_begin50       #     jumps to .Ltmp1227
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1230-.Lfunc_begin50       # >> Call Site 2 <<
	.uleb128 .Ltmp1231-.Ltmp1230            #   Call between .Ltmp1230 and .Ltmp1231
	.uleb128 .Ltmp1232-.Lfunc_begin50       #     jumps to .Ltmp1232
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1231-.Lfunc_begin50       # >> Call Site 3 <<
	.uleb128 .Ltmp1228-.Ltmp1231            #   Call between .Ltmp1231 and .Ltmp1228
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1228-.Lfunc_begin50       # >> Call Site 4 <<
	.uleb128 .Ltmp1229-.Ltmp1228            #   Call between .Ltmp1228 and .Ltmp1229
	.uleb128 .Ltmp1232-.Lfunc_begin50       #     jumps to .Ltmp1232
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1229-.Lfunc_begin50       # >> Call Site 5 <<
	.uleb128 .Ltmp1236-.Ltmp1229            #   Call between .Ltmp1229 and .Ltmp1236
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1236-.Lfunc_begin50       # >> Call Site 6 <<
	.uleb128 .Ltmp1237-.Ltmp1236            #   Call between .Ltmp1236 and .Ltmp1237
	.uleb128 .Ltmp1238-.Lfunc_begin50       #     jumps to .Ltmp1238
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1242-.Lfunc_begin50       # >> Call Site 7 <<
	.uleb128 .Ltmp1243-.Ltmp1242            #   Call between .Ltmp1242 and .Ltmp1243
	.uleb128 .Ltmp1244-.Lfunc_begin50       #     jumps to .Ltmp1244
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1245-.Lfunc_begin50       # >> Call Site 8 <<
	.uleb128 .Ltmp1246-.Ltmp1245            #   Call between .Ltmp1245 and .Ltmp1246
	.uleb128 .Ltmp1247-.Lfunc_begin50       #     jumps to .Ltmp1247
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1239-.Lfunc_begin50       # >> Call Site 9 <<
	.uleb128 .Ltmp1240-.Ltmp1239            #   Call between .Ltmp1239 and .Ltmp1240
	.uleb128 .Ltmp1241-.Lfunc_begin50       #     jumps to .Ltmp1241
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1248-.Lfunc_begin50       # >> Call Site 10 <<
	.uleb128 .Ltmp1249-.Ltmp1248            #   Call between .Ltmp1248 and .Ltmp1249
	.uleb128 .Ltmp1250-.Lfunc_begin50       #     jumps to .Ltmp1250
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1249-.Lfunc_begin50       # >> Call Site 11 <<
	.uleb128 .Ltmp1263-.Ltmp1249            #   Call between .Ltmp1249 and .Ltmp1263
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1263-.Lfunc_begin50       # >> Call Site 12 <<
	.uleb128 .Ltmp1264-.Ltmp1263            #   Call between .Ltmp1263 and .Ltmp1264
	.uleb128 .Ltmp1461-.Lfunc_begin50       #     jumps to .Ltmp1461
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1264-.Lfunc_begin50       # >> Call Site 13 <<
	.uleb128 .Ltmp1265-.Ltmp1264            #   Call between .Ltmp1264 and .Ltmp1265
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1265-.Lfunc_begin50       # >> Call Site 14 <<
	.uleb128 .Ltmp1266-.Ltmp1265            #   Call between .Ltmp1265 and .Ltmp1266
	.uleb128 .Ltmp1454-.Lfunc_begin50       #     jumps to .Ltmp1454
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1266-.Lfunc_begin50       # >> Call Site 15 <<
	.uleb128 .Ltmp1267-.Ltmp1266            #   Call between .Ltmp1266 and .Ltmp1267
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1267-.Lfunc_begin50       # >> Call Site 16 <<
	.uleb128 .Ltmp1268-.Ltmp1267            #   Call between .Ltmp1267 and .Ltmp1268
	.uleb128 .Ltmp1269-.Lfunc_begin50       #     jumps to .Ltmp1269
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1270-.Lfunc_begin50       # >> Call Site 17 <<
	.uleb128 .Ltmp1271-.Ltmp1270            #   Call between .Ltmp1270 and .Ltmp1271
	.uleb128 .Ltmp1447-.Lfunc_begin50       #     jumps to .Ltmp1447
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1271-.Lfunc_begin50       # >> Call Site 18 <<
	.uleb128 .Ltmp1272-.Ltmp1271            #   Call between .Ltmp1271 and .Ltmp1272
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1272-.Lfunc_begin50       # >> Call Site 19 <<
	.uleb128 .Ltmp1273-.Ltmp1272            #   Call between .Ltmp1272 and .Ltmp1273
	.uleb128 .Ltmp1444-.Lfunc_begin50       #     jumps to .Ltmp1444
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1273-.Lfunc_begin50       # >> Call Site 20 <<
	.uleb128 .Ltmp1274-.Ltmp1273            #   Call between .Ltmp1273 and .Ltmp1274
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1274-.Lfunc_begin50       # >> Call Site 21 <<
	.uleb128 .Ltmp1275-.Ltmp1274            #   Call between .Ltmp1274 and .Ltmp1275
	.uleb128 .Ltmp1441-.Lfunc_begin50       #     jumps to .Ltmp1441
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1275-.Lfunc_begin50       # >> Call Site 22 <<
	.uleb128 .Ltmp1276-.Ltmp1275            #   Call between .Ltmp1275 and .Ltmp1276
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1276-.Lfunc_begin50       # >> Call Site 23 <<
	.uleb128 .Ltmp1277-.Ltmp1276            #   Call between .Ltmp1276 and .Ltmp1277
	.uleb128 .Ltmp1278-.Lfunc_begin50       #     jumps to .Ltmp1278
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1279-.Lfunc_begin50       # >> Call Site 24 <<
	.uleb128 .Ltmp1280-.Ltmp1279            #   Call between .Ltmp1279 and .Ltmp1280
	.uleb128 .Ltmp1281-.Lfunc_begin50       #     jumps to .Ltmp1281
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1284-.Lfunc_begin50       # >> Call Site 25 <<
	.uleb128 .Ltmp1285-.Ltmp1284            #   Call between .Ltmp1284 and .Ltmp1285
	.uleb128 .Ltmp1438-.Lfunc_begin50       #     jumps to .Ltmp1438
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1285-.Lfunc_begin50       # >> Call Site 26 <<
	.uleb128 .Ltmp1286-.Ltmp1285            #   Call between .Ltmp1285 and .Ltmp1286
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1286-.Lfunc_begin50       # >> Call Site 27 <<
	.uleb128 .Ltmp1287-.Ltmp1286            #   Call between .Ltmp1286 and .Ltmp1287
	.uleb128 .Ltmp1365-.Lfunc_begin50       #     jumps to .Ltmp1365
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1288-.Lfunc_begin50       # >> Call Site 28 <<
	.uleb128 .Ltmp1289-.Ltmp1288            #   Call between .Ltmp1288 and .Ltmp1289
	.uleb128 .Ltmp1290-.Lfunc_begin50       #     jumps to .Ltmp1290
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1303-.Lfunc_begin50       # >> Call Site 29 <<
	.uleb128 .Ltmp1359-.Ltmp1303            #   Call between .Ltmp1303 and .Ltmp1359
	.uleb128 .Ltmp1365-.Lfunc_begin50       #     jumps to .Ltmp1365
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1366-.Lfunc_begin50       # >> Call Site 30 <<
	.uleb128 .Ltmp1367-.Ltmp1366            #   Call between .Ltmp1366 and .Ltmp1367
	.uleb128 .Ltmp1435-.Lfunc_begin50       #     jumps to .Ltmp1435
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1368-.Lfunc_begin50       # >> Call Site 31 <<
	.uleb128 .Ltmp1369-.Ltmp1368            #   Call between .Ltmp1368 and .Ltmp1369
	.uleb128 .Ltmp1370-.Lfunc_begin50       #     jumps to .Ltmp1370
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1371-.Lfunc_begin50       # >> Call Site 32 <<
	.uleb128 .Ltmp1372-.Ltmp1371            #   Call between .Ltmp1371 and .Ltmp1372
	.uleb128 .Ltmp1423-.Lfunc_begin50       #     jumps to .Ltmp1423
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1373-.Lfunc_begin50       # >> Call Site 33 <<
	.uleb128 .Ltmp1374-.Ltmp1373            #   Call between .Ltmp1373 and .Ltmp1374
	.uleb128 .Ltmp1375-.Lfunc_begin50       #     jumps to .Ltmp1375
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1376-.Lfunc_begin50       # >> Call Site 34 <<
	.uleb128 .Ltmp1377-.Ltmp1376            #   Call between .Ltmp1376 and .Ltmp1377
	.uleb128 .Ltmp1378-.Lfunc_begin50       #     jumps to .Ltmp1378
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1379-.Lfunc_begin50       # >> Call Site 35 <<
	.uleb128 .Ltmp1380-.Ltmp1379            #   Call between .Ltmp1379 and .Ltmp1380
	.uleb128 .Ltmp1410-.Lfunc_begin50       #     jumps to .Ltmp1410
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1381-.Lfunc_begin50       # >> Call Site 36 <<
	.uleb128 .Ltmp1382-.Ltmp1381            #   Call between .Ltmp1381 and .Ltmp1382
	.uleb128 .Ltmp1383-.Lfunc_begin50       #     jumps to .Ltmp1383
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1382-.Lfunc_begin50       # >> Call Site 37 <<
	.uleb128 .Ltmp1384-.Ltmp1382            #   Call between .Ltmp1382 and .Ltmp1384
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1384-.Lfunc_begin50       # >> Call Site 38 <<
	.uleb128 .Ltmp1385-.Ltmp1384            #   Call between .Ltmp1384 and .Ltmp1385
	.uleb128 .Ltmp1386-.Lfunc_begin50       #     jumps to .Ltmp1386
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1385-.Lfunc_begin50       # >> Call Site 39 <<
	.uleb128 .Ltmp1387-.Ltmp1385            #   Call between .Ltmp1385 and .Ltmp1387
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1387-.Lfunc_begin50       # >> Call Site 40 <<
	.uleb128 .Ltmp1388-.Ltmp1387            #   Call between .Ltmp1387 and .Ltmp1388
	.uleb128 .Ltmp1389-.Lfunc_begin50       #     jumps to .Ltmp1389
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1388-.Lfunc_begin50       # >> Call Site 41 <<
	.uleb128 .Ltmp1396-.Ltmp1388            #   Call between .Ltmp1388 and .Ltmp1396
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1396-.Lfunc_begin50       # >> Call Site 42 <<
	.uleb128 .Ltmp1397-.Ltmp1396            #   Call between .Ltmp1396 and .Ltmp1397
	.uleb128 .Ltmp1410-.Lfunc_begin50       #     jumps to .Ltmp1410
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1397-.Lfunc_begin50       # >> Call Site 43 <<
	.uleb128 .Ltmp1398-.Ltmp1397            #   Call between .Ltmp1397 and .Ltmp1398
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1398-.Lfunc_begin50       # >> Call Site 44 <<
	.uleb128 .Ltmp1399-.Ltmp1398            #   Call between .Ltmp1398 and .Ltmp1399
	.uleb128 .Ltmp1410-.Lfunc_begin50       #     jumps to .Ltmp1410
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1399-.Lfunc_begin50       # >> Call Site 45 <<
	.uleb128 .Ltmp1400-.Ltmp1399            #   Call between .Ltmp1399 and .Ltmp1400
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1400-.Lfunc_begin50       # >> Call Site 46 <<
	.uleb128 .Ltmp1407-.Ltmp1400            #   Call between .Ltmp1400 and .Ltmp1407
	.uleb128 .Ltmp1410-.Lfunc_begin50       #     jumps to .Ltmp1410
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1407-.Lfunc_begin50       # >> Call Site 47 <<
	.uleb128 .Ltmp1408-.Ltmp1407            #   Call between .Ltmp1407 and .Ltmp1408
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1408-.Lfunc_begin50       # >> Call Site 48 <<
	.uleb128 .Ltmp1409-.Ltmp1408            #   Call between .Ltmp1408 and .Ltmp1409
	.uleb128 .Ltmp1410-.Lfunc_begin50       #     jumps to .Ltmp1410
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1414-.Lfunc_begin50       # >> Call Site 49 <<
	.uleb128 .Ltmp1417-.Ltmp1414            #   Call between .Ltmp1414 and .Ltmp1417
	.uleb128 .Ltmp1420-.Lfunc_begin50       #     jumps to .Ltmp1420
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1344-.Lfunc_begin50       # >> Call Site 50 <<
	.uleb128 .Ltmp1345-.Ltmp1344            #   Call between .Ltmp1344 and .Ltmp1345
	.uleb128 .Ltmp1346-.Lfunc_begin50       #     jumps to .Ltmp1346
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1347-.Lfunc_begin50       # >> Call Site 51 <<
	.uleb128 .Ltmp1348-.Ltmp1347            #   Call between .Ltmp1347 and .Ltmp1348
	.uleb128 .Ltmp1355-.Lfunc_begin50       #     jumps to .Ltmp1355
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1348-.Lfunc_begin50       # >> Call Site 52 <<
	.uleb128 .Ltmp1349-.Ltmp1348            #   Call between .Ltmp1348 and .Ltmp1349
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1349-.Lfunc_begin50       # >> Call Site 53 <<
	.uleb128 .Ltmp1352-.Ltmp1349            #   Call between .Ltmp1349 and .Ltmp1352
	.uleb128 .Ltmp1355-.Lfunc_begin50       #     jumps to .Ltmp1355
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1455-.Lfunc_begin50       # >> Call Site 54 <<
	.uleb128 .Ltmp1456-.Ltmp1455            #   Call between .Ltmp1455 and .Ltmp1456
	.uleb128 .Ltmp1461-.Lfunc_begin50       #     jumps to .Ltmp1461
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1448-.Lfunc_begin50       # >> Call Site 55 <<
	.uleb128 .Ltmp1449-.Ltmp1448            #   Call between .Ltmp1448 and .Ltmp1449
	.uleb128 .Ltmp1454-.Lfunc_begin50       #     jumps to .Ltmp1454
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1411-.Lfunc_begin50       # >> Call Site 56 <<
	.uleb128 .Ltmp1412-.Ltmp1411            #   Call between .Ltmp1411 and .Ltmp1412
	.uleb128 .Ltmp1413-.Lfunc_begin50       #     jumps to .Ltmp1413
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1233-.Lfunc_begin50       # >> Call Site 57 <<
	.uleb128 .Ltmp1234-.Ltmp1233            #   Call between .Ltmp1233 and .Ltmp1234
	.uleb128 .Ltmp1235-.Lfunc_begin50       #     jumps to .Ltmp1235
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1390-.Lfunc_begin50       # >> Call Site 58 <<
	.uleb128 .Ltmp1391-.Ltmp1390            #   Call between .Ltmp1390 and .Ltmp1391
	.uleb128 .Ltmp1392-.Lfunc_begin50       #     jumps to .Ltmp1392
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1393-.Lfunc_begin50       # >> Call Site 59 <<
	.uleb128 .Ltmp1394-.Ltmp1393            #   Call between .Ltmp1393 and .Ltmp1394
	.uleb128 .Ltmp1395-.Lfunc_begin50       #     jumps to .Ltmp1395
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1394-.Lfunc_begin50       # >> Call Site 60 <<
	.uleb128 .Ltmp1257-.Ltmp1394            #   Call between .Ltmp1394 and .Ltmp1257
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1257-.Lfunc_begin50       # >> Call Site 61 <<
	.uleb128 .Ltmp1258-.Ltmp1257            #   Call between .Ltmp1257 and .Ltmp1258
	.uleb128 .Ltmp1259-.Lfunc_begin50       #     jumps to .Ltmp1259
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1260-.Lfunc_begin50       # >> Call Site 62 <<
	.uleb128 .Ltmp1261-.Ltmp1260            #   Call between .Ltmp1260 and .Ltmp1261
	.uleb128 .Ltmp1262-.Lfunc_begin50       #     jumps to .Ltmp1262
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1282-.Lfunc_begin50       # >> Call Site 63 <<
	.uleb128 .Ltmp1283-.Ltmp1282            #   Call between .Ltmp1282 and .Ltmp1283
	.uleb128 .Ltmp1438-.Lfunc_begin50       #     jumps to .Ltmp1438
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1251-.Lfunc_begin50       # >> Call Site 64 <<
	.uleb128 .Ltmp1252-.Ltmp1251            #   Call between .Ltmp1251 and .Ltmp1252
	.uleb128 .Ltmp1253-.Lfunc_begin50       #     jumps to .Ltmp1253
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1252-.Lfunc_begin50       # >> Call Site 65 <<
	.uleb128 .Ltmp1430-.Ltmp1252            #   Call between .Ltmp1252 and .Ltmp1430
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1430-.Lfunc_begin50       # >> Call Site 66 <<
	.uleb128 .Ltmp1431-.Ltmp1430            #   Call between .Ltmp1430 and .Ltmp1431
	.uleb128 .Ltmp1432-.Lfunc_begin50       #     jumps to .Ltmp1432
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1433-.Lfunc_begin50       # >> Call Site 67 <<
	.uleb128 .Ltmp1434-.Ltmp1433            #   Call between .Ltmp1433 and .Ltmp1434
	.uleb128 .Ltmp1435-.Lfunc_begin50       #     jumps to .Ltmp1435
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1421-.Lfunc_begin50       # >> Call Site 68 <<
	.uleb128 .Ltmp1422-.Ltmp1421            #   Call between .Ltmp1421 and .Ltmp1422
	.uleb128 .Ltmp1423-.Lfunc_begin50       #     jumps to .Ltmp1423
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1459-.Lfunc_begin50       # >> Call Site 69 <<
	.uleb128 .Ltmp1460-.Ltmp1459            #   Call between .Ltmp1459 and .Ltmp1460
	.uleb128 .Ltmp1461-.Lfunc_begin50       #     jumps to .Ltmp1461
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1452-.Lfunc_begin50       # >> Call Site 70 <<
	.uleb128 .Ltmp1453-.Ltmp1452            #   Call between .Ltmp1452 and .Ltmp1453
	.uleb128 .Ltmp1454-.Lfunc_begin50       #     jumps to .Ltmp1454
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1418-.Lfunc_begin50       # >> Call Site 71 <<
	.uleb128 .Ltmp1419-.Ltmp1418            #   Call between .Ltmp1418 and .Ltmp1419
	.uleb128 .Ltmp1420-.Lfunc_begin50       #     jumps to .Ltmp1420
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1445-.Lfunc_begin50       # >> Call Site 72 <<
	.uleb128 .Ltmp1446-.Ltmp1445            #   Call between .Ltmp1445 and .Ltmp1446
	.uleb128 .Ltmp1447-.Lfunc_begin50       #     jumps to .Ltmp1447
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1442-.Lfunc_begin50       # >> Call Site 73 <<
	.uleb128 .Ltmp1443-.Ltmp1442            #   Call between .Ltmp1442 and .Ltmp1443
	.uleb128 .Ltmp1444-.Lfunc_begin50       #     jumps to .Ltmp1444
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1439-.Lfunc_begin50       # >> Call Site 74 <<
	.uleb128 .Ltmp1440-.Ltmp1439            #   Call between .Ltmp1439 and .Ltmp1440
	.uleb128 .Ltmp1441-.Lfunc_begin50       #     jumps to .Ltmp1441
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1440-.Lfunc_begin50       # >> Call Site 75 <<
	.uleb128 .Ltmp1360-.Ltmp1440            #   Call between .Ltmp1440 and .Ltmp1360
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1360-.Lfunc_begin50       # >> Call Site 76 <<
	.uleb128 .Ltmp1361-.Ltmp1360            #   Call between .Ltmp1360 and .Ltmp1361
	.uleb128 .Ltmp1362-.Lfunc_begin50       #     jumps to .Ltmp1362
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1363-.Lfunc_begin50       # >> Call Site 77 <<
	.uleb128 .Ltmp1364-.Ltmp1363            #   Call between .Ltmp1363 and .Ltmp1364
	.uleb128 .Ltmp1365-.Lfunc_begin50       #     jumps to .Ltmp1365
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1436-.Lfunc_begin50       # >> Call Site 78 <<
	.uleb128 .Ltmp1437-.Ltmp1436            #   Call between .Ltmp1436 and .Ltmp1437
	.uleb128 .Ltmp1438-.Lfunc_begin50       #     jumps to .Ltmp1438
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1457-.Lfunc_begin50       # >> Call Site 79 <<
	.uleb128 .Ltmp1458-.Ltmp1457            #   Call between .Ltmp1457 and .Ltmp1458
	.uleb128 .Ltmp1461-.Lfunc_begin50       #     jumps to .Ltmp1461
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1450-.Lfunc_begin50       # >> Call Site 80 <<
	.uleb128 .Ltmp1451-.Ltmp1450            #   Call between .Ltmp1450 and .Ltmp1451
	.uleb128 .Ltmp1454-.Lfunc_begin50       #     jumps to .Ltmp1454
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1291-.Lfunc_begin50       # >> Call Site 81 <<
	.uleb128 .Ltmp1292-.Ltmp1291            #   Call between .Ltmp1291 and .Ltmp1292
	.uleb128 .Ltmp1293-.Lfunc_begin50       #     jumps to .Ltmp1293
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1294-.Lfunc_begin50       # >> Call Site 82 <<
	.uleb128 .Ltmp1295-.Ltmp1294            #   Call between .Ltmp1294 and .Ltmp1295
	.uleb128 .Ltmp1296-.Lfunc_begin50       #     jumps to .Ltmp1296
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1297-.Lfunc_begin50       # >> Call Site 83 <<
	.uleb128 .Ltmp1298-.Ltmp1297            #   Call between .Ltmp1297 and .Ltmp1298
	.uleb128 .Ltmp1299-.Lfunc_begin50       #     jumps to .Ltmp1299
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1300-.Lfunc_begin50       # >> Call Site 84 <<
	.uleb128 .Ltmp1301-.Ltmp1300            #   Call between .Ltmp1300 and .Ltmp1301
	.uleb128 .Ltmp1302-.Lfunc_begin50       #     jumps to .Ltmp1302
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1305-.Lfunc_begin50       # >> Call Site 85 <<
	.uleb128 .Ltmp1306-.Ltmp1305            #   Call between .Ltmp1305 and .Ltmp1306
	.uleb128 .Ltmp1307-.Lfunc_begin50       #     jumps to .Ltmp1307
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1308-.Lfunc_begin50       # >> Call Site 86 <<
	.uleb128 .Ltmp1309-.Ltmp1308            #   Call between .Ltmp1308 and .Ltmp1309
	.uleb128 .Ltmp1310-.Lfunc_begin50       #     jumps to .Ltmp1310
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1311-.Lfunc_begin50       # >> Call Site 87 <<
	.uleb128 .Ltmp1312-.Ltmp1311            #   Call between .Ltmp1311 and .Ltmp1312
	.uleb128 .Ltmp1313-.Lfunc_begin50       #     jumps to .Ltmp1313
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1314-.Lfunc_begin50       # >> Call Site 88 <<
	.uleb128 .Ltmp1315-.Ltmp1314            #   Call between .Ltmp1314 and .Ltmp1315
	.uleb128 .Ltmp1316-.Lfunc_begin50       #     jumps to .Ltmp1316
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1317-.Lfunc_begin50       # >> Call Site 89 <<
	.uleb128 .Ltmp1318-.Ltmp1317            #   Call between .Ltmp1317 and .Ltmp1318
	.uleb128 .Ltmp1319-.Lfunc_begin50       #     jumps to .Ltmp1319
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1320-.Lfunc_begin50       # >> Call Site 90 <<
	.uleb128 .Ltmp1321-.Ltmp1320            #   Call between .Ltmp1320 and .Ltmp1321
	.uleb128 .Ltmp1322-.Lfunc_begin50       #     jumps to .Ltmp1322
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1323-.Lfunc_begin50       # >> Call Site 91 <<
	.uleb128 .Ltmp1324-.Ltmp1323            #   Call between .Ltmp1323 and .Ltmp1324
	.uleb128 .Ltmp1325-.Lfunc_begin50       #     jumps to .Ltmp1325
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1326-.Lfunc_begin50       # >> Call Site 92 <<
	.uleb128 .Ltmp1327-.Ltmp1326            #   Call between .Ltmp1326 and .Ltmp1327
	.uleb128 .Ltmp1328-.Lfunc_begin50       #     jumps to .Ltmp1328
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1329-.Lfunc_begin50       # >> Call Site 93 <<
	.uleb128 .Ltmp1330-.Ltmp1329            #   Call between .Ltmp1329 and .Ltmp1330
	.uleb128 .Ltmp1331-.Lfunc_begin50       #     jumps to .Ltmp1331
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1332-.Lfunc_begin50       # >> Call Site 94 <<
	.uleb128 .Ltmp1333-.Ltmp1332            #   Call between .Ltmp1332 and .Ltmp1333
	.uleb128 .Ltmp1334-.Lfunc_begin50       #     jumps to .Ltmp1334
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1335-.Lfunc_begin50       # >> Call Site 95 <<
	.uleb128 .Ltmp1336-.Ltmp1335            #   Call between .Ltmp1335 and .Ltmp1336
	.uleb128 .Ltmp1337-.Lfunc_begin50       #     jumps to .Ltmp1337
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1353-.Lfunc_begin50       # >> Call Site 96 <<
	.uleb128 .Ltmp1354-.Ltmp1353            #   Call between .Ltmp1353 and .Ltmp1354
	.uleb128 .Ltmp1355-.Lfunc_begin50       #     jumps to .Ltmp1355
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1338-.Lfunc_begin50       # >> Call Site 97 <<
	.uleb128 .Ltmp1339-.Ltmp1338            #   Call between .Ltmp1338 and .Ltmp1339
	.uleb128 .Ltmp1340-.Lfunc_begin50       #     jumps to .Ltmp1340
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1341-.Lfunc_begin50       # >> Call Site 98 <<
	.uleb128 .Ltmp1342-.Ltmp1341            #   Call between .Ltmp1341 and .Ltmp1342
	.uleb128 .Ltmp1343-.Lfunc_begin50       #     jumps to .Ltmp1343
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1342-.Lfunc_begin50       # >> Call Site 99 <<
	.uleb128 .Ltmp1424-.Ltmp1342            #   Call between .Ltmp1342 and .Ltmp1424
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1424-.Lfunc_begin50       # >> Call Site 100 <<
	.uleb128 .Ltmp1425-.Ltmp1424            #   Call between .Ltmp1424 and .Ltmp1425
	.uleb128 .Ltmp1426-.Lfunc_begin50       #     jumps to .Ltmp1426
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1427-.Lfunc_begin50       # >> Call Site 101 <<
	.uleb128 .Ltmp1428-.Ltmp1427            #   Call between .Ltmp1427 and .Ltmp1428
	.uleb128 .Ltmp1429-.Lfunc_begin50       #     jumps to .Ltmp1429
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1428-.Lfunc_begin50       # >> Call Site 102 <<
	.uleb128 .Ltmp1254-.Ltmp1428            #   Call between .Ltmp1428 and .Ltmp1254
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1254-.Lfunc_begin50       # >> Call Site 103 <<
	.uleb128 .Ltmp1255-.Ltmp1254            #   Call between .Ltmp1254 and .Ltmp1255
	.uleb128 .Ltmp1256-.Lfunc_begin50       #     jumps to .Ltmp1256
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1255-.Lfunc_begin50       # >> Call Site 104 <<
	.uleb128 .Lfunc_end98-.Ltmp1255         #   Call between .Ltmp1255 and .Lfunc_end98
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end50:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase35:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev,"axG",@progbits,_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev,comdat
	.hidden	_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev # -- Begin function _ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev
	.weak	_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev,@function
_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev: # @_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev
.Lfunc_begin51:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception51
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB99_2
# %bb.1:
.Ltmp1462:
	xorl	%esi, %esi
	callq	_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb
.Ltmp1463:
.LBB99_2:                               # %_ZN8pybind1112cpp_function33InitializingFunctionRecordDeleterclEPNS_6detail15function_recordE.exit
	movq	$0, (%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB99_3:
	.cfi_def_cfa_offset 16
.Ltmp1464:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end99:
	.size	_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev, .Lfunc_end99-_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev,"aG",@progbits,_ZNSt10unique_ptrIN8pybind116detail15function_recordENS0_12cpp_function33InitializingFunctionRecordDeleterEED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table99:
.Lexception51:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase36-.Lttbaseref36
.Lttbaseref36:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end51-.Lcst_begin51
.Lcst_begin51:
	.uleb128 .Ltmp1462-.Lfunc_begin51       # >> Call Site 1 <<
	.uleb128 .Ltmp1463-.Ltmp1462            #   Call between .Ltmp1462 and .Ltmp1463
	.uleb128 .Ltmp1464-.Lfunc_begin51       #     jumps to .Ltmp1464
	.byte	1                               #   On action: 1
.Lcst_end51:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase36:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_,"axG",@progbits,_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_,comdat
	.hidden	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_ # -- Begin function _ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_
	.weak	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_
	.p2align	4, 0x90
	.type	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_,@function
_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_: # @_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_
.Lfunc_begin52:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception52
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	8(%rdi), %rax
	movq	(%rax), %rsi
	testq	%rsi, %rsi
	je	.LBB100_1
# %bb.2:
	movq	(%rdi), %rdi
	movzwl	89(%rdi), %ebx
	addq	$56, %rdi
	callq	_ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_
	movq	_Py_NoneStruct@GOTPCREL(%rip), %rax
	testb	$32, %bl
	jne	.LBB100_3
# %bb.5:
	movq	%rax, (%rsp)
	movq	%rsp, %r14
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rsp), %rbx
	movq	$0, (%rsp)
.Ltmp1468:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1469:
	jmp	.LBB100_6
.LBB100_1:
	movl	$1, %ebx
	jmp	.LBB100_6
.LBB100_3:
	movq	%rax, (%rsp)
	movq	%rsp, %r14
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rsp), %rbx
	movq	$0, (%rsp)
.Ltmp1465:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1466:
.LBB100_6:                              # %_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENKUlRNS2_13function_callEE_clESJ_.exit
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB100_7:
	.cfi_def_cfa_offset 32
.Ltmp1467:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB100_4:
.Ltmp1470:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end100:
	.size	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_, .Lfunc_end100-_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_
	.cfi_endproc
	.section	.gcc_except_table._ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_,"aG",@progbits,_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_,comdat
	.p2align	2, 0x0
GCC_except_table100:
.Lexception52:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase37-.Lttbaseref37
.Lttbaseref37:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end52-.Lcst_begin52
.Lcst_begin52:
	.uleb128 .Lfunc_begin52-.Lfunc_begin52  # >> Call Site 1 <<
	.uleb128 .Ltmp1468-.Lfunc_begin52       #   Call between .Lfunc_begin52 and .Ltmp1468
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1468-.Lfunc_begin52       # >> Call Site 2 <<
	.uleb128 .Ltmp1469-.Ltmp1468            #   Call between .Ltmp1468 and .Ltmp1469
	.uleb128 .Ltmp1470-.Lfunc_begin52       #     jumps to .Ltmp1470
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1469-.Lfunc_begin52       # >> Call Site 3 <<
	.uleb128 .Ltmp1465-.Ltmp1469            #   Call between .Ltmp1469 and .Ltmp1465
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1465-.Lfunc_begin52       # >> Call Site 4 <<
	.uleb128 .Ltmp1466-.Ltmp1465            #   Call between .Ltmp1465 and .Ltmp1466
	.uleb128 .Ltmp1467-.Lfunc_begin52       #     jumps to .Ltmp1467
	.byte	1                               #   On action: 1
.Lcst_end52:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase37:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_,"axG",@progbits,_ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_,comdat
	.hidden	_ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_ # -- Begin function _ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_
	.weak	_ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_
	.p2align	4, 0x90
	.type	_ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_,@function
_ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_: # @_ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, 8(%rsp)
	movq	(%rdi), %rax
	movq	%rax, (%rsp)
	callq	_ZN8pybind116detail13get_internalsEv
	movq	%rax, %rbx
	leaq	56(%rax), %rdi
	movq	%rsp, %rsi
	callq	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_
	movq	184(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB101_27
# %bb.1:                                # %.lr.ph.i.i
	movq	%rbx, %r14
	addq	$184, %r14
	jmp	.LBB101_2
	.p2align	4, 0x90
.LBB101_25:                             #   in Loop: Header=BB101_2 Depth=1
	movq	(%rdi), %r15
	movq	%r15, %rdi
	testq	%r15, %r15
	je	.LBB101_27
.LBB101_2:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB101_7 Depth 2
	movq	8(%rdi), %rax
	cmpq	(%rsp), %rax
	jne	.LBB101_25
# %bb.3:                                #   in Loop: Header=BB101_2 Depth=1
	movq	176(%rbx), %r9
	movq	24(%rdi), %rax
	movq	%rax, %rcx
	orq	%r9, %rcx
	shrq	$32, %rcx
	je	.LBB101_4
# %bb.5:                                #   in Loop: Header=BB101_2 Depth=1
	xorl	%edx, %edx
	divq	%r9
	movq	%rdx, %rcx
	jmp	.LBB101_6
.LBB101_4:                              #   in Loop: Header=BB101_2 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r9d
	movl	%edx, %ecx
.LBB101_6:                              #   in Loop: Header=BB101_2 Depth=1
	movq	168(%rbx), %r8
	movq	(%r8,%rcx,8), %r11
	movq	%r11, %rax
	.p2align	4, 0x90
.LBB101_7:                              #   Parent Loop BB101_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%rax, %rsi
	movq	(%rax), %rax
	cmpq	%rdi, %rax
	jne	.LBB101_7
# %bb.8:                                # %_ZNSt10_HashtableISt4pairIPK7_objectPKcES6_SaIS6_ENSt8__detail9_IdentityESt8equal_toIS6_EN8pybind116detail13override_hashENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb1ELb1ELb1EEEE20_M_get_previous_nodeEmPNS8_10_Hash_nodeIS6_Lb1EEE.exit.i.i.i.i.i
                                        #   in Loop: Header=BB101_2 Depth=1
	movq	(%rdi), %r10
	cmpq	%rsi, %r11
	je	.LBB101_9
# %bb.18:                               #   in Loop: Header=BB101_2 Depth=1
	testq	%r10, %r10
	je	.LBB101_24
# %bb.19:                               #   in Loop: Header=BB101_2 Depth=1
	movq	24(%r10), %rax
	movq	%rax, %rdx
	orq	%r9, %rdx
	shrq	$32, %rdx
	je	.LBB101_20
# %bb.21:                               #   in Loop: Header=BB101_2 Depth=1
	xorl	%edx, %edx
	divq	%r9
	cmpq	%rcx, %rdx
	jne	.LBB101_23
	jmp	.LBB101_24
.LBB101_9:                              #   in Loop: Header=BB101_2 Depth=1
	testq	%r10, %r10
	je	.LBB101_15
# %bb.10:                               #   in Loop: Header=BB101_2 Depth=1
	movq	24(%r10), %rax
	movq	%rax, %rdx
	orq	%r9, %rdx
	shrq	$32, %rdx
	je	.LBB101_11
# %bb.12:                               #   in Loop: Header=BB101_2 Depth=1
	xorl	%edx, %edx
	divq	%r9
	cmpq	%rcx, %rdx
	jne	.LBB101_14
	jmp	.LBB101_24
.LBB101_20:                             #   in Loop: Header=BB101_2 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r9d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	je	.LBB101_24
.LBB101_23:                             #   in Loop: Header=BB101_2 Depth=1
	movq	%rsi, (%r8,%rdx,8)
	jmp	.LBB101_24
.LBB101_11:                             #   in Loop: Header=BB101_2 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r9d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	je	.LBB101_24
.LBB101_14:                             #   in Loop: Header=BB101_2 Depth=1
	movq	%r11, (%r8,%rdx,8)
	movq	168(%rbx), %r8
	movq	(%r8,%rcx,8), %r11
.LBB101_15:                             # %.thread23.i.i.i.i.i.i
                                        #   in Loop: Header=BB101_2 Depth=1
	cmpq	%r11, %r14
	jne	.LBB101_17
# %bb.16:                               #   in Loop: Header=BB101_2 Depth=1
	movq	%r10, (%r14)
.LBB101_17:                             #   in Loop: Header=BB101_2 Depth=1
	movq	$0, (%r8,%rcx,8)
.LBB101_24:                             # %_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EE5eraseENSt8__detail14_Node_iteratorIS6_Lb1ELb1EEE.exit.i.i
                                        #   in Loop: Header=BB101_2 Depth=1
	movq	(%rdi), %r15
	movq	%r15, (%rsi)
	movl	$32, %esi
	callq	_ZdlPvm@PLT
	decq	192(%rbx)
	movq	%r15, %rdi
	testq	%r15, %r15
	jne	.LBB101_2
.LBB101_27:                             # %_ZN8pybind116detail14with_internalsIZZNS0_23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES4_EUlRNS0_9internalsEE_EEDTclfp_clL_ZNS0_13get_internalsEvEEEERKT_.exit
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end101:
	.size	_ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_, .Lfunc_end101-_ZZN8pybind116detail23all_type_info_get_cacheEP11_typeobjectENKUlNS_6handleEE_clES3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_,"axG",@progbits,_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_,comdat
	.hidden	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_ # -- Begin function _ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_
	.weak	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_,@function
_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_: # @_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	cmpq	$0, 24(%rdi)
	je	.LBB102_13
# %bb.1:
	movq	(%rsi), %rsi
	movq	8(%rbx), %r11
	movq	%rsi, %rax
	orq	%r11, %rax
	shrq	$32, %rax
	je	.LBB102_18
# %bb.2:
	movq	%rsi, %rax
	xorl	%edx, %edx
	divq	%r11
	movq	%rdx, %rcx
	movq	(%rbx), %r10
	movq	(%r10,%rcx,8), %r9
	testq	%r9, %r9
	jne	.LBB102_3
	jmp	.LBB102_24
.LBB102_13:
	movq	16(%rbx), %r14
	testq	%r14, %r14
	je	.LBB102_24
# %bb.14:                               # %.preheader.i
	movq	(%rsi), %rax
	cmpq	8(%r14), %rax
	je	.LBB102_25
# %bb.15:
	xorl	%edi, %edi
	.p2align	4, 0x90
.LBB102_16:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	%r14, %r9
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB102_43
# %bb.17:                               #   in Loop: Header=BB102_16 Depth=1
	cmpq	8(%r14), %rax
	jne	.LBB102_16
	jmp	.LBB102_26
.LBB102_18:
	movl	%esi, %eax
	xorl	%edx, %edx
	divl	%r11d
	movl	%edx, %ecx
	movq	(%rbx), %r10
	movq	(%r10,%rcx,8), %r9
	testq	%r9, %r9
	je	.LBB102_24
.LBB102_3:
	movq	(%r9), %r14
	cmpq	8(%r14), %rsi
	je	.LBB102_20
# %bb.4:
	xorl	%edi, %edi
	jmp	.LBB102_5
	.p2align	4, 0x90
.LBB102_8:                              #   in Loop: Header=BB102_5 Depth=1
	movl	%r8d, %eax
	xorl	%edx, %edx
	divl	%r11d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	jne	.LBB102_43
.LBB102_9:                              #   in Loop: Header=BB102_5 Depth=1
	cmpq	%r8, %rsi
	je	.LBB102_10
.LBB102_5:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	movq	%r14, %r15
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB102_43
# %bb.6:                                #   in Loop: Header=BB102_5 Depth=1
	movq	8(%r14), %r8
	movq	%r8, %rax
	orq	%r11, %rax
	shrq	$32, %rax
	je	.LBB102_8
# %bb.7:                                #   in Loop: Header=BB102_5 Depth=1
	movq	%r8, %rax
	xorl	%edx, %edx
	divq	%r11
	cmpq	%rcx, %rdx
	je	.LBB102_9
	jmp	.LBB102_43
.LBB102_24:
	xorl	%edi, %edi
	jmp	.LBB102_43
.LBB102_20:                             # %.loopexit.thread
	movq	(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB102_37
# %bb.21:
	movq	%r9, %rsi
	jmp	.LBB102_22
.LBB102_25:
	leaq	16(%rbx), %r9
.LBB102_26:                             # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeERS3_.exit
	movq	8(%rbx), %r11
	movq	%rax, %rcx
	orq	%r11, %rcx
	shrq	$32, %rcx
	je	.LBB102_28
# %bb.27:
	xorl	%edx, %edx
	divq	%r11
	movq	%rdx, %rcx
	jmp	.LBB102_29
.LBB102_10:
	movq	%r9, %rsi
	movq	%r15, %r9
	movq	(%r14), %rdi
	cmpq	%r9, %rsi
	jne	.LBB102_30
.LBB102_11:
	testq	%rdi, %rdi
	je	.LBB102_12
.LBB102_22:
	movq	8(%rdi), %rax
	movq	%rax, %rdx
	orq	%r11, %rdx
	shrq	$32, %rdx
	je	.LBB102_33
# %bb.23:
	xorl	%edx, %edx
	divq	%r11
	cmpq	%rcx, %rdx
	jne	.LBB102_34
	jmp	.LBB102_40
.LBB102_28:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r11d
	movl	%edx, %ecx
.LBB102_29:
	movq	(%rbx), %r10
	movq	(%r10,%rcx,8), %rsi
	movq	(%r14), %rdi
	cmpq	%r9, %rsi
	je	.LBB102_11
.LBB102_30:
	testq	%rdi, %rdi
	je	.LBB102_40
# %bb.31:
	movq	8(%rdi), %rax
	movq	%rax, %rdx
	orq	%r11, %rdx
	shrq	$32, %rdx
	je	.LBB102_38
# %bb.32:
	xorl	%edx, %edx
	divq	%r11
	cmpq	%rcx, %rdx
	jne	.LBB102_39
	jmp	.LBB102_40
.LBB102_33:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r11d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	je	.LBB102_40
.LBB102_34:
	movq	%rsi, (%r10,%rdx,8)
	movq	(%rbx), %r10
	movq	(%r10,%rcx,8), %rsi
	leaq	16(%rbx), %rax
	cmpq	%rsi, %rax
	jne	.LBB102_36
.LBB102_35:
	movq	%rdi, (%rax)
.LBB102_36:
	movq	$0, (%r10,%rcx,8)
	jmp	.LBB102_40
.LBB102_37:
	xorl	%edi, %edi
	movq	%r9, %rsi
	leaq	16(%rbx), %rax
	cmpq	%rsi, %rax
	jne	.LBB102_36
	jmp	.LBB102_35
.LBB102_38:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r11d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	je	.LBB102_40
.LBB102_39:
	movq	%r9, (%r10,%rdx,8)
.LBB102_40:                             # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE22_M_remove_bucket_beginEmPNSD_10_Hash_nodeISB_Lb0EEEm.exit.i
	movq	(%r14), %rax
	movq	%rax, (%r9)
	movq	16(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB102_42
# %bb.41:
	movq	32(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB102_42:                             # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSD_15_Hash_node_baseEPNSD_10_Hash_nodeISB_Lb0EEE.exit
	movl	$40, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	decq	24(%rbx)
	movl	$1, %edi
.LBB102_43:                             # %_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeERS3_.exit.thread
	movq	%rdi, %rax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB102_12:
	.cfi_def_cfa_offset 32
	xorl	%edi, %edi
	leaq	16(%rbx), %rax
	cmpq	%rsi, %rax
	jne	.LBB102_36
	jmp	.LBB102_35
.Lfunc_end102:
	.size	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_, .Lfunc_end102-_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	8(%rdx), %r8
	movq	8(%rsi), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	xorq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB103_13
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	%rdi, %rbx
	leaq	(%rsi,%r8), %r12
	movq	(%r14), %rdi
	leaq	16(%r14), %r15
	movl	$15, %eax
	cmpq	%r15, %rdi
	je	.LBB103_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	16(%r14), %rax
.LBB103_3:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	(%rdx), %rcx
	cmpq	%rax, %r12
	jbe	.LBB103_4
# %bb.8:
	movq	%r14, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
	jmp	.LBB103_9
.LBB103_4:
	testq	%r8, %r8
	je	.LBB103_9
# %bb.5:
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB103_7
# %bb.6:
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB103_9
.LBB103_7:
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB103_9:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_.exit
	movq	%r12, 8(%r14)
	movq	(%r14), %rax
	movb	$0, (%rax,%r12)
	leaq	16(%rbx), %rdi
	movq	%rdi, (%rbx)
	movq	(%r14), %rax
	cmpq	%r15, %rax
	je	.LBB103_10
# %bb.11:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	%rax, (%rbx)
	movq	16(%r14), %rax
	movq	%rax, 16(%rbx)
	movq	8(%r14), %r12
	jmp	.LBB103_12
.LBB103_10:
	movq	8(%r14), %r12
	leaq	1(%r12), %rdx
	movq	%r15, %rsi
	callq	memcpy@PLT
.LBB103_12:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	%r12, 8(%rbx)
	movq	%r15, (%r14)
	movq	$0, 8(%r14)
	movb	$0, 16(%r14)
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB103_13:
	.cfi_def_cfa_offset 48
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end103:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_, .Lfunc_end103-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail27generate_function_signatureB5cxx11EPKcPNS0_15function_recordEPKPKSt9type_infoRmSA_,"axG",@progbits,_ZN8pybind116detail27generate_function_signatureB5cxx11EPKcPNS0_15function_recordEPKPKSt9type_infoRmSA_,comdat
	.hidden	_ZN8pybind116detail27generate_function_signatureB5cxx11EPKcPNS0_15function_recordEPKPKSt9type_infoRmSA_ # -- Begin function _ZN8pybind116detail27generate_function_signatureB5cxx11EPKcPNS0_15function_recordEPKPKSt9type_infoRmSA_
	.weak	_ZN8pybind116detail27generate_function_signatureB5cxx11EPKcPNS0_15function_recordEPKPKSt9type_infoRmSA_
	.p2align	4, 0x90
	.type	_ZN8pybind116detail27generate_function_signatureB5cxx11EPKcPNS0_15function_recordEPKPKSt9type_infoRmSA_,@function
_ZN8pybind116detail27generate_function_signatureB5cxx11EPKcPNS0_15function_recordEPKPKSt9type_infoRmSA_: # @_ZN8pybind116detail27generate_function_signatureB5cxx11EPKcPNS0_15function_recordEPKPKSt9type_infoRmSA_
.Lfunc_begin53:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception53
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$440, %rsp                      # imm = 0x1B8
	.cfi_def_cfa_offset 496
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, 160(%rsp)                  # 8-byte Spill
	movq	%r8, 432(%rsp)                  # 8-byte Spill
	movq	%rcx, 424(%rsp)                 # 8-byte Spill
	movq	%rdx, %r15
	movq	%rsi, %r13
	movq	%rdi, %rbx
	leaq	16(%rdi), %r14
	movq	%r14, (%rdi)
	movq	$0, 8(%rdi)
	movb	$0, 16(%rdi)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 128(%rsp)
	movaps	%xmm0, 112(%rsp)
	movaps	%xmm0, 96(%rsp)
	movaps	%xmm0, 80(%rsp)
	movaps	%xmm0, 64(%rsp)
.Ltmp1471:
	leaq	64(%rsp), %rdi
	movl	$1, %esi
	callq	_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm@PLT
.Ltmp1472:
# %bb.1:                                # %.noexc3.i
	movq	%r15, 152(%rsp)                 # 8-byte Spill
	movq	120(%rsp), %rax
	movb	$0, (%rax)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 304(%rsp)
	movaps	%xmm0, 288(%rsp)
	movaps	%xmm0, 272(%rsp)
	movaps	%xmm0, 256(%rsp)
	movaps	%xmm0, 240(%rsp)
.Ltmp1474:
	leaq	240(%rsp), %rdi
	xorl	%esi, %esi
	callq	_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm@PLT
.Ltmp1475:
# %bb.2:                                # %.noexc
	cmpq	$0, 64(%rsp)
	je	.LBB104_9
# %bb.3:                                # %_ZNSt5stackIbSt5dequeIbSaIbEEEC2EOS2_.exit
	movaps	240(%rsp), %xmm0
	movaps	256(%rsp), %xmm1
	movaps	%xmm0, 384(%rsp)
	movq	272(%rsp), %rax
	movq	280(%rsp), %r15
	movq	304(%rsp), %rcx
	movq	312(%rsp), %r12
	movaps	288(%rsp), %xmm0
	movaps	64(%rsp), %xmm2
	movaps	80(%rsp), %xmm3
	movaps	96(%rsp), %xmm4
	movaps	112(%rsp), %xmm5
	movaps	%xmm2, 240(%rsp)
	movaps	%xmm4, 272(%rsp)
	movaps	128(%rsp), %xmm2
	movaps	%xmm2, 304(%rsp)
	movaps	%xmm3, 256(%rsp)
	movaps	%xmm5, 288(%rsp)
	movaps	384(%rsp), %xmm2
	movaps	%xmm2, 64(%rsp)
	movaps	%xmm1, 80(%rsp)
	movq	%rax, 96(%rsp)
	movq	%r15, 104(%rsp)
	movaps	%xmm0, 112(%rsp)
	movq	%rcx, 128(%rsp)
	movq	%r12, 136(%rsp)
	movq	64(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB104_9
# %bb.4:
	leaq	8(%r12), %rax
	cmpq	%rax, %r15
	jae	.LBB104_8
# %bb.5:                                # %.lr.ph.i.i.i.preheader
	addq	$-8, %r15
	.p2align	4, 0x90
.LBB104_6:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%r15), %rdi
	addq	$8, %r15
	movl	$512, %esi                      # imm = 0x200
	callq	_ZdlPvm@PLT
	cmpq	%r12, %r15
	jb	.LBB104_6
# %bb.7:                                # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.loopexit.i.i
	movq	64(%rsp), %rdi
.LBB104_8:                              # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.i.i
	movq	72(%rsp), %rsi
	shlq	$3, %rsi
	callq	_ZdlPvm@PLT
.LBB104_9:                              # %_ZNSt5dequeIbSaIbEED2Ev.exit
	leaq	400(%rsp), %rax
	movq	%rax, 384(%rsp)
	movl	$2066038817, 400(%rsp)          # imm = 0x7B254021
	movw	$11645, 404(%rsp)               # imm = 0x2D7D
	movq	$6, 392(%rsp)
	movb	$0, 406(%rsp)
	leaq	48(%rsp), %r15
	movq	$0, 232(%rsp)                   # 8-byte Folded Spill
	movq	%r14, 144(%rsp)                 # 8-byte Spill
	jmp	.LBB104_13
	.p2align	4, 0x90
.LBB104_10:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit524
                                        #   in Loop: Header=BB104_13 Depth=1
	movb	%bpl, (%rax,%r12)
	movq	%r15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, 1(%rax,%r12)
.LBB104_11:                             # %.critedge2
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	48(%rsp), %r15
.LBB104_12:                             # %.critedge2
                                        #   in Loop: Header=BB104_13 Depth=1
	incq	%r13
.LBB104_13:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB104_187 Depth 2
                                        #     Child Loop BB104_290 Depth 2
                                        #     Child Loop BB104_143 Depth 2
                                        #     Child Loop BB104_157 Depth 2
                                        #     Child Loop BB104_140 Depth 2
                                        #     Child Loop BB104_151 Depth 2
	movzbl	(%r13), %ebp
	movzbl	%bpl, %eax
	cmpl	$122, %eax
	jg	.LBB104_24
# %bb.14:                               #   in Loop: Header=BB104_13 Depth=1
	leal	-33(%rax), %ecx
	cmpl	$31, %ecx
	ja	.LBB104_335
# %bb.15:                               #   in Loop: Header=BB104_13 Depth=1
	leaq	.LJTI104_0(%rip), %rdx
	movslq	(%rdx,%rcx,4), %rax
	addq	%rdx, %rax
	jmpq	*%rax
.LBB104_16:                             #   in Loop: Header=BB104_13 Depth=1
	movq	392(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB104_108
# %bb.17:                               # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i
                                        #   in Loop: Header=BB104_13 Depth=1
	movzbl	1(%r13), %r12d
	movsbl	%r12b, %esi
	movq	384(%rsp), %r15
	movq	%r15, %rdi
	callq	memchr@PLT
	testq	%rax, %rax
	sete	%cl
	subq	%r15, %rax
	cmpq	$-1, %rax
	sete	%al
	orb	%cl, %al
	jne	.LBB104_108
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rbx), %rax
	movl	$15, %ecx
	cmpq	%r14, %rax
	je	.LBB104_20
# %bb.19:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%r14), %rcx
.LBB104_20:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	8(%rbx), %r15
	leaq	1(%r15), %rbp
	cmpq	%rcx, %rbp
	jbe	.LBB104_23
# %bb.21:                               #   in Loop: Header=BB104_13 Depth=1
.Ltmp1492:
	movl	$1, %r8d
	movq	%rbx, %rdi
	movq	%r15, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1493:
# %bb.22:                               # %.noexc499
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rbx), %rax
.LBB104_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit
                                        #   in Loop: Header=BB104_13 Depth=1
	incq	%r13
	movb	%r12b, (%rax,%r15)
	movq	%rbp, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, 1(%rax,%r15)
	jmp	.LBB104_11
	.p2align	4, 0x90
.LBB104_24:                             #   in Loop: Header=BB104_13 Depth=1
	cmpl	$123, %eax
	je	.LBB104_51
# %bb.25:                               #   in Loop: Header=BB104_13 Depth=1
	cmpl	$125, %eax
	jne	.LBB104_108
# %bb.26:                               #   in Loop: Header=BB104_13 Depth=1
	testb	$1, 232(%rsp)                   # 1-byte Folded Reload
	jne	.LBB104_257
# %bb.27:                               #   in Loop: Header=BB104_13 Depth=1
	movq	160(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rax
	movq	152(%rsp), %rdx                 # 8-byte Reload
	movq	24(%rdx), %rcx
	movq	32(%rdx), %rdx
	subq	%rcx, %rdx
	sarq	$5, %rdx
	cmpq	%rdx, %rax
	jae	.LBB104_257
# %bb.28:                               #   in Loop: Header=BB104_13 Depth=1
	shlq	$5, %rax
	cmpq	$0, 8(%rcx,%rax)
	je	.LBB104_257
# %bb.29:                               #   in Loop: Header=BB104_13 Depth=1
	movq	8(%rbx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-3, %rax
	cmpq	%rax, %rsi
	jg	.LBB104_347
# %bb.30:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i246
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rbx), %rax
	movl	$15, %ecx
	cmpq	%r14, %rax
	je	.LBB104_32
# %bb.31:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i246
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%r14), %rcx
.LBB104_32:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i246
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	3(%rsi), %r15
	cmpq	%rcx, %r15
	jbe	.LBB104_158
# %bb.33:                               #   in Loop: Header=BB104_13 Depth=1
.Ltmp1639:
	movl	$3, %r8d
	movq	%rbx, %rdi
	xorl	%edx, %edx
	leaq	.L.str.105(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1640:
	jmp	.LBB104_159
.LBB104_34:                             #   in Loop: Header=BB104_13 Depth=1
	movq	432(%rsp), %rdx                 # 8-byte Reload
	movq	(%rdx), %rax
	leaq	1(%rax), %rcx
	movq	%rcx, (%rdx)
	movq	424(%rsp), %rcx                 # 8-byte Reload
	movq	(%rcx,%rax,8), %r12
	testq	%r12, %r12
	je	.LBB104_349
# %bb.35:                               #   in Loop: Header=BB104_13 Depth=1
	movq	%r12, 64(%rsp)
.Ltmp1494:
	leaq	64(%rsp), %rdi
	xorl	%esi, %esi
	callq	_ZN8pybind116detail13get_type_infoERKSt10type_indexb
.Ltmp1495:
	movq	152(%rsp), %r15                 # 8-byte Reload
	leaq	80(%rsp), %rbp
# %bb.36:                               #   in Loop: Header=BB104_13 Depth=1
	testq	%rax, %rax
	je	.LBB104_59
# %bb.37:                               #   in Loop: Header=BB104_13 Depth=1
	movq	(%rax), %r15
	movq	%r15, 360(%rsp)
	leaq	.L.str.65(%rip), %rax
	movq	%rax, 368(%rsp)
	movq	$0, 376(%rsp)
.Ltmp1497:
	leaq	352(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp1498:
# %bb.38:                               # %.noexc277
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%rbp, 64(%rsp)
	movq	$0, 72(%rsp)
	movb	$0, 80(%rsp)
.Ltmp1500:
	leaq	64(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp1501:
# %bb.39:                               # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i.i
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	16(%rsp), %r14
	movq	%r14, (%rsp)
	movq	64(%rsp), %rax
	cmpq	%rbp, %rax
	je	.LBB104_76
# %bb.40:                               #   in Loop: Header=BB104_13 Depth=1
	movq	%rax, (%rsp)
	movq	72(%rsp), %rbp
	movups	72(%rsp), %xmm0
	movups	%xmm0, 8(%rsp)
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rcx, %rbp
	je	.LBB104_353
# %bb.41:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i280
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	1(%rbp), %r12
	leaq	16(%rsp), %rcx
	cmpq	%rcx, %rax
	movq	144(%rsp), %r14                 # 8-byte Reload
	je	.LBB104_77
# %bb.42:                               #   in Loop: Header=BB104_13 Depth=1
	xorl	%ecx, %ecx
	movl	$15, %edx
	testb	%cl, %cl
	je	.LBB104_78
	jmp	.LBB104_79
.LBB104_43:                             #   in Loop: Header=BB104_13 Depth=1
	movzbl	1(%r13), %ebp
	incq	%r13
	cmpl	$33, %ebp
	je	.LBB104_72
# %bb.44:                               #   in Loop: Header=BB104_13 Depth=1
	cmpl	$36, %ebp
	je	.LBB104_69
# %bb.45:                               #   in Loop: Header=BB104_13 Depth=1
	cmpl	$94, %ebp
	jne	.LBB104_74
# %bb.46:                               #   in Loop: Header=BB104_13 Depth=1
	movb	$0, 64(%rsp)
	movq	288(%rsp), %rax
	movq	304(%rsp), %rcx
	decq	%rcx
	cmpq	%rcx, %rax
	je	.LBB104_135
# %bb.47:                               #   in Loop: Header=BB104_13 Depth=1
	movb	$0, (%rax)
	jmp	.LBB104_71
.LBB104_48:                             #   in Loop: Header=BB104_13 Depth=1
	cmpb	$62, 1(%r13)
	jne	.LBB104_108
# %bb.49:                               #   in Loop: Header=BB104_13 Depth=1
	movb	$1, 64(%rsp)
	movq	288(%rsp), %rax
	movq	304(%rsp), %rcx
	decq	%rcx
	cmpq	%rcx, %rax
	je	.LBB104_107
# %bb.50:                               #   in Loop: Header=BB104_13 Depth=1
	movb	$1, (%rax)
	incq	%rax
	movq	%rax, 288(%rsp)
	jmp	.LBB104_108
.LBB104_51:                             #   in Loop: Header=BB104_13 Depth=1
	movb	$1, %al
	movq	%rax, 232(%rsp)                 # 8-byte Spill
	cmpb	$42, 1(%r13)
	je	.LBB104_12
# %bb.52:                               #   in Loop: Header=BB104_13 Depth=1
	movq	152(%rsp), %rcx                 # 8-byte Reload
	testb	$64, 89(%rcx)
	movq	160(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rbp
	jne	.LBB104_170
# %bb.53:                               #   in Loop: Header=BB104_13 Depth=1
	movzwl	94(%rcx), %eax
	cmpq	%rax, %rbp
	jne	.LBB104_170
# %bb.54:                               #   in Loop: Header=BB104_13 Depth=1
	movq	8(%rbx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-3, %rax
	cmpq	%rax, %rsi
	jg	.LBB104_347
# %bb.55:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rbx), %rax
	movl	$15, %ecx
	cmpq	%r14, %rax
	je	.LBB104_57
# %bb.56:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%r14), %rcx
.LBB104_57:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	3(%rsi), %r15
	cmpq	%rcx, %r15
	jbe	.LBB104_168
# %bb.58:                               #   in Loop: Header=BB104_13 Depth=1
.Ltmp1652:
	movl	$3, %r8d
	movq	%rbx, %rdi
	xorl	%edx, %edx
	leaq	.L.str.102(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1653:
	jmp	.LBB104_169
.LBB104_59:                             #   in Loop: Header=BB104_13 Depth=1
	movq	%r12, 64(%rsp)
.Ltmp1536:
	callq	_ZN8pybind116detail13get_internalsEv
.Ltmp1537:
# %bb.60:                               # %.noexc335
                                        #   in Loop: Header=BB104_13 Depth=1
	addq	$456, %rax                      # imm = 0x1C8
.Ltmp1538:
	movq	%rax, %rdi
	leaq	64(%rsp), %rsi
	callq	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_@PLT
.Ltmp1539:
# %bb.61:                               # %.noexc336
                                        #   in Loop: Header=BB104_13 Depth=1
	testq	%rax, %rax
	je	.LBB104_99
# %bb.62:                               # %_ZN8pybind116detail46global_internals_native_enum_type_map_get_itemERKSt10type_index.exit
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	16(%rax), %rax
	testq	%rax, %rax
	je	.LBB104_99
# %bb.63:                               #   in Loop: Header=BB104_13 Depth=1
	movq	%rax, 416(%rsp)                 # 8-byte Spill
	movq	%rax, 360(%rsp)
	leaq	.L.str.65(%rip), %rax
	movq	%rax, 368(%rsp)
	movq	$0, 376(%rsp)
.Ltmp1541:
	leaq	352(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp1542:
# %bb.64:                               # %.noexc344
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%rbp, 64(%rsp)
	movq	$0, 72(%rsp)
	movb	$0, 80(%rsp)
.Ltmp1544:
	leaq	64(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp1545:
# %bb.65:                               # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i.i341
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	16(%rsp), %r15
	movq	%r15, (%rsp)
	movq	64(%rsp), %rax
	cmpq	%rbp, %rax
	je	.LBB104_196
# %bb.66:                               #   in Loop: Header=BB104_13 Depth=1
	movq	%rax, (%rsp)
	movq	72(%rsp), %rbp
	movups	72(%rsp), %xmm0
	movups	%xmm0, 8(%rsp)
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rcx, %rbp
	je	.LBB104_365
# %bb.67:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i348
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	1(%rbp), %r12
	leaq	16(%rsp), %rcx
	cmpq	%rcx, %rax
	je	.LBB104_197
# %bb.68:                               #   in Loop: Header=BB104_13 Depth=1
	xorl	%ecx, %ecx
	movl	$15, %edx
	testb	%cl, %cl
	je	.LBB104_198
	jmp	.LBB104_199
.LBB104_335:                            #   in Loop: Header=BB104_13 Depth=1
	testl	%eax, %eax
	jne	.LBB104_108
	jmp	.LBB104_336
.LBB104_69:                             #   in Loop: Header=BB104_13 Depth=1
	movb	$1, 64(%rsp)
	movq	288(%rsp), %rax
	movq	304(%rsp), %rcx
	decq	%rcx
	cmpq	%rcx, %rax
	je	.LBB104_133
# %bb.70:                               #   in Loop: Header=BB104_13 Depth=1
	movb	$1, (%rax)
.LBB104_71:                             # %.critedge2
                                        #   in Loop: Header=BB104_13 Depth=1
	incq	%rax
	movq	%rax, 288(%rsp)
	incq	%r13
	jmp	.LBB104_13
.LBB104_72:                             #   in Loop: Header=BB104_13 Depth=1
	movq	288(%rsp), %rax
	movq	296(%rsp), %rdi
	cmpq	%rdi, %rax
	je	.LBB104_134
# %bb.73:                               #   in Loop: Header=BB104_13 Depth=1
	decq	%rax
	movq	%rax, 288(%rsp)
	incq	%r13
	jmp	.LBB104_13
.LBB104_74:                             #   in Loop: Header=BB104_13 Depth=1
	movq	288(%rsp), %rax
	cmpq	296(%rsp), %rax
	je	.LBB104_136
# %bb.75:                               # %_ZNSt5stackIbSt5dequeIbSaIbEEE3topEv.exit
                                        #   in Loop: Header=BB104_13 Depth=1
	cmpb	$1, -1(%rax)
	je	.LBB104_140
	jmp	.LBB104_137
.LBB104_76:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i280.thread
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%rbp, %rsi
	movq	72(%rsp), %rbp
	leaq	1(%rbp), %r12
	movq	%r14, %rdi
	movq	%r12, %rdx
	callq	memcpy@PLT
	movq	%rbp, 8(%rsp)
	movq	%r14, %rax
	movq	144(%rsp), %r14                 # 8-byte Reload
.LBB104_77:                             #   in Loop: Header=BB104_13 Depth=1
	movb	$1, %cl
	movl	$15, %edx
	testb	%cl, %cl
	jne	.LBB104_79
.LBB104_78:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i281
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	16(%rsp), %rdx
.LBB104_79:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i281
                                        #   in Loop: Header=BB104_13 Depth=1
	cmpq	%rdx, %r12
	jbe	.LBB104_81
# %bb.80:                               #   in Loop: Header=BB104_13 Depth=1
.Ltmp1506:
	movl	$1, %r8d
	movq	%rsp, %rdi
	movq	%rbp, %rsi
	xorl	%edx, %edx
	leaq	.L.str.95(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1507:
	jmp	.LBB104_82
.LBB104_81:                             #   in Loop: Header=BB104_13 Depth=1
	movb	$46, (%rax,%rbp)
.LBB104_82:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%r12, 8(%rsp)
	movq	(%rsp), %rax
	movb	$0, (%rax,%r12)
	leaq	216(%rsp), %rdi
	movq	%rdi, 200(%rsp)
	movq	(%rsp), %rax
	leaq	16(%rsp), %rbp
	cmpq	%rbp, %rax
	je	.LBB104_84
# %bb.83:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i285
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%rax, 200(%rsp)
	movq	8(%rsp), %r12
	movq	16(%rsp), %rax
	movq	%rax, 216(%rsp)
	jmp	.LBB104_85
.LBB104_84:                             #   in Loop: Header=BB104_13 Depth=1
	movq	8(%rsp), %r12
	leaq	1(%r12), %rdx
	movq	%rbp, %rsi
	callq	memcpy@PLT
.LBB104_85:                             #   in Loop: Header=BB104_13 Depth=1
	movq	%r12, 208(%rsp)
	movq	%rbp, (%rsp)
	movq	$0, 8(%rsp)
	movb	$0, 16(%rsp)
	movq	%r15, 328(%rsp)
	leaq	.L.str.108(%rip), %rax
	movq	%rax, 336(%rsp)
	movq	$0, 344(%rsp)
.Ltmp1509:
	leaq	320(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp1510:
# %bb.86:                               # %.noexc296
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	80(%rsp), %r12
	movq	%r12, 64(%rsp)
	movq	$0, 72(%rsp)
	movb	$0, 80(%rsp)
.Ltmp1512:
	leaq	64(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp1513:
	leaq	184(%rsp), %rdi
# %bb.87:                               # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i.i293
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%rdi, 168(%rsp)
	movq	64(%rsp), %rax
	cmpq	%r12, %rax
	je	.LBB104_89
# %bb.88:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i294
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%rax, 168(%rsp)
	movq	72(%rsp), %r15
	movq	80(%rsp), %rax
	movq	%rax, 184(%rsp)
	jmp	.LBB104_90
.LBB104_89:                             #   in Loop: Header=BB104_13 Depth=1
	movq	72(%rsp), %r15
	leaq	1(%r15), %rdx
	movq	%r12, %rsi
	callq	memcpy@PLT
.LBB104_90:                             #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, 176(%rsp)
.Ltmp1515:
	leaq	32(%rsp), %rdi
	leaq	200(%rsp), %rsi
	leaq	168(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp1516:
# %bb.91:                               #   in Loop: Header=BB104_13 Depth=1
	movq	40(%rsp), %r8
	movq	8(%rbx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB104_351
# %bb.92:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i300
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rbx), %rdi
	movl	$15, %eax
	cmpq	%r14, %rdi
	je	.LBB104_94
# %bb.93:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i300
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%r14), %rax
.LBB104_94:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i300
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	32(%rsp), %rcx
	leaq	(%rsi,%r8), %r15
	cmpq	%rax, %r15
	jbe	.LBB104_96
# %bb.95:                               #   in Loop: Header=BB104_13 Depth=1
.Ltmp1518:
	movq	%rbx, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1519:
	jmp	.LBB104_123
.LBB104_96:                             #   in Loop: Header=BB104_13 Depth=1
	testq	%r8, %r8
	je	.LBB104_123
# %bb.97:                               #   in Loop: Header=BB104_13 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB104_122
# %bb.98:                               #   in Loop: Header=BB104_13 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB104_123
.LBB104_99:                             #   in Loop: Header=BB104_13 Depth=1
	testb	$2, 89(%r15)
	je	.LBB104_113
# %bb.100:                              #   in Loop: Header=BB104_13 Depth=1
	movq	160(%rsp), %rax                 # 8-byte Reload
	cmpq	$0, (%rax)
	jne	.LBB104_113
# %bb.101:                              #   in Loop: Header=BB104_13 Depth=1
	movq	112(%r15), %rax
	movq	%rax, 360(%rsp)
	leaq	.L.str.65(%rip), %rax
	movq	%rax, 368(%rsp)
	movq	$0, 376(%rsp)
.Ltmp1597:
	leaq	352(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp1598:
# %bb.102:                              # %.noexc413
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	80(%rsp), %r12
	movq	%r12, 64(%rsp)
	movq	$0, 72(%rsp)
	movb	$0, 80(%rsp)
.Ltmp1600:
	leaq	64(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp1601:
# %bb.103:                              # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i.i410
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	16(%rsp), %rcx
	movq	%rcx, (%rsp)
	movq	64(%rsp), %rax
	cmpq	%r12, %rax
	je	.LBB104_219
# %bb.104:                              #   in Loop: Header=BB104_13 Depth=1
	movq	%rax, (%rsp)
	movq	72(%rsp), %rbp
	movups	72(%rsp), %xmm0
	movups	%xmm0, 8(%rsp)
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rcx, %rbp
	je	.LBB104_367
# %bb.105:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i417
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	1(%rbp), %r15
	leaq	16(%rsp), %rcx
	cmpq	%rcx, %rax
	je	.LBB104_220
# %bb.106:                              #   in Loop: Header=BB104_13 Depth=1
	xorl	%ecx, %ecx
	movl	$15, %edx
	testb	%cl, %cl
	je	.LBB104_221
	jmp	.LBB104_222
.LBB104_107:                            #   in Loop: Header=BB104_13 Depth=1
.Ltmp1477:
	leaq	240(%rsp), %rdi
	leaq	64(%rsp), %rsi
	callq	_ZNSt5dequeIbSaIbEE16_M_push_back_auxIJbEEEvDpOT_@PLT
.Ltmp1478:
	.p2align	4, 0x90
.LBB104_108:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm.exit.thread
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rbx), %rax
	movq	8(%rbx), %r12
	movl	$15, %ecx
	cmpq	%r14, %rax
	je	.LBB104_110
# %bb.109:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm.exit.thread
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%r14), %rcx
.LBB104_110:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm.exit.thread
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	1(%r12), %r15
	cmpq	%rcx, %r15
	jbe	.LBB104_10
# %bb.111:                              #   in Loop: Header=BB104_13 Depth=1
.Ltmp1675:
	movl	$1, %r8d
	movq	%rbx, %rdi
	movq	%r12, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1676:
# %bb.112:                              # %.noexc523
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rbx), %rax
	jmp	.LBB104_10
.LBB104_113:                            #   in Loop: Header=BB104_13 Depth=1
	movq	8(%r12), %rax
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
.Ltmp1580:
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind116detail13clean_type_idB5cxx11EPKc
.Ltmp1581:
# %bb.114:                              #   in Loop: Header=BB104_13 Depth=1
	movq	%rbp, 64(%rsp)
	movq	%rbp, %r15
	movq	32(%rsp), %rbp
	movq	40(%rsp), %r12
	cmpq	$16, %r12
	jb	.LBB104_119
# %bb.115:                              #   in Loop: Header=BB104_13 Depth=1
	testq	%r12, %r12
	js	.LBB104_369
# %bb.116:                              #   in Loop: Header=BB104_13 Depth=1
	movq	%r12, %rdi
	incq	%rdi
	js	.LBB104_345
# %bb.117:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i
                                        #   in Loop: Header=BB104_13 Depth=1
.Ltmp1583:
	callq	_Znwm@PLT
.Ltmp1584:
# %bb.118:                              # %.noexc477
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%rax, %r15
	movq	%rax, 64(%rsp)
	movq	%r12, 80(%rsp)
.LBB104_119:                            # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB104_13 Depth=1
	testq	%r12, %r12
	je	.LBB104_243
# %bb.120:                              # %._crit_edge.i.i.i
                                        #   in Loop: Header=BB104_13 Depth=1
	cmpq	$1, %r12
	jne	.LBB104_242
# %bb.121:                              #   in Loop: Header=BB104_13 Depth=1
	movzbl	(%rbp), %eax
	movb	%al, (%r15)
	jmp	.LBB104_243
.LBB104_122:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB104_123:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r15)
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_125
# %bb.124:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i308
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	48(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_125:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit310
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	leaq	216(%rsp), %r15
	je	.LBB104_127
# %bb.126:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i311
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	184(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_127:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit313
                                        #   in Loop: Header=BB104_13 Depth=1
.Ltmp1521:
	leaq	344(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1522:
# %bb.128:                              # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	200(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB104_130
# %bb.129:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i314
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	216(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_130:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit316
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	leaq	48(%rsp), %r15
	je	.LBB104_132
# %bb.131:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i317
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_132:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit319
                                        #   in Loop: Header=BB104_13 Depth=1
.Ltmp1524:
	leaq	376(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1525:
	jmp	.LBB104_12
.LBB104_133:                            #   in Loop: Header=BB104_13 Depth=1
.Ltmp1480:
	leaq	240(%rsp), %rdi
	leaq	64(%rsp), %rsi
	callq	_ZNSt5dequeIbSaIbEE16_M_push_back_auxIJbEEEvDpOT_@PLT
.Ltmp1481:
	jmp	.LBB104_12
.LBB104_134:                            #   in Loop: Header=BB104_13 Depth=1
	movl	$512, %esi                      # imm = 0x200
	callq	_ZdlPvm@PLT
	movq	312(%rsp), %rax
	leaq	-8(%rax), %rcx
	movq	%rcx, 312(%rsp)
	movq	-8(%rax), %rax
	movq	%rax, 296(%rsp)
	leaq	512(%rax), %rcx
	movq	%rcx, 304(%rsp)
	addq	$511, %rax                      # imm = 0x1FF
	movq	%rax, 288(%rsp)
	incq	%r13
	jmp	.LBB104_13
.LBB104_135:                            #   in Loop: Header=BB104_13 Depth=1
.Ltmp1483:
	leaq	240(%rsp), %rdi
	leaq	64(%rsp), %rsi
	callq	_ZNSt5dequeIbSaIbEE16_M_push_back_auxIJbEEEvDpOT_@PLT
.Ltmp1484:
	jmp	.LBB104_12
.LBB104_136:                            #   in Loop: Header=BB104_13 Depth=1
	movq	312(%rsp), %rax
	movq	-8(%rax), %rax
	movl	$512, %ecx                      # imm = 0x200
	addq	%rcx, %rax
	cmpb	$1, -1(%rax)
	je	.LBB104_140
.LBB104_137:                            #   in Loop: Header=BB104_13 Depth=1
	movq	160(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rax
	movq	152(%rsp), %rdx                 # 8-byte Reload
	movq	24(%rdx), %rcx
	movq	32(%rdx), %rdx
	subq	%rcx, %rdx
	sarq	$5, %rdx
	cmpq	%rdx, %rax
	jae	.LBB104_143
# %bb.138:                              #   in Loop: Header=BB104_13 Depth=1
	shlq	$5, %rax
	testb	$1, 24(%rcx,%rax)
	je	.LBB104_140
	jmp	.LBB104_143
	.p2align	4, 0x90
.LBB104_139:                            #   in Loop: Header=BB104_140 Depth=2
	movzbl	1(%r13), %ebp
	incq	%r13
.LBB104_140:                            #   Parent Loop BB104_13 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	testb	$-65, %bpl
	jne	.LBB104_139
# %bb.141:                              # %.critedge4
                                        #   in Loop: Header=BB104_13 Depth=1
	xorl	%eax, %eax
	cmpb	$64, %bpl
	sete	%al
	addq	%rax, %r13
	jmp	.LBB104_151
	.p2align	4, 0x90
.LBB104_142:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit512
                                        #   in Loop: Header=BB104_143 Depth=2
	incq	%r13
	movb	%bpl, (%rax,%r15)
	movq	%r12, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, 1(%rax,%r15)
	movzbl	(%r13), %ebp
	leaq	48(%rsp), %r15
.LBB104_143:                            #   Parent Loop BB104_13 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	testb	$-65, %bpl
	je	.LBB104_156
# %bb.144:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i509
                                        #   in Loop: Header=BB104_143 Depth=2
	movq	(%rbx), %rax
	movl	$15, %ecx
	cmpq	%r14, %rax
	je	.LBB104_146
# %bb.145:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i509
                                        #   in Loop: Header=BB104_143 Depth=2
	movq	(%r14), %rcx
.LBB104_146:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i509
                                        #   in Loop: Header=BB104_143 Depth=2
	movq	8(%rbx), %r15
	leaq	1(%r15), %r12
	cmpq	%rcx, %r12
	jbe	.LBB104_142
# %bb.147:                              #   in Loop: Header=BB104_143 Depth=2
.Ltmp1486:
	movl	$1, %r8d
	movq	%rbx, %rdi
	movq	%r15, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1487:
# %bb.148:                              # %.noexc511
                                        #   in Loop: Header=BB104_143 Depth=2
	movq	(%rbx), %rax
	jmp	.LBB104_142
	.p2align	4, 0x90
.LBB104_149:                            # %.noexc515
                                        #   in Loop: Header=BB104_151 Depth=2
	movq	(%rbx), %rax
.LBB104_150:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit516
                                        #   in Loop: Header=BB104_151 Depth=2
	incq	%r13
	movb	%bpl, (%rax,%r15)
	movq	%r12, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, 1(%rax,%r15)
	leaq	48(%rsp), %r15
.LBB104_151:                            #   Parent Loop BB104_13 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movzbl	(%r13), %ebp
	testb	$-65, %bpl
	je	.LBB104_12
# %bb.152:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i513
                                        #   in Loop: Header=BB104_151 Depth=2
	movq	(%rbx), %rax
	movl	$15, %ecx
	cmpq	%r14, %rax
	je	.LBB104_154
# %bb.153:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i513
                                        #   in Loop: Header=BB104_151 Depth=2
	movq	(%r14), %rcx
.LBB104_154:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i513
                                        #   in Loop: Header=BB104_151 Depth=2
	movq	8(%rbx), %r15
	leaq	1(%r15), %r12
	cmpq	%rcx, %r12
	jbe	.LBB104_150
# %bb.155:                              #   in Loop: Header=BB104_151 Depth=2
.Ltmp1489:
	movl	$1, %r8d
	movq	%rbx, %rdi
	movq	%r15, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1490:
	jmp	.LBB104_149
.LBB104_156:                            # %.critedge
                                        #   in Loop: Header=BB104_13 Depth=1
	xorl	%eax, %eax
	cmpb	$64, %bpl
	sete	%al
	addq	%rax, %r13
	movzbl	(%r13), %eax
	testb	$-65, %al
	je	.LBB104_12
	.p2align	4, 0x90
.LBB104_157:                            #   Parent Loop BB104_13 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	incq	%r13
	movzbl	(%r13), %eax
	testb	$-65, %al
	jne	.LBB104_157
	jmp	.LBB104_12
.LBB104_158:                            #   in Loop: Header=BB104_13 Depth=1
	movb	$32, 2(%rax,%rsi)
	movw	$15648, (%rax,%rsi)             # imm = 0x3D20
.LBB104_159:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r15)
	movq	160(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rax
	movq	152(%rsp), %rcx                 # 8-byte Reload
	movq	24(%rcx), %rcx
	shlq	$5, %rax
	movq	8(%rcx,%rax), %rsi
.Ltmp1641:
	leaq	64(%rsp), %rdi
	callq	_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc
.Ltmp1642:
# %bb.160:                              #   in Loop: Header=BB104_13 Depth=1
	movq	72(%rsp), %r8
	movq	8(%rbx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB104_357
# %bb.161:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i254
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rbx), %rdi
	movl	$15, %eax
	cmpq	%r14, %rdi
	je	.LBB104_163
# %bb.162:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i254
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%r14), %rax
.LBB104_163:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i254
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	64(%rsp), %rcx
	leaq	(%rsi,%r8), %r15
	cmpq	%rax, %r15
	jbe	.LBB104_165
# %bb.164:                              #   in Loop: Header=BB104_13 Depth=1
.Ltmp1644:
	movq	%rbx, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1645:
	jmp	.LBB104_254
.LBB104_165:                            #   in Loop: Header=BB104_13 Depth=1
	testq	%r8, %r8
	je	.LBB104_254
# %bb.166:                              #   in Loop: Header=BB104_13 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB104_253
# %bb.167:                              #   in Loop: Header=BB104_13 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB104_254
.LBB104_168:                            #   in Loop: Header=BB104_13 Depth=1
	movb	$32, 2(%rax,%rsi)
	movw	$11306, (%rax,%rsi)             # imm = 0x2C2A
.LBB104_169:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r15)
	movq	160(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rbp
	leaq	48(%rsp), %r15
.LBB104_170:                            # %thread-pre-split
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	152(%rsp), %rcx                 # 8-byte Reload
	movq	24(%rcx), %rax
	movq	32(%rcx), %rcx
	subq	%rax, %rcx
	sarq	$5, %rcx
	cmpq	%rcx, %rbp
	jae	.LBB104_177
# %bb.171:                              #   in Loop: Header=BB104_13 Depth=1
	movq	%rbp, %rcx
	shlq	$5, %rcx
	movq	(%rax,%rcx), %r12
	testq	%r12, %r12
	je	.LBB104_177
# %bb.172:                              #   in Loop: Header=BB104_13 Depth=1
	movq	%r12, %rdi
	callq	strlen@PLT
	movq	8(%rbx), %rsi
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rcx
	cmpq	%rax, %rcx
	jb	.LBB104_347
# %bb.173:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i203
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rbx), %rdi
	movl	$15, %ecx
	cmpq	%r14, %rdi
	je	.LBB104_175
# %bb.174:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i203
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%r14), %rcx
.LBB104_175:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i203
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	(%rsi,%rax), %r15
	cmpq	%rcx, %r15
	jbe	.LBB104_193
# %bb.176:                              #   in Loop: Header=BB104_13 Depth=1
.Ltmp1654:
	movq	%rbx, %rdi
	xorl	%edx, %edx
	movq	%r12, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1655:
	jmp	.LBB104_252
.LBB104_177:                            #   in Loop: Header=BB104_13 Depth=1
	testq	%rbp, %rbp
	setne	%cl
	movq	152(%rsp), %rax                 # 8-byte Reload
	movzwl	89(%rax), %eax
	testb	$16, %al
	sete	%dl
	orb	%cl, %dl
	je	.LBB104_181
# %bb.178:                              #   in Loop: Header=BB104_13 Depth=1
	movzwl	%ax, %eax
	btl	$4, %eax
	sbbq	$0, %rbp
	cmpq	$10, %rbp
	jae	.LBB104_186
# %bb.179:                              # %.thread.i
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, 32(%rsp)
	movq	%r15, %rax
.LBB104_180:                            #   in Loop: Header=BB104_13 Depth=1
	movb	$0, 48(%rsp)
	movl	$1, %r12d
	movq	%rax, %r15
	jmp	.LBB104_288
.LBB104_181:                            #   in Loop: Header=BB104_13 Depth=1
	movq	8(%rbx), %rsi
	movq	%rsi, %rax
	andq	$-4, %rax
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-3, %rcx
	cmpq	%rcx, %rax
	je	.LBB104_347
# %bb.182:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i211
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rbx), %rax
	movl	$15, %ecx
	cmpq	%r14, %rax
	je	.LBB104_184
# %bb.183:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i211
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%r14), %rcx
.LBB104_184:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i211
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	4(%rsi), %r15
	cmpq	%rcx, %r15
	jbe	.LBB104_192
# %bb.185:                              #   in Loop: Header=BB104_13 Depth=1
.Ltmp1656:
	movl	$4, %r8d
	movq	%rbx, %rdi
	xorl	%edx, %edx
	leaq	.L.str.103(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1657:
	jmp	.LBB104_252
.LBB104_186:                            # %.lr.ph.i.i.preheader
                                        #   in Loop: Header=BB104_13 Depth=1
	movl	$4, %esi
	movq	%rbp, %rcx
	.p2align	4, 0x90
.LBB104_187:                            # %.lr.ph.i.i
                                        #   Parent Loop BB104_13 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpq	$99, %rcx
	jbe	.LBB104_280
# %bb.188:                              #   in Loop: Header=BB104_187 Depth=2
	cmpq	$999, %rcx                      # imm = 0x3E7
	jbe	.LBB104_284
# %bb.189:                              #   in Loop: Header=BB104_187 Depth=2
	cmpq	$10000, %rcx                    # imm = 0x2710
	jb	.LBB104_281
# %bb.190:                              #   in Loop: Header=BB104_187 Depth=2
	movq	%rcx, %rax
	movabsq	$3777893186295716171, %rdx      # imm = 0x346DC5D63886594B
	mulq	%rdx
	shrq	$11, %rdx
	addl	$4, %esi
	cmpq	$99999, %rcx                    # imm = 0x1869F
	movq	%rdx, %rcx
	ja	.LBB104_187
# %bb.191:                              # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit.i.loopexit
                                        #   in Loop: Header=BB104_13 Depth=1
	addl	$-3, %esi
	movl	%esi, %r12d
	movq	%r15, 32(%rsp)
	cmpl	$16, %esi
	jae	.LBB104_282
	jmp	.LBB104_285
.LBB104_192:                            #   in Loop: Header=BB104_13 Depth=1
	movl	$1718379891, (%rax,%rsi)        # imm = 0x666C6573
	jmp	.LBB104_252
.LBB104_193:                            #   in Loop: Header=BB104_13 Depth=1
	testq	%rax, %rax
	je	.LBB104_252
# %bb.194:                              #   in Loop: Header=BB104_13 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %rax
	jne	.LBB104_251
# %bb.195:                              #   in Loop: Header=BB104_13 Depth=1
	movzbl	(%r12), %eax
	movb	%al, (%rdi)
	jmp	.LBB104_252
.LBB104_196:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i348.thread
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%rbp, %rsi
	movq	72(%rsp), %rbp
	leaq	1(%rbp), %r12
	movq	%r15, %rdi
	movq	%r12, %rdx
	callq	memcpy@PLT
	movq	%rbp, 8(%rsp)
	movq	%r15, %rax
.LBB104_197:                            #   in Loop: Header=BB104_13 Depth=1
	movb	$1, %cl
	movl	$15, %edx
	testb	%cl, %cl
	jne	.LBB104_199
.LBB104_198:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i349
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	16(%rsp), %rdx
.LBB104_199:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i349
                                        #   in Loop: Header=BB104_13 Depth=1
	cmpq	%rdx, %r12
	jbe	.LBB104_201
# %bb.200:                              #   in Loop: Header=BB104_13 Depth=1
.Ltmp1550:
	movl	$1, %r8d
	movq	%rsp, %rdi
	movq	%rbp, %rsi
	xorl	%edx, %edx
	leaq	.L.str.95(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1551:
	jmp	.LBB104_202
.LBB104_201:                            #   in Loop: Header=BB104_13 Depth=1
	movb	$46, (%rax,%rbp)
.LBB104_202:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i353
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%r12, 8(%rsp)
	movq	(%rsp), %rax
	movb	$0, (%rax,%r12)
	leaq	216(%rsp), %rdi
	movq	%rdi, 200(%rsp)
	movq	(%rsp), %rax
	leaq	16(%rsp), %rbp
	cmpq	%rbp, %rax
	je	.LBB104_204
# %bb.203:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i354
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%rax, 200(%rsp)
	movq	8(%rsp), %r12
	movq	16(%rsp), %rax
	movq	%rax, 216(%rsp)
	jmp	.LBB104_205
.LBB104_204:                            #   in Loop: Header=BB104_13 Depth=1
	movq	8(%rsp), %r12
	leaq	1(%r12), %rdx
	movq	%rbp, %rsi
	callq	memcpy@PLT
.LBB104_205:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%r12, 208(%rsp)
	movq	%rbp, (%rsp)
	movq	$0, 8(%rsp)
	movb	$0, 16(%rsp)
	movq	416(%rsp), %rax                 # 8-byte Reload
	movq	%rax, 328(%rsp)
	leaq	.L.str.108(%rip), %rax
	movq	%rax, 336(%rsp)
	movq	$0, 344(%rsp)
.Ltmp1553:
	leaq	320(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp1554:
# %bb.206:                              # %.noexc366
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	80(%rsp), %r12
	movq	%r12, 64(%rsp)
	movq	$0, 72(%rsp)
	movb	$0, 80(%rsp)
.Ltmp1556:
	leaq	64(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp1557:
	leaq	184(%rsp), %rdi
# %bb.207:                              # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i.i363
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%rdi, 168(%rsp)
	movq	64(%rsp), %rax
	cmpq	%r12, %rax
	je	.LBB104_209
# %bb.208:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i364
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%rax, 168(%rsp)
	movq	72(%rsp), %r15
	movq	80(%rsp), %rax
	movq	%rax, 184(%rsp)
	jmp	.LBB104_210
.LBB104_209:                            #   in Loop: Header=BB104_13 Depth=1
	movq	72(%rsp), %r15
	leaq	1(%r15), %rdx
	movq	%r12, %rsi
	callq	memcpy@PLT
.LBB104_210:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, 176(%rsp)
.Ltmp1559:
	leaq	32(%rsp), %rdi
	leaq	200(%rsp), %rsi
	leaq	168(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp1560:
# %bb.211:                              #   in Loop: Header=BB104_13 Depth=1
	movq	40(%rsp), %r8
	movq	8(%rbx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB104_359
# %bb.212:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i370
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rbx), %rdi
	movl	$15, %eax
	cmpq	%r14, %rdi
	je	.LBB104_214
# %bb.213:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i370
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%r14), %rax
.LBB104_214:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i370
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	32(%rsp), %rcx
	leaq	(%rsi,%r8), %r15
	cmpq	%rax, %r15
	jbe	.LBB104_216
# %bb.215:                              #   in Loop: Header=BB104_13 Depth=1
.Ltmp1562:
	movq	%rbx, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1563:
	jmp	.LBB104_270
.LBB104_216:                            #   in Loop: Header=BB104_13 Depth=1
	testq	%r8, %r8
	je	.LBB104_270
# %bb.217:                              #   in Loop: Header=BB104_13 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB104_269
# %bb.218:                              #   in Loop: Header=BB104_13 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB104_270
.LBB104_219:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i417.thread
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	72(%rsp), %rbp
	leaq	1(%rbp), %r15
	movq	%rcx, %rdi
	movq	%r12, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
	movq	%rbp, 8(%rsp)
	leaq	16(%rsp), %rax
.LBB104_220:                            #   in Loop: Header=BB104_13 Depth=1
	movb	$1, %cl
	movl	$15, %edx
	testb	%cl, %cl
	jne	.LBB104_222
.LBB104_221:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i418
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	16(%rsp), %rdx
.LBB104_222:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i418
                                        #   in Loop: Header=BB104_13 Depth=1
	cmpq	%rdx, %r15
	jbe	.LBB104_224
# %bb.223:                              #   in Loop: Header=BB104_13 Depth=1
.Ltmp1606:
	movl	$1, %r8d
	movq	%rsp, %rdi
	movq	%rbp, %rsi
	xorl	%edx, %edx
	leaq	.L.str.95(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1607:
	jmp	.LBB104_225
.LBB104_224:                            #   in Loop: Header=BB104_13 Depth=1
	movb	$46, (%rax,%rbp)
.LBB104_225:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i422
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, 8(%rsp)
	movq	(%rsp), %rax
	movb	$0, (%rax,%r15)
	leaq	216(%rsp), %rdi
	movq	%rdi, 200(%rsp)
	movq	(%rsp), %rax
	leaq	16(%rsp), %r12
	cmpq	%r12, %rax
	je	.LBB104_227
# %bb.226:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i423
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%rax, 200(%rsp)
	movq	8(%rsp), %r15
	movq	16(%rsp), %rax
	movq	%rax, 216(%rsp)
	jmp	.LBB104_228
.LBB104_227:                            #   in Loop: Header=BB104_13 Depth=1
	movq	8(%rsp), %r15
	leaq	1(%r15), %rdx
	movq	%r12, %rsi
	callq	memcpy@PLT
.LBB104_228:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, 208(%rsp)
	movq	%r12, (%rsp)
	movq	$0, 8(%rsp)
	movb	$0, 16(%rsp)
	movq	152(%rsp), %rax                 # 8-byte Reload
	movq	112(%rax), %rax
	movq	%rax, 328(%rsp)
	leaq	.L.str.108(%rip), %rax
	movq	%rax, 336(%rsp)
	movq	$0, 344(%rsp)
.Ltmp1609:
	leaq	320(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp1610:
# %bb.229:                              # %.noexc435
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	80(%rsp), %r15
	movq	%r15, 64(%rsp)
	movq	$0, 72(%rsp)
	movb	$0, 80(%rsp)
.Ltmp1612:
	leaq	64(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp1613:
	leaq	184(%rsp), %rdi
# %bb.230:                              # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i.i432
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%rdi, 168(%rsp)
	movq	64(%rsp), %rax
	cmpq	%r15, %rax
	je	.LBB104_232
# %bb.231:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i433
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%rax, 168(%rsp)
	movq	72(%rsp), %r15
	movq	80(%rsp), %rax
	movq	%rax, 184(%rsp)
	jmp	.LBB104_233
.LBB104_232:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, %rsi
	movq	72(%rsp), %r15
	leaq	1(%r15), %rdx
	callq	memcpy@PLT
.LBB104_233:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, 176(%rsp)
.Ltmp1615:
	leaq	32(%rsp), %rdi
	leaq	200(%rsp), %rsi
	leaq	168(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp1616:
# %bb.234:                              #   in Loop: Header=BB104_13 Depth=1
	movq	40(%rsp), %r8
	movq	8(%rbx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB104_361
# %bb.235:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i439
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rbx), %rdi
	movl	$15, %eax
	cmpq	%r14, %rdi
	je	.LBB104_237
# %bb.236:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i439
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%r14), %rax
.LBB104_237:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i439
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	32(%rsp), %rcx
	leaq	(%rsi,%r8), %r15
	cmpq	%rax, %r15
	jbe	.LBB104_239
# %bb.238:                              #   in Loop: Header=BB104_13 Depth=1
.Ltmp1618:
	movq	%rbx, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1619:
	jmp	.LBB104_320
.LBB104_239:                            #   in Loop: Header=BB104_13 Depth=1
	testq	%r8, %r8
	je	.LBB104_320
# %bb.240:                              #   in Loop: Header=BB104_13 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB104_319
# %bb.241:                              #   in Loop: Header=BB104_13 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB104_320
.LBB104_242:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, %rdi
	movq	%rbp, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB104_243:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%r12, 72(%rsp)
	movb	$0, (%r15,%r12)
	movq	72(%rsp), %r8
	movq	8(%rbx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB104_363
# %bb.244:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i478
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rbx), %rdi
	movl	$15, %eax
	cmpq	%r14, %rdi
	leaq	80(%rsp), %r12
	je	.LBB104_246
# %bb.245:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i478
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%r14), %rax
.LBB104_246:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i478
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	64(%rsp), %rcx
	leaq	(%rsi,%r8), %r15
	cmpq	%rax, %r15
	jbe	.LBB104_248
# %bb.247:                              #   in Loop: Header=BB104_13 Depth=1
.Ltmp1586:
	movq	%rbx, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1587:
	jmp	.LBB104_331
.LBB104_248:                            #   in Loop: Header=BB104_13 Depth=1
	testq	%r8, %r8
	je	.LBB104_331
# %bb.249:                              #   in Loop: Header=BB104_13 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB104_330
# %bb.250:                              #   in Loop: Header=BB104_13 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB104_331
.LBB104_251:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%r12, %rsi
	movq	%rax, %rdx
	callq	memcpy@PLT
.LBB104_252:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit210
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r15)
	jmp	.LBB104_312
.LBB104_253:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB104_254:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r15)
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_256
# %bb.255:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i262
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	80(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_256:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit264
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	48(%rsp), %r15
.LBB104_257:                            #   in Loop: Header=BB104_13 Depth=1
	movq	152(%rsp), %rax                 # 8-byte Reload
	movzwl	96(%rax), %eax
	testq	%rax, %rax
	je	.LBB104_266
# %bb.258:                              #   in Loop: Header=BB104_13 Depth=1
	movq	160(%rsp), %rcx                 # 8-byte Reload
	movq	(%rcx), %rcx
	incq	%rcx
	cmpq	%rax, %rcx
	jne	.LBB104_266
# %bb.259:                              #   in Loop: Header=BB104_13 Depth=1
	movq	8(%rbx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	addq	$-3, %rax
	cmpq	%rax, %rsi
	jg	.LBB104_347
# %bb.260:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i268
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rbx), %rax
	movl	$15, %ecx
	cmpq	%r14, %rax
	je	.LBB104_262
# %bb.261:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i268
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%r14), %rcx
.LBB104_262:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i268
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	3(%rsi), %r15
	cmpq	%rcx, %r15
	jbe	.LBB104_264
# %bb.263:                              #   in Loop: Header=BB104_13 Depth=1
.Ltmp1650:
	movl	$3, %r8d
	movq	%rbx, %rdi
	xorl	%edx, %edx
	leaq	.L.str.106(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1651:
	jmp	.LBB104_265
.LBB104_264:                            #   in Loop: Header=BB104_13 Depth=1
	movb	$47, 2(%rax,%rsi)
	movw	$8236, (%rax,%rsi)              # imm = 0x202C
.LBB104_265:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit275
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r15)
	leaq	48(%rsp), %r15
.LBB104_266:                            #   in Loop: Header=BB104_13 Depth=1
	testb	$1, 232(%rsp)                   # 1-byte Folded Reload
	je	.LBB104_268
# %bb.267:                              #   in Loop: Header=BB104_13 Depth=1
	movb	$1, %al
	movq	%rax, 232(%rsp)                 # 8-byte Spill
	incq	%r13
	jmp	.LBB104_13
.LBB104_268:                            #   in Loop: Header=BB104_13 Depth=1
	movq	160(%rsp), %rax                 # 8-byte Reload
	incq	(%rax)
	movq	$0, 232(%rsp)                   # 8-byte Folded Spill
	incq	%r13
	jmp	.LBB104_13
.LBB104_269:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB104_270:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r15)
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_272
# %bb.271:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i378
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	48(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_272:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit380
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	leaq	216(%rsp), %r15
	je	.LBB104_274
# %bb.273:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i381
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	184(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_274:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit383
                                        #   in Loop: Header=BB104_13 Depth=1
.Ltmp1565:
	leaq	344(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1566:
# %bb.275:                              # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit384
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	200(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB104_277
# %bb.276:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i385
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	216(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_277:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit387
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	leaq	48(%rsp), %r15
	je	.LBB104_279
# %bb.278:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i388
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_279:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit390
                                        #   in Loop: Header=BB104_13 Depth=1
.Ltmp1568:
	leaq	376(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1569:
	jmp	.LBB104_12
.LBB104_280:                            #   in Loop: Header=BB104_13 Depth=1
	addl	$-2, %esi
.LBB104_281:                            # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit.i
                                        #   in Loop: Header=BB104_13 Depth=1
	movl	%esi, %r12d
	movq	%r15, 32(%rsp)
	cmpl	$16, %esi
	jb	.LBB104_285
.LBB104_282:                            # %.noexc.i220
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	1(%r12), %rdi
.Ltmp1658:
	callq	_Znwm@PLT
.Ltmp1659:
# %bb.283:                              # %.noexc221
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%rax, %r15
	movq	%rax, 32(%rsp)
	movq	%r12, 48(%rsp)
	jmp	.LBB104_287
.LBB104_284:                            #   in Loop: Header=BB104_13 Depth=1
	decl	%esi
	movl	%esi, %r12d
	movq	%r15, 32(%rsp)
	cmpl	$16, %esi
	jae	.LBB104_282
.LBB104_285:                            #   in Loop: Header=BB104_13 Depth=1
	testq	%r12, %r12
	je	.LBB104_288
# %bb.286:                              #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, %rax
	cmpl	$1, %r12d
	je	.LBB104_180
.LBB104_287:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, %rdi
	xorl	%esi, %esi
	movq	%r12, %rdx
	callq	memset@PLT
.LBB104_288:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%r12, 40(%rsp)
	movb	$0, (%r15,%r12)
	movq	32(%rsp), %rcx
	cmpq	$100, %rbp
	jb	.LBB104_293
# %bb.289:                              # %.lr.ph.preheader.i.i
                                        #   in Loop: Header=BB104_13 Depth=1
	movl	40(%rsp), %esi
	addl	$-2, %esi
	leaq	80(%rsp), %r15
	movabsq	$2951479051793528259, %r9       # imm = 0x28F5C28F5C28F5C3
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %r10
	.p2align	4, 0x90
.LBB104_290:                            # %.lr.ph.i4.i
                                        #   Parent Loop BB104_13 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	leal	1(%rsi), %edi
	movq	%rbp, %rax
	shrq	$2, %rax
	mulq	%r9
	shrq	$2, %rdx
	imull	$100, %edx, %eax
	movl	%ebp, %r8d
	subl	%eax, %r8d
	movzbl	(%r10,%r8,2), %eax
	movzbl	1(%r10,%r8,2), %r8d
	movb	%r8b, (%rcx,%rdi)
	movl	%esi, %edi
	movb	%al, (%rcx,%rdi)
	addl	$-2, %esi
	cmpq	$9999, %rbp                     # imm = 0x270F
	movq	%rdx, %rbp
	ja	.LBB104_290
# %bb.291:                              # %._crit_edge.i.i219
                                        #   in Loop: Header=BB104_13 Depth=1
	cmpq	$10, %rdx
	jb	.LBB104_294
.LBB104_292:                            #   in Loop: Header=BB104_13 Depth=1
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %rsi
	movzbl	(%rsi,%rdx,2), %eax
	movzbl	1(%rsi,%rdx,2), %edx
	movb	%dl, 1(%rcx)
	jmp	.LBB104_295
.LBB104_293:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%rbp, %rdx
	leaq	80(%rsp), %r15
	cmpq	$10, %rdx
	jae	.LBB104_292
.LBB104_294:                            #   in Loop: Header=BB104_13 Depth=1
	orb	$48, %dl
	movl	%edx, %eax
.LBB104_295:                            #   in Loop: Header=BB104_13 Depth=1
	movb	%al, (%rcx)
.Ltmp1661:
	movl	$3, %r8d
	leaq	32(%rsp), %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	leaq	.L.str.104(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.Ltmp1662:
# %bb.296:                              # %.noexc223
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, 64(%rsp)
	movq	(%rax), %rcx
	movq	%r15, %rdi
	movq	%rax, %r15
	addq	$16, %r15
	cmpq	%r15, %rcx
	je	.LBB104_298
# %bb.297:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i222
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%rcx, 64(%rsp)
	movq	16(%rax), %rcx
	movq	%rcx, 80(%rsp)
	movq	8(%rax), %r12
	jmp	.LBB104_299
.LBB104_298:                            #   in Loop: Header=BB104_13 Depth=1
	movq	8(%rax), %r12
	leaq	1(%r12), %rdx
	movq	%r15, %rsi
	movq	%rax, %rbp
	callq	memcpy@PLT
	movq	%rbp, %rax
.LBB104_299:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%r12, 72(%rsp)
	movq	%r15, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	72(%rsp), %r8
	movq	8(%rbx), %rsi
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	subq	%rsi, %rax
	cmpq	%r8, %rax
	jb	.LBB104_355
# %bb.300:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rbx), %rdi
	movl	$15, %eax
	cmpq	%r14, %rdi
	je	.LBB104_302
# %bb.301:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%r14), %rax
.LBB104_302:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	64(%rsp), %rcx
	leaq	(%rsi,%r8), %r15
	cmpq	%rax, %r15
	jbe	.LBB104_304
# %bb.303:                              #   in Loop: Header=BB104_13 Depth=1
.Ltmp1664:
	movq	%rbx, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1665:
	jmp	.LBB104_308
.LBB104_304:                            #   in Loop: Header=BB104_13 Depth=1
	testq	%r8, %r8
	je	.LBB104_308
# %bb.305:                              #   in Loop: Header=BB104_13 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB104_307
# %bb.306:                              #   in Loop: Header=BB104_13 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB104_308
.LBB104_307:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB104_308:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r15)
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_310
# %bb.309:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i226
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	80(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_310:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit228
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_312
# %bb.311:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i229
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	48(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_312:                            #   in Loop: Header=BB104_13 Depth=1
	movq	8(%rbx), %rsi
	movq	%rsi, %rax
	andq	$-2, %rax
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	decq	%rcx
	cmpq	%rcx, %rax
	je	.LBB104_347
# %bb.313:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i238
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rbx), %rax
	movl	$15, %ecx
	cmpq	%r14, %rax
	je	.LBB104_315
# %bb.314:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i238
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%r14), %rcx
.LBB104_315:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i238
                                        #   in Loop: Header=BB104_13 Depth=1
	leaq	2(%rsi), %r15
	cmpq	%rcx, %r15
	jbe	.LBB104_317
# %bb.316:                              #   in Loop: Header=BB104_13 Depth=1
.Ltmp1667:
	movl	$2, %r8d
	movq	%rbx, %rdi
	xorl	%edx, %edx
	leaq	.L.str.6(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1668:
	jmp	.LBB104_318
.LBB104_317:                            #   in Loop: Header=BB104_13 Depth=1
	movw	$8250, (%rax,%rsi)              # imm = 0x203A
.LBB104_318:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit245
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r15)
	movq	$0, 232(%rsp)                   # 8-byte Folded Spill
	jmp	.LBB104_11
.LBB104_319:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB104_320:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r15)
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_322
# %bb.321:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i447
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	48(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_322:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit449
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	leaq	216(%rsp), %r15
	je	.LBB104_324
# %bb.323:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i450
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	184(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_324:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit452
                                        #   in Loop: Header=BB104_13 Depth=1
.Ltmp1621:
	leaq	344(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1622:
# %bb.325:                              # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit453
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	200(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB104_327
# %bb.326:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i454
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	216(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_327:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit456
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	leaq	48(%rsp), %r15
	je	.LBB104_329
# %bb.328:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i457
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_329:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit459
                                        #   in Loop: Header=BB104_13 Depth=1
.Ltmp1624:
	leaq	376(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1625:
	jmp	.LBB104_12
.LBB104_330:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB104_331:                            #   in Loop: Header=BB104_13 Depth=1
	movq	%r15, 8(%rbx)
	movq	(%rbx), %rax
	movb	$0, (%rax,%r15)
	movq	64(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB104_333
# %bb.332:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i486
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	80(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_333:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit488
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %r15
	cmpq	%r15, %rdi
	je	.LBB104_12
# %bb.334:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i489
                                        #   in Loop: Header=BB104_13 Depth=1
	movq	48(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	incq	%r13
	jmp	.LBB104_13
.LBB104_336:
	movq	384(%rsp), %rdi
	leaq	400(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_338
# %bb.337:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	400(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_338:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	240(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB104_344
# %bb.339:
	movq	280(%rsp), %r14
	movq	312(%rsp), %r15
	leaq	8(%r15), %rax
	cmpq	%rax, %r14
	jae	.LBB104_343
# %bb.340:                              # %.lr.ph.i.i.i.i.preheader
	addq	$-8, %r14
	.p2align	4, 0x90
.LBB104_341:                            # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%r14), %rdi
	addq	$8, %r14
	movl	$512, %esi                      # imm = 0x200
	callq	_ZdlPvm@PLT
	cmpq	%r15, %r14
	jb	.LBB104_341
# %bb.342:                              # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.loopexit.i.i.i
	movq	240(%rsp), %rdi
.LBB104_343:                            # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.i.i.i
	movq	248(%rsp), %rsi
	shlq	$3, %rsi
	callq	_ZdlPvm@PLT
.LBB104_344:                            # %_ZNSt5stackIbSt5dequeIbSaIbEEED2Ev.exit
	movq	%rbx, %rax
	addq	$440, %rsp                      # imm = 0x1B8
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB104_345:                            # %.noexc6.i.i
	.cfi_def_cfa_offset 496
.Ltmp1592:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp1593:
# %bb.346:                              # %.noexc476
.LBB104_347:                            # %.invoke
.Ltmp1672:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1673:
# %bb.348:                              # %.cont
.LBB104_349:
.Ltmp1636:
	leaq	.L.str.107(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1637:
# %bb.350:
.LBB104_351:
.Ltmp1527:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1528:
# %bb.352:                              # %.noexc305
.LBB104_353:
.Ltmp1503:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1504:
# %bb.354:                              # %.noexc287
.LBB104_355:
.Ltmp1669:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1670:
# %bb.356:                              # %.noexc224
.LBB104_357:
.Ltmp1647:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1648:
# %bb.358:                              # %.noexc259
.LBB104_359:
.Ltmp1571:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1572:
# %bb.360:                              # %.noexc375
.LBB104_361:
.Ltmp1627:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1628:
# %bb.362:                              # %.noexc444
.LBB104_363:
.Ltmp1589:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1590:
# %bb.364:                              # %.noexc483
.LBB104_365:
.Ltmp1547:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1548:
# %bb.366:                              # %.noexc356
.LBB104_367:
.Ltmp1603:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1604:
# %bb.368:                              # %.noexc425
.LBB104_369:                            # %.noexc.i.i
.Ltmp1594:
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1595:
# %bb.370:                              # %.noexc475
.LBB104_371:
.Ltmp1476:
	movq	%rax, %r15
	leaq	64(%rsp), %rdi
	callq	_ZNSt5dequeIbSaIbEED2Ev@PLT
	jmp	.LBB104_494
.LBB104_372:
.Ltmp1473:
	movq	%rax, %r15
	leaq	64(%rsp), %rdi
	callq	_ZNSt11_Deque_baseIbSaIbEED2Ev@PLT
	jmp	.LBB104_494
.LBB104_373:
.Ltmp1660:
	movq	%rax, %r15
	movq	144(%rsp), %r14                 # 8-byte Reload
	jmp	.LBB104_491
.LBB104_374:                            # %.loopexit567
.Ltmp1585:
	jmp	.LBB104_488
.LBB104_375:                            # %.loopexit572
.Ltmp1588:
	jmp	.LBB104_387
.LBB104_376:                            # %.loopexit577
.Ltmp1608:
	movq	%rax, %r15
	jmp	.LBB104_405
.LBB104_377:                            # %.loopexit582
.Ltmp1620:
	jmp	.LBB104_391
.LBB104_378:                            # %.loopexit.split-lp578
.Ltmp1605:
	movq	%rax, %r15
	jmp	.LBB104_405
.LBB104_379:                            # %.loopexit557
.Ltmp1552:
	movq	%rax, %r15
	jmp	.LBB104_431
.LBB104_380:                            # %.loopexit562
.Ltmp1564:
	jmp	.LBB104_414
.LBB104_381:                            # %.loopexit587
.Ltmp1646:
	jmp	.LBB104_436
.LBB104_382:                            # %.loopexit592
.Ltmp1666:
	jmp	.LBB104_440
.LBB104_383:                            # %.loopexit.split-lp558
.Ltmp1549:
	movq	%rax, %r15
	jmp	.LBB104_431
.LBB104_384:
.Ltmp1482:
	jmp	.LBB104_486
.LBB104_385:
.Ltmp1485:
	jmp	.LBB104_486
.LBB104_386:                            # %.loopexit.split-lp573
.Ltmp1591:
.LBB104_387:
	movq	%rax, %r15
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_389
# %bb.388:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i492
	movq	80(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_389:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit494
	movq	144(%rsp), %r14                 # 8-byte Reload
	jmp	.LBB104_489
.LBB104_390:                            # %.loopexit.split-lp583
.Ltmp1629:
.LBB104_391:
	movq	%rax, %r15
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_396
# %bb.392:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i461
	movq	48(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB104_396
.LBB104_393:
.Ltmp1626:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB104_394:
.Ltmp1623:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB104_395:
.Ltmp1617:
	movq	%rax, %r15
.LBB104_396:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit463
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_402
# %bb.397:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i464
	movq	184(%rsp), %rsi
	jmp	.LBB104_400
.LBB104_398:
.Ltmp1614:
	movq	%r15, %rcx
	movq	%rax, %r15
	movq	64(%rsp), %rdi
	cmpq	%rcx, %rdi
	je	.LBB104_402
# %bb.399:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i.i.i429
	movq	80(%rsp), %rsi
.LBB104_400:                            # %.body436
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB104_402
.LBB104_401:
.Ltmp1611:
	movq	%rax, %r15
.LBB104_402:                            # %.body436
.Ltmp1630:
	leaq	344(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1631:
# %bb.403:                              # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit467
	movq	200(%rsp), %rdi
	leaq	216(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_405
# %bb.404:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i468
	movq	216(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_405:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit470
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_412
# %bb.406:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i471
	movq	16(%rsp), %rsi
	jmp	.LBB104_410
.LBB104_407:
.Ltmp1582:
	jmp	.LBB104_486
.LBB104_408:
.Ltmp1602:
	movq	%rax, %r15
	movq	64(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB104_412
# %bb.409:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i.i.i407
	movq	80(%rsp), %rsi
.LBB104_410:                            # %.body414
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB104_412
.LBB104_411:
.Ltmp1599:
	movq	%rax, %r15
.LBB104_412:                            # %.body414
.Ltmp1633:
	leaq	376(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1634:
	jmp	.LBB104_446
.LBB104_413:                            # %.loopexit.split-lp563
.Ltmp1573:
.LBB104_414:
	movq	%rax, %r15
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_422
# %bb.415:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i392
	movq	48(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB104_422
.LBB104_416:
.Ltmp1546:
	movq	%rax, %r15
	movq	64(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB104_434
# %bb.417:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i.i.i338
	movq	80(%rsp), %rsi
	jmp	.LBB104_433
.LBB104_418:
.Ltmp1570:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB104_419:
.Ltmp1543:
	movq	%rax, %r15
	jmp	.LBB104_434
.LBB104_420:
.Ltmp1567:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB104_421:
.Ltmp1561:
	movq	%rax, %r15
.LBB104_422:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit394
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_428
# %bb.423:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i395
	movq	184(%rsp), %rsi
	jmp	.LBB104_426
.LBB104_424:
.Ltmp1558:
	movq	%rax, %r15
	movq	64(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB104_428
# %bb.425:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i.i.i360
	movq	80(%rsp), %rsi
.LBB104_426:                            # %.body367
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB104_428
.LBB104_427:
.Ltmp1555:
	movq	%rax, %r15
.LBB104_428:                            # %.body367
.Ltmp1574:
	leaq	344(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1575:
# %bb.429:                              # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit398
	movq	200(%rsp), %rdi
	leaq	216(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_431
# %bb.430:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i399
	movq	216(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_431:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit401
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_434
# %bb.432:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i402
	movq	16(%rsp), %rsi
.LBB104_433:                            # %.body345
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_434:                            # %.body345
.Ltmp1577:
	leaq	376(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1578:
	jmp	.LBB104_446
.LBB104_435:                            # %.loopexit.split-lp588
.Ltmp1649:
.LBB104_436:
	movq	%rax, %r15
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_446
# %bb.437:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i265
	movq	80(%rsp), %rsi
	jmp	.LBB104_445
.LBB104_438:
.Ltmp1643:
	movq	%rax, %r15
	movq	144(%rsp), %r14                 # 8-byte Reload
	jmp	.LBB104_491
.LBB104_439:                            # %.loopexit.split-lp593
.Ltmp1671:
.LBB104_440:
	movq	%rax, %r15
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_443
# %bb.441:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i232
	movq	80(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB104_443
.LBB104_442:
.Ltmp1663:
	movq	%rax, %r15
.LBB104_443:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit234
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_446
# %bb.444:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i235
	movq	48(%rsp), %rsi
.LBB104_445:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit237
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB104_446
.LBB104_447:
.Ltmp1479:
	jmp	.LBB104_486
.LBB104_448:
.Ltmp1632:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB104_449:
.Ltmp1635:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB104_450:                            # %.loopexit552
.Ltmp1520:
	jmp	.LBB104_457
.LBB104_451:                            # %.loopexit547
.Ltmp1508:
	movq	%rax, %r15
	jmp	.LBB104_470
.LBB104_452:
.Ltmp1576:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB104_453:                            # %.loopexit.split-lp548
.Ltmp1505:
	movq	%rax, %r15
	jmp	.LBB104_470
.LBB104_454:
.Ltmp1579:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB104_455:
.Ltmp1511:
	movq	%rax, %r15
	jmp	.LBB104_467
.LBB104_456:                            # %.loopexit.split-lp553
.Ltmp1529:
.LBB104_457:
	movq	%rax, %r15
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_464
# %bb.458:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i321
	movq	48(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB104_464
.LBB104_459:
.Ltmp1514:
	movq	%rax, %r15
	movq	64(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB104_467
# %bb.460:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i.i.i290
	movq	80(%rsp), %rsi
	jmp	.LBB104_466
.LBB104_461:
.Ltmp1499:
	movq	%rax, %r15
	jmp	.LBB104_475
.LBB104_462:
.Ltmp1523:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB104_463:
.Ltmp1517:
	movq	%rax, %r15
.LBB104_464:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit323
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_467
# %bb.465:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i324
	movq	184(%rsp), %rsi
.LBB104_466:                            # %.body297
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_467:                            # %.body297
.Ltmp1530:
	leaq	344(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1531:
# %bb.468:                              # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit327
	movq	200(%rsp), %rdi
	leaq	216(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_470
# %bb.469:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i328
	movq	216(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_470:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit330
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_475
# %bb.471:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i331
	movq	16(%rsp), %rsi
	jmp	.LBB104_474
.LBB104_472:
.Ltmp1502:
	movq	%rax, %r15
	movq	64(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB104_475
# %bb.473:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i.i.i
	movq	80(%rsp), %rsi
.LBB104_474:                            # %.body278
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_475:                            # %.body278
.Ltmp1533:
	leaq	376(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1534:
.LBB104_446:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit237
	movq	144(%rsp), %r14                 # 8-byte Reload
	jmp	.LBB104_491
.LBB104_476:
.Ltmp1526:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB104_477:                            # %.loopexit.split-lp.loopexit
.Ltmp1488:
	jmp	.LBB104_486
.LBB104_478:
.Ltmp1540:
	jmp	.LBB104_486
.LBB104_479:
.Ltmp1496:
	jmp	.LBB104_486
.LBB104_480:
.Ltmp1638:
	movq	%rax, %r15
	movq	144(%rsp), %r14                 # 8-byte Reload
	jmp	.LBB104_491
.LBB104_481:                            # %.loopexit
.Ltmp1491:
	jmp	.LBB104_486
.LBB104_482:                            # %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp
.Ltmp1674:
	jmp	.LBB104_486
.LBB104_483:
.Ltmp1532:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB104_484:
.Ltmp1535:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB104_485:                            # %.loopexit.split-lp.loopexit.split-lp.loopexit
.Ltmp1677:
.LBB104_486:                            # %.loopexit.split-lp
	movq	%rax, %r15
	jmp	.LBB104_491
.LBB104_487:                            # %.loopexit.split-lp568
.Ltmp1596:
.LBB104_488:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit494
	movq	%rax, %r15
.LBB104_489:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit494
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_491
# %bb.490:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i495
	movq	48(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_491:                            # %.loopexit.split-lp
	movq	384(%rsp), %rdi
	leaq	400(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_493
# %bb.492:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i525
	movq	400(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_493:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit527
	leaq	240(%rsp), %rdi
	callq	_ZNSt5stackIbSt5dequeIbSaIbEEED2Ev@PLT
.LBB104_494:
	movq	(%rbx), %rdi
	cmpq	%r14, %rdi
	je	.LBB104_496
# %bb.495:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i528
	movq	(%r14), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB104_496:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit530
	movq	%r15, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end104:
	.size	_ZN8pybind116detail27generate_function_signatureB5cxx11EPKcPNS0_15function_recordEPKPKSt9type_infoRmSA_, .Lfunc_end104-_ZN8pybind116detail27generate_function_signatureB5cxx11EPKcPNS0_15function_recordEPKPKSt9type_infoRmSA_
	.cfi_endproc
	.section	.rodata._ZN8pybind116detail27generate_function_signatureB5cxx11EPKcPNS0_15function_recordEPKPKSt9type_infoRmSA_,"aG",@progbits,_ZN8pybind116detail27generate_function_signatureB5cxx11EPKcPNS0_15function_recordEPKPKSt9type_infoRmSA_,comdat
	.p2align	2, 0x0
.LJTI104_0:
	.long	.LBB104_16-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_34-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_48-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_108-.LJTI104_0
	.long	.LBB104_43-.LJTI104_0
	.section	.gcc_except_table._ZN8pybind116detail27generate_function_signatureB5cxx11EPKcPNS0_15function_recordEPKPKSt9type_infoRmSA_,"aG",@progbits,_ZN8pybind116detail27generate_function_signatureB5cxx11EPKcPNS0_15function_recordEPKPKSt9type_infoRmSA_,comdat
	.p2align	2, 0x0
GCC_except_table104:
.Lexception53:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase38-.Lttbaseref38
.Lttbaseref38:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end53-.Lcst_begin53
.Lcst_begin53:
	.uleb128 .Ltmp1471-.Lfunc_begin53       # >> Call Site 1 <<
	.uleb128 .Ltmp1472-.Ltmp1471            #   Call between .Ltmp1471 and .Ltmp1472
	.uleb128 .Ltmp1473-.Lfunc_begin53       #     jumps to .Ltmp1473
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1474-.Lfunc_begin53       # >> Call Site 2 <<
	.uleb128 .Ltmp1475-.Ltmp1474            #   Call between .Ltmp1474 and .Ltmp1475
	.uleb128 .Ltmp1476-.Lfunc_begin53       #     jumps to .Ltmp1476
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1492-.Lfunc_begin53       # >> Call Site 3 <<
	.uleb128 .Ltmp1640-.Ltmp1492            #   Call between .Ltmp1492 and .Ltmp1640
	.uleb128 .Ltmp1677-.Lfunc_begin53       #     jumps to .Ltmp1677
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1494-.Lfunc_begin53       # >> Call Site 4 <<
	.uleb128 .Ltmp1495-.Ltmp1494            #   Call between .Ltmp1494 and .Ltmp1495
	.uleb128 .Ltmp1496-.Lfunc_begin53       #     jumps to .Ltmp1496
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1497-.Lfunc_begin53       # >> Call Site 5 <<
	.uleb128 .Ltmp1498-.Ltmp1497            #   Call between .Ltmp1497 and .Ltmp1498
	.uleb128 .Ltmp1499-.Lfunc_begin53       #     jumps to .Ltmp1499
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1500-.Lfunc_begin53       # >> Call Site 6 <<
	.uleb128 .Ltmp1501-.Ltmp1500            #   Call between .Ltmp1500 and .Ltmp1501
	.uleb128 .Ltmp1502-.Lfunc_begin53       #     jumps to .Ltmp1502
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1652-.Lfunc_begin53       # >> Call Site 7 <<
	.uleb128 .Ltmp1653-.Ltmp1652            #   Call between .Ltmp1652 and .Ltmp1653
	.uleb128 .Ltmp1677-.Lfunc_begin53       #     jumps to .Ltmp1677
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1536-.Lfunc_begin53       # >> Call Site 8 <<
	.uleb128 .Ltmp1539-.Ltmp1536            #   Call between .Ltmp1536 and .Ltmp1539
	.uleb128 .Ltmp1540-.Lfunc_begin53       #     jumps to .Ltmp1540
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1541-.Lfunc_begin53       # >> Call Site 9 <<
	.uleb128 .Ltmp1542-.Ltmp1541            #   Call between .Ltmp1541 and .Ltmp1542
	.uleb128 .Ltmp1543-.Lfunc_begin53       #     jumps to .Ltmp1543
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1544-.Lfunc_begin53       # >> Call Site 10 <<
	.uleb128 .Ltmp1545-.Ltmp1544            #   Call between .Ltmp1544 and .Ltmp1545
	.uleb128 .Ltmp1546-.Lfunc_begin53       #     jumps to .Ltmp1546
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1545-.Lfunc_begin53       # >> Call Site 11 <<
	.uleb128 .Ltmp1506-.Ltmp1545            #   Call between .Ltmp1545 and .Ltmp1506
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1506-.Lfunc_begin53       # >> Call Site 12 <<
	.uleb128 .Ltmp1507-.Ltmp1506            #   Call between .Ltmp1506 and .Ltmp1507
	.uleb128 .Ltmp1508-.Lfunc_begin53       #     jumps to .Ltmp1508
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1507-.Lfunc_begin53       # >> Call Site 13 <<
	.uleb128 .Ltmp1509-.Ltmp1507            #   Call between .Ltmp1507 and .Ltmp1509
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1509-.Lfunc_begin53       # >> Call Site 14 <<
	.uleb128 .Ltmp1510-.Ltmp1509            #   Call between .Ltmp1509 and .Ltmp1510
	.uleb128 .Ltmp1511-.Lfunc_begin53       #     jumps to .Ltmp1511
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1512-.Lfunc_begin53       # >> Call Site 15 <<
	.uleb128 .Ltmp1513-.Ltmp1512            #   Call between .Ltmp1512 and .Ltmp1513
	.uleb128 .Ltmp1514-.Lfunc_begin53       #     jumps to .Ltmp1514
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1513-.Lfunc_begin53       # >> Call Site 16 <<
	.uleb128 .Ltmp1515-.Ltmp1513            #   Call between .Ltmp1513 and .Ltmp1515
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1515-.Lfunc_begin53       # >> Call Site 17 <<
	.uleb128 .Ltmp1516-.Ltmp1515            #   Call between .Ltmp1515 and .Ltmp1516
	.uleb128 .Ltmp1517-.Lfunc_begin53       #     jumps to .Ltmp1517
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1518-.Lfunc_begin53       # >> Call Site 18 <<
	.uleb128 .Ltmp1519-.Ltmp1518            #   Call between .Ltmp1518 and .Ltmp1519
	.uleb128 .Ltmp1520-.Lfunc_begin53       #     jumps to .Ltmp1520
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1597-.Lfunc_begin53       # >> Call Site 19 <<
	.uleb128 .Ltmp1598-.Ltmp1597            #   Call between .Ltmp1597 and .Ltmp1598
	.uleb128 .Ltmp1599-.Lfunc_begin53       #     jumps to .Ltmp1599
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1600-.Lfunc_begin53       # >> Call Site 20 <<
	.uleb128 .Ltmp1601-.Ltmp1600            #   Call between .Ltmp1600 and .Ltmp1601
	.uleb128 .Ltmp1602-.Lfunc_begin53       #     jumps to .Ltmp1602
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1477-.Lfunc_begin53       # >> Call Site 21 <<
	.uleb128 .Ltmp1478-.Ltmp1477            #   Call between .Ltmp1477 and .Ltmp1478
	.uleb128 .Ltmp1479-.Lfunc_begin53       #     jumps to .Ltmp1479
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1675-.Lfunc_begin53       # >> Call Site 22 <<
	.uleb128 .Ltmp1676-.Ltmp1675            #   Call between .Ltmp1675 and .Ltmp1676
	.uleb128 .Ltmp1677-.Lfunc_begin53       #     jumps to .Ltmp1677
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1580-.Lfunc_begin53       # >> Call Site 23 <<
	.uleb128 .Ltmp1581-.Ltmp1580            #   Call between .Ltmp1580 and .Ltmp1581
	.uleb128 .Ltmp1582-.Lfunc_begin53       #     jumps to .Ltmp1582
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1583-.Lfunc_begin53       # >> Call Site 24 <<
	.uleb128 .Ltmp1584-.Ltmp1583            #   Call between .Ltmp1583 and .Ltmp1584
	.uleb128 .Ltmp1585-.Lfunc_begin53       #     jumps to .Ltmp1585
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1584-.Lfunc_begin53       # >> Call Site 25 <<
	.uleb128 .Ltmp1521-.Ltmp1584            #   Call between .Ltmp1584 and .Ltmp1521
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1521-.Lfunc_begin53       # >> Call Site 26 <<
	.uleb128 .Ltmp1522-.Ltmp1521            #   Call between .Ltmp1521 and .Ltmp1522
	.uleb128 .Ltmp1523-.Lfunc_begin53       #     jumps to .Ltmp1523
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1524-.Lfunc_begin53       # >> Call Site 27 <<
	.uleb128 .Ltmp1525-.Ltmp1524            #   Call between .Ltmp1524 and .Ltmp1525
	.uleb128 .Ltmp1526-.Lfunc_begin53       #     jumps to .Ltmp1526
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1480-.Lfunc_begin53       # >> Call Site 28 <<
	.uleb128 .Ltmp1481-.Ltmp1480            #   Call between .Ltmp1480 and .Ltmp1481
	.uleb128 .Ltmp1482-.Lfunc_begin53       #     jumps to .Ltmp1482
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1483-.Lfunc_begin53       # >> Call Site 29 <<
	.uleb128 .Ltmp1484-.Ltmp1483            #   Call between .Ltmp1483 and .Ltmp1484
	.uleb128 .Ltmp1485-.Lfunc_begin53       #     jumps to .Ltmp1485
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1486-.Lfunc_begin53       # >> Call Site 30 <<
	.uleb128 .Ltmp1487-.Ltmp1486            #   Call between .Ltmp1486 and .Ltmp1487
	.uleb128 .Ltmp1488-.Lfunc_begin53       #     jumps to .Ltmp1488
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1489-.Lfunc_begin53       # >> Call Site 31 <<
	.uleb128 .Ltmp1490-.Ltmp1489            #   Call between .Ltmp1489 and .Ltmp1490
	.uleb128 .Ltmp1491-.Lfunc_begin53       #     jumps to .Ltmp1491
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1641-.Lfunc_begin53       # >> Call Site 32 <<
	.uleb128 .Ltmp1642-.Ltmp1641            #   Call between .Ltmp1641 and .Ltmp1642
	.uleb128 .Ltmp1643-.Lfunc_begin53       #     jumps to .Ltmp1643
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1644-.Lfunc_begin53       # >> Call Site 33 <<
	.uleb128 .Ltmp1645-.Ltmp1644            #   Call between .Ltmp1644 and .Ltmp1645
	.uleb128 .Ltmp1646-.Lfunc_begin53       #     jumps to .Ltmp1646
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1654-.Lfunc_begin53       # >> Call Site 34 <<
	.uleb128 .Ltmp1657-.Ltmp1654            #   Call between .Ltmp1654 and .Ltmp1657
	.uleb128 .Ltmp1677-.Lfunc_begin53       #     jumps to .Ltmp1677
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1657-.Lfunc_begin53       # >> Call Site 35 <<
	.uleb128 .Ltmp1550-.Ltmp1657            #   Call between .Ltmp1657 and .Ltmp1550
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1550-.Lfunc_begin53       # >> Call Site 36 <<
	.uleb128 .Ltmp1551-.Ltmp1550            #   Call between .Ltmp1550 and .Ltmp1551
	.uleb128 .Ltmp1552-.Lfunc_begin53       #     jumps to .Ltmp1552
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1551-.Lfunc_begin53       # >> Call Site 37 <<
	.uleb128 .Ltmp1553-.Ltmp1551            #   Call between .Ltmp1551 and .Ltmp1553
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1553-.Lfunc_begin53       # >> Call Site 38 <<
	.uleb128 .Ltmp1554-.Ltmp1553            #   Call between .Ltmp1553 and .Ltmp1554
	.uleb128 .Ltmp1555-.Lfunc_begin53       #     jumps to .Ltmp1555
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1556-.Lfunc_begin53       # >> Call Site 39 <<
	.uleb128 .Ltmp1557-.Ltmp1556            #   Call between .Ltmp1556 and .Ltmp1557
	.uleb128 .Ltmp1558-.Lfunc_begin53       #     jumps to .Ltmp1558
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1557-.Lfunc_begin53       # >> Call Site 40 <<
	.uleb128 .Ltmp1559-.Ltmp1557            #   Call between .Ltmp1557 and .Ltmp1559
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1559-.Lfunc_begin53       # >> Call Site 41 <<
	.uleb128 .Ltmp1560-.Ltmp1559            #   Call between .Ltmp1559 and .Ltmp1560
	.uleb128 .Ltmp1561-.Lfunc_begin53       #     jumps to .Ltmp1561
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1562-.Lfunc_begin53       # >> Call Site 42 <<
	.uleb128 .Ltmp1563-.Ltmp1562            #   Call between .Ltmp1562 and .Ltmp1563
	.uleb128 .Ltmp1564-.Lfunc_begin53       #     jumps to .Ltmp1564
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1563-.Lfunc_begin53       # >> Call Site 43 <<
	.uleb128 .Ltmp1606-.Ltmp1563            #   Call between .Ltmp1563 and .Ltmp1606
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1606-.Lfunc_begin53       # >> Call Site 44 <<
	.uleb128 .Ltmp1607-.Ltmp1606            #   Call between .Ltmp1606 and .Ltmp1607
	.uleb128 .Ltmp1608-.Lfunc_begin53       #     jumps to .Ltmp1608
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1607-.Lfunc_begin53       # >> Call Site 45 <<
	.uleb128 .Ltmp1609-.Ltmp1607            #   Call between .Ltmp1607 and .Ltmp1609
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1609-.Lfunc_begin53       # >> Call Site 46 <<
	.uleb128 .Ltmp1610-.Ltmp1609            #   Call between .Ltmp1609 and .Ltmp1610
	.uleb128 .Ltmp1611-.Lfunc_begin53       #     jumps to .Ltmp1611
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1612-.Lfunc_begin53       # >> Call Site 47 <<
	.uleb128 .Ltmp1613-.Ltmp1612            #   Call between .Ltmp1612 and .Ltmp1613
	.uleb128 .Ltmp1614-.Lfunc_begin53       #     jumps to .Ltmp1614
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1613-.Lfunc_begin53       # >> Call Site 48 <<
	.uleb128 .Ltmp1615-.Ltmp1613            #   Call between .Ltmp1613 and .Ltmp1615
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1615-.Lfunc_begin53       # >> Call Site 49 <<
	.uleb128 .Ltmp1616-.Ltmp1615            #   Call between .Ltmp1615 and .Ltmp1616
	.uleb128 .Ltmp1617-.Lfunc_begin53       #     jumps to .Ltmp1617
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1618-.Lfunc_begin53       # >> Call Site 50 <<
	.uleb128 .Ltmp1619-.Ltmp1618            #   Call between .Ltmp1618 and .Ltmp1619
	.uleb128 .Ltmp1620-.Lfunc_begin53       #     jumps to .Ltmp1620
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1619-.Lfunc_begin53       # >> Call Site 51 <<
	.uleb128 .Ltmp1586-.Ltmp1619            #   Call between .Ltmp1619 and .Ltmp1586
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1586-.Lfunc_begin53       # >> Call Site 52 <<
	.uleb128 .Ltmp1587-.Ltmp1586            #   Call between .Ltmp1586 and .Ltmp1587
	.uleb128 .Ltmp1588-.Lfunc_begin53       #     jumps to .Ltmp1588
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1587-.Lfunc_begin53       # >> Call Site 53 <<
	.uleb128 .Ltmp1650-.Ltmp1587            #   Call between .Ltmp1587 and .Ltmp1650
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1650-.Lfunc_begin53       # >> Call Site 54 <<
	.uleb128 .Ltmp1651-.Ltmp1650            #   Call between .Ltmp1650 and .Ltmp1651
	.uleb128 .Ltmp1677-.Lfunc_begin53       #     jumps to .Ltmp1677
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1651-.Lfunc_begin53       # >> Call Site 55 <<
	.uleb128 .Ltmp1565-.Ltmp1651            #   Call between .Ltmp1651 and .Ltmp1565
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1565-.Lfunc_begin53       # >> Call Site 56 <<
	.uleb128 .Ltmp1566-.Ltmp1565            #   Call between .Ltmp1565 and .Ltmp1566
	.uleb128 .Ltmp1567-.Lfunc_begin53       #     jumps to .Ltmp1567
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1568-.Lfunc_begin53       # >> Call Site 57 <<
	.uleb128 .Ltmp1569-.Ltmp1568            #   Call between .Ltmp1568 and .Ltmp1569
	.uleb128 .Ltmp1570-.Lfunc_begin53       #     jumps to .Ltmp1570
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1658-.Lfunc_begin53       # >> Call Site 58 <<
	.uleb128 .Ltmp1659-.Ltmp1658            #   Call between .Ltmp1658 and .Ltmp1659
	.uleb128 .Ltmp1660-.Lfunc_begin53       #     jumps to .Ltmp1660
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1659-.Lfunc_begin53       # >> Call Site 59 <<
	.uleb128 .Ltmp1661-.Ltmp1659            #   Call between .Ltmp1659 and .Ltmp1661
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1661-.Lfunc_begin53       # >> Call Site 60 <<
	.uleb128 .Ltmp1662-.Ltmp1661            #   Call between .Ltmp1661 and .Ltmp1662
	.uleb128 .Ltmp1663-.Lfunc_begin53       #     jumps to .Ltmp1663
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1662-.Lfunc_begin53       # >> Call Site 61 <<
	.uleb128 .Ltmp1664-.Ltmp1662            #   Call between .Ltmp1662 and .Ltmp1664
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1664-.Lfunc_begin53       # >> Call Site 62 <<
	.uleb128 .Ltmp1665-.Ltmp1664            #   Call between .Ltmp1664 and .Ltmp1665
	.uleb128 .Ltmp1666-.Lfunc_begin53       #     jumps to .Ltmp1666
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1665-.Lfunc_begin53       # >> Call Site 63 <<
	.uleb128 .Ltmp1667-.Ltmp1665            #   Call between .Ltmp1665 and .Ltmp1667
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1667-.Lfunc_begin53       # >> Call Site 64 <<
	.uleb128 .Ltmp1668-.Ltmp1667            #   Call between .Ltmp1667 and .Ltmp1668
	.uleb128 .Ltmp1677-.Lfunc_begin53       #     jumps to .Ltmp1677
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1668-.Lfunc_begin53       # >> Call Site 65 <<
	.uleb128 .Ltmp1621-.Ltmp1668            #   Call between .Ltmp1668 and .Ltmp1621
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1621-.Lfunc_begin53       # >> Call Site 66 <<
	.uleb128 .Ltmp1622-.Ltmp1621            #   Call between .Ltmp1621 and .Ltmp1622
	.uleb128 .Ltmp1623-.Lfunc_begin53       #     jumps to .Ltmp1623
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1624-.Lfunc_begin53       # >> Call Site 67 <<
	.uleb128 .Ltmp1625-.Ltmp1624            #   Call between .Ltmp1624 and .Ltmp1625
	.uleb128 .Ltmp1626-.Lfunc_begin53       #     jumps to .Ltmp1626
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1625-.Lfunc_begin53       # >> Call Site 68 <<
	.uleb128 .Ltmp1592-.Ltmp1625            #   Call between .Ltmp1625 and .Ltmp1592
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1592-.Lfunc_begin53       # >> Call Site 69 <<
	.uleb128 .Ltmp1593-.Ltmp1592            #   Call between .Ltmp1592 and .Ltmp1593
	.uleb128 .Ltmp1596-.Lfunc_begin53       #     jumps to .Ltmp1596
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1672-.Lfunc_begin53       # >> Call Site 70 <<
	.uleb128 .Ltmp1673-.Ltmp1672            #   Call between .Ltmp1672 and .Ltmp1673
	.uleb128 .Ltmp1674-.Lfunc_begin53       #     jumps to .Ltmp1674
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1636-.Lfunc_begin53       # >> Call Site 71 <<
	.uleb128 .Ltmp1637-.Ltmp1636            #   Call between .Ltmp1636 and .Ltmp1637
	.uleb128 .Ltmp1638-.Lfunc_begin53       #     jumps to .Ltmp1638
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1527-.Lfunc_begin53       # >> Call Site 72 <<
	.uleb128 .Ltmp1528-.Ltmp1527            #   Call between .Ltmp1527 and .Ltmp1528
	.uleb128 .Ltmp1529-.Lfunc_begin53       #     jumps to .Ltmp1529
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1503-.Lfunc_begin53       # >> Call Site 73 <<
	.uleb128 .Ltmp1504-.Ltmp1503            #   Call between .Ltmp1503 and .Ltmp1504
	.uleb128 .Ltmp1505-.Lfunc_begin53       #     jumps to .Ltmp1505
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1669-.Lfunc_begin53       # >> Call Site 74 <<
	.uleb128 .Ltmp1670-.Ltmp1669            #   Call between .Ltmp1669 and .Ltmp1670
	.uleb128 .Ltmp1671-.Lfunc_begin53       #     jumps to .Ltmp1671
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1647-.Lfunc_begin53       # >> Call Site 75 <<
	.uleb128 .Ltmp1648-.Ltmp1647            #   Call between .Ltmp1647 and .Ltmp1648
	.uleb128 .Ltmp1649-.Lfunc_begin53       #     jumps to .Ltmp1649
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1571-.Lfunc_begin53       # >> Call Site 76 <<
	.uleb128 .Ltmp1572-.Ltmp1571            #   Call between .Ltmp1571 and .Ltmp1572
	.uleb128 .Ltmp1573-.Lfunc_begin53       #     jumps to .Ltmp1573
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1627-.Lfunc_begin53       # >> Call Site 77 <<
	.uleb128 .Ltmp1628-.Ltmp1627            #   Call between .Ltmp1627 and .Ltmp1628
	.uleb128 .Ltmp1629-.Lfunc_begin53       #     jumps to .Ltmp1629
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1589-.Lfunc_begin53       # >> Call Site 78 <<
	.uleb128 .Ltmp1590-.Ltmp1589            #   Call between .Ltmp1589 and .Ltmp1590
	.uleb128 .Ltmp1591-.Lfunc_begin53       #     jumps to .Ltmp1591
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1547-.Lfunc_begin53       # >> Call Site 79 <<
	.uleb128 .Ltmp1548-.Ltmp1547            #   Call between .Ltmp1547 and .Ltmp1548
	.uleb128 .Ltmp1549-.Lfunc_begin53       #     jumps to .Ltmp1549
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1603-.Lfunc_begin53       # >> Call Site 80 <<
	.uleb128 .Ltmp1604-.Ltmp1603            #   Call between .Ltmp1603 and .Ltmp1604
	.uleb128 .Ltmp1605-.Lfunc_begin53       #     jumps to .Ltmp1605
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1594-.Lfunc_begin53       # >> Call Site 81 <<
	.uleb128 .Ltmp1595-.Ltmp1594            #   Call between .Ltmp1594 and .Ltmp1595
	.uleb128 .Ltmp1596-.Lfunc_begin53       #     jumps to .Ltmp1596
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1630-.Lfunc_begin53       # >> Call Site 82 <<
	.uleb128 .Ltmp1631-.Ltmp1630            #   Call between .Ltmp1630 and .Ltmp1631
	.uleb128 .Ltmp1632-.Lfunc_begin53       #     jumps to .Ltmp1632
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1633-.Lfunc_begin53       # >> Call Site 83 <<
	.uleb128 .Ltmp1634-.Ltmp1633            #   Call between .Ltmp1633 and .Ltmp1634
	.uleb128 .Ltmp1635-.Lfunc_begin53       #     jumps to .Ltmp1635
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1574-.Lfunc_begin53       # >> Call Site 84 <<
	.uleb128 .Ltmp1575-.Ltmp1574            #   Call between .Ltmp1574 and .Ltmp1575
	.uleb128 .Ltmp1576-.Lfunc_begin53       #     jumps to .Ltmp1576
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1577-.Lfunc_begin53       # >> Call Site 85 <<
	.uleb128 .Ltmp1578-.Ltmp1577            #   Call between .Ltmp1577 and .Ltmp1578
	.uleb128 .Ltmp1579-.Lfunc_begin53       #     jumps to .Ltmp1579
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1530-.Lfunc_begin53       # >> Call Site 86 <<
	.uleb128 .Ltmp1531-.Ltmp1530            #   Call between .Ltmp1530 and .Ltmp1531
	.uleb128 .Ltmp1532-.Lfunc_begin53       #     jumps to .Ltmp1532
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1533-.Lfunc_begin53       # >> Call Site 87 <<
	.uleb128 .Ltmp1534-.Ltmp1533            #   Call between .Ltmp1533 and .Ltmp1534
	.uleb128 .Ltmp1535-.Lfunc_begin53       #     jumps to .Ltmp1535
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1534-.Lfunc_begin53       # >> Call Site 88 <<
	.uleb128 .Lfunc_end104-.Ltmp1534        #   Call between .Ltmp1534 and .Lfunc_end104
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end53:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase38:
	.p2align	2, 0x0
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function _ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_
.LCPI105_0:
	.zero	16
	.section	.text._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_,"axG",@progbits,_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_,comdat
	.hidden	_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_
	.weak	_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_
	.p2align	4, 0x90
	.type	_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_,@function
_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_: # @_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_
.Lfunc_begin54:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception54
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$488, %rsp                      # imm = 0x1E8
	.cfi_def_cfa_offset 544
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	8(%rdi), %rax
	testb	$-128, 171(%rax)
	jne	.LBB105_704
# %bb.1:
	movq	%rdx, %r15
	movq	%rsi, %r12
	movq	%rdi, %rbx
	leaq	_ZN8pybind116detailL28function_record_PyTypeObjectE(%rip), %rcx
	cmpq	%rcx, %rax
	je	.LBB105_3
# %bb.2:                                # %_ZN8pybind116detail27is_function_record_PyObjectEP7_object.exit.i
	movq	24(%rax), %rdi
	movq	_ZN8pybind116detailL28function_record_PyTypeObjectE+24(%rip), %rsi
	callq	strcmp@PLT
	testl	%eax, %eax
	jne	.LBB105_704
.LBB105_3:                              # %_ZN8pybind116detail33function_record_ptr_from_PyObjectEP7_object.exit
	movq	16(%rbx), %rax
	movq	%rax, 272(%rsp)                 # 8-byte Spill
	testq	%rax, %rax
	je	.LBB105_704
# %bb.4:
	movq	8(%r12), %rax
	testb	$4, 171(%rax)
	je	.LBB105_712
# %bb.5:
	cmpq	PyLong_Type@GOTPCREL(%rip), %rax
	je	.LBB105_713
# %bb.6:
	cmpq	PyBool_Type@GOTPCREL(%rip), %rax
	je	.LBB105_714
# %bb.7:                                # %_ZL16PyTuple_GET_SIZEP7_object.exit
	movq	16(%r12), %rbx
	testq	%rbx, %rbx
	je	.LBB105_15
# %bb.8:
	movq	24(%r12), %rdx
	movq	272(%rsp), %rcx                 # 8-byte Reload
	leaq	89(%rcx), %rax
	movq	%rax, 352(%rsp)                 # 8-byte Spill
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 416(%rsp)
	movaps	%xmm0, 400(%rsp)
	testb	$1, 89(%rcx)
	je	.LBB105_17
# %bb.9:
	testq	%rdx, %rdx
	je	.LBB105_16
# %bb.10:
	movq	272(%rsp), %rax                 # 8-byte Reload
	movq	112(%rax), %rsi
	movq	%rdx, 304(%rsp)                 # 8-byte Spill
	movq	8(%rdx), %rdi
	cmpq	%rsi, %rdi
	je	.LBB105_13
# %bb.11:                               # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit
	callq	PyType_IsSubtype@PLT
	testl	%eax, %eax
	je	.LBB105_16
# %bb.12:                               # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit._ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.thread_crit_edge
	movq	272(%rsp), %rax                 # 8-byte Reload
	movq	112(%rax), %rsi
.LBB105_13:                             # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.thread
	movq	%rsi, %rdi
	callq	_ZN8pybind116detail13get_type_infoEP11_typeobject
	leaq	16(%rsp), %rdi
	movq	304(%rsp), %rsi                 # 8-byte Reload
	movq	%rax, %rdx
	movl	$1, %ecx
	callq	_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb
	movups	16(%rsp), %xmm0
	movups	32(%rsp), %xmm1
	movaps	%xmm1, 416(%rsp)
	movaps	%xmm0, 400(%rsp)
	movq	400(%rsp), %rcx
	movzbl	48(%rcx), %eax
	testb	$2, %al
	jne	.LBB105_361
# %bb.14:
	movq	24(%rcx), %rax
	movq	408(%rsp), %rcx
	movzbl	(%rax,%rcx), %eax
	andb	$2, %al
	testb	%al, %al
	jne	.LBB105_362
	jmp	.LBB105_19
.LBB105_15:                             # %.thread
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 416(%rsp)
	movaps	%xmm0, 400(%rsp)
	movq	272(%rsp), %rax                 # 8-byte Reload
	testb	$1, 89(%rax)
	je	.LBB105_18
.LBB105_16:                             # %.thread1059
	movq	PyExc_TypeError@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
	leaq	.L.str.138(%rip), %rsi
	callq	PyErr_SetString@PLT
	jmp	.LBB105_677
.LBB105_17:
	movq	%rdx, 304(%rsp)                 # 8-byte Spill
	jmp	.LBB105_19
.LBB105_18:
	movq	272(%rsp), %rax                 # 8-byte Reload
	addq	$89, %rax
	movq	%rax, 352(%rsp)                 # 8-byte Spill
	movq	$0, 304(%rsp)                   # 8-byte Folded Spill
.LBB105_19:
	movq	%rbx, 448(%rsp)                 # 8-byte Spill
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 176(%rsp)
	movq	$0, 192(%rsp)
	movq	272(%rsp), %r14                 # 8-byte Reload
	movq	128(%r14), %rcx
	movq	%rcx, 440(%rsp)                 # 8-byte Spill
	leaq	48(%rsp), %rbx
	leaq	24(%r12), %rcx
	movq	%rcx, 464(%rsp)                 # 8-byte Spill
	movl	$1, %ecx
	movq	%rcx, 296(%rsp)                 # 8-byte Spill
	movq	%r15, 280(%rsp)                 # 8-byte Spill
	movq	%r12, 288(%rsp)                 # 8-byte Spill
	jmp	.LBB105_22
	.p2align	4, 0x90
.LBB105_20:                             #   in Loop: Header=BB105_22 Depth=1
	cmpl	$2, %ebx
	leaq	48(%rsp), %rbx
	je	.LBB105_312
.LBB105_21:                             # %.thread1084
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	128(%r14), %r14
	testq	%r14, %r14
	je	.LBB105_311
.LBB105_22:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB105_45 Depth 2
                                        #     Child Loop BB105_47 Depth 2
                                        #     Child Loop BB105_56 Depth 2
                                        #       Child Loop BB105_88 Depth 3
                                        #       Child Loop BB105_90 Depth 3
                                        #     Child Loop BB105_99 Depth 2
                                        #       Child Loop BB105_109 Depth 3
                                        #       Child Loop BB105_111 Depth 3
                                        #     Child Loop BB105_132 Depth 2
                                        #       Child Loop BB105_161 Depth 3
                                        #       Child Loop BB105_163 Depth 3
                                        #       Child Loop BB105_180 Depth 3
                                        #       Child Loop BB105_182 Depth 3
                                        #     Child Loop BB105_209 Depth 2
                                        #     Child Loop BB105_238 Depth 2
                                        #     Child Loop BB105_240 Depth 2
                                        #     Child Loop BB105_270 Depth 2
                                        #     Child Loop BB105_272 Depth 2
                                        #     Child Loop BB105_293 Depth 2
	movzwl	89(%r14), %eax
	movl	%eax, 368(%rsp)                 # 4-byte Spill
                                        # kill: def $eax killed $eax def $rax
	andl	$64, %eax
	movq	%rax, 384(%rsp)                 # 8-byte Spill
	sete	%al
	movzwl	94(%r14), %r13d
	movq	448(%rsp), %rdx                 # 8-byte Reload
	cmpq	%r13, %rdx
	seta	%cl
	testb	%cl, %al
	jne	.LBB105_21
# %bb.23:                               #   in Loop: Header=BB105_22 Depth=1
	movzwl	92(%r14), %eax
	movq	%rax, 472(%rsp)                 # 8-byte Spill
	cmpq	%r13, %rdx
	jae	.LBB105_25
# %bb.24:                               #   in Loop: Header=BB105_22 Depth=1
	movq	32(%r14), %rax
	subq	24(%r14), %rax
	sarq	$5, %rax
	cmpq	%r13, %rax
	jb	.LBB105_21
.LBB105_25:                             #   in Loop: Header=BB105_22 Depth=1
.Ltmp1681:
	leaq	16(%rsp), %rdi
	movq	%r14, %rsi
	movq	304(%rsp), %rdx                 # 8-byte Reload
	callq	_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE
.Ltmp1682:
# %bb.26:                               #   in Loop: Header=BB105_22 Depth=1
	movq	448(%rsp), %rax                 # 8-byte Reload
	cmpq	%r13, %rax
	movq	%r13, %rcx
	cmovbq	%rax, %rcx
	movq	%rcx, 392(%rsp)                 # 8-byte Spill
	testb	$2, 89(%r14)
	movq	%r14, 168(%rsp)                 # 8-byte Spill
	movq	%r13, 120(%rsp)                 # 8-byte Spill
	jne	.LBB105_28
# %bb.27:                               #   in Loop: Header=BB105_22 Depth=1
	xorl	%ebp, %ebp
	jmp	.LBB105_52
.LBB105_28:                             #   in Loop: Header=BB105_22 Depth=1
	movq	424(%rsp), %rax
	cmpq	$0, (%rax)
	je	.LBB105_30
# %bb.29:                               #   in Loop: Header=BB105_22 Depth=1
	movq	416(%rsp), %rax
.Ltmp1684:
	leaq	400(%rsp), %rdi
	callq	*56(%rax)
.Ltmp1685:
.LBB105_30:                             #   in Loop: Header=BB105_22 Depth=1
	movq	8(%r12), %rax
	testb	$4, 171(%rax)
	je	.LBB105_705
# %bb.31:                               #   in Loop: Header=BB105_22 Depth=1
	movq	24(%r12), %rax
	movq	%rax, 112(%rsp)
	movq	32(%rsp), %r14
	cmpq	40(%rsp), %r14
	je	.LBB105_36
# %bb.32:                               #   in Loop: Header=BB105_22 Depth=1
	leaq	400(%rsp), %rax
	movq	%rax, (%r14)
	addq	$8, %r14
	movq	%r14, 32(%rsp)
	movq	168(%rsp), %r14                 # 8-byte Reload
	movq	64(%rsp), %rsi
	movl	72(%rsp), %ecx
	cmpq	80(%rsp), %rsi
	je	.LBB105_51
.LBB105_33:                             #   in Loop: Header=BB105_22 Depth=1
	leal	1(%rcx), %eax
	movl	%eax, 72(%rsp)
	cmpq	$63, %rcx
	jne	.LBB105_35
# %bb.34:                               #   in Loop: Header=BB105_22 Depth=1
	movl	$0, 72(%rsp)
	leaq	8(%rsi), %rax
	movq	%rax, 64(%rsp)
.LBB105_35:                             # %_ZNSt13_Bit_iteratorppEi.exit.i
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	$-2, %rax
                                        # kill: def $cl killed $cl killed $rcx
	rolq	%cl, %rax
	andq	%rax, (%rsi)
	movl	$1, %ebp
	jmp	.LBB105_52
.LBB105_36:                             #   in Loop: Header=BB105_22 Depth=1
	movq	24(%rsp), %r15
	movq	%r14, %r13
	subq	%r15, %r13
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %r13
	je	.LBB105_715
# %bb.37:                               # %_ZNKSt6vectorIN8pybind116handleESaIS1_EE12_M_check_lenEmPKc.exit.i
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	%r13, %rbp
	sarq	$3, %rbp
	cmpq	$1, %rbp
	movq	%rbp, %rax
	adcq	$0, %rax
	leaq	(%rax,%rbp), %r12
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rcx, %r12
	cmovaeq	%rcx, %r12
	addq	%rbp, %rax
	cmovbq	%rcx, %r12
	testq	%r12, %r12
	je	.LBB105_40
# %bb.38:                               #   in Loop: Header=BB105_22 Depth=1
	leaq	(,%r12,8), %rdi
.Ltmp1686:
	callq	_Znwm@PLT
.Ltmp1687:
# %bb.39:                               #   in Loop: Header=BB105_22 Depth=1
	movq	%rax, %rbx
	jmp	.LBB105_41
.LBB105_40:                             #   in Loop: Header=BB105_22 Depth=1
	xorl	%ebx, %ebx
.LBB105_41:                             # %.noexc865
                                        #   in Loop: Header=BB105_22 Depth=1
	leaq	400(%rsp), %rax
	movq	%rax, (%rbx,%rbp,8)
	movq	%rbx, %rbp
	cmpq	%r14, %r15
	je	.LBB105_48
# %bb.42:                               # %.lr.ph.i.i.i.i.preheader
                                        #   in Loop: Header=BB105_22 Depth=1
	leaq	-8(%r13), %rcx
	movq	%rbx, %rbp
	movq	%r15, %rax
	cmpq	$24, %rcx
	jb	.LBB105_47
# %bb.43:                               # %.lr.ph.i.i.i.i.preheader
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	%rbx, %rdx
	subq	%r15, %rdx
	movq	%rbx, %rbp
	movq	%r15, %rax
	cmpq	$32, %rdx
	jb	.LBB105_47
# %bb.44:                               # %vector.ph1841
                                        #   in Loop: Header=BB105_22 Depth=1
	shrq	$3, %rcx
	incq	%rcx
	movq	%rcx, %rdx
	movabsq	$4611686018427387900, %rax      # imm = 0x3FFFFFFFFFFFFFFC
	andq	%rax, %rdx
	leaq	(%rbx,%rdx,8), %rbp
	leaq	(%r15,%rdx,8), %rax
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB105_45:                             # %vector.body1848
                                        #   Parent Loop BB105_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movups	(%r15,%rsi,8), %xmm0
	movups	16(%r15,%rsi,8), %xmm1
	movups	%xmm0, (%rbx,%rsi,8)
	movups	%xmm1, 16(%rbx,%rsi,8)
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB105_45
# %bb.46:                               # %middle.block1838
                                        #   in Loop: Header=BB105_22 Depth=1
	cmpq	%rdx, %rcx
	je	.LBB105_48
	.p2align	4, 0x90
.LBB105_47:                             # %.lr.ph.i.i.i.i
                                        #   Parent Loop BB105_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	(%rax), %rcx
	movq	%rcx, (%rbp)
	addq	$8, %rax
	addq	$8, %rbp
	cmpq	%r14, %rax
	jne	.LBB105_47
.LBB105_48:                             # %_ZNSt6vectorIN8pybind116handleESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit32.i
                                        #   in Loop: Header=BB105_22 Depth=1
	testq	%r15, %r15
	je	.LBB105_50
# %bb.49:                               #   in Loop: Header=BB105_22 Depth=1
	movq	%r15, %rdi
	movq	%r13, %rsi
	callq	_ZdlPvm@PLT
.LBB105_50:                             # %.noexc
                                        #   in Loop: Header=BB105_22 Depth=1
	addq	$8, %rbp
	movq	%rbx, 24(%rsp)
	movq	%rbp, 32(%rsp)
	leaq	(%rbx,%r12,8), %rax
	movq	%rax, 40(%rsp)
	movq	280(%rsp), %r15                 # 8-byte Reload
	movq	288(%rsp), %r12                 # 8-byte Reload
	movq	168(%rsp), %r14                 # 8-byte Reload
	leaq	48(%rsp), %rbx
	movq	120(%rsp), %r13                 # 8-byte Reload
	movq	64(%rsp), %rsi
	movl	72(%rsp), %ecx
	cmpq	80(%rsp), %rsi
	jne	.LBB105_33
.LBB105_51:                             #   in Loop: Header=BB105_22 Depth=1
	movl	$1, %ebp
.Ltmp1689:
	movq	%rbx, %rdi
	movl	%ecx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb@PLT
.Ltmp1690:
	.p2align	4, 0x90
.LBB105_52:                             # %_ZNSt6vectorIbSaIbEE9push_backEb.exit
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	%rbp, (%rsp)                    # 8-byte Spill
	cmpq	392(%rsp), %rbp                 # 8-byte Folded Reload
	jae	.LBB105_95
# %bb.53:                               # %.lr.ph
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	(%rsp), %rdx                    # 8-byte Reload
	jmp	.LBB105_56
	.p2align	4, 0x90
.LBB105_54:                             #   in Loop: Header=BB105_56 Depth=2
.Ltmp1700:
	movzbl	%al, %eax
	andl	$1, %eax
	movl	%ecx, %edx
	movl	%eax, %ecx
	callq	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb@PLT
.Ltmp1701:
.LBB105_55:                             #   in Loop: Header=BB105_56 Depth=2
	movq	(%rsp), %rdx                    # 8-byte Reload
	incq	%rdx
	cmpq	392(%rsp), %rdx                 # 8-byte Folded Reload
	movq	280(%rsp), %r15                 # 8-byte Reload
	movq	288(%rsp), %r12                 # 8-byte Reload
	movq	168(%rsp), %r14                 # 8-byte Reload
	movq	120(%rsp), %r13                 # 8-byte Reload
	je	.LBB105_94
.LBB105_56:                             #   Parent Loop BB105_22 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB105_88 Depth 3
                                        #       Child Loop BB105_90 Depth 3
	movq	24(%r14), %rax
	movq	32(%r14), %rcx
	subq	%rax, %rcx
	sarq	$5, %rcx
	cmpq	%rcx, %rdx
	movq	%rdx, %r13
	jae	.LBB105_74
# %bb.57:                               #   in Loop: Header=BB105_56 Depth=2
	movq	%r13, %rbp
	shlq	$5, %rbp
	addq	%rax, %rbp
	testq	%rax, %rax
	setne	%bl
	testq	%r15, %r15
	je	.LBB105_62
# %bb.58:                               #   in Loop: Header=BB105_56 Depth=2
	testq	%rax, %rax
	je	.LBB105_62
# %bb.59:                               #   in Loop: Header=BB105_56 Depth=2
	movq	(%rbp), %rsi
	movb	$1, %bl
	testq	%rsi, %rsi
	je	.LBB105_62
# %bb.60:                               #   in Loop: Header=BB105_56 Depth=2
.Ltmp1695:
	movq	%r15, %rdi
	callq	_ZN8pybind116detail18dict_getitemstringEP7_objectPKc
.Ltmp1696:
# %bb.61:                               #   in Loop: Header=BB105_56 Depth=2
	testq	%rax, %rax
	jne	.LBB105_222
.LBB105_62:                             # %.thread1063
                                        #   in Loop: Header=BB105_56 Depth=2
	movq	8(%r12), %rax
	testb	$4, 171(%rax)
	je	.LBB105_681
# %bb.63:                               #   in Loop: Header=BB105_56 Depth=2
	movq	24(%r12,%r13,8), %r14
	testb	%bl, %bl
	je	.LBB105_78
# %bb.64:                               #   in Loop: Header=BB105_56 Depth=2
	testb	$2, 24(%rbp)
	movb	$1, %cl
	leaq	48(%rsp), %rdi
	jne	.LBB105_66
# %bb.65:                               #   in Loop: Header=BB105_56 Depth=2
	cmpq	_Py_NoneStruct@GOTPCREL(%rip), %r14
	je	.LBB105_215
	.p2align	4, 0x90
.LBB105_66:                             #   in Loop: Header=BB105_56 Depth=2
	movq	%r13, (%rsp)                    # 8-byte Spill
	movq	32(%rsp), %r13
	cmpq	40(%rsp), %r13
	je	.LBB105_80
.LBB105_67:                             #   in Loop: Header=BB105_56 Depth=2
	movq	%r14, (%r13)
	addq	$8, 32(%rsp)
	movb	$1, %al
	testb	%cl, %cl
	je	.LBB105_69
.LBB105_68:                             #   in Loop: Header=BB105_56 Depth=2
	movzbl	24(%rbp), %eax
.LBB105_69:                             #   in Loop: Header=BB105_56 Depth=2
	movq	64(%rsp), %rsi
	movl	72(%rsp), %ecx
	cmpq	80(%rsp), %rsi
	je	.LBB105_54
# %bb.70:                               #   in Loop: Header=BB105_56 Depth=2
	leal	1(%rcx), %edx
	movl	%edx, 72(%rsp)
	cmpq	$63, %rcx
	jne	.LBB105_72
# %bb.71:                               #   in Loop: Header=BB105_56 Depth=2
	movl	$0, 72(%rsp)
	leaq	8(%rsi), %rdx
	movq	%rdx, 64(%rsp)
.LBB105_72:                             # %_ZNSt13_Bit_iteratorppEi.exit.i417
                                        #   in Loop: Header=BB105_56 Depth=2
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	testb	$1, %al
	je	.LBB105_76
# %bb.73:                               #   in Loop: Header=BB105_56 Depth=2
	orq	(%rsi), %rdx
	jmp	.LBB105_77
	.p2align	4, 0x90
.LBB105_74:                             # %.thread1063.thread
                                        #   in Loop: Header=BB105_56 Depth=2
	movq	8(%r12), %rax
	testb	$4, 171(%rax)
	je	.LBB105_681
# %bb.75:                               # %.thread1572
                                        #   in Loop: Header=BB105_56 Depth=2
	movq	24(%r12,%r13,8), %r14
	xorl	%ecx, %ecx
	xorl	%ebp, %ebp
	jmp	.LBB105_79
	.p2align	4, 0x90
.LBB105_76:                             #   in Loop: Header=BB105_56 Depth=2
	notq	%rdx
	andq	(%rsi), %rdx
.LBB105_77:                             # %.sink.split
                                        #   in Loop: Header=BB105_56 Depth=2
	movq	%rdx, (%rsi)
	jmp	.LBB105_55
	.p2align	4, 0x90
.LBB105_78:                             #   in Loop: Header=BB105_56 Depth=2
	xorl	%ecx, %ecx
.LBB105_79:                             #   in Loop: Header=BB105_56 Depth=2
	leaq	48(%rsp), %rdi
	movq	%r13, (%rsp)                    # 8-byte Spill
	movq	32(%rsp), %r13
	cmpq	40(%rsp), %r13
	jne	.LBB105_67
.LBB105_80:                             #   in Loop: Header=BB105_56 Depth=2
	movq	%rbp, 312(%rsp)                 # 8-byte Spill
	movq	24(%rsp), %r15
	movq	%r13, %rbp
	subq	%r15, %rbp
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %rbp
	je	.LBB105_684
# %bb.81:                               # %_ZNKSt6vectorIN8pybind116handleESaIS1_EE12_M_check_lenEmPKc.exit.i866
                                        #   in Loop: Header=BB105_56 Depth=2
	movq	%rcx, 360(%rsp)                 # 8-byte Spill
	movq	%rbp, %r12
	sarq	$3, %r12
	cmpq	$1, %r12
	movq	%r12, %rax
	adcq	$0, %rax
	leaq	(%rax,%r12), %rdx
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rcx, %rdx
	cmovaeq	%rcx, %rdx
	addq	%r12, %rax
	cmovbq	%rcx, %rdx
	testq	%rdx, %rdx
	movq	%rdx, 376(%rsp)                 # 8-byte Spill
	je	.LBB105_84
# %bb.82:                               #   in Loop: Header=BB105_56 Depth=2
	leaq	(,%rdx,8), %rdi
.Ltmp1698:
	callq	_Znwm@PLT
.Ltmp1699:
# %bb.83:                               #   in Loop: Header=BB105_56 Depth=2
	movq	%rax, %rbx
	movq	%r14, (%rbx,%r12,8)
	movq	%rbx, %r14
	cmpq	%r13, %r15
	jne	.LBB105_85
	jmp	.LBB105_91
.LBB105_84:                             #   in Loop: Header=BB105_56 Depth=2
	xorl	%ebx, %ebx
	movq	%r14, (%rbx,%r12,8)
	movq	%rbx, %r14
	cmpq	%r13, %r15
	je	.LBB105_91
.LBB105_85:                             # %.lr.ph.i.i.i.i870.preheader
                                        #   in Loop: Header=BB105_56 Depth=2
	leaq	-8(%rbp), %rcx
	movq	%rbx, %r14
	movq	%r15, %rax
	cmpq	$24, %rcx
	jb	.LBB105_90
# %bb.86:                               # %.lr.ph.i.i.i.i870.preheader
                                        #   in Loop: Header=BB105_56 Depth=2
	movq	%rbx, %rdx
	subq	%r15, %rdx
	movq	%rbx, %r14
	movq	%r15, %rax
	cmpq	$32, %rdx
	jb	.LBB105_90
# %bb.87:                               # %vector.ph1817
                                        #   in Loop: Header=BB105_56 Depth=2
	shrq	$3, %rcx
	incq	%rcx
	movq	%rcx, %rdx
	movabsq	$4611686018427387900, %rax      # imm = 0x3FFFFFFFFFFFFFFC
	andq	%rax, %rdx
	leaq	(%rbx,%rdx,8), %r14
	leaq	(%r15,%rdx,8), %rax
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB105_88:                             # %vector.body1824
                                        #   Parent Loop BB105_22 Depth=1
                                        #     Parent Loop BB105_56 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movups	(%r15,%rsi,8), %xmm0
	movups	16(%r15,%rsi,8), %xmm1
	movups	%xmm0, (%rbx,%rsi,8)
	movups	%xmm1, 16(%rbx,%rsi,8)
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB105_88
# %bb.89:                               # %middle.block1814
                                        #   in Loop: Header=BB105_56 Depth=2
	cmpq	%rdx, %rcx
	je	.LBB105_91
	.p2align	4, 0x90
.LBB105_90:                             # %.lr.ph.i.i.i.i870
                                        #   Parent Loop BB105_22 Depth=1
                                        #     Parent Loop BB105_56 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	(%rax), %rcx
	movq	%rcx, (%r14)
	addq	$8, %rax
	addq	$8, %r14
	cmpq	%r13, %rax
	jne	.LBB105_90
.LBB105_91:                             # %_ZNSt6vectorIN8pybind116handleESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit22.i
                                        #   in Loop: Header=BB105_56 Depth=2
	testq	%r15, %r15
	je	.LBB105_93
# %bb.92:                               #   in Loop: Header=BB105_56 Depth=2
	movq	%r15, %rdi
	movq	%rbp, %rsi
	callq	_ZdlPvm@PLT
.LBB105_93:                             # %.noexc413
                                        #   in Loop: Header=BB105_56 Depth=2
	addq	$8, %r14
	movq	%rbx, 24(%rsp)
	movq	%r14, 32(%rsp)
	movq	376(%rsp), %rax                 # 8-byte Reload
	leaq	(%rbx,%rax,8), %rax
	movq	%rax, 40(%rsp)
	leaq	48(%rsp), %rdi
	movq	312(%rsp), %rbp                 # 8-byte Reload
	movq	360(%rsp), %rcx                 # 8-byte Reload
	movb	$1, %al
	testb	%cl, %cl
	jne	.LBB105_68
	jmp	.LBB105_69
.LBB105_94:                             #   in Loop: Header=BB105_22 Depth=1
	movq	392(%rsp), %rax                 # 8-byte Reload
	movq	%rax, (%rsp)                    # 8-byte Spill
.LBB105_95:                             # %_ZNSt6vectorIbSaIbEE9push_backEb.exit419
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	%r15, 320(%rsp)
.Ltmp1703:
	leaq	320(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1704:
# %bb.96:                               # %_ZN8pybind1118reinterpret_borrowINS_4dictEEET_NS_6handleE.exit
                                        #   in Loop: Header=BB105_22 Depth=1
	movzwl	96(%r14), %eax
	movq	(%rsp), %rcx                    # 8-byte Reload
	movq	%rcx, %rbp
	cmpq	%rax, %rcx
	jae	.LBB105_128
# %bb.97:                               # %.lr.ph1478
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	24(%r14), %rsi
	movq	(%rsp), %rdx                    # 8-byte Reload
	movq	%rdx, %rcx
	shlq	$5, %rcx
	movq	16(%rsi,%rcx), %rbx
	testq	%rbx, %rbx
	je	.LBB105_125
# %bb.98:                               #   in Loop: Header=BB105_22 Depth=1
	addq	%rcx, %rsi
	movq	%rdx, %rbp
	.p2align	4, 0x90
.LBB105_99:                             # %.lr.ph1704
                                        #   Parent Loop BB105_22 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB105_109 Depth 3
                                        #       Child Loop BB105_111 Depth 3
	movq	%rbp, 312(%rsp)                 # 8-byte Spill
	movq	32(%rsp), %r12
	cmpq	40(%rsp), %r12
	je	.LBB105_101
# %bb.100:                              #   in Loop: Header=BB105_99 Depth=2
	movq	%rbx, (%r12)
	addq	$8, 32(%rsp)
	jmp	.LBB105_115
	.p2align	4, 0x90
.LBB105_101:                            #   in Loop: Header=BB105_99 Depth=2
	movq	%rsi, 360(%rsp)                 # 8-byte Spill
	movq	24(%rsp), %r15
	movq	%r12, %rbp
	subq	%r15, %rbp
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %rbp
	je	.LBB105_688
# %bb.102:                              # %_ZNKSt6vectorIN8pybind116handleESaIS1_EE12_M_check_lenEmPKc.exit.i878
                                        #   in Loop: Header=BB105_99 Depth=2
	movq	%rbp, %r13
	sarq	$3, %r13
	cmpq	$1, %r13
	movq	%r13, %rax
	adcq	$0, %rax
	leaq	(%rax,%r13), %rdx
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rcx, %rdx
	cmovaeq	%rcx, %rdx
	addq	%r13, %rax
	cmovbq	%rcx, %rdx
	testq	%rdx, %rdx
	movq	%rdx, 376(%rsp)                 # 8-byte Spill
	je	.LBB105_105
# %bb.103:                              #   in Loop: Header=BB105_99 Depth=2
	leaq	(,%rdx,8), %rdi
.Ltmp1706:
	callq	_Znwm@PLT
.Ltmp1707:
# %bb.104:                              #   in Loop: Header=BB105_99 Depth=2
	movq	%rax, %r14
	movq	%rbx, (%r14,%r13,8)
	movq	%r14, %rbx
	cmpq	%r12, %r15
	jne	.LBB105_106
	jmp	.LBB105_112
.LBB105_105:                            #   in Loop: Header=BB105_99 Depth=2
	xorl	%r14d, %r14d
	movq	%rbx, (%r14,%r13,8)
	movq	%r14, %rbx
	cmpq	%r12, %r15
	je	.LBB105_112
.LBB105_106:                            # %.lr.ph.i.i.i.i883.preheader
                                        #   in Loop: Header=BB105_99 Depth=2
	leaq	-8(%rbp), %rcx
	movq	%r14, %rbx
	movq	%r15, %rax
	cmpq	$24, %rcx
	jb	.LBB105_111
# %bb.107:                              # %.lr.ph.i.i.i.i883.preheader
                                        #   in Loop: Header=BB105_99 Depth=2
	movq	%r14, %rdx
	subq	%r15, %rdx
	movq	%r14, %rbx
	movq	%r15, %rax
	cmpq	$32, %rdx
	jb	.LBB105_111
# %bb.108:                              # %vector.ph1793
                                        #   in Loop: Header=BB105_99 Depth=2
	shrq	$3, %rcx
	incq	%rcx
	movq	%rcx, %rdx
	movabsq	$4611686018427387900, %rax      # imm = 0x3FFFFFFFFFFFFFFC
	andq	%rax, %rdx
	leaq	(%r14,%rdx,8), %rbx
	leaq	(%r15,%rdx,8), %rax
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB105_109:                            # %vector.body1800
                                        #   Parent Loop BB105_22 Depth=1
                                        #     Parent Loop BB105_99 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movups	(%r15,%rsi,8), %xmm0
	movups	16(%r15,%rsi,8), %xmm1
	movups	%xmm0, (%r14,%rsi,8)
	movups	%xmm1, 16(%r14,%rsi,8)
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB105_109
# %bb.110:                              # %middle.block1790
                                        #   in Loop: Header=BB105_99 Depth=2
	cmpq	%rdx, %rcx
	je	.LBB105_112
	.p2align	4, 0x90
.LBB105_111:                            # %.lr.ph.i.i.i.i883
                                        #   Parent Loop BB105_22 Depth=1
                                        #     Parent Loop BB105_99 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	(%rax), %rcx
	movq	%rcx, (%rbx)
	addq	$8, %rax
	addq	$8, %rbx
	cmpq	%r12, %rax
	jne	.LBB105_111
.LBB105_112:                            # %_ZNSt6vectorIN8pybind116handleESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit22.i894
                                        #   in Loop: Header=BB105_99 Depth=2
	testq	%r15, %r15
	je	.LBB105_114
# %bb.113:                              #   in Loop: Header=BB105_99 Depth=2
	movq	%r15, %rdi
	movq	%rbp, %rsi
	callq	_ZdlPvm@PLT
.LBB105_114:                            # %.noexc422
                                        #   in Loop: Header=BB105_99 Depth=2
	addq	$8, %rbx
	movq	%r14, 24(%rsp)
	movq	%rbx, 32(%rsp)
	movq	376(%rsp), %rax                 # 8-byte Reload
	leaq	(%r14,%rax,8), %rax
	movq	%rax, 40(%rsp)
	movq	360(%rsp), %rsi                 # 8-byte Reload
.LBB105_115:                            # %_ZNSt6vectorIN8pybind116handleESaIS1_EE9push_backERKS1_.exit423
                                        #   in Loop: Header=BB105_99 Depth=2
	movzbl	24(%rsi), %eax
	movq	64(%rsp), %rsi
	movl	72(%rsp), %ecx
	cmpq	80(%rsp), %rsi
	leaq	48(%rsp), %rdi
	je	.LBB105_120
# %bb.116:                              #   in Loop: Header=BB105_99 Depth=2
	leal	1(%rcx), %edx
	movl	%edx, 72(%rsp)
	cmpq	$63, %rcx
	jne	.LBB105_118
# %bb.117:                              #   in Loop: Header=BB105_99 Depth=2
	movl	$0, 72(%rsp)
	leaq	8(%rsi), %rdx
	movq	%rdx, 64(%rsp)
.LBB105_118:                            # %_ZNSt13_Bit_iteratorppEi.exit.i427
                                        #   in Loop: Header=BB105_99 Depth=2
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	testb	$1, %al
	je	.LBB105_121
# %bb.119:                              #   in Loop: Header=BB105_99 Depth=2
	orq	(%rsi), %rdx
	jmp	.LBB105_122
	.p2align	4, 0x90
.LBB105_120:                            #   in Loop: Header=BB105_99 Depth=2
.Ltmp1708:
	movzbl	%al, %eax
	andl	$1, %eax
	movl	%ecx, %edx
	movl	%eax, %ecx
	callq	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb@PLT
.Ltmp1709:
	jmp	.LBB105_123
	.p2align	4, 0x90
.LBB105_121:                            #   in Loop: Header=BB105_99 Depth=2
	notq	%rdx
	andq	(%rsi), %rdx
.LBB105_122:                            # %.sink.split1642
                                        #   in Loop: Header=BB105_99 Depth=2
	movq	%rdx, (%rsi)
.LBB105_123:                            #   in Loop: Header=BB105_99 Depth=2
	movq	312(%rsp), %rbp                 # 8-byte Reload
	incq	%rbp
	movq	168(%rsp), %r14                 # 8-byte Reload
	movzwl	96(%r14), %eax
	cmpq	%rax, %rbp
	jae	.LBB105_126
# %bb.124:                              #   in Loop: Header=BB105_99 Depth=2
	movq	24(%r14), %rcx
	movq	%rbp, %rdx
	shlq	$5, %rdx
	leaq	(%rcx,%rdx), %rsi
	movq	16(%rcx,%rdx), %rbx
	testq	%rbx, %rbx
	movq	120(%rsp), %r13                 # 8-byte Reload
	jne	.LBB105_99
	jmp	.LBB105_127
.LBB105_125:                            #   in Loop: Header=BB105_22 Depth=1
	movq	%rdx, %rbp
	jmp	.LBB105_127
.LBB105_126:                            #   in Loop: Header=BB105_22 Depth=1
	movq	120(%rsp), %r13                 # 8-byte Reload
.LBB105_127:                            # %_ZNSt6vectorIbSaIbEE9push_backEb.exit429
                                        #   in Loop: Header=BB105_22 Depth=1
	movzwl	%ax, %eax
	movl	$4, %ebx
	cmpq	%rax, %rbp
	movq	280(%rsp), %r15                 # 8-byte Reload
	movq	288(%rsp), %r12                 # 8-byte Reload
	jb	.LBB105_300
.LBB105_128:                            #   in Loop: Header=BB105_22 Depth=1
	movq	384(%rsp), %rax                 # 8-byte Reload
	shrl	$6, %eax
	movq	472(%rsp), %rcx                 # 8-byte Reload
	subq	%rax, %rcx
	movsbl	368(%rsp), %eax                 # 1-byte Folded Reload
	shrl	$7, %eax
	movswq	%ax, %rax
	addq	%rcx, %rax
	movq	%rax, 376(%rsp)                 # 8-byte Spill
	cmpq	%rax, %rbp
	jae	.LBB105_193
# %bb.129:                              # %.preheader1178
                                        #   in Loop: Header=BB105_22 Depth=1
	movl	$0, 384(%rsp)                   # 4-byte Folded Spill
	jmp	.LBB105_132
	.p2align	4, 0x90
.LBB105_130:                            #   in Loop: Header=BB105_132 Depth=2
.Ltmp1750:
	movzbl	%al, %eax
	andl	$1, %eax
	movq	%rbx, %rdi
	movl	%ecx, %edx
	movl	%eax, %ecx
	callq	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb@PLT
.Ltmp1751:
.LBB105_131:                            #   in Loop: Header=BB105_132 Depth=2
	movq	312(%rsp), %rbp                 # 8-byte Reload
	incq	%rbp
	cmpq	376(%rsp), %rbp                 # 8-byte Folded Reload
	movq	280(%rsp), %r15                 # 8-byte Reload
	movq	288(%rsp), %r12                 # 8-byte Reload
	movq	168(%rsp), %r14                 # 8-byte Reload
	movq	120(%rsp), %r13                 # 8-byte Reload
	jae	.LBB105_193
.LBB105_132:                            #   Parent Loop BB105_22 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB105_161 Depth 3
                                        #       Child Loop BB105_163 Depth 3
                                        #       Child Loop BB105_180 Depth 3
                                        #       Child Loop BB105_182 Depth 3
	movq	24(%r14), %rax
	movq	%rbp, %rcx
	shlq	$5, %rcx
	leaq	(%rax,%rcx), %r13
	testq	%r15, %r15
	je	.LBB105_143
# %bb.133:                              #   in Loop: Header=BB105_132 Depth=2
	movq	(%rax,%rcx), %rsi
	testq	%rsi, %rsi
	je	.LBB105_143
# %bb.134:                              #   in Loop: Header=BB105_132 Depth=2
	movq	320(%rsp), %rdi
.Ltmp1714:
	callq	_ZN8pybind116detail18dict_getitemstringEP7_objectPKc
.Ltmp1715:
# %bb.135:                              #   in Loop: Header=BB105_132 Depth=2
	movq	%rax, %rbx
	testq	%rax, %rax
	je	.LBB105_143
# %bb.136:                              #   in Loop: Header=BB105_132 Depth=2
	testb	$1, 384(%rsp)                   # 1-byte Folded Reload
	jne	.LBB105_140
# %bb.137:                              #   in Loop: Header=BB105_132 Depth=2
	movq	320(%rsp), %rdi
.Ltmp1717:
	callq	PyDict_Copy@PLT
.Ltmp1718:
# %bb.138:                              #   in Loop: Header=BB105_132 Depth=2
	movq	320(%rsp), %rcx
	movq	%rcx, 208(%rsp)
	movq	%rax, 320(%rsp)
	movq	$0, 128(%rsp)
.Ltmp1720:
	leaq	208(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1721:
# %bb.139:                              # %_ZN8pybind114dictaSEOS0_.exit
                                        #   in Loop: Header=BB105_132 Depth=2
.Ltmp1723:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1724:
.LBB105_140:                            #   in Loop: Header=BB105_132 Depth=2
	movq	%rbx, %r15
	movq	320(%rsp), %rdi
	movq	%r13, %rbx
	movq	(%r13), %rsi
.Ltmp1726:
	callq	PyDict_DelItemString@PLT
.Ltmp1727:
# %bb.141:                              #   in Loop: Header=BB105_132 Depth=2
	cmpl	$-1, %eax
	je	.LBB105_690
# %bb.142:                              #   in Loop: Header=BB105_132 Depth=2
	movb	$1, %al
	movl	%eax, 384(%rsp)                 # 4-byte Spill
	movq	280(%rsp), %rdx                 # 8-byte Reload
	movq	288(%rsp), %r12                 # 8-byte Reload
	movq	168(%rsp), %r14                 # 8-byte Reload
	movq	%rbx, %r13
	jmp	.LBB105_144
	.p2align	4, 0x90
.LBB105_143:                            # %.thread1076
                                        #   in Loop: Header=BB105_132 Depth=2
	movq	%r15, %rdx
	movq	16(%r13), %r15
.LBB105_144:                            #   in Loop: Header=BB105_132 Depth=2
	testb	$2, 24(%r13)
	sete	%al
	cmpq	_Py_NoneStruct@GOTPCREL(%rip), %r15
	sete	%cl
	movl	$4, %ebx
	testb	%cl, %al
	jne	.LBB105_216
# %bb.145:                              #   in Loop: Header=BB105_132 Depth=2
	movq	%r15, 360(%rsp)                 # 8-byte Spill
	testq	%r15, %r15
	je	.LBB105_216
# %bb.146:                              #   in Loop: Header=BB105_132 Depth=2
	movq	%rbp, 312(%rsp)                 # 8-byte Spill
	testb	$64, 89(%r14)
	movq	32(%rsp), %rbp
	jne	.LBB105_148
# %bb.147:                              #   in Loop: Header=BB105_132 Depth=2
	leaq	48(%rsp), %rbx
	jmp	.LBB105_169
	.p2align	4, 0x90
.LBB105_148:                            #   in Loop: Header=BB105_132 Depth=2
	movq	%rbp, %rax
	subq	24(%rsp), %rax
	sarq	$3, %rax
	movzwl	94(%r14), %ecx
	cmpq	%rcx, %rax
	leaq	48(%rsp), %rbx
	jne	.LBB105_169
# %bb.149:                              #   in Loop: Header=BB105_132 Depth=2
	movq	%r13, %r12
	movq	_Py_NoneStruct@GOTPCREL(%rip), %rax
	movq	%rax, 208(%rsp)
.Ltmp1733:
	leaq	208(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1734:
# %bb.150:                              # %_ZN8pybind114noneC2Ev.exit
                                        #   in Loop: Header=BB105_132 Depth=2
	movq	32(%rsp), %r13
	cmpq	40(%rsp), %r13
	je	.LBB105_152
# %bb.151:                              #   in Loop: Header=BB105_132 Depth=2
	movq	208(%rsp), %rax
	movq	%rax, (%r13)
	addq	$8, 32(%rsp)
	jmp	.LBB105_167
.LBB105_152:                            #   in Loop: Header=BB105_132 Depth=2
	movq	24(%rsp), %r15
	movq	%r13, %rbp
	subq	%r15, %rbp
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %rbp
	je	.LBB105_706
# %bb.153:                              # %_ZNKSt6vectorIN8pybind116handleESaIS1_EE12_M_check_lenEmPKc.exit.i900
                                        #   in Loop: Header=BB105_132 Depth=2
	movq	%rbp, %r14
	sarq	$3, %r14
	cmpq	$1, %r14
	movq	%r14, %rax
	adcq	$0, %rax
	leaq	(%rax,%r14), %rdx
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rcx, %rdx
	cmovaeq	%rcx, %rdx
	addq	%r14, %rax
	cmovbq	%rcx, %rdx
	testq	%rdx, %rdx
	movq	%rdx, 368(%rsp)                 # 8-byte Spill
	je	.LBB105_156
# %bb.154:                              #   in Loop: Header=BB105_132 Depth=2
	leaq	(,%rdx,8), %rdi
.Ltmp1736:
	callq	_Znwm@PLT
.Ltmp1737:
# %bb.155:                              #   in Loop: Header=BB105_132 Depth=2
	movq	%rax, %rbx
	jmp	.LBB105_157
.LBB105_156:                            #   in Loop: Header=BB105_132 Depth=2
	xorl	%ebx, %ebx
.LBB105_157:                            # %_ZNSt12_Vector_baseIN8pybind116handleESaIS1_EE11_M_allocateEm.exit.i903
                                        #   in Loop: Header=BB105_132 Depth=2
	movq	208(%rsp), %rax
	movq	%rax, (%rbx,%r14,8)
	movq	%rbx, %r14
	cmpq	%r13, %r15
	je	.LBB105_164
# %bb.158:                              # %.lr.ph.i.i.i.i905.preheader
                                        #   in Loop: Header=BB105_132 Depth=2
	leaq	-8(%rbp), %rcx
	movq	%rbx, %r14
	movq	%r15, %rax
	cmpq	$24, %rcx
	jb	.LBB105_163
# %bb.159:                              # %.lr.ph.i.i.i.i905.preheader
                                        #   in Loop: Header=BB105_132 Depth=2
	movq	%rbx, %rdx
	subq	%r15, %rdx
	movq	%rbx, %r14
	movq	%r15, %rax
	cmpq	$32, %rdx
	jb	.LBB105_163
# %bb.160:                              # %vector.ph1769
                                        #   in Loop: Header=BB105_132 Depth=2
	shrq	$3, %rcx
	incq	%rcx
	movq	%rcx, %rdx
	movabsq	$4611686018427387900, %rax      # imm = 0x3FFFFFFFFFFFFFFC
	andq	%rax, %rdx
	leaq	(%rbx,%rdx,8), %r14
	leaq	(%r15,%rdx,8), %rax
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB105_161:                            # %vector.body1776
                                        #   Parent Loop BB105_22 Depth=1
                                        #     Parent Loop BB105_132 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movups	(%r15,%rsi,8), %xmm0
	movups	16(%r15,%rsi,8), %xmm1
	movups	%xmm0, (%rbx,%rsi,8)
	movups	%xmm1, 16(%rbx,%rsi,8)
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB105_161
# %bb.162:                              # %middle.block1766
                                        #   in Loop: Header=BB105_132 Depth=2
	cmpq	%rdx, %rcx
	je	.LBB105_164
	.p2align	4, 0x90
.LBB105_163:                            # %.lr.ph.i.i.i.i905
                                        #   Parent Loop BB105_22 Depth=1
                                        #     Parent Loop BB105_132 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	(%rax), %rcx
	movq	%rcx, (%r14)
	addq	$8, %rax
	addq	$8, %r14
	cmpq	%r13, %rax
	jne	.LBB105_163
.LBB105_164:                            # %_ZNSt6vectorIN8pybind116handleESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit22.i916
                                        #   in Loop: Header=BB105_132 Depth=2
	testq	%r15, %r15
	je	.LBB105_166
# %bb.165:                              #   in Loop: Header=BB105_132 Depth=2
	movq	%r15, %rdi
	movq	%rbp, %rsi
	callq	_ZdlPvm@PLT
.LBB105_166:                            # %.noexc434
                                        #   in Loop: Header=BB105_132 Depth=2
	addq	$8, %r14
	movq	%rbx, 24(%rsp)
	movq	%r14, 32(%rsp)
	movq	368(%rsp), %rax                 # 8-byte Reload
	leaq	(%rbx,%rax,8), %rax
	movq	%rax, 40(%rsp)
	leaq	48(%rsp), %rbx
.LBB105_167:                            # %_ZNSt6vectorIN8pybind116handleESaIS1_EE9push_backEOS1_.exit
                                        #   in Loop: Header=BB105_132 Depth=2
	movq	%r12, %r13
.Ltmp1739:
	leaq	208(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1740:
# %bb.168:                              # %_ZN8pybind116objectD2Ev.exit435
                                        #   in Loop: Header=BB105_132 Depth=2
	movq	32(%rsp), %rbp
.LBB105_169:                            #   in Loop: Header=BB105_132 Depth=2
	cmpq	40(%rsp), %rbp
	je	.LBB105_171
# %bb.170:                              #   in Loop: Header=BB105_132 Depth=2
	movq	360(%rsp), %rax                 # 8-byte Reload
	movq	%rax, (%rbp)
	addq	$8, 32(%rsp)
	jmp	.LBB105_186
	.p2align	4, 0x90
.LBB105_171:                            #   in Loop: Header=BB105_132 Depth=2
	movq	%r13, 368(%rsp)                 # 8-byte Spill
	movq	24(%rsp), %r15
	movq	%rbp, %r13
	subq	%r15, %r13
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %r13
	je	.LBB105_686
# %bb.172:                              # %_ZNKSt6vectorIN8pybind116handleESaIS1_EE12_M_check_lenEmPKc.exit.i921
                                        #   in Loop: Header=BB105_132 Depth=2
	movq	%r13, %r14
	sarq	$3, %r14
	cmpq	$1, %r14
	movq	%r14, %rax
	adcq	$0, %rax
	leaq	(%rax,%r14), %r12
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rcx, %r12
	cmovaeq	%rcx, %r12
	addq	%r14, %rax
	cmovbq	%rcx, %r12
	testq	%r12, %r12
	je	.LBB105_175
# %bb.173:                              #   in Loop: Header=BB105_132 Depth=2
	leaq	(,%r12,8), %rdi
.Ltmp1748:
	callq	_Znwm@PLT
.Ltmp1749:
# %bb.174:                              #   in Loop: Header=BB105_132 Depth=2
	movq	%rax, %rbx
	jmp	.LBB105_176
.LBB105_175:                            #   in Loop: Header=BB105_132 Depth=2
	xorl	%ebx, %ebx
.LBB105_176:                            # %_ZNSt12_Vector_baseIN8pybind116handleESaIS1_EE11_M_allocateEm.exit.i924
                                        #   in Loop: Header=BB105_132 Depth=2
	movq	360(%rsp), %rax                 # 8-byte Reload
	movq	%rax, (%rbx,%r14,8)
	movq	%rbx, %r14
	cmpq	%rbp, %r15
	je	.LBB105_183
# %bb.177:                              # %.lr.ph.i.i.i.i926.preheader
                                        #   in Loop: Header=BB105_132 Depth=2
	leaq	-8(%r13), %rcx
	movq	%rbx, %r14
	movq	%r15, %rax
	cmpq	$24, %rcx
	jb	.LBB105_182
# %bb.178:                              # %.lr.ph.i.i.i.i926.preheader
                                        #   in Loop: Header=BB105_132 Depth=2
	movq	%rbx, %rdx
	subq	%r15, %rdx
	movq	%rbx, %r14
	movq	%r15, %rax
	cmpq	$32, %rdx
	jb	.LBB105_182
# %bb.179:                              # %vector.ph1745
                                        #   in Loop: Header=BB105_132 Depth=2
	shrq	$3, %rcx
	incq	%rcx
	movq	%rcx, %rdx
	movabsq	$4611686018427387900, %rax      # imm = 0x3FFFFFFFFFFFFFFC
	andq	%rax, %rdx
	leaq	(%rbx,%rdx,8), %r14
	leaq	(%r15,%rdx,8), %rax
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB105_180:                            # %vector.body1752
                                        #   Parent Loop BB105_22 Depth=1
                                        #     Parent Loop BB105_132 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movups	(%r15,%rsi,8), %xmm0
	movups	16(%r15,%rsi,8), %xmm1
	movups	%xmm0, (%rbx,%rsi,8)
	movups	%xmm1, 16(%rbx,%rsi,8)
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB105_180
# %bb.181:                              # %middle.block1742
                                        #   in Loop: Header=BB105_132 Depth=2
	cmpq	%rdx, %rcx
	je	.LBB105_183
	.p2align	4, 0x90
.LBB105_182:                            # %.lr.ph.i.i.i.i926
                                        #   Parent Loop BB105_22 Depth=1
                                        #     Parent Loop BB105_132 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	(%rax), %rcx
	movq	%rcx, (%r14)
	addq	$8, %rax
	addq	$8, %r14
	cmpq	%rbp, %rax
	jne	.LBB105_182
.LBB105_183:                            # %_ZNSt6vectorIN8pybind116handleESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit22.i937
                                        #   in Loop: Header=BB105_132 Depth=2
	testq	%r15, %r15
	je	.LBB105_185
# %bb.184:                              #   in Loop: Header=BB105_132 Depth=2
	movq	%r15, %rdi
	movq	%r13, %rsi
	callq	_ZdlPvm@PLT
.LBB105_185:                            # %.noexc438
                                        #   in Loop: Header=BB105_132 Depth=2
	addq	$8, %r14
	movq	%rbx, 24(%rsp)
	movq	%r14, 32(%rsp)
	leaq	(%rbx,%r12,8), %rax
	movq	%rax, 40(%rsp)
	leaq	48(%rsp), %rbx
	movq	368(%rsp), %r13                 # 8-byte Reload
.LBB105_186:                            # %_ZNSt6vectorIN8pybind116handleESaIS1_EE9push_backERKS1_.exit439
                                        #   in Loop: Header=BB105_132 Depth=2
	movzbl	24(%r13), %eax
	movq	64(%rsp), %rsi
	movl	72(%rsp), %ecx
	cmpq	80(%rsp), %rsi
	je	.LBB105_130
# %bb.187:                              #   in Loop: Header=BB105_132 Depth=2
	leal	1(%rcx), %edx
	movl	%edx, 72(%rsp)
	cmpq	$63, %rcx
	jne	.LBB105_189
# %bb.188:                              #   in Loop: Header=BB105_132 Depth=2
	movl	$0, 72(%rsp)
	leaq	8(%rsi), %rdx
	movq	%rdx, 64(%rsp)
.LBB105_189:                            # %_ZNSt13_Bit_iteratorppEi.exit.i443
                                        #   in Loop: Header=BB105_132 Depth=2
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	testb	$1, %al
	je	.LBB105_191
# %bb.190:                              #   in Loop: Header=BB105_132 Depth=2
	orq	(%rsi), %rdx
	jmp	.LBB105_192
	.p2align	4, 0x90
.LBB105_191:                            #   in Loop: Header=BB105_132 Depth=2
	notq	%rdx
	andq	(%rsi), %rdx
.LBB105_192:                            # %.sink.split1645
                                        #   in Loop: Header=BB105_132 Depth=2
	movq	%rdx, (%rsi)
	jmp	.LBB105_131
.LBB105_193:                            # %_ZNSt6vectorIbSaIbEE9push_backEb.exit445
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	320(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB105_197
# %bb.194:                              #   in Loop: Header=BB105_22 Depth=1
.Ltmp1753:
	callq	PyDict_Size@PLT
.Ltmp1754:
# %bb.195:                              #   in Loop: Header=BB105_22 Depth=1
	movq	168(%rsp), %r14                 # 8-byte Reload
	movzwl	89(%r14), %ecx
	testq	%rax, %rax
	je	.LBB105_217
# %bb.196:                              #   in Loop: Header=BB105_22 Depth=1
	movl	%ecx, %eax
	movl	$4, %ebx
	andl	$128, %eax
	movq	280(%rsp), %r15                 # 8-byte Reload
	movq	288(%rsp), %r12                 # 8-byte Reload
	movq	120(%rsp), %r13                 # 8-byte Reload
	je	.LBB105_300
# %bb.198:                              #   in Loop: Header=BB105_22 Depth=1
	testb	$64, %cl
	jne	.LBB105_199
.LBB105_218:                            #   in Loop: Header=BB105_22 Depth=1
	testb	%cl, %cl
	leaq	48(%rsp), %rbx
	js	.LBB105_251
	jmp	.LBB105_279
.LBB105_197:                            # %_ZNSt6vectorIbSaIbEE9push_backEb.exit445._crit_edge
                                        #   in Loop: Header=BB105_22 Depth=1
	movzwl	89(%r14), %ecx
	testb	$64, %cl
	je	.LBB105_218
.LBB105_199:                            #   in Loop: Header=BB105_22 Depth=1
.Ltmp1755:
	xorl	%edi, %edi
	callq	PyTuple_New@PLT
.Ltmp1756:
# %bb.200:                              # %.noexc448
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	%rax, 8(%rsp)
	testq	%rax, %rax
	movq	448(%rsp), %rbx                 # 8-byte Reload
	movq	(%rsp), %r14                    # 8-byte Reload
	je	.LBB105_717
# %bb.201:                              # %_ZN8pybind115tupleC2IlTnNSt9enable_ifIXsr3std11is_integralIT_EE5valueEiE4typeELi0EEES3_.exit
                                        #   in Loop: Header=BB105_22 Depth=1
	cmpq	$0, 392(%rsp)                   # 8-byte Folded Reload
	je	.LBB105_219
# %bb.202:                              #   in Loop: Header=BB105_22 Depth=1
	movq	%rbx, %r15
	subq	%r14, %r15
	jbe	.LBB105_223
# %bb.203:                              #   in Loop: Header=BB105_22 Depth=1
.Ltmp1773:
	movq	%r15, %rdi
	callq	PyTuple_New@PLT
.Ltmp1774:
# %bb.204:                              # %.noexc462
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	%rax, 128(%rsp)
	testq	%rax, %rax
	je	.LBB105_734
# %bb.205:                              # %_ZN8pybind115tupleC2ImTnNSt9enable_ifIXsr3std11is_integralIT_EE5valueEiE4typeELi0EEES3_.exit
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	8(%rsp), %rcx
	movq	%rcx, 208(%rsp)
	movq	%rax, 8(%rsp)
	movq	$0, 128(%rsp)
.Ltmp1776:
	leaq	208(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1777:
# %bb.206:                              # %_ZN8pybind115tupleaSEOS0_.exit466
                                        #   in Loop: Header=BB105_22 Depth=1
.Ltmp1779:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1780:
# %bb.207:                              # %_ZN8pybind116objectD2Ev.exit467
                                        #   in Loop: Header=BB105_22 Depth=1
	cmpq	%r14, %rbx
	je	.LBB105_227
# %bb.208:                              # %.lr.ph1487.preheader
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	464(%rsp), %rax                 # 8-byte Reload
	leaq	(%rax,%r14,8), %r14
	xorl	%ebx, %ebx
	.p2align	4, 0x90
.LBB105_209:                            # %.lr.ph1487
                                        #   Parent Loop BB105_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	8(%r12), %rax
	testb	$4, 171(%rax)
	je	.LBB105_692
# %bb.210:                              #   in Loop: Header=BB105_209 Depth=2
	movq	8(%rsp), %r13
	movq	%r13, 216(%rsp)
	movq	%rbx, 224(%rsp)
	movq	$0, 232(%rsp)
	movq	(%r14,%rbx,8), %rax
	movq	%rax, 128(%rsp)
.Ltmp1782:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1783:
# %bb.211:                              # %.noexc469
                                        #   in Loop: Header=BB105_209 Depth=2
	movq	(%rax), %rdx
.Ltmp1784:
	movq	%r13, %rdi
	movq	%rbx, %rsi
	callq	PyTuple_SetItem@PLT
.Ltmp1785:
# %bb.212:                              # %.noexc470
                                        #   in Loop: Header=BB105_209 Depth=2
	testl	%eax, %eax
	jne	.LBB105_693
# %bb.213:                              #   in Loop: Header=BB105_209 Depth=2
.Ltmp1796:
	leaq	232(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1797:
# %bb.214:                              # %_ZN8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEED2Ev.exit
                                        #   in Loop: Header=BB105_209 Depth=2
	incq	%rbx
	cmpq	%rbx, %r15
	jne	.LBB105_209
	jmp	.LBB105_227
.LBB105_216:                            #   in Loop: Header=BB105_22 Depth=1
	movq	%rdx, %r15
	jmp	.LBB105_300
.LBB105_215:                            #   in Loop: Header=BB105_22 Depth=1
	movl	$4, %ebx
	movq	168(%rsp), %r14                 # 8-byte Reload
	jmp	.LBB105_301
.LBB105_217:                            #   in Loop: Header=BB105_22 Depth=1
	movq	280(%rsp), %r15                 # 8-byte Reload
	movq	288(%rsp), %r12                 # 8-byte Reload
	movq	120(%rsp), %r13                 # 8-byte Reload
	testb	$64, %cl
	jne	.LBB105_199
	jmp	.LBB105_218
.LBB105_219:                            #   in Loop: Header=BB105_22 Depth=1
	movq	%r12, 128(%rsp)
.Ltmp1805:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1806:
# %bb.220:                              # %_ZN8pybind1118reinterpret_borrowINS_5tupleEEET_NS_6handleE.exit
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	8(%rsp), %rax
	movq	%rax, 208(%rsp)
	movq	128(%rsp), %rax
	movq	%rax, 8(%rsp)
	movq	$0, 128(%rsp)
.Ltmp1808:
	leaq	208(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1809:
# %bb.221:                              # %_ZN8pybind115tupleaSEOS0_.exit
                                        #   in Loop: Header=BB105_22 Depth=1
.Ltmp1811:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1812:
	jmp	.LBB105_227
.LBB105_222:                            #   in Loop: Header=BB105_22 Depth=1
	movl	$4, %ebx
	jmp	.LBB105_301
.LBB105_223:                            #   in Loop: Header=BB105_22 Depth=1
.Ltmp1758:
	xorl	%edi, %edi
	callq	PyTuple_New@PLT
.Ltmp1759:
# %bb.224:                              # %.noexc454
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	%rax, 128(%rsp)
	testq	%rax, %rax
	je	.LBB105_732
# %bb.225:                              # %_ZN8pybind115tupleC2IiTnNSt9enable_ifIXsr3std11is_integralIT_EE5valueEiE4typeELi0EEES3_.exit
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	8(%rsp), %rcx
	movq	%rcx, 208(%rsp)
	movq	%rax, 8(%rsp)
	movq	$0, 128(%rsp)
.Ltmp1761:
	leaq	208(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1762:
# %bb.226:                              # %_ZN8pybind115tupleaSEOS0_.exit458
                                        #   in Loop: Header=BB105_22 Depth=1
.Ltmp1764:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1765:
.LBB105_227:                            # %.loopexit1172
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	24(%rsp), %r15
	movq	32(%rsp), %r12
	movq	%r12, %r13
	subq	%r15, %r13
	movq	%r13, %r14
	sarq	$3, %r14
	movq	168(%rsp), %rax                 # 8-byte Reload
	movzwl	94(%rax), %eax
	cmpq	%rax, %r14
	jbe	.LBB105_229
# %bb.228:                              #   in Loop: Header=BB105_22 Depth=1
	movq	8(%rsp), %rcx
	movq	%rcx, (%r15,%rax,8)
	jmp	.LBB105_244
.LBB105_229:                            #   in Loop: Header=BB105_22 Depth=1
	cmpq	40(%rsp), %r12
	leaq	48(%rsp), %rdi
	je	.LBB105_232
# %bb.230:                              #   in Loop: Header=BB105_22 Depth=1
	movq	8(%rsp), %rax
	movq	%rax, (%r12)
	addq	$8, 32(%rsp)
	movq	64(%rsp), %rsi
	movl	72(%rsp), %ecx
	cmpq	80(%rsp), %rsi
	jne	.LBB105_245
.LBB105_231:                            #   in Loop: Header=BB105_22 Depth=1
.Ltmp1819:
	movl	%ecx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb@PLT
.Ltmp1820:
	jmp	.LBB105_248
.LBB105_232:                            #   in Loop: Header=BB105_22 Depth=1
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %r13
	je	.LBB105_741
# %bb.233:                              # %_ZNKSt6vectorIN8pybind116handleESaIS1_EE12_M_check_lenEmPKc.exit.i943
                                        #   in Loop: Header=BB105_22 Depth=1
	cmpq	$1, %r14
	adcq	%r14, %r14
	leaq	(,%r14,8), %rdi
.Ltmp1814:
	callq	_Znwm@PLT
.Ltmp1815:
# %bb.234:                              # %_ZNSt12_Vector_baseIN8pybind116handleESaIS1_EE11_M_allocateEm.exit.i946
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	%rax, %rbx
	movq	8(%rsp), %rax
	movq	%rax, (%rbx,%r13)
	movq	%rbx, %rbp
	cmpq	%r12, %r15
	je	.LBB105_241
# %bb.235:                              # %.lr.ph.i.i.i.i948.preheader
                                        #   in Loop: Header=BB105_22 Depth=1
	leaq	-8(%r13), %rcx
	movq	%rbx, %rbp
	movq	%r15, %rax
	cmpq	$24, %rcx
	jb	.LBB105_240
# %bb.236:                              # %.lr.ph.i.i.i.i948.preheader
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	%rbx, %rdx
	subq	%r15, %rdx
	movq	%rbx, %rbp
	movq	%r15, %rax
	cmpq	$32, %rdx
	jb	.LBB105_240
# %bb.237:                              # %vector.ph1721
                                        #   in Loop: Header=BB105_22 Depth=1
	shrq	$3, %rcx
	incq	%rcx
	movq	%rcx, %rdx
	movabsq	$4611686018427387900, %rax      # imm = 0x3FFFFFFFFFFFFFFC
	andq	%rax, %rdx
	leaq	(%rbx,%rdx,8), %rbp
	leaq	(%r15,%rdx,8), %rax
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB105_238:                            # %vector.body1728
                                        #   Parent Loop BB105_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movups	(%r15,%rsi,8), %xmm0
	movups	16(%r15,%rsi,8), %xmm1
	movups	%xmm0, (%rbx,%rsi,8)
	movups	%xmm1, 16(%rbx,%rsi,8)
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB105_238
# %bb.239:                              # %middle.block1718
                                        #   in Loop: Header=BB105_22 Depth=1
	cmpq	%rdx, %rcx
	je	.LBB105_241
	.p2align	4, 0x90
.LBB105_240:                            # %.lr.ph.i.i.i.i948
                                        #   Parent Loop BB105_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	(%rax), %rcx
	movq	%rcx, (%rbp)
	addq	$8, %rax
	addq	$8, %rbp
	cmpq	%r12, %rax
	jne	.LBB105_240
.LBB105_241:                            # %_ZNSt6vectorIN8pybind116handleESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit22.i959
                                        #   in Loop: Header=BB105_22 Depth=1
	testq	%r15, %r15
	je	.LBB105_243
# %bb.242:                              #   in Loop: Header=BB105_22 Depth=1
	movq	%r15, %rdi
	movq	%r13, %rsi
	callq	_ZdlPvm@PLT
.LBB105_243:                            # %.noexc478
                                        #   in Loop: Header=BB105_22 Depth=1
	addq	$8, %rbp
	movq	%rbx, 24(%rsp)
	movq	%rbp, 32(%rsp)
	leaq	(%rbx,%r14,8), %rax
	movq	%rax, 40(%rsp)
.LBB105_244:                            # %_ZNSt6vectorIN8pybind116handleESaIS1_EE9push_backERKS1_.exit479
                                        #   in Loop: Header=BB105_22 Depth=1
	leaq	48(%rsp), %rdi
	movq	64(%rsp), %rsi
	movl	72(%rsp), %ecx
	cmpq	80(%rsp), %rsi
	je	.LBB105_231
.LBB105_245:                            #   in Loop: Header=BB105_22 Depth=1
	leal	1(%rcx), %eax
	movl	%eax, 72(%rsp)
	cmpq	$63, %rcx
	jne	.LBB105_247
# %bb.246:                              #   in Loop: Header=BB105_22 Depth=1
	movl	$0, 72(%rsp)
	leaq	8(%rsi), %rax
	movq	%rax, 64(%rsp)
.LBB105_247:                            # %_ZNSt13_Bit_iteratorppEi.exit.i483
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	$-2, %rax
                                        # kill: def $cl killed $cl killed $rcx
	rolq	%cl, %rax
	andq	%rax, (%rsi)
.LBB105_248:                            # %_ZNSt6vectorIbSaIbEE9push_backEb.exit485
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	88(%rsp), %rax
	movq	%rax, 208(%rsp)
	movq	8(%rsp), %rax
	movq	%rax, 88(%rsp)
	movq	$0, 8(%rsp)
.Ltmp1825:
	leaq	208(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1826:
# %bb.249:                              # %_ZN8pybind116objectaSEOS0_.exit
                                        #   in Loop: Header=BB105_22 Depth=1
.Ltmp1828:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1829:
	movq	280(%rsp), %r15                 # 8-byte Reload
	movq	288(%rsp), %r12                 # 8-byte Reload
	movq	168(%rsp), %r14                 # 8-byte Reload
	movq	120(%rsp), %r13                 # 8-byte Reload
# %bb.250:                              # %_ZN8pybind116objectD2Ev.exit487
                                        #   in Loop: Header=BB105_22 Depth=1
	movzwl	89(%r14), %ecx
	testb	%cl, %cl
	leaq	48(%rsp), %rbx
	jns	.LBB105_279
.LBB105_251:                            #   in Loop: Header=BB105_22 Depth=1
	cmpq	$0, 320(%rsp)
	jne	.LBB105_256
# %bb.252:                              #   in Loop: Header=BB105_22 Depth=1
.Ltmp1837:
	callq	PyDict_New@PLT
.Ltmp1838:
# %bb.253:                              # %.noexc491
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	%rax, 128(%rsp)
	testq	%rax, %rax
	je	.LBB105_730
# %bb.254:                              # %_ZN8pybind114dictC2Ev.exit
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	320(%rsp), %rcx
	movq	%rcx, 208(%rsp)
	movq	%rax, 320(%rsp)
	movq	$0, 128(%rsp)
.Ltmp1840:
	leaq	208(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1841:
# %bb.255:                              # %_ZN8pybind114dictaSEOS0_.exit495
                                        #   in Loop: Header=BB105_22 Depth=1
.Ltmp1843:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1844:
.LBB105_256:                            #   in Loop: Header=BB105_22 Depth=1
	movq	32(%rsp), %r14
	cmpq	40(%rsp), %r14
	je	.LBB105_261
# %bb.257:                              #   in Loop: Header=BB105_22 Depth=1
	movq	320(%rsp), %rax
	movq	%rax, (%r14)
	addq	$8, 32(%rsp)
	movq	64(%rsp), %rsi
	movl	72(%rsp), %ecx
	cmpq	80(%rsp), %rsi
	je	.LBB105_276
.LBB105_258:                            #   in Loop: Header=BB105_22 Depth=1
	leal	1(%rcx), %eax
	movl	%eax, 72(%rsp)
	cmpq	$63, %rcx
	jne	.LBB105_260
# %bb.259:                              #   in Loop: Header=BB105_22 Depth=1
	movl	$0, 72(%rsp)
	leaq	8(%rsi), %rax
	movq	%rax, 64(%rsp)
.LBB105_260:                            # %_ZNSt13_Bit_iteratorppEi.exit.i503
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	$-2, %rax
                                        # kill: def $cl killed $cl killed $rcx
	rolq	%cl, %rax
	andq	%rax, (%rsi)
	jmp	.LBB105_277
.LBB105_261:                            #   in Loop: Header=BB105_22 Depth=1
	movq	24(%rsp), %r15
	movq	%r14, %r13
	subq	%r15, %r13
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rax, %r13
	je	.LBB105_728
# %bb.262:                              # %_ZNKSt6vectorIN8pybind116handleESaIS1_EE12_M_check_lenEmPKc.exit.i965
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	%r13, %rbp
	sarq	$3, %rbp
	cmpq	$1, %rbp
	movq	%rbp, %rax
	adcq	$0, %rax
	leaq	(%rax,%rbp), %r12
	movabsq	$1152921504606846975, %rcx      # imm = 0xFFFFFFFFFFFFFFF
	cmpq	%rcx, %r12
	cmovaeq	%rcx, %r12
	addq	%rbp, %rax
	cmovbq	%rcx, %r12
	testq	%r12, %r12
	je	.LBB105_265
# %bb.263:                              #   in Loop: Header=BB105_22 Depth=1
	leaq	(,%r12,8), %rdi
.Ltmp1846:
	callq	_Znwm@PLT
.Ltmp1847:
# %bb.264:                              #   in Loop: Header=BB105_22 Depth=1
	movq	%rax, %rbx
	jmp	.LBB105_266
.LBB105_265:                            #   in Loop: Header=BB105_22 Depth=1
	xorl	%ebx, %ebx
.LBB105_266:                            # %_ZNSt12_Vector_baseIN8pybind116handleESaIS1_EE11_M_allocateEm.exit.i968
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	320(%rsp), %rax
	movq	%rax, (%rbx,%rbp,8)
	movq	%rbx, %rbp
	cmpq	%r14, %r15
	je	.LBB105_273
# %bb.267:                              # %.lr.ph.i.i.i.i970.preheader
                                        #   in Loop: Header=BB105_22 Depth=1
	leaq	-8(%r13), %rcx
	movq	%rbx, %rbp
	movq	%r15, %rax
	cmpq	$24, %rcx
	jb	.LBB105_272
# %bb.268:                              # %.lr.ph.i.i.i.i970.preheader
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	%rbx, %rdx
	subq	%r15, %rdx
	movq	%rbx, %rbp
	movq	%r15, %rax
	cmpq	$32, %rdx
	jb	.LBB105_272
# %bb.269:                              # %vector.ph
                                        #   in Loop: Header=BB105_22 Depth=1
	shrq	$3, %rcx
	incq	%rcx
	movq	%rcx, %rdx
	movabsq	$4611686018427387900, %rax      # imm = 0x3FFFFFFFFFFFFFFC
	andq	%rax, %rdx
	leaq	(%rbx,%rdx,8), %rbp
	leaq	(%r15,%rdx,8), %rax
	xorl	%esi, %esi
	.p2align	4, 0x90
.LBB105_270:                            # %vector.body
                                        #   Parent Loop BB105_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movups	(%r15,%rsi,8), %xmm0
	movups	16(%r15,%rsi,8), %xmm1
	movups	%xmm0, (%rbx,%rsi,8)
	movups	%xmm1, 16(%rbx,%rsi,8)
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB105_270
# %bb.271:                              # %middle.block
                                        #   in Loop: Header=BB105_22 Depth=1
	cmpq	%rdx, %rcx
	je	.LBB105_273
	.p2align	4, 0x90
.LBB105_272:                            # %.lr.ph.i.i.i.i970
                                        #   Parent Loop BB105_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	(%rax), %rcx
	movq	%rcx, (%rbp)
	addq	$8, %rax
	addq	$8, %rbp
	cmpq	%r14, %rax
	jne	.LBB105_272
.LBB105_273:                            # %_ZNSt6vectorIN8pybind116handleESaIS1_EE11_S_relocateEPS1_S4_S4_RS2_.exit22.i981
                                        #   in Loop: Header=BB105_22 Depth=1
	testq	%r15, %r15
	je	.LBB105_275
# %bb.274:                              #   in Loop: Header=BB105_22 Depth=1
	movq	%r15, %rdi
	movq	%r13, %rsi
	callq	_ZdlPvm@PLT
.LBB105_275:                            # %.noexc498
                                        #   in Loop: Header=BB105_22 Depth=1
	addq	$8, %rbp
	movq	%rbx, 24(%rsp)
	movq	%rbp, 32(%rsp)
	leaq	(%rbx,%r12,8), %rax
	movq	%rax, 40(%rsp)
	leaq	48(%rsp), %rbx
	movq	64(%rsp), %rsi
	movl	72(%rsp), %ecx
	cmpq	80(%rsp), %rsi
	jne	.LBB105_258
.LBB105_276:                            #   in Loop: Header=BB105_22 Depth=1
.Ltmp1848:
	movq	%rbx, %rdi
	movl	%ecx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb@PLT
.Ltmp1849:
.LBB105_277:                            # %_ZNSt6vectorIbSaIbEE9push_backEb.exit505
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	96(%rsp), %rax
	movq	%rax, 208(%rsp)
	movq	320(%rsp), %rax
	movq	%rax, 96(%rsp)
	movq	$0, 320(%rsp)
.Ltmp1851:
	leaq	208(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1852:
# %bb.278:                              # %_ZN8pybind116objectaSEOS0_.exit507
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	280(%rsp), %r15                 # 8-byte Reload
	movq	288(%rsp), %r12                 # 8-byte Reload
	movq	168(%rsp), %r14                 # 8-byte Reload
	leaq	48(%rsp), %rbx
	movq	120(%rsp), %r13                 # 8-byte Reload
.LBB105_279:                            #   in Loop: Header=BB105_22 Depth=1
	movq	32(%rsp), %rcx
	subq	24(%rsp), %rcx
	sarq	$3, %rcx
	movzwl	92(%r14), %eax
	cmpq	%rax, %rcx
	jne	.LBB105_696
# %bb.280:                              #   in Loop: Header=BB105_22 Depth=1
	movq	64(%rsp), %rax
	movl	72(%rsp), %edx
	subq	48(%rsp), %rax
	leaq	(%rdx,%rax,8), %rax
	cmpq	%rcx, %rax
	jne	.LBB105_696
# %bb.281:                              #   in Loop: Header=BB105_22 Depth=1
	movq	$0, 128(%rsp)
	movl	$0, 136(%rsp)
	movq	$0, 144(%rsp)
	movl	$0, 152(%rsp)
	movq	$0, 160(%rsp)
	cmpq	$0, 440(%rsp)                   # 8-byte Folded Reload
	je	.LBB105_284
# %bb.282:                              #   in Loop: Header=BB105_22 Depth=1
.Ltmp1865:
	leaq	128(%rsp), %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	xorl	%r8d, %r8d
	callq	_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb@PLT
.Ltmp1866:
# %bb.283:                              # %_ZNSt6vectorIbSaIbEE6resizeEmb.exit
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	32(%rbx), %rax
	movq	%rax, 240(%rsp)
	movups	(%rbx), %xmm0
	movups	16(%rbx), %xmm1
	movaps	%xmm1, 224(%rsp)
	movaps	%xmm0, 208(%rsp)
	movq	160(%rsp), %rax
	movq	%rax, 32(%rbx)
	movaps	128(%rsp), %xmm0
	movaps	144(%rsp), %xmm1
	movups	%xmm1, 16(%rbx)
	movups	%xmm0, (%rbx)
	movq	240(%rsp), %rax
	movq	%rax, 160(%rsp)
	movaps	208(%rsp), %xmm0
	movaps	224(%rsp), %xmm1
	movaps	%xmm1, 144(%rsp)
	movaps	%xmm0, 128(%rsp)
.LBB105_284:                            #   in Loop: Header=BB105_22 Depth=1
	movq	$0, 208(%rsp)
	leaq	264(%rsp), %rax
	movq	%rax, 216(%rsp)
	movq	$1, 224(%rsp)
	leaq	232(%rsp), %rax
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rax)
	movl	$1065353216, 248(%rsp)          # imm = 0x3F800000
	movups	%xmm0, 24(%rax)
.Ltmp1868:
	callq	_ZN8pybind116detail13get_internalsEv
.Ltmp1869:
# %bb.285:                              #   in Loop: Header=BB105_22 Depth=1
	movq	%rax, %rbx
	addq	$440, %rbx                      # imm = 0x1B8
.Ltmp1870:
	movq	%rbx, %rdi
	callq	PyThread_tss_get@PLT
.Ltmp1871:
# %bb.286:                              # %_ZNK8pybind1123thread_specific_storageINS_6detail19loader_life_supportEE3getEv.exit.i
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	%rax, 208(%rsp)
.Ltmp1872:
	movq	%rbx, %rdi
	leaq	208(%rsp), %rsi
	callq	PyThread_tss_set@PLT
.Ltmp1873:
# %bb.287:                              # %_ZN8pybind116detail19loader_life_supportC2Ev.exit
                                        #   in Loop: Header=BB105_22 Depth=1
.Ltmp1875:
	leaq	16(%rsp), %rdi
	callq	*48(%r14)
.Ltmp1876:
# %bb.288:                              #   in Loop: Header=BB105_22 Depth=1
	movq	%rax, 296(%rsp)                 # 8-byte Spill
	leaq	208(%rsp), %rdi
	callq	_ZN8pybind116detail19loader_life_supportD2Ev
.LBB105_289:                            #   in Loop: Header=BB105_22 Depth=1
	cmpq	$0, 440(%rsp)                   # 8-byte Folded Reload
	sete	%cl
	xorl	%ebx, %ebx
	cmpq	$1, 296(%rsp)                   # 8-byte Folded Reload
	setne	%al
	orb	%al, %cl
	je	.LBB105_291
# %bb.290:                              #   in Loop: Header=BB105_22 Depth=1
	movb	%al, %bl
	addl	%ebx, %ebx
	jmp	.LBB105_298
.LBB105_291:                            #   in Loop: Header=BB105_22 Depth=1
	movzwl	89(%r14), %eax
	shrl	$4, %eax
	andl	$1, %eax
	xorl	%ebx, %ebx
	cmpw	%r13w, %ax
	jae	.LBB105_298
# %bb.292:                              # %.lr.ph1489
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	128(%rsp), %rcx
	.p2align	4, 0x90
.LBB105_293:                            #   Parent Loop BB105_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%rax, %rdx
	shrq	$6, %rdx
	movq	(%rcx,%rdx,8), %rdx
	btq	%rax, %rdx
	jb	.LBB105_295
# %bb.294:                              #   in Loop: Header=BB105_293 Depth=2
	incq	%rax
	cmpq	%rax, %r13
	jne	.LBB105_293
	jmp	.LBB105_298
.LBB105_295:                            #   in Loop: Header=BB105_22 Depth=1
	leaq	48(%rsp), %rdx
	movq	32(%rdx), %rax
	movq	%rax, 240(%rsp)
	movups	(%rdx), %xmm0
	movups	16(%rdx), %xmm1
	movaps	%xmm1, 224(%rsp)
	movaps	%xmm0, 208(%rsp)
	movq	160(%rsp), %rax
	movq	%rax, 32(%rdx)
	movaps	128(%rsp), %xmm0
	movaps	144(%rsp), %xmm1
	movups	%xmm1, 16(%rdx)
	movups	%xmm0, (%rdx)
	movq	240(%rsp), %rax
	movq	%rax, 160(%rsp)
	movaps	208(%rsp), %xmm0
	movaps	224(%rsp), %xmm1
	movaps	%xmm1, 144(%rsp)
	movaps	%xmm0, 128(%rsp)
	movq	184(%rsp), %rsi
	cmpq	192(%rsp), %rsi
	je	.LBB105_297
# %bb.296:                              #   in Loop: Header=BB105_22 Depth=1
	movq	16(%rsp), %rax
	movq	%rax, (%rsi)
	movups	24(%rsp), %xmm0
	movups	%xmm0, 8(%rsi)
	movq	40(%rsp), %rax
	movq	%rax, 24(%rsi)
	xorps	%xmm0, %xmm0
	leaq	24(%rsp), %rcx
	movups	%xmm0, (%rcx)
	movq	$0, 16(%rcx)
	movq	32(%rdx), %rax
	movq	%rax, 64(%rsi)
	movups	(%rdx), %xmm0
	movups	16(%rdx), %xmm1
	movups	%xmm1, 48(%rsi)
	movups	%xmm0, 32(%rsi)
	movq	$0, 48(%rsp)
	movl	$0, 56(%rsp)
	movq	$0, 64(%rsp)
	movl	$0, 72(%rsp)
	movq	$0, 80(%rsp)
	movq	88(%rsp), %rax
	movq	%rax, 72(%rsi)
	movq	$0, 88(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 80(%rsi)
	movq	$0, 96(%rsp)
	movups	80(%rcx), %xmm0
	movups	%xmm0, 88(%rsi)
	addq	$104, 184(%rsp)
	jmp	.LBB105_298
.LBB105_297:                            #   in Loop: Header=BB105_22 Depth=1
.Ltmp1881:
	leaq	176(%rsp), %rdi
	leaq	16(%rsp), %rdx
	callq	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_
.Ltmp1882:
.LBB105_298:                            # %_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE9push_backEOS2_.exit
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	128(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB105_300
# %bb.299:                              #   in Loop: Header=BB105_22 Depth=1
	movq	160(%rsp), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	movq	$0, 128(%rsp)
	movl	$0, 136(%rsp)
	movq	$0, 144(%rsp)
	movl	$0, 152(%rsp)
.LBB105_300:                            # %_ZNSt6vectorIbSaIbEE9push_backEb.exit445.thread1082
                                        #   in Loop: Header=BB105_22 Depth=1
.Ltmp1890:
	leaq	320(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1891:
.LBB105_301:                            # %_ZNSt6vectorIbSaIbEE9push_backEb.exit419.thread1070
                                        #   in Loop: Header=BB105_22 Depth=1
.Ltmp1896:
	leaq	96(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1897:
# %bb.302:                              # %_ZN8pybind116objectD2Ev.exit.i519
                                        #   in Loop: Header=BB105_22 Depth=1
.Ltmp1899:
	leaq	88(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1900:
# %bb.303:                              # %_ZN8pybind116objectD2Ev.exit1.i
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	48(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB105_305
# %bb.304:                              #   in Loop: Header=BB105_22 Depth=1
	movq	80(%rsp), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	movq	$0, 48(%rsp)
	movl	$0, 56(%rsp)
	movq	$0, 64(%rsp)
	movl	$0, 72(%rsp)
	movq	$0, 80(%rsp)
.LBB105_305:                            # %_ZNSt13_Bvector_baseISaIbEED2Ev.exit.i
                                        #   in Loop: Header=BB105_22 Depth=1
	movq	24(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB105_20
# %bb.306:                              #   in Loop: Header=BB105_22 Depth=1
	movq	40(%rsp), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB105_20
.LBB105_307:                            #   in Loop: Header=BB105_22 Depth=1
.Ltmp1877:
	movq	%rdx, %r14
	movq	%rax, %r15
	leaq	208(%rsp), %rdi
	callq	_ZN8pybind116detail19loader_life_supportD2Ev
	jmp	.LBB105_309
.LBB105_308:                            #   in Loop: Header=BB105_22 Depth=1
.Ltmp1874:
	movq	%rdx, %r14
	movq	%rax, %r15
	leaq	216(%rsp), %rdi
	callq	_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev@PLT
.LBB105_309:                            # %.body509
                                        #   in Loop: Header=BB105_22 Depth=1
	cmpl	$4, %r14d
	jne	.LBB105_856
# %bb.310:                              #   in Loop: Header=BB105_22 Depth=1
	movq	%r15, %rdi
	callq	__cxa_begin_catch@PLT
	movl	$1, %eax
	movq	%rax, 296(%rsp)                 # 8-byte Spill
.Ltmp1878:
	callq	__cxa_end_catch@PLT
.Ltmp1879:
	movq	280(%rsp), %r15                 # 8-byte Reload
	movq	288(%rsp), %r12                 # 8-byte Reload
	movq	168(%rsp), %r14                 # 8-byte Reload
	movq	120(%rsp), %r13                 # 8-byte Reload
	jmp	.LBB105_289
.LBB105_311:
	xorl	%r14d, %r14d
.LBB105_312:
	cmpq	$0, 440(%rsp)                   # 8-byte Folded Reload
	movq	304(%rsp), %rbx                 # 8-byte Reload
	je	.LBB105_330
# %bb.313:
	movq	%r14, 168(%rsp)                 # 8-byte Spill
	movq	176(%rsp), %r13
	movq	184(%rsp), %r14
	cmpq	%r14, %r13
	je	.LBB105_323
# %bb.314:
	cmpq	$1, 296(%rsp)                   # 8-byte Folded Reload
	jne	.LBB105_323
# %bb.315:                              # %.preheader
	leaq	24(%rsp), %rbp
	leaq	72(%rsp), %r12
	leaq	16(%rsp), %r15
	.p2align	4, 0x90
.LBB105_316:                            # =>This Inner Loop Header: Depth=1
	movq	$0, 16(%rsp)
	movq	%r12, 24(%rsp)
	movq	$1, 32(%rsp)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rbp)
	movl	$1065353216, 56(%rsp)           # imm = 0x3F800000
	movups	%xmm0, 40(%rbp)
.Ltmp1902:
	callq	_ZN8pybind116detail13get_internalsEv
.Ltmp1903:
# %bb.317:                              #   in Loop: Header=BB105_316 Depth=1
	movq	%rax, %rbx
	addq	$440, %rbx                      # imm = 0x1B8
.Ltmp1904:
	movq	%rbx, %rdi
	callq	PyThread_tss_get@PLT
.Ltmp1905:
# %bb.318:                              # %_ZNK8pybind1123thread_specific_storageINS_6detail19loader_life_supportEE3getEv.exit.i526
                                        #   in Loop: Header=BB105_316 Depth=1
	movq	%rax, 16(%rsp)
.Ltmp1906:
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	PyThread_tss_set@PLT
.Ltmp1907:
# %bb.319:                              # %_ZN8pybind116detail19loader_life_supportC2Ev.exit529
                                        #   in Loop: Header=BB105_316 Depth=1
	movq	(%r13), %rax
.Ltmp1909:
	movq	%r13, %rdi
	callq	*48(%rax)
.Ltmp1910:
# %bb.320:                              #   in Loop: Header=BB105_316 Depth=1
	movq	%rax, %rbx
	movq	%r15, %rdi
	callq	_ZN8pybind116detail19loader_life_supportD2Ev
	cmpq	$1, %rbx
	jne	.LBB105_328
.LBB105_321:                            # %.thread1092
                                        #   in Loop: Header=BB105_316 Depth=1
	addq	$104, %r13
	cmpq	%r14, %r13
	jne	.LBB105_316
	jmp	.LBB105_322
.LBB105_324:                            #   in Loop: Header=BB105_316 Depth=1
.Ltmp1911:
	movq	%rdx, %rbx
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	%r15, %rdi
	callq	_ZN8pybind116detail19loader_life_supportD2Ev
	jmp	.LBB105_326
.LBB105_325:                            #   in Loop: Header=BB105_316 Depth=1
.Ltmp1908:
	movq	%rdx, %rbx
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	%rbp, %rdi
	callq	_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev@PLT
.LBB105_326:                            # %.body527
                                        #   in Loop: Header=BB105_316 Depth=1
	cmpl	$4, %ebx
	jne	.LBB105_727
# %bb.327:                              #   in Loop: Header=BB105_316 Depth=1
	movq	(%rsp), %rdi                    # 8-byte Reload
	callq	__cxa_begin_catch@PLT
.Ltmp1912:
	callq	__cxa_end_catch@PLT
.Ltmp1913:
	jmp	.LBB105_321
.LBB105_328:
	movq	%rbx, 296(%rsp)                 # 8-byte Spill
	testq	%rbx, %rbx
	movq	304(%rsp), %rbx                 # 8-byte Reload
	movq	168(%rsp), %r14                 # 8-byte Reload
	jne	.LBB105_330
# %bb.329:
	movq	(%r13), %r14
	jmp	.LBB105_330
.LBB105_322:
	movl	$1, %eax
	movq	%rax, 296(%rsp)                 # 8-byte Spill
	movq	304(%rsp), %rbx                 # 8-byte Reload
.LBB105_323:                            # %.loopexit1170
	movq	168(%rsp), %r14                 # 8-byte Reload
.LBB105_330:                            # %.loopexit1170
	movq	176(%rsp), %rdi
	movq	184(%rsp), %rsi
.Ltmp1930:
	callq	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_
.Ltmp1931:
# %bb.331:                              # %_ZSt8_DestroyIPN8pybind116detail13function_callES2_EvT_S4_RSaIT0_E.exit.i
	movq	176(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB105_333
# %bb.332:
	movq	192(%rsp), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB105_333:                            # %_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev.exit
	movq	296(%rsp), %rax                 # 8-byte Reload
	testq	%rax, %rax
	je	.LBB105_345
# %bb.334:                              # %_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev.exit
	cmpq	$1, %rax
	jne	.LBB105_357
# %bb.335:
	movq	352(%rsp), %rax                 # 8-byte Reload
	testb	$8, (%rax)
	jne	.LBB105_360
# %bb.336:
	movq	272(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rbx
	leaq	192(%rsp), %r15
	movq	%r15, 176(%rsp)
	testq	%rbx, %rbx
	je	.LBB105_743
# %bb.337:
	movq	%rbx, %rdi
	callq	strlen@PLT
	movq	%rax, %r12
	movq	%r15, %r13
	cmpq	$16, %rax
	jb	.LBB105_342
# %bb.338:
	testq	%r12, %r12
	js	.LBB105_751
# %bb.339:
	movq	%r12, %rdi
	incq	%rdi
	js	.LBB105_682
# %bb.340:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
.Ltmp1950:
	callq	_Znwm@PLT
.Ltmp1951:
# %bb.341:                              # %.noexc535
	movq	%rax, %r13
	movq	%rax, 176(%rsp)
	movq	%r12, 192(%rsp)
.LBB105_342:                            # %._crit_edge.i.i
	testq	%r12, %r12
	je	.LBB105_368
# %bb.343:                              # %._crit_edge.i.i
	cmpq	$1, %r12
	jne	.LBB105_367
# %bb.344:
	movzbl	(%rbx), %eax
	movb	%al, (%r13)
	jmp	.LBB105_368
.LBB105_345:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i816
.Ltmp1933:
	movl	$78, %edi
	callq	_Znwm@PLT
.Ltmp1934:
# %bb.346:                              # %.noexc821
	movq	%rax, %rbx
	movq	%rax, 16(%rsp)
	movq	$77, 32(%rsp)
	movups	.L.str.152+61(%rip), %xmm0
	movups	%xmm0, 61(%rax)
	movups	.L.str.152+48(%rip), %xmm0
	movups	%xmm0, 48(%rax)
	movups	.L.str.152+32(%rip), %xmm0
	movups	%xmm0, 32(%rax)
	movups	.L.str.152+16(%rip), %xmm0
	movups	%xmm0, 16(%rax)
	movups	.L.str.152(%rip), %xmm0
	movups	%xmm0, (%rax)
	movq	$77, 24(%rsp)
	movb	$0, 77(%rax)
	testq	%r14, %r14
	je	.LBB105_740
# %bb.347:
	leaq	32(%rsp), %r12
	movq	16(%r14), %r15
	movq	%r15, %rdi
	callq	strlen@PLT
	movq	%rax, %r14
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	addq	$-70, %rax
	cmpq	%rax, %r14
	ja	.LBB105_738
# %bb.348:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i824
	testq	%r14, %r14
	je	.LBB105_351
# %bb.349:
.Ltmp1936:
	leaq	16(%rsp), %rdi
	movl	$77, %esi
	xorl	%edx, %edx
	movq	%r15, %rcx
	movq	%r14, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1937:
# %bb.350:                              # %._crit_edge1559
	movq	16(%rsp), %rbx
.LBB105_351:
	addq	$77, %r14
	movq	%r14, 24(%rsp)
	movb	$0, (%rbx,%r14)
	movq	24(%rsp), %rbx
	testq	%rbx, %rbx
	je	.LBB105_662
# %bb.352:
	cmpq	$5, %rbx
	jb	.LBB105_662
# %bb.353:                              # %.lr.ph.i.i.i834
	movq	16(%rsp), %r15
	leaq	(%r15,%rbx), %r14
	movl	$979661939, %ebp                # imm = 0x3A647473
	movq	%rbx, %rdx
	movq	%r15, %rax
	.p2align	4, 0x90
.LBB105_354:                            # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i.i835
                                        # =>This Inner Loop Header: Depth=1
	addq	$-4, %rdx
	movq	%rax, %rdi
	movl	$115, %esi
	callq	memchr@PLT
	testq	%rax, %rax
	je	.LBB105_662
# %bb.355:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i839
                                        #   in Loop: Header=BB105_354 Depth=1
	movl	(%rax), %ecx
	xorl	%ebp, %ecx
	movzbl	4(%rax), %edx
	xorl	$58, %edx
	orl	%ecx, %edx
	je	.LBB105_582
# %bb.356:                              #   in Loop: Header=BB105_354 Depth=1
	incq	%rax
	movq	%r14, %rdx
	subq	%rax, %rdx
	cmpq	$5, %rdx
	jae	.LBB105_354
	jmp	.LBB105_662
.LBB105_357:
	movq	352(%rsp), %rax                 # 8-byte Reload
	testb	$1, (%rax)
	je	.LBB105_366
# %bb.358:
	movq	400(%rsp), %rcx
	movzbl	48(%rcx), %eax
	testb	$2, %al
	jne	.LBB105_364
# %bb.359:
	movq	24(%rcx), %rax
	movq	408(%rsp), %rcx
	movzbl	(%rax,%rcx), %eax
	andb	$1, %al
	testb	%al, %al
	jne	.LBB105_366
	jmp	.LBB105_365
.LBB105_360:
	movq	_Py_NotImplementedStruct@GOTPCREL(%rip), %rax
	movq	%rax, 16(%rsp)
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rax), %rax
	jmp	.LBB105_678
.LBB105_361:
	andb	$8, %al
	testb	%al, %al
	je	.LBB105_19
.LBB105_362:
	movq	_Py_NoneStruct@GOTPCREL(%rip), %rax
	movq	%rax, 16(%rsp)
	leaq	16(%rsp), %rbx
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	16(%rsp), %r14
	movq	$0, 16(%rsp)
.Ltmp1678:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1679:
# %bb.363:                              # %.thread1061
	movq	%r14, %rax
	jmp	.LBB105_678
.LBB105_364:
	andb	$4, %al
	testb	%al, %al
	jne	.LBB105_366
.LBB105_365:
	movq	416(%rsp), %rax
	movq	%rbx, %rdi
	xorl	%esi, %esi
	callq	*48(%rax)
.LBB105_366:
	movq	296(%rsp), %rax                 # 8-byte Reload
	jmp	.LBB105_678
.LBB105_367:
	movq	%r13, %rdi
	movq	%rbx, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB105_368:
	movq	%r12, 184(%rsp)
	movb	$0, (%r13,%r12)
	movq	184(%rsp), %rsi
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	addq	$-10, %rax
	cmpq	%rax, %rsi
	jg	.LBB105_745
# %bb.369:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	leaq	17(%rsi), %rbx
	movq	176(%rsp), %rax
	movl	$15, %ecx
	cmpq	%r15, %rax
	je	.LBB105_371
# %bb.370:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	192(%rsp), %rcx
.LBB105_371:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	cmpq	%rcx, %rbx
	jbe	.LBB105_373
# %bb.372:
.Ltmp1952:
	leaq	.L.str.140(%rip), %rcx
	leaq	176(%rsp), %rdi
	movl	$17, %r8d
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1953:
	jmp	.LBB105_374
.LBB105_373:
	movups	.L.str.140(%rip), %xmm0
	movups	%xmm0, (%rax,%rsi)
	movb	$32, 16(%rax,%rsi)
.LBB105_374:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
	movq	%rbx, 184(%rsp)
	movq	176(%rsp), %rax
	movb	$0, (%rax,%rbx)
	leaq	144(%rsp), %rdi
	movq	%rdi, 128(%rsp)
	movq	176(%rsp), %rax
	cmpq	%r15, %rax
	je	.LBB105_376
# %bb.375:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	%rax, 128(%rsp)
	movq	184(%rsp), %rbx
	movq	192(%rsp), %rax
	movq	%rax, 144(%rsp)
	jmp	.LBB105_377
.LBB105_376:
	movq	184(%rsp), %rbx
	leaq	1(%rbx), %rdx
	movq	%r15, %rsi
	callq	memcpy@PLT
.LBB105_377:                            # %._crit_edge.i.i540
	movq	%rbx, 136(%rsp)
	movq	%r15, 176(%rsp)
	movq	$0, 184(%rsp)
	movb	$0, 192(%rsp)
	movq	352(%rsp), %rax                 # 8-byte Reload
	movzwl	(%rax), %r14d
	leaq	.L.str.141(%rip), %rax
	leaq	.L.str.142(%rip), %rsi
	testb	$1, %r14b
	cmovneq	%rax, %rsi
	leaq	336(%rsp), %r13
	movq	%r13, 320(%rsp)
	andl	$1, %r14d
	leaq	(%r14,%r14,2), %rbx
	addq	$8, %rbx
	movq	%r13, %rdi
	movq	%rbx, %rdx
	callq	memcpy@PLT
	movq	%rbx, 328(%rsp)
	leaq	(%r14,%r14,2), %rax
	movb	$0, 344(%rsp,%rax)
.Ltmp1954:
	leaq	208(%rsp), %rdi
	leaq	128(%rsp), %rsi
	leaq	320(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp1955:
# %bb.378:
	movq	216(%rsp), %rsi
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	addq	$-49, %rax
	cmpq	%rax, %rsi
	jg	.LBB105_747
# %bb.379:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i548
	leaq	56(%rsi), %rbx
	movq	208(%rsp), %rax
	leaq	224(%rsp), %r14
	movl	$15, %ecx
	cmpq	%r14, %rax
	je	.LBB105_381
# %bb.380:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i548
	movq	224(%rsp), %rcx
.LBB105_381:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i548
	cmpq	%rcx, %rbx
	jbe	.LBB105_384
# %bb.382:
.Ltmp1957:
	leaq	.L.str.143(%rip), %rcx
	leaq	208(%rsp), %rdi
	movl	$56, %r8d
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1958:
# %bb.383:                              # %._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i553_crit_edge
	movq	208(%rsp), %rax
	jmp	.LBB105_385
.LBB105_384:
	movups	.L.str.143+32(%rip), %xmm0
	movups	%xmm0, 32(%rax,%rsi)
	movups	.L.str.143+16(%rip), %xmm0
	movups	%xmm0, 16(%rax,%rsi)
	movups	.L.str.143(%rip), %xmm0
	movups	%xmm0, (%rax,%rsi)
	movabsq	$737011875936628592, %rcx       # imm = 0xA3A646574726F70
	movq	%rcx, 48(%rax,%rsi)
.LBB105_385:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i553
	movq	%rbx, 216(%rsp)
	movb	$0, (%rax,%rbx)
	leaq	32(%rsp), %rdi
	movq	%rdi, 16(%rsp)
	movq	208(%rsp), %rax
	cmpq	%r14, %rax
	je	.LBB105_387
# %bb.386:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i554
	movq	%rax, 16(%rsp)
	movq	216(%rsp), %rbx
	movq	224(%rsp), %rax
	movq	%rax, 32(%rsp)
	jmp	.LBB105_388
.LBB105_387:
	movq	216(%rsp), %rbx
	leaq	1(%rbx), %rdx
	movq	%r14, %rsi
	callq	memcpy@PLT
.LBB105_388:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%rbx, 24(%rsp)
	movq	%r14, 208(%rsp)
	movq	$0, 216(%rsp)
	movb	$0, 224(%rsp)
	movq	320(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB105_390
# %bb.389:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i560
	movq	336(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB105_390:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit562
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	leaq	32(%rsp), %r13
	je	.LBB105_392
# %bb.391:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i563
	movq	144(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB105_392:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit565
	movq	176(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB105_394
# %bb.393:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i566
	movq	192(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB105_394:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit568
	leaq	192(%rsp), %r15
	xorl	%r12d, %r12d
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %r14
	movl	$3518437209, %edx               # imm = 0xD1B71759
	jmp	.LBB105_397
	.p2align	4, 0x90
.LBB105_395:                            # %.noexc689
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	16(%rsp), %rax
.LBB105_396:                            #   in Loop: Header=BB105_397 Depth=1
	movb	$10, (%rax,%rbx)
	movq	%r15, 24(%rsp)
	movq	16(%rsp), %rax
	movb	$0, 1(%rax,%rbx)
	movq	272(%rsp), %rax                 # 8-byte Reload
	movq	128(%rax), %rax
	movl	(%rsp), %ecx                    # 4-byte Reload
	movl	%ecx, %r12d
	movq	%rax, 272(%rsp)                 # 8-byte Spill
	testq	%rax, %rax
	leaq	192(%rsp), %r15
	movl	$3518437209, %edx               # imm = 0xD1B71759
	je	.LBB105_519
.LBB105_397:                            # =>This Loop Header: Depth=1
                                        #     Child Loop BB105_401 Depth 2
                                        #     Child Loop BB105_413 Depth 2
                                        #     Child Loop BB105_464 Depth 2
                                        #     Child Loop BB105_470 Depth 2
	leal	1(%r12), %eax
	cmpl	$9, %r12d
	movl	%eax, (%rsp)                    # 4-byte Spill
	jae	.LBB105_400
# %bb.398:                              # %.thread1577
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	%r15, 176(%rsp)
	movl	$1, %ebx
.LBB105_399:                            #   in Loop: Header=BB105_397 Depth=1
	movb	$45, 192(%rsp)
	movl	$1, %ebp
	jmp	.LBB105_411
	.p2align	4, 0x90
.LBB105_400:                            # %.lr.ph.i.i.preheader
                                        #   in Loop: Header=BB105_397 Depth=1
	movl	$4, %ebp
	.p2align	4, 0x90
.LBB105_401:                            # %.lr.ph.i.i
                                        #   Parent Loop BB105_397 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpl	$99, %eax
	jbe	.LBB105_406
# %bb.402:                              #   in Loop: Header=BB105_401 Depth=2
	cmpl	$999, %eax                      # imm = 0x3E7
	jbe	.LBB105_416
# %bb.403:                              #   in Loop: Header=BB105_401 Depth=2
	cmpl	$10000, %eax                    # imm = 0x2710
	jb	.LBB105_407
# %bb.404:                              #   in Loop: Header=BB105_401 Depth=2
	movl	%eax, %ecx
	imulq	%rdx, %rcx
	shrq	$45, %rcx
	addl	$4, %ebp
	cmpl	$99999, %eax                    # imm = 0x1869F
	movl	%ecx, %eax
	ja	.LBB105_401
# %bb.405:                              # %_ZNSt8__detail14__to_chars_lenIjEEjT_i.exit.i.loopexit
                                        #   in Loop: Header=BB105_397 Depth=1
	addl	$-3, %ebp
	movl	%ebp, %ebx
	movq	%r15, 176(%rsp)
	cmpl	$16, %ebp
	jae	.LBB105_408
	jmp	.LBB105_417
.LBB105_406:                            #   in Loop: Header=BB105_397 Depth=1
	addl	$-2, %ebp
.LBB105_407:                            # %_ZNSt8__detail14__to_chars_lenIjEEjT_i.exit.i
                                        #   in Loop: Header=BB105_397 Depth=1
	movl	%ebp, %ebx
	movq	%r15, 176(%rsp)
	cmpl	$16, %ebp
	jb	.LBB105_417
.LBB105_408:                            #   in Loop: Header=BB105_397 Depth=1
	leaq	1(%rbx), %rdi
.Ltmp1959:
	callq	_Znwm@PLT
.Ltmp1960:
# %bb.409:                              # %.noexc.i590
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	%rax, %r15
	movq	%rax, 176(%rsp)
	movq	%rbx, 192(%rsp)
	jmp	.LBB105_410
.LBB105_416:                            #   in Loop: Header=BB105_397 Depth=1
	decl	%ebp
	movl	%ebp, %ebx
	movq	%r15, 176(%rsp)
	cmpl	$16, %ebp
	jae	.LBB105_408
.LBB105_417:                            #   in Loop: Header=BB105_397 Depth=1
	testl	%ebp, %ebp
	je	.LBB105_411
# %bb.418:                              #   in Loop: Header=BB105_397 Depth=1
	cmpl	$1, %ebp
	jne	.LBB105_410
# %bb.419:                              #   in Loop: Header=BB105_397 Depth=1
	leaq	192(%rsp), %r15
	jmp	.LBB105_399
	.p2align	4, 0x90
.LBB105_410:                            #   in Loop: Header=BB105_397 Depth=1
	movq	%r15, %rdi
	movl	$45, %esi
	movq	%rbx, %rdx
	callq	memset@PLT
.LBB105_411:                            #   in Loop: Header=BB105_397 Depth=1
	movq	%rbx, 184(%rsp)
	movb	$0, (%r15,%rbx)
	movq	176(%rsp), %rax
	movl	(%rsp), %edx                    # 4-byte Reload
	movl	%edx, %ecx
	cmpl	$99, %r12d
	jb	.LBB105_414
# %bb.412:                              # %.lr.ph.preheader.i.i
                                        #   in Loop: Header=BB105_397 Depth=1
	addl	$-2, %ebp
	.p2align	4, 0x90
.LBB105_413:                            # %.lr.ph.i11.i
                                        #   Parent Loop BB105_397 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	leal	1(%rbp), %esi
	movl	%edx, %ecx
	imulq	$1374389535, %rcx, %rcx         # imm = 0x51EB851F
	shrq	$37, %rcx
	imull	$100, %ecx, %edi
	movl	%edx, %r8d
	subl	%edi, %r8d
	movzbl	(%r14,%r8,2), %edi
	movzbl	1(%r14,%r8,2), %r8d
	movb	%r8b, (%rax,%rsi)
	movl	%ebp, %esi
	movb	%dil, (%rax,%rsi)
	addl	$-2, %ebp
	cmpl	$9999, %edx                     # imm = 0x270F
	movl	%ecx, %edx
	ja	.LBB105_413
.LBB105_414:                            # %._crit_edge.i.i589
                                        #   in Loop: Header=BB105_397 Depth=1
	cmpl	$10, %ecx
	jb	.LBB105_420
# %bb.415:                              #   in Loop: Header=BB105_397 Depth=1
	movl	%ecx, %ecx
	leaq	(%rcx,%rcx), %rdx
	movl	%edx, %edx
	movzbl	1(%rdx,%r14), %edx
	movb	%dl, 1(%rax)
	movzbl	(%r14,%rcx,2), %ecx
	jmp	.LBB105_421
	.p2align	4, 0x90
.LBB105_420:                            #   in Loop: Header=BB105_397 Depth=1
	orb	$48, %cl
.LBB105_421:                            # %_ZNSt7__cxx119to_stringEi.exit
                                        #   in Loop: Header=BB105_397 Depth=1
	movb	%cl, (%rax)
.Ltmp1962:
	movl	$4, %r8d
	leaq	176(%rsp), %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	leaq	.L.str.144(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.Ltmp1963:
# %bb.422:                              # %.noexc593
                                        #   in Loop: Header=BB105_397 Depth=1
	leaq	144(%rsp), %rdi
	movq	%rdi, 128(%rsp)
	movq	(%rax), %rcx
	movq	%rax, %rbx
	addq	$16, %rbx
	cmpq	%rbx, %rcx
	je	.LBB105_424
# %bb.423:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i591
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	%rcx, 128(%rsp)
	movq	16(%rax), %rcx
	movq	%rcx, 144(%rsp)
	movq	8(%rax), %r15
	jmp	.LBB105_425
	.p2align	4, 0x90
.LBB105_424:                            #   in Loop: Header=BB105_397 Depth=1
	movq	8(%rax), %r15
	leaq	1(%r15), %rdx
	movq	%rbx, %rsi
	movq	%rax, %r12
	callq	memcpy@PLT
	movq	%r12, %rax
.LBB105_425:                            #   in Loop: Header=BB105_397 Depth=1
	movq	%r15, 136(%rsp)
	movq	%rbx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	136(%rsp), %rsi
	movq	%rsi, %rax
	andq	$-2, %rax
	movabsq	$9223372036854775800, %rcx      # imm = 0x7FFFFFFFFFFFFFF8
	addq	$6, %rcx
	movq	%rcx, 168(%rsp)                 # 8-byte Spill
	cmpq	%rcx, %rax
	je	.LBB105_698
# %bb.426:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i594
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	128(%rsp), %rax
	movl	$15, %ecx
	leaq	144(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB105_428
# %bb.427:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i594
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	144(%rsp), %rcx
.LBB105_428:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i594
                                        #   in Loop: Header=BB105_397 Depth=1
	leaq	2(%rsi), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB105_430
# %bb.429:                              #   in Loop: Header=BB105_397 Depth=1
.Ltmp1965:
	movl	$2, %r8d
	leaq	128(%rsp), %rdi
	xorl	%edx, %edx
	leaq	.L.str.99(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1966:
	jmp	.LBB105_431
	.p2align	4, 0x90
.LBB105_430:                            #   in Loop: Header=BB105_397 Depth=1
	movw	$8238, (%rax,%rsi)              # imm = 0x202E
.LBB105_431:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i599
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	%rbx, 136(%rsp)
	movq	128(%rsp), %rax
	movb	$0, (%rax,%rbx)
	leaq	224(%rsp), %r12
	movq	%r12, 208(%rsp)
	movq	128(%rsp), %rcx
	leaq	144(%rsp), %r15
	cmpq	%r15, %rcx
	je	.LBB105_433
# %bb.432:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i600
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	%rcx, 208(%rsp)
	movq	136(%rsp), %rbx
	movq	144(%rsp), %rax
	movq	%rax, 224(%rsp)
	jmp	.LBB105_434
	.p2align	4, 0x90
.LBB105_433:                            #   in Loop: Header=BB105_397 Depth=1
	movq	136(%rsp), %rbx
	leaq	1(%rbx), %rdx
	movq	%r12, %rdi
	movq	%r15, %rsi
	callq	memcpy@PLT
	movq	%r12, %rcx
.LBB105_434:                            #   in Loop: Header=BB105_397 Depth=1
	movq	%rbx, 216(%rsp)
	movq	%r15, 128(%rsp)
	movq	$0, 136(%rsp)
	movb	$0, 144(%rsp)
	movq	24(%rsp), %rsi
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	subq	%rsi, %rax
	addq	$7, %rax
	cmpq	%rbx, %rax
	jb	.LBB105_700
# %bb.435:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	16(%rsp), %rdi
	movl	$15, %eax
	cmpq	%r13, %rdi
	je	.LBB105_437
# %bb.436:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	32(%rsp), %rax
.LBB105_437:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
                                        #   in Loop: Header=BB105_397 Depth=1
	leaq	(%rsi,%rbx), %r15
	cmpq	%rax, %r15
	jbe	.LBB105_439
# %bb.438:                              #   in Loop: Header=BB105_397 Depth=1
.Ltmp1968:
	leaq	16(%rsp), %rdi
	xorl	%edx, %edx
	movq	%rbx, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1969:
	jmp	.LBB105_443
	.p2align	4, 0x90
.LBB105_439:                            #   in Loop: Header=BB105_397 Depth=1
	testq	%rbx, %rbx
	je	.LBB105_443
# %bb.440:                              #   in Loop: Header=BB105_397 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %rbx
	jne	.LBB105_442
# %bb.441:                              #   in Loop: Header=BB105_397 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB105_443
.LBB105_442:                            #   in Loop: Header=BB105_397 Depth=1
	movq	%rcx, %rsi
	movq	%rbx, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB105_443:                            #   in Loop: Header=BB105_397 Depth=1
	movq	%r15, 24(%rsp)
	movq	16(%rsp), %rax
	movb	$0, (%rax,%r15)
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB105_445
# %bb.444:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i608
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	224(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB105_445:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit610
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	leaq	192(%rsp), %rbx
	je	.LBB105_447
# %bb.446:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i611
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	144(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB105_447:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit613
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	176(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB105_449
# %bb.448:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i614
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	192(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB105_449:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit616
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	352(%rsp), %rax                 # 8-byte Reload
	testb	$1, (%rax)
	je	.LBB105_476
# %bb.450:                              #   in Loop: Header=BB105_397 Depth=1
	movq	272(%rsp), %rax                 # 8-byte Reload
	movq	16(%rax), %rbx
	leaq	224(%rsp), %r12
	movq	%r12, 208(%rsp)
	testq	%rbx, %rbx
	je	.LBB105_708
# %bb.451:                              #   in Loop: Header=BB105_397 Depth=1
	movq	%rbx, %rdi
	callq	strlen@PLT
	movq	%rax, %r15
	cmpq	$16, %rax
	jb	.LBB105_456
# %bb.452:                              #   in Loop: Header=BB105_397 Depth=1
	testq	%r15, %r15
	js	.LBB105_719
# %bb.453:                              #   in Loop: Header=BB105_397 Depth=1
	movq	%r15, %rdi
	incq	%rdi
	js	.LBB105_679
# %bb.454:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i618
                                        #   in Loop: Header=BB105_397 Depth=1
.Ltmp1971:
	callq	_Znwm@PLT
.Ltmp1972:
# %bb.455:                              # %.noexc624
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	%rax, %r12
	movq	%rax, 208(%rsp)
	movq	%r15, 224(%rsp)
.LBB105_456:                            # %._crit_edge.i.i617
                                        #   in Loop: Header=BB105_397 Depth=1
	testq	%r15, %r15
	je	.LBB105_460
# %bb.457:                              # %._crit_edge.i.i617
                                        #   in Loop: Header=BB105_397 Depth=1
	cmpq	$1, %r15
	jne	.LBB105_459
# %bb.458:                              #   in Loop: Header=BB105_397 Depth=1
	movzbl	(%rbx), %eax
	movb	%al, (%r12)
	jmp	.LBB105_460
.LBB105_459:                            #   in Loop: Header=BB105_397 Depth=1
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB105_460:                            #   in Loop: Header=BB105_397 Depth=1
	movq	%r15, 216(%rsp)
	movb	$0, (%r12,%r15)
	movq	208(%rsp), %rbp
	movq	216(%rsp), %r12
	testq	%r12, %r12
	je	.LBB105_474
# %bb.461:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm.exit
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	%rbp, %rdi
	movl	$40, %esi
	movq	%r12, %rdx
	callq	memchr@PLT
	movq	%rax, %rbx
	subq	%rbp, %rbx
	addq	$7, %rbx
	testq	%rax, %rax
	movl	$6, %eax
	cmoveq	%rax, %rbx
	movq	%r12, %rax
	subq	%rbx, %rax
	movq	%rax, 312(%rsp)                 # 8-byte Spill
	jbe	.LBB105_474
# %bb.462:                              #   in Loop: Header=BB105_397 Depth=1
	movq	$-1, %r15
	cmpq	$1, %r12
	je	.LBB105_482
# %bb.463:                              # %.lr.ph.i.i629
                                        #   in Loop: Header=BB105_397 Depth=1
	leaq	(%r12,%rbp), %r13
	movq	%r12, %rdx
	movq	%rbp, %rax
	.p2align	4, 0x90
.LBB105_464:                            # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i
                                        #   Parent Loop BB105_397 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	decq	%rdx
	movq	%rax, %rdi
	movl	$44, %esi
	callq	memchr@PLT
	movq	$-1, %r15
	testq	%rax, %rax
	je	.LBB105_467
# %bb.465:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i
                                        #   in Loop: Header=BB105_464 Depth=2
	cmpw	$8236, (%rax)                   # imm = 0x202C
	je	.LBB105_468
# %bb.466:                              #   in Loop: Header=BB105_464 Depth=2
	incq	%rax
	movq	%r13, %rdx
	subq	%rax, %rdx
	cmpq	$1, %rdx
	ja	.LBB105_464
.LBB105_467:                            #   in Loop: Header=BB105_397 Depth=1
	movq	$-1, %rax
	cmpq	$4, %r12
	leaq	32(%rsp), %r13
	jae	.LBB105_469
	jmp	.LBB105_472
.LBB105_468:                            #   in Loop: Header=BB105_397 Depth=1
	subq	%rbp, %rax
	cmpq	$4, %r12
	leaq	32(%rsp), %r13
	jb	.LBB105_472
.LBB105_469:                            #   in Loop: Header=BB105_397 Depth=1
	leaq	-4(%r12), %rcx
	.p2align	4, 0x90
.LBB105_470:                            # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i631
                                        #   Parent Loop BB105_397 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpl	$540945696, (%rbp,%rcx)         # imm = 0x203E2D20
	je	.LBB105_481
# %bb.471:                              #   in Loop: Header=BB105_470 Depth=2
	addq	$-1, %rcx
	jb	.LBB105_470
.LBB105_472:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcm.exit
                                        #   in Loop: Header=BB105_397 Depth=1
	cmpq	%r12, %rax
	jae	.LBB105_482
.LBB105_473:                            #   in Loop: Header=BB105_397 Depth=1
	leaq	2(%rax), %rcx
	movq	%rcx, 120(%rsp)                 # 8-byte Spill
	subq	%rbx, %rax
	ja	.LBB105_483
	jmp	.LBB105_474
.LBB105_481:                            #   in Loop: Header=BB105_397 Depth=1
	movq	%rcx, %r15
	cmpq	%r12, %rax
	jb	.LBB105_473
.LBB105_482:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm.exit639
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	%rbp, %rdi
	movl	$41, %esi
	movq	%r12, %rdx
	callq	memchr@PLT
	movq	%rax, %rcx
	subq	%rbp, %rcx
	cmpq	$1, %rax
	movl	$0, %eax
	sbbq	%rax, %rax
	orq	%rcx, %rax
	movq	%rax, 120(%rsp)                 # 8-byte Spill
	subq	%rbx, %rax
	jbe	.LBB105_474
.LBB105_483:                            #   in Loop: Header=BB105_397 Depth=1
	cmpq	%r12, 120(%rsp)                 # 8-byte Folded Reload
	jae	.LBB105_474
# %bb.484:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	312(%rsp), %rcx                 # 8-byte Reload
	cmpq	%rax, %rcx
	cmovbq	%rcx, %rax
	movq	24(%rsp), %rsi
	movabsq	$9223372036854775800, %rcx      # imm = 0x7FFFFFFFFFFFFFF8
	subq	%rsi, %rcx
	addq	$7, %rcx
	cmpq	%rax, %rcx
	jb	.LBB105_725
# %bb.485:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i652
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	16(%rsp), %rdi
	movl	$15, %ecx
	cmpq	%r13, %rdi
	je	.LBB105_487
# %bb.486:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i652
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	32(%rsp), %rcx
.LBB105_487:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i652
                                        #   in Loop: Header=BB105_397 Depth=1
	addq	%rbx, %rbp
	leaq	(%rsi,%rax), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB105_498
# %bb.488:                              #   in Loop: Header=BB105_397 Depth=1
.Ltmp1974:
	leaq	16(%rsp), %rdi
	xorl	%edx, %edx
	movq	%rbp, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1975:
	jmp	.LBB105_502
	.p2align	4, 0x90
.LBB105_474:                            # %.critedge397
                                        #   in Loop: Header=BB105_397 Depth=1
	leaq	224(%rsp), %rax
	cmpq	%rax, %rbp
	je	.LBB105_476
# %bb.475:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i675
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	224(%rsp), %rsi
	incq	%rsi
	movq	%rbp, %rdi
	callq	_ZdlPvm@PLT
.LBB105_476:                            # %.critedge
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	272(%rsp), %rax                 # 8-byte Reload
	movq	16(%rax), %rbx
	movq	%rbx, %rdi
	callq	strlen@PLT
	movq	24(%rsp), %rsi
	movabsq	$9223372036854775800, %rcx      # imm = 0x7FFFFFFFFFFFFFF8
	subq	%rsi, %rcx
	addq	$7, %rcx
	cmpq	%rax, %rcx
	jb	.LBB105_702
# %bb.477:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i678
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	16(%rsp), %rdi
	movl	$15, %ecx
	cmpq	%r13, %rdi
	je	.LBB105_479
# %bb.478:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i678
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	32(%rsp), %rcx
.LBB105_479:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i678
                                        #   in Loop: Header=BB105_397 Depth=1
	leaq	(%rsi,%rax), %r15
	cmpq	%rcx, %r15
	jbe	.LBB105_489
# %bb.480:                              #   in Loop: Header=BB105_397 Depth=1
.Ltmp1986:
	leaq	16(%rsp), %rdi
	xorl	%edx, %edx
	movq	%rbx, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1987:
	jmp	.LBB105_493
	.p2align	4, 0x90
.LBB105_489:                            #   in Loop: Header=BB105_397 Depth=1
	testq	%rax, %rax
	je	.LBB105_493
# %bb.490:                              #   in Loop: Header=BB105_397 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %rax
	jne	.LBB105_492
# %bb.491:                              #   in Loop: Header=BB105_397 Depth=1
	movzbl	(%rbx), %eax
	movb	%al, (%rdi)
	jmp	.LBB105_493
.LBB105_492:                            #   in Loop: Header=BB105_397 Depth=1
	movq	%rbx, %rsi
	movq	%rax, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB105_493:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit686
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	%r15, 24(%rsp)
	movq	16(%rsp), %rax
	movb	$0, (%rax,%r15)
.LBB105_494:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i687
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	16(%rsp), %rax
	movq	24(%rsp), %rbx
	movl	$15, %ecx
	cmpq	%r13, %rax
	je	.LBB105_496
# %bb.495:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i687
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	32(%rsp), %rcx
.LBB105_496:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i687
                                        #   in Loop: Header=BB105_397 Depth=1
	leaq	1(%rbx), %r15
	cmpq	%rcx, %r15
	jbe	.LBB105_396
# %bb.497:                              #   in Loop: Header=BB105_397 Depth=1
.Ltmp1988:
	movl	$1, %r8d
	leaq	16(%rsp), %rdi
	movq	%rbx, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1989:
	jmp	.LBB105_395
.LBB105_498:                            #   in Loop: Header=BB105_397 Depth=1
	testq	%rax, %rax
	je	.LBB105_502
# %bb.499:                              #   in Loop: Header=BB105_397 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %rax
	jne	.LBB105_501
# %bb.500:                              #   in Loop: Header=BB105_397 Depth=1
	movzbl	(%rbp), %eax
	movb	%al, (%rdi)
	jmp	.LBB105_502
.LBB105_501:                            #   in Loop: Header=BB105_397 Depth=1
	movq	%rbp, %rsi
	movq	%rax, %rdx
	callq	memcpy@PLT
.LBB105_502:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	%rbx, 24(%rsp)
	movq	16(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	16(%rsp), %rax
	movq	24(%rsp), %rbx
	movl	$15, %ecx
	cmpq	%r13, %rax
	je	.LBB105_504
# %bb.503:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	32(%rsp), %rcx
.LBB105_504:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB105_397 Depth=1
	leaq	1(%rbx), %r12
	cmpq	%rcx, %r12
	jbe	.LBB105_507
# %bb.505:                              #   in Loop: Header=BB105_397 Depth=1
.Ltmp1976:
	movl	$1, %r8d
	leaq	16(%rsp), %rdi
	movq	%rbx, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1977:
# %bb.506:                              # %.noexc660
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	16(%rsp), %rax
.LBB105_507:                            #   in Loop: Header=BB105_397 Depth=1
	movb	$40, (%rax,%rbx)
	movq	%r12, 24(%rsp)
	movq	16(%rsp), %rax
	movb	$0, 1(%rax,%rbx)
	movq	216(%rsp), %rcx
	movq	%rcx, %rax
	movq	120(%rsp), %rdx                 # 8-byte Reload
	subq	%rdx, %rax
	jb	.LBB105_736
# %bb.508:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i661
                                        #   in Loop: Header=BB105_397 Depth=1
	subq	%rdx, %r15
	cmpq	%r15, %rax
	cmovbq	%rax, %r15
	movq	24(%rsp), %rsi
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	subq	%rsi, %rax
	addq	$7, %rax
	cmpq	%r15, %rax
	jb	.LBB105_725
# %bb.509:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i663
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	16(%rsp), %rdi
	movl	$15, %eax
	cmpq	%r13, %rdi
	je	.LBB105_511
# %bb.510:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i663
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	32(%rsp), %rax
.LBB105_511:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i663
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	120(%rsp), %rcx                 # 8-byte Reload
	addq	208(%rsp), %rcx
	leaq	(%rsi,%r15), %rbx
	cmpq	%rax, %rbx
	jbe	.LBB105_513
# %bb.512:                              #   in Loop: Header=BB105_397 Depth=1
.Ltmp1978:
	leaq	16(%rsp), %rdi
	xorl	%edx, %edx
	movq	%r15, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1979:
	jmp	.LBB105_517
.LBB105_513:                            #   in Loop: Header=BB105_397 Depth=1
	testq	%r15, %r15
	je	.LBB105_517
# %bb.514:                              #   in Loop: Header=BB105_397 Depth=1
	movq	%rcx, %rax
	addq	%rsi, %rdi
	cmpq	$1, %r15
	jne	.LBB105_516
# %bb.515:                              #   in Loop: Header=BB105_397 Depth=1
	movzbl	(%rax), %eax
	movb	%al, (%rdi)
	jmp	.LBB105_517
.LBB105_516:                            #   in Loop: Header=BB105_397 Depth=1
	movq	%rax, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB105_517:                            #   in Loop: Header=BB105_397 Depth=1
	movq	%rbx, 24(%rsp)
	movq	16(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB105_494
# %bb.518:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i672
                                        #   in Loop: Header=BB105_397 Depth=1
	movq	224(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB105_494
.LBB105_519:
	movq	24(%rsp), %rsi
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	addq	$-8, %rax
	cmpq	%rax, %rsi
	jg	.LBB105_749
# %bb.520:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i569
	leaq	15(%rsi), %rbx
	movq	16(%rsp), %rax
	movl	$15, %ecx
	cmpq	%r13, %rax
	movq	288(%rsp), %r14                 # 8-byte Reload
	je	.LBB105_522
# %bb.521:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i569
	movq	32(%rsp), %rcx
.LBB105_522:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i569
	cmpq	%rcx, %rbx
	jbe	.LBB105_524
# %bb.523:
.Ltmp1991:
	leaq	.L.str.147(%rip), %rcx
	leaq	16(%rsp), %rdi
	movl	$15, %r8d
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1992:
	jmp	.LBB105_525
.LBB105_524:
	movabsq	$2322283407057821796, %rcx      # imm = 0x203A687469772064
	movq	%rcx, 7(%rax,%rsi)
	movabsq	$7234306502913050890, %rcx      # imm = 0x64656B6F766E490A
	movq	%rcx, (%rax,%rsi)
.LBB105_525:
	movq	%rbx, 24(%rsp)
	movq	16(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	%r14, 320(%rsp)
.Ltmp1993:
	leaq	320(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1994:
# %bb.526:                              # %_ZN8pybind1118reinterpret_borrowINS_5tupleEEET_NS_6handleE.exit692
	movq	352(%rsp), %rax                 # 8-byte Reload
	movzwl	(%rax), %r12d
	andl	$1, %r12d
	xorl	%r13d, %r13d
	leaq	8(%rsp), %rbp
	leaq	208(%rsp), %r15
	leaq	176(%rsp), %r14
	.p2align	4, 0x90
.LBB105_527:                            # =>This Inner Loop Header: Depth=1
	movq	320(%rsp), %rdi
.Ltmp1996:
	callq	PyTuple_Size@PLT
.Ltmp1997:
# %bb.528:                              # %_ZNK8pybind115tuple4sizeEv.exit
                                        #   in Loop: Header=BB105_527 Depth=1
	cmpq	%rax, %r12
	jae	.LBB105_571
# %bb.529:                              #   in Loop: Header=BB105_527 Depth=1
	movb	$1, %bl
	testb	$1, %r13b
	je	.LBB105_537
# %bb.530:                              #   in Loop: Header=BB105_527 Depth=1
	movq	24(%rsp), %rsi
	movq	%rsi, %rax
	andq	$-2, %rax
	cmpq	168(%rsp), %rax                 # 8-byte Folded Reload
	je	.LBB105_710
# %bb.531:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i694
                                        #   in Loop: Header=BB105_527 Depth=1
	movq	16(%rsp), %rax
	movl	$15, %ecx
	leaq	32(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB105_533
# %bb.532:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i694
                                        #   in Loop: Header=BB105_527 Depth=1
	movq	32(%rsp), %rcx
.LBB105_533:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i694
                                        #   in Loop: Header=BB105_527 Depth=1
	leaq	2(%rsi), %rbx
	cmpq	%rcx, %rbx
	jbe	.LBB105_535
# %bb.534:                              #   in Loop: Header=BB105_527 Depth=1
.Ltmp2100:
	movl	$2, %r8d
	leaq	16(%rsp), %rdi
	xorl	%edx, %edx
	leaq	.L.str.145(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2101:
	jmp	.LBB105_536
	.p2align	4, 0x90
.LBB105_535:                            #   in Loop: Header=BB105_527 Depth=1
	movw	$8236, (%rax,%rsi)              # imm = 0x202C
.LBB105_536:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit702
                                        #   in Loop: Header=BB105_527 Depth=1
	movq	%rbx, 24(%rsp)
	movq	16(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movl	%r13d, %ebx
.LBB105_537:                            #   in Loop: Header=BB105_527 Depth=1
	movq	320(%rsp), %rax
	movq	%rax, 136(%rsp)
	movq	%r12, 144(%rsp)
	movq	$0, 152(%rsp)
.Ltmp2103:
	leaq	128(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv
.Ltmp2104:
# %bb.538:                              # %.noexc704
                                        #   in Loop: Header=BB105_527 Depth=1
	movq	(%rax), %rax
	movq	%rax, 8(%rsp)
.Ltmp2105:
	movq	%rbp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2106:
# %bb.539:                              # %_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEEcvNS_6objectEEv.exit
                                        #   in Loop: Header=BB105_527 Depth=1
	movq	8(%rsp), %rdi
.Ltmp2108:
	leaq	32(%rsp), %r13
	callq	PyObject_Repr@PLT
.Ltmp2109:
# %bb.540:                              # %.noexc707
                                        #   in Loop: Header=BB105_527 Depth=1
	testq	%rax, %rax
	je	.LBB105_557
# %bb.541:                              #   in Loop: Header=BB105_527 Depth=1
	movq	%rax, 176(%rsp)
.Ltmp2110:
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv
.Ltmp2111:
# %bb.542:                              #   in Loop: Header=BB105_527 Depth=1
	movq	216(%rsp), %r8
	movq	24(%rsp), %rsi
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	subq	%rsi, %rax
	addq	$7, %rax
	cmpq	%r8, %rax
	jb	.LBB105_758
# %bb.543:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i711
                                        #   in Loop: Header=BB105_527 Depth=1
	movq	16(%rsp), %rdi
	movl	$15, %eax
	cmpq	%r13, %rdi
	je	.LBB105_545
# %bb.544:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i711
                                        #   in Loop: Header=BB105_527 Depth=1
	movq	32(%rsp), %rax
.LBB105_545:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i711
                                        #   in Loop: Header=BB105_527 Depth=1
	movq	208(%rsp), %rcx
	leaq	(%rsi,%r8), %r13
	cmpq	%rax, %r13
	jbe	.LBB105_547
# %bb.546:                              #   in Loop: Header=BB105_527 Depth=1
.Ltmp2113:
	leaq	16(%rsp), %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2114:
	jmp	.LBB105_551
	.p2align	4, 0x90
.LBB105_547:                            #   in Loop: Header=BB105_527 Depth=1
	testq	%r8, %r8
	je	.LBB105_551
# %bb.548:                              #   in Loop: Header=BB105_527 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB105_550
# %bb.549:                              #   in Loop: Header=BB105_527 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB105_551
.LBB105_550:                            #   in Loop: Header=BB105_527 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB105_551:                            #   in Loop: Header=BB105_527 Depth=1
	movq	%r13, 24(%rsp)
	movq	16(%rsp), %rax
	movb	$0, (%rax,%r13)
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB105_553
# %bb.552:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i719
                                        #   in Loop: Header=BB105_527 Depth=1
	movq	224(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB105_553:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit721
                                        #   in Loop: Header=BB105_527 Depth=1
.Ltmp2115:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2116:
# %bb.554:                              # %_ZN8pybind116objectD2Ev.exit722
                                        #   in Loop: Header=BB105_527 Depth=1
.Ltmp2118:
	movq	%rbp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2119:
# %bb.555:                              # %_ZN8pybind116objectD2Ev.exit723
                                        #   in Loop: Header=BB105_527 Depth=1
.Ltmp2121:
	leaq	152(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2122:
.LBB105_556:                            #   in Loop: Header=BB105_527 Depth=1
	incq	%r12
	movl	%ebx, %r13d
	jmp	.LBB105_527
.LBB105_557:                            #   in Loop: Header=BB105_527 Depth=1
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
.Ltmp2130:
	movq	%rax, 120(%rsp)                 # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2131:
# %bb.558:                              #   in Loop: Header=BB105_527 Depth=1
.Ltmp2133:
	movq	120(%rsp), %rdi                 # 8-byte Reload
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	callq	__cxa_throw@PLT
.Ltmp2134:
	jmp	.LBB105_757
.LBB105_758:                            #   in Loop: Header=BB105_527 Depth=1
.Ltmp2124:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2125:
	jmp	.LBB105_759
.LBB105_559:                            #   in Loop: Header=BB105_527 Depth=1
.Ltmp2132:
	movq	%rdx, %r13
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	120(%rsp), %rdi                 # 8-byte Reload
	callq	__cxa_free_exception@PLT
	jmp	.LBB105_565
.LBB105_560:                            #   in Loop: Header=BB105_527 Depth=1
.Ltmp2112:
	movq	%rdx, %r13
	movq	%rax, (%rsp)                    # 8-byte Spill
	jmp	.LBB105_563
.LBB105_561:                            #   in Loop: Header=BB105_527 Depth=1
.Ltmp2126:
	movq	%rdx, %r13
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB105_563
# %bb.562:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i726
                                        #   in Loop: Header=BB105_527 Depth=1
	movq	224(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB105_563:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit728
                                        #   in Loop: Header=BB105_527 Depth=1
.Ltmp2127:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2128:
	jmp	.LBB105_565
.LBB105_564:                            #   in Loop: Header=BB105_527 Depth=1
.Ltmp2135:
	movq	%rdx, %r13
	movq	%rax, (%rsp)                    # 8-byte Spill
.LBB105_565:                            # %.body709
                                        #   in Loop: Header=BB105_527 Depth=1
.Ltmp2136:
	movq	%rbp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2137:
	jmp	.LBB105_567
.LBB105_566:                            #   in Loop: Header=BB105_527 Depth=1
.Ltmp2107:
	movq	%rdx, %r13
	movq	%rax, (%rsp)                    # 8-byte Spill
.LBB105_567:                            # %_ZN8pybind116objectD2Ev.exit730
                                        #   in Loop: Header=BB105_527 Depth=1
.Ltmp2139:
	leaq	152(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2140:
# %bb.568:                              # %_ZN8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEED2Ev.exit732
                                        #   in Loop: Header=BB105_527 Depth=1
	cmpl	$3, %r13d
	jne	.LBB105_889
# %bb.569:                              #   in Loop: Header=BB105_527 Depth=1
	movq	(%rsp), %rdi                    # 8-byte Reload
	callq	__cxa_begin_catch@PLT
.Ltmp2142:
	leaq	16(%rsp), %rdi
	leaq	.L.str.148(%rip), %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc@PLT
.Ltmp2143:
# %bb.570:                              #   in Loop: Header=BB105_527 Depth=1
.Ltmp2148:
	callq	__cxa_end_catch@PLT
.Ltmp2149:
	jmp	.LBB105_556
.LBB105_571:
	movq	280(%rsp), %rax                 # 8-byte Reload
	testq	%rax, %rax
	je	.LBB105_647
# %bb.572:
	movq	%rax, 8(%rsp)
.Ltmp1998:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp1999:
# %bb.573:                              # %_ZN8pybind1118reinterpret_borrowINS_4dictEEET_NS_6handleE.exit734
	movq	8(%rsp), %rdi
.Ltmp2001:
	callq	PyDict_Size@PLT
.Ltmp2002:
# %bb.574:
	testq	%rax, %rax
	je	.LBB105_646
# %bb.575:
	testb	$1, %r13b
	je	.LBB105_577
# %bb.576:
.Ltmp2003:
	leaq	.L.str.149(%rip), %rsi
	leaq	16(%rsp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc@PLT
.Ltmp2004:
.LBB105_577:
	movq	24(%rsp), %rsi
	movq	%rsi, %rax
	andq	$-8, %rax
	movabsq	$9223372036854775800, %rcx      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rcx, %rax
	je	.LBB105_753
# %bb.578:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i737
	leaq	8(%rsi), %rbx
	movq	16(%rsp), %rax
	movl	$15, %ecx
	leaq	32(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB105_580
# %bb.579:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i737
	movq	32(%rsp), %rcx
.LBB105_580:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i737
	cmpq	%rcx, %rbx
	jbe	.LBB105_589
# %bb.581:
.Ltmp2005:
	leaq	.L.str.150(%rip), %rcx
	leaq	16(%rsp), %rdi
	movl	$8, %r8d
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2006:
	jmp	.LBB105_590
.LBB105_582:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcm.exit.i842
	subq	%r15, %rax
	cmpq	$-1, %rax
	je	.LBB105_662
# %bb.583:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcm.exit.thread5.i844
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	addq	$-235, %rax
	cmpq	%rax, %rbx
	jg	.LBB105_738
# %bb.584:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i845
	leaq	242(%rbx), %r13
	movl	$15, %eax
	cmpq	%r12, %r15
	je	.LBB105_586
# %bb.585:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i845
	movq	32(%rsp), %rax
.LBB105_586:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i845
	cmpq	%rax, %r13
	jbe	.LBB105_660
# %bb.587:
.Ltmp1938:
	leaq	.L.str.168(%rip), %rcx
	leaq	16(%rsp), %rdi
	movl	$242, %r8d
	movq	%rbx, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp1939:
# %bb.588:                              # %._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit.i848_crit_edge
	movq	16(%rsp), %r15
	jmp	.LBB105_661
.LBB105_589:
	movabsq	$2322295446000727915, %rcx      # imm = 0x203A73677261776B
	movq	%rcx, (%rax,%rsi)
.LBB105_590:
	movq	%rbx, 24(%rsp)
	movq	16(%rsp), %rax
	movb	$0, (%rax,%rbx)
	movq	8(%rsp), %rdi
	movq	%rdi, 208(%rsp)
	leaq	216(%rsp), %rdx
	leaq	224(%rsp), %rcx
	leaq	232(%rsp), %rsi
	xorps	%xmm0, %xmm0
	movups	%xmm0, 216(%rsp)
	movq	$0, 232(%rsp)
.Ltmp2007:
	movq	%rcx, %r12
	callq	PyDict_Next@PLT
.Ltmp2008:
# %bb.591:                              # %.noexc747
	testl	%eax, %eax
	je	.LBB105_646
# %bb.592:                              # %.noexc747
	cmpq	$-1, 232(%rsp)
	je	.LBB105_646
# %bb.593:                              # %.lr.ph1499
	movups	216(%rsp), %xmm0
	movaps	%xmm0, 176(%rsp)
	leaq	480(%rsp), %r14
	leaq	456(%rsp), %rbx
	leaq	128(%rsp), %r13
	leaq	16(%rsp), %rbp
	jmp	.LBB105_596
	.p2align	4, 0x90
.LBB105_594:                            #   in Loop: Header=BB105_596 Depth=1
	movw	$8236, (%rax,%rsi)              # imm = 0x202C
.LBB105_595:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit756
                                        #   in Loop: Header=BB105_596 Depth=1
	movq	%r15, 24(%rsp)
	movq	16(%rsp), %rax
	movb	$0, (%rax,%r15)
.LBB105_596:                            # =>This Inner Loop Header: Depth=1
.Ltmp2010:
	movq	%r14, %rdi
	leaq	.L.str.151(%rip), %rsi
	callq	_ZN8pybind113strC2EPKc
.Ltmp2011:
# %bb.597:                              #   in Loop: Header=BB105_596 Depth=1
.Ltmp2013:
	movq	%rbx, %rdi
	movq	%r14, %rsi
	leaq	176(%rsp), %rdx
	callq	_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_
.Ltmp2014:
# %bb.598:                              #   in Loop: Header=BB105_596 Depth=1
.Ltmp2016:
	movq	%r13, %rdi
	movq	%rbx, %rsi
	callq	_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv
.Ltmp2017:
# %bb.599:                              #   in Loop: Header=BB105_596 Depth=1
	movq	136(%rsp), %r8
	movq	24(%rsp), %rsi
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	subq	%rsi, %rax
	addq	$7, %rax
	cmpq	%r8, %rax
	jb	.LBB105_721
# %bb.600:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i757
                                        #   in Loop: Header=BB105_596 Depth=1
	movq	16(%rsp), %rdi
	movl	$15, %eax
	leaq	32(%rsp), %rcx
	cmpq	%rcx, %rdi
	je	.LBB105_602
# %bb.601:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i757
                                        #   in Loop: Header=BB105_596 Depth=1
	movq	32(%rsp), %rax
.LBB105_602:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i757
                                        #   in Loop: Header=BB105_596 Depth=1
	movq	128(%rsp), %rcx
	leaq	(%rsi,%r8), %r15
	cmpq	%rax, %r15
	jbe	.LBB105_604
# %bb.603:                              #   in Loop: Header=BB105_596 Depth=1
.Ltmp2019:
	movq	%rbp, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2020:
	jmp	.LBB105_608
	.p2align	4, 0x90
.LBB105_604:                            #   in Loop: Header=BB105_596 Depth=1
	testq	%r8, %r8
	je	.LBB105_608
# %bb.605:                              #   in Loop: Header=BB105_596 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB105_607
# %bb.606:                              #   in Loop: Header=BB105_596 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB105_608
.LBB105_607:                            #   in Loop: Header=BB105_596 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB105_608:                            #   in Loop: Header=BB105_596 Depth=1
	movq	%r15, 24(%rsp)
	movq	16(%rsp), %rax
	movb	$0, (%rax,%r15)
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB105_610
# %bb.609:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i765
                                        #   in Loop: Header=BB105_596 Depth=1
	movq	144(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB105_610:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit767
                                        #   in Loop: Header=BB105_596 Depth=1
.Ltmp2022:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2023:
# %bb.611:                              # %_ZN8pybind116objectD2Ev.exit768
                                        #   in Loop: Header=BB105_596 Depth=1
.Ltmp2025:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2026:
# %bb.612:                              # %_ZN8pybind116objectD2Ev.exit769
                                        #   in Loop: Header=BB105_596 Depth=1
	movq	184(%rsp), %rdi
.Ltmp2028:
	callq	PyObject_Repr@PLT
.Ltmp2029:
# %bb.613:                              # %.noexc771
                                        #   in Loop: Header=BB105_596 Depth=1
	testq	%rax, %rax
	je	.LBB105_635
# %bb.614:                              #   in Loop: Header=BB105_596 Depth=1
	movq	%rax, 456(%rsp)
.Ltmp2030:
	movq	%r13, %rdi
	movq	%rbx, %rsi
	callq	_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv
.Ltmp2031:
# %bb.615:                              #   in Loop: Header=BB105_596 Depth=1
	movq	136(%rsp), %r8
	movq	24(%rsp), %rsi
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	subq	%rsi, %rax
	addq	$7, %rax
	cmpq	%r8, %rax
	jb	.LBB105_761
# %bb.616:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i776
                                        #   in Loop: Header=BB105_596 Depth=1
	movq	16(%rsp), %rdi
	movl	$15, %eax
	leaq	32(%rsp), %rcx
	cmpq	%rcx, %rdi
	je	.LBB105_618
# %bb.617:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i776
                                        #   in Loop: Header=BB105_596 Depth=1
	movq	32(%rsp), %rax
.LBB105_618:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i776
                                        #   in Loop: Header=BB105_596 Depth=1
	movq	128(%rsp), %rcx
	leaq	(%rsi,%r8), %r15
	cmpq	%rax, %r15
	jbe	.LBB105_620
# %bb.619:                              #   in Loop: Header=BB105_596 Depth=1
.Ltmp2033:
	movq	%rbp, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2034:
	jmp	.LBB105_624
	.p2align	4, 0x90
.LBB105_620:                            #   in Loop: Header=BB105_596 Depth=1
	testq	%r8, %r8
	je	.LBB105_624
# %bb.621:                              #   in Loop: Header=BB105_596 Depth=1
	addq	%rsi, %rdi
	cmpq	$1, %r8
	jne	.LBB105_623
# %bb.622:                              #   in Loop: Header=BB105_596 Depth=1
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB105_624
.LBB105_623:                            #   in Loop: Header=BB105_596 Depth=1
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
	.p2align	4, 0x90
.LBB105_624:                            #   in Loop: Header=BB105_596 Depth=1
	movq	%r15, 24(%rsp)
	movq	16(%rsp), %rax
	movb	$0, (%rax,%r15)
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB105_626
# %bb.625:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i784
                                        #   in Loop: Header=BB105_596 Depth=1
	movq	144(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB105_626:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit786
                                        #   in Loop: Header=BB105_596 Depth=1
.Ltmp2035:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2036:
.LBB105_627:                            #   in Loop: Header=BB105_596 Depth=1
	movq	208(%rsp), %rdi
.Ltmp2058:
	leaq	232(%rsp), %rsi
	leaq	216(%rsp), %rdx
	movq	%r12, %rcx
	callq	PyDict_Next@PLT
.Ltmp2059:
# %bb.628:                              # %.noexc797
                                        #   in Loop: Header=BB105_596 Depth=1
	testl	%eax, %eax
	je	.LBB105_646
# %bb.629:                              # %.noexc797
                                        #   in Loop: Header=BB105_596 Depth=1
	cmpq	$-1, 232(%rsp)
	je	.LBB105_646
# %bb.630:                              #   in Loop: Header=BB105_596 Depth=1
	movups	216(%rsp), %xmm0
	movaps	%xmm0, 176(%rsp)
	movq	24(%rsp), %rsi
	movq	%rsi, %rax
	andq	$-2, %rax
	cmpq	168(%rsp), %rax                 # 8-byte Folded Reload
	je	.LBB105_723
# %bb.631:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i748
                                        #   in Loop: Header=BB105_596 Depth=1
	movq	16(%rsp), %rax
	movl	$15, %ecx
	leaq	32(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB105_633
# %bb.632:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i748
                                        #   in Loop: Header=BB105_596 Depth=1
	movq	32(%rsp), %rcx
.LBB105_633:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i748
                                        #   in Loop: Header=BB105_596 Depth=1
	leaq	2(%rsi), %r15
	cmpq	%rcx, %r15
	jbe	.LBB105_594
# %bb.634:                              #   in Loop: Header=BB105_596 Depth=1
.Ltmp2061:
	movl	$2, %r8d
	movq	%rbp, %rdi
	xorl	%edx, %edx
	leaq	.L.str.145(%rip), %rcx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2062:
	jmp	.LBB105_595
.LBB105_635:                            #   in Loop: Header=BB105_596 Depth=1
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
.Ltmp2044:
	movq	%rax, 120(%rsp)                 # 8-byte Spill
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2045:
# %bb.636:                              #   in Loop: Header=BB105_596 Depth=1
.Ltmp2047:
	movq	120(%rsp), %rdi                 # 8-byte Reload
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	callq	__cxa_throw@PLT
.Ltmp2048:
	jmp	.LBB105_760
.LBB105_761:                            #   in Loop: Header=BB105_596 Depth=1
.Ltmp2038:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2039:
	jmp	.LBB105_762
.LBB105_637:                            #   in Loop: Header=BB105_596 Depth=1
.Ltmp2046:
	movq	%rdx, %r15
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	120(%rsp), %rdi                 # 8-byte Reload
	callq	__cxa_free_exception@PLT
	jmp	.LBB105_643
.LBB105_638:                            #   in Loop: Header=BB105_596 Depth=1
.Ltmp2032:
	movq	%rdx, %r15
	movq	%rax, (%rsp)                    # 8-byte Spill
	jmp	.LBB105_641
.LBB105_639:                            #   in Loop: Header=BB105_596 Depth=1
.Ltmp2040:
	movq	%rdx, %r15
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB105_641
# %bb.640:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i793
                                        #   in Loop: Header=BB105_596 Depth=1
	movq	144(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB105_641:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit795
                                        #   in Loop: Header=BB105_596 Depth=1
.Ltmp2041:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2042:
	jmp	.LBB105_643
.LBB105_642:                            #   in Loop: Header=BB105_596 Depth=1
.Ltmp2049:
	movq	%rdx, %r15
	movq	%rax, (%rsp)                    # 8-byte Spill
.LBB105_643:                            # %.body773
                                        #   in Loop: Header=BB105_596 Depth=1
	cmpl	$3, %r15d
	jne	.LBB105_836
# %bb.644:                              #   in Loop: Header=BB105_596 Depth=1
	movq	(%rsp), %rdi                    # 8-byte Reload
	callq	__cxa_begin_catch@PLT
.Ltmp2050:
	movq	%rbp, %rdi
	leaq	.L.str.148(%rip), %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc@PLT
.Ltmp2051:
# %bb.645:                              #   in Loop: Header=BB105_596 Depth=1
.Ltmp2055:
	callq	__cxa_end_catch@PLT
.Ltmp2056:
	jmp	.LBB105_627
.LBB105_646:
.Ltmp2082:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2083:
.LBB105_647:
	movq	24(%rsp), %rbx
	testq	%rbx, %rbx
	leaq	32(%rsp), %r13
	je	.LBB105_670
# %bb.648:
	cmpq	$5, %rbx
	jb	.LBB105_670
# %bb.649:                              # %.lr.ph.i.i.i
	movq	16(%rsp), %r15
	leaq	(%r15,%rbx), %r14
	movl	$979661939, %ebp                # imm = 0x3A647473
	movq	%rbx, %rdx
	movq	%r15, %rax
	.p2align	4, 0x90
.LBB105_650:                            # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	addq	$-4, %rdx
	movq	%rax, %rdi
	movl	$115, %esi
	callq	memchr@PLT
	testq	%rax, %rax
	je	.LBB105_670
# %bb.651:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
                                        #   in Loop: Header=BB105_650 Depth=1
	movl	(%rax), %ecx
	xorl	%ebp, %ecx
	movzbl	4(%rax), %edx
	xorl	$58, %edx
	orl	%ecx, %edx
	je	.LBB105_653
# %bb.652:                              #   in Loop: Header=BB105_650 Depth=1
	incq	%rax
	movq	%r14, %rdx
	subq	%rax, %rdx
	cmpq	$5, %rdx
	jae	.LBB105_650
	jmp	.LBB105_670
.LBB105_653:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcm.exit.i
	subq	%r15, %rax
	cmpq	$-1, %rax
	je	.LBB105_670
# %bb.654:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcm.exit.thread5.i
	movabsq	$9223372036854775800, %rax      # imm = 0x7FFFFFFFFFFFFFF8
	addq	$-235, %rax
	cmpq	%rax, %rbx
	jg	.LBB105_755
# %bb.655:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i801
	leaq	242(%rbx), %r12
	movl	$15, %eax
	cmpq	%r13, %r15
	je	.LBB105_657
# %bb.656:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i801
	movq	32(%rsp), %rax
.LBB105_657:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i801
	cmpq	%rax, %r12
	jbe	.LBB105_668
# %bb.658:
.Ltmp2085:
	leaq	.L.str.168(%rip), %rcx
	leaq	16(%rsp), %rdi
	movl	$242, %r8d
	movq	%rbx, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2086:
# %bb.659:                              # %._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit.i_crit_edge
	movq	16(%rsp), %r15
	jmp	.LBB105_669
.LBB105_660:
	leaq	.L.str.168(%rip), %rsi
	movl	$242, %edx
	movq	%r14, %rdi
	callq	memcpy@PLT
.LBB105_661:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit.i848
	movq	%r13, 24(%rsp)
	movb	$0, (%r15,%r13)
.LBB105_662:                            # %_ZZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_ENKUlRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_clES9_.exit851
.Ltmp1940:
	callq	PyErr_Occurred@PLT
.Ltmp1941:
# %bb.663:
	movq	PyExc_TypeError@GOTPCREL(%rip), %rcx
	movq	(%rcx), %rdi
	movq	16(%rsp), %rsi
	testq	%rax, %rax
	je	.LBB105_665
# %bb.664:
.Ltmp1942:
	callq	_ZN8pybind1110raise_fromEP7_objectPKc
.Ltmp1943:
	jmp	.LBB105_666
.LBB105_665:
.Ltmp1944:
	callq	PyErr_SetString@PLT
.Ltmp1945:
.LBB105_666:                            # %_ZN8pybind119set_errorERKNS_6handleEPKc.exit853
	movq	16(%rsp), %rdi
	cmpq	%r12, %rdi
	jne	.LBB105_676
	jmp	.LBB105_677
.LBB105_668:
	leaq	.L.str.168(%rip), %rsi
	movl	$242, %edx
	movq	%r14, %rdi
	callq	memcpy@PLT
.LBB105_669:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc.exit.i
	movq	%r12, 24(%rsp)
	movb	$0, (%r15,%r12)
.LBB105_670:                            # %_ZZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_ENKUlRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_clES9_.exit
.Ltmp2089:
	callq	PyErr_Occurred@PLT
.Ltmp2090:
# %bb.671:
	movq	PyExc_TypeError@GOTPCREL(%rip), %rcx
	movq	(%rcx), %rdi
	movq	16(%rsp), %rsi
	testq	%rax, %rax
	je	.LBB105_673
# %bb.672:
.Ltmp2091:
	callq	_ZN8pybind1110raise_fromEP7_objectPKc
.Ltmp2092:
	jmp	.LBB105_674
.LBB105_673:
.Ltmp2094:
	callq	PyErr_SetString@PLT
.Ltmp2095:
.LBB105_674:                            # %_ZN8pybind119set_errorERKNS_6handleEPKc.exit
.Ltmp2097:
	leaq	320(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2098:
# %bb.675:                              # %_ZN8pybind116objectD2Ev.exit807
	movq	16(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB105_677
.LBB105_676:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i808
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB105_677:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit810
	xorl	%eax, %eax
.LBB105_678:
	addq	$488, %rsp                      # imm = 0x1E8
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB105_679:                            # %.noexc11.i619
	.cfi_def_cfa_offset 544
.Ltmp2163:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp2164:
# %bb.680:                              # %.noexc623
.LBB105_681:
	leaq	.L.str.137(%rip), %rdi
	leaq	.L.str.136(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_(%rip), %rcx
	movl	$909, %edx                      # imm = 0x38D
	callq	__assert_fail@PLT
.LBB105_682:                            # %.noexc11.i
.Ltmp2182:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp2183:
# %bb.683:                              # %.noexc534
.LBB105_684:
.Ltmp1893:
	leaq	.L.str.79(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1894:
# %bb.685:                              # %.noexc876
.LBB105_686:
.Ltmp1884:
	leaq	.L.str.79(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1885:
# %bb.687:                              # %.noexc940
.LBB105_688:
.Ltmp1711:
	leaq	.L.str.79(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1712:
# %bb.689:                              # %.noexc897
.LBB105_690:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp1728:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1729:
# %bb.691:
.Ltmp1731:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp1732:
	jmp	.LBB105_931
.LBB105_692:
	leaq	.L.str.137(%rip), %rdi
	leaq	.L.str.136(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_(%rip), %rcx
	movl	$1017, %edx                     # imm = 0x3F9
	callq	__assert_fail@PLT
.LBB105_693:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp1787:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp1788:
# %bb.694:
.Ltmp1790:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp1791:
# %bb.695:                              # %.noexc471
.LBB105_696:
.Ltmp1862:
	leaq	.L.str.139(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1863:
# %bb.697:
.LBB105_698:
.Ltmp2173:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2174:
# %bb.699:                              # %.noexc602
.LBB105_700:
.Ltmp2170:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2171:
# %bb.701:                              # %.noexc606
.LBB105_702:
.Ltmp2160:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2161:
# %bb.703:                              # %.noexc684
.LBB105_704:                            # %_ZN8pybind116detail33function_record_ptr_from_PyObjectEP7_object.exit.thread
	leaq	.L.str.135(%rip), %rdi
	leaq	.L.str.136(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_(%rip), %rcx
	movl	$795, %edx                      # imm = 0x31B
	callq	__assert_fail@PLT
.LBB105_705:
	leaq	.L.str.137(%rip), %rdi
	leaq	.L.str.136(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_(%rip), %rcx
	movl	$892, %edx                      # imm = 0x37C
	callq	__assert_fail@PLT
.LBB105_706:
.Ltmp1742:
	leaq	.L.str.79(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1743:
# %bb.707:                              # %.noexc919
.LBB105_708:
.Ltmp2167:
	leaq	.L.str.34(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.Ltmp2168:
# %bb.709:                              # %.noexc621
.LBB105_710:
.Ltmp2151:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2152:
# %bb.711:                              # %.noexc700
.LBB105_712:
	leaq	.L.str.74(%rip), %rdi
	leaq	.L.str.75(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL16PyTuple_GET_SIZEP7_object(%rip), %rcx
	movl	$23, %edx
	callq	__assert_fail@PLT
.LBB105_713:
	leaq	.L.str.76(%rip), %rdi
	leaq	.L.str.77(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object(%rip), %rcx
	movl	$231, %edx
	callq	__assert_fail@PLT
.LBB105_714:
	leaq	.L.str.78(%rip), %rdi
	leaq	.L.str.77(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object(%rip), %rcx
	movl	$232, %edx
	callq	__assert_fail@PLT
.LBB105_715:
.Ltmp1692:
	leaq	.L.str.79(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1693:
# %bb.716:                              # %.noexc864
.LBB105_717:
.Ltmp1831:
	leaq	.L.str.130(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1832:
# %bb.718:
.LBB105_719:                            # %.noexc.i620
.Ltmp2165:
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2166:
# %bb.720:                              # %.noexc622
.LBB105_721:
.Ltmp2067:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2068:
# %bb.722:                              # %.noexc762
.LBB105_723:
.Ltmp2064:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2065:
# %bb.724:                              # %.noexc754
.LBB105_725:                            # %.invoke
.Ltmp1983:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1984:
# %bb.726:                              # %.cont
.LBB105_727:
	movq	%rbx, %r14
	movq	(%rsp), %r15                    # 8-byte Reload
	jmp	.LBB105_925
.LBB105_728:
.Ltmp1854:
	leaq	.L.str.79(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1855:
# %bb.729:                              # %.noexc984
.LBB105_730:
.Ltmp1856:
	leaq	.L.str.160(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1857:
# %bb.731:
.LBB105_732:
.Ltmp1767:
	leaq	.L.str.130(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1768:
# %bb.733:
.LBB105_734:
.Ltmp1799:
	leaq	.L.str.130(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp1800:
# %bb.735:
.LBB105_736:
.Ltmp1981:
	leaq	.L.str.10(%rip), %rdi
	leaq	.L.str.40(%rip), %rsi
	xorl	%eax, %eax
	callq	_ZSt24__throw_out_of_range_fmtPKcz@PLT
.Ltmp1982:
# %bb.737:                              # %.noexc668
.LBB105_738:                            # %.invoke1652
.Ltmp1947:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1948:
# %bb.739:                              # %.cont1653
.LBB105_740:
	leaq	.L.str.153(%rip), %rdi
	leaq	.L.str.136(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_(%rip), %rcx
	movl	$1221, %edx                     # imm = 0x4C5
	callq	__assert_fail@PLT
.LBB105_741:
.Ltmp1816:
	leaq	.L.str.79(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp1817:
# %bb.742:                              # %.noexc962
.LBB105_743:
.Ltmp2186:
	leaq	.L.str.34(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.Ltmp2187:
# %bb.744:                              # %.noexc532
.LBB105_745:
.Ltmp2179:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2180:
# %bb.746:                              # %.noexc538
.LBB105_747:
.Ltmp2176:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2177:
# %bb.748:                              # %.noexc556
.LBB105_749:
.Ltmp2157:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2158:
# %bb.750:                              # %.noexc575
.LBB105_751:                            # %.noexc.i
.Ltmp2184:
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2185:
# %bb.752:                              # %.noexc533
.LBB105_753:
.Ltmp2076:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2077:
# %bb.754:                              # %.noexc743
.LBB105_755:
.Ltmp2087:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2088:
# %bb.756:                              # %.noexc804
.LBB105_757:                            # %.noexc708
.LBB105_759:                            # %.noexc716
.LBB105_760:                            # %.noexc772
.LBB105_762:                            # %.noexc781
.LBB105_763:
.Ltmp2057:
	jmp	.LBB105_829
.LBB105_764:
.Ltmp2052:
	movq	%rax, (%rsp)                    # 8-byte Spill
.Ltmp2053:
	callq	__cxa_end_catch@PLT
.Ltmp2054:
	jmp	.LBB105_836
.LBB105_765:
.Ltmp2043:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_766:
.Ltmp1914:
	jmp	.LBB105_902
.LBB105_767:
.Ltmp2150:
	jmp	.LBB105_888
.LBB105_768:
.Ltmp2144:
	movq	%rax, (%rsp)                    # 8-byte Spill
.Ltmp2145:
	callq	__cxa_end_catch@PLT
.Ltmp2146:
	jmp	.LBB105_889
.LBB105_769:
.Ltmp2141:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_770:
.Ltmp2138:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_771:
.Ltmp2129:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_772:
.Ltmp1880:
	jmp	.LBB105_855
.LBB105_773:
.Ltmp2096:
	jmp	.LBB105_888
.LBB105_774:
.Ltmp2009:
	jmp	.LBB105_829
.LBB105_775:
.Ltmp2084:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_776:
.Ltmp2000:
	jmp	.LBB105_888
.LBB105_777:
.Ltmp1946:
	jmp	.LBB105_838
.LBB105_778:
.Ltmp1883:
	jmp	.LBB105_855
.LBB105_779:
.Ltmp2099:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_780:
.Ltmp1995:
	movq	%rax, (%rsp)                    # 8-byte Spill
	jmp	.LBB105_890
.LBB105_781:
.Ltmp1956:
	movq	%rax, %rbx
	movq	320(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB105_787
.LBB105_790:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i580
	movq	336(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB105_788
.LBB105_791:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i583
	movq	144(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	176(%rsp), %rdi
	cmpq	%r15, %rdi
	jne	.LBB105_793
	jmp	.LBB105_939
.LBB105_782:
.Ltmp1680:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_783:
.Ltmp2078:
	jmp	.LBB105_829
.LBB105_784:
.Ltmp2159:
	jmp	.LBB105_937
.LBB105_785:
.Ltmp2178:
	movq	%rax, %rbx
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB105_789
# %bb.786:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit579
	movq	320(%rsp), %rdi
	cmpq	%r13, %rdi
	jne	.LBB105_790
.LBB105_787:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit582
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB105_791
.LBB105_788:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit585
	movq	176(%rsp), %rdi
	cmpq	%r15, %rdi
	jne	.LBB105_793
	jmp	.LBB105_939
.LBB105_789:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i577
	movq	224(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	320(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB105_787
	jmp	.LBB105_790
.LBB105_792:
.Ltmp2181:
	movq	%rax, %rbx
	movq	176(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB105_939
.LBB105_793:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i586
	movq	192(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB105_794:                            # %.loopexit.split-lp1211
.Ltmp1818:
	jmp	.LBB105_819
.LBB105_795:
.Ltmp2093:
	jmp	.LBB105_888
.LBB105_796:
.Ltmp1935:
	movq	%rax, %rdi
	callq	_Unwind_Resume@PLT
.LBB105_797:
.Ltmp1801:
	movq	%rdx, %r14
	movq	%rax, %r15
.Ltmp1802:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1803:
	jmp	.LBB105_909
.LBB105_798:
.Ltmp1804:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_799:
.Ltmp1781:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_800:
.Ltmp1778:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_801:
.Ltmp1775:
	jmp	.LBB105_819
.LBB105_802:
.Ltmp1769:
	movq	%rdx, %r14
	movq	%rax, %r15
.Ltmp1770:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1771:
	jmp	.LBB105_909
.LBB105_803:
.Ltmp1772:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_804:
.Ltmp1766:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_805:
.Ltmp1763:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_806:
.Ltmp1760:
	jmp	.LBB105_819
.LBB105_807:                            # %.loopexit
.Ltmp2063:
	jmp	.LBB105_829
.LBB105_808:                            # %.loopexit1133
.Ltmp2021:
	jmp	.LBB105_832
.LBB105_809:
.Ltmp1858:
	movq	%rdx, %r14
	movq	%rax, %r15
.Ltmp1859:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1860:
	jmp	.LBB105_919
.LBB105_810:
.Ltmp1861:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_811:
.Ltmp1845:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_812:
.Ltmp1842:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_813:
.Ltmp1839:
	jmp	.LBB105_918
.LBB105_814:
.Ltmp1813:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_815:
.Ltmp1810:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_816:
.Ltmp1807:
	jmp	.LBB105_819
.LBB105_817:                            # %.loopexit1165
.Ltmp1980:
	jmp	.LBB105_842
.LBB105_818:                            # %.loopexit1210
.Ltmp1821:
.LBB105_819:
	movq	%rdx, %r14
	movq	%rax, %r15
	jmp	.LBB105_909
.LBB105_820:
.Ltmp1932:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_821:                            # %.loopexit.split-lp
.Ltmp2066:
	jmp	.LBB105_829
.LBB105_822:                            # %.loopexit1200
.Ltmp1688:
	jmp	.LBB105_923
.LBB105_823:
.Ltmp2012:
	jmp	.LBB105_829
.LBB105_824:
.Ltmp2018:
	movq	%rax, (%rsp)                    # 8-byte Spill
	jmp	.LBB105_834
.LBB105_825:
.Ltmp2015:
	movq	%rax, (%rsp)                    # 8-byte Spill
	jmp	.LBB105_835
.LBB105_826:
.Ltmp2027:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_827:
.Ltmp2024:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_828:
.Ltmp2060:
.LBB105_829:
	movq	%rax, (%rsp)                    # 8-byte Spill
	jmp	.LBB105_836
.LBB105_830:
.Ltmp2037:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_831:                            # %.loopexit.split-lp1134
.Ltmp2069:
.LBB105_832:
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB105_834
# %bb.833:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i788
	movq	144(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB105_834:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit790
.Ltmp2070:
	leaq	456(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2071:
.LBB105_835:                            # %_ZN8pybind116objectD2Ev.exit791
.Ltmp2073:
	leaq	480(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2074:
.LBB105_836:
.Ltmp2079:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2080:
	jmp	.LBB105_889
.LBB105_837:
.Ltmp1949:
.LBB105_838:
	movq	%rax, %rbx
	movq	16(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB105_939
	jmp	.LBB105_839
.LBB105_840:
.Ltmp2075:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_841:                            # %.loopexit.split-lp1166
.Ltmp1985:
.LBB105_842:
	movq	%rax, %rbx
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB105_882
# %bb.843:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i649
	movq	224(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	leaq	32(%rsp), %r13
	jmp	.LBB105_938
.LBB105_844:
.Ltmp2072:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_845:                            # %.loopexit1155
.Ltmp1973:
	jmp	.LBB105_937
.LBB105_846:
.Ltmp1961:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_847:
.Ltmp1853:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_848:
.Ltmp1833:
	movq	%rdx, %r14
	movq	%rax, %r15
.Ltmp1834:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1835:
	jmp	.LBB105_919
.LBB105_849:
.Ltmp1836:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_850:
.Ltmp1830:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_851:
.Ltmp1827:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_852:
.Ltmp1757:
	jmp	.LBB105_918
.LBB105_853:                            # %.loopexit.split-lp1201
.Ltmp1694:
	jmp	.LBB105_923
.LBB105_854:
.Ltmp1867:
.LBB105_855:                            # %.loopexit1215
	movq	%rdx, %r14
	movq	%rax, %r15
.LBB105_856:                            # %.loopexit1215
	movq	128(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB105_919
# %bb.857:
	movq	160(%rsp), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB105_919
.LBB105_858:
.Ltmp2081:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_859:                            # %.loopexit.split-lp1140
.Ltmp2153:
	jmp	.LBB105_888
.LBB105_860:                            # %.loopexit1184
.Ltmp1738:
	jmp	.LBB105_868
.LBB105_861:                            # %.loopexit1150
.Ltmp1970:
	jmp	.LBB105_878
.LBB105_862:                            # %.loopexit1145
.Ltmp1967:
	jmp	.LBB105_863
.LBB105_864:                            # %.loopexit1205
.Ltmp1850:
	jmp	.LBB105_918
.LBB105_865:                            # %.loopexit.split-lp1174
.Ltmp1792:
	jmp	.LBB105_907
.LBB105_866:
.Ltmp1789:
	movq	%rdx, %r14
	movq	%rax, %r15
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB105_908
.LBB105_867:                            # %.loopexit.split-lp1185
.Ltmp1744:
.LBB105_868:
	movq	%rdx, %r14
	movq	%rax, %r15
.Ltmp1745:
	leaq	208(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1746:
	jmp	.LBB105_919
.LBB105_869:
.Ltmp1747:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_870:
.Ltmp1691:
	jmp	.LBB105_923
.LBB105_871:                            # %.loopexit.split-lp1161
.Ltmp2162:
	movq	%rax, %rbx
	leaq	32(%rsp), %r13
	jmp	.LBB105_938
.LBB105_872:                            # %.loopexit1160
.Ltmp1990:
	jmp	.LBB105_937
.LBB105_873:
.Ltmp2123:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_874:
.Ltmp2120:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_875:
.Ltmp2117:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_876:
.Ltmp1964:
	movq	%rax, %rbx
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB105_881
	jmp	.LBB105_882
.LBB105_877:                            # %.loopexit.split-lp1151
.Ltmp2172:
.LBB105_878:
	movq	%rax, %rbx
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB105_884
# %bb.879:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit642
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB105_885
.LBB105_880:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit645
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB105_882
.LBB105_881:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i646
	movq	192(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB105_882:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit648
	leaq	32(%rsp), %r13
	jmp	.LBB105_938
.LBB105_884:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i640
	movq	224(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB105_880
	jmp	.LBB105_885
.LBB105_883:                            # %.loopexit.split-lp1146
.Ltmp2175:
.LBB105_863:                            # %.loopexit1145
	movq	%rax, %rbx
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB105_880
.LBB105_885:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i643
	movq	144(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB105_881
	jmp	.LBB105_882
.LBB105_886:                            # %.loopexit.split-lp1206
.Ltmp1864:
	jmp	.LBB105_918
.LBB105_887:                            # %.loopexit1139
.Ltmp2102:
.LBB105_888:                            # %.loopexit1144
	movq	%rax, (%rsp)                    # 8-byte Spill
.LBB105_889:                            # %.loopexit1144
.Ltmp2154:
	leaq	320(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2155:
.LBB105_890:                            # %_ZN8pybind116objectD2Ev.exit811
	leaq	32(%rsp), %r13
	movq	(%rsp), %rbx                    # 8-byte Reload
	jmp	.LBB105_938
.LBB105_891:
.Ltmp2156:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_892:
.Ltmp1730:
	movq	%rdx, %r14
	movq	%rax, %r15
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB105_919
.LBB105_893:
.Ltmp1725:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_894:
.Ltmp1722:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_895:
.Ltmp1719:
	jmp	.LBB105_918
.LBB105_896:
.Ltmp1798:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_897:
.Ltmp1705:
	jmp	.LBB105_923
.LBB105_898:
.Ltmp1892:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_899:
.Ltmp1901:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_900:
.Ltmp1898:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_901:
.Ltmp1683:
.LBB105_902:                            # %.loopexit1171
	movq	%rdx, %r14
	movq	%rax, %r15
	jmp	.LBB105_925
.LBB105_903:
.Ltmp1741:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_904:
.Ltmp1735:
	jmp	.LBB105_918
.LBB105_905:                            # %.loopexit.split-lp1191
.Ltmp1713:
	jmp	.LBB105_918
.LBB105_906:                            # %.loopexit1173
.Ltmp1786:
.LBB105_907:                            # %.body472
	movq	%rdx, %r14
	movq	%rax, %r15
.LBB105_908:                            # %.body472
.Ltmp1793:
	leaq	232(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1794:
.LBB105_909:
.Ltmp1822:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1823:
	jmp	.LBB105_919
.LBB105_910:
.Ltmp1795:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_911:
.Ltmp1824:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_912:
.Ltmp1697:
	jmp	.LBB105_923
.LBB105_913:
.Ltmp1716:
	jmp	.LBB105_918
.LBB105_914:                            # %.loopexit1190
.Ltmp1710:
	jmp	.LBB105_918
.LBB105_915:                            # %.loopexit.split-lp1180
.Ltmp1886:
	jmp	.LBB105_918
.LBB105_916:                            # %.loopexit.split-lp1196
.Ltmp1895:
	jmp	.LBB105_923
.LBB105_917:                            # %.loopexit1179
.Ltmp1752:
.LBB105_918:
	movq	%rdx, %r14
	movq	%rax, %r15
.LBB105_919:
.Ltmp1887:
	leaq	320(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp1888:
	jmp	.LBB105_924
.LBB105_920:
.Ltmp1889:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_921:
.Ltmp2188:
	movq	%rax, %rdi
	callq	_Unwind_Resume@PLT
.LBB105_922:                            # %.loopexit1195
.Ltmp1702:
.LBB105_923:
	movq	%rdx, %r14
	movq	%rax, %r15
.LBB105_924:
	leaq	16(%rsp), %rdi
	callq	_ZN8pybind116detail13function_callD2Ev
.LBB105_925:                            # %.loopexit1171
	leaq	176(%rsp), %rdi
	callq	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev
	movq	%r15, %rdi
	cmpl	$3, %r14d
	jne	.LBB105_927
# %bb.926:
	callq	__cxa_begin_catch@PLT
	movq	8(%rax), %rdi
.Ltmp1925:
	callq	_ZN8pybind116detail25error_fetch_and_normalize7restoreEv
.Ltmp1926:
	jmp	.LBB105_929
.LBB105_927:
	callq	__cxa_begin_catch@PLT
	cmpl	$2, %r14d
	je	.LBB105_930
# %bb.928:
.Ltmp1915:
	callq	_ZN8pybind116detail24try_translate_exceptionsEv
.Ltmp1916:
.LBB105_929:                            # %_ZN8pybind1117error_already_set7restoreEv.exit
	callq	__cxa_end_catch@PLT
	jmp	.LBB105_677
.LBB105_930:
.Ltmp1920:
	callq	__cxa_rethrow@PLT
.Ltmp1921:
.LBB105_931:
.LBB105_932:
.Ltmp1922:
	movq	%rax, %rbx
.Ltmp1923:
	callq	__cxa_end_catch@PLT
.Ltmp1924:
	jmp	.LBB105_939
.LBB105_933:
.Ltmp1917:
	movq	%rax, %rbx
.Ltmp1918:
	callq	__cxa_end_catch@PLT
.Ltmp1919:
	jmp	.LBB105_939
.LBB105_934:
.Ltmp1927:
	movq	%rax, %rbx
.Ltmp1928:
	callq	__cxa_end_catch@PLT
.Ltmp1929:
	jmp	.LBB105_939
.LBB105_935:
.Ltmp2147:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB105_936:                            # %.loopexit.split-lp1156
.Ltmp2169:
.LBB105_937:
	movq	%rax, %rbx
.LBB105_938:
	movq	16(%rsp), %rdi
	cmpq	%r13, %rdi
	jne	.LBB105_839
.LBB105_939:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB105_839:                            # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i812
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end105:
	.size	_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_, .Lfunc_end105-_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_,"aG",@progbits,_ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_,comdat
	.p2align	2, 0x0
GCC_except_table105:
.Lexception54:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase39-.Lttbaseref39
.Lttbaseref39:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end54-.Lcst_begin54
.Lcst_begin54:
	.uleb128 .Lfunc_begin54-.Lfunc_begin54  # >> Call Site 1 <<
	.uleb128 .Ltmp1681-.Lfunc_begin54       #   Call between .Lfunc_begin54 and .Ltmp1681
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1681-.Lfunc_begin54       # >> Call Site 2 <<
	.uleb128 .Ltmp1682-.Ltmp1681            #   Call between .Ltmp1681 and .Ltmp1682
	.uleb128 .Ltmp1683-.Lfunc_begin54       #     jumps to .Ltmp1683
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1684-.Lfunc_begin54       # >> Call Site 3 <<
	.uleb128 .Ltmp1685-.Ltmp1684            #   Call between .Ltmp1684 and .Ltmp1685
	.uleb128 .Ltmp1691-.Lfunc_begin54       #     jumps to .Ltmp1691
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1686-.Lfunc_begin54       # >> Call Site 4 <<
	.uleb128 .Ltmp1687-.Ltmp1686            #   Call between .Ltmp1686 and .Ltmp1687
	.uleb128 .Ltmp1688-.Lfunc_begin54       #     jumps to .Ltmp1688
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1689-.Lfunc_begin54       # >> Call Site 5 <<
	.uleb128 .Ltmp1690-.Ltmp1689            #   Call between .Ltmp1689 and .Ltmp1690
	.uleb128 .Ltmp1691-.Lfunc_begin54       #     jumps to .Ltmp1691
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1700-.Lfunc_begin54       # >> Call Site 6 <<
	.uleb128 .Ltmp1701-.Ltmp1700            #   Call between .Ltmp1700 and .Ltmp1701
	.uleb128 .Ltmp1702-.Lfunc_begin54       #     jumps to .Ltmp1702
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1695-.Lfunc_begin54       # >> Call Site 7 <<
	.uleb128 .Ltmp1696-.Ltmp1695            #   Call between .Ltmp1695 and .Ltmp1696
	.uleb128 .Ltmp1697-.Lfunc_begin54       #     jumps to .Ltmp1697
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1698-.Lfunc_begin54       # >> Call Site 8 <<
	.uleb128 .Ltmp1699-.Ltmp1698            #   Call between .Ltmp1698 and .Ltmp1699
	.uleb128 .Ltmp1702-.Lfunc_begin54       #     jumps to .Ltmp1702
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1703-.Lfunc_begin54       # >> Call Site 9 <<
	.uleb128 .Ltmp1704-.Ltmp1703            #   Call between .Ltmp1703 and .Ltmp1704
	.uleb128 .Ltmp1705-.Lfunc_begin54       #     jumps to .Ltmp1705
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1706-.Lfunc_begin54       # >> Call Site 10 <<
	.uleb128 .Ltmp1709-.Ltmp1706            #   Call between .Ltmp1706 and .Ltmp1709
	.uleb128 .Ltmp1710-.Lfunc_begin54       #     jumps to .Ltmp1710
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1750-.Lfunc_begin54       # >> Call Site 11 <<
	.uleb128 .Ltmp1751-.Ltmp1750            #   Call between .Ltmp1750 and .Ltmp1751
	.uleb128 .Ltmp1752-.Lfunc_begin54       #     jumps to .Ltmp1752
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1714-.Lfunc_begin54       # >> Call Site 12 <<
	.uleb128 .Ltmp1715-.Ltmp1714            #   Call between .Ltmp1714 and .Ltmp1715
	.uleb128 .Ltmp1716-.Lfunc_begin54       #     jumps to .Ltmp1716
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1717-.Lfunc_begin54       # >> Call Site 13 <<
	.uleb128 .Ltmp1718-.Ltmp1717            #   Call between .Ltmp1717 and .Ltmp1718
	.uleb128 .Ltmp1719-.Lfunc_begin54       #     jumps to .Ltmp1719
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1720-.Lfunc_begin54       # >> Call Site 14 <<
	.uleb128 .Ltmp1721-.Ltmp1720            #   Call between .Ltmp1720 and .Ltmp1721
	.uleb128 .Ltmp1722-.Lfunc_begin54       #     jumps to .Ltmp1722
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1723-.Lfunc_begin54       # >> Call Site 15 <<
	.uleb128 .Ltmp1724-.Ltmp1723            #   Call between .Ltmp1723 and .Ltmp1724
	.uleb128 .Ltmp1725-.Lfunc_begin54       #     jumps to .Ltmp1725
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1726-.Lfunc_begin54       # >> Call Site 16 <<
	.uleb128 .Ltmp1727-.Ltmp1726            #   Call between .Ltmp1726 and .Ltmp1727
	.uleb128 .Ltmp1752-.Lfunc_begin54       #     jumps to .Ltmp1752
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1733-.Lfunc_begin54       # >> Call Site 17 <<
	.uleb128 .Ltmp1734-.Ltmp1733            #   Call between .Ltmp1733 and .Ltmp1734
	.uleb128 .Ltmp1735-.Lfunc_begin54       #     jumps to .Ltmp1735
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1736-.Lfunc_begin54       # >> Call Site 18 <<
	.uleb128 .Ltmp1737-.Ltmp1736            #   Call between .Ltmp1736 and .Ltmp1737
	.uleb128 .Ltmp1738-.Lfunc_begin54       #     jumps to .Ltmp1738
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1739-.Lfunc_begin54       # >> Call Site 19 <<
	.uleb128 .Ltmp1740-.Ltmp1739            #   Call between .Ltmp1739 and .Ltmp1740
	.uleb128 .Ltmp1741-.Lfunc_begin54       #     jumps to .Ltmp1741
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1748-.Lfunc_begin54       # >> Call Site 20 <<
	.uleb128 .Ltmp1749-.Ltmp1748            #   Call between .Ltmp1748 and .Ltmp1749
	.uleb128 .Ltmp1752-.Lfunc_begin54       #     jumps to .Ltmp1752
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1753-.Lfunc_begin54       # >> Call Site 21 <<
	.uleb128 .Ltmp1754-.Ltmp1753            #   Call between .Ltmp1753 and .Ltmp1754
	.uleb128 .Ltmp1850-.Lfunc_begin54       #     jumps to .Ltmp1850
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1755-.Lfunc_begin54       # >> Call Site 22 <<
	.uleb128 .Ltmp1756-.Ltmp1755            #   Call between .Ltmp1755 and .Ltmp1756
	.uleb128 .Ltmp1757-.Lfunc_begin54       #     jumps to .Ltmp1757
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1773-.Lfunc_begin54       # >> Call Site 23 <<
	.uleb128 .Ltmp1774-.Ltmp1773            #   Call between .Ltmp1773 and .Ltmp1774
	.uleb128 .Ltmp1775-.Lfunc_begin54       #     jumps to .Ltmp1775
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1776-.Lfunc_begin54       # >> Call Site 24 <<
	.uleb128 .Ltmp1777-.Ltmp1776            #   Call between .Ltmp1776 and .Ltmp1777
	.uleb128 .Ltmp1778-.Lfunc_begin54       #     jumps to .Ltmp1778
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1779-.Lfunc_begin54       # >> Call Site 25 <<
	.uleb128 .Ltmp1780-.Ltmp1779            #   Call between .Ltmp1779 and .Ltmp1780
	.uleb128 .Ltmp1781-.Lfunc_begin54       #     jumps to .Ltmp1781
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1782-.Lfunc_begin54       # >> Call Site 26 <<
	.uleb128 .Ltmp1785-.Ltmp1782            #   Call between .Ltmp1782 and .Ltmp1785
	.uleb128 .Ltmp1786-.Lfunc_begin54       #     jumps to .Ltmp1786
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1796-.Lfunc_begin54       # >> Call Site 27 <<
	.uleb128 .Ltmp1797-.Ltmp1796            #   Call between .Ltmp1796 and .Ltmp1797
	.uleb128 .Ltmp1798-.Lfunc_begin54       #     jumps to .Ltmp1798
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1805-.Lfunc_begin54       # >> Call Site 28 <<
	.uleb128 .Ltmp1806-.Ltmp1805            #   Call between .Ltmp1805 and .Ltmp1806
	.uleb128 .Ltmp1807-.Lfunc_begin54       #     jumps to .Ltmp1807
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1808-.Lfunc_begin54       # >> Call Site 29 <<
	.uleb128 .Ltmp1809-.Ltmp1808            #   Call between .Ltmp1808 and .Ltmp1809
	.uleb128 .Ltmp1810-.Lfunc_begin54       #     jumps to .Ltmp1810
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1811-.Lfunc_begin54       # >> Call Site 30 <<
	.uleb128 .Ltmp1812-.Ltmp1811            #   Call between .Ltmp1811 and .Ltmp1812
	.uleb128 .Ltmp1813-.Lfunc_begin54       #     jumps to .Ltmp1813
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1758-.Lfunc_begin54       # >> Call Site 31 <<
	.uleb128 .Ltmp1759-.Ltmp1758            #   Call between .Ltmp1758 and .Ltmp1759
	.uleb128 .Ltmp1760-.Lfunc_begin54       #     jumps to .Ltmp1760
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1761-.Lfunc_begin54       # >> Call Site 32 <<
	.uleb128 .Ltmp1762-.Ltmp1761            #   Call between .Ltmp1761 and .Ltmp1762
	.uleb128 .Ltmp1763-.Lfunc_begin54       #     jumps to .Ltmp1763
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1764-.Lfunc_begin54       # >> Call Site 33 <<
	.uleb128 .Ltmp1765-.Ltmp1764            #   Call between .Ltmp1764 and .Ltmp1765
	.uleb128 .Ltmp1766-.Lfunc_begin54       #     jumps to .Ltmp1766
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1819-.Lfunc_begin54       # >> Call Site 34 <<
	.uleb128 .Ltmp1815-.Ltmp1819            #   Call between .Ltmp1819 and .Ltmp1815
	.uleb128 .Ltmp1821-.Lfunc_begin54       #     jumps to .Ltmp1821
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1825-.Lfunc_begin54       # >> Call Site 35 <<
	.uleb128 .Ltmp1826-.Ltmp1825            #   Call between .Ltmp1825 and .Ltmp1826
	.uleb128 .Ltmp1827-.Lfunc_begin54       #     jumps to .Ltmp1827
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1828-.Lfunc_begin54       # >> Call Site 36 <<
	.uleb128 .Ltmp1829-.Ltmp1828            #   Call between .Ltmp1828 and .Ltmp1829
	.uleb128 .Ltmp1830-.Lfunc_begin54       #     jumps to .Ltmp1830
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1837-.Lfunc_begin54       # >> Call Site 37 <<
	.uleb128 .Ltmp1838-.Ltmp1837            #   Call between .Ltmp1837 and .Ltmp1838
	.uleb128 .Ltmp1839-.Lfunc_begin54       #     jumps to .Ltmp1839
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1840-.Lfunc_begin54       # >> Call Site 38 <<
	.uleb128 .Ltmp1841-.Ltmp1840            #   Call between .Ltmp1840 and .Ltmp1841
	.uleb128 .Ltmp1842-.Lfunc_begin54       #     jumps to .Ltmp1842
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1843-.Lfunc_begin54       # >> Call Site 39 <<
	.uleb128 .Ltmp1844-.Ltmp1843            #   Call between .Ltmp1843 and .Ltmp1844
	.uleb128 .Ltmp1845-.Lfunc_begin54       #     jumps to .Ltmp1845
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1846-.Lfunc_begin54       # >> Call Site 40 <<
	.uleb128 .Ltmp1849-.Ltmp1846            #   Call between .Ltmp1846 and .Ltmp1849
	.uleb128 .Ltmp1850-.Lfunc_begin54       #     jumps to .Ltmp1850
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1851-.Lfunc_begin54       # >> Call Site 41 <<
	.uleb128 .Ltmp1852-.Ltmp1851            #   Call between .Ltmp1851 and .Ltmp1852
	.uleb128 .Ltmp1853-.Lfunc_begin54       #     jumps to .Ltmp1853
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1865-.Lfunc_begin54       # >> Call Site 42 <<
	.uleb128 .Ltmp1866-.Ltmp1865            #   Call between .Ltmp1865 and .Ltmp1866
	.uleb128 .Ltmp1867-.Lfunc_begin54       #     jumps to .Ltmp1867
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1868-.Lfunc_begin54       # >> Call Site 43 <<
	.uleb128 .Ltmp1873-.Ltmp1868            #   Call between .Ltmp1868 and .Ltmp1873
	.uleb128 .Ltmp1874-.Lfunc_begin54       #     jumps to .Ltmp1874
	.byte	11                              #   On action: 6
	.uleb128 .Ltmp1875-.Lfunc_begin54       # >> Call Site 44 <<
	.uleb128 .Ltmp1876-.Ltmp1875            #   Call between .Ltmp1875 and .Ltmp1876
	.uleb128 .Ltmp1877-.Lfunc_begin54       #     jumps to .Ltmp1877
	.byte	11                              #   On action: 6
	.uleb128 .Ltmp1881-.Lfunc_begin54       # >> Call Site 45 <<
	.uleb128 .Ltmp1882-.Ltmp1881            #   Call between .Ltmp1881 and .Ltmp1882
	.uleb128 .Ltmp1883-.Lfunc_begin54       #     jumps to .Ltmp1883
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1890-.Lfunc_begin54       # >> Call Site 46 <<
	.uleb128 .Ltmp1891-.Ltmp1890            #   Call between .Ltmp1890 and .Ltmp1891
	.uleb128 .Ltmp1892-.Lfunc_begin54       #     jumps to .Ltmp1892
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1896-.Lfunc_begin54       # >> Call Site 47 <<
	.uleb128 .Ltmp1897-.Ltmp1896            #   Call between .Ltmp1896 and .Ltmp1897
	.uleb128 .Ltmp1898-.Lfunc_begin54       #     jumps to .Ltmp1898
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1899-.Lfunc_begin54       # >> Call Site 48 <<
	.uleb128 .Ltmp1900-.Ltmp1899            #   Call between .Ltmp1899 and .Ltmp1900
	.uleb128 .Ltmp1901-.Lfunc_begin54       #     jumps to .Ltmp1901
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1900-.Lfunc_begin54       # >> Call Site 49 <<
	.uleb128 .Ltmp1878-.Ltmp1900            #   Call between .Ltmp1900 and .Ltmp1878
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1878-.Lfunc_begin54       # >> Call Site 50 <<
	.uleb128 .Ltmp1879-.Ltmp1878            #   Call between .Ltmp1878 and .Ltmp1879
	.uleb128 .Ltmp1880-.Lfunc_begin54       #     jumps to .Ltmp1880
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1902-.Lfunc_begin54       # >> Call Site 51 <<
	.uleb128 .Ltmp1907-.Ltmp1902            #   Call between .Ltmp1902 and .Ltmp1907
	.uleb128 .Ltmp1908-.Lfunc_begin54       #     jumps to .Ltmp1908
	.byte	11                              #   On action: 6
	.uleb128 .Ltmp1909-.Lfunc_begin54       # >> Call Site 52 <<
	.uleb128 .Ltmp1910-.Ltmp1909            #   Call between .Ltmp1909 and .Ltmp1910
	.uleb128 .Ltmp1911-.Lfunc_begin54       #     jumps to .Ltmp1911
	.byte	11                              #   On action: 6
	.uleb128 .Ltmp1910-.Lfunc_begin54       # >> Call Site 53 <<
	.uleb128 .Ltmp1912-.Ltmp1910            #   Call between .Ltmp1910 and .Ltmp1912
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1912-.Lfunc_begin54       # >> Call Site 54 <<
	.uleb128 .Ltmp1913-.Ltmp1912            #   Call between .Ltmp1912 and .Ltmp1913
	.uleb128 .Ltmp1914-.Lfunc_begin54       #     jumps to .Ltmp1914
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1930-.Lfunc_begin54       # >> Call Site 55 <<
	.uleb128 .Ltmp1931-.Ltmp1930            #   Call between .Ltmp1930 and .Ltmp1931
	.uleb128 .Ltmp1932-.Lfunc_begin54       #     jumps to .Ltmp1932
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1950-.Lfunc_begin54       # >> Call Site 56 <<
	.uleb128 .Ltmp1951-.Ltmp1950            #   Call between .Ltmp1950 and .Ltmp1951
	.uleb128 .Ltmp2188-.Lfunc_begin54       #     jumps to .Ltmp2188
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1933-.Lfunc_begin54       # >> Call Site 57 <<
	.uleb128 .Ltmp1934-.Ltmp1933            #   Call between .Ltmp1933 and .Ltmp1934
	.uleb128 .Ltmp1935-.Lfunc_begin54       #     jumps to .Ltmp1935
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1936-.Lfunc_begin54       # >> Call Site 58 <<
	.uleb128 .Ltmp1937-.Ltmp1936            #   Call between .Ltmp1936 and .Ltmp1937
	.uleb128 .Ltmp1949-.Lfunc_begin54       #     jumps to .Ltmp1949
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1937-.Lfunc_begin54       # >> Call Site 59 <<
	.uleb128 .Ltmp1678-.Ltmp1937            #   Call between .Ltmp1937 and .Ltmp1678
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1678-.Lfunc_begin54       # >> Call Site 60 <<
	.uleb128 .Ltmp1679-.Ltmp1678            #   Call between .Ltmp1678 and .Ltmp1679
	.uleb128 .Ltmp1680-.Lfunc_begin54       #     jumps to .Ltmp1680
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1679-.Lfunc_begin54       # >> Call Site 61 <<
	.uleb128 .Ltmp1952-.Ltmp1679            #   Call between .Ltmp1679 and .Ltmp1952
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1952-.Lfunc_begin54       # >> Call Site 62 <<
	.uleb128 .Ltmp1953-.Ltmp1952            #   Call between .Ltmp1952 and .Ltmp1953
	.uleb128 .Ltmp2181-.Lfunc_begin54       #     jumps to .Ltmp2181
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1953-.Lfunc_begin54       # >> Call Site 63 <<
	.uleb128 .Ltmp1954-.Ltmp1953            #   Call between .Ltmp1953 and .Ltmp1954
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1954-.Lfunc_begin54       # >> Call Site 64 <<
	.uleb128 .Ltmp1955-.Ltmp1954            #   Call between .Ltmp1954 and .Ltmp1955
	.uleb128 .Ltmp1956-.Lfunc_begin54       #     jumps to .Ltmp1956
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1957-.Lfunc_begin54       # >> Call Site 65 <<
	.uleb128 .Ltmp1958-.Ltmp1957            #   Call between .Ltmp1957 and .Ltmp1958
	.uleb128 .Ltmp2178-.Lfunc_begin54       #     jumps to .Ltmp2178
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1958-.Lfunc_begin54       # >> Call Site 66 <<
	.uleb128 .Ltmp1959-.Ltmp1958            #   Call between .Ltmp1958 and .Ltmp1959
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1959-.Lfunc_begin54       # >> Call Site 67 <<
	.uleb128 .Ltmp1960-.Ltmp1959            #   Call between .Ltmp1959 and .Ltmp1960
	.uleb128 .Ltmp1961-.Lfunc_begin54       #     jumps to .Ltmp1961
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1960-.Lfunc_begin54       # >> Call Site 68 <<
	.uleb128 .Ltmp1962-.Ltmp1960            #   Call between .Ltmp1960 and .Ltmp1962
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1962-.Lfunc_begin54       # >> Call Site 69 <<
	.uleb128 .Ltmp1963-.Ltmp1962            #   Call between .Ltmp1962 and .Ltmp1963
	.uleb128 .Ltmp1964-.Lfunc_begin54       #     jumps to .Ltmp1964
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1963-.Lfunc_begin54       # >> Call Site 70 <<
	.uleb128 .Ltmp1965-.Ltmp1963            #   Call between .Ltmp1963 and .Ltmp1965
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1965-.Lfunc_begin54       # >> Call Site 71 <<
	.uleb128 .Ltmp1966-.Ltmp1965            #   Call between .Ltmp1965 and .Ltmp1966
	.uleb128 .Ltmp1967-.Lfunc_begin54       #     jumps to .Ltmp1967
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1966-.Lfunc_begin54       # >> Call Site 72 <<
	.uleb128 .Ltmp1968-.Ltmp1966            #   Call between .Ltmp1966 and .Ltmp1968
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1968-.Lfunc_begin54       # >> Call Site 73 <<
	.uleb128 .Ltmp1969-.Ltmp1968            #   Call between .Ltmp1968 and .Ltmp1969
	.uleb128 .Ltmp1970-.Lfunc_begin54       #     jumps to .Ltmp1970
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1969-.Lfunc_begin54       # >> Call Site 74 <<
	.uleb128 .Ltmp1971-.Ltmp1969            #   Call between .Ltmp1969 and .Ltmp1971
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1971-.Lfunc_begin54       # >> Call Site 75 <<
	.uleb128 .Ltmp1972-.Ltmp1971            #   Call between .Ltmp1971 and .Ltmp1972
	.uleb128 .Ltmp1973-.Lfunc_begin54       #     jumps to .Ltmp1973
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1972-.Lfunc_begin54       # >> Call Site 76 <<
	.uleb128 .Ltmp1974-.Ltmp1972            #   Call between .Ltmp1972 and .Ltmp1974
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1974-.Lfunc_begin54       # >> Call Site 77 <<
	.uleb128 .Ltmp1975-.Ltmp1974            #   Call between .Ltmp1974 and .Ltmp1975
	.uleb128 .Ltmp1980-.Lfunc_begin54       #     jumps to .Ltmp1980
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1986-.Lfunc_begin54       # >> Call Site 78 <<
	.uleb128 .Ltmp1987-.Ltmp1986            #   Call between .Ltmp1986 and .Ltmp1987
	.uleb128 .Ltmp1990-.Lfunc_begin54       #     jumps to .Ltmp1990
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1987-.Lfunc_begin54       # >> Call Site 79 <<
	.uleb128 .Ltmp1988-.Ltmp1987            #   Call between .Ltmp1987 and .Ltmp1988
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1988-.Lfunc_begin54       # >> Call Site 80 <<
	.uleb128 .Ltmp1989-.Ltmp1988            #   Call between .Ltmp1988 and .Ltmp1989
	.uleb128 .Ltmp1990-.Lfunc_begin54       #     jumps to .Ltmp1990
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1989-.Lfunc_begin54       # >> Call Site 81 <<
	.uleb128 .Ltmp1976-.Ltmp1989            #   Call between .Ltmp1989 and .Ltmp1976
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1976-.Lfunc_begin54       # >> Call Site 82 <<
	.uleb128 .Ltmp1979-.Ltmp1976            #   Call between .Ltmp1976 and .Ltmp1979
	.uleb128 .Ltmp1980-.Lfunc_begin54       #     jumps to .Ltmp1980
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1979-.Lfunc_begin54       # >> Call Site 83 <<
	.uleb128 .Ltmp1991-.Ltmp1979            #   Call between .Ltmp1979 and .Ltmp1991
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1991-.Lfunc_begin54       # >> Call Site 84 <<
	.uleb128 .Ltmp1992-.Ltmp1991            #   Call between .Ltmp1991 and .Ltmp1992
	.uleb128 .Ltmp2159-.Lfunc_begin54       #     jumps to .Ltmp2159
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1993-.Lfunc_begin54       # >> Call Site 85 <<
	.uleb128 .Ltmp1994-.Ltmp1993            #   Call between .Ltmp1993 and .Ltmp1994
	.uleb128 .Ltmp1995-.Lfunc_begin54       #     jumps to .Ltmp1995
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1996-.Lfunc_begin54       # >> Call Site 86 <<
	.uleb128 .Ltmp2101-.Ltmp1996            #   Call between .Ltmp1996 and .Ltmp2101
	.uleb128 .Ltmp2102-.Lfunc_begin54       #     jumps to .Ltmp2102
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2103-.Lfunc_begin54       # >> Call Site 87 <<
	.uleb128 .Ltmp2106-.Ltmp2103            #   Call between .Ltmp2103 and .Ltmp2106
	.uleb128 .Ltmp2107-.Lfunc_begin54       #     jumps to .Ltmp2107
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2108-.Lfunc_begin54       # >> Call Site 88 <<
	.uleb128 .Ltmp2109-.Ltmp2108            #   Call between .Ltmp2108 and .Ltmp2109
	.uleb128 .Ltmp2135-.Lfunc_begin54       #     jumps to .Ltmp2135
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2110-.Lfunc_begin54       # >> Call Site 89 <<
	.uleb128 .Ltmp2111-.Ltmp2110            #   Call between .Ltmp2110 and .Ltmp2111
	.uleb128 .Ltmp2112-.Lfunc_begin54       #     jumps to .Ltmp2112
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2113-.Lfunc_begin54       # >> Call Site 90 <<
	.uleb128 .Ltmp2114-.Ltmp2113            #   Call between .Ltmp2113 and .Ltmp2114
	.uleb128 .Ltmp2126-.Lfunc_begin54       #     jumps to .Ltmp2126
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2114-.Lfunc_begin54       # >> Call Site 91 <<
	.uleb128 .Ltmp2115-.Ltmp2114            #   Call between .Ltmp2114 and .Ltmp2115
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2115-.Lfunc_begin54       # >> Call Site 92 <<
	.uleb128 .Ltmp2116-.Ltmp2115            #   Call between .Ltmp2115 and .Ltmp2116
	.uleb128 .Ltmp2117-.Lfunc_begin54       #     jumps to .Ltmp2117
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2118-.Lfunc_begin54       # >> Call Site 93 <<
	.uleb128 .Ltmp2119-.Ltmp2118            #   Call between .Ltmp2118 and .Ltmp2119
	.uleb128 .Ltmp2120-.Lfunc_begin54       #     jumps to .Ltmp2120
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2121-.Lfunc_begin54       # >> Call Site 94 <<
	.uleb128 .Ltmp2122-.Ltmp2121            #   Call between .Ltmp2121 and .Ltmp2122
	.uleb128 .Ltmp2123-.Lfunc_begin54       #     jumps to .Ltmp2123
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2122-.Lfunc_begin54       # >> Call Site 95 <<
	.uleb128 .Ltmp2130-.Ltmp2122            #   Call between .Ltmp2122 and .Ltmp2130
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2130-.Lfunc_begin54       # >> Call Site 96 <<
	.uleb128 .Ltmp2131-.Ltmp2130            #   Call between .Ltmp2130 and .Ltmp2131
	.uleb128 .Ltmp2132-.Lfunc_begin54       #     jumps to .Ltmp2132
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2133-.Lfunc_begin54       # >> Call Site 97 <<
	.uleb128 .Ltmp2134-.Ltmp2133            #   Call between .Ltmp2133 and .Ltmp2134
	.uleb128 .Ltmp2135-.Lfunc_begin54       #     jumps to .Ltmp2135
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2124-.Lfunc_begin54       # >> Call Site 98 <<
	.uleb128 .Ltmp2125-.Ltmp2124            #   Call between .Ltmp2124 and .Ltmp2125
	.uleb128 .Ltmp2126-.Lfunc_begin54       #     jumps to .Ltmp2126
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2125-.Lfunc_begin54       # >> Call Site 99 <<
	.uleb128 .Ltmp2127-.Ltmp2125            #   Call between .Ltmp2125 and .Ltmp2127
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2127-.Lfunc_begin54       # >> Call Site 100 <<
	.uleb128 .Ltmp2128-.Ltmp2127            #   Call between .Ltmp2127 and .Ltmp2128
	.uleb128 .Ltmp2129-.Lfunc_begin54       #     jumps to .Ltmp2129
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2136-.Lfunc_begin54       # >> Call Site 101 <<
	.uleb128 .Ltmp2137-.Ltmp2136            #   Call between .Ltmp2136 and .Ltmp2137
	.uleb128 .Ltmp2138-.Lfunc_begin54       #     jumps to .Ltmp2138
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2139-.Lfunc_begin54       # >> Call Site 102 <<
	.uleb128 .Ltmp2140-.Ltmp2139            #   Call between .Ltmp2139 and .Ltmp2140
	.uleb128 .Ltmp2141-.Lfunc_begin54       #     jumps to .Ltmp2141
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2140-.Lfunc_begin54       # >> Call Site 103 <<
	.uleb128 .Ltmp2142-.Ltmp2140            #   Call between .Ltmp2140 and .Ltmp2142
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2142-.Lfunc_begin54       # >> Call Site 104 <<
	.uleb128 .Ltmp2143-.Ltmp2142            #   Call between .Ltmp2142 and .Ltmp2143
	.uleb128 .Ltmp2144-.Lfunc_begin54       #     jumps to .Ltmp2144
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2148-.Lfunc_begin54       # >> Call Site 105 <<
	.uleb128 .Ltmp2149-.Ltmp2148            #   Call between .Ltmp2148 and .Ltmp2149
	.uleb128 .Ltmp2150-.Lfunc_begin54       #     jumps to .Ltmp2150
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1998-.Lfunc_begin54       # >> Call Site 106 <<
	.uleb128 .Ltmp1999-.Ltmp1998            #   Call between .Ltmp1998 and .Ltmp1999
	.uleb128 .Ltmp2000-.Lfunc_begin54       #     jumps to .Ltmp2000
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2001-.Lfunc_begin54       # >> Call Site 107 <<
	.uleb128 .Ltmp2006-.Ltmp2001            #   Call between .Ltmp2001 and .Ltmp2006
	.uleb128 .Ltmp2078-.Lfunc_begin54       #     jumps to .Ltmp2078
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1938-.Lfunc_begin54       # >> Call Site 108 <<
	.uleb128 .Ltmp1939-.Ltmp1938            #   Call between .Ltmp1938 and .Ltmp1939
	.uleb128 .Ltmp1949-.Lfunc_begin54       #     jumps to .Ltmp1949
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2007-.Lfunc_begin54       # >> Call Site 109 <<
	.uleb128 .Ltmp2008-.Ltmp2007            #   Call between .Ltmp2007 and .Ltmp2008
	.uleb128 .Ltmp2009-.Lfunc_begin54       #     jumps to .Ltmp2009
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2010-.Lfunc_begin54       # >> Call Site 110 <<
	.uleb128 .Ltmp2011-.Ltmp2010            #   Call between .Ltmp2010 and .Ltmp2011
	.uleb128 .Ltmp2012-.Lfunc_begin54       #     jumps to .Ltmp2012
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2013-.Lfunc_begin54       # >> Call Site 111 <<
	.uleb128 .Ltmp2014-.Ltmp2013            #   Call between .Ltmp2013 and .Ltmp2014
	.uleb128 .Ltmp2015-.Lfunc_begin54       #     jumps to .Ltmp2015
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2016-.Lfunc_begin54       # >> Call Site 112 <<
	.uleb128 .Ltmp2017-.Ltmp2016            #   Call between .Ltmp2016 and .Ltmp2017
	.uleb128 .Ltmp2018-.Lfunc_begin54       #     jumps to .Ltmp2018
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2019-.Lfunc_begin54       # >> Call Site 113 <<
	.uleb128 .Ltmp2020-.Ltmp2019            #   Call between .Ltmp2019 and .Ltmp2020
	.uleb128 .Ltmp2021-.Lfunc_begin54       #     jumps to .Ltmp2021
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2020-.Lfunc_begin54       # >> Call Site 114 <<
	.uleb128 .Ltmp2022-.Ltmp2020            #   Call between .Ltmp2020 and .Ltmp2022
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2022-.Lfunc_begin54       # >> Call Site 115 <<
	.uleb128 .Ltmp2023-.Ltmp2022            #   Call between .Ltmp2022 and .Ltmp2023
	.uleb128 .Ltmp2024-.Lfunc_begin54       #     jumps to .Ltmp2024
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2025-.Lfunc_begin54       # >> Call Site 116 <<
	.uleb128 .Ltmp2026-.Ltmp2025            #   Call between .Ltmp2025 and .Ltmp2026
	.uleb128 .Ltmp2027-.Lfunc_begin54       #     jumps to .Ltmp2027
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2028-.Lfunc_begin54       # >> Call Site 117 <<
	.uleb128 .Ltmp2029-.Ltmp2028            #   Call between .Ltmp2028 and .Ltmp2029
	.uleb128 .Ltmp2049-.Lfunc_begin54       #     jumps to .Ltmp2049
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2030-.Lfunc_begin54       # >> Call Site 118 <<
	.uleb128 .Ltmp2031-.Ltmp2030            #   Call between .Ltmp2030 and .Ltmp2031
	.uleb128 .Ltmp2032-.Lfunc_begin54       #     jumps to .Ltmp2032
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2033-.Lfunc_begin54       # >> Call Site 119 <<
	.uleb128 .Ltmp2034-.Ltmp2033            #   Call between .Ltmp2033 and .Ltmp2034
	.uleb128 .Ltmp2040-.Lfunc_begin54       #     jumps to .Ltmp2040
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2034-.Lfunc_begin54       # >> Call Site 120 <<
	.uleb128 .Ltmp2035-.Ltmp2034            #   Call between .Ltmp2034 and .Ltmp2035
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2035-.Lfunc_begin54       # >> Call Site 121 <<
	.uleb128 .Ltmp2036-.Ltmp2035            #   Call between .Ltmp2035 and .Ltmp2036
	.uleb128 .Ltmp2037-.Lfunc_begin54       #     jumps to .Ltmp2037
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2058-.Lfunc_begin54       # >> Call Site 122 <<
	.uleb128 .Ltmp2059-.Ltmp2058            #   Call between .Ltmp2058 and .Ltmp2059
	.uleb128 .Ltmp2060-.Lfunc_begin54       #     jumps to .Ltmp2060
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2061-.Lfunc_begin54       # >> Call Site 123 <<
	.uleb128 .Ltmp2062-.Ltmp2061            #   Call between .Ltmp2061 and .Ltmp2062
	.uleb128 .Ltmp2063-.Lfunc_begin54       #     jumps to .Ltmp2063
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2062-.Lfunc_begin54       # >> Call Site 124 <<
	.uleb128 .Ltmp2044-.Ltmp2062            #   Call between .Ltmp2062 and .Ltmp2044
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2044-.Lfunc_begin54       # >> Call Site 125 <<
	.uleb128 .Ltmp2045-.Ltmp2044            #   Call between .Ltmp2044 and .Ltmp2045
	.uleb128 .Ltmp2046-.Lfunc_begin54       #     jumps to .Ltmp2046
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2047-.Lfunc_begin54       # >> Call Site 126 <<
	.uleb128 .Ltmp2048-.Ltmp2047            #   Call between .Ltmp2047 and .Ltmp2048
	.uleb128 .Ltmp2049-.Lfunc_begin54       #     jumps to .Ltmp2049
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2038-.Lfunc_begin54       # >> Call Site 127 <<
	.uleb128 .Ltmp2039-.Ltmp2038            #   Call between .Ltmp2038 and .Ltmp2039
	.uleb128 .Ltmp2040-.Lfunc_begin54       #     jumps to .Ltmp2040
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp2039-.Lfunc_begin54       # >> Call Site 128 <<
	.uleb128 .Ltmp2041-.Ltmp2039            #   Call between .Ltmp2039 and .Ltmp2041
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2041-.Lfunc_begin54       # >> Call Site 129 <<
	.uleb128 .Ltmp2042-.Ltmp2041            #   Call between .Ltmp2041 and .Ltmp2042
	.uleb128 .Ltmp2043-.Lfunc_begin54       #     jumps to .Ltmp2043
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2042-.Lfunc_begin54       # >> Call Site 130 <<
	.uleb128 .Ltmp2050-.Ltmp2042            #   Call between .Ltmp2042 and .Ltmp2050
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2050-.Lfunc_begin54       # >> Call Site 131 <<
	.uleb128 .Ltmp2051-.Ltmp2050            #   Call between .Ltmp2050 and .Ltmp2051
	.uleb128 .Ltmp2052-.Lfunc_begin54       #     jumps to .Ltmp2052
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2055-.Lfunc_begin54       # >> Call Site 132 <<
	.uleb128 .Ltmp2056-.Ltmp2055            #   Call between .Ltmp2055 and .Ltmp2056
	.uleb128 .Ltmp2057-.Lfunc_begin54       #     jumps to .Ltmp2057
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2082-.Lfunc_begin54       # >> Call Site 133 <<
	.uleb128 .Ltmp2083-.Ltmp2082            #   Call between .Ltmp2082 and .Ltmp2083
	.uleb128 .Ltmp2084-.Lfunc_begin54       #     jumps to .Ltmp2084
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2085-.Lfunc_begin54       # >> Call Site 134 <<
	.uleb128 .Ltmp2086-.Ltmp2085            #   Call between .Ltmp2085 and .Ltmp2086
	.uleb128 .Ltmp2093-.Lfunc_begin54       #     jumps to .Ltmp2093
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2086-.Lfunc_begin54       # >> Call Site 135 <<
	.uleb128 .Ltmp1940-.Ltmp2086            #   Call between .Ltmp2086 and .Ltmp1940
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1940-.Lfunc_begin54       # >> Call Site 136 <<
	.uleb128 .Ltmp1943-.Ltmp1940            #   Call between .Ltmp1940 and .Ltmp1943
	.uleb128 .Ltmp1949-.Lfunc_begin54       #     jumps to .Ltmp1949
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1944-.Lfunc_begin54       # >> Call Site 137 <<
	.uleb128 .Ltmp1945-.Ltmp1944            #   Call between .Ltmp1944 and .Ltmp1945
	.uleb128 .Ltmp1946-.Lfunc_begin54       #     jumps to .Ltmp1946
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1945-.Lfunc_begin54       # >> Call Site 138 <<
	.uleb128 .Ltmp2089-.Ltmp1945            #   Call between .Ltmp1945 and .Ltmp2089
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2089-.Lfunc_begin54       # >> Call Site 139 <<
	.uleb128 .Ltmp2092-.Ltmp2089            #   Call between .Ltmp2089 and .Ltmp2092
	.uleb128 .Ltmp2093-.Lfunc_begin54       #     jumps to .Ltmp2093
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2094-.Lfunc_begin54       # >> Call Site 140 <<
	.uleb128 .Ltmp2095-.Ltmp2094            #   Call between .Ltmp2094 and .Ltmp2095
	.uleb128 .Ltmp2096-.Lfunc_begin54       #     jumps to .Ltmp2096
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2097-.Lfunc_begin54       # >> Call Site 141 <<
	.uleb128 .Ltmp2098-.Ltmp2097            #   Call between .Ltmp2097 and .Ltmp2098
	.uleb128 .Ltmp2099-.Lfunc_begin54       #     jumps to .Ltmp2099
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2163-.Lfunc_begin54       # >> Call Site 142 <<
	.uleb128 .Ltmp2164-.Ltmp2163            #   Call between .Ltmp2163 and .Ltmp2164
	.uleb128 .Ltmp2169-.Lfunc_begin54       #     jumps to .Ltmp2169
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2182-.Lfunc_begin54       # >> Call Site 143 <<
	.uleb128 .Ltmp2183-.Ltmp2182            #   Call between .Ltmp2182 and .Ltmp2183
	.uleb128 .Ltmp2188-.Lfunc_begin54       #     jumps to .Ltmp2188
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1893-.Lfunc_begin54       # >> Call Site 144 <<
	.uleb128 .Ltmp1894-.Ltmp1893            #   Call between .Ltmp1893 and .Ltmp1894
	.uleb128 .Ltmp1895-.Lfunc_begin54       #     jumps to .Ltmp1895
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1884-.Lfunc_begin54       # >> Call Site 145 <<
	.uleb128 .Ltmp1885-.Ltmp1884            #   Call between .Ltmp1884 and .Ltmp1885
	.uleb128 .Ltmp1886-.Lfunc_begin54       #     jumps to .Ltmp1886
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1711-.Lfunc_begin54       # >> Call Site 146 <<
	.uleb128 .Ltmp1712-.Ltmp1711            #   Call between .Ltmp1711 and .Ltmp1712
	.uleb128 .Ltmp1713-.Lfunc_begin54       #     jumps to .Ltmp1713
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1712-.Lfunc_begin54       # >> Call Site 147 <<
	.uleb128 .Ltmp1728-.Ltmp1712            #   Call between .Ltmp1712 and .Ltmp1728
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1728-.Lfunc_begin54       # >> Call Site 148 <<
	.uleb128 .Ltmp1729-.Ltmp1728            #   Call between .Ltmp1728 and .Ltmp1729
	.uleb128 .Ltmp1730-.Lfunc_begin54       #     jumps to .Ltmp1730
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1731-.Lfunc_begin54       # >> Call Site 149 <<
	.uleb128 .Ltmp1732-.Ltmp1731            #   Call between .Ltmp1731 and .Ltmp1732
	.uleb128 .Ltmp1886-.Lfunc_begin54       #     jumps to .Ltmp1886
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1732-.Lfunc_begin54       # >> Call Site 150 <<
	.uleb128 .Ltmp1787-.Ltmp1732            #   Call between .Ltmp1732 and .Ltmp1787
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1787-.Lfunc_begin54       # >> Call Site 151 <<
	.uleb128 .Ltmp1788-.Ltmp1787            #   Call between .Ltmp1787 and .Ltmp1788
	.uleb128 .Ltmp1789-.Lfunc_begin54       #     jumps to .Ltmp1789
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1790-.Lfunc_begin54       # >> Call Site 152 <<
	.uleb128 .Ltmp1791-.Ltmp1790            #   Call between .Ltmp1790 and .Ltmp1791
	.uleb128 .Ltmp1792-.Lfunc_begin54       #     jumps to .Ltmp1792
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1862-.Lfunc_begin54       # >> Call Site 153 <<
	.uleb128 .Ltmp1863-.Ltmp1862            #   Call between .Ltmp1862 and .Ltmp1863
	.uleb128 .Ltmp1864-.Lfunc_begin54       #     jumps to .Ltmp1864
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp2173-.Lfunc_begin54       # >> Call Site 154 <<
	.uleb128 .Ltmp2174-.Ltmp2173            #   Call between .Ltmp2173 and .Ltmp2174
	.uleb128 .Ltmp2175-.Lfunc_begin54       #     jumps to .Ltmp2175
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2170-.Lfunc_begin54       # >> Call Site 155 <<
	.uleb128 .Ltmp2171-.Ltmp2170            #   Call between .Ltmp2170 and .Ltmp2171
	.uleb128 .Ltmp2172-.Lfunc_begin54       #     jumps to .Ltmp2172
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2160-.Lfunc_begin54       # >> Call Site 156 <<
	.uleb128 .Ltmp2161-.Ltmp2160            #   Call between .Ltmp2160 and .Ltmp2161
	.uleb128 .Ltmp2162-.Lfunc_begin54       #     jumps to .Ltmp2162
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1742-.Lfunc_begin54       # >> Call Site 157 <<
	.uleb128 .Ltmp1743-.Ltmp1742            #   Call between .Ltmp1742 and .Ltmp1743
	.uleb128 .Ltmp1744-.Lfunc_begin54       #     jumps to .Ltmp1744
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp2167-.Lfunc_begin54       # >> Call Site 158 <<
	.uleb128 .Ltmp2168-.Ltmp2167            #   Call between .Ltmp2167 and .Ltmp2168
	.uleb128 .Ltmp2169-.Lfunc_begin54       #     jumps to .Ltmp2169
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2151-.Lfunc_begin54       # >> Call Site 159 <<
	.uleb128 .Ltmp2152-.Ltmp2151            #   Call between .Ltmp2151 and .Ltmp2152
	.uleb128 .Ltmp2153-.Lfunc_begin54       #     jumps to .Ltmp2153
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1692-.Lfunc_begin54       # >> Call Site 160 <<
	.uleb128 .Ltmp1693-.Ltmp1692            #   Call between .Ltmp1692 and .Ltmp1693
	.uleb128 .Ltmp1694-.Lfunc_begin54       #     jumps to .Ltmp1694
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1831-.Lfunc_begin54       # >> Call Site 161 <<
	.uleb128 .Ltmp1832-.Ltmp1831            #   Call between .Ltmp1831 and .Ltmp1832
	.uleb128 .Ltmp1833-.Lfunc_begin54       #     jumps to .Ltmp1833
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp2165-.Lfunc_begin54       # >> Call Site 162 <<
	.uleb128 .Ltmp2166-.Ltmp2165            #   Call between .Ltmp2165 and .Ltmp2166
	.uleb128 .Ltmp2169-.Lfunc_begin54       #     jumps to .Ltmp2169
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2067-.Lfunc_begin54       # >> Call Site 163 <<
	.uleb128 .Ltmp2068-.Ltmp2067            #   Call between .Ltmp2067 and .Ltmp2068
	.uleb128 .Ltmp2069-.Lfunc_begin54       #     jumps to .Ltmp2069
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2064-.Lfunc_begin54       # >> Call Site 164 <<
	.uleb128 .Ltmp2065-.Ltmp2064            #   Call between .Ltmp2064 and .Ltmp2065
	.uleb128 .Ltmp2066-.Lfunc_begin54       #     jumps to .Ltmp2066
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1983-.Lfunc_begin54       # >> Call Site 165 <<
	.uleb128 .Ltmp1984-.Ltmp1983            #   Call between .Ltmp1983 and .Ltmp1984
	.uleb128 .Ltmp1985-.Lfunc_begin54       #     jumps to .Ltmp1985
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1854-.Lfunc_begin54       # >> Call Site 166 <<
	.uleb128 .Ltmp1855-.Ltmp1854            #   Call between .Ltmp1854 and .Ltmp1855
	.uleb128 .Ltmp1864-.Lfunc_begin54       #     jumps to .Ltmp1864
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1856-.Lfunc_begin54       # >> Call Site 167 <<
	.uleb128 .Ltmp1857-.Ltmp1856            #   Call between .Ltmp1856 and .Ltmp1857
	.uleb128 .Ltmp1858-.Lfunc_begin54       #     jumps to .Ltmp1858
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1767-.Lfunc_begin54       # >> Call Site 168 <<
	.uleb128 .Ltmp1768-.Ltmp1767            #   Call between .Ltmp1767 and .Ltmp1768
	.uleb128 .Ltmp1769-.Lfunc_begin54       #     jumps to .Ltmp1769
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1799-.Lfunc_begin54       # >> Call Site 169 <<
	.uleb128 .Ltmp1800-.Ltmp1799            #   Call between .Ltmp1799 and .Ltmp1800
	.uleb128 .Ltmp1801-.Lfunc_begin54       #     jumps to .Ltmp1801
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp1981-.Lfunc_begin54       # >> Call Site 170 <<
	.uleb128 .Ltmp1982-.Ltmp1981            #   Call between .Ltmp1981 and .Ltmp1982
	.uleb128 .Ltmp1985-.Lfunc_begin54       #     jumps to .Ltmp1985
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1947-.Lfunc_begin54       # >> Call Site 171 <<
	.uleb128 .Ltmp1948-.Ltmp1947            #   Call between .Ltmp1947 and .Ltmp1948
	.uleb128 .Ltmp1949-.Lfunc_begin54       #     jumps to .Ltmp1949
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1816-.Lfunc_begin54       # >> Call Site 172 <<
	.uleb128 .Ltmp1817-.Ltmp1816            #   Call between .Ltmp1816 and .Ltmp1817
	.uleb128 .Ltmp1818-.Lfunc_begin54       #     jumps to .Ltmp1818
	.byte	9                               #   On action: 5
	.uleb128 .Ltmp2186-.Lfunc_begin54       # >> Call Site 173 <<
	.uleb128 .Ltmp2187-.Ltmp2186            #   Call between .Ltmp2186 and .Ltmp2187
	.uleb128 .Ltmp2188-.Lfunc_begin54       #     jumps to .Ltmp2188
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2179-.Lfunc_begin54       # >> Call Site 174 <<
	.uleb128 .Ltmp2180-.Ltmp2179            #   Call between .Ltmp2179 and .Ltmp2180
	.uleb128 .Ltmp2181-.Lfunc_begin54       #     jumps to .Ltmp2181
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2176-.Lfunc_begin54       # >> Call Site 175 <<
	.uleb128 .Ltmp2177-.Ltmp2176            #   Call between .Ltmp2176 and .Ltmp2177
	.uleb128 .Ltmp2178-.Lfunc_begin54       #     jumps to .Ltmp2178
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2157-.Lfunc_begin54       # >> Call Site 176 <<
	.uleb128 .Ltmp2158-.Ltmp2157            #   Call between .Ltmp2157 and .Ltmp2158
	.uleb128 .Ltmp2159-.Lfunc_begin54       #     jumps to .Ltmp2159
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2184-.Lfunc_begin54       # >> Call Site 177 <<
	.uleb128 .Ltmp2185-.Ltmp2184            #   Call between .Ltmp2184 and .Ltmp2185
	.uleb128 .Ltmp2188-.Lfunc_begin54       #     jumps to .Ltmp2188
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2076-.Lfunc_begin54       # >> Call Site 178 <<
	.uleb128 .Ltmp2077-.Ltmp2076            #   Call between .Ltmp2076 and .Ltmp2077
	.uleb128 .Ltmp2078-.Lfunc_begin54       #     jumps to .Ltmp2078
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2087-.Lfunc_begin54       # >> Call Site 179 <<
	.uleb128 .Ltmp2088-.Ltmp2087            #   Call between .Ltmp2087 and .Ltmp2088
	.uleb128 .Ltmp2093-.Lfunc_begin54       #     jumps to .Ltmp2093
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2053-.Lfunc_begin54       # >> Call Site 180 <<
	.uleb128 .Ltmp2146-.Ltmp2053            #   Call between .Ltmp2053 and .Ltmp2146
	.uleb128 .Ltmp2147-.Lfunc_begin54       #     jumps to .Ltmp2147
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2146-.Lfunc_begin54       # >> Call Site 181 <<
	.uleb128 .Ltmp1802-.Ltmp2146            #   Call between .Ltmp2146 and .Ltmp1802
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1802-.Lfunc_begin54       # >> Call Site 182 <<
	.uleb128 .Ltmp1803-.Ltmp1802            #   Call between .Ltmp1802 and .Ltmp1803
	.uleb128 .Ltmp1804-.Lfunc_begin54       #     jumps to .Ltmp1804
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1770-.Lfunc_begin54       # >> Call Site 183 <<
	.uleb128 .Ltmp1771-.Ltmp1770            #   Call between .Ltmp1770 and .Ltmp1771
	.uleb128 .Ltmp1772-.Lfunc_begin54       #     jumps to .Ltmp1772
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1859-.Lfunc_begin54       # >> Call Site 184 <<
	.uleb128 .Ltmp1860-.Ltmp1859            #   Call between .Ltmp1859 and .Ltmp1860
	.uleb128 .Ltmp1861-.Lfunc_begin54       #     jumps to .Ltmp1861
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2070-.Lfunc_begin54       # >> Call Site 185 <<
	.uleb128 .Ltmp2071-.Ltmp2070            #   Call between .Ltmp2070 and .Ltmp2071
	.uleb128 .Ltmp2072-.Lfunc_begin54       #     jumps to .Ltmp2072
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2073-.Lfunc_begin54       # >> Call Site 186 <<
	.uleb128 .Ltmp2074-.Ltmp2073            #   Call between .Ltmp2073 and .Ltmp2074
	.uleb128 .Ltmp2075-.Lfunc_begin54       #     jumps to .Ltmp2075
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2079-.Lfunc_begin54       # >> Call Site 187 <<
	.uleb128 .Ltmp2080-.Ltmp2079            #   Call between .Ltmp2079 and .Ltmp2080
	.uleb128 .Ltmp2081-.Lfunc_begin54       #     jumps to .Ltmp2081
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1834-.Lfunc_begin54       # >> Call Site 188 <<
	.uleb128 .Ltmp1835-.Ltmp1834            #   Call between .Ltmp1834 and .Ltmp1835
	.uleb128 .Ltmp1836-.Lfunc_begin54       #     jumps to .Ltmp1836
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1835-.Lfunc_begin54       # >> Call Site 189 <<
	.uleb128 .Ltmp1745-.Ltmp1835            #   Call between .Ltmp1835 and .Ltmp1745
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1745-.Lfunc_begin54       # >> Call Site 190 <<
	.uleb128 .Ltmp1746-.Ltmp1745            #   Call between .Ltmp1745 and .Ltmp1746
	.uleb128 .Ltmp1747-.Lfunc_begin54       #     jumps to .Ltmp1747
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2154-.Lfunc_begin54       # >> Call Site 191 <<
	.uleb128 .Ltmp2155-.Ltmp2154            #   Call between .Ltmp2154 and .Ltmp2155
	.uleb128 .Ltmp2156-.Lfunc_begin54       #     jumps to .Ltmp2156
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp2155-.Lfunc_begin54       # >> Call Site 192 <<
	.uleb128 .Ltmp1793-.Ltmp2155            #   Call between .Ltmp2155 and .Ltmp1793
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1793-.Lfunc_begin54       # >> Call Site 193 <<
	.uleb128 .Ltmp1794-.Ltmp1793            #   Call between .Ltmp1793 and .Ltmp1794
	.uleb128 .Ltmp1795-.Lfunc_begin54       #     jumps to .Ltmp1795
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1822-.Lfunc_begin54       # >> Call Site 194 <<
	.uleb128 .Ltmp1823-.Ltmp1822            #   Call between .Ltmp1822 and .Ltmp1823
	.uleb128 .Ltmp1824-.Lfunc_begin54       #     jumps to .Ltmp1824
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1887-.Lfunc_begin54       # >> Call Site 195 <<
	.uleb128 .Ltmp1888-.Ltmp1887            #   Call between .Ltmp1887 and .Ltmp1888
	.uleb128 .Ltmp1889-.Lfunc_begin54       #     jumps to .Ltmp1889
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1888-.Lfunc_begin54       # >> Call Site 196 <<
	.uleb128 .Ltmp1925-.Ltmp1888            #   Call between .Ltmp1888 and .Ltmp1925
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1925-.Lfunc_begin54       # >> Call Site 197 <<
	.uleb128 .Ltmp1926-.Ltmp1925            #   Call between .Ltmp1925 and .Ltmp1926
	.uleb128 .Ltmp1927-.Lfunc_begin54       #     jumps to .Ltmp1927
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1926-.Lfunc_begin54       # >> Call Site 198 <<
	.uleb128 .Ltmp1915-.Ltmp1926            #   Call between .Ltmp1926 and .Ltmp1915
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1915-.Lfunc_begin54       # >> Call Site 199 <<
	.uleb128 .Ltmp1916-.Ltmp1915            #   Call between .Ltmp1915 and .Ltmp1916
	.uleb128 .Ltmp1917-.Lfunc_begin54       #     jumps to .Ltmp1917
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1916-.Lfunc_begin54       # >> Call Site 200 <<
	.uleb128 .Ltmp1920-.Ltmp1916            #   Call between .Ltmp1916 and .Ltmp1920
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1920-.Lfunc_begin54       # >> Call Site 201 <<
	.uleb128 .Ltmp1921-.Ltmp1920            #   Call between .Ltmp1920 and .Ltmp1921
	.uleb128 .Ltmp1922-.Lfunc_begin54       #     jumps to .Ltmp1922
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1923-.Lfunc_begin54       # >> Call Site 202 <<
	.uleb128 .Ltmp1929-.Ltmp1923            #   Call between .Ltmp1923 and .Ltmp1929
	.uleb128 .Ltmp2147-.Lfunc_begin54       #     jumps to .Ltmp2147
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1929-.Lfunc_begin54       # >> Call Site 203 <<
	.uleb128 .Lfunc_end105-.Ltmp1929        #   Call between .Ltmp1929 and .Lfunc_end105
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end54:
	.byte	0                               # >> Action Record 1 <<
                                        #   Cleanup
	.byte	0                               #   No further actions
	.byte	3                               # >> Action Record 2 <<
                                        #   Catch TypeInfo 3
	.byte	125                             #   Continue to action 1
	.byte	1                               # >> Action Record 3 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.byte	2                               # >> Action Record 4 <<
                                        #   Catch TypeInfo 2
	.byte	125                             #   Continue to action 3
	.byte	3                               # >> Action Record 5 <<
                                        #   Catch TypeInfo 3
	.byte	125                             #   Continue to action 4
	.byte	4                               # >> Action Record 6 <<
                                        #   Catch TypeInfo 4
	.byte	125                             #   Continue to action 5
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
.Ltmp2189:                              # TypeInfo 4
	.long	.L_ZTIN8pybind1120reference_cast_errorE.DW.stub-.Ltmp2189
.Ltmp2190:                              # TypeInfo 3
	.long	.L_ZTIN8pybind1117error_already_setE.DW.stub-.Ltmp2190
.Ltmp2191:                              # TypeInfo 2
	.long	.L_ZTIN10__cxxabiv115__forced_unwindE.DW.stub-.Ltmp2191
	.long	0                               # TypeInfo 1
.Lttbase39:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail16get_scope_moduleENS_6handleE,"axG",@progbits,_ZN8pybind116detail16get_scope_moduleENS_6handleE,comdat
	.hidden	_ZN8pybind116detail16get_scope_moduleENS_6handleE # -- Begin function _ZN8pybind116detail16get_scope_moduleENS_6handleE
	.weak	_ZN8pybind116detail16get_scope_moduleENS_6handleE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail16get_scope_moduleENS_6handleE,@function
_ZN8pybind116detail16get_scope_moduleENS_6handleE: # @_ZN8pybind116detail16get_scope_moduleENS_6handleE
.Lfunc_begin55:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception55
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$32, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	testq	%rsi, %rsi
	je	.LBB106_14
# %bb.1:
	movq	%rsi, %r14
	leaq	.L.str.65(%rip), %r15
	movq	%rsi, %rdi
	movq	%r15, %rsi
	callq	PyObject_HasAttrString@PLT
	cmpl	$1, %eax
	jne	.LBB106_8
# %bb.2:
	movq	%r14, 8(%rsp)
	movq	%r15, 16(%rsp)
	leaq	24(%rsp), %r14
	movq	$0, 24(%rsp)
.Ltmp2203:
	movq	%rsp, %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp2204:
# %bb.3:                                # %.noexc
	movq	(%rax), %rax
	movq	%rax, (%rbx)
.Ltmp2205:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2206:
# %bb.4:                                # %_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEEcvNS_6objectEEv.exit
.Ltmp2211:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2212:
	jmp	.LBB106_15
.LBB106_8:
	leaq	.L.str.94(%rip), %r15
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	PyObject_HasAttrString@PLT
	cmpl	$1, %eax
	jne	.LBB106_14
# %bb.9:
	movq	%r14, 8(%rsp)
	movq	%r15, 16(%rsp)
	leaq	24(%rsp), %r14
	movq	$0, 24(%rsp)
.Ltmp2192:
	movq	%rsp, %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp2193:
# %bb.10:                               # %.noexc7
	movq	(%rax), %rax
	movq	%rax, (%rbx)
.Ltmp2194:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2195:
# %bb.11:                               # %_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEEcvNS_6objectEEv.exit9
.Ltmp2200:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2201:
	jmp	.LBB106_15
.LBB106_14:
	movq	$0, (%rbx)
.LBB106_15:
	movq	%rbx, %rax
	addq	$32, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB106_17:
	.cfi_def_cfa_offset 64
.Ltmp2202:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB106_16:
.Ltmp2213:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB106_13:
.Ltmp2196:
	movq	%rax, %rbx
.Ltmp2197:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2198:
	jmp	.LBB106_7
.LBB106_12:
.Ltmp2199:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB106_6:
.Ltmp2207:
	movq	%rax, %rbx
.Ltmp2208:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2209:
.LBB106_7:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB106_5:
.Ltmp2210:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end106:
	.size	_ZN8pybind116detail16get_scope_moduleENS_6handleE, .Lfunc_end106-_ZN8pybind116detail16get_scope_moduleENS_6handleE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail16get_scope_moduleENS_6handleE,"aG",@progbits,_ZN8pybind116detail16get_scope_moduleENS_6handleE,comdat
	.p2align	2, 0x0
GCC_except_table106:
.Lexception55:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase40-.Lttbaseref40
.Lttbaseref40:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end55-.Lcst_begin55
.Lcst_begin55:
	.uleb128 .Lfunc_begin55-.Lfunc_begin55  # >> Call Site 1 <<
	.uleb128 .Ltmp2203-.Lfunc_begin55       #   Call between .Lfunc_begin55 and .Ltmp2203
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2203-.Lfunc_begin55       # >> Call Site 2 <<
	.uleb128 .Ltmp2206-.Ltmp2203            #   Call between .Ltmp2203 and .Ltmp2206
	.uleb128 .Ltmp2207-.Lfunc_begin55       #     jumps to .Ltmp2207
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2211-.Lfunc_begin55       # >> Call Site 3 <<
	.uleb128 .Ltmp2212-.Ltmp2211            #   Call between .Ltmp2211 and .Ltmp2212
	.uleb128 .Ltmp2213-.Lfunc_begin55       #     jumps to .Ltmp2213
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2212-.Lfunc_begin55       # >> Call Site 4 <<
	.uleb128 .Ltmp2192-.Ltmp2212            #   Call between .Ltmp2212 and .Ltmp2192
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2192-.Lfunc_begin55       # >> Call Site 5 <<
	.uleb128 .Ltmp2195-.Ltmp2192            #   Call between .Ltmp2192 and .Ltmp2195
	.uleb128 .Ltmp2196-.Lfunc_begin55       #     jumps to .Ltmp2196
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2200-.Lfunc_begin55       # >> Call Site 6 <<
	.uleb128 .Ltmp2201-.Ltmp2200            #   Call between .Ltmp2200 and .Ltmp2201
	.uleb128 .Ltmp2202-.Lfunc_begin55       #     jumps to .Ltmp2202
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2197-.Lfunc_begin55       # >> Call Site 7 <<
	.uleb128 .Ltmp2198-.Ltmp2197            #   Call between .Ltmp2197 and .Ltmp2198
	.uleb128 .Ltmp2199-.Lfunc_begin55       #     jumps to .Ltmp2199
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2208-.Lfunc_begin55       # >> Call Site 8 <<
	.uleb128 .Ltmp2209-.Ltmp2208            #   Call between .Ltmp2208 and .Ltmp2209
	.uleb128 .Ltmp2210-.Lfunc_begin55       #     jumps to .Ltmp2210
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2209-.Lfunc_begin55       # >> Call Site 9 <<
	.uleb128 .Lfunc_end106-.Ltmp2209        #   Call between .Ltmp2209 and .Lfunc_end106
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end55:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase40:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE,"axG",@progbits,_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE,comdat
	.hidden	_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE # -- Begin function _ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE
	.weak	_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE
	.p2align	4, 0x90
	.type	_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE,@function
_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE: # @_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE
.Lfunc_begin56:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception56
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
	movq	(%rax), %rax
	movq	%rax, (%rsp)
	movq	%rsp, %r14
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2214:
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	_ZN8pybind113strC2EONS_6objectE
.Ltmp2215:
# %bb.1:
.Ltmp2220:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2221:
# %bb.2:                                # %_ZN8pybind116objectD2Ev.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB107_6:
	.cfi_def_cfa_offset 32
.Ltmp2222:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB107_4:
.Ltmp2216:
	movq	%rax, %rbx
.Ltmp2217:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2218:
# %bb.5:                                # %_ZN8pybind116objectD2Ev.exit3
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB107_3:
.Ltmp2219:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end107:
	.size	_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE, .Lfunc_end107-_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE,"aG",@progbits,_ZN8pybind113strC2INS_6detail17accessor_policies8str_attrEEERKNS2_8accessorIT_EE,comdat
	.p2align	2, 0x0
GCC_except_table107:
.Lexception56:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase41-.Lttbaseref41
.Lttbaseref41:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end56-.Lcst_begin56
.Lcst_begin56:
	.uleb128 .Lfunc_begin56-.Lfunc_begin56  # >> Call Site 1 <<
	.uleb128 .Ltmp2214-.Lfunc_begin56       #   Call between .Lfunc_begin56 and .Ltmp2214
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2214-.Lfunc_begin56       # >> Call Site 2 <<
	.uleb128 .Ltmp2215-.Ltmp2214            #   Call between .Ltmp2214 and .Ltmp2215
	.uleb128 .Ltmp2216-.Lfunc_begin56       #     jumps to .Ltmp2216
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2220-.Lfunc_begin56       # >> Call Site 3 <<
	.uleb128 .Ltmp2221-.Ltmp2220            #   Call between .Ltmp2220 and .Ltmp2221
	.uleb128 .Ltmp2222-.Lfunc_begin56       #     jumps to .Ltmp2222
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2217-.Lfunc_begin56       # >> Call Site 4 <<
	.uleb128 .Ltmp2218-.Ltmp2217            #   Call between .Ltmp2217 and .Ltmp2218
	.uleb128 .Ltmp2219-.Lfunc_begin56       #     jumps to .Ltmp2219
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2218-.Lfunc_begin56       # >> Call Site 5 <<
	.uleb128 .Lfunc_end107-.Ltmp2218        #   Call between .Ltmp2218 and .Lfunc_end107
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end56:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase41:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv,"axG",@progbits,_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv,comdat
	.hidden	_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv # -- Begin function _ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv
	.weak	_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv
	.p2align	4, 0x90
	.type	_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv,@function
_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv: # @_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv
.Lfunc_begin57:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception57
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$24, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	(%rsi), %rax
	movq	%rax, (%rsp)
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%r14), %rdi
	movq	8(%rdi), %rax
	testb	$16, 171(%rax)
	jne	.LBB108_6
# %bb.1:                                # %._crit_edge
	movq	(%rsp), %rdi
	jmp	.LBB108_2
.LBB108_6:
.Ltmp2223:
	callq	PyUnicode_AsUTF8String@PLT
.Ltmp2224:
# %bb.7:
	movq	(%rsp), %rcx
	movq	%rcx, 16(%rsp)
	movq	%rax, (%rsp)
	movq	$0, 8(%rsp)
.Ltmp2226:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2227:
# %bb.8:                                # %_ZN8pybind116objectaSEOS0_.exit
.Ltmp2229:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2230:
# %bb.9:                                # %_ZN8pybind116objectD2Ev.exit
	movq	(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB108_10
.LBB108_2:
	movq	$0, 16(%rsp)
	movq	$0, 8(%rsp)
.Ltmp2238:
	leaq	16(%rsp), %rsi
	leaq	8(%rsp), %rdx
	callq	PyBytes_AsStringAndSize@PLT
.Ltmp2239:
# %bb.3:
	testl	%eax, %eax
	jne	.LBB108_4
# %bb.18:
	movq	16(%rsp), %r15
	movq	8(%rsp), %r14
	leaq	16(%rbx), %r12
	movq	%r12, (%rbx)
	testq	%r15, %r15
	setne	%al
	testq	%r14, %r14
	sete	%cl
	orb	%al, %cl
	je	.LBB108_19
# %bb.21:
	cmpq	$16, %r14
	jb	.LBB108_30
# %bb.22:
	testq	%r14, %r14
	js	.LBB108_23
# %bb.25:
	movq	%r14, %rdi
	incq	%rdi
	js	.LBB108_26
# %bb.28:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
.Ltmp2246:
	callq	_Znwm@PLT
.Ltmp2247:
# %bb.29:                               # %.noexc10
	movq	%rax, %r12
	movq	%rax, (%rbx)
	movq	%r14, 16(%rbx)
.LBB108_30:                             # %._crit_edge.i.i
	testq	%r14, %r14
	je	.LBB108_34
# %bb.31:                               # %._crit_edge.i.i
	cmpq	$1, %r14
	jne	.LBB108_33
# %bb.32:
	movzbl	(%r15), %eax
	movb	%al, (%r12)
	jmp	.LBB108_34
.LBB108_33:
	movq	%r12, %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
.LBB108_34:
	movq	%r14, 8(%rbx)
	movb	$0, (%r12,%r14)
.Ltmp2248:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2249:
# %bb.35:                               # %_ZN8pybind116objectD2Ev.exit11
	movq	%rbx, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB108_26:                             # %.noexc9.i
	.cfi_def_cfa_offset 64
.Ltmp2251:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp2252:
# %bb.27:                               # %.noexc9
.LBB108_4:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2240:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2241:
# %bb.5:
.Ltmp2243:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2244:
	jmp	.LBB108_40
.LBB108_19:
.Ltmp2255:
	leaq	.L.str.34(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.Ltmp2256:
# %bb.20:                               # %.noexc
.LBB108_10:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2232:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2233:
# %bb.11:
.Ltmp2235:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2236:
.LBB108_40:
.LBB108_23:                             # %.noexc.i
.Ltmp2253:
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2254:
# %bb.24:                               # %.noexc8
.LBB108_15:
.Ltmp2237:
	jmp	.LBB108_37
.LBB108_13:
.Ltmp2234:
	jmp	.LBB108_14
.LBB108_17:
.Ltmp2242:
.LBB108_14:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB108_38
.LBB108_42:
.Ltmp2231:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB108_41:
.Ltmp2228:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB108_12:
.Ltmp2225:
	jmp	.LBB108_37
.LBB108_43:
.Ltmp2250:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB108_16:
.Ltmp2245:
	jmp	.LBB108_37
.LBB108_36:
.Ltmp2257:
.LBB108_37:
	movq	%rax, %rbx
.LBB108_38:
.Ltmp2258:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2259:
# %bb.39:                               # %_ZN8pybind116objectD2Ev.exit12
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB108_44:
.Ltmp2260:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end108:
	.size	_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv, .Lfunc_end108-_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv,"aG",@progbits,_ZNK8pybind113strcvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEv,comdat
	.p2align	2, 0x0
GCC_except_table108:
.Lexception57:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase42-.Lttbaseref42
.Lttbaseref42:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end57-.Lcst_begin57
.Lcst_begin57:
	.uleb128 .Lfunc_begin57-.Lfunc_begin57  # >> Call Site 1 <<
	.uleb128 .Ltmp2223-.Lfunc_begin57       #   Call between .Lfunc_begin57 and .Ltmp2223
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2223-.Lfunc_begin57       # >> Call Site 2 <<
	.uleb128 .Ltmp2224-.Ltmp2223            #   Call between .Ltmp2223 and .Ltmp2224
	.uleb128 .Ltmp2225-.Lfunc_begin57       #     jumps to .Ltmp2225
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2226-.Lfunc_begin57       # >> Call Site 3 <<
	.uleb128 .Ltmp2227-.Ltmp2226            #   Call between .Ltmp2226 and .Ltmp2227
	.uleb128 .Ltmp2228-.Lfunc_begin57       #     jumps to .Ltmp2228
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2229-.Lfunc_begin57       # >> Call Site 4 <<
	.uleb128 .Ltmp2230-.Ltmp2229            #   Call between .Ltmp2229 and .Ltmp2230
	.uleb128 .Ltmp2231-.Lfunc_begin57       #     jumps to .Ltmp2231
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2238-.Lfunc_begin57       # >> Call Site 5 <<
	.uleb128 .Ltmp2239-.Ltmp2238            #   Call between .Ltmp2238 and .Ltmp2239
	.uleb128 .Ltmp2245-.Lfunc_begin57       #     jumps to .Ltmp2245
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2246-.Lfunc_begin57       # >> Call Site 6 <<
	.uleb128 .Ltmp2247-.Ltmp2246            #   Call between .Ltmp2246 and .Ltmp2247
	.uleb128 .Ltmp2257-.Lfunc_begin57       #     jumps to .Ltmp2257
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2247-.Lfunc_begin57       # >> Call Site 7 <<
	.uleb128 .Ltmp2248-.Ltmp2247            #   Call between .Ltmp2247 and .Ltmp2248
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2248-.Lfunc_begin57       # >> Call Site 8 <<
	.uleb128 .Ltmp2249-.Ltmp2248            #   Call between .Ltmp2248 and .Ltmp2249
	.uleb128 .Ltmp2250-.Lfunc_begin57       #     jumps to .Ltmp2250
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2251-.Lfunc_begin57       # >> Call Site 9 <<
	.uleb128 .Ltmp2252-.Ltmp2251            #   Call between .Ltmp2251 and .Ltmp2252
	.uleb128 .Ltmp2257-.Lfunc_begin57       #     jumps to .Ltmp2257
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2252-.Lfunc_begin57       # >> Call Site 10 <<
	.uleb128 .Ltmp2240-.Ltmp2252            #   Call between .Ltmp2252 and .Ltmp2240
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2240-.Lfunc_begin57       # >> Call Site 11 <<
	.uleb128 .Ltmp2241-.Ltmp2240            #   Call between .Ltmp2240 and .Ltmp2241
	.uleb128 .Ltmp2242-.Lfunc_begin57       #     jumps to .Ltmp2242
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2243-.Lfunc_begin57       # >> Call Site 12 <<
	.uleb128 .Ltmp2244-.Ltmp2243            #   Call between .Ltmp2243 and .Ltmp2244
	.uleb128 .Ltmp2245-.Lfunc_begin57       #     jumps to .Ltmp2245
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2255-.Lfunc_begin57       # >> Call Site 13 <<
	.uleb128 .Ltmp2256-.Ltmp2255            #   Call between .Ltmp2255 and .Ltmp2256
	.uleb128 .Ltmp2257-.Lfunc_begin57       #     jumps to .Ltmp2257
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2256-.Lfunc_begin57       # >> Call Site 14 <<
	.uleb128 .Ltmp2232-.Ltmp2256            #   Call between .Ltmp2256 and .Ltmp2232
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2232-.Lfunc_begin57       # >> Call Site 15 <<
	.uleb128 .Ltmp2233-.Ltmp2232            #   Call between .Ltmp2232 and .Ltmp2233
	.uleb128 .Ltmp2234-.Lfunc_begin57       #     jumps to .Ltmp2234
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2235-.Lfunc_begin57       # >> Call Site 16 <<
	.uleb128 .Ltmp2236-.Ltmp2235            #   Call between .Ltmp2235 and .Ltmp2236
	.uleb128 .Ltmp2237-.Lfunc_begin57       #     jumps to .Ltmp2237
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2253-.Lfunc_begin57       # >> Call Site 17 <<
	.uleb128 .Ltmp2254-.Ltmp2253            #   Call between .Ltmp2253 and .Ltmp2254
	.uleb128 .Ltmp2257-.Lfunc_begin57       #     jumps to .Ltmp2257
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2254-.Lfunc_begin57       # >> Call Site 18 <<
	.uleb128 .Ltmp2258-.Ltmp2254            #   Call between .Ltmp2254 and .Ltmp2258
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2258-.Lfunc_begin57       # >> Call Site 19 <<
	.uleb128 .Ltmp2259-.Ltmp2258            #   Call between .Ltmp2258 and .Ltmp2259
	.uleb128 .Ltmp2260-.Lfunc_begin57       #     jumps to .Ltmp2260
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2259-.Lfunc_begin57       # >> Call Site 20 <<
	.uleb128 .Lfunc_end108-.Ltmp2259        #   Call between .Ltmp2259 and .Lfunc_end108
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end57:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase42:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1112cpp_function12strdup_guardD2Ev,"axG",@progbits,_ZN8pybind1112cpp_function12strdup_guardD2Ev,comdat
	.hidden	_ZN8pybind1112cpp_function12strdup_guardD2Ev # -- Begin function _ZN8pybind1112cpp_function12strdup_guardD2Ev
	.weak	_ZN8pybind1112cpp_function12strdup_guardD2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind1112cpp_function12strdup_guardD2Ev,@function
_ZN8pybind1112cpp_function12strdup_guardD2Ev: # @_ZN8pybind1112cpp_function12strdup_guardD2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	movq	(%rdi), %rbx
	movq	8(%rdi), %r15
	cmpq	%r15, %rbx
	je	.LBB109_3
	.p2align	4, 0x90
.LBB109_1:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rdi
	callq	free@PLT
	addq	$8, %rbx
	cmpq	%r15, %rbx
	jne	.LBB109_1
# %bb.2:                                # %._crit_edge.loopexit
	movq	(%r14), %rbx
.LBB109_3:                              # %._crit_edge
	testq	%rbx, %rbx
	je	.LBB109_4
# %bb.5:
	movq	16(%r14), %rsi
	subq	%rbx, %rsi
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB109_4:                              # %_ZNSt6vectorIPcSaIS0_EED2Ev.exit
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end109:
	.size	_ZN8pybind1112cpp_function12strdup_guardD2Ev, .Lfunc_end109-_ZN8pybind1112cpp_function12strdup_guardD2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIbSaIbEED2Ev,"axG",@progbits,_ZNSt5dequeIbSaIbEED2Ev,comdat
	.weak	_ZNSt5dequeIbSaIbEED2Ev         # -- Begin function _ZNSt5dequeIbSaIbEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt5dequeIbSaIbEED2Ev,@function
_ZNSt5dequeIbSaIbEED2Ev:                # @_ZNSt5dequeIbSaIbEED2Ev
	.cfi_startproc
# %bb.0:
	movq	%rdi, %rax
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB110_6
# %bb.1:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	40(%rax), %rbx
	movq	72(%rax), %r14
	leaq	8(%r14), %rcx
	cmpq	%rcx, %rbx
	jae	.LBB110_5
# %bb.2:                                # %.lr.ph.i.i.preheader
	movq	%rax, %r15
	addq	$-8, %rbx
	.p2align	4, 0x90
.LBB110_3:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%rbx), %rdi
	addq	$8, %rbx
	movl	$512, %esi                      # imm = 0x200
	callq	_ZdlPvm@PLT
	cmpq	%r14, %rbx
	jb	.LBB110_3
# %bb.4:                                # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.loopexit.i
	movq	%r15, %rax
	movq	(%r15), %rdi
.LBB110_5:                              # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.i
	movq	8(%rax), %rsi
	shlq	$3, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB110_6:                              # %_ZNSt11_Deque_baseIbSaIbEED2Ev.exit
	.cfi_restore %rbx
	.cfi_restore %r14
	.cfi_restore %r15
	retq
.Lfunc_end110:
	.size	_ZNSt5dequeIbSaIbEED2Ev, .Lfunc_end110-_ZNSt5dequeIbSaIbEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7__cxx119to_stringEm,"axG",@progbits,_ZNSt7__cxx119to_stringEm,comdat
	.weak	_ZNSt7__cxx119to_stringEm       # -- Begin function _ZNSt7__cxx119to_stringEm
	.p2align	4, 0x90
	.type	_ZNSt7__cxx119to_stringEm,@function
_ZNSt7__cxx119to_stringEm:              # @_ZNSt7__cxx119to_stringEm
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	cmpq	$10, %rsi
	jae	.LBB111_1
# %bb.23:                               # %.thread
	leaq	16(%rbx), %r12
	movq	%r12, (%rbx)
.LBB111_14:
	movb	$0, (%r12)
	movl	$1, %r15d
	jmp	.LBB111_15
.LBB111_1:                              # %.lr.ph.i.preheader
	movl	$4, %esi
	movabsq	$3777893186295716171, %rdi      # imm = 0x346DC5D63886594B
	movq	%r14, %rcx
	.p2align	4, 0x90
.LBB111_2:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	cmpq	$99, %rcx
	jbe	.LBB111_3
# %bb.4:                                #   in Loop: Header=BB111_2 Depth=1
	cmpq	$999, %rcx                      # imm = 0x3E7
	jbe	.LBB111_5
# %bb.6:                                #   in Loop: Header=BB111_2 Depth=1
	cmpq	$10000, %rcx                    # imm = 0x2710
	jb	.LBB111_9
# %bb.7:                                #   in Loop: Header=BB111_2 Depth=1
	movq	%rcx, %rax
	mulq	%rdi
	shrq	$11, %rdx
	addl	$4, %esi
	cmpq	$99999, %rcx                    # imm = 0x1869F
	movq	%rdx, %rcx
	ja	.LBB111_2
# %bb.8:                                # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit.loopexit
	addl	$-3, %esi
	jmp	.LBB111_9
.LBB111_3:
	addl	$-2, %esi
	jmp	.LBB111_9
.LBB111_5:
	decl	%esi
.LBB111_9:                              # %_ZNSt8__detail14__to_chars_lenImEEjT_i.exit
	movl	%esi, %r15d
	leaq	16(%rbx), %r12
	movq	%r12, (%rbx)
	cmpl	$16, %esi
	jb	.LBB111_12
# %bb.10:                               # %.noexc
	leaq	1(%r15), %rdi
	callq	_Znwm@PLT
	movq	%rax, %r12
	movq	%rax, (%rbx)
	movq	%r15, 16(%rbx)
	jmp	.LBB111_11
.LBB111_12:
	testq	%r15, %r15
	je	.LBB111_15
# %bb.13:
	cmpl	$1, %r15d
	je	.LBB111_14
.LBB111_11:
	movq	%r12, %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	callq	memset@PLT
.LBB111_15:
	movq	%r15, 8(%rbx)
	movb	$0, (%r12,%r15)
	movq	(%rbx), %rcx
	leaq	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits(%rip), %rsi
	cmpq	$100, %r14
	jb	.LBB111_16
# %bb.17:                               # %.lr.ph.preheader.i
	movl	8(%rbx), %edi
	addl	$-2, %edi
	movabsq	$2951479051793528259, %r8       # imm = 0x28F5C28F5C28F5C3
	.p2align	4, 0x90
.LBB111_18:                             # %.lr.ph.i4
                                        # =>This Inner Loop Header: Depth=1
	leal	1(%rdi), %r9d
	movq	%r14, %rax
	shrq	$2, %rax
	mulq	%r8
	shrq	$2, %rdx
	imull	$100, %edx, %eax
	movl	%r14d, %r10d
	subl	%eax, %r10d
	movzbl	(%rsi,%r10,2), %eax
	movzbl	1(%rsi,%r10,2), %r10d
	movb	%r10b, (%rcx,%r9)
	movl	%edi, %r9d
	movb	%al, (%rcx,%r9)
	addl	$-2, %edi
	cmpq	$9999, %r14                     # imm = 0x270F
	movq	%rdx, %r14
	ja	.LBB111_18
# %bb.19:                               # %._crit_edge.i
	cmpq	$10, %rdx
	jb	.LBB111_21
.LBB111_20:
	movzbl	(%rsi,%rdx,2), %eax
	movzbl	1(%rsi,%rdx,2), %edx
	movb	%dl, 1(%rcx)
	jmp	.LBB111_22
.LBB111_16:
	movq	%r14, %rdx
	cmpq	$10, %rdx
	jae	.LBB111_20
.LBB111_21:
	orb	$48, %dl
	movl	%edx, %eax
.LBB111_22:                             # %_ZNSt8__detail18__to_chars_10_implImEEvPcjT_.exit
	movb	%al, (%rcx)
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end111:
	.size	_ZNSt7__cxx119to_stringEm, .Lfunc_end111-_ZNSt7__cxx119to_stringEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc,"axG",@progbits,_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc,comdat
	.hidden	_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc # -- Begin function _ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc
	.weak	_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc
	.p2align	4, 0x90
	.type	_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc,@function
_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc: # @_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc
.Lfunc_begin58:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception58
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	leaq	16(%rsp), %r13
	movq	%r13, (%rsp)
	testq	%rsi, %rsi
	je	.LBB112_70
# %bb.1:
	movq	%rsi, %r15
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	strlen@PLT
	movq	%rax, %r12
	cmpq	$16, %rax
	jb	.LBB112_5
# %bb.2:
	testq	%r12, %r12
	js	.LBB112_71
# %bb.3:
	movq	%r12, %rdi
	incq	%rdi
	js	.LBB112_72
# %bb.4:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
	callq	_Znwm@PLT
	movq	%rax, %r13
	movq	%rax, (%rsp)
	movq	%r12, 16(%rsp)
.LBB112_5:                              # %._crit_edge.i.i
	testq	%r12, %r12
	je	.LBB112_9
# %bb.6:                                # %._crit_edge.i.i
	cmpq	$1, %r12
	jne	.LBB112_8
# %bb.7:
	movzbl	(%r15), %eax
	movb	%al, (%r13)
	jmp	.LBB112_9
.LBB112_8:
	movq	%r13, %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB112_9:
	movq	%rbx, 32(%rsp)                  # 8-byte Spill
	movq	%r12, 8(%rsp)
	movb	$0, (%r13,%r12)
	movq	(%rsp), %rax
	movq	8(%rsp), %rbx
	cmpq	$2, %rbx
	jb	.LBB112_16
# %bb.10:
	cmpb	$39, (%rax)
	jne	.LBB112_16
# %bb.11:
	cmpb	$39, -1(%rax,%rbx)
	jne	.LBB112_16
# %bb.12:
	movq	32(%rsp), %r14                  # 8-byte Reload
	leaq	16(%r14), %rdi
	movq	%rdi, (%r14)
	leaq	16(%rsp), %rsi
	cmpq	%rsi, %rax
	je	.LBB112_13
# %bb.14:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	%rax, (%r14)
	movq	16(%rsp), %rax
	movq	%rax, 16(%r14)
	jmp	.LBB112_15
.LBB112_16:                             # %.critedge
	movq	$0, 8(%rsp)
	movb	$0, (%rax)
	movzbl	(%r15), %ebp
	testb	%bpl, %bpl
	leaq	16(%rsp), %rdi
	je	.LBB112_34
# %bb.17:                               # %.lr.ph.preheader
	incq	%r15
	xorl	%eax, %eax
	movabsq	$4294983168, %rcx               # imm = 0x100003E00
	leaq	1(%rcx), %rbx
	jmp	.LBB112_18
	.p2align	4, 0x90
.LBB112_31:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit44
                                        #   in Loop: Header=BB112_18 Depth=1
	movb	%bpl, (%rax,%r13)
.LBB112_32:                             # %.sink.split
                                        #   in Loop: Header=BB112_18 Depth=1
	movq	%r14, 8(%rsp)
	addq	(%rsp), %r14
	movb	$0, (%r14)
	leaq	16(%rsp), %rdi
.LBB112_33:                             #   in Loop: Header=BB112_18 Depth=1
	movzbl	(%r15), %ebp
	incq	%r15
	movl	%r12d, %eax
	testb	%bpl, %bpl
	je	.LBB112_34
.LBB112_18:                             # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	cmpb	$64, %bpl
	setb	%dl
	movl	$1, %esi
	movl	%ebp, %ecx
	shlq	%cl, %rsi
	andq	%rbx, %rsi
	setne	%r12b
	andb	%dl, %r12b
	cmpb	$1, %r12b
	jne	.LBB112_26
# %bb.19:                               #   in Loop: Header=BB112_18 Depth=1
	testb	$1, %al
	jne	.LBB112_33
# %bb.20:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB112_18 Depth=1
	movq	(%rsp), %rax
	movl	$15, %ecx
	cmpq	%rdi, %rax
	je	.LBB112_22
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB112_18 Depth=1
	movq	16(%rsp), %rcx
.LBB112_22:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i
                                        #   in Loop: Header=BB112_18 Depth=1
	movq	8(%rsp), %r13
	leaq	1(%r13), %r14
	cmpq	%rcx, %r14
	jbe	.LBB112_25
# %bb.23:                               #   in Loop: Header=BB112_18 Depth=1
.Ltmp2263:
	movl	$1, %r8d
	movq	%rsp, %rdi
	movq	%r13, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2264:
# %bb.24:                               # %.noexc40
                                        #   in Loop: Header=BB112_18 Depth=1
	movq	(%rsp), %rax
.LBB112_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc.exit
                                        #   in Loop: Header=BB112_18 Depth=1
	movb	$32, (%rax,%r13)
	jmp	.LBB112_32
	.p2align	4, 0x90
.LBB112_26:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i41
                                        #   in Loop: Header=BB112_18 Depth=1
	movq	(%rsp), %rax
	movl	$15, %ecx
	cmpq	%rdi, %rax
	je	.LBB112_28
# %bb.27:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i41
                                        #   in Loop: Header=BB112_18 Depth=1
	movq	16(%rsp), %rcx
.LBB112_28:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i41
                                        #   in Loop: Header=BB112_18 Depth=1
	movq	8(%rsp), %r13
	leaq	1(%r13), %r14
	cmpq	%rcx, %r14
	jbe	.LBB112_31
# %bb.29:                               #   in Loop: Header=BB112_18 Depth=1
.Ltmp2261:
	movl	$1, %r8d
	movq	%rsp, %rdi
	movq	%r13, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2262:
# %bb.30:                               # %.noexc43
                                        #   in Loop: Header=BB112_18 Depth=1
	movq	(%rsp), %rax
	jmp	.LBB112_31
.LBB112_34:                             # %._crit_edge
	movq	(%rsp), %r15
	movq	8(%rsp), %rax
	testq	%rax, %rax
	movq	32(%rsp), %rbx                  # 8-byte Reload
	movabsq	$4294983168, %r8                # imm = 0x100003E00
	je	.LBB112_39
# %bb.35:                               # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i.preheader
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB112_36:                             # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i
                                        # =>This Inner Loop Header: Depth=1
	movzbl	(%r15,%rdx), %ecx
	movl	$1, %esi
	shlq	%cl, %rsi
	cmpb	$63, %cl
	ja	.LBB112_40
# %bb.37:                               # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i
                                        #   in Loop: Header=BB112_36 Depth=1
	andq	%r8, %rsi
	je	.LBB112_40
# %bb.38:                               #   in Loop: Header=BB112_36 Depth=1
	incq	%rdx
	cmpq	%rdx, %rax
	jne	.LBB112_36
	jmp	.LBB112_39
.LBB112_40:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcm.exit
	cmpq	$-1, %rdx
	je	.LBB112_39
# %bb.41:                               # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i54.preheader
	leaq	(%r15,%rdx), %r13
	leaq	-1(%rax), %r12
	.p2align	4, 0x90
.LBB112_42:                             # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i54
                                        # =>This Inner Loop Header: Depth=1
	movzbl	(%r15,%r12), %ecx
	movl	$1, %esi
	shlq	%cl, %rsi
	cmpb	$63, %cl
	ja	.LBB112_46
# %bb.43:                               # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i54
                                        #   in Loop: Header=BB112_42 Depth=1
	andq	%r8, %rsi
	je	.LBB112_46
# %bb.44:                               #   in Loop: Header=BB112_42 Depth=1
	addq	$-1, %r12
	jb	.LBB112_42
# %bb.45:
	movq	$-1, %r12
.LBB112_46:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcm.exit
	movq	%rax, %rcx
	subq	%rdx, %rcx
	jb	.LBB112_47
# %bb.49:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i.i
	subq	%rdx, %r12
	incq	%r12
	leaq	16(%rbx), %rbp
	movq	%rbp, (%rbx)
	cmpq	%r12, %rcx
	cmovbq	%rcx, %r12
	cmpq	$16, %r12
	jb	.LBB112_58
# %bb.50:
	testq	%r12, %r12
	js	.LBB112_51
# %bb.53:
	movq	%r12, %rdi
	incq	%rdi
	js	.LBB112_54
# %bb.56:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i
.Ltmp2266:
	callq	_Znwm@PLT
.Ltmp2267:
# %bb.57:                               # %.noexc58
	movq	%rax, %rbp
	movq	%rax, (%rbx)
	movq	%r12, 16(%rbx)
.LBB112_58:                             # %._crit_edge.i.i.i
	testq	%r12, %r12
	je	.LBB112_62
# %bb.59:                               # %._crit_edge.i.i.i
	cmpq	$1, %r12
	jne	.LBB112_61
# %bb.60:
	movzbl	(%r13), %eax
	movb	%al, (%rbp)
	jmp	.LBB112_62
.LBB112_39:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcm.exit.thread
	leaq	16(%rbx), %rbp
	movq	%rbp, (%rbx)
	movq	$0, 8(%rbx)
	movb	$0, (%rbp)
	cmpq	%rdi, %r15
	je	.LBB112_65
.LBB112_64:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	16(%rsp), %rsi
	incq	%rsi
	movq	%r15, %rdi
	callq	_ZdlPvm@PLT
	jmp	.LBB112_65
.LBB112_13:
	leaq	1(%rbx), %rdx
	callq	memcpy@PLT
.LBB112_15:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%rbx, 8(%r14)
	movq	%r14, %rbx
.LBB112_65:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB112_61:
	.cfi_def_cfa_offset 96
	movq	%rbp, %rdi
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB112_62:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit
	movq	%r12, 8(%rbx)
	addq	%r12, %rbp
	leaq	16(%rsp), %rdi
	movb	$0, (%rbp)
	cmpq	%rdi, %r15
	jne	.LBB112_64
	jmp	.LBB112_65
.LBB112_72:                             # %.noexc11.i
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB112_54:                             # %.noexc11.i.i
.Ltmp2268:
	callq	_ZSt17__throw_bad_allocv@PLT
.Ltmp2269:
# %bb.55:                               # %.noexc57
.LBB112_70:                             # %.noexc
	leaq	.L.str.34(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.LBB112_71:                             # %.noexc.i
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB112_47:
.Ltmp2272:
	leaq	.L.str.10(%rip), %rdi
	leaq	.L.str.111(%rip), %rsi
	movq	%rax, %rcx
	xorl	%eax, %eax
	callq	_ZSt24__throw_out_of_range_fmtPKcz@PLT
.Ltmp2273:
# %bb.48:                               # %.noexc55
.LBB112_51:                             # %.noexc10.i.i
.Ltmp2270:
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2271:
# %bb.52:                               # %.noexc56
.LBB112_66:
.Ltmp2265:
	jmp	.LBB112_67
.LBB112_73:
.Ltmp2274:
.LBB112_67:
	movq	%rax, %r14
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB112_69
# %bb.68:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i59
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB112_69:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit61
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end112:
	.size	_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc, .Lfunc_end112-_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc,"aG",@progbits,_ZN8pybind116detail27replace_newlines_and_squashB5cxx11EPKc,comdat
	.p2align	2, 0x0
GCC_except_table112:
.Lexception58:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end58-.Lcst_begin58
.Lcst_begin58:
	.uleb128 .Lfunc_begin58-.Lfunc_begin58  # >> Call Site 1 <<
	.uleb128 .Ltmp2263-.Lfunc_begin58       #   Call between .Lfunc_begin58 and .Ltmp2263
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2263-.Lfunc_begin58       # >> Call Site 2 <<
	.uleb128 .Ltmp2262-.Ltmp2263            #   Call between .Ltmp2263 and .Ltmp2262
	.uleb128 .Ltmp2265-.Lfunc_begin58       #     jumps to .Ltmp2265
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2266-.Lfunc_begin58       # >> Call Site 3 <<
	.uleb128 .Ltmp2267-.Ltmp2266            #   Call between .Ltmp2266 and .Ltmp2267
	.uleb128 .Ltmp2274-.Lfunc_begin58       #     jumps to .Ltmp2274
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2267-.Lfunc_begin58       # >> Call Site 4 <<
	.uleb128 .Ltmp2268-.Ltmp2267            #   Call between .Ltmp2267 and .Ltmp2268
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2268-.Lfunc_begin58       # >> Call Site 5 <<
	.uleb128 .Ltmp2269-.Ltmp2268            #   Call between .Ltmp2268 and .Ltmp2269
	.uleb128 .Ltmp2274-.Lfunc_begin58       #     jumps to .Ltmp2274
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2269-.Lfunc_begin58       # >> Call Site 6 <<
	.uleb128 .Ltmp2272-.Ltmp2269            #   Call between .Ltmp2269 and .Ltmp2272
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2272-.Lfunc_begin58       # >> Call Site 7 <<
	.uleb128 .Ltmp2271-.Ltmp2272            #   Call between .Ltmp2272 and .Ltmp2271
	.uleb128 .Ltmp2274-.Lfunc_begin58       #     jumps to .Ltmp2274
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2271-.Lfunc_begin58       # >> Call Site 8 <<
	.uleb128 .Lfunc_end112-.Ltmp2271        #   Call between .Ltmp2271 and .Lfunc_end112
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end58:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail13get_type_infoERKSt10type_indexb,"axG",@progbits,_ZN8pybind116detail13get_type_infoERKSt10type_indexb,comdat
	.hidden	_ZN8pybind116detail13get_type_infoERKSt10type_indexb # -- Begin function _ZN8pybind116detail13get_type_infoERKSt10type_indexb
	.weak	_ZN8pybind116detail13get_type_infoERKSt10type_indexb
	.p2align	4, 0x90
	.type	_ZN8pybind116detail13get_type_infoERKSt10type_indexb,@function
_ZN8pybind116detail13get_type_infoERKSt10type_indexb: # @_ZN8pybind116detail13get_type_infoERKSt10type_indexb
.Lfunc_begin59:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception59
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$96, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movl	%esi, %ebp
	movq	%rdi, %rbx
	callq	_ZN8pybind116detail30get_local_internals_pp_managerEv
	movq	%rax, %rdi
	callq	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE6get_ppEv
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB113_2
# %bb.1:                                # %_ZN8pybind116detail19get_local_internalsEv.exit.i
	movq	%rbx, %rsi
	callq	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_
	testq	%rax, %rax
	jne	.LBB113_3
	jmp	.LBB113_4
.LBB113_2:
	movq	%rax, %r14
	movl	$64, %edi
	callq	_Znwm@PLT
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 32(%rax)
	leaq	48(%rax), %rcx
	movq	%rcx, (%rax)
	movq	$1, 8(%rax)
	movups	%xmm0, 16(%rax)
	movl	$1065353216, 32(%rax)           # imm = 0x3F800000
	movups	%xmm0, 40(%rax)
	movq	$0, 56(%rax)
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	_ZNSt15__uniq_ptr_implIN8pybind116detail15local_internalsESt14default_deleteIS2_EE5resetEPS2_
	movq	(%r14), %rdi
	movq	%rbx, %rsi
	callq	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_
	testq	%rax, %rax
	je	.LBB113_4
.LBB113_3:                              # %_ZN8pybind116detail19get_local_type_infoERKSt10type_index.exit
	movq	16(%rax), %rax
	testq	%rax, %rax
	jne	.LBB113_8
.LBB113_4:                              # %_ZN8pybind116detail19get_local_type_infoERKSt10type_index.exit.thread
	callq	_ZN8pybind116detail13get_internalsEv
	movq	%rax, %rdi
	movq	%rbx, %rsi
	callq	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_
	testq	%rax, %rax
	je	.LBB113_6
# %bb.5:
	movq	16(%rax), %rax
	jmp	.LBB113_7
.LBB113_6:
	xorl	%eax, %eax
.LBB113_7:                              # %_ZN8pybind116detail20get_global_type_infoERKSt10type_index.exit
	testq	%rax, %rax
	setne	%cl
	xorb	$1, %bpl
	orb	%cl, %bpl
	je	.LBB113_9
.LBB113_8:
	addq	$96, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB113_9:
	.cfi_def_cfa_offset 128
	movq	(%rbx), %rax
	movq	8(%rax), %rax
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
	leaq	64(%rsp), %rbx
	movq	%rsp, %rdx
	movq	%rbx, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_@PLT
.Ltmp2275:
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp2276:
# %bb.10:
.Ltmp2278:
	leaq	.L.str.113(%rip), %rsi
	leaq	32(%rsp), %rdi
	leaq	64(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp2279:
# %bb.11:
.Ltmp2281:
	movq	%rsp, %rdi
	leaq	32(%rsp), %rsi
	movl	$34, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_@PLT
.Ltmp2282:
# %bb.12:
.Ltmp2284:
	movq	%rsp, %rdi
	callq	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp2285:
# %bb.13:
.LBB113_14:
.Ltmp2286:
	movq	%rax, %rbx
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB113_18
# %bb.15:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB113_20
.LBB113_16:
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB113_24
.LBB113_17:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit35
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB113_18:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB113_16
	jmp	.LBB113_20
.LBB113_19:
.Ltmp2283:
	movq	%rax, %rbx
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB113_16
.LBB113_20:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i30
	movq	48(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB113_17
	jmp	.LBB113_24
.LBB113_21:
.Ltmp2280:
	jmp	.LBB113_23
.LBB113_22:
.Ltmp2277:
.LBB113_23:
	movq	%rax, %rbx
	movq	64(%rsp), %rdi
	leaq	80(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB113_17
.LBB113_24:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i33
	movq	80(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end113:
	.size	_ZN8pybind116detail13get_type_infoERKSt10type_indexb, .Lfunc_end113-_ZN8pybind116detail13get_type_infoERKSt10type_indexb
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail13get_type_infoERKSt10type_indexb,"aG",@progbits,_ZN8pybind116detail13get_type_infoERKSt10type_indexb,comdat
	.p2align	2, 0x0
GCC_except_table113:
.Lexception59:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end59-.Lcst_begin59
.Lcst_begin59:
	.uleb128 .Lfunc_begin59-.Lfunc_begin59  # >> Call Site 1 <<
	.uleb128 .Ltmp2275-.Lfunc_begin59       #   Call between .Lfunc_begin59 and .Ltmp2275
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2275-.Lfunc_begin59       # >> Call Site 2 <<
	.uleb128 .Ltmp2276-.Ltmp2275            #   Call between .Ltmp2275 and .Ltmp2276
	.uleb128 .Ltmp2277-.Lfunc_begin59       #     jumps to .Ltmp2277
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2278-.Lfunc_begin59       # >> Call Site 3 <<
	.uleb128 .Ltmp2279-.Ltmp2278            #   Call between .Ltmp2278 and .Ltmp2279
	.uleb128 .Ltmp2280-.Lfunc_begin59       #     jumps to .Ltmp2280
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2281-.Lfunc_begin59       # >> Call Site 4 <<
	.uleb128 .Ltmp2282-.Ltmp2281            #   Call between .Ltmp2281 and .Ltmp2282
	.uleb128 .Ltmp2283-.Lfunc_begin59       #     jumps to .Ltmp2283
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2284-.Lfunc_begin59       # >> Call Site 5 <<
	.uleb128 .Ltmp2285-.Ltmp2284            #   Call between .Ltmp2284 and .Ltmp2285
	.uleb128 .Ltmp2286-.Lfunc_begin59       #     jumps to .Ltmp2286
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2285-.Lfunc_begin59       # >> Call Site 6 <<
	.uleb128 .Lfunc_end113-.Ltmp2285        #   Call between .Ltmp2285 and .Lfunc_end113
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end59:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5stackIbSt5dequeIbSaIbEEED2Ev,"axG",@progbits,_ZNSt5stackIbSt5dequeIbSaIbEEED2Ev,comdat
	.weak	_ZNSt5stackIbSt5dequeIbSaIbEEED2Ev # -- Begin function _ZNSt5stackIbSt5dequeIbSaIbEEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt5stackIbSt5dequeIbSaIbEEED2Ev,@function
_ZNSt5stackIbSt5dequeIbSaIbEEED2Ev:     # @_ZNSt5stackIbSt5dequeIbSaIbEEED2Ev
	.cfi_startproc
# %bb.0:
	movq	%rdi, %rax
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB114_6
# %bb.1:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	40(%rax), %rbx
	movq	72(%rax), %r14
	leaq	8(%r14), %rcx
	cmpq	%rcx, %rbx
	jae	.LBB114_5
# %bb.2:                                # %.lr.ph.i.i.i.preheader
	movq	%rax, %r15
	addq	$-8, %rbx
	.p2align	4, 0x90
.LBB114_3:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%rbx), %rdi
	addq	$8, %rbx
	movl	$512, %esi                      # imm = 0x200
	callq	_ZdlPvm@PLT
	cmpq	%r14, %rbx
	jb	.LBB114_3
# %bb.4:                                # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.loopexit.i.i
	movq	%r15, %rax
	movq	(%r15), %rdi
.LBB114_5:                              # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.i.i
	movq	8(%rax), %rsi
	shlq	$3, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB114_6:                              # %_ZNSt5dequeIbSaIbEED2Ev.exit
	.cfi_restore %rbx
	.cfi_restore %r14
	.cfi_restore %r15
	retq
.Lfunc_end114:
	.size	_ZNSt5stackIbSt5dequeIbSaIbEEED2Ev, .Lfunc_end114-_ZNSt5stackIbSt5dequeIbSaIbEEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIbSaIbEED2Ev,"axG",@progbits,_ZNSt11_Deque_baseIbSaIbEED2Ev,comdat
	.weak	_ZNSt11_Deque_baseIbSaIbEED2Ev  # -- Begin function _ZNSt11_Deque_baseIbSaIbEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt11_Deque_baseIbSaIbEED2Ev,@function
_ZNSt11_Deque_baseIbSaIbEED2Ev:         # @_ZNSt11_Deque_baseIbSaIbEED2Ev
	.cfi_startproc
# %bb.0:
	movq	%rdi, %rax
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB115_6
# %bb.1:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	40(%rax), %rbx
	movq	72(%rax), %r14
	leaq	8(%r14), %rcx
	cmpq	%rcx, %rbx
	jae	.LBB115_5
# %bb.2:                                # %.lr.ph.i.preheader
	movq	%rax, %r15
	addq	$-8, %rbx
	.p2align	4, 0x90
.LBB115_3:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%rbx), %rdi
	addq	$8, %rbx
	movl	$512, %esi                      # imm = 0x200
	callq	_ZdlPvm@PLT
	cmpq	%r14, %rbx
	jb	.LBB115_3
# %bb.4:                                # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.loopexit
	movq	%r15, %rax
	movq	(%r15), %rdi
.LBB115_5:                              # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit
	movq	8(%rax), %rsi
	shlq	$3, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB115_6:
	.cfi_restore %rbx
	.cfi_restore %r14
	.cfi_restore %r15
	retq
.Lfunc_end115:
	.size	_ZNSt11_Deque_baseIbSaIbEED2Ev, .Lfunc_end115-_ZNSt11_Deque_baseIbSaIbEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm,comdat
	.weak	_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm # -- Begin function _ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm
	.p2align	4, 0x90
	.type	_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm,@function
_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm: # @_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm
.Lfunc_begin60:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception60
# %bb.0:                                # %_ZNSt11_Deque_baseIbSaIbEE15_M_allocate_mapEm.exit
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	%rsi, %r12
	shrq	$9, %r12
	cmpq	$6, %r12
	movl	$5, %r15d
	cmovaeq	%r12, %r15
	leaq	1(%r12), %r13
	leaq	3(%r15), %rax
	movq	%rax, 8(%rdi)
	leaq	24(,%r15,8), %rdi
	callq	_Znwm@PLT
	movq	%rax, (%rbx)
	negq	%r13
	leaq	(%r15,%r13), %rcx
	addq	$3, %rcx
	andq	$-2, %rcx
	leaq	(%rax,%rcx,4), %r15
	leaq	(%r15,%r12,8), %r13
	addq	$8, %r13
	movq	%r15, %r12
	.p2align	4, 0x90
.LBB116_1:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp2287:
	movl	$512, %edi                      # imm = 0x200
	callq	_Znwm@PLT
.Ltmp2288:
# %bb.2:                                # %_ZNSt11_Deque_baseIbSaIbEE16_M_allocate_nodeEv.exit.i
                                        #   in Loop: Header=BB116_1 Depth=1
	movq	%rax, (%r12)
	addq	$8, %r12
	cmpq	%r13, %r12
	jb	.LBB116_1
# %bb.3:                                # %_ZNSt11_Deque_baseIbSaIbEE15_M_create_nodesEPPbS3_.exit
	movq	%r15, 40(%rbx)
	movq	(%r15), %rax
	movq	%rax, 24(%rbx)
	leaq	512(%rax), %rcx
	movq	%rcx, 32(%rbx)
	leaq	-8(%r13), %rcx
	movq	%rcx, 72(%rbx)
	movq	-8(%r13), %rcx
	movq	%rcx, 56(%rbx)
	leaq	512(%rcx), %rdx
	movq	%rdx, 64(%rbx)
	movq	%rax, 16(%rbx)
	andl	$511, %r14d                     # imm = 0x1FF
	addq	%rcx, %r14
	movq	%r14, 48(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB116_4:
	.cfi_def_cfa_offset 48
.Ltmp2289:
	movq	%rax, %rdi
	callq	__cxa_begin_catch@PLT
	cmpq	%r15, %r12
	jbe	.LBB116_6
	.p2align	4, 0x90
.LBB116_5:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r15), %rdi
	movl	$512, %esi                      # imm = 0x200
	callq	_ZdlPvm@PLT
	addq	$8, %r15
	cmpq	%r12, %r15
	jb	.LBB116_5
.LBB116_6:                              # %_ZNSt11_Deque_baseIbSaIbEE16_M_destroy_nodesEPPbS3_.exit.i
.Ltmp2290:
	callq	__cxa_rethrow@PLT
.Ltmp2291:
# %bb.7:
.LBB116_8:
.Ltmp2292:
	movq	%rax, %r14
.Ltmp2293:
	callq	__cxa_end_catch@PLT
.Ltmp2294:
# %bb.9:                                # %.body
	movq	%r14, %rdi
	callq	__cxa_begin_catch@PLT
	movq	(%rbx), %rdi
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	callq	_ZdlPvm@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rbx)
.Ltmp2296:
	callq	__cxa_rethrow@PLT
.Ltmp2297:
# %bb.13:
.LBB116_10:
.Ltmp2298:
	movq	%rax, %rbx
.Ltmp2299:
	callq	__cxa_end_catch@PLT
.Ltmp2300:
# %bb.11:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB116_12:
.Ltmp2301:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB116_14:
.Ltmp2295:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end116:
	.size	_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm, .Lfunc_end116-_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm,"aG",@progbits,_ZNSt11_Deque_baseIbSaIbEE17_M_initialize_mapEm,comdat
	.p2align	2, 0x0
GCC_except_table116:
.Lexception60:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase43-.Lttbaseref43
.Lttbaseref43:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end60-.Lcst_begin60
.Lcst_begin60:
	.uleb128 .Lfunc_begin60-.Lfunc_begin60  # >> Call Site 1 <<
	.uleb128 .Ltmp2287-.Lfunc_begin60       #   Call between .Lfunc_begin60 and .Ltmp2287
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2287-.Lfunc_begin60       # >> Call Site 2 <<
	.uleb128 .Ltmp2288-.Ltmp2287            #   Call between .Ltmp2287 and .Ltmp2288
	.uleb128 .Ltmp2289-.Lfunc_begin60       #     jumps to .Ltmp2289
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2288-.Lfunc_begin60       # >> Call Site 3 <<
	.uleb128 .Ltmp2290-.Ltmp2288            #   Call between .Ltmp2288 and .Ltmp2290
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2290-.Lfunc_begin60       # >> Call Site 4 <<
	.uleb128 .Ltmp2291-.Ltmp2290            #   Call between .Ltmp2290 and .Ltmp2291
	.uleb128 .Ltmp2292-.Lfunc_begin60       #     jumps to .Ltmp2292
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2293-.Lfunc_begin60       # >> Call Site 5 <<
	.uleb128 .Ltmp2294-.Ltmp2293            #   Call between .Ltmp2293 and .Ltmp2294
	.uleb128 .Ltmp2295-.Lfunc_begin60       #     jumps to .Ltmp2295
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2294-.Lfunc_begin60       # >> Call Site 6 <<
	.uleb128 .Ltmp2296-.Ltmp2294            #   Call between .Ltmp2294 and .Ltmp2296
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2296-.Lfunc_begin60       # >> Call Site 7 <<
	.uleb128 .Ltmp2297-.Ltmp2296            #   Call between .Ltmp2296 and .Ltmp2297
	.uleb128 .Ltmp2298-.Lfunc_begin60       #     jumps to .Ltmp2298
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2299-.Lfunc_begin60       # >> Call Site 8 <<
	.uleb128 .Ltmp2300-.Ltmp2299            #   Call between .Ltmp2299 and .Ltmp2300
	.uleb128 .Ltmp2301-.Lfunc_begin60       #     jumps to .Ltmp2301
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2300-.Lfunc_begin60       # >> Call Site 9 <<
	.uleb128 .Lfunc_end116-.Ltmp2300        #   Call between .Ltmp2300 and .Lfunc_end116
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end60:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase43:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	8(%rsi), %r12
	movabsq	$9223372036854775807, %rax      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rax, %r12
	je	.LBB117_9
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movl	%edx, %ebp
	movq	%rsi, %r14
	movq	%rdi, %rbx
	leaq	1(%r12), %r13
	movq	(%rsi), %rax
	leaq	16(%rsi), %r15
	movl	$15, %ecx
	cmpq	%r15, %rax
	je	.LBB117_3
# %bb.2:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	16(%r14), %rcx
.LBB117_3:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	cmpq	%rcx, %r13
	jbe	.LBB117_5
# %bb.4:
	movl	$1, %r8d
	movq	%r14, %rdi
	movq	%r12, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
	movq	(%r14), %rax
.LBB117_5:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc.exit
	movb	%bpl, (%rax,%r12)
	movq	%r13, 8(%r14)
	movq	(%r14), %rax
	movb	$0, 1(%rax,%r12)
	leaq	16(%rbx), %rdi
	movq	%rdi, (%rbx)
	movq	(%r14), %rax
	cmpq	%r15, %rax
	je	.LBB117_6
# %bb.7:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i
	movq	%rax, (%rbx)
	movq	16(%r14), %rax
	movq	%rax, 16(%rbx)
	movq	8(%r14), %r12
	jmp	.LBB117_8
.LBB117_6:
	movq	8(%r14), %r12
	leaq	1(%r12), %rdx
	movq	%r15, %rsi
	callq	memcpy@PLT
.LBB117_8:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	%r12, 8(%rbx)
	movq	%r15, (%r14)
	movq	$0, 8(%r14)
	movb	$0, 16(%r14)
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB117_9:
	.cfi_def_cfa_offset 64
	leaq	.L.str.115(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end117:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_, .Lfunc_end117-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail30get_local_internals_pp_managerEv,"axG",@progbits,_ZN8pybind116detail30get_local_internals_pp_managerEv,comdat
	.hidden	_ZN8pybind116detail30get_local_internals_pp_managerEv # -- Begin function _ZN8pybind116detail30get_local_internals_pp_managerEv
	.weak	_ZN8pybind116detail30get_local_internals_pp_managerEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail30get_local_internals_pp_managerEv,@function
_ZN8pybind116detail30get_local_internals_pp_managerEv: # @_ZN8pybind116detail30get_local_internals_pp_managerEv
.Lfunc_begin61:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception61
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$40, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movzbl	_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11(%rip), %eax
	testb	%al, %al
	je	.LBB118_1
.LBB118_7:
	movzbl	_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager(%rip), %eax
	testb	%al, %al
	je	.LBB118_8
.LBB118_11:
	leaq	_ZZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager(%rip), %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB118_1:
	.cfi_def_cfa_offset 64
	leaq	_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11(%rip), %rbx
	movq	%rbx, %rdi
	callq	__cxa_guard_acquire@PLT
	testl	%eax, %eax
	je	.LBB118_7
# %bb.2:
.Ltmp2302:
	leaq	_ZZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11(%rip), %rsi
	leaq	8(%rsp), %rdi
	callq	_ZNSt7__cxx119to_stringEm@PLT
.Ltmp2303:
# %bb.3:
.Ltmp2305:
	leaq	_ZZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11(%rip), %rdi
	leaq	.L.str.114(%rip), %rsi
	leaq	8(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp2306:
# %bb.4:
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB118_6
# %bb.5:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB118_6:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@GOTPCREL(%rip), %rdi
	leaq	_ZZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11(%rip), %rsi
	leaq	__dso_handle(%rip), %rdx
	callq	__cxa_atexit@PLT
	leaq	_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11(%rip), %rdi
	callq	__cxa_guard_release@PLT
	jmp	.LBB118_7
.LBB118_8:
	leaq	_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager(%rip), %rbx
	movq	%rbx, %rdi
	callq	__cxa_guard_acquire@PLT
	testl	%eax, %eax
	je	.LBB118_11
# %bb.9:
	movq	_ZZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11(%rip), %rsi
.Ltmp2308:
	leaq	_ZZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager(%rip), %rdi
	xorl	%edx, %edx
	callq	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEEC2EPKcPFvPS2_E
.Ltmp2309:
# %bb.10:
	leaq	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEED2Ev(%rip), %rdi
	leaq	_ZZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager(%rip), %rsi
	leaq	__dso_handle(%rip), %rdx
	callq	__cxa_atexit@PLT
	leaq	_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager(%rip), %rdi
	callq	__cxa_guard_release@PLT
	jmp	.LBB118_11
.LBB118_13:
.Ltmp2307:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB118_17
# %bb.14:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i7
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	%rbx, %rdi
	callq	__cxa_guard_abort@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB118_15:
.Ltmp2310:
	jmp	.LBB118_16
.LBB118_12:
.Ltmp2304:
.LBB118_16:
	movq	%rax, %r14
.LBB118_17:
	movq	%rbx, %rdi
	callq	__cxa_guard_abort@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end118:
	.size	_ZN8pybind116detail30get_local_internals_pp_managerEv, .Lfunc_end118-_ZN8pybind116detail30get_local_internals_pp_managerEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail30get_local_internals_pp_managerEv,"aG",@progbits,_ZN8pybind116detail30get_local_internals_pp_managerEv,comdat
	.p2align	2, 0x0
GCC_except_table118:
.Lexception61:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end61-.Lcst_begin61
.Lcst_begin61:
	.uleb128 .Ltmp2302-.Lfunc_begin61       # >> Call Site 1 <<
	.uleb128 .Ltmp2303-.Ltmp2302            #   Call between .Ltmp2302 and .Ltmp2303
	.uleb128 .Ltmp2304-.Lfunc_begin61       #     jumps to .Ltmp2304
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2305-.Lfunc_begin61       # >> Call Site 2 <<
	.uleb128 .Ltmp2306-.Ltmp2305            #   Call between .Ltmp2305 and .Ltmp2306
	.uleb128 .Ltmp2307-.Lfunc_begin61       #     jumps to .Ltmp2307
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2308-.Lfunc_begin61       # >> Call Site 3 <<
	.uleb128 .Ltmp2309-.Ltmp2308            #   Call between .Ltmp2308 and .Ltmp2309
	.uleb128 .Ltmp2310-.Lfunc_begin61       #     jumps to .Ltmp2310
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2309-.Lfunc_begin61       # >> Call Site 4 <<
	.uleb128 .Lfunc_end118-.Ltmp2309        #   Call between .Ltmp2309 and .Lfunc_end118
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end61:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE6get_ppEv,"axG",@progbits,_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE6get_ppEv,comdat
	.hidden	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE6get_ppEv # -- Begin function _ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE6get_ppEv
	.weak	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE6get_ppEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE6get_ppEv,@function
_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE6get_ppEv: # @_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE6get_ppEv
.Lfunc_begin62:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception62
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movl	_ZZN8pybind116detail25get_num_interpreters_seenEvE7counter(%rip), %eax
	cmpl	$2, %eax
	jl	.LBB119_14
# %bb.1:
	callq	_PyThreadState_UncheckedGet@PLT
	testq	%rax, %rax
	je	.LBB119_9
# %bb.2:
	movq	%rax, %r14
	movq	16(%rax), %r15
	leaq	16(%rbx), %rdi
	callq	PyThread_tss_get@PLT
	cmpq	%rax, %r15
	je	.LBB119_8
# %bb.3:
	callq	PyGILState_Ensure@PLT
	movl	%eax, %ebp
	movq	%r14, %rax
	jmp	.LBB119_4
.LBB119_14:
	movq	32(%rbx), %rax
	testq	%rax, %rax
	jne	.LBB119_18
# %bb.15:
	callq	PyGILState_Ensure@PLT
	movl	%eax, %ebp
.Ltmp2311:
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE30get_or_create_pp_in_state_dictEv
.Ltmp2312:
# %bb.16:
	movq	%rax, 32(%rbx)
.Ltmp2317:
	movl	%ebp, %edi
	callq	PyGILState_Release@PLT
.Ltmp2318:
# %bb.17:                               # %._ZN8pybind1125gil_scoped_acquire_simpleD2Ev.exit15_crit_edge
	movq	32(%rbx), %rax
.LBB119_18:                             # %_ZN8pybind1125gil_scoped_acquire_simpleD2Ev.exit15
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB119_9:
	.cfi_def_cfa_offset 48
	callq	PyGILState_Ensure@PLT
	movl	%eax, %ebp
.Ltmp2320:
	callq	_PyThreadState_UncheckedGet@PLT
.Ltmp2321:
.LBB119_4:                              # %_ZN8pybind116detail26get_thread_state_uncheckedEv.exit
	movq	16(%rax), %rsi
	leaq	16(%rbx), %rdi
.Ltmp2322:
	callq	PyThread_tss_set@PLT
.Ltmp2323:
# %bb.5:                                # %_ZN8pybind1123thread_specific_storageI3_isEaSEPS1_.exit
.Ltmp2324:
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE30get_or_create_pp_in_state_dictEv
.Ltmp2325:
# %bb.6:
	leaq	24(%rbx), %rdi
.Ltmp2326:
	movq	%rax, %rsi
	callq	PyThread_tss_set@PLT
.Ltmp2327:
# %bb.7:                                # %_ZN8pybind1123thread_specific_storageISt10unique_ptrINS_6detail15local_internalsESt14default_deleteIS3_EEEaSEPS6_.exit
.Ltmp2332:
	movl	%ebp, %edi
	callq	PyGILState_Release@PLT
.Ltmp2333:
.LBB119_8:                              # %_ZN8pybind1125gil_scoped_acquire_simpleD2Ev.exit14
	addq	$24, %rbx
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	PyThread_tss_get@PLT            # TAILCALL
.LBB119_19:
	.cfi_def_cfa_offset 48
.Ltmp2319:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB119_20:
.Ltmp2313:
	movq	%rax, %rbx
.Ltmp2314:
	movl	%ebp, %edi
	callq	PyGILState_Release@PLT
.Ltmp2315:
	jmp	.LBB119_11
.LBB119_21:
.Ltmp2316:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB119_13:
.Ltmp2334:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB119_10:
.Ltmp2328:
	movq	%rax, %rbx
.Ltmp2329:
	movl	%ebp, %edi
	callq	PyGILState_Release@PLT
.Ltmp2330:
.LBB119_11:                             # %_ZN8pybind1125gil_scoped_acquire_simpleD2Ev.exit
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB119_12:
.Ltmp2331:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end119:
	.size	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE6get_ppEv, .Lfunc_end119-_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE6get_ppEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE6get_ppEv,"aG",@progbits,_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE6get_ppEv,comdat
	.p2align	2, 0x0
GCC_except_table119:
.Lexception62:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase44-.Lttbaseref44
.Lttbaseref44:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end62-.Lcst_begin62
.Lcst_begin62:
	.uleb128 .Lfunc_begin62-.Lfunc_begin62  # >> Call Site 1 <<
	.uleb128 .Ltmp2311-.Lfunc_begin62       #   Call between .Lfunc_begin62 and .Ltmp2311
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2311-.Lfunc_begin62       # >> Call Site 2 <<
	.uleb128 .Ltmp2312-.Ltmp2311            #   Call between .Ltmp2311 and .Ltmp2312
	.uleb128 .Ltmp2313-.Lfunc_begin62       #     jumps to .Ltmp2313
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2317-.Lfunc_begin62       # >> Call Site 3 <<
	.uleb128 .Ltmp2318-.Ltmp2317            #   Call between .Ltmp2317 and .Ltmp2318
	.uleb128 .Ltmp2319-.Lfunc_begin62       #     jumps to .Ltmp2319
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2318-.Lfunc_begin62       # >> Call Site 4 <<
	.uleb128 .Ltmp2320-.Ltmp2318            #   Call between .Ltmp2318 and .Ltmp2320
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2320-.Lfunc_begin62       # >> Call Site 5 <<
	.uleb128 .Ltmp2327-.Ltmp2320            #   Call between .Ltmp2320 and .Ltmp2327
	.uleb128 .Ltmp2328-.Lfunc_begin62       #     jumps to .Ltmp2328
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2332-.Lfunc_begin62       # >> Call Site 6 <<
	.uleb128 .Ltmp2333-.Ltmp2332            #   Call between .Ltmp2332 and .Ltmp2333
	.uleb128 .Ltmp2334-.Lfunc_begin62       #     jumps to .Ltmp2334
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2333-.Lfunc_begin62       # >> Call Site 7 <<
	.uleb128 .Ltmp2314-.Ltmp2333            #   Call between .Ltmp2333 and .Ltmp2314
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2314-.Lfunc_begin62       # >> Call Site 8 <<
	.uleb128 .Ltmp2315-.Ltmp2314            #   Call between .Ltmp2314 and .Ltmp2315
	.uleb128 .Ltmp2316-.Lfunc_begin62       #     jumps to .Ltmp2316
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2329-.Lfunc_begin62       # >> Call Site 9 <<
	.uleb128 .Ltmp2330-.Ltmp2329            #   Call between .Ltmp2329 and .Ltmp2330
	.uleb128 .Ltmp2331-.Lfunc_begin62       #     jumps to .Ltmp2331
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2330-.Lfunc_begin62       # >> Call Site 10 <<
	.uleb128 .Lfunc_end119-.Ltmp2330        #   Call between .Ltmp2330 and .Lfunc_end119
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end62:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase44:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEEC2EPKcPFvPS2_E,"axG",@progbits,_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEEC2EPKcPFvPS2_E,comdat
	.hidden	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEEC2EPKcPFvPS2_E # -- Begin function _ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEEC2EPKcPFvPS2_E
	.weak	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEEC2EPKcPFvPS2_E
	.p2align	4, 0x90
	.type	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEEC2EPKcPFvPS2_E,@function
_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEEC2EPKcPFvPS2_E: # @_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEEC2EPKcPFvPS2_E
.Lfunc_begin63:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception63
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	movq	%rsi, (%rdi)
	movq	%rdx, 8(%rdi)
	leaq	16(%rdi), %rbx
	movq	$0, 16(%rdi)
	movq	%rbx, %rdi
	callq	PyThread_tss_create@PLT
	testl	%eax, %eax
	jne	.LBB120_9
# %bb.1:                                # %_ZN8pybind1123thread_specific_storageI3_isEC2Ev.exit
	movq	$0, 24(%r14)
	addq	$24, %r14
.Ltmp2335:
	movq	%r14, %rdi
	callq	PyThread_tss_create@PLT
.Ltmp2336:
# %bb.2:                                # %.noexc
	testl	%eax, %eax
	jne	.LBB120_3
# %bb.5:                                # %_ZN8pybind1123thread_specific_storageISt10unique_ptrINS_6detail15local_internalsESt14default_deleteIS3_EEEC2Ev.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB120_9:
	.cfi_def_cfa_offset 32
	leaq	.L.str.56(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.LBB120_3:
.Ltmp2337:
	leaq	.L.str.56(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp2338:
# %bb.4:                                # %.noexc4
.LBB120_7:
.Ltmp2339:
	movq	%rax, %r14
.Ltmp2340:
	movq	%rbx, %rdi
	callq	PyThread_tss_delete@PLT
.Ltmp2341:
# %bb.8:                                # %_ZN8pybind1123thread_specific_storageI3_isED2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB120_6:
.Ltmp2342:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end120:
	.size	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEEC2EPKcPFvPS2_E, .Lfunc_end120-_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEEC2EPKcPFvPS2_E
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEEC2EPKcPFvPS2_E,"aG",@progbits,_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEEC2EPKcPFvPS2_E,comdat
	.p2align	2, 0x0
GCC_except_table120:
.Lexception63:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase45-.Lttbaseref45
.Lttbaseref45:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end63-.Lcst_begin63
.Lcst_begin63:
	.uleb128 .Lfunc_begin63-.Lfunc_begin63  # >> Call Site 1 <<
	.uleb128 .Ltmp2335-.Lfunc_begin63       #   Call between .Lfunc_begin63 and .Ltmp2335
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2335-.Lfunc_begin63       # >> Call Site 2 <<
	.uleb128 .Ltmp2336-.Ltmp2335            #   Call between .Ltmp2335 and .Ltmp2336
	.uleb128 .Ltmp2339-.Lfunc_begin63       #     jumps to .Ltmp2339
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2336-.Lfunc_begin63       # >> Call Site 3 <<
	.uleb128 .Ltmp2337-.Ltmp2336            #   Call between .Ltmp2336 and .Ltmp2337
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2337-.Lfunc_begin63       # >> Call Site 4 <<
	.uleb128 .Ltmp2338-.Ltmp2337            #   Call between .Ltmp2337 and .Ltmp2338
	.uleb128 .Ltmp2339-.Lfunc_begin63       #     jumps to .Ltmp2339
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2340-.Lfunc_begin63       # >> Call Site 5 <<
	.uleb128 .Ltmp2341-.Ltmp2340            #   Call between .Ltmp2340 and .Ltmp2341
	.uleb128 .Ltmp2342-.Lfunc_begin63       #     jumps to .Ltmp2342
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2341-.Lfunc_begin63       # >> Call Site 6 <<
	.uleb128 .Lfunc_end120-.Ltmp2341        #   Call between .Ltmp2341 and .Lfunc_end120
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end63:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase45:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEED2Ev,"axG",@progbits,_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEED2Ev,comdat
	.hidden	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEED2Ev # -- Begin function _ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEED2Ev
	.weak	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEED2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEED2Ev,@function
_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEED2Ev: # @_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEED2Ev
.Lfunc_begin64:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception64
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	addq	$24, %rdi
.Ltmp2343:
	callq	PyThread_tss_delete@PLT
.Ltmp2344:
# %bb.1:                                # %_ZN8pybind1123thread_specific_storageISt10unique_ptrINS_6detail15local_internalsESt14default_deleteIS3_EEED2Ev.exit
	addq	$16, %rbx
.Ltmp2346:
	movq	%rbx, %rdi
	callq	PyThread_tss_delete@PLT
.Ltmp2347:
# %bb.2:                                # %_ZN8pybind1123thread_specific_storageI3_isED2Ev.exit
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB121_4:
	.cfi_def_cfa_offset 16
.Ltmp2348:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB121_3:
.Ltmp2345:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end121:
	.size	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEED2Ev, .Lfunc_end121-_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEED2Ev,"aG",@progbits,_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table121:
.Lexception64:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase46-.Lttbaseref46
.Lttbaseref46:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end64-.Lcst_begin64
.Lcst_begin64:
	.uleb128 .Ltmp2343-.Lfunc_begin64       # >> Call Site 1 <<
	.uleb128 .Ltmp2344-.Ltmp2343            #   Call between .Ltmp2343 and .Ltmp2344
	.uleb128 .Ltmp2345-.Lfunc_begin64       #     jumps to .Ltmp2345
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2346-.Lfunc_begin64       # >> Call Site 2 <<
	.uleb128 .Ltmp2347-.Ltmp2346            #   Call between .Ltmp2346 and .Ltmp2347
	.uleb128 .Ltmp2348-.Lfunc_begin64       #     jumps to .Ltmp2348
	.byte	1                               #   On action: 1
.Lcst_end64:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase46:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE30get_or_create_pp_in_state_dictEv,"axG",@progbits,_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE30get_or_create_pp_in_state_dictEv,comdat
	.hidden	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE30get_or_create_pp_in_state_dictEv # -- Begin function _ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE30get_or_create_pp_in_state_dictEv
	.weak	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE30get_or_create_pp_in_state_dictEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE30get_or_create_pp_in_state_dictEv,@function
_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE30get_or_create_pp_in_state_dictEv: # @_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE30get_or_create_pp_in_state_dictEv
.Lfunc_begin65:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception65
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$96, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %r14
	leaq	72(%rsp), %rsi
	leaq	80(%rsp), %rdx
	leaq	64(%rsp), %rdi
	callq	PyErr_Fetch@PLT
.Ltmp2349:
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind116detail21get_python_state_dictEv
.Ltmp2350:
# %bb.1:
.Ltmp2352:
	movq	%rsp, %rdi
	leaq	32(%rsp), %rsi
	callq	_ZN8pybind114dictC2EONS_6objectE
.Ltmp2353:
# %bb.2:
.Ltmp2358:
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2359:
# %bb.3:                                # %_ZN8pybind116objectD2Ev.exit
	movq	(%rsp), %rdi
	movq	(%r14), %rsi
.Ltmp2361:
	callq	_ZN8pybind116detail18dict_getitemstringEP7_objectPKc
.Ltmp2362:
# %bb.4:                                # %.noexc
	testq	%rax, %rax
	je	.LBB122_12
# %bb.5:                                # %.split.i
	movl	(%rax), %ecx
	incl	%ecx
	je	.LBB122_7
# %bb.6:
	movl	%ecx, (%rax)
.LBB122_7:
	movq	%rax, 16(%rsp)
.Ltmp2363:
	movq	%rax, %rdi
	xorl	%esi, %esi
	callq	PyCapsule_GetPointer@PLT
.Ltmp2364:
# %bb.8:
	movq	%rax, %rbx
	testq	%rax, %rax
	je	.LBB122_9
# %bb.22:
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.LBB122_24
# %bb.23:
	movq	(%rbx), %rdi
.Ltmp2365:
	callq	*%rax
.Ltmp2366:
	jmp	.LBB122_24
.LBB122_12:
.Ltmp2375:
	callq	PyErr_Occurred@PLT
.Ltmp2376:
# %bb.13:                               # %.noexc29
	testq	%rax, %rax
	jne	.LBB122_14
# %bb.28:
	movq	$0, 16(%rsp)
.Ltmp2383:
	movl	$8, %edi
	callq	_Znwm@PLT
.Ltmp2384:
# %bb.29:
	movq	%rax, %rbx
	movq	$0, (%rax)
.Ltmp2386:
	leaq	8(%rsp), %rdi
	movq	%rax, %rsi
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	_ZN8pybind117capsuleC2EPKvPKcPFvP7_objectE
.Ltmp2387:
# %bb.30:
	movq	(%r14), %rsi
	movq	(%rsp), %r14
.Ltmp2389:
	leaq	24(%rsp), %rdi
	callq	_ZN8pybind113strC2EPKc
.Ltmp2390:
# %bb.31:                               # %.noexc32
	movq	24(%rsp), %r15
	movq	$0, 24(%rsp)
	movq	%r14, 40(%rsp)
	movq	%r15, 48(%rsp)
	movq	$0, 88(%rsp)
	movq	$0, 56(%rsp)
.Ltmp2392:
	leaq	88(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2393:
# %bb.32:                               # %_ZN8pybind116objectD2Ev.exit.i
.Ltmp2395:
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2396:
# %bb.33:
	movq	8(%rsp), %rdx
.Ltmp2398:
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	PyObject_SetItem@PLT
.Ltmp2399:
# %bb.34:                               # %.noexc34
	testl	%eax, %eax
	jne	.LBB122_35
# %bb.40:                               # %_ZNO8pybind116detail8accessorINS0_17accessor_policies12generic_itemEEaSINS_7capsuleEEEvOT_.exit
.Ltmp2415:
	leaq	56(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2416:
# %bb.41:                               # %_ZN8pybind116objectD2Ev.exit.i38
.Ltmp2418:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2419:
# %bb.42:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev.exit
.Ltmp2421:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2422:
.LBB122_24:
.Ltmp2424:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2425:
# %bb.25:                               # %_ZN8pybind116objectD2Ev.exit41
.Ltmp2427:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2428:
# %bb.26:                               # %_ZN8pybind116objectD2Ev.exit42
	movq	64(%rsp), %rdi
	movq	72(%rsp), %rsi
	movq	80(%rsp), %rdx
.Ltmp2430:
	callq	PyErr_Restore@PLT
.Ltmp2431:
# %bb.27:                               # %_ZN8pybind1111error_scopeD2Ev.exit
	movq	%rbx, %rax
	addq	$96, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB122_9:
	.cfi_def_cfa_offset 128
	movq	PyExc_SystemError@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
.Ltmp2367:
	leaq	.L.str.57(%rip), %rsi
	callq	_ZN8pybind1110raise_fromEP7_objectPKc
.Ltmp2368:
# %bb.10:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2369:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2370:
# %bb.11:
.Ltmp2372:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2373:
# %bb.60:
.LBB122_14:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2377:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2378:
# %bb.15:
.Ltmp2380:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2381:
# %bb.16:                               # %.noexc30
.LBB122_35:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2400:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2401:
# %bb.36:
.Ltmp2403:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2404:
# %bb.37:                               # %.noexc35
.LBB122_21:
.Ltmp2371:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB122_55
.LBB122_38:
.Ltmp2402:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB122_46
.LBB122_57:
.Ltmp2379:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB122_58
.LBB122_65:
.Ltmp2423:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB122_64:
.Ltmp2420:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB122_39:
.Ltmp2417:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB122_63:
.Ltmp2397:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB122_62:
.Ltmp2394:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB122_44:
.Ltmp2391:
	movq	%rax, %rbx
	jmp	.LBB122_47
.LBB122_49:
.Ltmp2388:
	jmp	.LBB122_54
.LBB122_43:
.Ltmp2385:
	jmp	.LBB122_54
.LBB122_45:
.Ltmp2405:
	movq	%rax, %rbx
.LBB122_46:                             # %.body36
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev
.LBB122_47:
.Ltmp2406:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2407:
	jmp	.LBB122_55
.LBB122_48:
.Ltmp2408:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB122_52:
.Ltmp2432:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB122_51:
.Ltmp2429:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB122_50:
.Ltmp2426:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB122_61:
.Ltmp2360:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB122_17:
.Ltmp2354:
	movq	%rax, %rbx
.Ltmp2355:
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2356:
	jmp	.LBB122_59
.LBB122_18:
.Ltmp2357:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB122_19:
.Ltmp2351:
	movq	%rax, %rbx
	leaq	64(%rsp), %rdi
	callq	_ZN8pybind1111error_scopeD2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB122_53:
.Ltmp2374:
.LBB122_54:
	movq	%rax, %rbx
.LBB122_55:
.Ltmp2409:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2410:
	jmp	.LBB122_58
.LBB122_56:
.Ltmp2411:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB122_20:
.Ltmp2382:
	movq	%rax, %rbx
.LBB122_58:                             # %.body
.Ltmp2412:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2413:
.LBB122_59:                             # %_ZN8pybind116objectD2Ev.exit44
	leaq	64(%rsp), %rdi
	callq	_ZN8pybind1111error_scopeD2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB122_66:
.Ltmp2414:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end122:
	.size	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE30get_or_create_pp_in_state_dictEv, .Lfunc_end122-_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE30get_or_create_pp_in_state_dictEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE30get_or_create_pp_in_state_dictEv,"aG",@progbits,_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE30get_or_create_pp_in_state_dictEv,comdat
	.p2align	2, 0x0
GCC_except_table122:
.Lexception65:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase47-.Lttbaseref47
.Lttbaseref47:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end65-.Lcst_begin65
.Lcst_begin65:
	.uleb128 .Lfunc_begin65-.Lfunc_begin65  # >> Call Site 1 <<
	.uleb128 .Ltmp2349-.Lfunc_begin65       #   Call between .Lfunc_begin65 and .Ltmp2349
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2349-.Lfunc_begin65       # >> Call Site 2 <<
	.uleb128 .Ltmp2350-.Ltmp2349            #   Call between .Ltmp2349 and .Ltmp2350
	.uleb128 .Ltmp2351-.Lfunc_begin65       #     jumps to .Ltmp2351
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2352-.Lfunc_begin65       # >> Call Site 3 <<
	.uleb128 .Ltmp2353-.Ltmp2352            #   Call between .Ltmp2352 and .Ltmp2353
	.uleb128 .Ltmp2354-.Lfunc_begin65       #     jumps to .Ltmp2354
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2358-.Lfunc_begin65       # >> Call Site 4 <<
	.uleb128 .Ltmp2359-.Ltmp2358            #   Call between .Ltmp2358 and .Ltmp2359
	.uleb128 .Ltmp2360-.Lfunc_begin65       #     jumps to .Ltmp2360
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2361-.Lfunc_begin65       # >> Call Site 5 <<
	.uleb128 .Ltmp2362-.Ltmp2361            #   Call between .Ltmp2361 and .Ltmp2362
	.uleb128 .Ltmp2382-.Lfunc_begin65       #     jumps to .Ltmp2382
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2363-.Lfunc_begin65       # >> Call Site 6 <<
	.uleb128 .Ltmp2366-.Ltmp2363            #   Call between .Ltmp2363 and .Ltmp2366
	.uleb128 .Ltmp2374-.Lfunc_begin65       #     jumps to .Ltmp2374
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2375-.Lfunc_begin65       # >> Call Site 7 <<
	.uleb128 .Ltmp2376-.Ltmp2375            #   Call between .Ltmp2375 and .Ltmp2376
	.uleb128 .Ltmp2382-.Lfunc_begin65       #     jumps to .Ltmp2382
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2383-.Lfunc_begin65       # >> Call Site 8 <<
	.uleb128 .Ltmp2384-.Ltmp2383            #   Call between .Ltmp2383 and .Ltmp2384
	.uleb128 .Ltmp2385-.Lfunc_begin65       #     jumps to .Ltmp2385
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2386-.Lfunc_begin65       # >> Call Site 9 <<
	.uleb128 .Ltmp2387-.Ltmp2386            #   Call between .Ltmp2386 and .Ltmp2387
	.uleb128 .Ltmp2388-.Lfunc_begin65       #     jumps to .Ltmp2388
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2389-.Lfunc_begin65       # >> Call Site 10 <<
	.uleb128 .Ltmp2390-.Ltmp2389            #   Call between .Ltmp2389 and .Ltmp2390
	.uleb128 .Ltmp2391-.Lfunc_begin65       #     jumps to .Ltmp2391
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2392-.Lfunc_begin65       # >> Call Site 11 <<
	.uleb128 .Ltmp2393-.Ltmp2392            #   Call between .Ltmp2392 and .Ltmp2393
	.uleb128 .Ltmp2394-.Lfunc_begin65       #     jumps to .Ltmp2394
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2395-.Lfunc_begin65       # >> Call Site 12 <<
	.uleb128 .Ltmp2396-.Ltmp2395            #   Call between .Ltmp2395 and .Ltmp2396
	.uleb128 .Ltmp2397-.Lfunc_begin65       #     jumps to .Ltmp2397
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2398-.Lfunc_begin65       # >> Call Site 13 <<
	.uleb128 .Ltmp2399-.Ltmp2398            #   Call between .Ltmp2398 and .Ltmp2399
	.uleb128 .Ltmp2405-.Lfunc_begin65       #     jumps to .Ltmp2405
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2415-.Lfunc_begin65       # >> Call Site 14 <<
	.uleb128 .Ltmp2416-.Ltmp2415            #   Call between .Ltmp2415 and .Ltmp2416
	.uleb128 .Ltmp2417-.Lfunc_begin65       #     jumps to .Ltmp2417
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2418-.Lfunc_begin65       # >> Call Site 15 <<
	.uleb128 .Ltmp2419-.Ltmp2418            #   Call between .Ltmp2418 and .Ltmp2419
	.uleb128 .Ltmp2420-.Lfunc_begin65       #     jumps to .Ltmp2420
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2421-.Lfunc_begin65       # >> Call Site 16 <<
	.uleb128 .Ltmp2422-.Ltmp2421            #   Call between .Ltmp2421 and .Ltmp2422
	.uleb128 .Ltmp2423-.Lfunc_begin65       #     jumps to .Ltmp2423
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2424-.Lfunc_begin65       # >> Call Site 17 <<
	.uleb128 .Ltmp2425-.Ltmp2424            #   Call between .Ltmp2424 and .Ltmp2425
	.uleb128 .Ltmp2426-.Lfunc_begin65       #     jumps to .Ltmp2426
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2427-.Lfunc_begin65       # >> Call Site 18 <<
	.uleb128 .Ltmp2428-.Ltmp2427            #   Call between .Ltmp2427 and .Ltmp2428
	.uleb128 .Ltmp2429-.Lfunc_begin65       #     jumps to .Ltmp2429
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2430-.Lfunc_begin65       # >> Call Site 19 <<
	.uleb128 .Ltmp2431-.Ltmp2430            #   Call between .Ltmp2430 and .Ltmp2431
	.uleb128 .Ltmp2432-.Lfunc_begin65       #     jumps to .Ltmp2432
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2367-.Lfunc_begin65       # >> Call Site 20 <<
	.uleb128 .Ltmp2368-.Ltmp2367            #   Call between .Ltmp2367 and .Ltmp2368
	.uleb128 .Ltmp2374-.Lfunc_begin65       #     jumps to .Ltmp2374
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2368-.Lfunc_begin65       # >> Call Site 21 <<
	.uleb128 .Ltmp2369-.Ltmp2368            #   Call between .Ltmp2368 and .Ltmp2369
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2369-.Lfunc_begin65       # >> Call Site 22 <<
	.uleb128 .Ltmp2370-.Ltmp2369            #   Call between .Ltmp2369 and .Ltmp2370
	.uleb128 .Ltmp2371-.Lfunc_begin65       #     jumps to .Ltmp2371
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2372-.Lfunc_begin65       # >> Call Site 23 <<
	.uleb128 .Ltmp2373-.Ltmp2372            #   Call between .Ltmp2372 and .Ltmp2373
	.uleb128 .Ltmp2374-.Lfunc_begin65       #     jumps to .Ltmp2374
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2373-.Lfunc_begin65       # >> Call Site 24 <<
	.uleb128 .Ltmp2377-.Ltmp2373            #   Call between .Ltmp2373 and .Ltmp2377
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2377-.Lfunc_begin65       # >> Call Site 25 <<
	.uleb128 .Ltmp2378-.Ltmp2377            #   Call between .Ltmp2377 and .Ltmp2378
	.uleb128 .Ltmp2379-.Lfunc_begin65       #     jumps to .Ltmp2379
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2380-.Lfunc_begin65       # >> Call Site 26 <<
	.uleb128 .Ltmp2381-.Ltmp2380            #   Call between .Ltmp2380 and .Ltmp2381
	.uleb128 .Ltmp2382-.Lfunc_begin65       #     jumps to .Ltmp2382
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2381-.Lfunc_begin65       # >> Call Site 27 <<
	.uleb128 .Ltmp2400-.Ltmp2381            #   Call between .Ltmp2381 and .Ltmp2400
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2400-.Lfunc_begin65       # >> Call Site 28 <<
	.uleb128 .Ltmp2401-.Ltmp2400            #   Call between .Ltmp2400 and .Ltmp2401
	.uleb128 .Ltmp2402-.Lfunc_begin65       #     jumps to .Ltmp2402
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2403-.Lfunc_begin65       # >> Call Site 29 <<
	.uleb128 .Ltmp2404-.Ltmp2403            #   Call between .Ltmp2403 and .Ltmp2404
	.uleb128 .Ltmp2405-.Lfunc_begin65       #     jumps to .Ltmp2405
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2404-.Lfunc_begin65       # >> Call Site 30 <<
	.uleb128 .Ltmp2406-.Ltmp2404            #   Call between .Ltmp2404 and .Ltmp2406
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2406-.Lfunc_begin65       # >> Call Site 31 <<
	.uleb128 .Ltmp2407-.Ltmp2406            #   Call between .Ltmp2406 and .Ltmp2407
	.uleb128 .Ltmp2408-.Lfunc_begin65       #     jumps to .Ltmp2408
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2355-.Lfunc_begin65       # >> Call Site 32 <<
	.uleb128 .Ltmp2356-.Ltmp2355            #   Call between .Ltmp2355 and .Ltmp2356
	.uleb128 .Ltmp2357-.Lfunc_begin65       #     jumps to .Ltmp2357
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2356-.Lfunc_begin65       # >> Call Site 33 <<
	.uleb128 .Ltmp2409-.Ltmp2356            #   Call between .Ltmp2356 and .Ltmp2409
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2409-.Lfunc_begin65       # >> Call Site 34 <<
	.uleb128 .Ltmp2410-.Ltmp2409            #   Call between .Ltmp2409 and .Ltmp2410
	.uleb128 .Ltmp2411-.Lfunc_begin65       #     jumps to .Ltmp2411
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2412-.Lfunc_begin65       # >> Call Site 35 <<
	.uleb128 .Ltmp2413-.Ltmp2412            #   Call between .Ltmp2412 and .Ltmp2413
	.uleb128 .Ltmp2414-.Lfunc_begin65       #     jumps to .Ltmp2414
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2413-.Lfunc_begin65       # >> Call Site 36 <<
	.uleb128 .Lfunc_end122-.Ltmp2413        #   Call between .Ltmp2413 and .Lfunc_end122
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end65:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase47:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt15__uniq_ptr_implIN8pybind116detail15local_internalsESt14default_deleteIS2_EE5resetEPS2_,"axG",@progbits,_ZNSt15__uniq_ptr_implIN8pybind116detail15local_internalsESt14default_deleteIS2_EE5resetEPS2_,comdat
	.hidden	_ZNSt15__uniq_ptr_implIN8pybind116detail15local_internalsESt14default_deleteIS2_EE5resetEPS2_ # -- Begin function _ZNSt15__uniq_ptr_implIN8pybind116detail15local_internalsESt14default_deleteIS2_EE5resetEPS2_
	.weak	_ZNSt15__uniq_ptr_implIN8pybind116detail15local_internalsESt14default_deleteIS2_EE5resetEPS2_
	.p2align	4, 0x90
	.type	_ZNSt15__uniq_ptr_implIN8pybind116detail15local_internalsESt14default_deleteIS2_EE5resetEPS2_,@function
_ZNSt15__uniq_ptr_implIN8pybind116detail15local_internalsESt14default_deleteIS2_EE5resetEPS2_: # @_ZNSt15__uniq_ptr_implIN8pybind116detail15local_internalsESt14default_deleteIS2_EE5resetEPS2_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	(%rdi), %rbx
	movq	%rsi, (%rdi)
	testq	%rbx, %rbx
	je	.LBB123_8
# %bb.1:
	movq	56(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB123_3
	.p2align	4, 0x90
.LBB123_2:                              # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r14
	movl	$16, %esi
	callq	_ZdlPvm@PLT
	movq	%r14, %rdi
	testq	%r14, %r14
	jne	.LBB123_2
.LBB123_3:                              # %_ZNSt14_Fwd_list_baseIPFvNSt15__exception_ptr13exception_ptrEESaIS3_EED2Ev.exit.i.i
	movq	$0, 56(%rbx)
	leaq	16(%rbx), %r14
	movq	16(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB123_5
	.p2align	4, 0x90
.LBB123_4:                              # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r15
	movl	$24, %esi
	callq	_ZdlPvm@PLT
	movq	%r15, %rdi
	testq	%r15, %r15
	jne	.LBB123_4
.LBB123_5:                              # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv.exit.i.i.i.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r14)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB123_7
# %bb.6:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	callq	_ZdlPvm@PLT
.LBB123_7:                              # %_ZNKSt14default_deleteIN8pybind116detail15local_internalsEEclEPS2_.exit
	movl	$64, %esi
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB123_8:
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end123:
	.size	_ZNSt15__uniq_ptr_implIN8pybind116detail15local_internalsESt14default_deleteIS2_EE5resetEPS2_, .Lfunc_end123-_ZNSt15__uniq_ptr_implIN8pybind116detail15local_internalsESt14default_deleteIS2_EE5resetEPS2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_,"axG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_,comdat
	.hidden	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_ # -- Begin function _ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_
	.weak	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_,@function
_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_: # @_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_
.Lfunc_begin66:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception66
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	cmpq	$0, 24(%rdi)
	je	.LBB124_4
# %bb.1:
	movq	(%rbx), %rax
	movq	8(%rax), %rax
	xorl	%r15d, %r15d
	cmpb	$42, (%rax)
	sete	%r15b
	addq	%rax, %r15
	movq	%r15, %rdi
	callq	strlen@PLT
.Ltmp2433:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r15, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2434:
# %bb.2:                                # %_ZNKSt8__detail15_Hash_code_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_hash_codeERS3_.exit
	movq	%rax, %rcx
	movq	8(%r14), %rsi
	orq	%rsi, %rax
	shrq	$32, %rax
	je	.LBB124_10
# %bb.3:
	movq	%rcx, %rax
	xorl	%edx, %edx
	divq	%rsi
	jmp	.LBB124_11
.LBB124_4:
	movq	16(%r14), %r14
	testq	%r14, %r14
	je	.LBB124_15
# %bb.5:                                # %.lr.ph
	movq	(%rbx), %rax
	movq	8(%rax), %rbx
	jmp	.LBB124_7
	.p2align	4, 0x90
.LBB124_6:                              # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueIS8_Lb0EEE.exit.thread12
                                        #   in Loop: Header=BB124_7 Depth=1
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB124_15
.LBB124_7:                              # =>This Inner Loop Header: Depth=1
	movq	8(%r14), %rax
	movq	8(%rax), %rax
	cmpq	%rax, %rbx
	je	.LBB124_16
# %bb.8:                                #   in Loop: Header=BB124_7 Depth=1
	cmpb	$42, (%rbx)
	je	.LBB124_6
# %bb.9:                                # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueIS8_Lb0EEE.exit
                                        #   in Loop: Header=BB124_7 Depth=1
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
	movq	%rbx, %rdi
	callq	strcmp@PLT
	testl	%eax, %eax
	jne	.LBB124_6
	jmp	.LBB124_16
.LBB124_10:
	movl	%ecx, %eax
	xorl	%edx, %edx
	divl	%esi
                                        # kill: def $edx killed $edx def $rdx
.LBB124_11:
	movq	%r14, %rdi
	movq	%rdx, %rsi
	movq	%rbx, %rdx
	callq	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
	testq	%rax, %rax
	je	.LBB124_15
# %bb.12:
	movq	(%rax), %r14
	jmp	.LBB124_16
.LBB124_15:
	xorl	%r14d, %r14d
.LBB124_16:                             # %_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE12_M_find_nodeEmRS2_m.exit
	movq	%r14, %rax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB124_17:
	.cfi_def_cfa_offset 32
.Ltmp2435:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end124:
	.size	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_, .Lfunc_end124-_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_,"aG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_,comdat
	.p2align	2, 0x0
GCC_except_table124:
.Lexception66:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase48-.Lttbaseref48
.Lttbaseref48:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end66-.Lcst_begin66
.Lcst_begin66:
	.uleb128 .Ltmp2433-.Lfunc_begin66       # >> Call Site 1 <<
	.uleb128 .Ltmp2434-.Ltmp2433            #   Call between .Ltmp2433 and .Ltmp2434
	.uleb128 .Ltmp2435-.Lfunc_begin66       #     jumps to .Ltmp2435
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2434-.Lfunc_begin66       # >> Call Site 2 <<
	.uleb128 .Lfunc_end124-.Ltmp2434        #   Call between .Ltmp2434 and .Lfunc_end124
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end66:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase48:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,"axG",@progbits,_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,comdat
	.hidden	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m # -- Begin function _ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
	.weak	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
	.p2align	4, 0x90
	.type	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,@function
_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m: # @_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
.Lfunc_begin67:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception67
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	(%rdi), %rax
	movq	(%rax,%rsi,8), %r12
	testq	%r12, %r12
	je	.LBB125_11
# %bb.1:                                # %.preheader
	movq	%rdx, %rbx
	movq	%rsi, %r14
	movq	%rdi, %r15
	jmp	.LBB125_2
	.p2align	4, 0x90
.LBB125_9:                              #   in Loop: Header=BB125_2 Depth=1
	xorl	%edx, %edx
	divq	%rbp
	movq	%r13, %r12
	cmpq	%r14, %rdx
	jne	.LBB125_11
.LBB125_2:                              # =>This Inner Loop Header: Depth=1
	movq	(%r12), %r13
	movq	(%rbx), %rax
	movq	8(%r13), %rcx
	movq	8(%rax), %rdi
	movq	8(%rcx), %rax
	cmpq	%rax, %rdi
	je	.LBB125_12
# %bb.3:                                #   in Loop: Header=BB125_2 Depth=1
	cmpb	$42, (%rdi)
	je	.LBB125_5
# %bb.4:                                # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS3_mRKNS_16_Hash_node_valueIS8_Lb0EEE.exit
                                        #   in Loop: Header=BB125_2 Depth=1
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
	callq	strcmp@PLT
	testl	%eax, %eax
	je	.LBB125_12
.LBB125_5:                              # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS3_mRKNS_16_Hash_node_valueIS8_Lb0EEE.exit.thread22
                                        #   in Loop: Header=BB125_2 Depth=1
	movq	(%r13), %rax
	testq	%rax, %rax
	je	.LBB125_11
# %bb.6:                                #   in Loop: Header=BB125_2 Depth=1
	movq	8(%r15), %rbp
	movq	8(%rax), %rax
	movq	8(%rax), %rax
	xorl	%r12d, %r12d
	cmpb	$42, (%rax)
	sete	%r12b
	addq	%rax, %r12
	movq	%r12, %rdi
	callq	strlen@PLT
.Ltmp2436:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r12, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2437:
# %bb.7:                                # %_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERKNS9_16_Hash_node_valueIS7_Lb0EEE.exit
                                        #   in Loop: Header=BB125_2 Depth=1
	movq	%rax, %rcx
	orq	%rbp, %rcx
	shrq	$32, %rcx
	jne	.LBB125_9
# %bb.8:                                #   in Loop: Header=BB125_2 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%ebp
                                        # kill: def $edx killed $edx def $rdx
	movq	%r13, %r12
	cmpq	%r14, %rdx
	je	.LBB125_2
.LBB125_11:
	xorl	%r12d, %r12d
.LBB125_12:                             # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS3_mRKNS_16_Hash_node_valueIS8_Lb0EEE.exit.thread
	movq	%r12, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB125_13:
	.cfi_def_cfa_offset 64
.Ltmp2438:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end125:
	.size	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m, .Lfunc_end125-_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,"aG",@progbits,_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,comdat
	.p2align	2, 0x0
GCC_except_table125:
.Lexception67:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase49-.Lttbaseref49
.Lttbaseref49:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end67-.Lcst_begin67
.Lcst_begin67:
	.uleb128 .Ltmp2436-.Lfunc_begin67       # >> Call Site 1 <<
	.uleb128 .Ltmp2437-.Ltmp2436            #   Call between .Ltmp2436 and .Ltmp2437
	.uleb128 .Ltmp2438-.Lfunc_begin67       #     jumps to .Ltmp2438
	.byte	1                               #   On action: 1
.Lcst_end67:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase49:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv,"axG",@progbits,_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv,comdat
	.hidden	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv # -- Begin function _ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
	.weak	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
	.p2align	4, 0x90
	.type	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv,@function
_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv: # @_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Lfunc_begin68:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception68
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$24, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	leaq	24(%rdi), %rbx
	cmpq	$0, 24(%rdi)
	jne	.LBB126_8
# %bb.1:
	movq	8(%rdi), %rax
	movq	16(%rdi), %rsi
	movq	%rax, %rdi
	callq	PyObject_GetAttrString@PLT
	testq	%rax, %rax
	je	.LBB126_2
# %bb.5:                                # %_ZN8pybind116detail17accessor_policies8str_attr3getENS_6handleEPKc.exit
	movq	%rax, 8(%rsp)
	leaq	8(%rsp), %rcx
	cmpq	%rcx, %rbx
	je	.LBB126_7
# %bb.6:
	movq	(%rbx), %rcx
	movq	%rcx, 16(%rsp)
	movq	%rax, (%rbx)
	movq	$0, 8(%rsp)
.Ltmp2439:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2440:
.LBB126_7:                              # %_ZN8pybind116objectaSEOS0_.exit
.Ltmp2442:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2443:
.LBB126_8:
	movq	%rbx, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB126_2:
	.cfi_def_cfa_offset 48
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp2445:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2446:
# %bb.3:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.LBB126_4:
.Ltmp2447:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB126_9:
.Ltmp2441:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB126_10:
.Ltmp2444:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end126:
	.size	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv, .Lfunc_end126-_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv,"aG",@progbits,_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv,comdat
	.p2align	2, 0x0
GCC_except_table126:
.Lexception68:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase50-.Lttbaseref50
.Lttbaseref50:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end68-.Lcst_begin68
.Lcst_begin68:
	.uleb128 .Lfunc_begin68-.Lfunc_begin68  # >> Call Site 1 <<
	.uleb128 .Ltmp2439-.Lfunc_begin68       #   Call between .Lfunc_begin68 and .Ltmp2439
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2439-.Lfunc_begin68       # >> Call Site 2 <<
	.uleb128 .Ltmp2440-.Ltmp2439            #   Call between .Ltmp2439 and .Ltmp2440
	.uleb128 .Ltmp2441-.Lfunc_begin68       #     jumps to .Ltmp2441
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2442-.Lfunc_begin68       # >> Call Site 3 <<
	.uleb128 .Ltmp2443-.Ltmp2442            #   Call between .Ltmp2442 and .Ltmp2443
	.uleb128 .Ltmp2444-.Lfunc_begin68       #     jumps to .Ltmp2444
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2443-.Lfunc_begin68       # >> Call Site 4 <<
	.uleb128 .Ltmp2445-.Ltmp2443            #   Call between .Ltmp2443 and .Ltmp2445
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2445-.Lfunc_begin68       # >> Call Site 5 <<
	.uleb128 .Ltmp2446-.Ltmp2445            #   Call between .Ltmp2445 and .Ltmp2446
	.uleb128 .Ltmp2447-.Lfunc_begin68       #     jumps to .Ltmp2447
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2446-.Lfunc_begin68       # >> Call Site 6 <<
	.uleb128 .Lfunc_end126-.Ltmp2446        #   Call between .Ltmp2446 and .Lfunc_end126
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end68:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase50:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_,"axG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_,comdat
	.weak	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_ # -- Begin function _ZNSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_,@function
_ZNSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_: # @_ZNSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_
.Lfunc_begin69:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception69
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	cmpq	$0, 24(%rdi)
	je	.LBB127_4
# %bb.1:
	movq	(%rbx), %rax
	movq	8(%rax), %rax
	xorl	%r15d, %r15d
	cmpb	$42, (%rax)
	sete	%r15b
	addq	%rax, %r15
	movq	%r15, %rdi
	callq	strlen@PLT
.Ltmp2448:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r15, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2449:
# %bb.2:                                # %_ZNKSt8__detail15_Hash_code_baseISt10type_indexSt4pairIKS1_P7_objectENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_hash_codeERS3_.exit
	movq	%rax, %rcx
	movq	8(%r14), %rsi
	orq	%rsi, %rax
	shrq	$32, %rax
	je	.LBB127_10
# %bb.3:
	movq	%rcx, %rax
	xorl	%edx, %edx
	divq	%rsi
	jmp	.LBB127_11
.LBB127_4:
	movq	16(%r14), %r14
	testq	%r14, %r14
	je	.LBB127_15
# %bb.5:                                # %.lr.ph
	movq	(%rbx), %rax
	movq	8(%rax), %rbx
	jmp	.LBB127_7
	.p2align	4, 0x90
.LBB127_6:                              # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_P7_objectENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueIS6_Lb0EEE.exit.thread12
                                        #   in Loop: Header=BB127_7 Depth=1
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB127_15
.LBB127_7:                              # =>This Inner Loop Header: Depth=1
	movq	8(%r14), %rax
	movq	8(%rax), %rax
	cmpq	%rax, %rbx
	je	.LBB127_16
# %bb.8:                                #   in Loop: Header=BB127_7 Depth=1
	cmpb	$42, (%rbx)
	je	.LBB127_6
# %bb.9:                                # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_P7_objectENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueIS6_Lb0EEE.exit
                                        #   in Loop: Header=BB127_7 Depth=1
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
	movq	%rbx, %rdi
	callq	strcmp@PLT
	testl	%eax, %eax
	jne	.LBB127_6
	jmp	.LBB127_16
.LBB127_10:
	movl	%ecx, %eax
	xorl	%edx, %edx
	divl	%esi
                                        # kill: def $edx killed $edx def $rdx
.LBB127_11:
	movq	%r14, %rdi
	movq	%rdx, %rsi
	movq	%rbx, %rdx
	callq	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m@PLT
	testq	%rax, %rax
	je	.LBB127_15
# %bb.12:
	movq	(%rax), %r14
	jmp	.LBB127_16
.LBB127_15:
	xorl	%r14d, %r14d
.LBB127_16:                             # %_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE12_M_find_nodeEmRS2_m.exit
	movq	%r14, %rax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB127_17:
	.cfi_def_cfa_offset 32
.Ltmp2450:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end127:
	.size	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_, .Lfunc_end127-_ZNSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_,"aG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE4findERS2_,comdat
	.p2align	2, 0x0
GCC_except_table127:
.Lexception69:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase51-.Lttbaseref51
.Lttbaseref51:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end69-.Lcst_begin69
.Lcst_begin69:
	.uleb128 .Ltmp2448-.Lfunc_begin69       # >> Call Site 1 <<
	.uleb128 .Ltmp2449-.Ltmp2448            #   Call between .Ltmp2448 and .Ltmp2449
	.uleb128 .Ltmp2450-.Lfunc_begin69       #     jumps to .Ltmp2450
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2449-.Lfunc_begin69       # >> Call Site 2 <<
	.uleb128 .Lfunc_end127-.Ltmp2449        #   Call between .Ltmp2449 and .Lfunc_end127
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end69:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase51:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,"axG",@progbits,_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,comdat
	.weak	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m # -- Begin function _ZNKSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
	.p2align	4, 0x90
	.type	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,@function
_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m: # @_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
.Lfunc_begin70:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception70
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	(%rdi), %rax
	movq	(%rax,%rsi,8), %r12
	testq	%r12, %r12
	je	.LBB128_11
# %bb.1:                                # %.preheader
	movq	%rdx, %rbx
	movq	%rsi, %r14
	movq	%rdi, %r15
	jmp	.LBB128_2
	.p2align	4, 0x90
.LBB128_9:                              #   in Loop: Header=BB128_2 Depth=1
	xorl	%edx, %edx
	divq	%rbp
	movq	%r13, %r12
	cmpq	%r14, %rdx
	jne	.LBB128_11
.LBB128_2:                              # =>This Inner Loop Header: Depth=1
	movq	(%r12), %r13
	movq	(%rbx), %rax
	movq	8(%r13), %rcx
	movq	8(%rax), %rdi
	movq	8(%rcx), %rax
	cmpq	%rax, %rdi
	je	.LBB128_12
# %bb.3:                                #   in Loop: Header=BB128_2 Depth=1
	cmpb	$42, (%rdi)
	je	.LBB128_5
# %bb.4:                                # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_P7_objectENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS3_mRKNS_16_Hash_node_valueIS6_Lb0EEE.exit
                                        #   in Loop: Header=BB128_2 Depth=1
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
	callq	strcmp@PLT
	testl	%eax, %eax
	je	.LBB128_12
.LBB128_5:                              # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_P7_objectENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS3_mRKNS_16_Hash_node_valueIS6_Lb0EEE.exit.thread22
                                        #   in Loop: Header=BB128_2 Depth=1
	movq	(%r13), %rax
	testq	%rax, %rax
	je	.LBB128_11
# %bb.6:                                #   in Loop: Header=BB128_2 Depth=1
	movq	8(%r15), %rbp
	movq	8(%rax), %rax
	movq	8(%rax), %rax
	xorl	%r12d, %r12d
	cmpb	$42, (%rax)
	sete	%r12b
	addq	%rax, %r12
	movq	%r12, %rdi
	callq	strlen@PLT
.Ltmp2451:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r12, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2452:
# %bb.7:                                # %_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERKNS7_16_Hash_node_valueIS5_Lb0EEE.exit
                                        #   in Loop: Header=BB128_2 Depth=1
	movq	%rax, %rcx
	orq	%rbp, %rcx
	shrq	$32, %rcx
	jne	.LBB128_9
# %bb.8:                                #   in Loop: Header=BB128_2 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%ebp
                                        # kill: def $edx killed $edx def $rdx
	movq	%r13, %r12
	cmpq	%r14, %rdx
	je	.LBB128_2
.LBB128_11:
	xorl	%r12d, %r12d
.LBB128_12:                             # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_P7_objectENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS3_mRKNS_16_Hash_node_valueIS6_Lb0EEE.exit.thread
	movq	%r12, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB128_13:
	.cfi_def_cfa_offset 64
.Ltmp2453:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end128:
	.size	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m, .Lfunc_end128-_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,"aG",@progbits,_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_P7_objectESaIS5_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS7_18_Mod_range_hashingENS7_20_Default_ranged_hashENS7_20_Prime_rehash_policyENS7_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,comdat
	.p2align	2, 0x0
GCC_except_table128:
.Lexception70:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase52-.Lttbaseref52
.Lttbaseref52:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end70-.Lcst_begin70
.Lcst_begin70:
	.uleb128 .Ltmp2451-.Lfunc_begin70       # >> Call Site 1 <<
	.uleb128 .Ltmp2452-.Ltmp2451            #   Call between .Ltmp2451 and .Ltmp2452
	.uleb128 .Ltmp2453-.Lfunc_begin70       #     jumps to .Ltmp2453
	.byte	1                               #   On action: 1
.Lcst_end70:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase52:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5dequeIbSaIbEE16_M_push_back_auxIJbEEEvDpOT_,"axG",@progbits,_ZNSt5dequeIbSaIbEE16_M_push_back_auxIJbEEEvDpOT_,comdat
	.weak	_ZNSt5dequeIbSaIbEE16_M_push_back_auxIJbEEEvDpOT_ # -- Begin function _ZNSt5dequeIbSaIbEE16_M_push_back_auxIJbEEEvDpOT_
	.p2align	4, 0x90
	.type	_ZNSt5dequeIbSaIbEE16_M_push_back_auxIJbEEEvDpOT_,@function
_ZNSt5dequeIbSaIbEE16_M_push_back_auxIJbEEEvDpOT_: # @_ZNSt5dequeIbSaIbEE16_M_push_back_auxIJbEEEvDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	48(%rdi), %rax
	movq	72(%rdi), %r15
	movq	%r15, %rcx
	subq	40(%rdi), %rcx
	shrq	$3, %rcx
	cmpq	$1, %r15
	adcq	$-1, %rcx
	subq	56(%rdi), %rax
	shlq	$9, %rcx
	addq	32(%rdi), %rax
	addq	%rcx, %rax
	subq	16(%rdi), %rax
	movabsq	$9223372036854775807, %rcx      # imm = 0x7FFFFFFFFFFFFFFF
	cmpq	%rcx, %rax
	je	.LBB129_4
# %bb.1:
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	%r15, %rax
	subq	(%rdi), %rax
	movq	8(%rdi), %rcx
	sarq	$3, %rax
	subq	%rax, %rcx
	cmpq	$1, %rcx
	ja	.LBB129_3
# %bb.2:
	movl	$1, %esi
	movq	%rbx, %rdi
	xorl	%edx, %edx
	callq	_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb@PLT
	movq	72(%rbx), %r15
.LBB129_3:                              # %_ZNSt5dequeIbSaIbEE22_M_reserve_map_at_backEm.exit
	movl	$512, %edi                      # imm = 0x200
	callq	_Znwm@PLT
	movq	%rax, 8(%r15)
	movq	48(%rbx), %rax
	movzbl	(%r14), %ecx
	movb	%cl, (%rax)
	movq	72(%rbx), %rax
	leaq	8(%rax), %rcx
	movq	%rcx, 72(%rbx)
	movq	8(%rax), %rax
	movq	%rax, 56(%rbx)
	leaq	512(%rax), %rcx
	movq	%rcx, 64(%rbx)
	movq	%rax, 48(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB129_4:
	.cfi_def_cfa_offset 32
	leaq	.L.str.109(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end129:
	.size	_ZNSt5dequeIbSaIbEE16_M_push_back_auxIJbEEEvDpOT_, .Lfunc_end129-_ZNSt5dequeIbSaIbEE16_M_push_back_auxIJbEEEvDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb,comdat
	.weak	_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb # -- Begin function _ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb
	.p2align	4, 0x90
	.type	_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb,@function
_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb: # @_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%edx, %r8d
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	72(%rdi), %rdx
	movq	8(%rdi), %r12
	movq	40(%rdi), %rsi
	movq	%rdx, %r13
	subq	%rsi, %r13
	movq	%r13, %rbp
	sarq	$3, %rbp
	leaq	(%r14,%rbp), %r15
	incq	%r15
	incq	%rbp
	leaq	(%r15,%r15), %rax
	cmpq	%rax, %r12
	jbe	.LBB130_4
# %bb.1:
	subq	%r15, %r12
	andq	$-2, %r12
	shlq	$2, %r12
	addq	(%rbx), %r12
	xorl	%eax, %eax
	testb	%r8b, %r8b
	cmovneq	%r14, %rax
	leaq	(%r12,%rax,8), %r14
	addq	$8, %rdx
	cmpq	%rsi, %r14
	jae	.LBB130_8
# %bb.2:
	subq	%rsi, %rdx
	cmpq	$9, %rdx
	jl	.LBB130_16
# %bb.3:
	movq	%r14, %rdi
	jmp	.LBB130_10
.LBB130_4:
	cmpq	%r14, %r12
	movq	%r14, %rax
	cmovaq	%r12, %rax
	leaq	(%r12,%rax), %rcx
	addq	$2, %rcx
	movq	%rcx, %rax
	shrq	$60, %rax
	jne	.LBB130_12
# %bb.5:                                # %_ZNSt11_Deque_baseIbSaIbEE15_M_allocate_mapEm.exit
	movq	%rbp, 16(%rsp)                  # 8-byte Spill
	movq	%rsi, 24(%rsp)                  # 8-byte Spill
	leaq	(,%rcx,8), %rdi
	movq	%rcx, %rbp
	movl	%r8d, 12(%rsp)                  # 4-byte Spill
	callq	_Znwm@PLT
	movq	%rbp, 32(%rsp)                  # 8-byte Spill
	subq	%r15, %rbp
	movq	%rax, %r15
	andq	$-2, %rbp
	xorl	%ecx, %ecx
	cmpb	$0, 12(%rsp)                    # 1-byte Folded Reload
	cmovneq	%r14, %rcx
	leaq	(%rax,%rbp,4), %rax
	leaq	(%rax,%rcx,8), %r14
	addq	$8, %r13
	cmpq	$9, %r13
	jl	.LBB130_14
# %bb.6:
	movq	%r14, %rdi
	movq	24(%rsp), %rsi                  # 8-byte Reload
	movq	%r13, %rdx
	callq	memmove@PLT
	movq	16(%rsp), %rbp                  # 8-byte Reload
.LBB130_7:                              # %_ZSt4copyIPPbS1_ET0_T_S3_S2_.exit24
	movq	(%rbx), %rdi
	shlq	$3, %r12
	movq	%r12, %rsi
	callq	_ZdlPvm@PLT
	movq	%r15, (%rbx)
	movq	32(%rsp), %rax                  # 8-byte Reload
	movq	%rax, 8(%rbx)
	jmp	.LBB130_11
.LBB130_8:
	leaq	(%r14,%rbp,8), %rdi
	subq	%rsi, %rdx
	movq	%rdx, %rax
	sarq	$3, %rax
	cmpq	$2, %rax
	jl	.LBB130_18
# %bb.9:
	shlq	$3, %rax
	subq	%rax, %rdi
.LBB130_10:                             # %_ZSt4copyIPPbS1_ET0_T_S3_S2_.exit
	callq	memmove@PLT
.LBB130_11:                             # %_ZSt4copyIPPbS1_ET0_T_S3_S2_.exit
	movq	%r14, 40(%rbx)
	movq	(%r14), %rax
	movq	%rax, 24(%rbx)
	addq	$512, %rax                      # imm = 0x200
	movq	%rax, 32(%rbx)
	leaq	(%r14,%rbp,8), %rax
	addq	$-8, %rax
	movq	%rax, 72(%rbx)
	movq	-8(%r14,%rbp,8), %rax
	movq	%rax, 56(%rbx)
	addq	$512, %rax                      # imm = 0x200
	movq	%rax, 64(%rbx)
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB130_12:
	.cfi_def_cfa_offset 96
	shrq	$61, %rcx
	je	.LBB130_20
# %bb.13:
	callq	_ZSt28__throw_bad_array_new_lengthv@PLT
.LBB130_14:
	cmpq	$8, %r13
	movq	24(%rsp), %rax                  # 8-byte Reload
	movq	16(%rsp), %rbp                  # 8-byte Reload
	jne	.LBB130_7
# %bb.15:
	movq	(%rax), %rax
	movq	%rax, (%r14)
	jmp	.LBB130_7
.LBB130_16:
	cmpq	$8, %rdx
	jne	.LBB130_11
# %bb.17:
	movq	(%rsi), %rax
	movq	%rax, (%r14)
	jmp	.LBB130_11
.LBB130_18:
	cmpq	$8, %rdx
	jne	.LBB130_11
# %bb.19:
	movq	(%rsi), %rax
	movq	%rax, -8(%rdi)
	jmp	.LBB130_11
.LBB130_20:
	callq	_ZSt17__throw_bad_allocv@PLT
.Lfunc_end130:
	.size	_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb, .Lfunc_end130-_ZNSt5dequeIbSaIbEE17_M_reallocate_mapEmb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_,"axG",@progbits,_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_,comdat
	.hidden	_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_ # -- Begin function _ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_
	.weak	_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_
	.p2align	4, 0x90
	.type	_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_,@function
_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_: # @_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_
.Lfunc_begin71:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception71
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movabsq	$9223372036854775776, %r12      # imm = 0x7FFFFFFFFFFFFFE0
	movq	(%rdi), %rbx
	movq	8(%rdi), %rax
	movq	%rax, %r15
	subq	%rbx, %r15
	cmpq	%r12, %r15
	ja	.LBB131_1
# %bb.3:                                # %_ZNSt6vectorIN8pybind116detail15argument_recordESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i.i
	movq	%rdi, %r14
	cmpq	%rbx, %rax
	je	.LBB131_4
# %bb.5:                                # %.lr.ph.i.i.i.i.preheader.i.i
.Ltmp2454:
	movq	%r15, %rdi
	callq	_Znwm@PLT
.Ltmp2455:
# %bb.6:                                # %.noexc6.i
	movq	%rax, %r13
	andq	%r15, %r12
	movq	%rax, %rdi
	movq	%rbx, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
	addq	%r13, %r12
	jmp	.LBB131_7
.LBB131_4:
	xorl	%r13d, %r13d
	xorl	%r12d, %r12d
.LBB131_7:                              # %_ZNSt6vectorIN8pybind116detail15argument_recordESaIS2_EEC2ISt13move_iteratorIN9__gnu_cxx17__normal_iteratorIPS2_S4_EEEvEET_SC_RKS3_.exit
	addq	%r13, %r15
	movq	16(%r14), %rsi
	movq	%r13, (%r14)
	movq	%r12, 8(%r14)
	movq	%r15, 16(%r14)
	movb	$1, %bpl
	testq	%rbx, %rbx
	je	.LBB131_11
# %bb.8:
	subq	%rbx, %rsi
	movq	%rbx, %rdi
	callq	_ZdlPvm@PLT
.LBB131_11:                             # %_ZNSt6vectorIN8pybind116detail15argument_recordESaIS2_EED2Ev.exit
	movl	%ebp, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB131_1:
	.cfi_def_cfa_offset 64
.Ltmp2456:
	leaq	.L.str.116(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2457:
# %bb.2:                                # %.noexc.i
.LBB131_9:                              # %_ZNSt12_Vector_baseIN8pybind116detail15argument_recordESaIS2_EED2Ev.exit.i
.Ltmp2458:
	movq	%rax, %rdi
	callq	__cxa_begin_catch@PLT
.Ltmp2459:
	callq	__cxa_end_catch@PLT
.Ltmp2460:
# %bb.10:
	xorl	%ebp, %ebp
	jmp	.LBB131_11
.LBB131_12:
.Ltmp2461:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end131:
	.size	_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_, .Lfunc_end131-_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_,"aG",@progbits,_ZNSt19__shrink_to_fit_auxISt6vectorIN8pybind116detail15argument_recordESaIS3_EELb1EE8_S_do_itERS5_,comdat
	.p2align	2, 0x0
GCC_except_table131:
.Lexception71:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase53-.Lttbaseref53
.Lttbaseref53:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end71-.Lcst_begin71
.Lcst_begin71:
	.uleb128 .Ltmp2454-.Lfunc_begin71       # >> Call Site 1 <<
	.uleb128 .Ltmp2455-.Ltmp2454            #   Call between .Ltmp2454 and .Ltmp2455
	.uleb128 .Ltmp2458-.Lfunc_begin71       #     jumps to .Ltmp2458
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2455-.Lfunc_begin71       # >> Call Site 2 <<
	.uleb128 .Ltmp2456-.Ltmp2455            #   Call between .Ltmp2455 and .Ltmp2456
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2456-.Lfunc_begin71       # >> Call Site 3 <<
	.uleb128 .Ltmp2457-.Ltmp2456            #   Call between .Ltmp2456 and .Ltmp2457
	.uleb128 .Ltmp2458-.Lfunc_begin71       #     jumps to .Ltmp2458
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2457-.Lfunc_begin71       # >> Call Site 4 <<
	.uleb128 .Ltmp2459-.Ltmp2457            #   Call between .Ltmp2457 and .Ltmp2459
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2459-.Lfunc_begin71       # >> Call Site 5 <<
	.uleb128 .Ltmp2460-.Ltmp2459            #   Call between .Ltmp2459 and .Ltmp2460
	.uleb128 .Ltmp2461-.Lfunc_begin71       #     jumps to .Ltmp2461
	.byte	1                               #   On action: 1
.Lcst_end71:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase53:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail36function_record_PyTypeObject_methods15tp_dealloc_implEP7_object,"axG",@progbits,_ZN8pybind116detail36function_record_PyTypeObject_methods15tp_dealloc_implEP7_object,comdat
	.hidden	_ZN8pybind116detail36function_record_PyTypeObject_methods15tp_dealloc_implEP7_object # -- Begin function _ZN8pybind116detail36function_record_PyTypeObject_methods15tp_dealloc_implEP7_object
	.weak	_ZN8pybind116detail36function_record_PyTypeObject_methods15tp_dealloc_implEP7_object
	.p2align	4, 0x90
	.type	_ZN8pybind116detail36function_record_PyTypeObject_methods15tp_dealloc_implEP7_object,@function
_ZN8pybind116detail36function_record_PyTypeObject_methods15tp_dealloc_implEP7_object: # @_ZN8pybind116detail36function_record_PyTypeObject_methods15tp_dealloc_implEP7_object
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	16(%rdi), %rdi
	movl	$1, %esi
	callq	_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb
	movq	$0, 16(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end132:
	.size	_ZN8pybind116detail36function_record_PyTypeObject_methods15tp_dealloc_implEP7_object, .Lfunc_end132-_ZN8pybind116detail36function_record_PyTypeObject_methods15tp_dealloc_implEP7_object
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail36function_record_PyTypeObject_methods12tp_init_implEP7_objectS3_S3_,"axG",@progbits,_ZN8pybind116detail36function_record_PyTypeObject_methods12tp_init_implEP7_objectS3_S3_,comdat
	.hidden	_ZN8pybind116detail36function_record_PyTypeObject_methods12tp_init_implEP7_objectS3_S3_ # -- Begin function _ZN8pybind116detail36function_record_PyTypeObject_methods12tp_init_implEP7_objectS3_S3_
	.weak	_ZN8pybind116detail36function_record_PyTypeObject_methods12tp_init_implEP7_objectS3_S3_
	.p2align	4, 0x90
	.type	_ZN8pybind116detail36function_record_PyTypeObject_methods12tp_init_implEP7_objectS3_S3_,@function
_ZN8pybind116detail36function_record_PyTypeObject_methods12tp_init_implEP7_objectS3_S3_: # @_ZN8pybind116detail36function_record_PyTypeObject_methods12tp_init_implEP7_objectS3_S3_
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	leaq	.L.str.131(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Lfunc_end133:
	.size	_ZN8pybind116detail36function_record_PyTypeObject_methods12tp_init_implEP7_objectS3_S3_, .Lfunc_end133-_ZN8pybind116detail36function_record_PyTypeObject_methods12tp_init_implEP7_objectS3_S3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail36function_record_PyTypeObject_methods13tp_alloc_implEP11_typeobjectl,"axG",@progbits,_ZN8pybind116detail36function_record_PyTypeObject_methods13tp_alloc_implEP11_typeobjectl,comdat
	.hidden	_ZN8pybind116detail36function_record_PyTypeObject_methods13tp_alloc_implEP11_typeobjectl # -- Begin function _ZN8pybind116detail36function_record_PyTypeObject_methods13tp_alloc_implEP11_typeobjectl
	.weak	_ZN8pybind116detail36function_record_PyTypeObject_methods13tp_alloc_implEP11_typeobjectl
	.p2align	4, 0x90
	.type	_ZN8pybind116detail36function_record_PyTypeObject_methods13tp_alloc_implEP11_typeobjectl,@function
_ZN8pybind116detail36function_record_PyTypeObject_methods13tp_alloc_implEP11_typeobjectl: # @_ZN8pybind116detail36function_record_PyTypeObject_methods13tp_alloc_implEP11_typeobjectl
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	leaq	.L.str.132(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Lfunc_end134:
	.size	_ZN8pybind116detail36function_record_PyTypeObject_methods13tp_alloc_implEP11_typeobjectl, .Lfunc_end134-_ZN8pybind116detail36function_record_PyTypeObject_methods13tp_alloc_implEP11_typeobjectl
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail36function_record_PyTypeObject_methods11tp_new_implEP11_typeobjectP7_objectS5_,"axG",@progbits,_ZN8pybind116detail36function_record_PyTypeObject_methods11tp_new_implEP11_typeobjectP7_objectS5_,comdat
	.hidden	_ZN8pybind116detail36function_record_PyTypeObject_methods11tp_new_implEP11_typeobjectP7_objectS5_ # -- Begin function _ZN8pybind116detail36function_record_PyTypeObject_methods11tp_new_implEP11_typeobjectP7_objectS5_
	.weak	_ZN8pybind116detail36function_record_PyTypeObject_methods11tp_new_implEP11_typeobjectP7_objectS5_
	.p2align	4, 0x90
	.type	_ZN8pybind116detail36function_record_PyTypeObject_methods11tp_new_implEP11_typeobjectP7_objectS5_,@function
_ZN8pybind116detail36function_record_PyTypeObject_methods11tp_new_implEP11_typeobjectP7_objectS5_: # @_ZN8pybind116detail36function_record_PyTypeObject_methods11tp_new_implEP11_typeobjectP7_objectS5_
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	leaq	.L.str.133(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Lfunc_end135:
	.size	_ZN8pybind116detail36function_record_PyTypeObject_methods11tp_new_implEP11_typeobjectP7_objectS5_, .Lfunc_end135-_ZN8pybind116detail36function_record_PyTypeObject_methods11tp_new_implEP11_typeobjectP7_objectS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail36function_record_PyTypeObject_methods12tp_free_implEPv,"axG",@progbits,_ZN8pybind116detail36function_record_PyTypeObject_methods12tp_free_implEPv,comdat
	.hidden	_ZN8pybind116detail36function_record_PyTypeObject_methods12tp_free_implEPv # -- Begin function _ZN8pybind116detail36function_record_PyTypeObject_methods12tp_free_implEPv
	.weak	_ZN8pybind116detail36function_record_PyTypeObject_methods12tp_free_implEPv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail36function_record_PyTypeObject_methods12tp_free_implEPv,@function
_ZN8pybind116detail36function_record_PyTypeObject_methods12tp_free_implEPv: # @_ZN8pybind116detail36function_record_PyTypeObject_methods12tp_free_implEPv
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	leaq	.L.str.134(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Lfunc_end136:
	.size	_ZN8pybind116detail36function_record_PyTypeObject_methods12tp_free_implEPv, .Lfunc_end136-_ZN8pybind116detail36function_record_PyTypeObject_methods12tp_free_implEPv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb,"axG",@progbits,_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb,comdat
	.hidden	_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb # -- Begin function _ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb
	.weak	_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb
	.p2align	4, 0x90
	.type	_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb,@function
_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb: # @_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb
.Lfunc_begin72:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception72
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	testq	%rdi, %rdi
	je	.LBB137_16
# %bb.1:                                # %.lr.ph78.preheader
	movl	%esi, %ebx
	movq	%rdi, %r14
	jmp	.LBB137_2
	.p2align	4, 0x90
.LBB137_15:                             # %_ZN8pybind116detail15function_recordD2Ev.exit
                                        #   in Loop: Header=BB137_2 Depth=1
	movl	$136, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	movq	%r15, %r14
	testq	%r15, %r15
	je	.LBB137_16
.LBB137_2:                              # %.lr.ph78
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB137_6 Depth 2
                                        #     Child Loop BB137_9 Depth 2
	movq	80(%r14), %rax
	movq	128(%r14), %r15
	testq	%rax, %rax
	je	.LBB137_4
# %bb.3:                                #   in Loop: Header=BB137_2 Depth=1
	movq	%r14, %rdi
	callq	*%rax
.LBB137_4:                              #   in Loop: Header=BB137_2 Depth=1
	testb	%bl, %bl
	je	.LBB137_8
# %bb.5:                                #   in Loop: Header=BB137_2 Depth=1
	movq	(%r14), %rdi
	callq	free@PLT
	movq	8(%r14), %rdi
	callq	free@PLT
	movq	16(%r14), %rdi
	callq	free@PLT
	movq	24(%r14), %r12
	movq	32(%r14), %r13
	cmpq	%r13, %r12
	je	.LBB137_8
	.p2align	4, 0x90
.LBB137_6:                              # %.lr.ph
                                        #   Parent Loop BB137_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	(%r12), %rdi
	callq	free@PLT
	movq	8(%r12), %rdi
	callq	free@PLT
	addq	$32, %r12
	cmpq	%r13, %r12
	jne	.LBB137_6
.LBB137_8:                              # %.loopexit
                                        #   in Loop: Header=BB137_2 Depth=1
	movq	24(%r14), %r12
	movq	32(%r14), %r13
	jmp	.LBB137_9
	.p2align	4, 0x90
.LBB137_34:                             # %_ZNKR8pybind116handle7dec_refEv.exit
                                        #   in Loop: Header=BB137_9 Depth=2
	addq	$32, %r12
.LBB137_9:                              # %.loopexit
                                        #   Parent Loop BB137_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpq	%r13, %r12
	je	.LBB137_10
# %bb.17:                               # %.lr.ph74
                                        #   in Loop: Header=BB137_9 Depth=2
	cmpq	$0, 16(%r12)
	je	.LBB137_34
# %bb.18:                               #   in Loop: Header=BB137_9 Depth=2
	callq	PyGILState_Check@PLT
	testl	%eax, %eax
	je	.LBB137_19
# %bb.30:                               #   in Loop: Header=BB137_9 Depth=2
	movq	16(%r12), %rdi
	testq	%rdi, %rdi
	je	.LBB137_34
# %bb.31:                               #   in Loop: Header=BB137_9 Depth=2
	movq	(%rdi), %rax
	testl	%eax, %eax
	js	.LBB137_34
# %bb.32:                               #   in Loop: Header=BB137_9 Depth=2
	decq	%rax
	movq	%rax, (%rdi)
	jne	.LBB137_34
# %bb.33:                               #   in Loop: Header=BB137_9 Depth=2
	callq	_Py_Dealloc@PLT
	jmp	.LBB137_34
	.p2align	4, 0x90
.LBB137_10:                             # %._crit_edge
                                        #   in Loop: Header=BB137_2 Depth=1
	movq	104(%r14), %rax
	testq	%rax, %rax
	je	.LBB137_13
# %bb.11:                               #   in Loop: Header=BB137_2 Depth=1
	movq	24(%rax), %rdi
	callq	free@PLT
	movq	104(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB137_13
# %bb.12:                               #   in Loop: Header=BB137_2 Depth=1
	movl	$32, %esi
	callq	_ZdlPvm@PLT
.LBB137_13:                             #   in Loop: Header=BB137_2 Depth=1
	movq	24(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB137_15
# %bb.14:                               #   in Loop: Header=BB137_2 Depth=1
	movq	40(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB137_15
.LBB137_16:                             # %._crit_edge79
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB137_19:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i
	.cfi_def_cfa_offset 96
	movl	$28, %edi
	callq	_Znwm@PLT
	movq	%rax, %rbx
	movups	.L.str.35(%rip), %xmm0
	movups	%xmm0, (%rax)
	movups	.L.str.35+11(%rip), %xmm0
	movups	%xmm0, 11(%rax)
	movb	$0, 27(%rax)
	movq	stderr@GOTPCREL(%rip), %r14
	movq	(%r14), %rdi
	leaq	.L.str.36(%rip), %rsi
	movq	%rax, %rdx
	xorl	%eax, %eax
	callq	fprintf@PLT
	movq	16(%r12), %rax
	movq	8(%rax), %rax
	movq	24(%rax), %rcx
	testq	%rcx, %rcx
	je	.LBB137_21
# %bb.20:
	movq	(%r14), %rdi
	leaq	.L.str.37(%rip), %rsi
	movq	%rbx, %rdx
	xorl	%eax, %eax
	callq	fprintf@PLT
.LBB137_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i54
	movq	(%r14), %rsi
	movl	$10, %edi
	callq	fputc@PLT
	movq	(%r14), %rdi
	callq	fflush@PLT
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
	leaq	24(%rsp), %r12
	movq	%r12, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp2462:
	movl	$56, %edi
	callq	_Znwm@PLT
.Ltmp2463:
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i.thread
	movb	$0, (%rax)
	movq	%rax, 8(%rsp)
	movq	$55, 24(%rsp)
	movups	(%rbx), %xmm0
	movups	11(%rbx), %xmm1
	movups	%xmm1, 11(%rax)
	movups	%xmm0, (%rax)
	movq	$27, 16(%rsp)
	movups	.L.str.39+12(%rip), %xmm0
	movups	%xmm0, 39(%rax)
	movups	.L.str.39(%rip), %xmm0
	movups	%xmm0, 27(%rax)
	movq	$55, 16(%rsp)
	movb	$0, 55(%rax)
	movb	$1, %bpl
.Ltmp2465:
	leaq	8(%rsp), %rsi
	movq	%r14, %rdi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp2466:
# %bb.23:
	xorl	%ebp, %ebp
.Ltmp2467:
	movq	_ZTISt13runtime_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt13runtime_errorD1Ev@GOTPCREL(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2468:
# %bb.29:
.LBB137_24:
.Ltmp2469:
	movq	%rax, %r15
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB137_26
# %bb.25:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i28
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB137_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i28
	testb	%bpl, %bpl
	jne	.LBB137_27
	jmp	.LBB137_28
.LBB137_35:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.thread.i.i.i32
.Ltmp2464:
	movq	%rax, %r15
.LBB137_27:
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
.LBB137_28:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i6.i
	movl	$28, %esi
	movq	%rbx, %rdi
	callq	_ZdlPvm@PLT
	movq	%r15, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end137:
	.size	_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb, .Lfunc_end137-_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb,"aG",@progbits,_ZN8pybind1112cpp_function8destructEPNS_6detail15function_recordEb,comdat
	.p2align	2, 0x0
GCC_except_table137:
.Lexception72:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end72-.Lcst_begin72
.Lcst_begin72:
	.uleb128 .Lfunc_begin72-.Lfunc_begin72  # >> Call Site 1 <<
	.uleb128 .Ltmp2462-.Lfunc_begin72       #   Call between .Lfunc_begin72 and .Ltmp2462
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2462-.Lfunc_begin72       # >> Call Site 2 <<
	.uleb128 .Ltmp2463-.Ltmp2462            #   Call between .Ltmp2462 and .Ltmp2463
	.uleb128 .Ltmp2464-.Lfunc_begin72       #     jumps to .Ltmp2464
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2465-.Lfunc_begin72       # >> Call Site 3 <<
	.uleb128 .Ltmp2468-.Ltmp2465            #   Call between .Ltmp2465 and .Ltmp2468
	.uleb128 .Ltmp2469-.Lfunc_begin72       #     jumps to .Ltmp2469
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2468-.Lfunc_begin72       # >> Call Site 4 <<
	.uleb128 .Lfunc_end137-.Ltmp2468        #   Call between .Ltmp2468 and .Lfunc_end137
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end72:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZN8pybind116detail36function_record_PyTypeObject_methodsL14reduce_ex_implEP7_objectS3_S3_
	.type	_ZN8pybind116detail36function_record_PyTypeObject_methodsL14reduce_ex_implEP7_objectS3_S3_,@function
_ZN8pybind116detail36function_record_PyTypeObject_methodsL14reduce_ex_implEP7_objectS3_S3_: # @_ZN8pybind116detail36function_record_PyTypeObject_methodsL14reduce_ex_implEP7_objectS3_S3_
.Lfunc_begin73:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception73
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$96, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	8(%rdi), %rax
	testb	$-128, 171(%rax)
	jne	.LBB138_74
# %bb.1:
	movq	%rdi, %rbx
	leaq	_ZN8pybind116detailL28function_record_PyTypeObjectE(%rip), %rcx
	cmpq	%rcx, %rax
	je	.LBB138_3
# %bb.2:                                # %_ZN8pybind116detail27is_function_record_PyObjectEP7_object.exit.i
	movq	24(%rax), %rdi
	movq	_ZN8pybind116detailL28function_record_PyTypeObjectE+24(%rip), %rsi
	callq	strcmp@PLT
	testl	%eax, %eax
	jne	.LBB138_74
.LBB138_3:                              # %_ZN8pybind116detail33function_record_ptr_from_PyObjectEP7_object.exit
	movq	16(%rbx), %r14
	testq	%r14, %r14
	je	.LBB138_74
# %bb.4:
	movq	(%r14), %rax
	testq	%rax, %rax
	je	.LBB138_14
# %bb.5:
	cmpb	$0, (%rax)
	je	.LBB138_14
# %bb.6:
	movq	112(%r14), %rsi
	testq	%rsi, %rsi
	je	.LBB138_14
# %bb.7:
	movq	8(%rsi), %rdi
	cmpq	PyModule_Type@GOTPCREL(%rip), %rdi
	je	.LBB138_10
# %bb.8:                                # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit
	movq	PyModule_Type@GOTPCREL(%rip), %rsi
	callq	PyType_IsSubtype@PLT
	testl	%eax, %eax
	je	.LBB138_14
# %bb.9:                                # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit._ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.thread_crit_edge
	movq	112(%r14), %rsi
.LBB138_10:                             # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.thread
	leaq	32(%rsp), %rdi
	callq	_ZN8pybind116detail16get_scope_moduleENS_6handleE
	movq	32(%rsp), %r15
	testq	%r15, %r15
	je	.LBB138_11
# %bb.17:
.Ltmp2470:
	callq	PyEval_GetBuiltins@PLT
.Ltmp2471:
# %bb.18:
	movq	%rax, 24(%rsp)
.Ltmp2472:
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2473:
# %bb.19:                               # %_ZN8pybind1118reinterpret_borrowINS_4dictEEET_NS_6handleE.exit
	movq	24(%rsp), %r14
.Ltmp2475:
	leaq	.L.str.123(%rip), %rsi
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2EPKc
.Ltmp2476:
# %bb.20:                               # %.noexc
	movq	8(%rsp), %rax
	movq	$0, 8(%rsp)
	movq	%r14, 72(%rsp)
	movq	%rax, 80(%rsp)
	movq	$0, 16(%rsp)
	movq	$0, 88(%rsp)
.Ltmp2478:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2479:
# %bb.21:                               # %_ZN8pybind116objectD2Ev.exit.i
.Ltmp2481:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2482:
# %bb.22:
.Ltmp2484:
	leaq	.L.str.124(%rip), %rsi
	leaq	48(%rsp), %rdi
	callq	_ZN8pybind113strC2EPKc
.Ltmp2485:
# %bb.23:
.Ltmp2487:
	leaq	56(%rsp), %rdi
	leaq	48(%rsp), %rsi
	leaq	32(%rsp), %rdx
	callq	_ZNK8pybind116detail10object_apiINS_6handleEEplERKS3_
.Ltmp2488:
# %bb.24:
.Ltmp2490:
	leaq	.L.str.125(%rip), %rsi
	leaq	40(%rsp), %rdi
	callq	_ZN8pybind113strC2EPKc
.Ltmp2491:
# %bb.25:
.Ltmp2493:
	leaq	8(%rsp), %rdi
	leaq	56(%rsp), %rsi
	leaq	40(%rsp), %rdx
	callq	_ZNK8pybind116detail10object_apiINS_6handleEEplERKS3_
.Ltmp2494:
# %bb.26:
.Ltmp2496:
	leaq	16(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6objectEEEENS_5tupleEDpOT0_
.Ltmp2497:
# %bb.27:
.Ltmp2511:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2512:
# %bb.28:                               # %_ZN8pybind116objectD2Ev.exit
.Ltmp2514:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2515:
# %bb.29:                               # %_ZN8pybind116objectD2Ev.exit42
.Ltmp2517:
	leaq	56(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2518:
# %bb.30:                               # %_ZN8pybind116objectD2Ev.exit43
.Ltmp2520:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2521:
# %bb.31:                               # %_ZN8pybind116objectD2Ev.exit44
.Ltmp2523:
	leaq	8(%rsp), %rdi
	leaq	64(%rsp), %rsi
	leaq	16(%rsp), %rdx
	callq	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6detail8accessorINS2_17accessor_policies12generic_itemEEENS_5tupleEEEES7_DpOT0_
.Ltmp2524:
# %bb.32:
	movq	8(%rsp), %r14
	movq	$0, 8(%rsp)
.Ltmp2535:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2536:
# %bb.33:                               # %_ZN8pybind116objectD2Ev.exit45
.Ltmp2538:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2539:
# %bb.34:                               # %_ZN8pybind116objectD2Ev.exit46
.Ltmp2541:
	leaq	88(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2542:
# %bb.35:                               # %_ZN8pybind116objectD2Ev.exit.i47
.Ltmp2544:
	leaq	80(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2545:
# %bb.36:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev.exit
.Ltmp2547:
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2548:
	jmp	.LBB138_12
.LBB138_11:
                                        # implicit-def: $r14
.LBB138_12:
.Ltmp2550:
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2551:
# %bb.13:                               # %_ZN8pybind116objectD2Ev.exit57
	testq	%r15, %r15
	jne	.LBB138_65
.LBB138_14:
	movq	PyExc_RuntimeError@GOTPCREL(%rip), %rax
	movq	(%rax), %r14
	movq	%rbx, %rdi
	callq	PyObject_Repr@PLT
	testq	%rax, %rax
	je	.LBB138_15
# %bb.58:                               # %_ZN8pybind114reprENS_6handleE.exit
	movq	%rax, 16(%rsp)
.Ltmp2553:
	leaq	.L.str.126(%rip), %rsi
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2EPKc
.Ltmp2554:
# %bb.59:
.Ltmp2556:
	leaq	64(%rsp), %rdi
	leaq	16(%rsp), %rsi
	leaq	8(%rsp), %rdx
	callq	_ZNK8pybind116detail10object_apiINS_6handleEEplERKS3_
.Ltmp2557:
# %bb.60:
	movq	64(%rsp), %rsi
.Ltmp2559:
	movq	%r14, %rdi
	callq	PyErr_SetObject@PLT
.Ltmp2560:
# %bb.61:                               # %_ZN8pybind119set_errorERKNS_6handleES2_.exit
.Ltmp2571:
	leaq	64(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2572:
# %bb.62:                               # %_ZN8pybind116objectD2Ev.exit60
.Ltmp2574:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2575:
# %bb.63:                               # %_ZN8pybind116objectD2Ev.exit61
.Ltmp2577:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2578:
# %bb.64:                               # %_ZN8pybind116objectD2Ev.exit62
	xorl	%r14d, %r14d
.LBB138_65:
	movq	%r14, %rax
	addq	$96, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB138_74:                             # %_ZN8pybind116detail33function_record_ptr_from_PyObjectEP7_object.exit.thread
	.cfi_def_cfa_offset 128
	leaq	.L.str.122(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.LBB138_15:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2580:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2581:
# %bb.16:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.LBB138_85:
.Ltmp2549:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_84:
.Ltmp2546:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_83:
.Ltmp2543:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_82:
.Ltmp2540:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_81:
.Ltmp2537:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_50:
.Ltmp2525:
	movq	%rax, %rbx
.Ltmp2526:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2527:
	jmp	.LBB138_51
.LBB138_86:
.Ltmp2528:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_80:
.Ltmp2522:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_79:
.Ltmp2519:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_78:
.Ltmp2516:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_77:
.Ltmp2513:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_38:
.Ltmp2498:
	movq	%rax, %rbx
.Ltmp2499:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2500:
	jmp	.LBB138_41
.LBB138_39:
.Ltmp2501:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_40:
.Ltmp2495:
	movq	%rax, %rbx
.LBB138_41:                             # %_ZN8pybind116objectD2Ev.exit49
.Ltmp2502:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2503:
	jmp	.LBB138_44
.LBB138_42:
.Ltmp2504:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_43:
.Ltmp2492:
	movq	%rax, %rbx
.LBB138_44:                             # %_ZN8pybind116objectD2Ev.exit50
.Ltmp2505:
	leaq	56(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2506:
	jmp	.LBB138_47
.LBB138_45:
.Ltmp2507:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_46:
.Ltmp2489:
	movq	%rax, %rbx
.LBB138_47:                             # %_ZN8pybind116objectD2Ev.exit51
.Ltmp2508:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2509:
	jmp	.LBB138_51
.LBB138_48:
.Ltmp2510:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_49:
.Ltmp2486:
	movq	%rax, %rbx
.LBB138_51:                             # %_ZN8pybind116objectD2Ev.exit54
	leaq	64(%rsp), %rdi
	callq	_ZN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEED2Ev
	jmp	.LBB138_52
.LBB138_76:
.Ltmp2483:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_75:
.Ltmp2480:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_37:
.Ltmp2477:
	movq	%rax, %rbx
.LBB138_52:
.Ltmp2529:
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2530:
	jmp	.LBB138_55
.LBB138_56:
.Ltmp2552:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_53:
.Ltmp2531:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_54:
.Ltmp2474:
	movq	%rax, %rbx
.LBB138_55:                             # %_ZN8pybind116objectD2Ev.exit55
.Ltmp2532:
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2533:
	jmp	.LBB138_73
.LBB138_87:
.Ltmp2534:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_57:
.Ltmp2582:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB138_90:
.Ltmp2579:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_89:
.Ltmp2576:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_88:
.Ltmp2573:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_66:
.Ltmp2561:
	movq	%rax, %rbx
.Ltmp2562:
	leaq	64(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2563:
	jmp	.LBB138_69
.LBB138_67:
.Ltmp2564:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_68:
.Ltmp2558:
	movq	%rax, %rbx
.LBB138_69:                             # %_ZN8pybind116objectD2Ev.exit63
.Ltmp2565:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2566:
	jmp	.LBB138_72
.LBB138_70:
.Ltmp2567:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_71:
.Ltmp2555:
	movq	%rax, %rbx
.LBB138_72:                             # %_ZN8pybind116objectD2Ev.exit64
.Ltmp2568:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2569:
.LBB138_73:                             # %common.resume
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB138_91:
.Ltmp2570:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end138:
	.size	_ZN8pybind116detail36function_record_PyTypeObject_methodsL14reduce_ex_implEP7_objectS3_S3_, .Lfunc_end138-_ZN8pybind116detail36function_record_PyTypeObject_methodsL14reduce_ex_implEP7_objectS3_S3_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table138:
.Lexception73:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase54-.Lttbaseref54
.Lttbaseref54:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end73-.Lcst_begin73
.Lcst_begin73:
	.uleb128 .Lfunc_begin73-.Lfunc_begin73  # >> Call Site 1 <<
	.uleb128 .Ltmp2470-.Lfunc_begin73       #   Call between .Lfunc_begin73 and .Ltmp2470
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2470-.Lfunc_begin73       # >> Call Site 2 <<
	.uleb128 .Ltmp2473-.Ltmp2470            #   Call between .Ltmp2470 and .Ltmp2473
	.uleb128 .Ltmp2474-.Lfunc_begin73       #     jumps to .Ltmp2474
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2475-.Lfunc_begin73       # >> Call Site 3 <<
	.uleb128 .Ltmp2476-.Ltmp2475            #   Call between .Ltmp2475 and .Ltmp2476
	.uleb128 .Ltmp2477-.Lfunc_begin73       #     jumps to .Ltmp2477
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2478-.Lfunc_begin73       # >> Call Site 4 <<
	.uleb128 .Ltmp2479-.Ltmp2478            #   Call between .Ltmp2478 and .Ltmp2479
	.uleb128 .Ltmp2480-.Lfunc_begin73       #     jumps to .Ltmp2480
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2481-.Lfunc_begin73       # >> Call Site 5 <<
	.uleb128 .Ltmp2482-.Ltmp2481            #   Call between .Ltmp2481 and .Ltmp2482
	.uleb128 .Ltmp2483-.Lfunc_begin73       #     jumps to .Ltmp2483
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2484-.Lfunc_begin73       # >> Call Site 6 <<
	.uleb128 .Ltmp2485-.Ltmp2484            #   Call between .Ltmp2484 and .Ltmp2485
	.uleb128 .Ltmp2486-.Lfunc_begin73       #     jumps to .Ltmp2486
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2487-.Lfunc_begin73       # >> Call Site 7 <<
	.uleb128 .Ltmp2488-.Ltmp2487            #   Call between .Ltmp2487 and .Ltmp2488
	.uleb128 .Ltmp2489-.Lfunc_begin73       #     jumps to .Ltmp2489
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2490-.Lfunc_begin73       # >> Call Site 8 <<
	.uleb128 .Ltmp2491-.Ltmp2490            #   Call between .Ltmp2490 and .Ltmp2491
	.uleb128 .Ltmp2492-.Lfunc_begin73       #     jumps to .Ltmp2492
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2493-.Lfunc_begin73       # >> Call Site 9 <<
	.uleb128 .Ltmp2494-.Ltmp2493            #   Call between .Ltmp2493 and .Ltmp2494
	.uleb128 .Ltmp2495-.Lfunc_begin73       #     jumps to .Ltmp2495
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2496-.Lfunc_begin73       # >> Call Site 10 <<
	.uleb128 .Ltmp2497-.Ltmp2496            #   Call between .Ltmp2496 and .Ltmp2497
	.uleb128 .Ltmp2498-.Lfunc_begin73       #     jumps to .Ltmp2498
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2511-.Lfunc_begin73       # >> Call Site 11 <<
	.uleb128 .Ltmp2512-.Ltmp2511            #   Call between .Ltmp2511 and .Ltmp2512
	.uleb128 .Ltmp2513-.Lfunc_begin73       #     jumps to .Ltmp2513
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2514-.Lfunc_begin73       # >> Call Site 12 <<
	.uleb128 .Ltmp2515-.Ltmp2514            #   Call between .Ltmp2514 and .Ltmp2515
	.uleb128 .Ltmp2516-.Lfunc_begin73       #     jumps to .Ltmp2516
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2517-.Lfunc_begin73       # >> Call Site 13 <<
	.uleb128 .Ltmp2518-.Ltmp2517            #   Call between .Ltmp2517 and .Ltmp2518
	.uleb128 .Ltmp2519-.Lfunc_begin73       #     jumps to .Ltmp2519
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2520-.Lfunc_begin73       # >> Call Site 14 <<
	.uleb128 .Ltmp2521-.Ltmp2520            #   Call between .Ltmp2520 and .Ltmp2521
	.uleb128 .Ltmp2522-.Lfunc_begin73       #     jumps to .Ltmp2522
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2523-.Lfunc_begin73       # >> Call Site 15 <<
	.uleb128 .Ltmp2524-.Ltmp2523            #   Call between .Ltmp2523 and .Ltmp2524
	.uleb128 .Ltmp2525-.Lfunc_begin73       #     jumps to .Ltmp2525
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2535-.Lfunc_begin73       # >> Call Site 16 <<
	.uleb128 .Ltmp2536-.Ltmp2535            #   Call between .Ltmp2535 and .Ltmp2536
	.uleb128 .Ltmp2537-.Lfunc_begin73       #     jumps to .Ltmp2537
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2538-.Lfunc_begin73       # >> Call Site 17 <<
	.uleb128 .Ltmp2539-.Ltmp2538            #   Call between .Ltmp2538 and .Ltmp2539
	.uleb128 .Ltmp2540-.Lfunc_begin73       #     jumps to .Ltmp2540
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2541-.Lfunc_begin73       # >> Call Site 18 <<
	.uleb128 .Ltmp2542-.Ltmp2541            #   Call between .Ltmp2541 and .Ltmp2542
	.uleb128 .Ltmp2543-.Lfunc_begin73       #     jumps to .Ltmp2543
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2544-.Lfunc_begin73       # >> Call Site 19 <<
	.uleb128 .Ltmp2545-.Ltmp2544            #   Call between .Ltmp2544 and .Ltmp2545
	.uleb128 .Ltmp2546-.Lfunc_begin73       #     jumps to .Ltmp2546
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2547-.Lfunc_begin73       # >> Call Site 20 <<
	.uleb128 .Ltmp2548-.Ltmp2547            #   Call between .Ltmp2547 and .Ltmp2548
	.uleb128 .Ltmp2549-.Lfunc_begin73       #     jumps to .Ltmp2549
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2550-.Lfunc_begin73       # >> Call Site 21 <<
	.uleb128 .Ltmp2551-.Ltmp2550            #   Call between .Ltmp2550 and .Ltmp2551
	.uleb128 .Ltmp2552-.Lfunc_begin73       #     jumps to .Ltmp2552
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2551-.Lfunc_begin73       # >> Call Site 22 <<
	.uleb128 .Ltmp2553-.Ltmp2551            #   Call between .Ltmp2551 and .Ltmp2553
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2553-.Lfunc_begin73       # >> Call Site 23 <<
	.uleb128 .Ltmp2554-.Ltmp2553            #   Call between .Ltmp2553 and .Ltmp2554
	.uleb128 .Ltmp2555-.Lfunc_begin73       #     jumps to .Ltmp2555
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2556-.Lfunc_begin73       # >> Call Site 24 <<
	.uleb128 .Ltmp2557-.Ltmp2556            #   Call between .Ltmp2556 and .Ltmp2557
	.uleb128 .Ltmp2558-.Lfunc_begin73       #     jumps to .Ltmp2558
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2559-.Lfunc_begin73       # >> Call Site 25 <<
	.uleb128 .Ltmp2560-.Ltmp2559            #   Call between .Ltmp2559 and .Ltmp2560
	.uleb128 .Ltmp2561-.Lfunc_begin73       #     jumps to .Ltmp2561
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2571-.Lfunc_begin73       # >> Call Site 26 <<
	.uleb128 .Ltmp2572-.Ltmp2571            #   Call between .Ltmp2571 and .Ltmp2572
	.uleb128 .Ltmp2573-.Lfunc_begin73       #     jumps to .Ltmp2573
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2574-.Lfunc_begin73       # >> Call Site 27 <<
	.uleb128 .Ltmp2575-.Ltmp2574            #   Call between .Ltmp2574 and .Ltmp2575
	.uleb128 .Ltmp2576-.Lfunc_begin73       #     jumps to .Ltmp2576
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2577-.Lfunc_begin73       # >> Call Site 28 <<
	.uleb128 .Ltmp2578-.Ltmp2577            #   Call between .Ltmp2577 and .Ltmp2578
	.uleb128 .Ltmp2579-.Lfunc_begin73       #     jumps to .Ltmp2579
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2578-.Lfunc_begin73       # >> Call Site 29 <<
	.uleb128 .Ltmp2580-.Ltmp2578            #   Call between .Ltmp2578 and .Ltmp2580
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2580-.Lfunc_begin73       # >> Call Site 30 <<
	.uleb128 .Ltmp2581-.Ltmp2580            #   Call between .Ltmp2580 and .Ltmp2581
	.uleb128 .Ltmp2582-.Lfunc_begin73       #     jumps to .Ltmp2582
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2581-.Lfunc_begin73       # >> Call Site 31 <<
	.uleb128 .Ltmp2526-.Ltmp2581            #   Call between .Ltmp2581 and .Ltmp2526
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2526-.Lfunc_begin73       # >> Call Site 32 <<
	.uleb128 .Ltmp2527-.Ltmp2526            #   Call between .Ltmp2526 and .Ltmp2527
	.uleb128 .Ltmp2528-.Lfunc_begin73       #     jumps to .Ltmp2528
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2499-.Lfunc_begin73       # >> Call Site 33 <<
	.uleb128 .Ltmp2500-.Ltmp2499            #   Call between .Ltmp2499 and .Ltmp2500
	.uleb128 .Ltmp2501-.Lfunc_begin73       #     jumps to .Ltmp2501
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2502-.Lfunc_begin73       # >> Call Site 34 <<
	.uleb128 .Ltmp2503-.Ltmp2502            #   Call between .Ltmp2502 and .Ltmp2503
	.uleb128 .Ltmp2504-.Lfunc_begin73       #     jumps to .Ltmp2504
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2505-.Lfunc_begin73       # >> Call Site 35 <<
	.uleb128 .Ltmp2506-.Ltmp2505            #   Call between .Ltmp2505 and .Ltmp2506
	.uleb128 .Ltmp2507-.Lfunc_begin73       #     jumps to .Ltmp2507
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2508-.Lfunc_begin73       # >> Call Site 36 <<
	.uleb128 .Ltmp2509-.Ltmp2508            #   Call between .Ltmp2508 and .Ltmp2509
	.uleb128 .Ltmp2510-.Lfunc_begin73       #     jumps to .Ltmp2510
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2529-.Lfunc_begin73       # >> Call Site 37 <<
	.uleb128 .Ltmp2530-.Ltmp2529            #   Call between .Ltmp2529 and .Ltmp2530
	.uleb128 .Ltmp2531-.Lfunc_begin73       #     jumps to .Ltmp2531
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2532-.Lfunc_begin73       # >> Call Site 38 <<
	.uleb128 .Ltmp2533-.Ltmp2532            #   Call between .Ltmp2532 and .Ltmp2533
	.uleb128 .Ltmp2534-.Lfunc_begin73       #     jumps to .Ltmp2534
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2533-.Lfunc_begin73       # >> Call Site 39 <<
	.uleb128 .Ltmp2562-.Ltmp2533            #   Call between .Ltmp2533 and .Ltmp2562
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2562-.Lfunc_begin73       # >> Call Site 40 <<
	.uleb128 .Ltmp2563-.Ltmp2562            #   Call between .Ltmp2562 and .Ltmp2563
	.uleb128 .Ltmp2564-.Lfunc_begin73       #     jumps to .Ltmp2564
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2565-.Lfunc_begin73       # >> Call Site 41 <<
	.uleb128 .Ltmp2566-.Ltmp2565            #   Call between .Ltmp2565 and .Ltmp2566
	.uleb128 .Ltmp2567-.Lfunc_begin73       #     jumps to .Ltmp2567
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2568-.Lfunc_begin73       # >> Call Site 42 <<
	.uleb128 .Ltmp2569-.Ltmp2568            #   Call between .Ltmp2568 and .Ltmp2569
	.uleb128 .Ltmp2570-.Lfunc_begin73       #     jumps to .Ltmp2570
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2569-.Lfunc_begin73       # >> Call Site 43 <<
	.uleb128 .Lfunc_end138-.Ltmp2569        #   Call between .Ltmp2569 and .Lfunc_end138
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end73:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase54:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6objectEEEENS_5tupleEDpOT0_,"axG",@progbits,_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6objectEEEENS_5tupleEDpOT0_,comdat
	.hidden	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6objectEEEENS_5tupleEDpOT0_ # -- Begin function _ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6objectEEEENS_5tupleEDpOT0_
	.weak	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6objectEEEENS_5tupleEDpOT0_
	.p2align	4, 0x90
	.type	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6objectEEEENS_5tupleEDpOT0_,@function
_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6objectEEEENS_5tupleEDpOT0_: # @_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6objectEEEENS_5tupleEDpOT0_
.Lfunc_begin74:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception74
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$80, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	%rsi, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rax), %rax
	movq	%rax, 8(%rsp)
	testq	%rax, %rax
	je	.LBB139_9
# %bb.1:                                # %.split44.critedge
.Ltmp2583:
	movl	$1, %edi
	callq	PyTuple_New@PLT
.Ltmp2584:
# %bb.2:                                # %.noexc
	movq	%rax, (%r14)
	testq	%rax, %rax
	je	.LBB139_5
# %bb.3:                                # %_ZN8pybind115tupleC2ImTnNSt9enable_ifIXsr3std11is_integralIT_EE5valueEiE4typeELi0EEES3_.exit.preheader.preheader
	movq	8(%rsp), %rcx
	movq	$0, 8(%rsp)
	movq	8(%rax), %rdx
	testb	$4, 171(%rdx)
	je	.LBB139_4
# %bb.22:                               # %_ZL16PyTuple_SET_ITEMP7_objectlS0_.exit
	movq	%rcx, 24(%rax)
.Ltmp2586:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2587:
# %bb.23:                               # %_ZNSt5arrayIN8pybind116objectELm1EED2Ev.exit
	movq	%r14, %rax
	addq	$80, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB139_9:                              # %.split46.us
	.cfi_def_cfa_offset 112
.Ltmp2595:
	leaq	48(%rsp), %rdi
	callq	_ZN8pybind11L7type_idINS_6objectEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
.Ltmp2596:
# %bb.10:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2598:
	leaq	16(%rsp), %rdi
	xorl	%esi, %esi
	callq	_ZNSt7__cxx119to_stringEm@PLT
.Ltmp2599:
# %bb.11:
	movb	$1, %bpl
.Ltmp2601:
	leaq	16(%rsp), %rsi
	leaq	48(%rsp), %rdx
	movq	%r14, %rdi
	callq	_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_
.Ltmp2602:
# %bb.12:
	xorl	%ebp, %ebp
.Ltmp2603:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2604:
# %bb.28:
.LBB139_5:
.Ltmp2589:
	leaq	.L.str.130(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp2590:
# %bb.6:
.LBB139_4:
	leaq	.L.str.74(%rip), %rdi
	leaq	.L.str.75(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL16PyTuple_SET_ITEMP7_objectlS0_(%rip), %rcx
	movl	$33, %edx
	callq	__assert_fail@PLT
.LBB139_15:
.Ltmp2605:
	movq	%rax, %rbx
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB139_16
# %bb.17:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	testb	%bpl, %bpl
	jne	.LBB139_18
.LBB139_19:
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB139_20
	jmp	.LBB139_26
.LBB139_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	testb	%bpl, %bpl
	je	.LBB139_19
	jmp	.LBB139_18
.LBB139_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.thread
.Ltmp2600:
	movq	%rax, %rbx
.LBB139_18:
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB139_26
.LBB139_20:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB139_26
.LBB139_13:
.Ltmp2597:
	jmp	.LBB139_25
.LBB139_21:
.Ltmp2588:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB139_7:
.Ltmp2591:
	movq	%rax, %rbx
.Ltmp2592:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2593:
	jmp	.LBB139_26
.LBB139_8:
.Ltmp2594:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB139_24:
.Ltmp2585:
.LBB139_25:                             # %.body
	movq	%rax, %rbx
.LBB139_26:                             # %.body
.Ltmp2606:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2607:
# %bb.27:                               # %_ZNSt5arrayIN8pybind116objectELm1EED2Ev.exit35
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB139_29:
.Ltmp2608:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end139:
	.size	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6objectEEEENS_5tupleEDpOT0_, .Lfunc_end139-_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6objectEEEENS_5tupleEDpOT0_
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6objectEEEENS_5tupleEDpOT0_,"aG",@progbits,_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6objectEEEENS_5tupleEDpOT0_,comdat
	.p2align	2, 0x0
GCC_except_table139:
.Lexception74:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase55-.Lttbaseref55
.Lttbaseref55:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end74-.Lcst_begin74
.Lcst_begin74:
	.uleb128 .Lfunc_begin74-.Lfunc_begin74  # >> Call Site 1 <<
	.uleb128 .Ltmp2583-.Lfunc_begin74       #   Call between .Lfunc_begin74 and .Ltmp2583
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2583-.Lfunc_begin74       # >> Call Site 2 <<
	.uleb128 .Ltmp2584-.Ltmp2583            #   Call between .Ltmp2583 and .Ltmp2584
	.uleb128 .Ltmp2585-.Lfunc_begin74       #     jumps to .Ltmp2585
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2586-.Lfunc_begin74       # >> Call Site 3 <<
	.uleb128 .Ltmp2587-.Ltmp2586            #   Call between .Ltmp2586 and .Ltmp2587
	.uleb128 .Ltmp2588-.Lfunc_begin74       #     jumps to .Ltmp2588
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2595-.Lfunc_begin74       # >> Call Site 4 <<
	.uleb128 .Ltmp2596-.Ltmp2595            #   Call between .Ltmp2595 and .Ltmp2596
	.uleb128 .Ltmp2597-.Lfunc_begin74       #     jumps to .Ltmp2597
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2596-.Lfunc_begin74       # >> Call Site 5 <<
	.uleb128 .Ltmp2598-.Ltmp2596            #   Call between .Ltmp2596 and .Ltmp2598
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2598-.Lfunc_begin74       # >> Call Site 6 <<
	.uleb128 .Ltmp2599-.Ltmp2598            #   Call between .Ltmp2598 and .Ltmp2599
	.uleb128 .Ltmp2600-.Lfunc_begin74       #     jumps to .Ltmp2600
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2601-.Lfunc_begin74       # >> Call Site 7 <<
	.uleb128 .Ltmp2604-.Ltmp2601            #   Call between .Ltmp2601 and .Ltmp2604
	.uleb128 .Ltmp2605-.Lfunc_begin74       #     jumps to .Ltmp2605
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2589-.Lfunc_begin74       # >> Call Site 8 <<
	.uleb128 .Ltmp2590-.Ltmp2589            #   Call between .Ltmp2589 and .Ltmp2590
	.uleb128 .Ltmp2591-.Lfunc_begin74       #     jumps to .Ltmp2591
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2590-.Lfunc_begin74       # >> Call Site 9 <<
	.uleb128 .Ltmp2592-.Ltmp2590            #   Call between .Ltmp2590 and .Ltmp2592
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2592-.Lfunc_begin74       # >> Call Site 10 <<
	.uleb128 .Ltmp2593-.Ltmp2592            #   Call between .Ltmp2592 and .Ltmp2593
	.uleb128 .Ltmp2594-.Lfunc_begin74       #     jumps to .Ltmp2594
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2606-.Lfunc_begin74       # >> Call Site 11 <<
	.uleb128 .Ltmp2607-.Ltmp2606            #   Call between .Ltmp2606 and .Ltmp2607
	.uleb128 .Ltmp2608-.Lfunc_begin74       #     jumps to .Ltmp2608
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2607-.Lfunc_begin74       # >> Call Site 12 <<
	.uleb128 .Lfunc_end139-.Ltmp2607        #   Call between .Ltmp2607 and .Lfunc_end139
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end74:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase55:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8pybind116detail10object_apiINS_6handleEEplERKS3_,"axG",@progbits,_ZNK8pybind116detail10object_apiINS_6handleEEplERKS3_,comdat
	.hidden	_ZNK8pybind116detail10object_apiINS_6handleEEplERKS3_ # -- Begin function _ZNK8pybind116detail10object_apiINS_6handleEEplERKS3_
	.weak	_ZNK8pybind116detail10object_apiINS_6handleEEplERKS3_
	.p2align	4, 0x90
	.type	_ZNK8pybind116detail10object_apiINS_6handleEEplERKS3_,@function
_ZNK8pybind116detail10object_apiINS_6handleEEplERKS3_: # @_ZNK8pybind116detail10object_apiINS_6handleEEplERKS3_
.Lfunc_begin75:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception75
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	(%rsi), %rdi
	movq	(%rdx), %rsi
	callq	PyNumber_Add@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB140_1
# %bb.4:
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB140_1:
	.cfi_def_cfa_offset 32
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp2609:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2610:
# %bb.2:
.Ltmp2612:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp2613:
# %bb.8:
.LBB140_3:
.Ltmp2614:
	movq	%rax, %r14
	jmp	.LBB140_6
.LBB140_5:
.Ltmp2611:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
.LBB140_6:
.Ltmp2615:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2616:
# %bb.7:                                # %_ZN8pybind116objectD2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB140_9:
.Ltmp2617:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end140:
	.size	_ZNK8pybind116detail10object_apiINS_6handleEEplERKS3_, .Lfunc_end140-_ZNK8pybind116detail10object_apiINS_6handleEEplERKS3_
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind116detail10object_apiINS_6handleEEplERKS3_,"aG",@progbits,_ZNK8pybind116detail10object_apiINS_6handleEEplERKS3_,comdat
	.p2align	2, 0x0
GCC_except_table140:
.Lexception75:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase56-.Lttbaseref56
.Lttbaseref56:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end75-.Lcst_begin75
.Lcst_begin75:
	.uleb128 .Lfunc_begin75-.Lfunc_begin75  # >> Call Site 1 <<
	.uleb128 .Ltmp2609-.Lfunc_begin75       #   Call between .Lfunc_begin75 and .Ltmp2609
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2609-.Lfunc_begin75       # >> Call Site 2 <<
	.uleb128 .Ltmp2610-.Ltmp2609            #   Call between .Ltmp2609 and .Ltmp2610
	.uleb128 .Ltmp2611-.Lfunc_begin75       #     jumps to .Ltmp2611
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2612-.Lfunc_begin75       # >> Call Site 3 <<
	.uleb128 .Ltmp2613-.Ltmp2612            #   Call between .Ltmp2612 and .Ltmp2613
	.uleb128 .Ltmp2614-.Lfunc_begin75       #     jumps to .Ltmp2614
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2613-.Lfunc_begin75       # >> Call Site 4 <<
	.uleb128 .Ltmp2615-.Ltmp2613            #   Call between .Ltmp2613 and .Ltmp2615
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2615-.Lfunc_begin75       # >> Call Site 5 <<
	.uleb128 .Ltmp2616-.Ltmp2615            #   Call between .Ltmp2615 and .Ltmp2616
	.uleb128 .Ltmp2617-.Lfunc_begin75       #     jumps to .Ltmp2617
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2616-.Lfunc_begin75       # >> Call Site 6 <<
	.uleb128 .Lfunc_end140-.Ltmp2616        #   Call between .Ltmp2616 and .Lfunc_end140
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end75:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase56:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6detail8accessorINS2_17accessor_policies12generic_itemEEENS_5tupleEEEES7_DpOT0_,"axG",@progbits,_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6detail8accessorINS2_17accessor_policies12generic_itemEEENS_5tupleEEEES7_DpOT0_,comdat
	.hidden	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6detail8accessorINS2_17accessor_policies12generic_itemEEENS_5tupleEEEES7_DpOT0_ # -- Begin function _ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6detail8accessorINS2_17accessor_policies12generic_itemEEENS_5tupleEEEES7_DpOT0_
	.weak	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6detail8accessorINS2_17accessor_policies12generic_itemEEENS_5tupleEEEES7_DpOT0_
	.p2align	4, 0x90
	.type	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6detail8accessorINS2_17accessor_policies12generic_itemEEENS_5tupleEEEES7_DpOT0_,@function
_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6detail8accessorINS2_17accessor_policies12generic_itemEEENS_5tupleEEEES7_DpOT0_: # @_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6detail8accessorINS2_17accessor_policies12generic_itemEEENS_5tupleEEEES7_DpOT0_
.Lfunc_begin76:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception76
# %bb.0:                                # %.noexc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$112, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %rbx
	movq	%rdi, %r14
	movq	%rsi, %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies12generic_itemEE9get_cacheEv
	movq	(%rax), %rax
	movq	%rax, 48(%rsp)
	leaq	48(%rsp), %r12
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	%rsp, %r15
.Ltmp2618:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2619:
# %bb.1:
	movq	(%rax), %rax
	movq	%rax, (%rsp)
	leaq	8(%rsp), %r15
.Ltmp2620:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2621:
# %bb.2:
	movq	(%rax), %rax
	movq	%rax, 8(%rsp)
.Ltmp2629:
	leaq	48(%rsp), %rbx
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2630:
# %bb.3:                                # %_ZN8pybind116objectD2Ev.exit
	leaq	80(%rsp), %r12
	cmpq	$0, (%rsp)
	je	.LBB141_4
# %bb.32:
	cmpq	$0, 8(%rsp)
	je	.LBB141_33
# %bb.10:
.Ltmp2632:
	movl	$2, %edi
	callq	PyTuple_New@PLT
.Ltmp2633:
# %bb.11:                               # %.noexc46
	movq	%rax, (%r14)
	testq	%rax, %rax
	je	.LBB141_14
# %bb.12:                               # %_ZN8pybind115tupleC2ImTnNSt9enable_ifIXsr3std11is_integralIT_EE5valueEiE4typeELi0EEES3_.exit.preheader.preheader
	movq	(%rsp), %rcx
	movq	$0, (%rsp)
	movq	8(%rax), %rdx
	testb	$4, 171(%rdx)
	je	.LBB141_13
# %bb.35:                               # %_ZL16PyTuple_SET_ITEMP7_objectlS0_.exit.1
	movq	%rcx, 24(%rax)
	movq	8(%rsp), %rcx
	movq	$0, 8(%rsp)
	movq	%rcx, 32(%rax)
.Ltmp2635:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2636:
# %bb.36:                               # %_ZN8pybind116objectD2Ev.exit.i54
.Ltmp2637:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2638:
# %bb.37:                               # %_ZNSt5arrayIN8pybind116objectELm2EED2Ev.exit
	movq	%r14, %rax
	addq	$112, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB141_4:
	.cfi_def_cfa_offset 160
	xorl	%r15d, %r15d
	jmp	.LBB141_5
.LBB141_33:
	movl	$1, %r15d
	movq	%r12, %rbx
.LBB141_5:
.Ltmp2646:
	leaq	48(%rsp), %rdi
	callq	_ZN8pybind11L7type_idINS_6detail8accessorINS1_17accessor_policies12generic_itemEEEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
.Ltmp2647:
# %bb.6:
.Ltmp2649:
	movq	%r12, %rdi
	callq	_ZN8pybind11L7type_idINS_5tupleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
.Ltmp2650:
# %bb.7:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2652:
	leaq	16(%rsp), %rdi
	movq	%r15, %rsi
	callq	_ZNSt7__cxx119to_stringEm@PLT
.Ltmp2653:
# %bb.8:
	movb	$1, %bpl
.Ltmp2655:
	leaq	16(%rsp), %rsi
	movq	%r14, %rdi
	movq	%rbx, %rdx
	callq	_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_
.Ltmp2656:
# %bb.9:
	xorl	%ebp, %ebp
.Ltmp2657:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2658:
# %bb.42:
.LBB141_14:
.Ltmp2640:
	leaq	.L.str.130(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp2641:
# %bb.15:
.LBB141_13:
	leaq	.L.str.74(%rip), %rdi
	leaq	.L.str.75(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL16PyTuple_SET_ITEMP7_objectlS0_(%rip), %rcx
	movl	$33, %edx
	callq	__assert_fail@PLT
.LBB141_27:
.Ltmp2659:
	movq	%rax, %rbx
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB141_29
# %bb.28:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit51
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB141_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit51
	testb	%bpl, %bpl
	jne	.LBB141_30
	jmp	.LBB141_31
.LBB141_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit51.thread
.Ltmp2654:
	movq	%rax, %rbx
.LBB141_30:
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
.LBB141_31:
	leaq	48(%rsp), %rdi
	callq	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm2EED2Ev@PLT
	jmp	.LBB141_40
.LBB141_24:
.Ltmp2651:
	movq	%rax, %rbx
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB141_40
# %bb.25:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB141_40
.LBB141_16:
.Ltmp2642:
	movq	%rax, %rbx
.Ltmp2643:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2644:
	jmp	.LBB141_40
.LBB141_17:
.Ltmp2645:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB141_38:
.Ltmp2634:
	jmp	.LBB141_39
.LBB141_23:                             # %.thread
.Ltmp2648:
.LBB141_39:                             # %.body
	movq	%rax, %rbx
.LBB141_40:                             # %.body
	movq	%rsp, %rdi
	callq	_ZNSt5arrayIN8pybind116objectELm2EED2Ev
.LBB141_41:                             # %.loopexit65
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB141_43:
.Ltmp2631:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB141_34:
.Ltmp2639:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB141_19:
.Ltmp2622:
	movq	%rax, %rbx
.Ltmp2623:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2624:
# %bb.20:                               # %_ZN8pybind116objectD2Ev.exit47
	movq	%rsp, %r14
	cmpq	%r15, %r14
	je	.LBB141_41
	.p2align	4, 0x90
.LBB141_21:                             # %.preheader
                                        # =>This Inner Loop Header: Depth=1
	addq	$-8, %r15
.Ltmp2626:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2627:
# %bb.22:                               # %_ZN8pybind116objectD2Ev.exit48
                                        #   in Loop: Header=BB141_21 Depth=1
	cmpq	%r14, %r15
	jne	.LBB141_21
	jmp	.LBB141_41
.LBB141_44:
.Ltmp2628:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB141_18:
.Ltmp2625:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end141:
	.size	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6detail8accessorINS2_17accessor_policies12generic_itemEEENS_5tupleEEEES7_DpOT0_, .Lfunc_end141-_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6detail8accessorINS2_17accessor_policies12generic_itemEEENS_5tupleEEEES7_DpOT0_
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6detail8accessorINS2_17accessor_policies12generic_itemEEENS_5tupleEEEES7_DpOT0_,"aG",@progbits,_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJNS_6detail8accessorINS2_17accessor_policies12generic_itemEEENS_5tupleEEEES7_DpOT0_,comdat
	.p2align	2, 0x0
GCC_except_table141:
.Lexception76:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase57-.Lttbaseref57
.Lttbaseref57:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end76-.Lcst_begin76
.Lcst_begin76:
	.uleb128 .Lfunc_begin76-.Lfunc_begin76  # >> Call Site 1 <<
	.uleb128 .Ltmp2618-.Lfunc_begin76       #   Call between .Lfunc_begin76 and .Ltmp2618
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2618-.Lfunc_begin76       # >> Call Site 2 <<
	.uleb128 .Ltmp2621-.Ltmp2618            #   Call between .Ltmp2618 and .Ltmp2621
	.uleb128 .Ltmp2622-.Lfunc_begin76       #     jumps to .Ltmp2622
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2629-.Lfunc_begin76       # >> Call Site 3 <<
	.uleb128 .Ltmp2630-.Ltmp2629            #   Call between .Ltmp2629 and .Ltmp2630
	.uleb128 .Ltmp2631-.Lfunc_begin76       #     jumps to .Ltmp2631
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2632-.Lfunc_begin76       # >> Call Site 4 <<
	.uleb128 .Ltmp2633-.Ltmp2632            #   Call between .Ltmp2632 and .Ltmp2633
	.uleb128 .Ltmp2634-.Lfunc_begin76       #     jumps to .Ltmp2634
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2635-.Lfunc_begin76       # >> Call Site 5 <<
	.uleb128 .Ltmp2638-.Ltmp2635            #   Call between .Ltmp2635 and .Ltmp2638
	.uleb128 .Ltmp2639-.Lfunc_begin76       #     jumps to .Ltmp2639
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2646-.Lfunc_begin76       # >> Call Site 6 <<
	.uleb128 .Ltmp2647-.Ltmp2646            #   Call between .Ltmp2646 and .Ltmp2647
	.uleb128 .Ltmp2648-.Lfunc_begin76       #     jumps to .Ltmp2648
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2649-.Lfunc_begin76       # >> Call Site 7 <<
	.uleb128 .Ltmp2650-.Ltmp2649            #   Call between .Ltmp2649 and .Ltmp2650
	.uleb128 .Ltmp2651-.Lfunc_begin76       #     jumps to .Ltmp2651
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2650-.Lfunc_begin76       # >> Call Site 8 <<
	.uleb128 .Ltmp2652-.Ltmp2650            #   Call between .Ltmp2650 and .Ltmp2652
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2652-.Lfunc_begin76       # >> Call Site 9 <<
	.uleb128 .Ltmp2653-.Ltmp2652            #   Call between .Ltmp2652 and .Ltmp2653
	.uleb128 .Ltmp2654-.Lfunc_begin76       #     jumps to .Ltmp2654
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2655-.Lfunc_begin76       # >> Call Site 10 <<
	.uleb128 .Ltmp2658-.Ltmp2655            #   Call between .Ltmp2655 and .Ltmp2658
	.uleb128 .Ltmp2659-.Lfunc_begin76       #     jumps to .Ltmp2659
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2640-.Lfunc_begin76       # >> Call Site 11 <<
	.uleb128 .Ltmp2641-.Ltmp2640            #   Call between .Ltmp2640 and .Ltmp2641
	.uleb128 .Ltmp2642-.Lfunc_begin76       #     jumps to .Ltmp2642
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2641-.Lfunc_begin76       # >> Call Site 12 <<
	.uleb128 .Ltmp2643-.Ltmp2641            #   Call between .Ltmp2641 and .Ltmp2643
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2643-.Lfunc_begin76       # >> Call Site 13 <<
	.uleb128 .Ltmp2644-.Ltmp2643            #   Call between .Ltmp2643 and .Ltmp2644
	.uleb128 .Ltmp2645-.Lfunc_begin76       #     jumps to .Ltmp2645
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2644-.Lfunc_begin76       # >> Call Site 14 <<
	.uleb128 .Ltmp2623-.Ltmp2644            #   Call between .Ltmp2644 and .Ltmp2623
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2623-.Lfunc_begin76       # >> Call Site 15 <<
	.uleb128 .Ltmp2624-.Ltmp2623            #   Call between .Ltmp2623 and .Ltmp2624
	.uleb128 .Ltmp2625-.Lfunc_begin76       #     jumps to .Ltmp2625
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2626-.Lfunc_begin76       # >> Call Site 16 <<
	.uleb128 .Ltmp2627-.Ltmp2626            #   Call between .Ltmp2626 and .Ltmp2627
	.uleb128 .Ltmp2628-.Lfunc_begin76       #     jumps to .Ltmp2628
	.byte	1                               #   On action: 1
.Lcst_end76:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase57:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZN8pybind11L7type_idINS_6objectEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
	.type	_ZN8pybind11L7type_idINS_6objectEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv,@function
_ZN8pybind11L7type_idINS_6objectEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv: # @_ZN8pybind11L7type_idINS_6objectEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
.Lfunc_begin77:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception77
# %bb.0:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r15
	movl	$19, %edi
	callq	_Znwm@PLT
	movq	%rax, (%rbx)
	movq	$18, 16(%rbx)
	movups	_ZTSN8pybind116objectE(%rip), %xmm0
	movups	%xmm0, (%rax)
	movw	$17780, 16(%rax)                # imm = 0x4574
	movq	$18, 8(%rbx)
	movb	$0, 18(%rax)
.Ltmp2660:
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp2661:
# %bb.1:                                # %_ZN8pybind116detail13clean_type_idB5cxx11EPKc.exit
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB142_2:
	.cfi_def_cfa_offset 32
.Ltmp2662:
	movq	%rax, %r14
	movq	(%rbx), %rdi
	cmpq	%r15, %rdi
	je	.LBB142_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	movq	(%r15), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB142_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end142:
	.size	_ZN8pybind11L7type_idINS_6objectEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv, .Lfunc_end142-_ZN8pybind11L7type_idINS_6objectEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table142:
.Lexception77:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end77-.Lcst_begin77
.Lcst_begin77:
	.uleb128 .Lfunc_begin77-.Lfunc_begin77  # >> Call Site 1 <<
	.uleb128 .Ltmp2660-.Lfunc_begin77       #   Call between .Lfunc_begin77 and .Ltmp2660
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2660-.Lfunc_begin77       # >> Call Site 2 <<
	.uleb128 .Ltmp2661-.Ltmp2660            #   Call between .Ltmp2660 and .Ltmp2661
	.uleb128 .Ltmp2662-.Lfunc_begin77       #     jumps to .Ltmp2662
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2661-.Lfunc_begin77       # >> Call Site 3 <<
	.uleb128 .Lfunc_end142-.Ltmp2661        #   Call between .Ltmp2661 and .Lfunc_end142
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end77:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_,"axG",@progbits,_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_,comdat
	.hidden	_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ # -- Begin function _ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_
	.weak	_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_
	.p2align	4, 0x90
	.type	_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_,@function
_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_: # @_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_
.Lfunc_begin78:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception78
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$136, %rsp
	.cfi_def_cfa_offset 192
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r12
	movq	%rdi, %rbx
	movabsq	$9223372036854775789, %rbp      # imm = 0x7FFFFFFFFFFFFFED
	movq	(%rsi), %rcx
	movq	8(%rsi), %r8
	leaq	.L.str.127(%rip), %rsi
	leaq	40(%rsp), %rdi
	leaq	7(%rsp), %r9
	movl	$33, %edx
	callq	_ZSt12__str_concatINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_PKNS6_10value_typeENS6_9size_typeES9_SA_RKNS6_14allocator_typeE@PLT
	movq	48(%rsp), %rsi
	leaq	7(%rbp), %rax
	cmpq	%rax, %rsi
	jg	.LBB143_1
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	leaq	11(%rsi), %r14
	movq	40(%rsp), %rax
	leaq	56(%rsp), %r15
	movl	$15, %ecx
	cmpq	%r15, %rax
	je	.LBB143_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	56(%rsp), %rcx
.LBB143_5:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	cmpq	%rcx, %r14
	jbe	.LBB143_6
# %bb.7:
.Ltmp2663:
	leaq	.L.str.128(%rip), %rcx
	leaq	40(%rsp), %rdi
	movl	$11, %r8d
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2664:
	jmp	.LBB143_8
.LBB143_6:
	movabsq	$8104636686936252455, %rcx      # imm = 0x70797420666F2027
	movq	%rcx, (%rax,%rsi)
	movl	$656434544, 7(%rax,%rsi)        # imm = 0x27206570
.LBB143_8:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
	movq	%r14, 48(%rsp)
	movq	40(%rsp), %rax
	movb	$0, (%rax,%r14)
	leaq	24(%rsp), %r14
	movq	%r14, 8(%rsp)
	movq	40(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB143_9
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	%rdi, 8(%rsp)
	movq	48(%rsp), %r13
	movq	56(%rsp), %rax
	movq	%rax, 24(%rsp)
	jmp	.LBB143_11
.LBB143_9:
	movq	48(%rsp), %r13
	leaq	1(%r13), %rdx
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	memcpy@PLT
	movq	%r14, %rdi
.LBB143_11:
	movq	%r13, 16(%rsp)
	movq	%r15, 40(%rsp)
	movq	$0, 48(%rsp)
	movb	$0, 56(%rsp)
	movq	8(%r12), %r8
	movq	%rbp, %rax
	subq	%r13, %rax
	addq	$18, %rax
	cmpq	%r8, %rax
	jb	.LBB143_12
# %bb.14:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	leaq	(%r8,%r13), %r15
	movl	$15, %eax
	cmpq	%r14, %rdi
	je	.LBB143_16
# %bb.15:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	movq	24(%rsp), %rax
.LBB143_16:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i.i
	movq	(%r12), %rcx
	cmpq	%rax, %r15
	jbe	.LBB143_17
# %bb.21:
.Ltmp2665:
	leaq	8(%rsp), %rdi
	movq	%r13, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2666:
	jmp	.LBB143_22
.LBB143_17:
	testq	%r8, %r8
	je	.LBB143_22
# %bb.18:
	addq	%r13, %rdi
	cmpq	$1, %r8
	jne	.LBB143_20
# %bb.19:
	movzbl	(%rcx), %eax
	movb	%al, (%rdi)
	jmp	.LBB143_22
.LBB143_20:
	movq	%rcx, %rsi
	movq	%r8, %rdx
	callq	memcpy@PLT
.LBB143_22:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_.exit.i
	movq	%r15, 16(%rsp)
	movq	8(%rsp), %rax
	movb	$0, (%rax,%r15)
	leaq	88(%rsp), %r12
	movq	%r12, 72(%rsp)
	movq	8(%rsp), %rax
	cmpq	%r14, %rax
	je	.LBB143_23
# %bb.25:
	movq	%rax, 72(%rsp)
	movq	16(%rsp), %r13
	movq	16(%rsp), %rcx
	movq	%rcx, 80(%rsp)
	movq	24(%rsp), %rcx
	movq	%rcx, 88(%rsp)
	movq	%r14, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
	cmpq	%rbp, %r13
	jg	.LBB143_26
# %bb.28:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i14
	leaq	18(%r13), %rbp
	cmpq	%r12, %rax
	je	.LBB143_24
# %bb.29:
	xorl	%ecx, %ecx
	movl	$15, %edx
	testb	%cl, %cl
	je	.LBB143_31
	jmp	.LBB143_32
.LBB143_23:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i14.thread
	movq	16(%rsp), %r13
	leaq	1(%r13), %rdx
	movq	%r12, %rdi
	movq	%r14, %rsi
	callq	memcpy@PLT
	movq	%r13, 80(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
	leaq	18(%r13), %rbp
	movq	%r12, %rax
.LBB143_24:
	movb	$1, %cl
	movl	$15, %edx
	testb	%cl, %cl
	jne	.LBB143_32
.LBB143_31:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i15
	movq	88(%rsp), %rdx
.LBB143_32:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv.exit.i.i.i15
	cmpq	%rdx, %rbp
	jbe	.LBB143_33
# %bb.34:
.Ltmp2669:
	leaq	.L.str.129(%rip), %rcx
	leaq	72(%rsp), %rdi
	movl	$18, %r8d
	movq	%r13, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2670:
	jmp	.LBB143_35
.LBB143_33:
	movups	.L.str.129(%rip), %xmm0
	movups	%xmm0, (%rax,%r13)
	movw	$29795, 16(%rax,%r13)           # imm = 0x7463
.LBB143_35:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i19
	movq	%rbp, 80(%rsp)
	movq	72(%rsp), %rax
	movb	$0, (%rax,%rbp)
	leaq	120(%rsp), %r13
	movq	%r13, 104(%rsp)
	movq	72(%rsp), %rax
	cmpq	%r12, %rax
	je	.LBB143_36
# %bb.37:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i20
	movq	%rax, 104(%rsp)
	movq	80(%rsp), %r15
	movq	88(%rsp), %rax
	movq	%rax, 120(%rsp)
	jmp	.LBB143_38
.LBB143_36:
	movq	80(%rsp), %r15
	leaq	1(%r15), %rdx
	movq	%r13, %rdi
	movq	%r12, %rsi
	callq	memcpy@PLT
.LBB143_38:
	movq	%r15, 112(%rsp)
	movq	%r12, 72(%rsp)
	movq	$0, 80(%rsp)
	movb	$0, 88(%rsp)
.Ltmp2672:
	leaq	104(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp2673:
# %bb.39:
	leaq	_ZTVN8pybind1110cast_errorE+16(%rip), %rax
	movq	%rax, (%rbx)
	movq	104(%rsp), %rdi
	cmpq	%r13, %rdi
	leaq	56(%rsp), %r15
	je	.LBB143_41
# %bb.40:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i26
	movq	120(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB143_41:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	72(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB143_43
# %bb.42:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i27
	movq	88(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB143_43:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit29
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB143_45
# %bb.44:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i30
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB143_45:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit32
	movq	40(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB143_47
# %bb.46:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i33
	movq	56(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB143_47:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit35
	movq	%rbx, %rax
	addq	$136, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB143_1:
	.cfi_def_cfa_offset 192
.Ltmp2678:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2679:
# %bb.2:                                # %.noexc
.LBB143_12:
.Ltmp2675:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2676:
# %bb.13:                               # %.noexc12
.LBB143_26:
.Ltmp2667:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2668:
# %bb.27:                               # %.noexc22
.LBB143_51:
.Ltmp2674:
	movq	%rax, %rbx
	movq	104(%rsp), %rdi
	cmpq	%r13, %rdi
	jne	.LBB143_52
# %bb.53:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38
	movq	72(%rsp), %rdi
	cmpq	%r12, %rdi
	jne	.LBB143_54
.LBB143_55:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit41
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	jne	.LBB143_56
.LBB143_57:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit44
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB143_58
.LBB143_59:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB143_52:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i36
	movq	120(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	72(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB143_55
	jmp	.LBB143_54
.LBB143_50:
.Ltmp2671:
	movq	%rax, %rbx
	movq	72(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB143_55
.LBB143_54:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i39
	movq	88(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB143_57
	jmp	.LBB143_56
.LBB143_49:
.Ltmp2677:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB143_57
.LBB143_56:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i42
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB143_59
	jmp	.LBB143_58
.LBB143_48:
.Ltmp2680:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB143_59
.LBB143_58:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i45
	movq	56(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end143:
	.size	_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_, .Lfunc_end143-_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_,"aG",@progbits,_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_,comdat
	.p2align	2, 0x0
GCC_except_table143:
.Lexception78:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end78-.Lcst_begin78
.Lcst_begin78:
	.uleb128 .Lfunc_begin78-.Lfunc_begin78  # >> Call Site 1 <<
	.uleb128 .Ltmp2663-.Lfunc_begin78       #   Call between .Lfunc_begin78 and .Ltmp2663
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2663-.Lfunc_begin78       # >> Call Site 2 <<
	.uleb128 .Ltmp2664-.Ltmp2663            #   Call between .Ltmp2663 and .Ltmp2664
	.uleb128 .Ltmp2680-.Lfunc_begin78       #     jumps to .Ltmp2680
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2664-.Lfunc_begin78       # >> Call Site 3 <<
	.uleb128 .Ltmp2665-.Ltmp2664            #   Call between .Ltmp2664 and .Ltmp2665
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2665-.Lfunc_begin78       # >> Call Site 4 <<
	.uleb128 .Ltmp2666-.Ltmp2665            #   Call between .Ltmp2665 and .Ltmp2666
	.uleb128 .Ltmp2677-.Lfunc_begin78       #     jumps to .Ltmp2677
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2666-.Lfunc_begin78       # >> Call Site 5 <<
	.uleb128 .Ltmp2669-.Ltmp2666            #   Call between .Ltmp2666 and .Ltmp2669
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2669-.Lfunc_begin78       # >> Call Site 6 <<
	.uleb128 .Ltmp2670-.Ltmp2669            #   Call between .Ltmp2669 and .Ltmp2670
	.uleb128 .Ltmp2671-.Lfunc_begin78       #     jumps to .Ltmp2671
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2670-.Lfunc_begin78       # >> Call Site 7 <<
	.uleb128 .Ltmp2672-.Ltmp2670            #   Call between .Ltmp2670 and .Ltmp2672
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2672-.Lfunc_begin78       # >> Call Site 8 <<
	.uleb128 .Ltmp2673-.Ltmp2672            #   Call between .Ltmp2672 and .Ltmp2673
	.uleb128 .Ltmp2674-.Lfunc_begin78       #     jumps to .Ltmp2674
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2678-.Lfunc_begin78       # >> Call Site 9 <<
	.uleb128 .Ltmp2679-.Ltmp2678            #   Call between .Ltmp2678 and .Ltmp2679
	.uleb128 .Ltmp2680-.Lfunc_begin78       #     jumps to .Ltmp2680
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2675-.Lfunc_begin78       # >> Call Site 10 <<
	.uleb128 .Ltmp2676-.Ltmp2675            #   Call between .Ltmp2675 and .Ltmp2676
	.uleb128 .Ltmp2677-.Lfunc_begin78       #     jumps to .Ltmp2677
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2667-.Lfunc_begin78       # >> Call Site 11 <<
	.uleb128 .Ltmp2668-.Ltmp2667            #   Call between .Ltmp2667 and .Ltmp2668
	.uleb128 .Ltmp2671-.Lfunc_begin78       #     jumps to .Ltmp2671
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2668-.Lfunc_begin78       # >> Call Site 12 <<
	.uleb128 .Lfunc_end143-.Ltmp2668        #   Call between .Ltmp2668 and .Lfunc_end143
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end78:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZN8pybind11L7type_idINS_6detail8accessorINS1_17accessor_policies12generic_itemEEEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
	.type	_ZN8pybind11L7type_idINS_6detail8accessorINS1_17accessor_policies12generic_itemEEEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv,@function
_ZN8pybind11L7type_idINS_6detail8accessorINS1_17accessor_policies12generic_itemEEEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv: # @_ZN8pybind11L7type_idINS_6detail8accessorINS1_17accessor_policies12generic_itemEEEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
.Lfunc_begin79:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception79
# %bb.0:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r15
	movl	$68, %edi
	callq	_Znwm@PLT
	movq	%rax, (%rbx)
	movq	$67, 16(%rbx)
	movups	_ZTSN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEEE(%rip), %xmm0
	movups	%xmm0, (%rax)
	movups	_ZTSN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEEE+16(%rip), %xmm0
	movups	%xmm0, 16(%rax)
	movups	_ZTSN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEEE+32(%rip), %xmm0
	movups	%xmm0, 32(%rax)
	movups	_ZTSN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEEE+48(%rip), %xmm0
	movups	%xmm0, 48(%rax)
	movl	$1162167661, 63(%rax)           # imm = 0x4545456D
	movq	$67, 8(%rbx)
	movb	$0, 67(%rax)
.Ltmp2681:
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp2682:
# %bb.1:                                # %_ZN8pybind116detail13clean_type_idB5cxx11EPKc.exit
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB144_2:
	.cfi_def_cfa_offset 32
.Ltmp2683:
	movq	%rax, %r14
	movq	(%rbx), %rdi
	cmpq	%r15, %rdi
	je	.LBB144_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	movq	(%r15), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB144_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end144:
	.size	_ZN8pybind11L7type_idINS_6detail8accessorINS1_17accessor_policies12generic_itemEEEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv, .Lfunc_end144-_ZN8pybind11L7type_idINS_6detail8accessorINS1_17accessor_policies12generic_itemEEEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table144:
.Lexception79:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end79-.Lcst_begin79
.Lcst_begin79:
	.uleb128 .Lfunc_begin79-.Lfunc_begin79  # >> Call Site 1 <<
	.uleb128 .Ltmp2681-.Lfunc_begin79       #   Call between .Lfunc_begin79 and .Ltmp2681
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2681-.Lfunc_begin79       # >> Call Site 2 <<
	.uleb128 .Ltmp2682-.Ltmp2681            #   Call between .Ltmp2681 and .Ltmp2682
	.uleb128 .Ltmp2683-.Lfunc_begin79       #     jumps to .Ltmp2683
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2682-.Lfunc_begin79       # >> Call Site 3 <<
	.uleb128 .Lfunc_end144-.Ltmp2682        #   Call between .Ltmp2682 and .Lfunc_end144
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end79:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZN8pybind11L7type_idINS_5tupleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
	.type	_ZN8pybind11L7type_idINS_5tupleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv,@function
_ZN8pybind11L7type_idINS_5tupleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv: # @_ZN8pybind11L7type_idINS_5tupleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
.Lfunc_begin80:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception80
# %bb.0:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r15
	movl	$18, %edi
	callq	_Znwm@PLT
	movq	%rax, (%rbx)
	movq	$17, 16(%rbx)
	movups	_ZTSN8pybind115tupleE(%rip), %xmm0
	movups	%xmm0, (%rax)
	movb	$69, 16(%rax)
	movq	$17, 8(%rbx)
	movb	$0, 17(%rax)
.Ltmp2684:
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp2685:
# %bb.1:                                # %_ZN8pybind116detail13clean_type_idB5cxx11EPKc.exit
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB145_2:
	.cfi_def_cfa_offset 32
.Ltmp2686:
	movq	%rax, %r14
	movq	(%rbx), %rdi
	cmpq	%r15, %rdi
	je	.LBB145_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	movq	(%r15), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB145_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end145:
	.size	_ZN8pybind11L7type_idINS_5tupleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv, .Lfunc_end145-_ZN8pybind11L7type_idINS_5tupleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table145:
.Lexception80:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end80-.Lcst_begin80
.Lcst_begin80:
	.uleb128 .Lfunc_begin80-.Lfunc_begin80  # >> Call Site 1 <<
	.uleb128 .Ltmp2684-.Lfunc_begin80       #   Call between .Lfunc_begin80 and .Ltmp2684
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2684-.Lfunc_begin80       # >> Call Site 2 <<
	.uleb128 .Ltmp2685-.Ltmp2684            #   Call between .Ltmp2684 and .Ltmp2685
	.uleb128 .Ltmp2686-.Lfunc_begin80       #     jumps to .Ltmp2686
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2685-.Lfunc_begin80       # >> Call Site 3 <<
	.uleb128 .Lfunc_end145-.Ltmp2685        #   Call between .Ltmp2685 and .Lfunc_end145
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end80:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm2EED2Ev,"axG",@progbits,_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm2EED2Ev,comdat
	.weak	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm2EED2Ev # -- Begin function _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm2EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm2EED2Ev,@function
_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm2EED2Ev: # @_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm2EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	32(%rdi), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB146_2
# %bb.1:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	(%rax), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB146_2:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	(%rbx), %rdi
	addq	$16, %rbx
	cmpq	%rbx, %rdi
	je	.LBB146_3
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.1
	movq	(%rbx), %rsi
	incq	%rsi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB146_3:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.1
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end146:
	.size	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm2EED2Ev, .Lfunc_end146-_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELm2EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt5arrayIN8pybind116objectELm2EED2Ev,"axG",@progbits,_ZNSt5arrayIN8pybind116objectELm2EED2Ev,comdat
	.hidden	_ZNSt5arrayIN8pybind116objectELm2EED2Ev # -- Begin function _ZNSt5arrayIN8pybind116objectELm2EED2Ev
	.weak	_ZNSt5arrayIN8pybind116objectELm2EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt5arrayIN8pybind116objectELm2EED2Ev,@function
_ZNSt5arrayIN8pybind116objectELm2EED2Ev: # @_ZNSt5arrayIN8pybind116objectELm2EED2Ev
.Lfunc_begin81:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception81
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	addq	$8, %rdi
.Ltmp2687:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2688:
# %bb.1:                                # %_ZN8pybind116objectD2Ev.exit
.Ltmp2689:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2690:
# %bb.2:                                # %_ZN8pybind116objectD2Ev.exit.1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB147_3:
	.cfi_def_cfa_offset 16
.Ltmp2691:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end147:
	.size	_ZNSt5arrayIN8pybind116objectELm2EED2Ev, .Lfunc_end147-_ZNSt5arrayIN8pybind116objectELm2EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt5arrayIN8pybind116objectELm2EED2Ev,"aG",@progbits,_ZNSt5arrayIN8pybind116objectELm2EED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table147:
.Lexception81:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase58-.Lttbaseref58
.Lttbaseref58:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end81-.Lcst_begin81
.Lcst_begin81:
	.uleb128 .Ltmp2687-.Lfunc_begin81       # >> Call Site 1 <<
	.uleb128 .Ltmp2690-.Ltmp2687            #   Call between .Ltmp2687 and .Ltmp2690
	.uleb128 .Ltmp2691-.Lfunc_begin81       #     jumps to .Ltmp2691
	.byte	1                               #   On action: 1
.Lcst_end81:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase58:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8pybind116detail8accessorINS0_17accessor_policies12generic_itemEE9get_cacheEv,"axG",@progbits,_ZNK8pybind116detail8accessorINS0_17accessor_policies12generic_itemEE9get_cacheEv,comdat
	.hidden	_ZNK8pybind116detail8accessorINS0_17accessor_policies12generic_itemEE9get_cacheEv # -- Begin function _ZNK8pybind116detail8accessorINS0_17accessor_policies12generic_itemEE9get_cacheEv
	.weak	_ZNK8pybind116detail8accessorINS0_17accessor_policies12generic_itemEE9get_cacheEv
	.p2align	4, 0x90
	.type	_ZNK8pybind116detail8accessorINS0_17accessor_policies12generic_itemEE9get_cacheEv,@function
_ZNK8pybind116detail8accessorINS0_17accessor_policies12generic_itemEE9get_cacheEv: # @_ZNK8pybind116detail8accessorINS0_17accessor_policies12generic_itemEE9get_cacheEv
.Lfunc_begin82:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception82
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$24, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	leaq	24(%rdi), %rbx
	cmpq	$0, 24(%rdi)
	jne	.LBB148_8
# %bb.1:
	movq	8(%rdi), %rax
	movq	16(%rdi), %rsi
	movq	%rax, %rdi
	callq	PyObject_GetItem@PLT
	testq	%rax, %rax
	je	.LBB148_2
# %bb.5:                                # %_ZN8pybind116detail17accessor_policies12generic_item3getENS_6handleES3_.exit
	movq	%rax, 8(%rsp)
	leaq	8(%rsp), %rcx
	cmpq	%rcx, %rbx
	je	.LBB148_7
# %bb.6:
	movq	(%rbx), %rcx
	movq	%rcx, 16(%rsp)
	movq	%rax, (%rbx)
	movq	$0, 8(%rsp)
.Ltmp2692:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2693:
.LBB148_7:                              # %_ZN8pybind116objectaSEOS0_.exit
.Ltmp2695:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2696:
.LBB148_8:
	movq	%rbx, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB148_2:
	.cfi_def_cfa_offset 48
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp2698:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2699:
# %bb.3:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.LBB148_4:
.Ltmp2700:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB148_9:
.Ltmp2694:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB148_10:
.Ltmp2697:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end148:
	.size	_ZNK8pybind116detail8accessorINS0_17accessor_policies12generic_itemEE9get_cacheEv, .Lfunc_end148-_ZNK8pybind116detail8accessorINS0_17accessor_policies12generic_itemEE9get_cacheEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind116detail8accessorINS0_17accessor_policies12generic_itemEE9get_cacheEv,"aG",@progbits,_ZNK8pybind116detail8accessorINS0_17accessor_policies12generic_itemEE9get_cacheEv,comdat
	.p2align	2, 0x0
GCC_except_table148:
.Lexception82:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase59-.Lttbaseref59
.Lttbaseref59:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end82-.Lcst_begin82
.Lcst_begin82:
	.uleb128 .Lfunc_begin82-.Lfunc_begin82  # >> Call Site 1 <<
	.uleb128 .Ltmp2692-.Lfunc_begin82       #   Call between .Lfunc_begin82 and .Ltmp2692
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2692-.Lfunc_begin82       # >> Call Site 2 <<
	.uleb128 .Ltmp2693-.Ltmp2692            #   Call between .Ltmp2692 and .Ltmp2693
	.uleb128 .Ltmp2694-.Lfunc_begin82       #     jumps to .Ltmp2694
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2695-.Lfunc_begin82       # >> Call Site 3 <<
	.uleb128 .Ltmp2696-.Ltmp2695            #   Call between .Ltmp2695 and .Ltmp2696
	.uleb128 .Ltmp2697-.Lfunc_begin82       #     jumps to .Ltmp2697
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2696-.Lfunc_begin82       # >> Call Site 4 <<
	.uleb128 .Ltmp2698-.Ltmp2696            #   Call between .Ltmp2696 and .Ltmp2698
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2698-.Lfunc_begin82       # >> Call Site 5 <<
	.uleb128 .Ltmp2699-.Ltmp2698            #   Call between .Ltmp2698 and .Ltmp2699
	.uleb128 .Ltmp2700-.Lfunc_begin82       #     jumps to .Ltmp2700
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2699-.Lfunc_begin82       # >> Call Site 6 <<
	.uleb128 .Lfunc_end148-.Ltmp2699        #   Call between .Ltmp2699 and .Lfunc_end148
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end82:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase59:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail13get_type_infoEP11_typeobject,"axG",@progbits,_ZN8pybind116detail13get_type_infoEP11_typeobject,comdat
	.hidden	_ZN8pybind116detail13get_type_infoEP11_typeobject # -- Begin function _ZN8pybind116detail13get_type_infoEP11_typeobject
	.weak	_ZN8pybind116detail13get_type_infoEP11_typeobject
	.p2align	4, 0x90
	.type	_ZN8pybind116detail13get_type_infoEP11_typeobject,@function
_ZN8pybind116detail13get_type_infoEP11_typeobject: # @_ZN8pybind116detail13get_type_infoEP11_typeobject
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	callq	_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
	movq	16(%rax), %rcx
	movq	24(%rax), %rax
	cmpq	%rax, %rcx
	je	.LBB149_1
# %bb.2:
	subq	%rcx, %rax
	cmpq	$9, %rax
	jae	.LBB149_5
# %bb.3:
	movq	(%rcx), %rax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.LBB149_1:
	.cfi_def_cfa_offset 16
	xorl	%eax, %eax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.LBB149_5:
	.cfi_def_cfa_offset 16
	leaq	.L.str.154(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Lfunc_end149:
	.size	_ZN8pybind116detail13get_type_infoEP11_typeobject, .Lfunc_end149-_ZN8pybind116detail13get_type_infoEP11_typeobject
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb,"axG",@progbits,_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb,comdat
	.hidden	_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb # -- Begin function _ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb
	.weak	_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb
	.p2align	4, 0x90
	.type	_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb,@function
_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb: # @_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb
.Lfunc_begin83:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception83
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$200, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	testq	%rdx, %rdx
	je	.LBB150_11
# %bb.1:
	movq	%rdx, %r15
	movq	8(%rbx), %rdi
	cmpq	(%rdx), %rdi
	je	.LBB150_13
# %bb.2:
	movl	%ecx, %ebp
	callq	_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
	movq	16(%rax), %rdx
	movq	24(%rax), %rax
	cmpq	%rax, %rdx
	je	.LBB150_29
# %bb.3:                                # %_ZN8pybind116detail18values_and_holders5beginEv.exit.i
	movzbl	48(%rbx), %r8d
	leaq	16(%rbx), %rcx
	testb	$2, %r8b
	movq	16(%rbx), %rdi
	cmoveq	%rdi, %rcx
	movq	(%rdx), %rsi
	subq	%rdx, %rax
	sarq	$3, %rax
	cmpq	%r15, %rsi
	je	.LBB150_16
# %bb.4:                                # %.lr.ph.i
	testb	$2, %r8b
	jne	.LBB150_18
# %bb.5:                                # %._crit_edge.i.us.i.preheader
	movl	$1, %r8d
	movq	%rdi, %rcx
	.p2align	4, 0x90
.LBB150_6:                              # %._crit_edge.i.us.i
                                        # =>This Inner Loop Header: Depth=1
	cmpq	%rax, %r8
	jae	.LBB150_8
# %bb.7:                                #   in Loop: Header=BB150_6 Depth=1
	movq	(%rdx,%r8,8), %rsi
	jmp	.LBB150_9
	.p2align	4, 0x90
.LBB150_8:                              #   in Loop: Header=BB150_6 Depth=1
	xorl	%esi, %esi
.LBB150_9:                              # %_ZN8pybind116detail18values_and_holders8iteratorppEv.exit.us.i
                                        #   in Loop: Header=BB150_6 Depth=1
	movq	-8(%rdx,%r8,8), %rdi
	movq	32(%rdi), %rdi
	leaq	(%rcx,%rdi,8), %rcx
	addq	$8, %rcx
	leaq	1(%r8), %rdi
	cmpq	%r8, %rax
	je	.LBB150_23
# %bb.10:                               # %_ZN8pybind116detail18values_and_holders8iteratorppEv.exit.us.i
                                        #   in Loop: Header=BB150_6 Depth=1
	movq	%rdi, %r8
	cmpq	%r15, %rsi
	jne	.LBB150_6
	jmp	.LBB150_23
.LBB150_11:                             # %.split
	movq	%rbx, (%r14)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%r14)
	testb	$2, 48(%rbx)
	jne	.LBB150_26
.LBB150_12:                             # %.split
	movq	16(%rbx), %rbx
	jmp	.LBB150_27
.LBB150_13:                             # %.split13
	movq	%rbx, (%r14)
	movq	$0, 8(%r14)
	movq	%r15, 16(%r14)
	testb	$2, 48(%rbx)
	je	.LBB150_12
.LBB150_26:
	addq	$16, %rbx
.LBB150_27:
	movq	%rbx, 24(%r14)
	jmp	.LBB150_28
.LBB150_16:
	xorl	%edi, %edi
	cmpq	%rax, %rdi
	je	.LBB150_24
.LBB150_17:
	movq	%rbx, (%r14)
	movq	%rdi, 8(%r14)
	movq	%rsi, 16(%r14)
	movq	%rcx, 24(%r14)
	jmp	.LBB150_28
.LBB150_18:                             # %._crit_edge.i.i.preheader
	movl	$1, %r8d
	jmp	.LBB150_19
	.p2align	4, 0x90
.LBB150_21:                             #   in Loop: Header=BB150_19 Depth=1
	xorl	%esi, %esi
	leaq	1(%r8), %rdi
	cmpq	%r8, %rax
	je	.LBB150_23
.LBB150_22:                             # %_ZN8pybind116detail18values_and_holders8iteratorppEv.exit.i
                                        #   in Loop: Header=BB150_19 Depth=1
	movq	%rdi, %r8
	cmpq	%r15, %rsi
	je	.LBB150_23
.LBB150_19:                             # %._crit_edge.i.i
                                        # =>This Inner Loop Header: Depth=1
	cmpq	%rax, %r8
	jae	.LBB150_21
# %bb.20:                               #   in Loop: Header=BB150_19 Depth=1
	movq	(%rdx,%r8,8), %rsi
	leaq	1(%r8), %rdi
	cmpq	%r8, %rax
	jne	.LBB150_22
.LBB150_23:                             # %_ZN8pybind116detail18values_and_holders4findEPKNS0_9type_infoE.exit.loopexit77
	decq	%rdi
	cmpq	%rax, %rdi
	jne	.LBB150_17
.LBB150_24:
	testb	%bpl, %bpl
	jne	.LBB150_30
# %bb.25:
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%r14)
	movups	%xmm0, (%r14)
.LBB150_28:
	movq	%r14, %rax
	addq	$200, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB150_29:
	.cfi_def_cfa_offset 240
	leaq	.L.str.170(%rip), %rdi
	leaq	.L.str.73(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind116detail18values_and_holders8iteratorC2EPNS0_8instanceEPKSt6vectorIPNS0_9type_infoESaIS7_EE(%rip), %rcx
	movl	$326, %edx                      # imm = 0x146
	callq	__assert_fail@PLT
.LBB150_30:
	movq	(%r15), %rsi
	leaq	168(%rsp), %r14
	movq	%r14, %rdi
	callq	_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject
.Ltmp2701:
	leaq	.L.str.155(%rip), %rsi
	leaq	40(%rsp), %rdi
	movq	%r14, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp2702:
# %bb.31:
.Ltmp2704:
	leaq	.L.str.156(%rip), %rdx
	leaq	72(%rsp), %rdi
	leaq	40(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp2705:
# %bb.32:
	movq	8(%rbx), %rsi
.Ltmp2707:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject
.Ltmp2708:
# %bb.33:
.Ltmp2710:
	leaq	104(%rsp), %rdi
	leaq	72(%rsp), %rsi
	leaq	8(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp2711:
# %bb.34:
.Ltmp2713:
	leaq	.L.str.157(%rip), %rdx
	leaq	136(%rsp), %rdi
	leaq	104(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp2714:
# %bb.35:
.Ltmp2716:
	leaq	136(%rsp), %rdi
	callq	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp2717:
# %bb.36:
.LBB150_37:
.Ltmp2718:
	movq	%rax, %rbx
	movq	136(%rsp), %rdi
	leaq	152(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB150_44
# %bb.38:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB150_46
.LBB150_39:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit26
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB150_48
.LBB150_40:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit29
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB150_50
.LBB150_41:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit32
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB150_52
.LBB150_42:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit35
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB150_54
.LBB150_43:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB150_44:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	152(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB150_39
	jmp	.LBB150_46
.LBB150_45:
.Ltmp2715:
	movq	%rax, %rbx
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB150_39
.LBB150_46:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i24
	movq	120(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB150_40
	jmp	.LBB150_48
.LBB150_47:
.Ltmp2712:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB150_40
.LBB150_48:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i27
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB150_41
	jmp	.LBB150_50
.LBB150_49:
.Ltmp2709:
	movq	%rax, %rbx
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB150_41
.LBB150_50:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i30
	movq	88(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB150_42
	jmp	.LBB150_52
.LBB150_51:
.Ltmp2706:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB150_42
.LBB150_52:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i33
	movq	56(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB150_43
	jmp	.LBB150_54
.LBB150_53:
.Ltmp2703:
	movq	%rax, %rbx
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB150_43
.LBB150_54:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i36
	movq	184(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end150:
	.size	_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb, .Lfunc_end150-_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb,"aG",@progbits,_ZN8pybind116detail8instance20get_value_and_holderEPKNS0_9type_infoEb,comdat
	.p2align	2, 0x0
GCC_except_table150:
.Lexception83:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end83-.Lcst_begin83
.Lcst_begin83:
	.uleb128 .Lfunc_begin83-.Lfunc_begin83  # >> Call Site 1 <<
	.uleb128 .Ltmp2701-.Lfunc_begin83       #   Call between .Lfunc_begin83 and .Ltmp2701
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2701-.Lfunc_begin83       # >> Call Site 2 <<
	.uleb128 .Ltmp2702-.Ltmp2701            #   Call between .Ltmp2701 and .Ltmp2702
	.uleb128 .Ltmp2703-.Lfunc_begin83       #     jumps to .Ltmp2703
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2704-.Lfunc_begin83       # >> Call Site 3 <<
	.uleb128 .Ltmp2705-.Ltmp2704            #   Call between .Ltmp2704 and .Ltmp2705
	.uleb128 .Ltmp2706-.Lfunc_begin83       #     jumps to .Ltmp2706
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2707-.Lfunc_begin83       # >> Call Site 4 <<
	.uleb128 .Ltmp2708-.Ltmp2707            #   Call between .Ltmp2707 and .Ltmp2708
	.uleb128 .Ltmp2709-.Lfunc_begin83       #     jumps to .Ltmp2709
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2710-.Lfunc_begin83       # >> Call Site 5 <<
	.uleb128 .Ltmp2711-.Ltmp2710            #   Call between .Ltmp2710 and .Ltmp2711
	.uleb128 .Ltmp2712-.Lfunc_begin83       #     jumps to .Ltmp2712
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2713-.Lfunc_begin83       # >> Call Site 6 <<
	.uleb128 .Ltmp2714-.Ltmp2713            #   Call between .Ltmp2713 and .Ltmp2714
	.uleb128 .Ltmp2715-.Lfunc_begin83       #     jumps to .Ltmp2715
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2716-.Lfunc_begin83       # >> Call Site 7 <<
	.uleb128 .Ltmp2717-.Ltmp2716            #   Call between .Ltmp2716 and .Ltmp2717
	.uleb128 .Ltmp2718-.Lfunc_begin83       #     jumps to .Ltmp2718
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2717-.Lfunc_begin83       # >> Call Site 8 <<
	.uleb128 .Lfunc_end150-.Ltmp2717        #   Call between .Ltmp2717 and .Lfunc_end150
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end83:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE,"axG",@progbits,_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE,comdat
	.hidden	_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE # -- Begin function _ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE
	.weak	_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE,@function
_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE: # @_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE
.Lfunc_begin84:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception84
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, (%rdi)
	movq	$0, 48(%rdi)
	movl	$0, 56(%rdi)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rdi)
	movups	%xmm0, 24(%rdi)
	movl	$0, 40(%rdi)
	movups	%xmm0, 64(%rdi)
	movq	$0, 80(%rdi)
	movq	%rdx, 88(%rdi)
	movq	$0, 96(%rdi)
	movzwl	92(%rsi), %r12d
	testq	%r12, %r12
	je	.LBB151_3
# %bb.1:                                # %_ZNSt12_Vector_baseIN8pybind116handleESaIS1_EE11_M_allocateEm.exit.i
	movq	%rdi, %rbx
	leaq	8(%rdi), %rbp
	leaq	32(%rdi), %r14
	leaq	72(%rdi), %r15
	leaq	80(%rdi), %r13
	leal	(,%r12,8), %edi
.Ltmp2719:
	callq	_Znwm@PLT
.Ltmp2720:
# %bb.2:
	movq	%rax, 8(%rbx)
	movq	%rax, 16(%rbx)
	leaq	(%rax,%r12,8), %rax
	movq	%rax, 24(%rbx)
.Ltmp2721:
	movq	%r14, %rdi
	movq	%r12, %rsi
	callq	_ZNSt6vectorIbSaIbEE13_M_reallocateEm@PLT
.Ltmp2722:
.LBB151_3:                              # %_ZNSt6vectorIbSaIbEE7reserveEm.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB151_5:
	.cfi_def_cfa_offset 64
.Ltmp2723:
	movq	%rax, %r12
.Ltmp2724:
	movq	%r13, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2725:
# %bb.6:                                # %_ZN8pybind116objectD2Ev.exit
.Ltmp2727:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2728:
# %bb.7:                                # %_ZN8pybind116objectD2Ev.exit6
	movq	%r14, %rdi
	callq	_ZNSt13_Bvector_baseISaIbEED2Ev@PLT
	movq	(%rbp), %rdi
	testq	%rdi, %rdi
	je	.LBB151_9
# %bb.8:
	movq	24(%rbx), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB151_9:                              # %_ZNSt6vectorIN8pybind116handleESaIS1_EED2Ev.exit
	movq	%r12, %rdi
	callq	_Unwind_Resume@PLT
.LBB151_10:
.Ltmp2729:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB151_4:
.Ltmp2726:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end151:
	.size	_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE, .Lfunc_end151-_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE,"aG",@progbits,_ZN8pybind116detail13function_callC2ERKNS0_15function_recordENS_6handleE,comdat
	.p2align	2, 0x0
GCC_except_table151:
.Lexception84:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase60-.Lttbaseref60
.Lttbaseref60:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end84-.Lcst_begin84
.Lcst_begin84:
	.uleb128 .Ltmp2719-.Lfunc_begin84       # >> Call Site 1 <<
	.uleb128 .Ltmp2722-.Ltmp2719            #   Call between .Ltmp2719 and .Ltmp2722
	.uleb128 .Ltmp2723-.Lfunc_begin84       #     jumps to .Ltmp2723
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2724-.Lfunc_begin84       # >> Call Site 2 <<
	.uleb128 .Ltmp2725-.Ltmp2724            #   Call between .Ltmp2724 and .Ltmp2725
	.uleb128 .Ltmp2726-.Lfunc_begin84       #     jumps to .Ltmp2726
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2727-.Lfunc_begin84       # >> Call Site 3 <<
	.uleb128 .Ltmp2728-.Ltmp2727            #   Call between .Ltmp2727 and .Ltmp2728
	.uleb128 .Ltmp2729-.Lfunc_begin84       #     jumps to .Ltmp2729
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2728-.Lfunc_begin84       # >> Call Site 4 <<
	.uleb128 .Lfunc_end151-.Ltmp2728        #   Call between .Ltmp2728 and .Lfunc_end151
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end84:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase60:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail19loader_life_supportD2Ev,"axG",@progbits,_ZN8pybind116detail19loader_life_supportD2Ev,comdat
	.hidden	_ZN8pybind116detail19loader_life_supportD2Ev # -- Begin function _ZN8pybind116detail19loader_life_supportD2Ev
	.weak	_ZN8pybind116detail19loader_life_supportD2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind116detail19loader_life_supportD2Ev,@function
_ZN8pybind116detail19loader_life_supportD2Ev: # @_ZN8pybind116detail19loader_life_supportD2Ev
.Lfunc_begin85:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception85
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
.Ltmp2730:
	callq	_ZN8pybind116detail13get_internalsEv
.Ltmp2731:
# %bb.1:
	movq	%rax, %r14
	addq	$440, %r14                      # imm = 0x1B8
.Ltmp2732:
	movq	%r14, %rdi
	callq	PyThread_tss_get@PLT
.Ltmp2733:
# %bb.2:                                # %_ZNK8pybind1123thread_specific_storageINS_6detail19loader_life_supportEE3getEv.exit
	cmpq	%rbx, %rax
	jne	.LBB152_3
# %bb.5:
	movq	(%rbx), %rsi
.Ltmp2736:
	movq	%r14, %rdi
	callq	PyThread_tss_set@PLT
.Ltmp2737:
# %bb.6:                                # %_ZN8pybind1123thread_specific_storageINS_6detail19loader_life_supportEEaSEPS2_.exit
	leaq	24(%rbx), %r14
	movq	24(%rbx), %r15
	testq	%r15, %r15
	jne	.LBB152_7
	jmp	.LBB152_13
	.p2align	4, 0x90
.LBB152_10:                             # %_ZL9Py_DECREFP7_object.exit
                                        #   in Loop: Header=BB152_7 Depth=1
	movq	(%r15), %r15
	testq	%r15, %r15
	je	.LBB152_11
.LBB152_7:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%r15), %rdi
	movq	(%rdi), %rax
	testl	%eax, %eax
	js	.LBB152_10
# %bb.8:                                #   in Loop: Header=BB152_7 Depth=1
	decq	%rax
	movq	%rax, (%rdi)
	jne	.LBB152_10
# %bb.9:                                #   in Loop: Header=BB152_7 Depth=1
.Ltmp2739:
	callq	_Py_Dealloc@PLT
.Ltmp2740:
	jmp	.LBB152_10
.LBB152_11:                             # %._crit_edge
	movq	(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB152_13
	.p2align	4, 0x90
.LBB152_12:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r15
	movl	$16, %esi
	callq	_ZdlPvm@PLT
	movq	%r15, %rdi
	testq	%r15, %r15
	jne	.LBB152_12
.LBB152_13:                             # %_ZNSt10_HashtableIP7_objectS1_SaIS1_ENSt8__detail9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS3_18_Mod_range_hashingENS3_20_Default_ranged_hashENS3_20_Prime_rehash_policyENS3_17_Hashtable_traitsILb0ELb1ELb1EEEE5clearEv.exit.i.i
	movq	8(%rbx), %rdi
	movq	16(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r14)
	movq	8(%rbx), %rdi
	leaq	56(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB152_14
# %bb.18:
	movq	16(%rbx), %rsi
	shlq	$3, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB152_14:                             # %_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev.exit
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB152_3:
	.cfi_def_cfa_offset 32
.Ltmp2734:
	leaq	.L.str.162(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp2735:
# %bb.4:
.LBB152_15:                             # %.loopexit
.Ltmp2741:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB152_16:                             # %.loopexit.split-lp
.Ltmp2738:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end152:
	.size	_ZN8pybind116detail19loader_life_supportD2Ev, .Lfunc_end152-_ZN8pybind116detail19loader_life_supportD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail19loader_life_supportD2Ev,"aG",@progbits,_ZN8pybind116detail19loader_life_supportD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table152:
.Lexception85:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase61-.Lttbaseref61
.Lttbaseref61:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end85-.Lcst_begin85
.Lcst_begin85:
	.uleb128 .Ltmp2730-.Lfunc_begin85       # >> Call Site 1 <<
	.uleb128 .Ltmp2737-.Ltmp2730            #   Call between .Ltmp2730 and .Ltmp2737
	.uleb128 .Ltmp2738-.Lfunc_begin85       #     jumps to .Ltmp2738
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2739-.Lfunc_begin85       # >> Call Site 2 <<
	.uleb128 .Ltmp2740-.Ltmp2739            #   Call between .Ltmp2739 and .Ltmp2740
	.uleb128 .Ltmp2741-.Lfunc_begin85       #     jumps to .Ltmp2741
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2740-.Lfunc_begin85       # >> Call Site 3 <<
	.uleb128 .Ltmp2734-.Ltmp2740            #   Call between .Ltmp2740 and .Ltmp2734
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2734-.Lfunc_begin85       # >> Call Site 4 <<
	.uleb128 .Ltmp2735-.Ltmp2734            #   Call between .Ltmp2734 and .Ltmp2735
	.uleb128 .Ltmp2738-.Lfunc_begin85       #     jumps to .Ltmp2738
	.byte	1                               #   On action: 1
.Lcst_end85:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase61:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt13_Bvector_baseISaIbEED2Ev,"axG",@progbits,_ZNSt13_Bvector_baseISaIbEED2Ev,comdat
	.weak	_ZNSt13_Bvector_baseISaIbEED2Ev # -- Begin function _ZNSt13_Bvector_baseISaIbEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13_Bvector_baseISaIbEED2Ev,@function
_ZNSt13_Bvector_baseISaIbEED2Ev:        # @_ZNSt13_Bvector_baseISaIbEED2Ev
	.cfi_startproc
# %bb.0:
	movq	(%rdi), %rax
	testq	%rax, %rax
	je	.LBB153_2
# %bb.1:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	32(%rdi), %rsi
	subq	%rax, %rsi
	movq	%rdi, %rbx
	movq	%rax, %rdi
	callq	_ZdlPvm@PLT
	movq	$0, (%rbx)
	movl	$0, 8(%rbx)
	movq	$0, 16(%rbx)
	movl	$0, 24(%rbx)
	movq	$0, 32(%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 8
	.cfi_restore %rbx
.LBB153_2:                              # %_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv.exit
	retq
.Lfunc_end153:
	.size	_ZNSt13_Bvector_baseISaIbEED2Ev, .Lfunc_end153-_ZNSt13_Bvector_baseISaIbEED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail13function_callD2Ev,"axG",@progbits,_ZN8pybind116detail13function_callD2Ev,comdat
	.hidden	_ZN8pybind116detail13function_callD2Ev # -- Begin function _ZN8pybind116detail13function_callD2Ev
	.weak	_ZN8pybind116detail13function_callD2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind116detail13function_callD2Ev,@function
_ZN8pybind116detail13function_callD2Ev: # @_ZN8pybind116detail13function_callD2Ev
.Lfunc_begin86:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception86
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	addq	$80, %rdi
.Ltmp2742:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2743:
# %bb.1:                                # %_ZN8pybind116objectD2Ev.exit
	leaq	72(%rbx), %rdi
.Ltmp2745:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2746:
# %bb.2:                                # %_ZN8pybind116objectD2Ev.exit1
	movq	32(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB154_4
# %bb.3:
	movq	64(%rbx), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	movq	$0, 32(%rbx)
	movl	$0, 40(%rbx)
	movq	$0, 48(%rbx)
	movl	$0, 56(%rbx)
	movq	$0, 64(%rbx)
.LBB154_4:                              # %_ZNSt13_Bvector_baseISaIbEED2Ev.exit
	movq	8(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB154_5
# %bb.8:
	movq	24(%rbx), %rsi
	subq	%rdi, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB154_5:                              # %_ZNSt6vectorIN8pybind116handleESaIS1_EED2Ev.exit
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB154_7:
	.cfi_def_cfa_offset 16
.Ltmp2747:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB154_6:
.Ltmp2744:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end154:
	.size	_ZN8pybind116detail13function_callD2Ev, .Lfunc_end154-_ZN8pybind116detail13function_callD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail13function_callD2Ev,"aG",@progbits,_ZN8pybind116detail13function_callD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table154:
.Lexception86:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase62-.Lttbaseref62
.Lttbaseref62:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end86-.Lcst_begin86
.Lcst_begin86:
	.uleb128 .Ltmp2742-.Lfunc_begin86       # >> Call Site 1 <<
	.uleb128 .Ltmp2743-.Ltmp2742            #   Call between .Ltmp2742 and .Ltmp2743
	.uleb128 .Ltmp2744-.Lfunc_begin86       #     jumps to .Ltmp2744
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2745-.Lfunc_begin86       # >> Call Site 2 <<
	.uleb128 .Ltmp2746-.Ltmp2745            #   Call between .Ltmp2745 and .Ltmp2746
	.uleb128 .Ltmp2747-.Lfunc_begin86       #     jumps to .Ltmp2747
	.byte	1                               #   On action: 1
.Lcst_end86:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase62:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev,"axG",@progbits,_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev,comdat
	.hidden	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev # -- Begin function _ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev
	.weak	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev,@function
_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev: # @_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev
.Lfunc_begin87:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception87
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	(%rdi), %rdi
	movq	8(%rbx), %rsi
.Ltmp2748:
	callq	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_
.Ltmp2749:
# %bb.1:                                # %_ZSt8_DestroyIPN8pybind116detail13function_callES2_EvT_S4_RSaIT0_E.exit
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB155_2
# %bb.4:
	movq	16(%rbx), %rsi
	subq	%rdi, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB155_2:                              # %_ZNSt12_Vector_baseIN8pybind116detail13function_callESaIS2_EED2Ev.exit
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB155_3:
	.cfi_def_cfa_offset 16
.Ltmp2750:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end155:
	.size	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev, .Lfunc_end155-_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev,"aG",@progbits,_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table155:
.Lexception87:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase63-.Lttbaseref63
.Lttbaseref63:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end87-.Lcst_begin87
.Lcst_begin87:
	.uleb128 .Ltmp2748-.Lfunc_begin87       # >> Call Site 1 <<
	.uleb128 .Ltmp2749-.Ltmp2748            #   Call between .Ltmp2748 and .Ltmp2749
	.uleb128 .Ltmp2750-.Lfunc_begin87       #     jumps to .Ltmp2750
	.byte	1                               #   On action: 1
.Lcst_end87:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase63:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail24try_translate_exceptionsEv,"axG",@progbits,_ZN8pybind116detail24try_translate_exceptionsEv,comdat
	.hidden	_ZN8pybind116detail24try_translate_exceptionsEv # -- Begin function _ZN8pybind116detail24try_translate_exceptionsEv
	.weak	_ZN8pybind116detail24try_translate_exceptionsEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail24try_translate_exceptionsEv,@function
_ZN8pybind116detail24try_translate_exceptionsEv: # @_ZN8pybind116detail24try_translate_exceptionsEv
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	callq	_ZN8pybind116detail13get_internalsEv
	movq	%rax, %rbx
	callq	_ZN8pybind116detail30get_local_internals_pp_managerEv
	movq	%rax, %rdi
	callq	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE6get_ppEv
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB156_1
# %bb.2:                                # %_ZN8pybind116detail19get_local_internalsEv.exit.i
	addq	$56, %rdi
	callq	_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE
	testb	%al, %al
	je	.LBB156_3
	jmp	.LBB156_4
.LBB156_1:
	movq	%rax, %r14
	movl	$64, %edi
	callq	_Znwm@PLT
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 32(%rax)
	leaq	48(%rax), %rcx
	movq	%rcx, (%rax)
	movq	$1, 8(%rax)
	movups	%xmm0, 16(%rax)
	movl	$1065353216, 32(%rax)           # imm = 0x3F800000
	movups	%xmm0, 40(%rax)
	movq	$0, 56(%rax)
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	_ZNSt15__uniq_ptr_implIN8pybind116detail15local_internalsESt14default_deleteIS2_EE5resetEPS2_
	movq	(%r14), %rdi
	addq	$56, %rdi
	callq	_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE
	testb	%al, %al
	jne	.LBB156_4
.LBB156_3:                              # %_ZN8pybind116detail26with_exception_translatorsIZNS0_24try_translate_exceptionsEvEUlRSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS6_EES9_E_EEDTclfp_dtclL_ZNS0_13get_internalsEvEE32registered_exception_translatorsdtclL_ZNS0_19get_local_internalsEvEE32registered_exception_translatorsEERKT_.exit
	addq	$336, %rbx                      # imm = 0x150
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE
	testb	%al, %al
	je	.LBB156_5
.LBB156_4:                              # %_ZN8pybind116detail26with_exception_translatorsIZNS0_24try_translate_exceptionsEvEUlRSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS6_EES9_E_EEDTclfp_dtclL_ZNS0_13get_internalsEvEE32registered_exception_translatorsdtclL_ZNS0_19get_local_internalsEvEE32registered_exception_translatorsEERKT_.exit.thread
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB156_5:
	.cfi_def_cfa_offset 32
	movq	PyExc_SystemError@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
	leaq	.L.str.163(%rip), %rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	PyErr_SetString@PLT             # TAILCALL
.Lfunc_end156:
	.size	_ZN8pybind116detail24try_translate_exceptionsEv, .Lfunc_end156-_ZN8pybind116detail24try_translate_exceptionsEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_,"axG",@progbits,_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_,comdat
	.hidden	_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_ # -- Begin function _ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_
	.weak	_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_
	.p2align	4, 0x90
	.type	_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_,@function
_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_: # @_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_
.Lfunc_begin88:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception88
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$40, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	movq	(%rsi), %rax
	movq	%rax, 16(%rsp)
	leaq	.L.str.165(%rip), %rax
	movq	%rax, 24(%rsp)
	leaq	32(%rsp), %rbx
	movq	$0, 32(%rsp)
.Ltmp2751:
	movq	%rsp, %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_
.Ltmp2752:
# %bb.1:
.Ltmp2754:
	movq	%rsp, %rsi
	movq	%r14, %rdi
	callq	_ZN8pybind113strC2EONS_6objectE
.Ltmp2755:
# %bb.2:
.Ltmp2763:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2764:
# %bb.3:                                # %_ZN8pybind116objectD2Ev.exit
.Ltmp2766:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2767:
# %bb.4:                                # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit
	movq	%r14, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB157_11:
	.cfi_def_cfa_offset 64
.Ltmp2768:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB157_10:
.Ltmp2765:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB157_5:
.Ltmp2756:
	movq	%rax, %r14
.Ltmp2757:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2758:
	jmp	.LBB157_8
.LBB157_6:
.Ltmp2759:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB157_7:
.Ltmp2753:
	movq	%rax, %r14
.LBB157_8:                              # %_ZN8pybind116objectD2Ev.exit5
.Ltmp2760:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2761:
# %bb.9:                                # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit6
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB157_12:
.Ltmp2762:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end157:
	.size	_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_, .Lfunc_end157-_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_,"aG",@progbits,_ZNK8pybind113str6formatIJRKNS_6handleEEEES0_DpOT_,comdat
	.p2align	2, 0x0
GCC_except_table157:
.Lexception88:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase64-.Lttbaseref64
.Lttbaseref64:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end88-.Lcst_begin88
.Lcst_begin88:
	.uleb128 .Ltmp2751-.Lfunc_begin88       # >> Call Site 1 <<
	.uleb128 .Ltmp2752-.Ltmp2751            #   Call between .Ltmp2751 and .Ltmp2752
	.uleb128 .Ltmp2753-.Lfunc_begin88       #     jumps to .Ltmp2753
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2754-.Lfunc_begin88       # >> Call Site 2 <<
	.uleb128 .Ltmp2755-.Ltmp2754            #   Call between .Ltmp2754 and .Ltmp2755
	.uleb128 .Ltmp2756-.Lfunc_begin88       #     jumps to .Ltmp2756
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2763-.Lfunc_begin88       # >> Call Site 3 <<
	.uleb128 .Ltmp2764-.Ltmp2763            #   Call between .Ltmp2763 and .Ltmp2764
	.uleb128 .Ltmp2765-.Lfunc_begin88       #     jumps to .Ltmp2765
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2766-.Lfunc_begin88       # >> Call Site 4 <<
	.uleb128 .Ltmp2767-.Ltmp2766            #   Call between .Ltmp2766 and .Ltmp2767
	.uleb128 .Ltmp2768-.Lfunc_begin88       #     jumps to .Ltmp2768
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2757-.Lfunc_begin88       # >> Call Site 5 <<
	.uleb128 .Ltmp2758-.Ltmp2757            #   Call between .Ltmp2757 and .Ltmp2758
	.uleb128 .Ltmp2759-.Lfunc_begin88       #     jumps to .Ltmp2759
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2760-.Lfunc_begin88       # >> Call Site 6 <<
	.uleb128 .Ltmp2761-.Ltmp2760            #   Call between .Ltmp2760 and .Ltmp2761
	.uleb128 .Ltmp2762-.Lfunc_begin88       #     jumps to .Ltmp2762
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2761-.Lfunc_begin88       # >> Call Site 7 <<
	.uleb128 .Lfunc_end157-.Ltmp2761        #   Call between .Ltmp2761 and .Lfunc_end157
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end88:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase64:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEE13_M_reallocateEm,"axG",@progbits,_ZNSt6vectorIbSaIbEE13_M_reallocateEm,comdat
	.weak	_ZNSt6vectorIbSaIbEE13_M_reallocateEm # -- Begin function _ZNSt6vectorIbSaIbEE13_M_reallocateEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorIbSaIbEE13_M_reallocateEm,@function
_ZNSt6vectorIbSaIbEE13_M_reallocateEm:  # @_ZNSt6vectorIbSaIbEE13_M_reallocateEm
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	addq	$63, %r14
	movq	%r14, %rdi
	shrq	$3, %rdi
	andq	$-8, %rdi
	callq	_Znwm@PLT
	movq	%rax, %r13
	movq	(%rbx), %rsi
	movq	16(%rbx), %rbp
	movl	24(%rbx), %r15d
	movq	%rbp, %r12
	subq	%rsi, %r12
	cmpq	$9, %r12
	movq	%rsi, 8(%rsp)                   # 8-byte Spill
	jl	.LBB158_2
# %bb.1:
	movq	%r13, %rdi
	movq	%r12, %rdx
	callq	memmove@PLT
.LBB158_4:                              # %_ZSt4copyIPmS0_ET0_T_S2_S1_.exit.i
	movq	%r13, 16(%rsp)                  # 8-byte Spill
	addq	%r13, %r12
	testq	%r15, %r15
	je	.LBB158_5
# %bb.6:                                # %.lr.ph.i.i.i.i.i.preheader.i
	incq	%r15
	xorl	%eax, %eax
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	jmp	.LBB158_7
	.p2align	4, 0x90
.LBB158_9:                              #   in Loop: Header=BB158_7 Depth=1
	notq	%rsi
	andq	(%r12), %rsi
.LBB158_10:                             # %_ZNSt14_Bit_referenceaSEb.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB158_7 Depth=1
	movq	%rsi, (%r12)
	xorl	%esi, %esi
	cmpl	$63, %edx
	leal	1(%rdx), %edx
	sete	%sil
	cmovel	%eax, %edx
	leaq	(%rbp,%rsi,8), %rbp
	leal	1(%rcx), %r13d
	xorl	%esi, %esi
	cmpl	$63, %ecx
	sete	%sil
	cmovel	%eax, %r13d
	leaq	(%r12,%rsi,8), %r12
	decq	%r15
                                        # kill: def $edx killed $edx def $rdx
	movl	%r13d, %ecx
	cmpq	$1, %r15
	jle	.LBB158_11
.LBB158_7:                              # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbp), %rdi
	movl	$1, %esi
	shlq	%cl, %rsi
	btq	%rdx, %rdi
	jae	.LBB158_9
# %bb.8:                                #   in Loop: Header=BB158_7 Depth=1
	orq	(%r12), %rsi
	jmp	.LBB158_10
.LBB158_5:
	xorl	%r13d, %r13d
.LBB158_11:                             # %_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.exit
	movq	8(%rsp), %rdi                   # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB158_13
# %bb.12:
	movq	32(%rbx), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB158_13:                             # %_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv.exit
	movq	16(%rsp), %rax                  # 8-byte Reload
	movq	%rax, (%rbx)
	movl	$0, 8(%rbx)
	movq	%r12, 16(%rbx)
	movl	%r13d, 24(%rbx)
	shrq	$6, %r14
	leaq	(%rax,%r14,8), %rax
	movq	%rax, 32(%rbx)
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB158_2:
	.cfi_def_cfa_offset 80
	cmpq	$8, %r12
	jne	.LBB158_4
# %bb.3:
	movq	8(%rsp), %rax                   # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, (%r13)
	jmp	.LBB158_4
.Lfunc_end158:
	.size	_ZNSt6vectorIbSaIbEE13_M_reallocateEm, .Lfunc_end158-_ZNSt6vectorIbSaIbEE13_M_reallocateEm
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb,"axG",@progbits,_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb,comdat
	.weak	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb # -- Begin function _ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb
	.p2align	4, 0x90
	.type	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb,@function
_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb: # @_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%ecx, 12(%rsp)                  # 4-byte Spill
	movl	%edx, %r13d
	movq	%rsi, %r12
	movq	%rdi, %rbx
	movq	16(%rdi), %rbp
	movq	32(%rdi), %rax
	movl	24(%rdi), %r15d
	cmpq	%rax, %rbp
	je	.LBB159_9
# %bb.1:
	movq	%rbp, %rcx
	subq	%r12, %rcx
	movl	%r13d, %eax
	movq	%r15, %rdx
	subq	%rax, %rdx
	leaq	(%rdx,%rcx,8), %rcx
	testq	%rcx, %rcx
	jle	.LBB159_7
# %bb.2:                                # %_ZNSt13_Bit_iteratormmEv.exit.i.i.i.i.i.preheader
	leaq	1(%r15), %rdx
	movl	%edx, %ecx
	andl	$63, %ecx
	shrq	$6, %rdx
	leaq	(,%rdx,8), %rdx
	addq	%rbp, %rdx
	leaq	(%r15,%rbp,8), %rsi
	subq	%rax, %rsi
	leaq	(,%r12,8), %rdi
	subq	%rdi, %rsi
	incq	%rsi
	movl	$63, %edi
	movl	%r15d, %r8d
	movq	%rbp, %r9
	jmp	.LBB159_5
	.p2align	4, 0x90
.LBB159_3:                              #   in Loop: Header=BB159_5 Depth=1
	notq	%r11
	andq	(%rdx), %r11
.LBB159_4:                              # %_ZNSt14_Bit_referenceaSERKS_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB159_5 Depth=1
	leaq	(%r9,%r10,8), %r9
	addq	$-8, %r9
	movq	%r11, (%rdx)
	decq	%rsi
	cmpq	$1, %rsi
	jle	.LBB159_7
.LBB159_5:                              # %_ZNSt13_Bit_iteratormmEv.exit.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	xorl	%r10d, %r10d
	subl	$1, %r8d
	setae	%r10b
	cmovbl	%edi, %r8d
	xorl	%r14d, %r14d
	subl	$1, %ecx
	setae	%r14b
	cmovbl	%edi, %ecx
	movl	$1, %r11d
	shlq	%cl, %r11
	leaq	(%rdx,%r14,8), %rdx
	addq	$-8, %rdx
	movq	-8(%r9,%r10,8), %r14
	btq	%r8, %r14
	jae	.LBB159_3
# %bb.6:                                #   in Loop: Header=BB159_5 Depth=1
	orq	(%rdx), %r11
	jmp	.LBB159_4
.LBB159_7:                              # %_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_.exit
	movl	$1, %edx
	movl	%eax, %ecx
	shlq	%cl, %rdx
	cmpb	$0, 12(%rsp)                    # 1-byte Folded Reload
	je	.LBB159_18
# %bb.8:
	orq	(%r12), %rdx
	jmp	.LBB159_19
.LBB159_9:
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	movabsq	$9223372036854775744, %rsi      # imm = 0x7FFFFFFFFFFFFFC0
	movq	%rbp, %rax
	movq	(%rbx), %rbp
	movq	%rax, 48(%rsp)                  # 8-byte Spill
	subq	%rbp, %rax
	movq	%rax, 24(%rsp)                  # 8-byte Spill
	leaq	(%r15,%rax,8), %rax
	cmpq	%rsi, %rax
	je	.LBB159_42
# %bb.10:                               # %_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc.exit
	cmpq	$1, %rax
	movq	%rax, %rcx
	adcq	$0, %rcx
	leaq	(%rcx,%rax), %rdx
	cmpq	%rsi, %rdx
	cmovaeq	%rsi, %rdx
	addq	$63, %rdx
	addq	$63, %rsi
	addq	%rax, %rcx
	cmovaeq	%rdx, %rsi
	movq	%rsi, 40(%rsp)                  # 8-byte Spill
	movq	%rsi, %rax
	shrq	$3, %rax
	movabsq	$1152921504606846968, %rdi      # imm = 0xFFFFFFFFFFFFFF8
	andq	%rax, %rdi
	callq	_Znwm@PLT
	movq	%rax, %r11
	movq	%r12, %r14
	subq	%rbp, %r14
	cmpq	$9, %r14
	movq	%rbp, 16(%rsp)                  # 8-byte Spill
	jl	.LBB159_40
# %bb.11:
	movq	%r11, %rdi
	movq	%rbp, %rsi
	movq	%r14, %rdx
	movq	%r11, %rbp
	callq	memmove@PLT
	movq	%rbp, %r11
.LBB159_12:                             # %_ZSt4copyIPmS0_ET0_T_S2_S1_.exit.i
	addq	%r11, %r14
	testl	%r13d, %r13d
	movq	48(%rsp), %r10                  # 8-byte Reload
	je	.LBB159_23
# %bb.13:                               # %.lr.ph.i.i.i.i.i.preheader.i
	movl	%r13d, %eax
	incq	%rax
	xorl	%edx, %edx
	xorl	%edi, %edi
	movq	%r12, %rsi
	xorl	%ecx, %ecx
	jmp	.LBB159_16
	.p2align	4, 0x90
.LBB159_14:                             #   in Loop: Header=BB159_16 Depth=1
	notq	%r8
	andq	(%r14), %r8
.LBB159_15:                             # %_ZNSt14_Bit_referenceaSEb.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB159_16 Depth=1
	movq	%r8, (%r14)
	xorl	%r8d, %r8d
	cmpl	$63, %edi
	leal	1(%rdi), %edi
	sete	%r8b
	cmovel	%edx, %edi
	leaq	(%rsi,%r8,8), %rsi
	xorl	%r8d, %r8d
	cmpl	$63, %ecx
	leal	1(%rcx), %ecx
	sete	%r8b
                                        # kill: def $ecx killed $ecx def $rcx
	cmovel	%edx, %ecx
	leaq	(%r14,%r8,8), %r14
	decq	%rax
                                        # kill: def $edi killed $edi def $rdi
	cmpq	$1, %rax
	jle	.LBB159_21
.LBB159_16:                             # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rsi), %r9
	movl	$1, %r8d
	shlq	%cl, %r8
	btq	%rdi, %r9
	jae	.LBB159_14
# %bb.17:                               #   in Loop: Header=BB159_16 Depth=1
	orq	(%r14), %r8
	jmp	.LBB159_15
.LBB159_18:
	notq	%rdx
	andq	(%r12), %rdx
.LBB159_19:                             # %_ZNSt14_Bit_referenceaSEb.exit
	movq	%rdx, (%r12)
	leal	1(%r15), %eax
	movl	%eax, 24(%rbx)
	cmpl	$63, %r15d
	jne	.LBB159_39
# %bb.20:
	movl	$0, 24(%rbx)
	addq	$8, %rbp
	movq	%rbp, 16(%rbx)
	jmp	.LBB159_39
.LBB159_21:                             # %_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.exit
	movq	%r15, %rdi
	cmpl	$63, %ecx
	jne	.LBB159_27
# %bb.22:
	leaq	8(%r14), %r15
	xorl	%eax, %eax
	movl	$63, %ecx
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	cmpb	$0, 12(%rsp)                    # 1-byte Folded Reload
	jne	.LBB159_26
.LBB159_28:
	notq	%rdx
	andq	(%r14), %rdx
	jmp	.LBB159_29
.LBB159_23:
	movq	%r15, %rdi
	movl	$1, %eax
	xorl	%ecx, %ecx
	jmp	.LBB159_24
.LBB159_27:
	leal	1(%rcx), %eax
.LBB159_24:
	movq	%r14, %r15
	movl	$1, %edx
                                        # kill: def $cl killed $cl killed $rcx
	shlq	%cl, %rdx
	cmpb	$0, 12(%rsp)                    # 1-byte Folded Reload
	je	.LBB159_28
.LBB159_26:
	orq	(%r14), %rdx
.LBB159_29:                             # %_ZNSt14_Bit_referenceaSEb.exit31
	movq	%rdx, (%r14)
	movq	%r10, %rdx
	subq	%r12, %rdx
	movl	%r13d, %ecx
	movq	%rdi, %rsi
	subq	%rcx, %rsi
	leaq	(%rsi,%rdx,8), %rdx
	testq	%rdx, %rdx
	jle	.LBB159_35
# %bb.30:                               # %.lr.ph.i.i.i.i.i.preheader
	leaq	(%rdi,%r10,8), %rdx
	subq	%rcx, %rdx
	leaq	(,%r12,8), %rcx
	subq	%rcx, %rdx
	incq	%rdx
	xorl	%esi, %esi
	jmp	.LBB159_33
	.p2align	4, 0x90
.LBB159_31:                             #   in Loop: Header=BB159_33 Depth=1
	notq	%rdi
	andq	(%r15), %rdi
.LBB159_32:                             # %_ZNSt14_Bit_referenceaSERKS_.exit.i.i.i.i.i44
                                        #   in Loop: Header=BB159_33 Depth=1
	movq	%rdi, (%r15)
	xorl	%ecx, %ecx
	cmpl	$63, %r13d
	leal	1(%r13), %edi
	sete	%cl
	cmovel	%esi, %edi
	leaq	(%r12,%rcx,8), %r12
	leal	1(%rax), %ebp
	xorl	%ecx, %ecx
	cmpl	$63, %eax
	sete	%cl
	leaq	(%r15,%rcx,8), %r15
	cmovel	%esi, %ebp
	decq	%rdx
	movl	%edi, %r13d
	movl	%ebp, %eax
	cmpq	$1, %rdx
	jle	.LBB159_36
.LBB159_33:                             # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movl	$1, %edi
	movl	%eax, %ecx
	shlq	%cl, %rdi
	movq	(%r12), %rcx
	btq	%r13, %rcx
	jae	.LBB159_31
# %bb.34:                               #   in Loop: Header=BB159_33 Depth=1
	orq	(%r15), %rdi
	jmp	.LBB159_32
.LBB159_35:
	movl	%eax, %ebp
.LBB159_36:                             # %_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_.exit
	cmpq	$0, 16(%rsp)                    # 8-byte Folded Reload
	je	.LBB159_38
# %bb.37:
	movq	32(%rsp), %rdi                  # 8-byte Reload
	movq	24(%rsp), %rsi                  # 8-byte Reload
	subq	%rsi, %rdi
	movq	%r11, %r14
	callq	_ZdlPvm@PLT
	movq	%r14, %r11
.LBB159_38:                             # %_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv.exit
	movq	40(%rsp), %rax                  # 8-byte Reload
	shrq	$6, %rax
	leaq	(%r11,%rax,8), %rax
	movq	%rax, 32(%rbx)
	movq	%r11, (%rbx)
	movl	$0, 8(%rbx)
	movq	%r15, 16(%rbx)
	movl	%ebp, 24(%rbx)
.LBB159_39:                             # %_ZNSt13_Bit_iteratorppEv.exit
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB159_40:
	.cfi_def_cfa_offset 112
	cmpq	$8, %r14
	jne	.LBB159_12
# %bb.41:
	movq	16(%rsp), %rax                  # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, (%r11)
	jmp	.LBB159_12
.LBB159_42:
	leaq	.L.str.159(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end159:
	.size	_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb, .Lfunc_end159-_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb,"axG",@progbits,_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb,comdat
	.weak	_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb # -- Begin function _ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb
	.p2align	4, 0x90
	.type	_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb,@function
_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb: # @_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	testq	%rcx, %rcx
	je	.LBB160_63
# %bb.1:
	movq	%rcx, %r12
	movl	%edx, %r15d
	movq	%rsi, %rbp
	movq	%rdi, %rbx
	movl	%r8d, %eax
	negb	%al
	movb	%al, 3(%rsp)                    # 1-byte Spill
	movabsq	$-9223372036854775808, %rdi     # imm = 0x8000000000000000
	movq	32(%rbx), %rcx
	movq	(%rbx), %r13
	movq	16(%rbx), %rdx
	subq	%r13, %rcx
	shlq	$3, %rcx
	movl	24(%rbx), %esi
	movq	%rdx, %rax
	subq	%r13, %rax
	leaq	(%rsi,%rax,8), %rax
	subq	%rax, %rcx
	cmpq	%r12, %rcx
	movl	%r8d, 4(%rsp)                   # 4-byte Spill
	jae	.LBB160_2
# %bb.25:
	movq	%rdi, %rcx
	subq	%rax, %rcx
	addq	$-64, %rcx
	cmpq	%r12, %rcx
	jb	.LBB160_64
# %bb.26:                               # %_ZNKSt6vectorIbSaIbEE12_M_check_lenEmPKc.exit
	cmpq	%r12, %rax
	movq	%r12, %rcx
	cmovaq	%rax, %rcx
	leaq	(%rcx,%rax), %rdx
	movabsq	$9223372036854775744, %rsi      # imm = 0x7FFFFFFFFFFFFFC0
	cmpq	%rsi, %rdx
	cmovbq	%rdx, %rsi
	addq	$63, %rsi
	leaq	-1(%rdi), %rdx
	addq	%rax, %rcx
	cmovaeq	%rsi, %rdx
	movq	%rdx, 16(%rsp)                  # 8-byte Spill
	movq	%rdx, %rax
	shrq	$3, %rax
	movabsq	$1152921504606846968, %rdi      # imm = 0xFFFFFFFFFFFFFF8
	andq	%rax, %rdi
	callq	_Znwm@PLT
	movq	%rbp, %r14
	subq	%r13, %r14
	cmpq	$9, %r14
	movq	%rax, 8(%rsp)                   # 8-byte Spill
	jl	.LBB160_28
# %bb.27:
	movq	8(%rsp), %rdi                   # 8-byte Reload
	movq	%r13, %rsi
	movq	%r14, %rdx
	callq	memmove@PLT
	movq	8(%rsp), %rax                   # 8-byte Reload
.LBB160_30:                             # %_ZSt4copyIPmS0_ET0_T_S2_S1_.exit.i
	addq	%rax, %r14
	testl	%r15d, %r15d
	je	.LBB160_31
# %bb.32:                               # %.lr.ph.i.i.i.i.i.preheader.i
	movl	%r15d, %eax
	incq	%rax
	xorl	%edx, %edx
	xorl	%edi, %edi
	movq	%rbp, %rsi
	xorl	%ecx, %ecx
	jmp	.LBB160_33
	.p2align	4, 0x90
.LBB160_35:                             #   in Loop: Header=BB160_33 Depth=1
	notq	%r8
	andq	(%r14), %r8
.LBB160_36:                             # %_ZNSt14_Bit_referenceaSEb.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB160_33 Depth=1
	movq	%r8, (%r14)
	xorl	%r8d, %r8d
	cmpl	$63, %edi
	leal	1(%rdi), %edi
	sete	%r8b
	cmovel	%edx, %edi
	leaq	(%rsi,%r8,8), %rsi
	leal	1(%rcx), %r8d
	xorl	%r9d, %r9d
	cmpl	$63, %ecx
	sete	%r9b
	cmovel	%edx, %r8d
	leaq	(%r14,%r9,8), %r14
	decq	%rax
                                        # kill: def $edi killed $edi def $rdi
	movl	%r8d, %ecx
	cmpq	$1, %rax
	jle	.LBB160_37
.LBB160_33:                             # %.lr.ph.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rsi), %r9
	movl	$1, %r8d
	shlq	%cl, %r8
	btq	%rdi, %r9
	jae	.LBB160_35
# %bb.34:                               #   in Loop: Header=BB160_33 Depth=1
	orq	(%r14), %r8
	jmp	.LBB160_36
.LBB160_2:
	movq	%rdx, %rcx
	subq	%rbp, %rcx
	movl	%r15d, %eax
	movq	%rsi, %rdi
	subq	%rax, %rdi
	leaq	(%rdi,%rcx,8), %rcx
	testq	%rcx, %rcx
	jle	.LBB160_8
# %bb.3:                                # %_ZNSt13_Bit_iteratormmEv.exit.i.i.i.i.i.preheader
	leaq	(%rsi,%r12), %rdi
	movl	%edi, %ecx
	andl	$63, %ecx
	leaq	(%rsi,%r12), %r8
	addq	$63, %r8
	testq	%rdi, %rdi
	cmovnsq	%rdi, %r8
	sarq	$6, %r8
	movabsq	$-9223372036854775808, %r10     # imm = 0x8000000000000000
	leaq	63(%r10), %r9
	andq	%rdi, %r9
	xorl	%edi, %edi
	cmpq	%r10, %r9
	setbe	%dil
	leaq	(%rdx,%r8,8), %r8
	leaq	(%r8,%rdi,8), %rdi
	addq	$-8, %rdi
	leaq	(%rsi,%rdx,8), %r8
	subq	%rax, %r8
	leaq	(,%rbp,8), %r9
	subq	%r9, %r8
	incq	%r8
	movl	$63, %r9d
	jmp	.LBB160_4
	.p2align	4, 0x90
.LBB160_6:                              #   in Loop: Header=BB160_4 Depth=1
	notq	%r11
	andq	(%rdi), %r11
.LBB160_7:                              # %_ZNSt14_Bit_referenceaSERKS_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB160_4 Depth=1
	leaq	(%rdx,%r10,8), %rdx
	addq	$-8, %rdx
	movq	%r11, (%rdi)
	decq	%r8
	cmpq	$1, %r8
	jle	.LBB160_8
.LBB160_4:                              # %_ZNSt13_Bit_iteratormmEv.exit.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	xorl	%r10d, %r10d
	subl	$1, %esi
	setae	%r10b
	cmovbl	%r9d, %esi
	xorl	%r14d, %r14d
	subl	$1, %ecx
	setae	%r14b
	cmovbl	%r9d, %ecx
	movl	$1, %r11d
	shlq	%cl, %r11
	leaq	(%rdi,%r14,8), %rdi
	addq	$-8, %rdi
	movq	-8(%rdx,%r10,8), %r14
	btq	%rsi, %r14
	jae	.LBB160_6
# %bb.5:                                #   in Loop: Header=BB160_4 Depth=1
	orq	(%rdi), %r11
	jmp	.LBB160_7
.LBB160_8:                              # %_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_.exit
	movq	%rax, %r14
	addq	%r12, %r14
	leaq	63(%rax,%r12), %rcx
	cmovnsq	%r14, %rcx
	sarq	$6, %rcx
	movabsq	$-9223372036854775808, %rdi     # imm = 0x8000000000000000
	leaq	63(%rdi), %r8
	movq	%r14, %rdx
	andq	%r8, %rdx
	xorl	%esi, %esi
	cmpq	%rdi, %rdx
	setbe	%sil
	leaq	(,%rcx,8), %rcx
	addq	%rbp, %rcx
	leaq	(%rcx,%rsi,8), %r13
	addq	$-8, %r13
	andl	$63, %r14d
	cmpq	%rbp, %r13
	je	.LBB160_19
# %bb.9:
	testl	%r15d, %r15d
	je	.LBB160_10
# %bb.11:
	leaq	8(%rbp), %rdi
	movq	$-1, %rdx
	movl	%eax, %ecx
	shlq	%cl, %rdx
	cmpb	$0, 4(%rsp)                     # 1-byte Folded Reload
	je	.LBB160_13
# %bb.12:
	orq	(%rbp), %rdx
	jmp	.LBB160_14
.LBB160_19:
	cmpl	%r15d, %r14d
	je	.LBB160_24
# %bb.20:
	negb	%r14b
	movq	$-1, %rdx
	movl	%r14d, %ecx
	shrq	%cl, %rdx
	movl	%eax, %ecx
	shrq	%cl, %rdx
	shlq	%cl, %rdx
	cmpb	$0, 4(%rsp)                     # 1-byte Folded Reload
	je	.LBB160_22
# %bb.21:
	orq	(%rbp), %rdx
	jmp	.LBB160_23
.LBB160_31:
	xorl	%r8d, %r8d
.LBB160_37:                             # %_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator.exit
	movl	%r8d, %eax
	movq	%rax, %r13
	addq	%r12, %r13
	leaq	63(%rax,%r12), %rcx
	cmovnsq	%r13, %rcx
	sarq	$6, %rcx
	movabsq	$-9223372036854775808, %rdi     # imm = 0x8000000000000000
	leaq	63(%rdi), %rdx
	andq	%r13, %rdx
	xorl	%esi, %esi
	cmpq	%rdi, %rdx
	setbe	%sil
	leaq	(%r14,%rcx,8), %rcx
	leaq	(%rcx,%rsi,8), %r12
	addq	$-8, %r12
	andl	$63, %r13d
	cmpq	%r12, %r14
	je	.LBB160_47
# %bb.38:
	testq	%rax, %rax
	je	.LBB160_43
# %bb.39:
	movq	$-1, %rdx
	movl	%eax, %ecx
	shlq	%cl, %rdx
	cmpb	$0, 4(%rsp)                     # 1-byte Folded Reload
	je	.LBB160_41
# %bb.40:
	orq	(%r14), %rdx
	jmp	.LBB160_42
.LBB160_47:
	cmpl	%r13d, %eax
	je	.LBB160_52
# %bb.48:
	movl	%r13d, %ecx
	negb	%cl
	movq	$-1, %rdx
	shrq	%cl, %rdx
	movl	%eax, %ecx
	shrq	%cl, %rdx
	shlq	%cl, %rdx
	cmpb	$0, 4(%rsp)                     # 1-byte Folded Reload
	je	.LBB160_50
# %bb.49:
	orq	(%r14), %rdx
	jmp	.LBB160_51
.LBB160_10:
	movq	%r8, %r15
	movq	%rbp, %rdi
	jmp	.LBB160_15
.LBB160_13:
	notq	%rdx
	andq	(%rbp), %rdx
.LBB160_14:                             # %_ZSt14__fill_bvectorPmjjb.exit.i.i.i
	movq	%r8, %r15
	movq	%rdx, (%rbp)
.LBB160_15:
	movq	%r13, %rdx
	subq	%rdi, %rdx
	movzbl	3(%rsp), %esi                   # 1-byte Folded Reload
	callq	memset@PLT
	testl	%r14d, %r14d
	movabsq	$-9223372036854775808, %rdi     # imm = 0x8000000000000000
	movq	%r15, %r8
	je	.LBB160_24
# %bb.16:
	negb	%r14b
	movq	$-1, %rax
	movl	%r14d, %ecx
	shrq	%cl, %rax
	cmpb	$0, 4(%rsp)                     # 1-byte Folded Reload
	je	.LBB160_18
# %bb.17:
	orq	(%r13), %rax
	movq	%rax, (%r13)
	jmp	.LBB160_24
.LBB160_18:
	notq	%rax
	andq	(%r13), %rax
	movq	%rax, (%r13)
	jmp	.LBB160_24
.LBB160_41:
	notq	%rdx
	andq	(%r14), %rdx
.LBB160_42:                             # %_ZSt14__fill_bvectorPmjjb.exit.i.i.i58
	movq	%rdx, (%r14)
	addq	$8, %r14
.LBB160_43:
	movq	%r12, %rdx
	subq	%r14, %rdx
	movzbl	3(%rsp), %esi                   # 1-byte Folded Reload
	movq	%r14, %rdi
	callq	memset@PLT
	testl	%r13d, %r13d
	je	.LBB160_52
# %bb.44:
	movl	%r13d, %ecx
	negb	%cl
	movq	$-1, %rax
	shrq	%cl, %rax
	cmpb	$0, 4(%rsp)                     # 1-byte Folded Reload
	je	.LBB160_46
# %bb.45:
	orq	(%r12), %rax
	movq	%rax, (%r12)
	jmp	.LBB160_52
.LBB160_46:
	notq	%rax
	andq	(%r12), %rax
	movq	%rax, (%r12)
	jmp	.LBB160_52
.LBB160_22:
	notq	%rdx
	andq	(%rbp), %rdx
.LBB160_23:                             # %_ZSt14__fill_bvectorPmjjb.exit31.i.i.i
	movq	%rdx, (%rbp)
.LBB160_24:                             # %_ZSt4fillISt13_Bit_iteratorbEvT_S1_RKT0_.exit
	movl	24(%rbx), %r14d
	leaq	(%r14,%r12), %rax
	addq	$63, %rax
	addq	%r12, %r14
	cmovnsq	%r14, %rax
	sarq	$6, %rax
	shlq	$3, %rax
	addq	16(%rbx), %rax
	andq	%r14, %r8
	xorl	%ecx, %ecx
	cmpq	%rdi, %r8
	setbe	%cl
	leaq	(%rax,%rcx,8), %rax
	addq	$-8, %rax
	movq	%rax, 16(%rbx)
	andl	$63, %r14d
	jmp	.LBB160_62
.LBB160_50:
	notq	%rdx
	andq	(%r14), %rdx
.LBB160_51:                             # %_ZSt14__fill_bvectorPmjjb.exit31.i.i.i65
	movq	%rdx, (%r14)
.LBB160_52:                             # %_ZSt4fillISt13_Bit_iteratorbEvT_S1_RKT0_.exit67
	movq	16(%rbx), %rax
	movl	24(%rbx), %ecx
	movq	%rax, %rsi
	subq	%rbp, %rsi
	movl	%r15d, %edx
	movq	%rcx, %rdi
	subq	%rdx, %rdi
	leaq	(%rdi,%rsi,8), %rsi
	testq	%rsi, %rsi
	jle	.LBB160_53
# %bb.54:                               # %.lr.ph.i.i.i.i.i.preheader
	leaq	(%rcx,%rax,8), %rax
	subq	%rdx, %rax
	leaq	(,%rbp,8), %rcx
	subq	%rcx, %rax
	incq	%rax
	xorl	%edx, %edx
	jmp	.LBB160_55
	.p2align	4, 0x90
.LBB160_57:                             #   in Loop: Header=BB160_55 Depth=1
	notq	%rsi
	andq	(%r12), %rsi
.LBB160_58:                             # %_ZNSt14_Bit_referenceaSERKS_.exit.i.i.i.i.i88
                                        #   in Loop: Header=BB160_55 Depth=1
	movq	%rsi, (%r12)
	xorl	%ecx, %ecx
	cmpl	$63, %r15d
	leal	1(%r15), %esi
	sete	%cl
	cmovel	%edx, %esi
	leaq	(%rbp,%rcx,8), %rbp
	leal	1(%r13), %r14d
	xorl	%ecx, %ecx
	cmpl	$63, %r13d
	sete	%cl
	leaq	(%r12,%rcx,8), %r12
	cmovel	%edx, %r14d
	decq	%rax
	movl	%esi, %r15d
	movl	%r14d, %r13d
	cmpq	$1, %rax
	jle	.LBB160_59
.LBB160_55:                             # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movl	$1, %esi
	movl	%r13d, %ecx
	shlq	%cl, %rsi
	movq	(%rbp), %rcx
	btq	%r15, %rcx
	jae	.LBB160_57
# %bb.56:                               #   in Loop: Header=BB160_55 Depth=1
	orq	(%r12), %rsi
	jmp	.LBB160_58
.LBB160_53:
	movl	%r13d, %r14d
.LBB160_59:                             # %_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_.exit
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB160_61
# %bb.60:
	movq	32(%rbx), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB160_61:                             # %_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv.exit
	movq	16(%rsp), %rax                  # 8-byte Reload
	shrq	$6, %rax
	movq	8(%rsp), %rcx                   # 8-byte Reload
	leaq	(%rcx,%rax,8), %rax
	movq	%rax, 32(%rbx)
	movq	%rcx, (%rbx)
	movl	$0, 8(%rbx)
	movq	%r12, 16(%rbx)
.LBB160_62:                             # %.sink.split
	movl	%r14d, 24(%rbx)
.LBB160_63:
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB160_28:
	.cfi_def_cfa_offset 80
	cmpq	$8, %r14
	jne	.LBB160_30
# %bb.29:
	movq	(%r13), %rcx
	movq	%rcx, (%rax)
	jmp	.LBB160_30
.LBB160_64:
	leaq	.L.str.161(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end160:
	.size	_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb, .Lfunc_end160-_ZNSt6vectorIbSaIbEE14_M_fill_insertESt13_Bit_iteratormb
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev,"axG",@progbits,_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev,comdat
	.weak	_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev # -- Begin function _ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev,@function
_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev: # @_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r14
	movq	16(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB161_2
	.p2align	4, 0x90
.LBB161_1:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r15
	movl	$16, %esi
	callq	_ZdlPvm@PLT
	movq	%r15, %rdi
	testq	%r15, %r15
	jne	.LBB161_1
.LBB161_2:                              # %_ZNSt10_HashtableIP7_objectS1_SaIS1_ENSt8__detail9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS3_18_Mod_range_hashingENS3_20_Default_ranged_hashENS3_20_Prime_rehash_policyENS3_17_Hashtable_traitsILb0ELb1ELb1EEEE5clearEv.exit.i
	movq	(%rbx), %rdi
	movq	8(%rbx), %rdx
	shlq	$3, %rdx
	xorl	%esi, %esi
	callq	memset@PLT
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%r14)
	movq	(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rdi, %rax
	je	.LBB161_3
# %bb.4:
	movq	8(%rbx), %rsi
	shlq	$3, %rsi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB161_3:                              # %_ZNSt10_HashtableIP7_objectS1_SaIS1_ENSt8__detail9_IdentityESt8equal_toIS1_ESt4hashIS1_ENS3_18_Mod_range_hashingENS3_20_Default_ranged_hashENS3_20_Prime_rehash_policyENS3_17_Hashtable_traitsILb0ELb1ELb1EEEED2Ev.exit
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end161:
	.size	_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev, .Lfunc_end161-_ZNSt13unordered_setIP7_objectSt4hashIS1_ESt8equal_toIS1_ESaIS1_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_,"axG",@progbits,_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_,comdat
	.hidden	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_ # -- Begin function _ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_
	.weak	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_,@function
_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_: # @_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movq	(%rdi), %rdi
	movq	8(%rbx), %r14
	movq	%r14, %rax
	subq	%rdi, %rax
	movabsq	$9223372036854775800, %rcx      # imm = 0x7FFFFFFFFFFFFFF8
	cmpq	%rcx, %rax
	je	.LBB162_12
# %bb.1:                                # %_ZNKSt6vectorIN8pybind116detail13function_callESaIS2_EE12_M_check_lenEmPKc.exit
	movq	%rdx, %r13
	movq	%rsi, %r15
	sarq	$3, %rax
	movabsq	$5675921253449092805, %rcx      # imm = 0x4EC4EC4EC4EC4EC5
	imulq	%rcx, %rax
	cmpq	$1, %rax
	movq	%rax, %rdx
	adcq	$0, %rdx
	leaq	(%rdx,%rax), %r8
	movabsq	$88686269585142075, %rsi        # imm = 0x13B13B13B13B13B
	cmpq	%rsi, %r8
	cmovaeq	%rsi, %r8
	addq	%rax, %rdx
	cmovbq	%rsi, %r8
	movq	%r15, %rbp
	subq	%rdi, %rbp
	sarq	$3, %rbp
	imulq	%rcx, %rbp
	testq	%r8, %r8
	movq	%r8, 16(%rsp)                   # 8-byte Spill
	je	.LBB162_2
# %bb.3:
	movq	%rdi, %r12
	imulq	$104, %r8, %rdi
	callq	_Znwm@PLT
	movq	%r12, %rdi
	movq	%rax, %r12
	jmp	.LBB162_4
.LBB162_2:
	xorl	%r12d, %r12d
.LBB162_4:                              # %_ZNSt12_Vector_baseIN8pybind116detail13function_callESaIS2_EE11_M_allocateEm.exit
	imulq	$104, %rbp, %rax
	movups	(%r13), %xmm0
	movups	%xmm0, (%r12,%rax)
	movups	16(%r13), %xmm0
	movups	%xmm0, 16(%r12,%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%r13)
	movq	$0, 24(%r13)
	movq	64(%r13), %rcx
	movq	%rcx, 64(%r12,%rax)
	movups	32(%r13), %xmm0
	movups	48(%r13), %xmm1
	movups	%xmm1, 48(%r12,%rax)
	movups	%xmm0, 32(%r12,%rax)
	movq	$0, 32(%r13)
	movl	$0, 40(%r13)
	movq	$0, 48(%r13)
	movl	$0, 56(%r13)
	movq	$0, 64(%r13)
	movups	72(%r13), %xmm0
	movq	$0, 72(%r13)
	movups	%xmm0, 72(%r12,%rax)
	movq	$0, 80(%r13)
	movups	88(%r13), %xmm0
	movups	%xmm0, 88(%r12,%rax)
	movq	%r12, %r13
	movq	%rdi, 8(%rsp)                   # 8-byte Spill
	cmpq	%r15, %rdi
	je	.LBB162_7
# %bb.5:                                # %.lr.ph.i.i.i.preheader
	movq	%r12, %r13
	movq	8(%rsp), %rbp                   # 8-byte Reload
	.p2align	4, 0x90
.LBB162_6:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	%r13, %rdi
	movq	%rbp, %rsi
	movq	%rbx, %rdx
	callq	_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_
	addq	$104, %rbp
	addq	$104, %r13
	cmpq	%r15, %rbp
	jne	.LBB162_6
.LBB162_7:                              # %_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit
	addq	$104, %r13
	cmpq	%r15, %r14
	je	.LBB162_9
	.p2align	4, 0x90
.LBB162_8:                              # %.lr.ph.i.i.i17
                                        # =>This Inner Loop Header: Depth=1
	movq	%r13, %rdi
	movq	%r15, %rsi
	movq	%rbx, %rdx
	callq	_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_
	addq	$104, %r15
	addq	$104, %r13
	cmpq	%r14, %r15
	jne	.LBB162_8
.LBB162_9:                              # %_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit22
	movq	8(%rsp), %rdi                   # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB162_11
# %bb.10:
	movq	16(%rbx), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB162_11:                             # %_ZNSt12_Vector_baseIN8pybind116detail13function_callESaIS2_EE13_M_deallocateEPS2_m.exit
	movq	%r12, (%rbx)
	movq	%r13, 8(%rbx)
	imulq	$104, 16(%rsp), %rax            # 8-byte Folded Reload
	addq	%r12, %rax
	movq	%rax, 16(%rbx)
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB162_12:
	.cfi_def_cfa_offset 80
	leaq	.L.str.79(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Lfunc_end162:
	.size	_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_, .Lfunc_end162-_ZNSt6vectorIN8pybind116detail13function_callESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_,"axG",@progbits,_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_,comdat
	.hidden	_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_ # -- Begin function _ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_
	.weak	_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_
	.p2align	4, 0x90
	.type	_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_,@function
_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_: # @_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_
.Lfunc_begin89:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception89
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movups	(%rsi), %xmm0
	movups	%xmm0, (%rdi)
	movups	16(%rsi), %xmm0
	movups	%xmm0, 16(%rdi)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 8(%rsi)
	movq	$0, 24(%rsi)
	movq	64(%rsi), %rax
	movq	%rax, 64(%rdi)
	movups	32(%rsi), %xmm0
	movups	48(%rsi), %xmm1
	movups	%xmm1, 48(%rdi)
	movups	%xmm0, 32(%rdi)
	movq	$0, 32(%rsi)
	movl	$0, 40(%rsi)
	movq	$0, 48(%rsi)
	movl	$0, 56(%rsi)
	movq	$0, 64(%rsi)
	leaq	80(%rsi), %rax
	movups	72(%rsi), %xmm0
	movq	$0, 72(%rsi)
	movups	%xmm0, 72(%rdi)
	movq	$0, 80(%rsi)
	movups	88(%rsi), %xmm0
	movups	%xmm0, 88(%rdi)
.Ltmp2769:
	movq	%rax, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2770:
# %bb.1:                                # %_ZN8pybind116objectD2Ev.exit.i.i.i
.Ltmp2772:
	leaq	72(%rbx), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2773:
# %bb.2:                                # %_ZN8pybind116objectD2Ev.exit1.i.i.i
	leaq	8(%rbx), %r14
	leaq	32(%rbx), %rax
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB163_4
# %bb.3:
	movq	64(%rbx), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	movq	$0, 32(%rbx)
	movl	$0, 40(%rbx)
	movq	$0, 48(%rbx)
	movl	$0, 56(%rbx)
	movq	$0, 64(%rbx)
.LBB163_4:                              # %_ZNSt13_Bvector_baseISaIbEED2Ev.exit.i.i.i
	movq	(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB163_5
# %bb.8:
	movq	24(%rbx), %rsi
	subq	%rdi, %rsi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_ZdlPvm@PLT                     # TAILCALL
.LBB163_5:                              # %_ZNSt16allocator_traitsISaIN8pybind116detail13function_callEEE7destroyIS2_EEvRS3_PT_.exit
	.cfi_def_cfa_offset 32
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB163_7:
	.cfi_def_cfa_offset 32
.Ltmp2774:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB163_6:
.Ltmp2771:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end163:
	.size	_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_, .Lfunc_end163-_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_
	.cfi_endproc
	.section	.gcc_except_table._ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_,"aG",@progbits,_ZSt19__relocate_object_aIN8pybind116detail13function_callES2_SaIS2_EEvPT_PT0_RT1_,comdat
	.p2align	2, 0x0
GCC_except_table163:
.Lexception89:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase65-.Lttbaseref65
.Lttbaseref65:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end89-.Lcst_begin89
.Lcst_begin89:
	.uleb128 .Ltmp2769-.Lfunc_begin89       # >> Call Site 1 <<
	.uleb128 .Ltmp2770-.Ltmp2769            #   Call between .Ltmp2769 and .Ltmp2770
	.uleb128 .Ltmp2771-.Lfunc_begin89       #     jumps to .Ltmp2771
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2772-.Lfunc_begin89       # >> Call Site 2 <<
	.uleb128 .Ltmp2773-.Ltmp2772            #   Call between .Ltmp2772 and .Ltmp2773
	.uleb128 .Ltmp2774-.Lfunc_begin89       #     jumps to .Ltmp2774
	.byte	1                               #   On action: 1
.Lcst_end89:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase65:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_,"axG",@progbits,_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_,comdat
	.hidden	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_ # -- Begin function _ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_
	.weak	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_
	.p2align	4, 0x90
	.type	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_,@function
_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_: # @_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_
.Lfunc_begin90:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception90
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	cmpq	%rsi, %rdi
	je	.LBB164_9
# %bb.1:                                # %.lr.ph.preheader
	movq	%rsi, %rbx
	movq	%rdi, %r14
	addq	$80, %r14
	jmp	.LBB164_2
	.p2align	4, 0x90
.LBB164_8:                              # %_ZSt8_DestroyIN8pybind116detail13function_callEEvPT_.exit
                                        #   in Loop: Header=BB164_2 Depth=1
	leaq	104(%r14), %rax
	addq	$24, %r14
	cmpq	%rbx, %r14
	movq	%rax, %r14
	je	.LBB164_9
.LBB164_2:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
.Ltmp2775:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2776:
# %bb.3:                                # %_ZN8pybind116objectD2Ev.exit.i.i.i
                                        #   in Loop: Header=BB164_2 Depth=1
	leaq	-8(%r14), %rdi
.Ltmp2778:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2779:
# %bb.4:                                # %_ZN8pybind116objectD2Ev.exit1.i.i.i
                                        #   in Loop: Header=BB164_2 Depth=1
	movq	-48(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB164_6
# %bb.5:                                #   in Loop: Header=BB164_2 Depth=1
	movq	-16(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	movq	$0, -48(%r14)
	movl	$0, -40(%r14)
	movq	$0, -32(%r14)
	movl	$0, -24(%r14)
	movq	$0, -16(%r14)
.LBB164_6:                              # %_ZNSt13_Bvector_baseISaIbEED2Ev.exit.i.i.i
                                        #   in Loop: Header=BB164_2 Depth=1
	movq	-72(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB164_8
# %bb.7:                                #   in Loop: Header=BB164_2 Depth=1
	movq	-56(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB164_8
.LBB164_9:                              # %._crit_edge
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB164_10:
	.cfi_def_cfa_offset 32
.Ltmp2777:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB164_11:
.Ltmp2780:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end164:
	.size	_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_, .Lfunc_end164-_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_,"aG",@progbits,_ZNSt12_Destroy_auxILb0EE9__destroyIPN8pybind116detail13function_callEEEvT_S6_,comdat
	.p2align	2, 0x0
GCC_except_table164:
.Lexception90:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase66-.Lttbaseref66
.Lttbaseref66:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end90-.Lcst_begin90
.Lcst_begin90:
	.uleb128 .Ltmp2775-.Lfunc_begin90       # >> Call Site 1 <<
	.uleb128 .Ltmp2776-.Ltmp2775            #   Call between .Ltmp2775 and .Ltmp2776
	.uleb128 .Ltmp2777-.Lfunc_begin90       #     jumps to .Ltmp2777
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2778-.Lfunc_begin90       # >> Call Site 2 <<
	.uleb128 .Ltmp2779-.Ltmp2778            #   Call between .Ltmp2778 and .Ltmp2779
	.uleb128 .Ltmp2780-.Lfunc_begin90       #     jumps to .Ltmp2780
	.byte	1                               #   On action: 1
.Lcst_end90:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase66:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE,"axG",@progbits,_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE,comdat
	.hidden	_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE # -- Begin function _ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE
	.weak	_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE,@function
_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE: # @_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE
.Lfunc_begin91:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception91
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$32, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	%rsp, %rdi
	callq	_ZSt17current_exceptionv@PLT
	leaq	8(%rsp), %r14
	leaq	16(%rsp), %r15
	leaq	24(%rsp), %r12
.LBB165_1:                              # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rbx
	testq	%rbx, %rbx
	je	.LBB165_7
# %bb.2:                                #   in Loop: Header=BB165_1 Depth=1
	movq	8(%rbx), %r13
	movq	(%rsp), %rax
	movq	%rax, 8(%rsp)
	testq	%rax, %rax
	je	.LBB165_4
# %bb.3:                                #   in Loop: Header=BB165_1 Depth=1
	movq	%r14, %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv@PLT
.LBB165_4:                              # %_ZNSt15__exception_ptr13exception_ptrC2ERKS0_.exit
                                        #   in Loop: Header=BB165_1 Depth=1
.Ltmp2781:
	movq	%r14, %rdi
	callq	*%r13
.Ltmp2782:
	jmp	.LBB165_5
.LBB165_10:                             #   in Loop: Header=BB165_1 Depth=1
.Ltmp2783:
	movq	%rax, %r13
	cmpq	$0, 8(%rsp)
	je	.LBB165_12
# %bb.11:                               #   in Loop: Header=BB165_1 Depth=1
	movq	%r14, %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
.LBB165_12:                             # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit16
                                        #   in Loop: Header=BB165_1 Depth=1
	movq	%r13, %rdi
	callq	__cxa_begin_catch@PLT
	movq	%r15, %rdi
	callq	_ZSt17current_exceptionv@PLT
	movq	16(%rsp), %rax
	movq	$0, 16(%rsp)
	movq	(%rsp), %rcx
	movq	%rcx, 24(%rsp)
	movq	%rax, (%rsp)
	testq	%rcx, %rcx
	je	.LBB165_15
# %bb.13:                               # %_ZNSt15__exception_ptr13exception_ptraSEOS0_.exit
                                        #   in Loop: Header=BB165_1 Depth=1
	movq	%r12, %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
	cmpq	$0, 16(%rsp)
	je	.LBB165_15
# %bb.14:                               #   in Loop: Header=BB165_1 Depth=1
	movq	%r15, %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
.LBB165_15:                             # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit18
                                        #   in Loop: Header=BB165_1 Depth=1
.Ltmp2784:
	callq	__cxa_end_catch@PLT
.Ltmp2785:
	jmp	.LBB165_1
.LBB165_5:                              # %.critedge
	cmpq	$0, 8(%rsp)
	je	.LBB165_7
# %bb.6:
	leaq	8(%rsp), %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
.LBB165_7:                              # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit
	cmpq	$0, (%rsp)
	je	.LBB165_9
# %bb.8:
	movq	%rsp, %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
.LBB165_9:                              # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit22
	testq	%rbx, %rbx
	setne	%al
	addq	$32, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB165_16:
	.cfi_def_cfa_offset 80
.Ltmp2786:
	movq	%rax, %rbx
	cmpq	$0, (%rsp)
	je	.LBB165_18
# %bb.17:
	movq	%rsp, %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
.LBB165_18:                             # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit20
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end165:
	.size	_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE, .Lfunc_end165-_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE,"aG",@progbits,_ZN8pybind116detail27apply_exception_translatorsERSt12forward_listIPFvNSt15__exception_ptr13exception_ptrEESaIS5_EE,comdat
	.p2align	2, 0x0
GCC_except_table165:
.Lexception91:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase67-.Lttbaseref67
.Lttbaseref67:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end91-.Lcst_begin91
.Lcst_begin91:
	.uleb128 .Ltmp2781-.Lfunc_begin91       # >> Call Site 1 <<
	.uleb128 .Ltmp2782-.Ltmp2781            #   Call between .Ltmp2781 and .Ltmp2782
	.uleb128 .Ltmp2783-.Lfunc_begin91       #     jumps to .Ltmp2783
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2782-.Lfunc_begin91       # >> Call Site 2 <<
	.uleb128 .Ltmp2784-.Ltmp2782            #   Call between .Ltmp2782 and .Ltmp2784
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2784-.Lfunc_begin91       # >> Call Site 3 <<
	.uleb128 .Ltmp2785-.Ltmp2784            #   Call between .Ltmp2784 and .Ltmp2785
	.uleb128 .Ltmp2786-.Lfunc_begin91       #     jumps to .Ltmp2786
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2785-.Lfunc_begin91       # >> Call Site 4 <<
	.uleb128 .Lfunc_end165-.Ltmp2785        #   Call between .Ltmp2785 and .Lfunc_end165
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end91:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase67:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail25error_fetch_and_normalize7restoreEv,"axG",@progbits,_ZN8pybind116detail25error_fetch_and_normalize7restoreEv,comdat
	.hidden	_ZN8pybind116detail25error_fetch_and_normalize7restoreEv # -- Begin function _ZN8pybind116detail25error_fetch_and_normalize7restoreEv
	.weak	_ZN8pybind116detail25error_fetch_and_normalize7restoreEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail25error_fetch_and_normalize7restoreEv,@function
_ZN8pybind116detail25error_fetch_and_normalize7restoreEv: # @_ZN8pybind116detail25error_fetch_and_normalize7restoreEv
.Lfunc_begin92:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception92
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$32, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	cmpb	$1, 57(%rdi)
	je	.LBB166_1
# %bb.6:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rax), %r14
	leaq	8(%rbx), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rax), %r15
	leaq	16(%rbx), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rax), %rdx
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	PyErr_Restore@PLT
	movb	$1, 57(%rbx)
	addq	$32, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB166_1:
	.cfi_def_cfa_offset 64
	movq	%rbx, %rdi
	callq	_ZNK8pybind116detail25error_fetch_and_normalize12error_stringB5cxx11Ev
	leaq	.L.str.164(%rip), %rsi
	movq	%rsp, %rbx
	movq	%rbx, %rdi
	movq	%rax, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_@PLT
.Ltmp2787:
	movq	%rbx, %rdi
	callq	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp2788:
# %bb.2:
.LBB166_3:
.Ltmp2789:
	movq	%rax, %rbx
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB166_5
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	16(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB166_5:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end166:
	.size	_ZN8pybind116detail25error_fetch_and_normalize7restoreEv, .Lfunc_end166-_ZN8pybind116detail25error_fetch_and_normalize7restoreEv
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail25error_fetch_and_normalize7restoreEv,"aG",@progbits,_ZN8pybind116detail25error_fetch_and_normalize7restoreEv,comdat
	.p2align	2, 0x0
GCC_except_table166:
.Lexception92:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end92-.Lcst_begin92
.Lcst_begin92:
	.uleb128 .Lfunc_begin92-.Lfunc_begin92  # >> Call Site 1 <<
	.uleb128 .Ltmp2787-.Lfunc_begin92       #   Call between .Lfunc_begin92 and .Ltmp2787
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2787-.Lfunc_begin92       # >> Call Site 2 <<
	.uleb128 .Ltmp2788-.Ltmp2787            #   Call between .Ltmp2787 and .Ltmp2788
	.uleb128 .Ltmp2789-.Lfunc_begin92       #     jumps to .Ltmp2789
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2788-.Lfunc_begin92       # >> Call Site 3 <<
	.uleb128 .Lfunc_end166-.Ltmp2788        #   Call between .Ltmp2788 and .Lfunc_end166
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end92:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv,"axG",@progbits,_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv,comdat
	.hidden	_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv # -- Begin function _ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv
	.weak	_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv
	.p2align	4, 0x90
	.type	_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv,@function
_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv: # @_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv
.Lfunc_begin93:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception93
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$24, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	leaq	24(%rdi), %rbx
	cmpq	$0, 24(%rdi)
	jne	.LBB167_8
# %bb.1:
	movq	8(%rdi), %rax
	movq	16(%rdi), %rsi
	movq	%rax, %rdi
	callq	PyTuple_GetItem@PLT
	testq	%rax, %rax
	je	.LBB167_2
# %bb.5:                                # %_ZN8pybind116detail17accessor_policies10tuple_item3getImTnNSt9enable_ifIXsr3std11is_integralIT_EE5valueEiE4typeELi0EEENS_6objectENS_6handleERKS5_.exit
	movq	%rax, 8(%rsp)
	leaq	8(%rsp), %r14
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	cmpq	%r14, %rbx
	je	.LBB167_7
# %bb.6:
	movq	(%rbx), %rax
	movq	%rax, 16(%rsp)
	movq	8(%rsp), %rax
	movq	%rax, (%rbx)
	movq	$0, 8(%rsp)
.Ltmp2790:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2791:
.LBB167_7:                              # %_ZN8pybind116objectaSEOS0_.exit
.Ltmp2793:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2794:
.LBB167_8:
	movq	%rbx, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB167_2:
	.cfi_def_cfa_offset 48
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
.Ltmp2796:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2797:
# %bb.3:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.LBB167_4:
.Ltmp2798:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB167_9:
.Ltmp2792:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB167_10:
.Ltmp2795:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end167:
	.size	_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv, .Lfunc_end167-_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv,"aG",@progbits,_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv,comdat
	.p2align	2, 0x0
GCC_except_table167:
.Lexception93:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase68-.Lttbaseref68
.Lttbaseref68:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end93-.Lcst_begin93
.Lcst_begin93:
	.uleb128 .Lfunc_begin93-.Lfunc_begin93  # >> Call Site 1 <<
	.uleb128 .Ltmp2790-.Lfunc_begin93       #   Call between .Lfunc_begin93 and .Ltmp2790
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2790-.Lfunc_begin93       # >> Call Site 2 <<
	.uleb128 .Ltmp2791-.Ltmp2790            #   Call between .Ltmp2790 and .Ltmp2791
	.uleb128 .Ltmp2792-.Lfunc_begin93       #     jumps to .Ltmp2792
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2793-.Lfunc_begin93       # >> Call Site 3 <<
	.uleb128 .Ltmp2794-.Ltmp2793            #   Call between .Ltmp2793 and .Ltmp2794
	.uleb128 .Ltmp2795-.Lfunc_begin93       #     jumps to .Ltmp2795
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2794-.Lfunc_begin93       # >> Call Site 4 <<
	.uleb128 .Ltmp2796-.Ltmp2794            #   Call between .Ltmp2794 and .Ltmp2796
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2796-.Lfunc_begin93       # >> Call Site 5 <<
	.uleb128 .Ltmp2797-.Ltmp2796            #   Call between .Ltmp2796 and .Ltmp2797
	.uleb128 .Ltmp2798-.Lfunc_begin93       #     jumps to .Ltmp2798
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2797-.Lfunc_begin93       # >> Call Site 6 <<
	.uleb128 .Lfunc_end167-.Ltmp2797        #   Call between .Ltmp2797 and .Lfunc_end167
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end93:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase68:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_,"axG",@progbits,_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_,comdat
	.hidden	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_ # -- Begin function _ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_
	.weak	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_
	.p2align	4, 0x90
	.type	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_,@function
_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_: # @_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_
.Lfunc_begin94:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception94
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r15
	movq	%rsi, %r14
	movq	%rdi, %rbx
	callq	PyGILState_Check@PLT
	testl	%eax, %eax
	je	.LBB168_14
# %bb.1:
	leaq	8(%rsp), %rdi
	movq	%r15, %rsi
	callq	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_
.Ltmp2799:
	movq	%r14, %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp2800:
# %bb.2:
	movq	(%rax), %rdi
	movq	8(%rsp), %rsi
.Ltmp2801:
	callq	PyObject_CallObject@PLT
.Ltmp2802:
# %bb.3:                                # %.noexc
	testq	%rax, %rax
	je	.LBB168_4
# %bb.9:
	movq	%rax, (%rbx)
.Ltmp2803:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2804:
# %bb.10:                               # %_ZN8pybind116detail16simple_collectorILNS_19return_value_policyE1EED2Ev.exit
	movq	%rbx, %rax
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB168_14:
	.cfi_def_cfa_offset 48
	leaq	.L.str.166(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.LBB168_4:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2806:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2807:
# %bb.5:
.Ltmp2809:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2810:
# %bb.6:                                # %.noexc3
.LBB168_7:
.Ltmp2808:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB168_12
.LBB168_8:
.Ltmp2805:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB168_11:
.Ltmp2811:
	movq	%rax, %rbx
.LBB168_12:                             # %.body
.Ltmp2812:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2813:
# %bb.13:                               # %_ZN8pybind116detail16simple_collectorILNS_19return_value_policyE1EED2Ev.exit4
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB168_15:
.Ltmp2814:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end168:
	.size	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_, .Lfunc_end168-_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_,"aG",@progbits,_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJRKNS_6handleEEEENS_6objectEDpOT0_,comdat
	.p2align	2, 0x0
GCC_except_table168:
.Lexception94:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase69-.Lttbaseref69
.Lttbaseref69:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end94-.Lcst_begin94
.Lcst_begin94:
	.uleb128 .Lfunc_begin94-.Lfunc_begin94  # >> Call Site 1 <<
	.uleb128 .Ltmp2799-.Lfunc_begin94       #   Call between .Lfunc_begin94 and .Ltmp2799
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2799-.Lfunc_begin94       # >> Call Site 2 <<
	.uleb128 .Ltmp2802-.Ltmp2799            #   Call between .Ltmp2799 and .Ltmp2802
	.uleb128 .Ltmp2811-.Lfunc_begin94       #     jumps to .Ltmp2811
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2803-.Lfunc_begin94       # >> Call Site 3 <<
	.uleb128 .Ltmp2804-.Ltmp2803            #   Call between .Ltmp2803 and .Ltmp2804
	.uleb128 .Ltmp2805-.Lfunc_begin94       #     jumps to .Ltmp2805
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2804-.Lfunc_begin94       # >> Call Site 4 <<
	.uleb128 .Ltmp2806-.Ltmp2804            #   Call between .Ltmp2804 and .Ltmp2806
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2806-.Lfunc_begin94       # >> Call Site 5 <<
	.uleb128 .Ltmp2807-.Ltmp2806            #   Call between .Ltmp2806 and .Ltmp2807
	.uleb128 .Ltmp2808-.Lfunc_begin94       #     jumps to .Ltmp2808
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2809-.Lfunc_begin94       # >> Call Site 6 <<
	.uleb128 .Ltmp2810-.Ltmp2809            #   Call between .Ltmp2809 and .Ltmp2810
	.uleb128 .Ltmp2811-.Lfunc_begin94       #     jumps to .Ltmp2811
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2810-.Lfunc_begin94       # >> Call Site 7 <<
	.uleb128 .Ltmp2812-.Ltmp2810            #   Call between .Ltmp2810 and .Ltmp2812
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2812-.Lfunc_begin94       # >> Call Site 8 <<
	.uleb128 .Ltmp2813-.Ltmp2812            #   Call between .Ltmp2812 and .Ltmp2813
	.uleb128 .Ltmp2814-.Lfunc_begin94       #     jumps to .Ltmp2814
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2813-.Lfunc_begin94       # >> Call Site 9 <<
	.uleb128 .Lfunc_end168-.Ltmp2813        #   Call between .Ltmp2813 and .Lfunc_end168
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end94:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase69:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind113strC2EONS_6objectE,"axG",@progbits,_ZN8pybind113strC2EONS_6objectE,comdat
	.hidden	_ZN8pybind113strC2EONS_6objectE # -- Begin function _ZN8pybind113strC2EONS_6objectE
	.weak	_ZN8pybind113strC2EONS_6objectE
	.p2align	4, 0x90
	.type	_ZN8pybind113strC2EONS_6objectE,@function
_ZN8pybind113strC2EONS_6objectE:        # @_ZN8pybind113strC2EONS_6objectE
.Lfunc_begin95:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception95
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	(%rsi), %rdi
	testq	%rdi, %rdi
	je	.LBB169_4
# %bb.1:                                # %_ZN8pybind113str6check_ENS_6handleE.exit
	movq	8(%rdi), %rax
	testb	$16, 171(%rax)
	jne	.LBB169_2
.LBB169_4:                              # %_ZN8pybind113str6check_ENS_6handleE.exit.thread
	callq	PyObject_Str@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB169_5
# %bb.3:
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB169_2:                              # %.thread
	.cfi_def_cfa_offset 32
	movq	$0, (%rsi)
	movq	%rdi, (%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB169_5:
	.cfi_def_cfa_offset 32
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp2815:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2816:
# %bb.6:
.Ltmp2818:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp2819:
# %bb.11:
.LBB169_7:
.Ltmp2820:
	movq	%rax, %r14
	jmp	.LBB169_9
.LBB169_8:
.Ltmp2817:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
.LBB169_9:
.Ltmp2821:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2822:
# %bb.10:                               # %_ZN8pybind116objectD2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB169_12:
.Ltmp2823:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end169:
	.size	_ZN8pybind113strC2EONS_6objectE, .Lfunc_end169-_ZN8pybind113strC2EONS_6objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind113strC2EONS_6objectE,"aG",@progbits,_ZN8pybind113strC2EONS_6objectE,comdat
	.p2align	2, 0x0
GCC_except_table169:
.Lexception95:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase70-.Lttbaseref70
.Lttbaseref70:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end95-.Lcst_begin95
.Lcst_begin95:
	.uleb128 .Lfunc_begin95-.Lfunc_begin95  # >> Call Site 1 <<
	.uleb128 .Ltmp2815-.Lfunc_begin95       #   Call between .Lfunc_begin95 and .Ltmp2815
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2815-.Lfunc_begin95       # >> Call Site 2 <<
	.uleb128 .Ltmp2816-.Ltmp2815            #   Call between .Ltmp2815 and .Ltmp2816
	.uleb128 .Ltmp2817-.Lfunc_begin95       #     jumps to .Ltmp2817
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2818-.Lfunc_begin95       # >> Call Site 3 <<
	.uleb128 .Ltmp2819-.Ltmp2818            #   Call between .Ltmp2818 and .Ltmp2819
	.uleb128 .Ltmp2820-.Lfunc_begin95       #     jumps to .Ltmp2820
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2819-.Lfunc_begin95       # >> Call Site 4 <<
	.uleb128 .Ltmp2821-.Ltmp2819            #   Call between .Ltmp2819 and .Ltmp2821
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2821-.Lfunc_begin95       # >> Call Site 5 <<
	.uleb128 .Ltmp2822-.Ltmp2821            #   Call between .Ltmp2821 and .Ltmp2822
	.uleb128 .Ltmp2823-.Lfunc_begin95       #     jumps to .Ltmp2823
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2822-.Lfunc_begin95       # >> Call Site 6 <<
	.uleb128 .Lfunc_end169-.Ltmp2822        #   Call between .Ltmp2822 and .Lfunc_end169
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end95:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase70:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_,"axG",@progbits,_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_,comdat
	.hidden	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_ # -- Begin function _ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_
	.weak	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_
	.p2align	4, 0x90
	.type	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_,@function
_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_: # @_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_
.Lfunc_begin96:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception96
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$80, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	%rsi, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rax), %rax
	movq	%rax, 8(%rsp)
	testq	%rax, %rax
	je	.LBB170_9
# %bb.1:                                # %.split44.critedge
.Ltmp2824:
	movl	$1, %edi
	callq	PyTuple_New@PLT
.Ltmp2825:
# %bb.2:                                # %.noexc
	movq	%rax, (%r14)
	testq	%rax, %rax
	je	.LBB170_5
# %bb.3:                                # %_ZN8pybind115tupleC2ImTnNSt9enable_ifIXsr3std11is_integralIT_EE5valueEiE4typeELi0EEES3_.exit.preheader.preheader
	movq	8(%rsp), %rcx
	movq	$0, 8(%rsp)
	movq	8(%rax), %rdx
	testb	$4, 171(%rdx)
	je	.LBB170_4
# %bb.22:                               # %_ZL16PyTuple_SET_ITEMP7_objectlS0_.exit
	movq	%rcx, 24(%rax)
.Ltmp2827:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2828:
# %bb.23:                               # %_ZNSt5arrayIN8pybind116objectELm1EED2Ev.exit
	movq	%r14, %rax
	addq	$80, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB170_9:                              # %.split46.us
	.cfi_def_cfa_offset 112
.Ltmp2836:
	leaq	48(%rsp), %rdi
	callq	_ZN8pybind11L7type_idIRKNS_6handleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
.Ltmp2837:
# %bb.10:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2839:
	leaq	16(%rsp), %rdi
	xorl	%esi, %esi
	callq	_ZNSt7__cxx119to_stringEm@PLT
.Ltmp2840:
# %bb.11:
	movb	$1, %bpl
.Ltmp2842:
	leaq	16(%rsp), %rsi
	leaq	48(%rsp), %rdx
	movq	%r14, %rdi
	callq	_ZN8pybind1137cast_error_unable_to_convert_call_argERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_
.Ltmp2843:
# %bb.12:
	xorl	%ebp, %ebp
.Ltmp2844:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2845:
# %bb.28:
.LBB170_5:
.Ltmp2830:
	leaq	.L.str.130(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp2831:
# %bb.6:
.LBB170_4:
	leaq	.L.str.74(%rip), %rdi
	leaq	.L.str.75(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL16PyTuple_SET_ITEMP7_objectlS0_(%rip), %rcx
	movl	$33, %edx
	callq	__assert_fail@PLT
.LBB170_15:
.Ltmp2846:
	movq	%rax, %rbx
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB170_16
# %bb.17:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	testb	%bpl, %bpl
	jne	.LBB170_18
.LBB170_19:
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB170_20
	jmp	.LBB170_26
.LBB170_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	testb	%bpl, %bpl
	je	.LBB170_19
	jmp	.LBB170_18
.LBB170_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.thread
.Ltmp2841:
	movq	%rax, %rbx
.LBB170_18:
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB170_26
.LBB170_20:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB170_26
.LBB170_13:
.Ltmp2838:
	jmp	.LBB170_25
.LBB170_21:
.Ltmp2829:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB170_7:
.Ltmp2832:
	movq	%rax, %rbx
.Ltmp2833:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2834:
	jmp	.LBB170_26
.LBB170_8:
.Ltmp2835:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB170_24:
.Ltmp2826:
.LBB170_25:                             # %.body
	movq	%rax, %rbx
.LBB170_26:                             # %.body
.Ltmp2847:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2848:
# %bb.27:                               # %_ZNSt5arrayIN8pybind116objectELm1EED2Ev.exit35
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB170_29:
.Ltmp2849:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end170:
	.size	_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_, .Lfunc_end170-_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_,"aG",@progbits,_ZN8pybind1110make_tupleILNS_19return_value_policyE1EJRKNS_6handleEEEENS_5tupleEDpOT0_,comdat
	.p2align	2, 0x0
GCC_except_table170:
.Lexception96:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase71-.Lttbaseref71
.Lttbaseref71:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end96-.Lcst_begin96
.Lcst_begin96:
	.uleb128 .Lfunc_begin96-.Lfunc_begin96  # >> Call Site 1 <<
	.uleb128 .Ltmp2824-.Lfunc_begin96       #   Call between .Lfunc_begin96 and .Ltmp2824
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2824-.Lfunc_begin96       # >> Call Site 2 <<
	.uleb128 .Ltmp2825-.Ltmp2824            #   Call between .Ltmp2824 and .Ltmp2825
	.uleb128 .Ltmp2826-.Lfunc_begin96       #     jumps to .Ltmp2826
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2827-.Lfunc_begin96       # >> Call Site 3 <<
	.uleb128 .Ltmp2828-.Ltmp2827            #   Call between .Ltmp2827 and .Ltmp2828
	.uleb128 .Ltmp2829-.Lfunc_begin96       #     jumps to .Ltmp2829
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2836-.Lfunc_begin96       # >> Call Site 4 <<
	.uleb128 .Ltmp2837-.Ltmp2836            #   Call between .Ltmp2836 and .Ltmp2837
	.uleb128 .Ltmp2838-.Lfunc_begin96       #     jumps to .Ltmp2838
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2837-.Lfunc_begin96       # >> Call Site 5 <<
	.uleb128 .Ltmp2839-.Ltmp2837            #   Call between .Ltmp2837 and .Ltmp2839
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2839-.Lfunc_begin96       # >> Call Site 6 <<
	.uleb128 .Ltmp2840-.Ltmp2839            #   Call between .Ltmp2839 and .Ltmp2840
	.uleb128 .Ltmp2841-.Lfunc_begin96       #     jumps to .Ltmp2841
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2842-.Lfunc_begin96       # >> Call Site 7 <<
	.uleb128 .Ltmp2845-.Ltmp2842            #   Call between .Ltmp2842 and .Ltmp2845
	.uleb128 .Ltmp2846-.Lfunc_begin96       #     jumps to .Ltmp2846
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2830-.Lfunc_begin96       # >> Call Site 8 <<
	.uleb128 .Ltmp2831-.Ltmp2830            #   Call between .Ltmp2830 and .Ltmp2831
	.uleb128 .Ltmp2832-.Lfunc_begin96       #     jumps to .Ltmp2832
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2831-.Lfunc_begin96       # >> Call Site 9 <<
	.uleb128 .Ltmp2833-.Ltmp2831            #   Call between .Ltmp2831 and .Ltmp2833
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2833-.Lfunc_begin96       # >> Call Site 10 <<
	.uleb128 .Ltmp2834-.Ltmp2833            #   Call between .Ltmp2833 and .Ltmp2834
	.uleb128 .Ltmp2835-.Lfunc_begin96       #     jumps to .Ltmp2835
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2847-.Lfunc_begin96       # >> Call Site 11 <<
	.uleb128 .Ltmp2848-.Ltmp2847            #   Call between .Ltmp2847 and .Ltmp2848
	.uleb128 .Ltmp2849-.Lfunc_begin96       #     jumps to .Ltmp2849
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2848-.Lfunc_begin96       # >> Call Site 12 <<
	.uleb128 .Lfunc_end170-.Ltmp2848        #   Call between .Ltmp2848 and .Lfunc_end170
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end96:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase71:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZN8pybind11L7type_idIRKNS_6handleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
	.type	_ZN8pybind11L7type_idIRKNS_6handleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv,@function
_ZN8pybind11L7type_idIRKNS_6handleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv: # @_ZN8pybind11L7type_idIRKNS_6handleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
.Lfunc_begin97:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception97
# %bb.0:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	16(%rdi), %r15
	movl	$19, %edi
	callq	_Znwm@PLT
	movq	%rax, (%rbx)
	movq	$18, 16(%rbx)
	movups	_ZTSN8pybind116handleE(%rip), %xmm0
	movups	%xmm0, (%rax)
	movw	$17765, 16(%rax)                # imm = 0x4565
	movq	$18, 8(%rbx)
	movb	$0, 18(%rax)
.Ltmp2850:
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail13clean_type_idERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp2851:
# %bb.1:                                # %_ZN8pybind116detail13clean_type_idB5cxx11EPKc.exit
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB171_2:
	.cfi_def_cfa_offset 32
.Ltmp2852:
	movq	%rax, %r14
	movq	(%rbx), %rdi
	cmpq	%r15, %rdi
	je	.LBB171_4
# %bb.3:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i
	movq	(%r15), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB171_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end171:
	.size	_ZN8pybind11L7type_idIRKNS_6handleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv, .Lfunc_end171-_ZN8pybind11L7type_idIRKNS_6handleEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table171:
.Lexception97:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end97-.Lcst_begin97
.Lcst_begin97:
	.uleb128 .Lfunc_begin97-.Lfunc_begin97  # >> Call Site 1 <<
	.uleb128 .Ltmp2850-.Lfunc_begin97       #   Call between .Lfunc_begin97 and .Ltmp2850
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2850-.Lfunc_begin97       # >> Call Site 2 <<
	.uleb128 .Ltmp2851-.Ltmp2850            #   Call between .Ltmp2850 and .Ltmp2851
	.uleb128 .Ltmp2852-.Lfunc_begin97       #     jumps to .Ltmp2852
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2851-.Lfunc_begin97       # >> Call Site 3 <<
	.uleb128 .Lfunc_end171-.Ltmp2851        #   Call between .Ltmp2851 and .Lfunc_end171
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end97:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_,"axG",@progbits,_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_,comdat
	.hidden	_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_ # -- Begin function _ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_
	.weak	_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_
	.p2align	4, 0x90
	.type	_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_,@function
_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_: # @_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %rbx
	movq	(%rdi), %rcx
	leaq	56(%rsi), %r15
	cmpq	$0, 80(%rsi)
	je	.LBB172_1
# %bb.14:
	movq	64(%rbx), %r8
	movq	%rcx, %rax
	orq	%r8, %rax
	shrq	$32, %rax
	je	.LBB172_15
# %bb.16:
	movq	%rcx, %rax
	xorl	%edx, %edx
	divq	%r8
	movq	%rdx, %rsi
	movq	(%r15), %rax
	movq	(%rax,%rsi,8), %rax
	testq	%rax, %rax
	jne	.LBB172_18
	jmp	.LBB172_25
.LBB172_1:
	leaq	72(%rbx), %r9
	.p2align	4, 0x90
.LBB172_2:                              # =>This Inner Loop Header: Depth=1
	movq	(%r9), %r9
	testq	%r9, %r9
	je	.LBB172_25
# %bb.3:                                #   in Loop: Header=BB172_2 Depth=1
	cmpq	8(%r9), %rcx
	jne	.LBB172_2
	jmp	.LBB172_4
.LBB172_15:
	movl	%ecx, %eax
	xorl	%edx, %edx
	divl	%r8d
	movl	%edx, %esi
	movq	(%r15), %rax
	movq	(%rax,%rsi,8), %rax
	testq	%rax, %rax
	je	.LBB172_25
.LBB172_18:
	movq	(%rax), %r9
	cmpq	8(%r9), %rcx
	je	.LBB172_4
	.p2align	4, 0x90
.LBB172_20:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r9), %r9
	testq	%r9, %r9
	je	.LBB172_25
# %bb.21:                               #   in Loop: Header=BB172_20 Depth=1
	movq	8(%r9), %rdi
	movq	%rdi, %rax
	orq	%r8, %rax
	shrq	$32, %rax
	je	.LBB172_22
# %bb.23:                               #   in Loop: Header=BB172_20 Depth=1
	movq	%rdi, %rax
	xorl	%edx, %edx
	divq	%r8
	cmpq	%rsi, %rdx
	je	.LBB172_19
	jmp	.LBB172_25
	.p2align	4, 0x90
.LBB172_22:                             #   in Loop: Header=BB172_20 Depth=1
	movl	%edi, %eax
	xorl	%edx, %edx
	divl	%r8d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rsi, %rdx
	jne	.LBB172_25
.LBB172_19:                             #   in Loop: Header=BB172_20 Depth=1
	cmpq	%rdi, %rcx
	jne	.LBB172_20
.LBB172_4:                              # %_ZNSt13unordered_mapIP11_typeobjectSt6vectorIPN8pybind116detail9type_infoESaIS6_EESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S8_EEE4findERSE_.exit
	movq	16(%r9), %rax
	movq	24(%r9), %rdx
	subq	%rax, %rdx
	cmpq	$8, %rdx
	jne	.LBB172_25
# %bb.5:
	movq	(%rax), %r14
	cmpq	%rcx, (%r14)
	jne	.LBB172_25
# %bb.6:
	movq	8(%r14), %rax
	movq	%rax, (%rsp)
	leaq	224(%rbx), %rdi
	movq	%rsp, %rsi
	callq	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_@PLT
	testb	$4, 161(%r14)
	movq	%rbx, %rdi
	je	.LBB172_9
# %bb.7:
	callq	_ZN8pybind116detail30get_local_internals_pp_managerEv
	movq	%rax, %rdi
	callq	_ZN8pybind116detail20internals_pp_managerINS0_15local_internalsEE6get_ppEv
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	jne	.LBB172_9
# %bb.8:
	movl	$64, %edi
	movq	%rax, %r12
	callq	_Znwm@PLT
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 32(%rax)
	leaq	48(%rax), %rcx
	movq	%rcx, (%rax)
	movq	$1, 8(%rax)
	movups	%xmm0, 16(%rax)
	movl	$1065353216, 32(%rax)           # imm = 0x3F800000
	movups	%xmm0, 40(%rax)
	movq	$0, 56(%rax)
	movq	%r12, %rdi
	movq	%rax, %rsi
	callq	_ZNSt15__uniq_ptr_implIN8pybind116detail15local_internalsESt14default_deleteIS2_EE5resetEPS2_
	movq	(%r12), %rdi
.LBB172_9:                              # %_ZN8pybind116detail19get_local_internalsEv.exit
	movq	%rsp, %rsi
	callq	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	_ZNSt10_HashtableIP11_typeobjectSt4pairIKS1_St6vectorIPN8pybind116detail9type_infoESaIS8_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS3_
	movq	184(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB172_26
# %bb.10:
	leaq	184(%rbx), %r15
	jmp	.LBB172_11
	.p2align	4, 0x90
.LBB172_51:                             #   in Loop: Header=BB172_11 Depth=1
	movq	(%rdi), %r12
	movq	%r12, %rdi
	testq	%r12, %r12
	je	.LBB172_26
.LBB172_11:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB172_33 Depth 2
	movq	8(%rdi), %rax
	cmpq	(%r14), %rax
	jne	.LBB172_51
# %bb.12:                               #   in Loop: Header=BB172_11 Depth=1
	movq	176(%rbx), %r9
	movq	24(%rdi), %rax
	movq	%rax, %rcx
	orq	%r9, %rcx
	shrq	$32, %rcx
	je	.LBB172_13
# %bb.31:                               #   in Loop: Header=BB172_11 Depth=1
	xorl	%edx, %edx
	divq	%r9
	movq	%rdx, %rcx
	jmp	.LBB172_32
.LBB172_13:                             #   in Loop: Header=BB172_11 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r9d
	movl	%edx, %ecx
.LBB172_32:                             #   in Loop: Header=BB172_11 Depth=1
	movq	168(%rbx), %r8
	movq	(%r8,%rcx,8), %r11
	movq	%r11, %rax
	.p2align	4, 0x90
.LBB172_33:                             #   Parent Loop BB172_11 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%rax, %rsi
	movq	(%rax), %rax
	cmpq	%rdi, %rax
	jne	.LBB172_33
# %bb.34:                               # %_ZNSt10_HashtableISt4pairIPK7_objectPKcES6_SaIS6_ENSt8__detail9_IdentityESt8equal_toIS6_EN8pybind116detail13override_hashENS8_18_Mod_range_hashingENS8_20_Default_ranged_hashENS8_20_Prime_rehash_policyENS8_17_Hashtable_traitsILb1ELb1ELb1EEEE20_M_get_previous_nodeEmPNS8_10_Hash_nodeIS6_Lb1EEE.exit.i.i.i
                                        #   in Loop: Header=BB172_11 Depth=1
	movq	(%rdi), %r10
	cmpq	%rsi, %r11
	je	.LBB172_35
# %bb.44:                               #   in Loop: Header=BB172_11 Depth=1
	testq	%r10, %r10
	je	.LBB172_50
# %bb.45:                               #   in Loop: Header=BB172_11 Depth=1
	movq	24(%r10), %rax
	movq	%rax, %rdx
	orq	%r9, %rdx
	shrq	$32, %rdx
	je	.LBB172_46
# %bb.47:                               #   in Loop: Header=BB172_11 Depth=1
	xorl	%edx, %edx
	divq	%r9
	cmpq	%rcx, %rdx
	jne	.LBB172_49
	jmp	.LBB172_50
.LBB172_35:                             #   in Loop: Header=BB172_11 Depth=1
	testq	%r10, %r10
	je	.LBB172_41
# %bb.36:                               #   in Loop: Header=BB172_11 Depth=1
	movq	24(%r10), %rax
	movq	%rax, %rdx
	orq	%r9, %rdx
	shrq	$32, %rdx
	je	.LBB172_37
# %bb.38:                               #   in Loop: Header=BB172_11 Depth=1
	xorl	%edx, %edx
	divq	%r9
	cmpq	%rcx, %rdx
	jne	.LBB172_40
	jmp	.LBB172_50
.LBB172_46:                             #   in Loop: Header=BB172_11 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r9d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	je	.LBB172_50
.LBB172_49:                             #   in Loop: Header=BB172_11 Depth=1
	movq	%rsi, (%r8,%rdx,8)
	jmp	.LBB172_50
.LBB172_37:                             #   in Loop: Header=BB172_11 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r9d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	je	.LBB172_50
.LBB172_40:                             #   in Loop: Header=BB172_11 Depth=1
	movq	%r11, (%r8,%rdx,8)
	movq	168(%rbx), %r8
	movq	(%r8,%rcx,8), %r11
.LBB172_41:                             # %.thread23.i.i.i.i
                                        #   in Loop: Header=BB172_11 Depth=1
	cmpq	%r11, %r15
	jne	.LBB172_43
# %bb.42:                               #   in Loop: Header=BB172_11 Depth=1
	movq	%r10, (%r15)
.LBB172_43:                             #   in Loop: Header=BB172_11 Depth=1
	movq	$0, (%r8,%rcx,8)
.LBB172_50:                             # %_ZNSt13unordered_setISt4pairIPK7_objectPKcEN8pybind116detail13override_hashESt8equal_toIS6_ESaIS6_EE5eraseENSt8__detail14_Node_iteratorIS6_Lb1ELb1EEE.exit
                                        #   in Loop: Header=BB172_11 Depth=1
	movq	(%rdi), %r12
	movq	%r12, (%rsi)
	movl	$32, %esi
	callq	_ZdlPvm@PLT
	decq	192(%rbx)
	movq	%r12, %rdi
	testq	%r12, %r12
	jne	.LBB172_11
.LBB172_26:                             # %._crit_edge
	movq	104(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB172_28
# %bb.27:
	movq	120(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB172_28:                             # %_ZNSt6vectorISt4pairIPKSt9type_infoPFPvS4_EESaIS7_EED2Ev.exit.i
	movq	80(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB172_30
# %bb.29:
	movq	96(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB172_30:                             # %_ZN8pybind116detail9type_infoD2Ev.exit
	movl	$168, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
.LBB172_25:                             # %.critedge
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end172:
	.size	_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_, .Lfunc_end172-_ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,"axG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,comdat
	.weak	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_ # -- Begin function _ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,@function
_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_: # @_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_
.Lfunc_begin98:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception98
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r12
	movq	%rdi, %rbx
	cmpq	$0, 24(%rdi)
	je	.LBB173_4
# %bb.1:
	movq	(%r12), %rax
	movq	8(%rax), %rax
	xorl	%r14d, %r14d
	cmpb	$42, (%rax)
	sete	%r14b
	addq	%rax, %r14
	movq	%r14, %rdi
	callq	strlen@PLT
.Ltmp2853:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2854:
# %bb.2:                                # %_ZNKSt8__detail15_Hash_code_baseISt10type_indexSt4pairIKS1_St6vectorIPFbP7_objectRPvESaISA_EEENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_hash_codeERS3_.exit
	movq	%rax, %rcx
	movq	8(%rbx), %rsi
	orq	%rsi, %rax
	shrq	$32, %rax
	je	.LBB173_10
# %bb.3:
	movq	%rcx, %rax
	xorl	%edx, %edx
	divq	%rsi
	movq	%rdx, %r13
	jmp	.LBB173_11
.LBB173_4:
	movq	16(%rbx), %r14
	testq	%r14, %r14
	je	.LBB173_14
# %bb.5:                                # %.preheader.i
	leaq	16(%rbx), %r15
	movq	(%r12), %rax
	movq	8(%rax), %r12
	movq	8(%r14), %rax
	movq	8(%rax), %rbp
	cmpq	%rbp, %r12
	je	.LBB173_20
# %bb.6:                                # %.lr.ph
	cmpb	$42, (%r12)
	jne	.LBB173_15
# %bb.7:                                # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_St6vectorIPFbP7_objectRPvESaISA_EEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueISD_Lb0EEE.exit.thread16.i.us.preheader
	xorl	%r13d, %r13d
	.p2align	4, 0x90
.LBB173_8:                              # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_St6vectorIPFbP7_objectRPvESaISA_EEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueISD_Lb0EEE.exit.thread16.i.us
                                        # =>This Inner Loop Header: Depth=1
	movq	%r14, %r15
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB173_25
# %bb.9:                                #   in Loop: Header=BB173_8 Depth=1
	movq	8(%r14), %rax
	movq	8(%rax), %rbp
	cmpq	%rbp, %r12
	jne	.LBB173_8
	jmp	.LBB173_20
.LBB173_10:
	movl	%ecx, %eax
	xorl	%edx, %edx
	divl	%esi
	movl	%edx, %r13d
.LBB173_11:
	movq	%rbx, %rdi
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m@PLT
	testq	%rax, %rax
	je	.LBB173_14
# %bb.12:
	movq	%rax, %r15
	movq	(%rax), %r14
	jmp	.LBB173_24
.LBB173_14:
	xorl	%r13d, %r13d
	jmp	.LBB173_25
.LBB173_15:                             # %.lr.ph.split
	xorl	%esi, %esi
	cmpb	$42, (%rbp)
	sete	%sil
	addq	%rbp, %rsi
	movq	%r12, %rdi
	callq	strcmp@PLT
	testl	%eax, %eax
	je	.LBB173_20
# %bb.16:
	xorl	%r13d, %r13d
	.p2align	4, 0x90
.LBB173_17:                             # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_St6vectorIPFbP7_objectRPvESaISA_EEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueISD_Lb0EEE.exit.thread16.i
                                        # =>This Inner Loop Header: Depth=1
	movq	%r14, %r15
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB173_25
# %bb.18:                               #   in Loop: Header=BB173_17 Depth=1
	movq	8(%r14), %rax
	movq	8(%rax), %rbp
	cmpq	%rbp, %r12
	je	.LBB173_20
# %bb.19:                               # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_St6vectorIPFbP7_objectRPvESaISA_EEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueISD_Lb0EEE.exit.i
                                        #   in Loop: Header=BB173_17 Depth=1
	xorl	%esi, %esi
	cmpb	$42, (%rbp)
	sete	%sil
	addq	%rbp, %rsi
	movq	%r12, %rdi
	callq	strcmp@PLT
	testl	%eax, %eax
	jne	.LBB173_17
.LBB173_20:                             # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeERS2_.exit
	movq	8(%rbx), %r13
	xorl	%r12d, %r12d
	cmpb	$42, (%rbp)
	sete	%r12b
	addq	%rbp, %r12
	movq	%r12, %rdi
	callq	strlen@PLT
.Ltmp2856:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r12, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2857:
# %bb.21:                               # %_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERKNSE_16_Hash_node_valueISC_Lb0EEE.exit
	movq	%rax, %rcx
	orq	%r13, %rcx
	shrq	$32, %rcx
	je	.LBB173_23
# %bb.22:
	xorl	%edx, %edx
	divq	%r13
	movq	%rdx, %r13
	jmp	.LBB173_24
.LBB173_23:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r13d
	movl	%edx, %r13d
.LBB173_24:
	movq	%rbx, %rdi
	movq	%r13, %rsi
	movq	%r15, %rdx
	movq	%r14, %rcx
	callq	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE@PLT
	movl	$1, %r13d
.LBB173_25:                             # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeERS2_.exit.thread
	movq	%r13, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB173_26:
	.cfi_def_cfa_offset 64
.Ltmp2858:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB173_27:
.Ltmp2855:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end173:
	.size	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_, .Lfunc_end173-_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,"aG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,comdat
	.p2align	2, 0x0
GCC_except_table173:
.Lexception98:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase72-.Lttbaseref72
.Lttbaseref72:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end98-.Lcst_begin98
.Lcst_begin98:
	.uleb128 .Ltmp2853-.Lfunc_begin98       # >> Call Site 1 <<
	.uleb128 .Ltmp2854-.Ltmp2853            #   Call between .Ltmp2853 and .Ltmp2854
	.uleb128 .Ltmp2855-.Lfunc_begin98       #     jumps to .Ltmp2855
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2854-.Lfunc_begin98       # >> Call Site 2 <<
	.uleb128 .Ltmp2856-.Ltmp2854            #   Call between .Ltmp2854 and .Ltmp2856
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2856-.Lfunc_begin98       # >> Call Site 3 <<
	.uleb128 .Ltmp2857-.Ltmp2856            #   Call between .Ltmp2856 and .Ltmp2857
	.uleb128 .Ltmp2858-.Lfunc_begin98       #     jumps to .Ltmp2858
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2857-.Lfunc_begin98       # >> Call Site 4 <<
	.uleb128 .Lfunc_end173-.Ltmp2857        #   Call between .Ltmp2857 and .Lfunc_end173
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end98:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase72:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,"axG",@progbits,_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,comdat
	.weak	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m # -- Begin function _ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
	.p2align	4, 0x90
	.type	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,@function
_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m: # @_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
.Lfunc_begin99:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception99
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	(%rdi), %rax
	movq	(%rax,%rsi,8), %r12
	testq	%r12, %r12
	je	.LBB174_11
# %bb.1:                                # %.preheader
	movq	%rdx, %rbx
	movq	%rsi, %r14
	movq	%rdi, %r15
	jmp	.LBB174_2
	.p2align	4, 0x90
.LBB174_9:                              #   in Loop: Header=BB174_2 Depth=1
	xorl	%edx, %edx
	divq	%rbp
	movq	%r13, %r12
	cmpq	%r14, %rdx
	jne	.LBB174_11
.LBB174_2:                              # =>This Inner Loop Header: Depth=1
	movq	(%r12), %r13
	movq	(%rbx), %rax
	movq	8(%r13), %rcx
	movq	8(%rax), %rdi
	movq	8(%rcx), %rax
	cmpq	%rax, %rdi
	je	.LBB174_12
# %bb.3:                                #   in Loop: Header=BB174_2 Depth=1
	cmpb	$42, (%rdi)
	je	.LBB174_5
# %bb.4:                                # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_St6vectorIPFbP7_objectRPvESaISA_EEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS3_mRKNS_16_Hash_node_valueISD_Lb0EEE.exit
                                        #   in Loop: Header=BB174_2 Depth=1
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
	callq	strcmp@PLT
	testl	%eax, %eax
	je	.LBB174_12
.LBB174_5:                              # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_St6vectorIPFbP7_objectRPvESaISA_EEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS3_mRKNS_16_Hash_node_valueISD_Lb0EEE.exit.thread22
                                        #   in Loop: Header=BB174_2 Depth=1
	movq	(%r13), %rax
	testq	%rax, %rax
	je	.LBB174_11
# %bb.6:                                #   in Loop: Header=BB174_2 Depth=1
	movq	8(%r15), %rbp
	movq	8(%rax), %rax
	movq	8(%rax), %rax
	xorl	%r12d, %r12d
	cmpb	$42, (%rax)
	sete	%r12b
	addq	%rax, %r12
	movq	%r12, %rdi
	callq	strlen@PLT
.Ltmp2859:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r12, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2860:
# %bb.7:                                # %_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERKNSE_16_Hash_node_valueISC_Lb0EEE.exit
                                        #   in Loop: Header=BB174_2 Depth=1
	movq	%rax, %rcx
	orq	%rbp, %rcx
	shrq	$32, %rcx
	jne	.LBB174_9
# %bb.8:                                #   in Loop: Header=BB174_2 Depth=1
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%ebp
                                        # kill: def $edx killed $edx def $rdx
	movq	%r13, %r12
	cmpq	%r14, %rdx
	je	.LBB174_2
.LBB174_11:
	xorl	%r12d, %r12d
.LBB174_12:                             # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_St6vectorIPFbP7_objectRPvESaISA_EEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE9_M_equalsERS3_mRKNS_16_Hash_node_valueISD_Lb0EEE.exit.thread
	movq	%r12, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB174_13:
	.cfi_def_cfa_offset 64
.Ltmp2861:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end174:
	.size	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m, .Lfunc_end174-_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
	.cfi_endproc
	.section	.gcc_except_table._ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,"aG",@progbits,_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m,comdat
	.p2align	2, 0x0
GCC_except_table174:
.Lexception99:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase73-.Lttbaseref73
.Lttbaseref73:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end99-.Lcst_begin99
.Lcst_begin99:
	.uleb128 .Ltmp2859-.Lfunc_begin99       # >> Call Site 1 <<
	.uleb128 .Ltmp2860-.Ltmp2859            #   Call between .Ltmp2859 and .Ltmp2860
	.uleb128 .Ltmp2861-.Lfunc_begin99       #     jumps to .Ltmp2861
	.byte	1                               #   On action: 1
.Lcst_end99:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase73:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE,"axG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE,comdat
	.weak	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE # -- Begin function _ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE,@function
_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE: # @_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE
.Lfunc_begin100:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception100
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %r12
	movq	%rdi, %rbx
	movq	(%rdi), %rax
	movq	(%rcx), %rbp
	cmpq	%rdx, (%rax,%rsi,8)
	je	.LBB175_1
# %bb.11:
	testq	%rbp, %rbp
	je	.LBB175_18
# %bb.12:
	movq	8(%rbx), %rax
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	8(%rbp), %rax
	movq	8(%rax), %rax
	xorl	%r13d, %r13d
	cmpb	$42, (%rax)
	sete	%r13b
	addq	%rax, %r13
	movq	%r13, %rdi
	callq	strlen@PLT
.Ltmp2862:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r13, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2863:
# %bb.13:                               # %_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERKNSE_16_Hash_node_valueISC_Lb0EEE.exit20
	movq	%rax, %rcx
	movq	(%rsp), %rsi                    # 8-byte Reload
	orq	%rsi, %rcx
	shrq	$32, %rcx
	je	.LBB175_14
# %bb.15:
	xorl	%edx, %edx
	divq	%rsi
	cmpq	%r12, %rdx
	jne	.LBB175_17
	jmp	.LBB175_18
.LBB175_1:
	movq	%r15, %rcx
	testq	%rbp, %rbp
	je	.LBB175_8
# %bb.2:
	movq	8(%rbx), %rax
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	8(%rbp), %rax
	movq	8(%rax), %rax
	xorl	%r13d, %r13d
	cmpb	$42, (%rax)
	sete	%r13b
	addq	%rax, %r13
	movq	%r13, %rdi
	callq	strlen@PLT
.Ltmp2865:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r13, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2866:
# %bb.3:
	movq	%rax, %rcx
	movq	(%rsp), %rsi                    # 8-byte Reload
	orq	%rsi, %rcx
	shrq	$32, %rcx
	je	.LBB175_4
# %bb.5:
	xorl	%edx, %edx
	divq	%rsi
	cmpq	%r12, %rdx
	jne	.LBB175_7
	jmp	.LBB175_18
.LBB175_14:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%esi
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%r12, %rdx
	je	.LBB175_18
.LBB175_17:
	movq	(%rbx), %rax
	movq	%r15, (%rax,%rdx,8)
	jmp	.LBB175_18
.LBB175_4:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%esi
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%r12, %rdx
	je	.LBB175_18
.LBB175_7:
	movq	(%rbx), %rax
	movq	(%rax,%r12,8), %rcx
	movq	%rcx, (%rax,%rdx,8)
	movq	(%rbx), %rax
	movq	(%rax,%r12,8), %rcx
.LBB175_8:                              # %.thread25
	leaq	16(%rbx), %rdx
	cmpq	%rcx, %rdx
	jne	.LBB175_10
# %bb.9:
	movq	%rbp, (%rdx)
.LBB175_10:
	movq	$0, (%rax,%r12,8)
.LBB175_18:                             # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE22_M_remove_bucket_beginEmPNSE_10_Hash_nodeISC_Lb0EEEm.exit
	movq	(%r14), %r12
	movq	%r12, (%r15)
	movq	16(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB175_20
# %bb.19:
	movq	32(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB175_20:                             # %_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeISt4pairIKSt10type_indexSt6vectorIPFbP7_objectRPvESaISB_EEELb0EEEEE18_M_deallocate_nodeEPSF_.exit
	movl	$40, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	decq	24(%rbx)
	movq	%r12, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB175_21:
	.cfi_def_cfa_offset 64
.Ltmp2867:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB175_22:
.Ltmp2864:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end175:
	.size	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE, .Lfunc_end175-_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE,"aG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_St6vectorIPFbP7_objectRPvESaIS9_EEESaISC_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENSE_18_Mod_range_hashingENSE_20_Default_ranged_hashENSE_20_Prime_rehash_policyENSE_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNSE_15_Hash_node_baseEPNSE_10_Hash_nodeISC_Lb0EEE,comdat
	.p2align	2, 0x0
GCC_except_table175:
.Lexception100:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase74-.Lttbaseref74
.Lttbaseref74:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end100-.Lcst_begin100
.Lcst_begin100:
	.uleb128 .Ltmp2862-.Lfunc_begin100      # >> Call Site 1 <<
	.uleb128 .Ltmp2863-.Ltmp2862            #   Call between .Ltmp2862 and .Ltmp2863
	.uleb128 .Ltmp2864-.Lfunc_begin100      #     jumps to .Ltmp2864
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2865-.Lfunc_begin100      # >> Call Site 2 <<
	.uleb128 .Ltmp2866-.Ltmp2865            #   Call between .Ltmp2865 and .Ltmp2866
	.uleb128 .Ltmp2867-.Lfunc_begin100      #     jumps to .Ltmp2867
	.byte	1                               #   On action: 1
.Lcst_end100:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase74:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,"axG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,comdat
	.hidden	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_ # -- Begin function _ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_
	.weak	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,@function
_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_: # @_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_
.Lfunc_begin101:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception101
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r12
	movq	%rdi, %rbx
	cmpq	$0, 24(%rdi)
	je	.LBB176_4
# %bb.1:
	movq	(%r12), %rax
	movq	8(%rax), %rax
	xorl	%r14d, %r14d
	cmpb	$42, (%rax)
	sete	%r14b
	addq	%rax, %r14
	movq	%r14, %rdi
	callq	strlen@PLT
.Ltmp2868:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r14, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2869:
# %bb.2:                                # %_ZNKSt8__detail15_Hash_code_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_hash_codeERS3_.exit
	movq	%rax, %rcx
	movq	8(%rbx), %rsi
	orq	%rsi, %rax
	shrq	$32, %rax
	je	.LBB176_10
# %bb.3:
	movq	%rcx, %rax
	xorl	%edx, %edx
	divq	%rsi
	movq	%rdx, %r13
	jmp	.LBB176_11
.LBB176_4:
	movq	16(%rbx), %r14
	testq	%r14, %r14
	je	.LBB176_14
# %bb.5:                                # %.preheader.i
	leaq	16(%rbx), %r15
	movq	(%r12), %rax
	movq	8(%rax), %r12
	movq	8(%r14), %rax
	movq	8(%rax), %rbp
	cmpq	%rbp, %r12
	je	.LBB176_20
# %bb.6:                                # %.lr.ph
	cmpb	$42, (%r12)
	jne	.LBB176_15
# %bb.7:                                # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueIS8_Lb0EEE.exit.thread16.i.us.preheader
	xorl	%r13d, %r13d
	.p2align	4, 0x90
.LBB176_8:                              # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueIS8_Lb0EEE.exit.thread16.i.us
                                        # =>This Inner Loop Header: Depth=1
	movq	%r14, %r15
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB176_25
# %bb.9:                                #   in Loop: Header=BB176_8 Depth=1
	movq	8(%r14), %rax
	movq	8(%rax), %rbp
	cmpq	%rbp, %r12
	jne	.LBB176_8
	jmp	.LBB176_20
.LBB176_10:
	movl	%ecx, %eax
	xorl	%edx, %edx
	divl	%esi
	movl	%edx, %r13d
.LBB176_11:
	movq	%rbx, %rdi
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeEmRS2_m
	testq	%rax, %rax
	je	.LBB176_14
# %bb.12:
	movq	%rax, %r15
	movq	(%rax), %r14
	jmp	.LBB176_24
.LBB176_14:
	xorl	%r13d, %r13d
	jmp	.LBB176_25
.LBB176_15:                             # %.lr.ph.split
	xorl	%esi, %esi
	cmpb	$42, (%rbp)
	sete	%sil
	addq	%rbp, %rsi
	movq	%r12, %rdi
	callq	strcmp@PLT
	testl	%eax, %eax
	je	.LBB176_20
# %bb.16:
	xorl	%r13d, %r13d
	.p2align	4, 0x90
.LBB176_17:                             # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueIS8_Lb0EEE.exit.thread16.i
                                        # =>This Inner Loop Header: Depth=1
	movq	%r14, %r15
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB176_25
# %bb.18:                               #   in Loop: Header=BB176_17 Depth=1
	movq	8(%r14), %rax
	movq	8(%rax), %rbp
	cmpq	%rbp, %r12
	je	.LBB176_20
# %bb.19:                               # %_ZNKSt8__detail15_Hashtable_baseISt10type_indexSt4pairIKS1_PN8pybind116detail9type_infoEENS_10_Select1stESt8equal_toIS1_ESt4hashIS1_ENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb0ELb1EEEE13_M_key_equalsERS3_RKNS_16_Hash_node_valueIS8_Lb0EEE.exit.i
                                        #   in Loop: Header=BB176_17 Depth=1
	xorl	%esi, %esi
	cmpb	$42, (%rbp)
	sete	%sil
	addq	%rbp, %rsi
	movq	%r12, %rdi
	callq	strcmp@PLT
	testl	%eax, %eax
	jne	.LBB176_17
.LBB176_20:                             # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeERS2_.exit
	movq	8(%rbx), %r13
	xorl	%r12d, %r12d
	cmpb	$42, (%rbp)
	sete	%r12b
	addq	%rbp, %r12
	movq	%r12, %rdi
	callq	strlen@PLT
.Ltmp2871:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r12, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2872:
# %bb.21:                               # %_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERKNS9_16_Hash_node_valueIS7_Lb0EEE.exit
	movq	%rax, %rcx
	orq	%r13, %rcx
	shrq	$32, %rcx
	je	.LBB176_23
# %bb.22:
	xorl	%edx, %edx
	divq	%r13
	movq	%rdx, %r13
	jmp	.LBB176_24
.LBB176_23:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r13d
	movl	%edx, %r13d
.LBB176_24:
	movq	%rbx, %rdi
	movq	%r13, %rsi
	movq	%r15, %rdx
	movq	%r14, %rcx
	callq	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE
	movl	$1, %r13d
.LBB176_25:                             # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE19_M_find_before_nodeERS2_.exit.thread
	movq	%r13, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB176_26:
	.cfi_def_cfa_offset 64
.Ltmp2873:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB176_27:
.Ltmp2870:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end176:
	.size	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_, .Lfunc_end176-_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,"aG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseESt17integral_constantIbLb1EERS2_,comdat
	.p2align	2, 0x0
GCC_except_table176:
.Lexception101:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase75-.Lttbaseref75
.Lttbaseref75:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end101-.Lcst_begin101
.Lcst_begin101:
	.uleb128 .Ltmp2868-.Lfunc_begin101      # >> Call Site 1 <<
	.uleb128 .Ltmp2869-.Ltmp2868            #   Call between .Ltmp2868 and .Ltmp2869
	.uleb128 .Ltmp2870-.Lfunc_begin101      #     jumps to .Ltmp2870
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2869-.Lfunc_begin101      # >> Call Site 2 <<
	.uleb128 .Ltmp2871-.Ltmp2869            #   Call between .Ltmp2869 and .Ltmp2871
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2871-.Lfunc_begin101      # >> Call Site 3 <<
	.uleb128 .Ltmp2872-.Ltmp2871            #   Call between .Ltmp2871 and .Ltmp2872
	.uleb128 .Ltmp2873-.Lfunc_begin101      #     jumps to .Ltmp2873
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2872-.Lfunc_begin101      # >> Call Site 4 <<
	.uleb128 .Lfunc_end176-.Ltmp2872        #   Call between .Ltmp2872 and .Lfunc_end176
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end101:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase75:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE,"axG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE,comdat
	.hidden	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE # -- Begin function _ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE
	.weak	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE
	.p2align	4, 0x90
	.type	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE,@function
_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE: # @_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE
.Lfunc_begin102:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception102
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %r12
	movq	%rdi, %rbx
	movq	(%rdi), %rax
	movq	(%rcx), %rbp
	cmpq	%rdx, (%rax,%rsi,8)
	je	.LBB177_1
# %bb.11:
	testq	%rbp, %rbp
	je	.LBB177_18
# %bb.12:
	movq	8(%rbx), %rax
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	8(%rbp), %rax
	movq	8(%rax), %rax
	xorl	%r13d, %r13d
	cmpb	$42, (%rax)
	sete	%r13b
	addq	%rax, %r13
	movq	%r13, %rdi
	callq	strlen@PLT
.Ltmp2874:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r13, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2875:
# %bb.13:                               # %_ZNKSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE15_M_bucket_indexERKNS9_16_Hash_node_valueIS7_Lb0EEE.exit20
	movq	%rax, %rcx
	movq	(%rsp), %rsi                    # 8-byte Reload
	orq	%rsi, %rcx
	shrq	$32, %rcx
	je	.LBB177_14
# %bb.15:
	xorl	%edx, %edx
	divq	%rsi
	cmpq	%r12, %rdx
	jne	.LBB177_17
	jmp	.LBB177_18
.LBB177_1:
	movq	%r15, %rcx
	testq	%rbp, %rbp
	je	.LBB177_8
# %bb.2:
	movq	8(%rbx), %rax
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	8(%rbp), %rax
	movq	8(%rax), %rax
	xorl	%r13d, %r13d
	cmpb	$42, (%rax)
	sete	%r13b
	addq	%rax, %r13
	movq	%r13, %rdi
	callq	strlen@PLT
.Ltmp2877:
	movl	$3339675911, %edx               # imm = 0xC70F6907
	movq	%r13, %rdi
	movq	%rax, %rsi
	callq	_ZSt11_Hash_bytesPKvmm@PLT
.Ltmp2878:
# %bb.3:
	movq	%rax, %rcx
	movq	(%rsp), %rsi                    # 8-byte Reload
	orq	%rsi, %rcx
	shrq	$32, %rcx
	je	.LBB177_4
# %bb.5:
	xorl	%edx, %edx
	divq	%rsi
	cmpq	%r12, %rdx
	jne	.LBB177_7
	jmp	.LBB177_18
.LBB177_14:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%esi
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%r12, %rdx
	je	.LBB177_18
.LBB177_17:
	movq	(%rbx), %rax
	movq	%r15, (%rax,%rdx,8)
	jmp	.LBB177_18
.LBB177_4:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%esi
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%r12, %rdx
	je	.LBB177_18
.LBB177_7:
	movq	(%rbx), %rax
	movq	(%rax,%r12,8), %rcx
	movq	%rcx, (%rax,%rdx,8)
	movq	(%rbx), %rax
	movq	(%rax,%r12,8), %rcx
.LBB177_8:                              # %.thread25
	leaq	16(%rbx), %rdx
	cmpq	%rcx, %rdx
	jne	.LBB177_10
# %bb.9:
	movq	%rbp, (%rdx)
.LBB177_10:
	movq	$0, (%rax,%r12,8)
.LBB177_18:                             # %_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE22_M_remove_bucket_beginEmPNS9_10_Hash_nodeIS7_Lb0EEEm.exit
	movq	(%r14), %r12
	movq	%r12, (%r15)
	movl	$24, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	decq	24(%rbx)
	movq	%r12, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB177_19:
	.cfi_def_cfa_offset 64
.Ltmp2879:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB177_20:
.Ltmp2876:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end177:
	.size	_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE, .Lfunc_end177-_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE
	.cfi_endproc
	.section	.gcc_except_table._ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE,"aG",@progbits,_ZNSt10_HashtableISt10type_indexSt4pairIKS0_PN8pybind116detail9type_infoEESaIS7_ENSt8__detail10_Select1stESt8equal_toIS0_ESt4hashIS0_ENS9_18_Mod_range_hashingENS9_20_Default_ranged_hashENS9_20_Prime_rehash_policyENS9_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_eraseEmPNS9_15_Hash_node_baseEPNS9_10_Hash_nodeIS7_Lb0EEE,comdat
	.p2align	2, 0x0
GCC_except_table177:
.Lexception102:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase76-.Lttbaseref76
.Lttbaseref76:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end102-.Lcst_begin102
.Lcst_begin102:
	.uleb128 .Ltmp2874-.Lfunc_begin102      # >> Call Site 1 <<
	.uleb128 .Ltmp2875-.Ltmp2874            #   Call between .Ltmp2874 and .Ltmp2875
	.uleb128 .Ltmp2876-.Lfunc_begin102      #     jumps to .Ltmp2876
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2877-.Lfunc_begin102      # >> Call Site 2 <<
	.uleb128 .Ltmp2878-.Ltmp2877            #   Call between .Ltmp2877 and .Ltmp2878
	.uleb128 .Ltmp2879-.Lfunc_begin102      #     jumps to .Ltmp2879
	.byte	1                               #   On action: 1
.Lcst_end102:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase76:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail9raise_errEP7_objectPKc,"axG",@progbits,_ZN8pybind116detail9raise_errEP7_objectPKc,comdat
	.hidden	_ZN8pybind116detail9raise_errEP7_objectPKc # -- Begin function _ZN8pybind116detail9raise_errEP7_objectPKc
	.weak	_ZN8pybind116detail9raise_errEP7_objectPKc
	.p2align	4, 0x90
	.type	_ZN8pybind116detail9raise_errEP7_objectPKc,@function
_ZN8pybind116detail9raise_errEP7_objectPKc: # @_ZN8pybind116detail9raise_errEP7_objectPKc
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %r15
	callq	PyErr_Occurred@PLT
	movq	%rax, %rbx
	movq	%r15, %rdi
	movq	%r14, %rsi
	testq	%rax, %rax
	je	.LBB178_2
# %bb.1:
	callq	_ZN8pybind1110raise_fromEP7_objectPKc
	jmp	.LBB178_3
.LBB178_2:
	callq	PyErr_SetString@PLT
.LBB178_3:
	testq	%rbx, %rbx
	setne	%al
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end178:
	.size	_ZN8pybind116detail9raise_errEP7_objectPKc, .Lfunc_end178-_ZN8pybind116detail9raise_errEP7_objectPKc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
.Lfunc_begin103:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception103
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$24, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	8(%rdi), %rax
	movq	%rax, 8(%rsp)
	testq	%rax, %rax
	je	.LBB179_1
# %bb.2:                                # %_ZNKSt16nested_exception10nested_ptrEv.exit
	movq	%rsi, %rbx
	leaq	8(%rsp), %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv@PLT
	movq	8(%rsp), %rax
	testq	%rax, %rax
	setne	%cl
	cmpq	(%rbx), %rax
	setne	%bl
	andb	%cl, %bl
	cmpb	$1, %bl
	jne	.LBB179_7
# %bb.3:                                # %_ZNSt15__exception_ptr13exception_ptrC2ERKS0_.exit
	movq	%rax, 16(%rsp)
	leaq	16(%rsp), %r14
	movq	%r14, %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv@PLT
.Ltmp2880:
	movq	%r14, %rdi
	callq	_ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE
.Ltmp2881:
# %bb.4:
	cmpq	$0, 16(%rsp)
	je	.LBB179_6
# %bb.5:
	leaq	16(%rsp), %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
.LBB179_6:                              # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit6thread-pre-split
	movq	8(%rsp), %rax
.LBB179_7:                              # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit6
	testq	%rax, %rax
	je	.LBB179_9
# %bb.8:
	leaq	8(%rsp), %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
	jmp	.LBB179_9
.LBB179_1:
	xorl	%ebx, %ebx
.LBB179_9:                              # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit14
	movl	%ebx, %eax
	addq	$24, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB179_10:
	.cfi_def_cfa_offset 48
.Ltmp2882:
	movq	%rax, %rbx
	cmpq	$0, 16(%rsp)
	jne	.LBB179_11
# %bb.12:                               # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit8
	cmpq	$0, 8(%rsp)
	jne	.LBB179_13
.LBB179_14:                             # %_ZNSt15__exception_ptr13exception_ptrD2Ev.exit10
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB179_11:
	leaq	16(%rsp), %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
	cmpq	$0, 8(%rsp)
	je	.LBB179_14
.LBB179_13:
	leaq	8(%rsp), %rdi
	callq	_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end179:
	.size	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end179-_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE,"aG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE,comdat
	.p2align	2, 0x0
GCC_except_table179:
.Lexception103:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end103-.Lcst_begin103
.Lcst_begin103:
	.uleb128 .Ltmp2880-.Lfunc_begin103      # >> Call Site 1 <<
	.uleb128 .Ltmp2881-.Ltmp2880            #   Call between .Ltmp2880 and .Ltmp2881
	.uleb128 .Ltmp2882-.Lfunc_begin103      #     jumps to .Ltmp2882
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2881-.Lfunc_begin103      # >> Call Site 2 <<
	.uleb128 .Lfunc_end179-.Ltmp2881        #   Call between .Ltmp2881 and .Lfunc_end179
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end103:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	_ZTISt9exception@GOTPCREL(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB180_1
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	jmp	.LBB180_3
.LBB180_1:
                                        # implicit-def: $al
.LBB180_3:
	testq	%r14, %r14
	setne	%cl
	andb	%al, %cl
	movl	%ecx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end180:
	.size	_ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end180-_ZN8pybind116detail23handle_nested_exceptionISt9exceptionTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	_ZTISt14overflow_error@GOTPCREL(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB181_1
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	jmp	.LBB181_3
.LBB181_1:
                                        # implicit-def: $al
.LBB181_3:
	testq	%r14, %r14
	setne	%cl
	andb	%al, %cl
	movl	%ecx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end181:
	.size	_ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end181-_ZN8pybind116detail23handle_nested_exceptionISt14overflow_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	_ZTISt11range_error@GOTPCREL(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB182_1
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	jmp	.LBB182_3
.LBB182_1:
                                        # implicit-def: $al
.LBB182_3:
	testq	%r14, %r14
	setne	%cl
	andb	%al, %cl
	movl	%ecx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end182:
	.size	_ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end182-_ZN8pybind116detail23handle_nested_exceptionISt11range_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	_ZTISt12out_of_range@GOTPCREL(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB183_1
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	jmp	.LBB183_3
.LBB183_1:
                                        # implicit-def: $al
.LBB183_3:
	testq	%r14, %r14
	setne	%cl
	andb	%al, %cl
	movl	%ecx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end183:
	.size	_ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end183-_ZN8pybind116detail23handle_nested_exceptionISt12out_of_rangeTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	_ZTISt12length_error@GOTPCREL(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB184_1
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	jmp	.LBB184_3
.LBB184_1:
                                        # implicit-def: $al
.LBB184_3:
	testq	%r14, %r14
	setne	%cl
	andb	%al, %cl
	movl	%ecx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end184:
	.size	_ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end184-_ZN8pybind116detail23handle_nested_exceptionISt12length_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	_ZTISt16invalid_argument@GOTPCREL(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB185_1
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	jmp	.LBB185_3
.LBB185_1:
                                        # implicit-def: $al
.LBB185_3:
	testq	%r14, %r14
	setne	%cl
	andb	%al, %cl
	movl	%ecx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end185:
	.size	_ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end185-_ZN8pybind116detail23handle_nested_exceptionISt16invalid_argumentTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	_ZTISt12domain_error@GOTPCREL(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB186_1
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	jmp	.LBB186_3
.LBB186_1:
                                        # implicit-def: $al
.LBB186_3:
	testq	%r14, %r14
	setne	%cl
	andb	%al, %cl
	movl	%ecx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end186:
	.size	_ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end186-_ZN8pybind116detail23handle_nested_exceptionISt12domain_errorTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	_ZTISt9bad_alloc@GOTPCREL(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB187_1
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	jmp	.LBB187_3
.LBB187_1:
                                        # implicit-def: $al
.LBB187_3:
	testq	%r14, %r14
	setne	%cl
	andb	%al, %cl
	movl	%ecx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end187:
	.size	_ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end187-_ZN8pybind116detail23handle_nested_exceptionISt9bad_allocTnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,"axG",@progbits,_ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,comdat
	.hidden	_ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE # -- Begin function _ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.weak	_ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE,@function
_ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE: # @_ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	movq	_ZTISt16nested_exception@GOTPCREL(%rip), %rdx
	movq	$-2, %rcx
	callq	__dynamic_cast@PLT
	movq	%rax, %r14
	testq	%rax, %rax
	je	.LBB188_1
# %bb.2:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8pybind116detail23handle_nested_exceptionISt16nested_exceptionTnNSt9enable_ifIXsr3std7is_sameIS2_NSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS5_RKNSt15__exception_ptr13exception_ptrE
	jmp	.LBB188_3
.LBB188_1:
                                        # implicit-def: $al
.LBB188_3:
	testq	%r14, %r14
	setne	%cl
	andb	%al, %cl
	movl	%ecx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end188:
	.size	_ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE, .Lfunc_end188-_ZN8pybind116detail23handle_nested_exceptionINS_17error_already_setETnNSt9enable_ifIXntsr3std7is_sameISt16nested_exceptionNSt12remove_cvrefIT_E4typeEEE5valueEiE4typeELi0EEEbRKS6_RKNSt15__exception_ptr13exception_ptrE
	.cfi_endproc
                                        # -- End function
	.section	.text.pybind11_object_new,"axG",@progbits,pybind11_object_new,comdat
	.hidden	pybind11_object_new             # -- Begin function pybind11_object_new
	.weak	pybind11_object_new
	.p2align	4, 0x90
	.type	pybind11_object_new,@function
pybind11_object_new:                    # @pybind11_object_new
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	xorl	%esi, %esi
	callq	*304(%rdi)
	movq	%rax, %rbx
	movq	%rax, %rdi
	callq	_ZN8pybind116detail8instance15allocate_layoutEv
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end189:
	.size	pybind11_object_new, .Lfunc_end189-pybind11_object_new
	.cfi_endproc
                                        # -- End function
	.section	.text.pybind11_object_init,"axG",@progbits,pybind11_object_init,comdat
	.hidden	pybind11_object_init            # -- Begin function pybind11_object_init
	.weak	pybind11_object_init
	.p2align	4, 0x90
	.type	pybind11_object_init,@function
pybind11_object_init:                   # @pybind11_object_init
.Lfunc_begin104:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception104
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$72, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	8(%rdi), %rax
	movq	24(%rax), %r14
	leaq	24(%rsp), %rbx
	movq	%rbx, 8(%rsp)
	testq	%r14, %r14
	je	.LBB190_30
# %bb.1:
	movq	%r14, %rdi
	callq	strlen@PLT
	movq	%rax, %r15
	movq	%rbx, %r12
	cmpq	$16, %rax
	jb	.LBB190_5
# %bb.2:
	testq	%r15, %r15
	js	.LBB190_31
# %bb.3:
	movq	%r15, %rdi
	incq	%rdi
	js	.LBB190_32
# %bb.4:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i.i
	callq	_Znwm@PLT
	movq	%rax, %r12
	movq	%rax, 8(%rsp)
	movq	%r15, 24(%rsp)
.LBB190_5:                              # %._crit_edge.i.i.i
	testq	%r15, %r15
	je	.LBB190_9
# %bb.6:                                # %._crit_edge.i.i.i
	cmpq	$1, %r15
	jne	.LBB190_8
# %bb.7:
	movzbl	(%r14), %eax
	movb	%al, (%r12)
	jmp	.LBB190_9
.LBB190_8:
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB190_9:                              # %_ZN8pybind116detail27get_fully_qualified_tp_nameB5cxx11EP11_typeobject.exit
	movq	%r15, 16(%rsp)
	movb	$0, (%r12,%r15)
	movq	16(%rsp), %rsi
	movabsq	$9223372036854775783, %rax      # imm = 0x7FFFFFFFFFFFFFE7
	cmpq	%rax, %rsi
	jge	.LBB190_10
# %bb.12:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	leaq	25(%rsi), %r14
	movq	8(%rsp), %rax
	movl	$15, %ecx
	cmpq	%rbx, %rax
	je	.LBB190_14
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	movq	24(%rsp), %rcx
.LBB190_14:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
	cmpq	%rcx, %r14
	jbe	.LBB190_15
# %bb.16:
.Ltmp2883:
	leaq	.L.str.179(%rip), %rcx
	leaq	8(%rsp), %rdi
	movl	$25, %r8d
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm@PLT
.Ltmp2884:
	jmp	.LBB190_17
.LBB190_15:
	movups	.L.str.179+9(%rip), %xmm0
	movups	%xmm0, 9(%rax,%rsi)
	movups	.L.str.179(%rip), %xmm0
	movups	%xmm0, (%rax,%rsi)
.LBB190_17:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
	movq	%r14, 16(%rsp)
	movq	8(%rsp), %rax
	movb	$0, (%rax,%r14)
	leaq	56(%rsp), %r14
	movq	%r14, 40(%rsp)
	movq	8(%rsp), %rsi
	cmpq	%rbx, %rsi
	je	.LBB190_18
# %bb.19:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	%rsi, 40(%rsp)
	movq	16(%rsp), %r15
	movq	24(%rsp), %rax
	movq	%rax, 56(%rsp)
	jmp	.LBB190_20
.LBB190_18:
	movq	16(%rsp), %r15
	leaq	1(%r15), %rdx
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	memcpy@PLT
	movq	%r14, %rsi
.LBB190_20:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%r15, 48(%rsp)
	movq	PyExc_TypeError@GOTPCREL(%rip), %rax
	movq	(%rax), %rdi
.Ltmp2885:
	callq	PyErr_SetString@PLT
.Ltmp2886:
# %bb.21:                               # %_ZN8pybind119set_errorERKNS_6handleEPKc.exit
	movq	40(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB190_23
# %bb.22:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i8
	movq	56(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB190_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit10
	movl	$-1, %eax
	addq	$72, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB190_32:                             # %.noexc11.i.i
	.cfi_def_cfa_offset 112
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB190_30:                             # %.noexc.i
	leaq	.L.str.34(%rip), %rdi
	callq	_ZSt19__throw_logic_errorPKc@PLT
.LBB190_10:
.Ltmp2888:
	leaq	.L.str.40(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.Ltmp2889:
# %bb.11:                               # %.noexc
.LBB190_31:                             # %.noexc.i.i
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB190_26:
.Ltmp2887:
	movq	%rax, %r15
	movq	40(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB190_29
# %bb.27:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i14
	movq	56(%rsp), %rsi
	jmp	.LBB190_28
.LBB190_24:
.Ltmp2890:
	movq	%rax, %r15
	movq	8(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB190_29
# %bb.25:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i11
	movq	24(%rsp), %rsi
.LBB190_28:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit16
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB190_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit16
	movq	%r15, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end190:
	.size	pybind11_object_init, .Lfunc_end190-pybind11_object_init
	.cfi_endproc
	.section	.gcc_except_table.pybind11_object_init,"aG",@progbits,pybind11_object_init,comdat
	.p2align	2, 0x0
GCC_except_table190:
.Lexception104:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end104-.Lcst_begin104
.Lcst_begin104:
	.uleb128 .Lfunc_begin104-.Lfunc_begin104 # >> Call Site 1 <<
	.uleb128 .Ltmp2883-.Lfunc_begin104      #   Call between .Lfunc_begin104 and .Ltmp2883
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2883-.Lfunc_begin104      # >> Call Site 2 <<
	.uleb128 .Ltmp2884-.Ltmp2883            #   Call between .Ltmp2883 and .Ltmp2884
	.uleb128 .Ltmp2890-.Lfunc_begin104      #     jumps to .Ltmp2890
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2884-.Lfunc_begin104      # >> Call Site 3 <<
	.uleb128 .Ltmp2885-.Ltmp2884            #   Call between .Ltmp2884 and .Ltmp2885
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2885-.Lfunc_begin104      # >> Call Site 4 <<
	.uleb128 .Ltmp2886-.Ltmp2885            #   Call between .Ltmp2885 and .Ltmp2886
	.uleb128 .Ltmp2887-.Lfunc_begin104      #     jumps to .Ltmp2887
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2886-.Lfunc_begin104      # >> Call Site 5 <<
	.uleb128 .Ltmp2888-.Ltmp2886            #   Call between .Ltmp2886 and .Ltmp2888
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2888-.Lfunc_begin104      # >> Call Site 6 <<
	.uleb128 .Ltmp2889-.Ltmp2888            #   Call between .Ltmp2888 and .Ltmp2889
	.uleb128 .Ltmp2890-.Lfunc_begin104      #     jumps to .Ltmp2890
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2889-.Lfunc_begin104      # >> Call Site 7 <<
	.uleb128 .Lfunc_end190-.Ltmp2889        #   Call between .Ltmp2889 and .Lfunc_end190
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end104:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text.pybind11_object_dealloc,"axG",@progbits,pybind11_object_dealloc,comdat
	.hidden	pybind11_object_dealloc         # -- Begin function pybind11_object_dealloc
	.weak	pybind11_object_dealloc
	.p2align	4, 0x90
	.type	pybind11_object_dealloc,@function
pybind11_object_dealloc:                # @pybind11_object_dealloc
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	movq	8(%rdi), %rbx
	testb	$64, 169(%rbx)
	je	.LBB191_2
# %bb.1:
	movq	%r14, %rdi
	callq	PyObject_GC_UnTrack@PLT
.LBB191_2:
	movq	%r14, %rdi
	callq	_ZN8pybind116detail14clear_instanceEP7_object
	movq	%r14, %rdi
	callq	*320(%rbx)
	movq	(%rbx), %rax
	testl	%eax, %eax
	js	.LBB191_4
# %bb.3:
	decq	%rax
	movq	%rax, (%rbx)
	je	.LBB191_5
.LBB191_4:                              # %_ZL9Py_DECREFP7_object.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB191_5:
	.cfi_def_cfa_offset 32
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	jmp	_Py_Dealloc@PLT                 # TAILCALL
.Lfunc_end191:
	.size	pybind11_object_dealloc, .Lfunc_end191-pybind11_object_dealloc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail8instance15allocate_layoutEv,"axG",@progbits,_ZN8pybind116detail8instance15allocate_layoutEv,comdat
	.hidden	_ZN8pybind116detail8instance15allocate_layoutEv # -- Begin function _ZN8pybind116detail8instance15allocate_layoutEv
	.weak	_ZN8pybind116detail8instance15allocate_layoutEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail8instance15allocate_layoutEv,@function
_ZN8pybind116detail8instance15allocate_layoutEv: # @_ZN8pybind116detail8instance15allocate_layoutEv
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	movq	8(%rdi), %rdi
	callq	_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
	movq	16(%rax), %rdx
	movq	24(%rax), %rcx
	subq	%rdx, %rcx
	sarq	$3, %rcx
	cmpq	$1, %rcx
	je	.LBB192_3
# %bb.1:
	testq	%rcx, %rcx
	jne	.LBB192_5
# %bb.2:
	leaq	.L.str.178(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.LBB192_3:
	movq	(%rdx), %rdx
	cmpq	$2, 32(%rdx)
	jbe	.LBB192_4
.LBB192_5:                              # %select.unfold
	andb	$-3, 48(%rbx)
	movq	16(%rax), %rdx
	movq	24(%rax), %rax
	xorl	%r14d, %r14d
	cmpq	%rax, %rdx
	je	.LBB192_7
	.p2align	4, 0x90
.LBB192_9:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdx), %rsi
	movq	32(%rsi), %rsi
	addq	%rsi, %r14
	incq	%r14
	addq	$8, %rdx
	cmpq	%rax, %rdx
	jne	.LBB192_9
.LBB192_7:                              # %._crit_edge
	decq	%rcx
	shrq	$3, %rcx
	leaq	(%rcx,%r14), %rdi
	incq	%rdi
	movl	$8, %esi
	callq	PyMem_Calloc@PLT
	movq	%rax, 16(%rbx)
	testq	%rax, %rax
	je	.LBB192_8
# %bb.10:
	leaq	48(%rbx), %rcx
	leaq	(%rax,%r14,8), %rax
	movq	%rax, 24(%rbx)
	movzbl	48(%rbx), %eax
	jmp	.LBB192_11
.LBB192_4:
	leaq	48(%rbx), %rcx
	movzbl	48(%rbx), %eax
	movq	$0, 16(%rbx)
	andb	$-15, %al
	orb	$2, %al
.LBB192_11:
	orb	$1, %al
	movb	%al, (%rcx)
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB192_8:
	.cfi_def_cfa_offset 32
	movl	$8, %edi
	callq	__cxa_allocate_exception@PLT
	movq	_ZTVSt9bad_alloc@GOTPCREL(%rip), %rcx
	addq	$16, %rcx
	movq	%rcx, (%rax)
	movq	_ZTISt9bad_alloc@GOTPCREL(%rip), %rsi
	movq	_ZNSt9bad_allocD1Ev@GOTPCREL(%rip), %rdx
	movq	%rax, %rdi
	callq	__cxa_throw@PLT
.Lfunc_end192:
	.size	_ZN8pybind116detail8instance15allocate_layoutEv, .Lfunc_end192-_ZN8pybind116detail8instance15allocate_layoutEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail14clear_instanceEP7_object,"axG",@progbits,_ZN8pybind116detail14clear_instanceEP7_object,comdat
	.hidden	_ZN8pybind116detail14clear_instanceEP7_object # -- Begin function _ZN8pybind116detail14clear_instanceEP7_object
	.weak	_ZN8pybind116detail14clear_instanceEP7_object
	.p2align	4, 0x90
	.type	_ZN8pybind116detail14clear_instanceEP7_object,@function
_ZN8pybind116detail14clear_instanceEP7_object: # @_ZN8pybind116detail14clear_instanceEP7_object
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$88, %rsp
	.cfi_def_cfa_offset 144
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movq	8(%rdi), %rdi
	callq	_ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
	leaq	16(%rax), %rcx
	movq	%rbx, 8(%rsp)
	movq	%rcx, 16(%rsp)
	movq	$0, 32(%rsp)
	movq	16(%rax), %rcx
	cmpq	24(%rax), %rcx
	je	.LBB193_41
# %bb.1:
	movq	(%rcx), %r13
	leaq	16(%rbx), %rcx
	testb	$2, 48(%rbx)
	jne	.LBB193_3
# %bb.2:
	movq	(%rcx), %rcx
.LBB193_3:                              # %_ZN8pybind116detail18values_and_holders5beginEv.exit
	movq	%rbx, 24(%rsp)
	movq	%r13, 40(%rsp)
	movq	%rcx, 48(%rsp)
	movq	24(%rax), %r15
	movq	16(%rax), %rax
	subq	%rax, %r15
	je	.LBB193_31
# %bb.4:                                # %.lr.ph
	leaq	24(%rsp), %r14
	sarq	$3, %r15
	xorl	%eax, %eax
	jmp	.LBB193_5
	.p2align	4, 0x90
.LBB193_29:                             #   in Loop: Header=BB193_5 Depth=1
	movq	8(%rdx,%rcx,8), %r13
	movq	%r13, 40(%rsp)
	cmpq	%r15, %rax
	je	.LBB193_31
.LBB193_5:                              # =>This Inner Loop Header: Depth=1
	movq	24(%rsp), %rdx
	movq	48(%rsp), %rcx
	movq	(%rcx), %rbp
	movzbl	48(%rdx), %ecx
	testq	%rbp, %rbp
	je	.LBB193_19
# %bb.6:                                #   in Loop: Header=BB193_5 Depth=1
	testb	$2, %cl
	jne	.LBB193_7
# %bb.8:                                #   in Loop: Header=BB193_5 Depth=1
	movq	24(%rdx), %rcx
	movzbl	(%rcx,%rax), %ecx
	andb	$2, %cl
	testb	%cl, %cl
	jne	.LBB193_10
	jmp	.LBB193_13
	.p2align	4, 0x90
.LBB193_19:                             #   in Loop: Header=BB193_5 Depth=1
	testb	$2, %cl
	jne	.LBB193_20
# %bb.21:                               #   in Loop: Header=BB193_5 Depth=1
	movq	24(%rdx), %rcx
	movzbl	(%rcx,%rax), %ecx
	andb	$1, %cl
	testb	%cl, %cl
	jne	.LBB193_23
	jmp	.LBB193_24
	.p2align	4, 0x90
.LBB193_7:                              #   in Loop: Header=BB193_5 Depth=1
	andb	$8, %cl
	testb	%cl, %cl
	je	.LBB193_13
.LBB193_10:                             #   in Loop: Header=BB193_5 Depth=1
	movq	%rbp, 64(%rsp)
	movq	%rbx, 56(%rsp)
	leaq	64(%rsp), %rax
	movq	%rax, 72(%rsp)
	leaq	56(%rsp), %rax
	movq	%rax, 80(%rsp)
	callq	_ZN8pybind116detail13get_internalsEv
	leaq	112(%rax), %rsi
	leaq	72(%rsp), %rdi
	callq	_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_
	movl	%eax, %r12d
	testb	$2, 161(%r13)
	jne	.LBB193_12
# %bb.11:                               #   in Loop: Header=BB193_5 Depth=1
	movq	%rbp, %rdi
	movq	%r13, %rsi
	movq	%rbx, %rdx
	leaq	_ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE(%rip), %rcx
	callq	_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E
.LBB193_12:                             # %_ZN8pybind116detail19deregister_instanceEPNS0_8instanceEPvPKNS0_9type_infoE.exit
                                        #   in Loop: Header=BB193_5 Depth=1
	testb	%r12b, %r12b
	je	.LBB193_42
.LBB193_13:                             #   in Loop: Header=BB193_5 Depth=1
	testb	$1, 48(%rbx)
	jne	.LBB193_18
# %bb.14:                               #   in Loop: Header=BB193_5 Depth=1
	movq	24(%rsp), %rcx
	movzbl	48(%rcx), %eax
	testb	$2, %al
	jne	.LBB193_15
# %bb.16:                               #   in Loop: Header=BB193_5 Depth=1
	movq	24(%rcx), %rax
	movq	32(%rsp), %rcx
	movzbl	(%rax,%rcx), %eax
	andb	$1, %al
	testb	%al, %al
	jne	.LBB193_18
	jmp	.LBB193_24
.LBB193_20:                             #   in Loop: Header=BB193_5 Depth=1
	andb	$4, %cl
	testb	%cl, %cl
	jne	.LBB193_23
	jmp	.LBB193_24
.LBB193_15:                             #   in Loop: Header=BB193_5 Depth=1
	andb	$4, %al
	testb	%al, %al
	je	.LBB193_24
	.p2align	4, 0x90
.LBB193_18:                             #   in Loop: Header=BB193_5 Depth=1
	movq	40(%rsp), %r13
.LBB193_23:                             # %.sink.split
                                        #   in Loop: Header=BB193_5 Depth=1
	movq	%r14, %rdi
	callq	*56(%r13)
.LBB193_24:                             #   in Loop: Header=BB193_5 Depth=1
	movq	8(%rsp), %rax
	testb	$2, 48(%rax)
	jne	.LBB193_25
# %bb.26:                               #   in Loop: Header=BB193_5 Depth=1
	movq	16(%rsp), %rsi
	movq	32(%rsp), %rcx
	movq	(%rsi), %rdx
	movq	(%rdx,%rcx,8), %rax
	movq	32(%rax), %rax
	movq	48(%rsp), %rdi
	leaq	(%rdi,%rax,8), %rax
	addq	$8, %rax
	movq	%rax, 48(%rsp)
	jmp	.LBB193_27
	.p2align	4, 0x90
.LBB193_25:                             # %._crit_edge.i
                                        #   in Loop: Header=BB193_5 Depth=1
	movq	16(%rsp), %rsi
	movq	32(%rsp), %rcx
	movq	(%rsi), %rdx
.LBB193_27:                             #   in Loop: Header=BB193_5 Depth=1
	leaq	1(%rcx), %rax
	movq	%rax, 32(%rsp)
	movq	8(%rsi), %rsi
	subq	%rdx, %rsi
	sarq	$3, %rsi
	cmpq	%rsi, %rax
	jb	.LBB193_29
# %bb.28:                               #   in Loop: Header=BB193_5 Depth=1
	xorl	%r13d, %r13d
	movq	%r13, 40(%rsp)
	cmpq	%r15, %rax
	jne	.LBB193_5
.LBB193_31:                             # %._crit_edge
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail8instance17deallocate_layoutEv
	cmpq	$0, 40(%rbx)
	je	.LBB193_33
# %bb.32:
	movq	%rbx, %rdi
	callq	PyObject_ClearWeakRefs@PLT
.LBB193_33:
	movq	%rbx, %rdi
	callq	_PyObject_GetDictPtr@PLT
	testq	%rax, %rax
	je	.LBB193_38
# %bb.34:
	movq	(%rax), %rdi
	testq	%rdi, %rdi
	je	.LBB193_38
# %bb.35:
	movq	$0, (%rax)
	movq	(%rdi), %rax
	testl	%eax, %eax
	js	.LBB193_38
# %bb.36:
	decq	%rax
	movq	%rax, (%rdi)
	jne	.LBB193_38
# %bb.37:
	callq	_Py_Dealloc@PLT
.LBB193_38:                             # %_ZL9Py_DECREFP7_object.exit
	testb	$16, 48(%rbx)
	je	.LBB193_40
# %bb.39:
	movq	%rbx, %rdi
	callq	_ZN8pybind116detail14clear_patientsEP7_object
.LBB193_40:
	addq	$88, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB193_42:
	.cfi_def_cfa_offset 144
	leaq	.L.str.180(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.LBB193_41:
	leaq	.L.str.170(%rip), %rdi
	leaq	.L.str.73(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZN8pybind116detail18values_and_holders8iteratorC2EPNS0_8instanceEPKSt6vectorIPNS0_9type_infoESaIS7_EE(%rip), %rcx
	movl	$326, %edx                      # imm = 0x146
	callq	__assert_fail@PLT
.Lfunc_end193:
	.size	_ZN8pybind116detail14clear_instanceEP7_object, .Lfunc_end193-_ZN8pybind116detail14clear_instanceEP7_object
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail8instance17deallocate_layoutEv,"axG",@progbits,_ZN8pybind116detail8instance17deallocate_layoutEv,comdat
	.hidden	_ZN8pybind116detail8instance17deallocate_layoutEv # -- Begin function _ZN8pybind116detail8instance17deallocate_layoutEv
	.weak	_ZN8pybind116detail8instance17deallocate_layoutEv
	.p2align	4, 0x90
	.type	_ZN8pybind116detail8instance17deallocate_layoutEv,@function
_ZN8pybind116detail8instance17deallocate_layoutEv: # @_ZN8pybind116detail8instance17deallocate_layoutEv
	.cfi_startproc
# %bb.0:
	testb	$2, 48(%rdi)
	jne	.LBB194_1
# %bb.2:
	movq	16(%rdi), %rdi
	jmp	PyMem_Free@PLT                  # TAILCALL
.LBB194_1:
	retq
.Lfunc_end194:
	.size	_ZN8pybind116detail8instance17deallocate_layoutEv, .Lfunc_end194-_ZN8pybind116detail8instance17deallocate_layoutEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail14clear_patientsEP7_object,"axG",@progbits,_ZN8pybind116detail14clear_patientsEP7_object,comdat
	.hidden	_ZN8pybind116detail14clear_patientsEP7_object # -- Begin function _ZN8pybind116detail14clear_patientsEP7_object
	.weak	_ZN8pybind116detail14clear_patientsEP7_object
	.p2align	4, 0x90
	.type	_ZN8pybind116detail14clear_patientsEP7_object,@function
_ZN8pybind116detail14clear_patientsEP7_object: # @_ZN8pybind116detail14clear_patientsEP7_object
.Lfunc_begin105:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception105
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$56, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rbx
	movq	%rdi, 32(%rsp)
	xorps	%xmm0, %xmm0
	movaps	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	leaq	32(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	%rsp, %rax
	movq	%rax, 48(%rsp)
.Ltmp2891:
	callq	_ZN8pybind116detail13get_internalsEv
.Ltmp2892:
# %bb.1:                                # %.noexc12
.Ltmp2893:
	leaq	40(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_
.Ltmp2894:
# %bb.2:                                # %_ZN8pybind116detail14with_internalsIZNS0_14clear_patientsEP7_objectEUlRNS0_9internalsEE_EEDTclfp_clL_ZNS0_13get_internalsEvEEEERKT_.exit
	andb	$-17, 48(%rbx)
	movq	(%rsp), %rbx
	movq	8(%rsp), %r14
	cmpq	%r14, %rbx
	jne	.LBB195_3
# %bb.9:                                # %._crit_edge
	testq	%rbx, %rbx
	je	.LBB195_11
.LBB195_10:
	movq	16(%rsp), %rsi
	subq	%rbx, %rsi
	movq	%rbx, %rdi
	callq	_ZdlPvm@PLT
.LBB195_11:                             # %_ZNSt6vectorIP7_objectSaIS1_EED2Ev.exit
	addq	$56, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
	.p2align	4, 0x90
.LBB195_7:                              # %_ZL9Py_DECREFP7_object.exit
                                        #   in Loop: Header=BB195_3 Depth=1
	.cfi_def_cfa_offset 80
	addq	$8, %rbx
	cmpq	%r14, %rbx
	je	.LBB195_8
.LBB195_3:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB195_7
# %bb.4:                                #   in Loop: Header=BB195_3 Depth=1
	movq	$0, (%rbx)
	movq	(%rdi), %rax
	testl	%eax, %eax
	js	.LBB195_7
# %bb.5:                                #   in Loop: Header=BB195_3 Depth=1
	decq	%rax
	movq	%rax, (%rdi)
	jne	.LBB195_7
# %bb.6:                                #   in Loop: Header=BB195_3 Depth=1
.Ltmp2896:
	callq	_Py_Dealloc@PLT
.Ltmp2897:
	jmp	.LBB195_7
.LBB195_8:                              # %._crit_edge.loopexit
	movq	(%rsp), %rbx
	testq	%rbx, %rbx
	jne	.LBB195_10
	jmp	.LBB195_11
.LBB195_13:
.Ltmp2895:
	jmp	.LBB195_14
.LBB195_12:
.Ltmp2898:
.LBB195_14:
	movq	%rax, %rbx
	movq	(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB195_16
# %bb.15:
	movq	16(%rsp), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB195_16:                             # %_ZNSt6vectorIP7_objectSaIS1_EED2Ev.exit15
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end195:
	.size	_ZN8pybind116detail14clear_patientsEP7_object, .Lfunc_end195-_ZN8pybind116detail14clear_patientsEP7_object
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail14clear_patientsEP7_object,"aG",@progbits,_ZN8pybind116detail14clear_patientsEP7_object,comdat
	.p2align	2, 0x0
GCC_except_table195:
.Lexception105:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end105-.Lcst_begin105
.Lcst_begin105:
	.uleb128 .Ltmp2891-.Lfunc_begin105      # >> Call Site 1 <<
	.uleb128 .Ltmp2894-.Ltmp2891            #   Call between .Ltmp2891 and .Ltmp2894
	.uleb128 .Ltmp2895-.Lfunc_begin105      #     jumps to .Ltmp2895
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2896-.Lfunc_begin105      # >> Call Site 2 <<
	.uleb128 .Ltmp2897-.Ltmp2896            #   Call between .Ltmp2896 and .Ltmp2897
	.uleb128 .Ltmp2898-.Lfunc_begin105      #     jumps to .Ltmp2898
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2897-.Lfunc_begin105      # >> Call Site 3 <<
	.uleb128 .Lfunc_end195-.Ltmp2897        #   Call between .Ltmp2897 and .Lfunc_end195
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end105:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE,"axG",@progbits,_ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE,comdat
	.hidden	_ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE # -- Begin function _ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE
	.weak	_ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE,@function
_ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE: # @_ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE
	.cfi_startproc
# %bb.0:
	subq	$40, %rsp
	.cfi_def_cfa_offset 48
	movq	%rdi, 16(%rsp)
	movq	%rsi, 8(%rsp)
	leaq	16(%rsp), %rax
	movq	%rax, 24(%rsp)
	leaq	8(%rsp), %rax
	movq	%rax, 32(%rsp)
	callq	_ZN8pybind116detail13get_internalsEv
	leaq	112(%rax), %rsi
	leaq	24(%rsp), %rdi
	callq	_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_
	addq	$40, %rsp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end196:
	.size	_ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE, .Lfunc_end196-_ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E,"axG",@progbits,_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E,comdat
	.hidden	_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E # -- Begin function _ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E
	.weak	_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E
	.p2align	4, 0x90
	.type	_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E,@function
_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E: # @_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E
.Lfunc_begin106:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception106
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, 16(%rsp)                  # 8-byte Spill
	movq	%rdx, 8(%rsp)                   # 8-byte Spill
	movq	%rsi, %r15
	movq	%rdi, %r12
	movq	(%rsi), %rax
	movq	336(%rax), %rax
	movq	%rax, (%rsp)
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rsp), %rcx
	movq	8(%rcx), %rsi
	movq	168(%rsi), %rdx
	leaq	24(%rcx), %rax
	movq	%rax, %rbx
	testl	$33554432, %edx                 # imm = 0x2000000
	je	.LBB197_2
# %bb.1:
	movq	(%rax), %rbx
.LBB197_2:                              # %_ZNK8pybind115tuple5beginEv.exit
	testl	$67108864, %edx                 # imm = 0x4000000
	je	.LBB197_25
# %bb.3:
	cmpq	PyLong_Type@GOTPCREL(%rip), %rsi
	je	.LBB197_26
# %bb.4:
	cmpq	PyBool_Type@GOTPCREL(%rip), %rsi
	je	.LBB197_27
# %bb.5:                                # %_ZL16PyTuple_GET_SIZEP7_object.exit.i
	movq	16(%rcx), %rcx
	testl	$33554432, %edx                 # imm = 0x2000000
	je	.LBB197_7
# %bb.6:
	movq	(%rax), %rax
.LBB197_7:
	leaq	(%rax,%rcx,8), %r14
	jmp	.LBB197_8
.LBB197_19:                             #   in Loop: Header=BB197_8 Depth=1
.Ltmp2906:
	movq	%rbp, %rdi
	movq	%r13, %rsi
	movq	8(%rsp), %rdx                   # 8-byte Reload
	movq	16(%rsp), %rcx                  # 8-byte Reload
	callq	_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E
.Ltmp2907:
	.p2align	4, 0x90
.LBB197_21:                             # %.loopexit
                                        #   in Loop: Header=BB197_8 Depth=1
	addq	$8, %rbx
.LBB197_8:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB197_15 Depth 2
	cmpq	%r14, %rbx
	je	.LBB197_9
# %bb.11:                               #   in Loop: Header=BB197_8 Depth=1
	movq	(%rbx), %rdi
.Ltmp2899:
	callq	_ZN8pybind116detail13get_type_infoEP11_typeobject
.Ltmp2900:
# %bb.12:                               #   in Loop: Header=BB197_8 Depth=1
	movq	%rax, %r13
	testq	%rax, %rax
	je	.LBB197_21
# %bb.13:                               #   in Loop: Header=BB197_8 Depth=1
	movq	104(%r13), %rax
	movq	112(%r13), %rcx
	cmpq	%rcx, %rax
	je	.LBB197_21
# %bb.14:                               # %.lr.ph
                                        #   in Loop: Header=BB197_8 Depth=1
	movq	8(%r15), %rdx
	.p2align	4, 0x90
.LBB197_15:                             #   Parent Loop BB197_8 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpq	%rdx, (%rax)
	je	.LBB197_16
# %bb.20:                               # %.critedge
                                        #   in Loop: Header=BB197_15 Depth=2
	addq	$16, %rax
	cmpq	%rcx, %rax
	jne	.LBB197_15
	jmp	.LBB197_21
.LBB197_16:                             #   in Loop: Header=BB197_8 Depth=1
.Ltmp2902:
	movq	%r12, %rdi
	callq	*8(%rax)
.Ltmp2903:
# %bb.17:                               #   in Loop: Header=BB197_8 Depth=1
	movq	%rax, %rbp
	cmpq	%r12, %rax
	je	.LBB197_19
# %bb.18:                               #   in Loop: Header=BB197_8 Depth=1
.Ltmp2904:
	movq	%rbp, %rdi
	movq	8(%rsp), %rsi                   # 8-byte Reload
	callq	*16(%rsp)                       # 8-byte Folded Reload
.Ltmp2905:
	jmp	.LBB197_19
.LBB197_9:                              # %._crit_edge
.Ltmp2912:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2913:
# %bb.10:                               # %_ZN8pybind116objectD2Ev.exit
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB197_25:
	.cfi_def_cfa_offset 80
	leaq	.L.str.74(%rip), %rdi
	leaq	.L.str.75(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL16PyTuple_GET_SIZEP7_object(%rip), %rcx
	movl	$23, %edx
	callq	__assert_fail@PLT
.LBB197_26:
	leaq	.L.str.76(%rip), %rdi
	leaq	.L.str.77(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object(%rip), %rcx
	movl	$231, %edx
	callq	__assert_fail@PLT
.LBB197_27:
	leaq	.L.str.78(%rip), %rdi
	leaq	.L.str.77(%rip), %rsi
	leaq	.L__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object(%rip), %rcx
	movl	$232, %edx
	callq	__assert_fail@PLT
.LBB197_28:
.Ltmp2914:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB197_29:
.Ltmp2908:
	jmp	.LBB197_23
.LBB197_22:
.Ltmp2901:
.LBB197_23:
	movq	%rax, %rbx
.Ltmp2909:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2910:
# %bb.24:                               # %_ZN8pybind116objectD2Ev.exit38
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB197_30:
.Ltmp2911:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end197:
	.size	_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E, .Lfunc_end197-_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E,"aG",@progbits,_ZN8pybind116detail21traverse_offset_basesEPvPKNS0_9type_infoEPNS0_8instanceEPFbS1_S6_E,comdat
	.p2align	2, 0x0
GCC_except_table197:
.Lexception106:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase77-.Lttbaseref77
.Lttbaseref77:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end106-.Lcst_begin106
.Lcst_begin106:
	.uleb128 .Lfunc_begin106-.Lfunc_begin106 # >> Call Site 1 <<
	.uleb128 .Ltmp2906-.Lfunc_begin106      #   Call between .Lfunc_begin106 and .Ltmp2906
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2906-.Lfunc_begin106      # >> Call Site 2 <<
	.uleb128 .Ltmp2907-.Ltmp2906            #   Call between .Ltmp2906 and .Ltmp2907
	.uleb128 .Ltmp2908-.Lfunc_begin106      #     jumps to .Ltmp2908
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2899-.Lfunc_begin106      # >> Call Site 3 <<
	.uleb128 .Ltmp2900-.Ltmp2899            #   Call between .Ltmp2899 and .Ltmp2900
	.uleb128 .Ltmp2901-.Lfunc_begin106      #     jumps to .Ltmp2901
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2902-.Lfunc_begin106      # >> Call Site 4 <<
	.uleb128 .Ltmp2905-.Ltmp2902            #   Call between .Ltmp2902 and .Ltmp2905
	.uleb128 .Ltmp2908-.Lfunc_begin106      #     jumps to .Ltmp2908
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2912-.Lfunc_begin106      # >> Call Site 5 <<
	.uleb128 .Ltmp2913-.Ltmp2912            #   Call between .Ltmp2912 and .Ltmp2913
	.uleb128 .Ltmp2914-.Lfunc_begin106      #     jumps to .Ltmp2914
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2909-.Lfunc_begin106      # >> Call Site 6 <<
	.uleb128 .Ltmp2910-.Ltmp2909            #   Call between .Ltmp2909 and .Ltmp2910
	.uleb128 .Ltmp2911-.Lfunc_begin106      #     jumps to .Ltmp2911
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2910-.Lfunc_begin106      # >> Call Site 7 <<
	.uleb128 .Lfunc_end197-.Ltmp2910        #   Call between .Ltmp2910 and .Lfunc_end197
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end106:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase77:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_,"axG",@progbits,_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_,comdat
	.hidden	_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_ # -- Begin function _ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_
	.weak	_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_
	.p2align	4, 0x90
	.type	_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_,@function
_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_: # @_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %rcx
	movq	(%rdi), %rax
	cmpq	$0, 24(%rsi)
	je	.LBB198_3
# %bb.1:
	movq	(%rax), %r8
	movq	8(%rsi), %r11
	movq	%r8, %rax
	orq	%r11, %rax
	shrq	$32, %rax
	je	.LBB198_6
# %bb.2:
	movq	%r8, %rax
	xorl	%edx, %edx
	divq	%r11
	movq	%rdx, %r9
	movq	(%rsi), %rax
	movq	(%rax,%r9,8), %rax
	testq	%rax, %rax
	jne	.LBB198_7
	jmp	.LBB198_20
.LBB198_3:
	leaq	16(%rsi), %rdi
	movq	(%rax), %r8
	.p2align	4, 0x90
.LBB198_4:                              # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB198_20
# %bb.5:                                #   in Loop: Header=BB198_4 Depth=1
	cmpq	8(%rdi), %r8
	jne	.LBB198_4
	jmp	.LBB198_13
.LBB198_6:
	movl	%r8d, %eax
	xorl	%edx, %edx
	divl	%r11d
	movl	%edx, %r9d
	movq	(%rsi), %rax
	movq	(%rax,%r9,8), %rax
	testq	%rax, %rax
	je	.LBB198_20
.LBB198_7:
	movq	(%rax), %rdi
	cmpq	8(%rdi), %r8
	jne	.LBB198_8
.LBB198_13:                             # %_ZNSt10_HashtableIPKvSt4pairIKS1_PN8pybind116detail8instanceEESaIS8_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb0ELb0ELb0EEEE4findERS3_.exit.i.i
	movq	%rdi, %rax
	.p2align	4, 0x90
.LBB198_14:                             # =>This Inner Loop Header: Depth=1
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.LBB198_16
# %bb.15:                               #   in Loop: Header=BB198_14 Depth=1
	cmpq	8(%rax), %r8
	je	.LBB198_14
.LBB198_16:                             # %_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEE11equal_rangeERSB_.exit
	cmpq	%rax, %rdi
	je	.LBB198_20
# %bb.17:                               # %.lr.ph
	movq	8(%rcx), %rcx
	movq	(%rcx), %rcx
	.p2align	4, 0x90
.LBB198_18:                             # =>This Inner Loop Header: Depth=1
	cmpq	16(%rdi), %rcx
	je	.LBB198_22
# %bb.19:                               #   in Loop: Header=BB198_18 Depth=1
	movq	(%rdi), %rdi
	cmpq	%rax, %rdi
	jne	.LBB198_18
	jmp	.LBB198_20
	.p2align	4, 0x90
.LBB198_11:                             #   in Loop: Header=BB198_8 Depth=1
	movl	%r10d, %eax
	xorl	%edx, %edx
	divl	%r11d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%r9, %rdx
	jne	.LBB198_20
.LBB198_12:                             #   in Loop: Header=BB198_8 Depth=1
	cmpq	%r10, %r8
	je	.LBB198_13
.LBB198_8:                              # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %rdi
	testq	%rdi, %rdi
	je	.LBB198_20
# %bb.9:                                #   in Loop: Header=BB198_8 Depth=1
	movq	8(%rdi), %r10
	movq	%r10, %rax
	orq	%r11, %rax
	shrq	$32, %rax
	je	.LBB198_11
# %bb.10:                               #   in Loop: Header=BB198_8 Depth=1
	movq	%r10, %rax
	xorl	%edx, %edx
	divq	%r11
	cmpq	%r9, %rdx
	je	.LBB198_12
.LBB198_20:
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB198_22:
	.cfi_def_cfa_offset 32
	movq	8(%rsi), %r10
	movq	8(%rdi), %rax
	movq	%rax, %rcx
	orq	%r10, %rcx
	shrq	$32, %rcx
	je	.LBB198_24
# %bb.23:
	xorl	%edx, %edx
	divq	%r10
	movq	%rdx, %rcx
	jmp	.LBB198_25
.LBB198_24:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r10d
	movl	%edx, %ecx
.LBB198_25:
	movq	(%rsi), %r9
	movq	(%r9,%rcx,8), %r14
	movq	%r14, %rax
	.p2align	4, 0x90
.LBB198_26:                             # =>This Inner Loop Header: Depth=1
	movq	%rax, %r8
	movq	(%rax), %rax
	cmpq	%rdi, %rax
	jne	.LBB198_26
# %bb.27:                               # %_ZNSt10_HashtableIPKvSt4pairIKS1_PN8pybind116detail8instanceEESaIS8_ENSt8__detail10_Select1stESt8equal_toIS1_ESt4hashIS1_ENSA_18_Mod_range_hashingENSA_20_Default_ranged_hashENSA_20_Prime_rehash_policyENSA_17_Hashtable_traitsILb0ELb0ELb0EEEE20_M_get_previous_nodeEmPNSA_10_Hash_nodeIS8_Lb0EEE.exit.i.i.i
	movq	(%rdi), %r11
	cmpq	%r8, %r14
	je	.LBB198_31
# %bb.28:
	movq	%rsi, %rbx
	testq	%r11, %r11
	je	.LBB198_42
# %bb.29:
	movq	8(%r11), %rax
	movq	%rax, %rdx
	orq	%r10, %rdx
	shrq	$32, %rdx
	je	.LBB198_34
# %bb.30:
	xorl	%edx, %edx
	divq	%r10
	cmpq	%rcx, %rdx
	jne	.LBB198_35
	jmp	.LBB198_42
.LBB198_31:
	testq	%r11, %r11
	je	.LBB198_39
# %bb.32:
	movq	8(%r11), %rax
	movq	%rax, %rdx
	orq	%r10, %rdx
	movq	%rsi, %rbx
	shrq	$32, %rdx
	je	.LBB198_36
# %bb.33:
	xorl	%edx, %edx
	divq	%r10
	jmp	.LBB198_37
.LBB198_34:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r10d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	je	.LBB198_42
.LBB198_35:
	movq	%r8, (%r9,%rdx,8)
	jmp	.LBB198_42
.LBB198_36:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r10d
                                        # kill: def $edx killed $edx def $rdx
.LBB198_37:
	cmpq	%rcx, %rdx
	je	.LBB198_42
# %bb.38:
	movq	%r14, (%r9,%rdx,8)
	movq	%rbx, %rsi
	movq	(%rbx), %r9
	movq	(%r9,%rcx,8), %r14
.LBB198_39:                             # %.thread23.i.i.i.i
	movq	%rsi, %rbx
	leaq	16(%rsi), %rax
	cmpq	%r14, %rax
	jne	.LBB198_41
# %bb.40:
	movq	%r11, (%rax)
.LBB198_41:
	movq	$0, (%r9,%rcx,8)
.LBB198_42:                             # %_ZNSt18unordered_multimapIPKvPN8pybind116detail8instanceESt4hashIS1_ESt8equal_toIS1_ESaISt4pairIKS1_S5_EEE5eraseENSt8__detail14_Node_iteratorISC_Lb0ELb0EEE.exit
	movq	(%rdi), %rax
	movq	%rax, (%r8)
	movl	$24, %esi
	callq	_ZdlPvm@PLT
	decq	24(%rbx)
	movb	$1, %al
                                        # kill: def $al killed $al killed $eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end198:
	.size	_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_, .Lfunc_end198-_ZZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceEENKUlRSt18unordered_multimapIPKvS3_St4hashIS6_ESt8equal_toIS6_ESaISt4pairIKS6_S3_EEEE_clESG_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_,"axG",@progbits,_ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_,comdat
	.hidden	_ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_ # -- Begin function _ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_
	.weak	_ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_
	.p2align	4, 0x90
	.type	_ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_,@function
_ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_: # @_ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_
	.cfi_startproc
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	(%rdi), %rax
	cmpq	$0, 304(%rsi)
	je	.LBB199_1
# %bb.8:
	movq	(%rax), %rcx
	movq	288(%rbx), %r9
	movq	%rcx, %rax
	orq	%r9, %rax
	shrq	$32, %rax
	je	.LBB199_9
# %bb.10:
	movq	%rcx, %rax
	xorl	%edx, %edx
	divq	%r9
	movq	%rdx, %rsi
	movq	280(%rbx), %rax
	movq	(%rax,%rsi,8), %rax
	testq	%rax, %rax
	jne	.LBB199_12
	jmp	.LBB199_19
.LBB199_1:
	leaq	296(%rbx), %r14
	movq	(%rax), %rax
	.p2align	4, 0x90
.LBB199_2:                              # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB199_19
# %bb.3:                                #   in Loop: Header=BB199_2 Depth=1
	cmpq	8(%r14), %rax
	jne	.LBB199_2
	jmp	.LBB199_4
.LBB199_9:
	movl	%ecx, %eax
	xorl	%edx, %edx
	divl	%r9d
	movl	%edx, %esi
	movq	280(%rbx), %rax
	movq	(%rax,%rsi,8), %rax
	testq	%rax, %rax
	je	.LBB199_19
.LBB199_12:
	movq	(%rax), %r14
	cmpq	8(%r14), %rcx
	je	.LBB199_4
	.p2align	4, 0x90
.LBB199_14:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r14
	testq	%r14, %r14
	je	.LBB199_19
# %bb.15:                               #   in Loop: Header=BB199_14 Depth=1
	movq	8(%r14), %r8
	movq	%r8, %rax
	orq	%r9, %rax
	shrq	$32, %rax
	je	.LBB199_16
# %bb.17:                               #   in Loop: Header=BB199_14 Depth=1
	movq	%r8, %rax
	xorl	%edx, %edx
	divq	%r9
	cmpq	%rsi, %rdx
	je	.LBB199_13
	jmp	.LBB199_19
	.p2align	4, 0x90
.LBB199_16:                             #   in Loop: Header=BB199_14 Depth=1
	movl	%r8d, %eax
	xorl	%edx, %edx
	divl	%r9d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rsi, %rdx
	jne	.LBB199_19
.LBB199_13:                             #   in Loop: Header=BB199_14 Depth=1
	cmpq	%r8, %rcx
	jne	.LBB199_14
.LBB199_4:                              # %_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEE4findERSC_.exit
	movq	8(%rdi), %rax
	movq	(%rax), %rdi
	movq	16(%rax), %rsi
	movups	16(%r14), %xmm0
	movups	%xmm0, (%rax)
	movq	32(%r14), %rcx
	movq	%rcx, 16(%rax)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%r14)
	movq	$0, 32(%r14)
	testq	%rdi, %rdi
	je	.LBB199_6
# %bb.5:
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB199_6:                              # %_ZNSt6vectorIP7_objectSaIS1_EEaSEOS3_.exit
	movq	288(%rbx), %r8
	movq	8(%r14), %rax
	movq	%rax, %rcx
	orq	%r8, %rcx
	shrq	$32, %rcx
	je	.LBB199_7
# %bb.20:
	xorl	%edx, %edx
	divq	%r8
	movq	%rdx, %rcx
	jmp	.LBB199_21
.LBB199_7:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r8d
	movl	%edx, %ecx
.LBB199_21:
	movq	280(%rbx), %rdi
	movq	(%rdi,%rcx,8), %r10
	movq	%r10, %rax
	.p2align	4, 0x90
.LBB199_22:                             # =>This Inner Loop Header: Depth=1
	movq	%rax, %rsi
	movq	(%rax), %rax
	cmpq	%r14, %rax
	jne	.LBB199_22
# %bb.23:                               # %_ZNSt10_HashtableIPK7_objectSt4pairIKS2_St6vectorIPS0_SaIS6_EEESaIS9_ENSt8__detail10_Select1stESt8equal_toIS2_ESt4hashIS2_ENSB_18_Mod_range_hashingENSB_20_Default_ranged_hashENSB_20_Prime_rehash_policyENSB_17_Hashtable_traitsILb0ELb0ELb1EEEE20_M_get_previous_nodeEmPNSB_10_Hash_nodeIS9_Lb0EEE.exit.i.i.i
	movq	(%r14), %r9
	cmpq	%rsi, %r10
	je	.LBB199_24
# %bb.33:
	testq	%r9, %r9
	je	.LBB199_39
# %bb.34:
	movq	8(%r9), %rax
	movq	%rax, %rdx
	orq	%r8, %rdx
	shrq	$32, %rdx
	je	.LBB199_35
# %bb.36:
	xorl	%edx, %edx
	divq	%r8
	cmpq	%rcx, %rdx
	jne	.LBB199_38
	jmp	.LBB199_39
.LBB199_24:
	testq	%r9, %r9
	je	.LBB199_30
# %bb.25:
	movq	8(%r9), %rax
	movq	%rax, %rdx
	orq	%r8, %rdx
	shrq	$32, %rdx
	je	.LBB199_26
# %bb.27:
	xorl	%edx, %edx
	divq	%r8
	cmpq	%rcx, %rdx
	jne	.LBB199_29
	jmp	.LBB199_39
.LBB199_35:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r8d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	je	.LBB199_39
.LBB199_38:
	movq	%rsi, (%rdi,%rdx,8)
	jmp	.LBB199_39
.LBB199_26:
                                        # kill: def $eax killed $eax killed $rax
	xorl	%edx, %edx
	divl	%r8d
                                        # kill: def $edx killed $edx def $rdx
	cmpq	%rcx, %rdx
	je	.LBB199_39
.LBB199_29:
	movq	%r10, (%rdi,%rdx,8)
	movq	280(%rbx), %rdi
	movq	(%rdi,%rcx,8), %r10
.LBB199_30:                             # %.thread23.i.i.i.i
	leaq	296(%rbx), %rax
	cmpq	%r10, %rax
	jne	.LBB199_32
# %bb.31:
	movq	%r9, (%rax)
.LBB199_32:
	movq	$0, (%rdi,%rcx,8)
.LBB199_39:                             # %_ZNSt10_HashtableIPK7_objectSt4pairIKS2_St6vectorIPS0_SaIS6_EEESaIS9_ENSt8__detail10_Select1stESt8equal_toIS2_ESt4hashIS2_ENSB_18_Mod_range_hashingENSB_20_Default_ranged_hashENSB_20_Prime_rehash_policyENSB_17_Hashtable_traitsILb0ELb0ELb1EEEE22_M_remove_bucket_beginEmPNSB_10_Hash_nodeIS9_Lb0EEEm.exit.i.i.i.i
	movq	(%r14), %rax
	movq	%rax, (%rsi)
	movq	16(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB199_41
# %bb.40:
	movq	32(%r14), %rsi
	subq	%rdi, %rsi
	callq	_ZdlPvm@PLT
.LBB199_41:                             # %_ZNSt13unordered_mapIPK7_objectSt6vectorIPS0_SaIS4_EESt4hashIS2_ESt8equal_toIS2_ESaISt4pairIKS2_S6_EEE5eraseENSt8__detail14_Node_iteratorISD_Lb0ELb0EEE.exit
	movl	$40, %esi
	movq	%r14, %rdi
	callq	_ZdlPvm@PLT
	decq	304(%rbx)
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB199_19:                             # %.loopexit
	.cfi_def_cfa_offset 32
	leaq	.L.str.181(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Lfunc_end199:
	.size	_ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_, .Lfunc_end199-_ZZN8pybind116detail14clear_patientsEP7_objectENKUlRNS0_9internalsEE_clES4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_,"axG",@progbits,_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_,comdat
	.hidden	_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_ # -- Begin function _ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_
	.weak	_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_
	.p2align	4, 0x90
	.type	_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_,@function
_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_: # @_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_
.Lfunc_begin107:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception107
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	8(%rdi), %rbx
	movq	16(%rdi), %r14
	movq	%rsi, %rdi
	movl	$3, %esi
	xorl	%edx, %edx
	callq	_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE
	movq	%rax, (%rsp)
.Ltmp2915:
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movq	%rax, %rdx
	callq	PyObject_SetAttrString@PLT
.Ltmp2916:
# %bb.1:                                # %.noexc
	testl	%eax, %eax
	jne	.LBB200_2
# %bb.7:                                # %_ZN8pybind116detail17accessor_policies8str_attr3setENS_6handleEPKcS3_.exit
.Ltmp2926:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2927:
# %bb.8:                                # %_ZN8pybind116objectD2Ev.exit
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB200_2:
	.cfi_def_cfa_offset 32
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2917:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2918:
# %bb.3:
.Ltmp2920:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2921:
# %bb.4:                                # %.noexc4
.LBB200_5:
.Ltmp2919:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB200_10
.LBB200_6:
.Ltmp2928:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB200_9:
.Ltmp2922:
	movq	%rax, %rbx
.LBB200_10:                             # %.body
.Ltmp2923:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2924:
# %bb.11:                               # %_ZN8pybind116objectD2Ev.exit5
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB200_12:
.Ltmp2925:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end200:
	.size	_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_, .Lfunc_end200-_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_,"aG",@progbits,_ZNO8pybind116detail8accessorINS0_17accessor_policies8str_attrEEaSIRA24_KcEEvOT_,comdat
	.p2align	2, 0x0
GCC_except_table200:
.Lexception107:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase78-.Lttbaseref78
.Lttbaseref78:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end107-.Lcst_begin107
.Lcst_begin107:
	.uleb128 .Lfunc_begin107-.Lfunc_begin107 # >> Call Site 1 <<
	.uleb128 .Ltmp2915-.Lfunc_begin107      #   Call between .Lfunc_begin107 and .Ltmp2915
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2915-.Lfunc_begin107      # >> Call Site 2 <<
	.uleb128 .Ltmp2916-.Ltmp2915            #   Call between .Ltmp2915 and .Ltmp2916
	.uleb128 .Ltmp2922-.Lfunc_begin107      #     jumps to .Ltmp2922
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2926-.Lfunc_begin107      # >> Call Site 3 <<
	.uleb128 .Ltmp2927-.Ltmp2926            #   Call between .Ltmp2926 and .Ltmp2927
	.uleb128 .Ltmp2928-.Lfunc_begin107      #     jumps to .Ltmp2928
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2927-.Lfunc_begin107      # >> Call Site 4 <<
	.uleb128 .Ltmp2917-.Ltmp2927            #   Call between .Ltmp2927 and .Ltmp2917
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2917-.Lfunc_begin107      # >> Call Site 5 <<
	.uleb128 .Ltmp2918-.Ltmp2917            #   Call between .Ltmp2917 and .Ltmp2918
	.uleb128 .Ltmp2919-.Lfunc_begin107      #     jumps to .Ltmp2919
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2920-.Lfunc_begin107      # >> Call Site 6 <<
	.uleb128 .Ltmp2921-.Ltmp2920            #   Call between .Ltmp2920 and .Ltmp2921
	.uleb128 .Ltmp2922-.Lfunc_begin107      #     jumps to .Ltmp2922
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2921-.Lfunc_begin107      # >> Call Site 7 <<
	.uleb128 .Ltmp2923-.Ltmp2921            #   Call between .Ltmp2921 and .Ltmp2923
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2923-.Lfunc_begin107      # >> Call Site 8 <<
	.uleb128 .Ltmp2924-.Ltmp2923            #   Call between .Ltmp2923 and .Ltmp2924
	.uleb128 .Ltmp2925-.Lfunc_begin107      #     jumps to .Ltmp2925
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2924-.Lfunc_begin107      # >> Call Site 9 <<
	.uleb128 .Lfunc_end200-.Ltmp2924        #   Call between .Ltmp2924 and .Lfunc_end200
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end107:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase78:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE,"axG",@progbits,_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE,comdat
	.hidden	_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE # -- Begin function _ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE
	.weak	_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE,@function
_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE: # @_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE
.Lfunc_begin108:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception108
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$40, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	testq	%rdi, %rdi
	je	.LBB201_1
# %bb.3:
	movq	%rdi, %rbx
	leaq	24(%rsp), %r12
	movq	%r12, 8(%rsp)
	callq	strlen@PLT
	movq	%rax, %r14
	movq	%r12, %r15
	cmpq	$16, %rax
	jb	.LBB201_7
# %bb.4:
	testq	%r14, %r14
	js	.LBB201_24
# %bb.5:
	movq	%r14, %rdi
	incq	%rdi
	js	.LBB201_25
# %bb.6:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm.exit.i.i
	callq	_Znwm@PLT
	movq	%rax, %r15
	movq	%rax, 8(%rsp)
	movq	%r14, 24(%rsp)
.LBB201_7:                              # %._crit_edge.i.i
	testq	%r14, %r14
	je	.LBB201_11
# %bb.8:                                # %._crit_edge.i.i
	cmpq	$1, %r14
	jne	.LBB201_10
# %bb.9:
	movzbl	(%rbx), %eax
	movb	%al, (%r15)
	jmp	.LBB201_11
.LBB201_1:
	movq	_Py_NoneStruct@GOTPCREL(%rip), %rax
	movq	%rax, 8(%rsp)
	leaq	8(%rsp), %r14
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	8(%rsp), %rbx
	movq	$0, 8(%rsp)
.Ltmp2937:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2938:
	jmp	.LBB201_2
.LBB201_10:
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
.LBB201_11:
	movq	%r14, 16(%rsp)
	movb	$0, (%r15,%r14)
	movq	8(%rsp), %rdi
	movq	16(%rsp), %rsi
.Ltmp2929:
	xorl	%edx, %edx
	callq	PyUnicode_DecodeUTF8@PLT
.Ltmp2930:
# %bb.12:                               # %.noexc16
	movq	%rax, %rbx
	testq	%rax, %rax
	je	.LBB201_13
# %bb.17:                               # %_ZN8pybind116detail13string_casterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE4castERKS7_NS_19return_value_policyENS_6handleE.exit
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB201_2
# %bb.18:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB201_2:
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB201_25:                             # %.noexc11.i
	.cfi_def_cfa_offset 80
	callq	_ZSt17__throw_bad_allocv@PLT
.LBB201_13:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp2931:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp2932:
# %bb.14:
.Ltmp2934:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp2935:
# %bb.15:                               # %.noexc17
.LBB201_24:                             # %.noexc.i
	leaq	.L.str.9(%rip), %rdi
	callq	_ZSt20__throw_length_errorPKc@PLT
.LBB201_16:
.Ltmp2933:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB201_20
.LBB201_23:
.Ltmp2939:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB201_19:
.Ltmp2936:
	movq	%rax, %rbx
.LBB201_20:                             # %.body
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB201_22
# %bb.21:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i18
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB201_22:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit20
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end201:
	.size	_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE, .Lfunc_end201-_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE,"aG",@progbits,_ZN8pybind116detail11type_casterIcvE4castEPKcNS_19return_value_policyENS_6handleE,comdat
	.p2align	2, 0x0
GCC_except_table201:
.Lexception108:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase79-.Lttbaseref79
.Lttbaseref79:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end108-.Lcst_begin108
.Lcst_begin108:
	.uleb128 .Lfunc_begin108-.Lfunc_begin108 # >> Call Site 1 <<
	.uleb128 .Ltmp2937-.Lfunc_begin108      #   Call between .Lfunc_begin108 and .Ltmp2937
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2937-.Lfunc_begin108      # >> Call Site 2 <<
	.uleb128 .Ltmp2938-.Ltmp2937            #   Call between .Ltmp2937 and .Ltmp2938
	.uleb128 .Ltmp2939-.Lfunc_begin108      #     jumps to .Ltmp2939
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2938-.Lfunc_begin108      # >> Call Site 3 <<
	.uleb128 .Ltmp2929-.Ltmp2938            #   Call between .Ltmp2938 and .Ltmp2929
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2929-.Lfunc_begin108      # >> Call Site 4 <<
	.uleb128 .Ltmp2930-.Ltmp2929            #   Call between .Ltmp2929 and .Ltmp2930
	.uleb128 .Ltmp2936-.Lfunc_begin108      #     jumps to .Ltmp2936
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2930-.Lfunc_begin108      # >> Call Site 5 <<
	.uleb128 .Ltmp2931-.Ltmp2930            #   Call between .Ltmp2930 and .Ltmp2931
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2931-.Lfunc_begin108      # >> Call Site 6 <<
	.uleb128 .Ltmp2932-.Ltmp2931            #   Call between .Ltmp2931 and .Ltmp2932
	.uleb128 .Ltmp2933-.Lfunc_begin108      #     jumps to .Ltmp2933
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2934-.Lfunc_begin108      # >> Call Site 7 <<
	.uleb128 .Ltmp2935-.Ltmp2934            #   Call between .Ltmp2934 and .Ltmp2935
	.uleb128 .Ltmp2936-.Lfunc_begin108      #     jumps to .Ltmp2936
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2935-.Lfunc_begin108      # >> Call Site 8 <<
	.uleb128 .Lfunc_end201-.Ltmp2935        #   Call between .Ltmp2935 and .Lfunc_end201
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end108:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase79:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind117module_10add_objectEPKcNS_6handleEb,"axG",@progbits,_ZN8pybind117module_10add_objectEPKcNS_6handleEb,comdat
	.hidden	_ZN8pybind117module_10add_objectEPKcNS_6handleEb # -- Begin function _ZN8pybind117module_10add_objectEPKcNS_6handleEb
	.weak	_ZN8pybind117module_10add_objectEPKcNS_6handleEb
	.p2align	4, 0x90
	.type	_ZN8pybind117module_10add_objectEPKcNS_6handleEb,@function
_ZN8pybind117module_10add_objectEPKcNS_6handleEb: # @_ZN8pybind117module_10add_objectEPKcNS_6handleEb
.Lfunc_begin109:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception109
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$120, %rsp
	.cfi_def_cfa_offset 144
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	%rdx, 16(%rsp)
	testl	%ecx, %ecx
	jne	.LBB202_15
# %bb.1:
	movq	(%r14), %rdi
	movq	%rbx, %rsi
	callq	PyObject_HasAttrString@PLT
	cmpl	$1, %eax
	je	.LBB202_2
.LBB202_15:
	movq	(%r14), %r14
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	movq	(%rax), %rdx
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	PyModule_AddObject@PLT
	addq	$120, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB202_2:
	.cfi_def_cfa_offset 144
	leaq	88(%rsp), %r14
	leaq	15(%rsp), %rdx
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_@PLT
.Ltmp2940:
	leaq	.L.str.201(%rip), %rsi
	leaq	24(%rsp), %rdi
	movq	%r14, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp2941:
# %bb.3:
.Ltmp2943:
	leaq	.L.str.202(%rip), %rdx
	leaq	56(%rsp), %rdi
	leaq	24(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp2944:
# %bb.4:
.Ltmp2946:
	leaq	56(%rsp), %rdi
	callq	_ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp2947:
# %bb.5:
.LBB202_8:
.Ltmp2948:
	movq	%rax, %rbx
	movq	56(%rsp), %rdi
	leaq	72(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB202_9
# %bb.10:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	24(%rsp), %rdi
	leaq	40(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB202_11
.LBB202_12:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit14
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB202_13
.LBB202_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit17
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB202_9:                              # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	72(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	24(%rsp), %rdi
	leaq	40(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB202_12
	jmp	.LBB202_11
.LBB202_7:
.Ltmp2945:
	movq	%rax, %rbx
	movq	24(%rsp), %rdi
	leaq	40(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB202_12
.LBB202_11:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i12
	movq	40(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB202_14
	jmp	.LBB202_13
.LBB202_6:
.Ltmp2942:
	movq	%rax, %rbx
	movq	88(%rsp), %rdi
	leaq	104(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB202_14
.LBB202_13:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i15
	movq	104(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end202:
	.size	_ZN8pybind117module_10add_objectEPKcNS_6handleEb, .Lfunc_end202-_ZN8pybind117module_10add_objectEPKcNS_6handleEb
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind117module_10add_objectEPKcNS_6handleEb,"aG",@progbits,_ZN8pybind117module_10add_objectEPKcNS_6handleEb,comdat
	.p2align	2, 0x0
GCC_except_table202:
.Lexception109:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end109-.Lcst_begin109
.Lcst_begin109:
	.uleb128 .Lfunc_begin109-.Lfunc_begin109 # >> Call Site 1 <<
	.uleb128 .Ltmp2940-.Lfunc_begin109      #   Call between .Lfunc_begin109 and .Ltmp2940
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2940-.Lfunc_begin109      # >> Call Site 2 <<
	.uleb128 .Ltmp2941-.Ltmp2940            #   Call between .Ltmp2940 and .Ltmp2941
	.uleb128 .Ltmp2942-.Lfunc_begin109      #     jumps to .Ltmp2942
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2943-.Lfunc_begin109      # >> Call Site 3 <<
	.uleb128 .Ltmp2944-.Ltmp2943            #   Call between .Ltmp2943 and .Ltmp2944
	.uleb128 .Ltmp2945-.Lfunc_begin109      #     jumps to .Ltmp2945
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2946-.Lfunc_begin109      # >> Call Site 4 <<
	.uleb128 .Ltmp2947-.Ltmp2946            #   Call between .Ltmp2946 and .Ltmp2947
	.uleb128 .Ltmp2948-.Lfunc_begin109      #     jumps to .Ltmp2948
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2947-.Lfunc_begin109      # >> Call Site 5 <<
	.uleb128 .Lfunc_end202-.Ltmp2947        #   Call between .Ltmp2947 and .Lfunc_end202
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end109:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeESZ_
	.type	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeESZ_,@function
_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeESZ_: # @_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeESZ_
.Lfunc_begin110:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception110
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$40, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 16(%rsp)
	movq	$0, 32(%rsp)
.Ltmp2949:
	leaq	16(%rsp), %rdi
	movq	%r14, %rsi
	callq	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE
.Ltmp2950:
# %bb.1:                                # %_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE9load_argsERNS0_13function_callE.exit.i
	movl	$1, %ebx
	testb	%al, %al
	je	.LBB203_11
# %bb.2:
	movq	(%r14), %rax
	testb	$32, 89(%rax)
	jne	.LBB203_3
# %bb.8:
.Ltmp2961:
	leaq	16(%rsp), %rdi
	callq	_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_SF_EEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSG_
.Ltmp2962:
# %bb.9:
	movq	_Py_NoneStruct@GOTPCREL(%rip), %rax
	movq	%rax, 8(%rsp)
.Ltmp2963:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2964:
# %bb.10:                               # %.noexc.i
	movq	8(%rsp), %rbx
	movq	$0, 8(%rsp)
.Ltmp2966:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2967:
	jmp	.LBB203_11
.LBB203_3:
.Ltmp2952:
	leaq	16(%rsp), %rdi
	callq	_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_SF_EEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSG_
.Ltmp2953:
# %bb.4:
	movq	_Py_NoneStruct@GOTPCREL(%rip), %rax
	movq	%rax, 8(%rsp)
.Ltmp2955:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2956:
# %bb.5:
	movq	8(%rsp), %rbx
	movq	$0, 8(%rsp)
.Ltmp2958:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2959:
.LBB203_11:
	leaq	32(%rsp), %rdi
.Ltmp2969:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2970:
# %bb.12:                               # %_ZNSt10_Head_baseILm0EN8pybind116detail11type_casterINS0_6objectEvEELb0EED2Ev.exit.i.i.i
	leaq	24(%rsp), %rdi
.Ltmp2972:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2973:
# %bb.13:                               # %_ZNSt10_Head_baseILm1EN8pybind116detail11type_casterINS0_6objectEvEELb0EED2Ev.exit.i.i.i.i
.Ltmp2975:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2976:
# %bb.14:                               # %_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_ENKUlRNS_6detail13function_callEE_clESZ_.exit
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB203_18:
	.cfi_def_cfa_offset 64
.Ltmp2960:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB203_19:
.Ltmp2968:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB203_7:
.Ltmp2957:
	jmp	.LBB203_17
.LBB203_6:
.Ltmp2954:
	jmp	.LBB203_17
.LBB203_20:
.Ltmp2965:
	jmp	.LBB203_17
.LBB203_15:
.Ltmp2977:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB203_22:
.Ltmp2974:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB203_21:
.Ltmp2971:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB203_16:
.Ltmp2951:
.LBB203_17:
	movq	%rax, %rbx
	leaq	16(%rsp), %rdi
	callq	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end203:
	.size	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeESZ_, .Lfunc_end203-_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeESZ_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table203:
.Lexception110:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase80-.Lttbaseref80
.Lttbaseref80:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end110-.Lcst_begin110
.Lcst_begin110:
	.uleb128 .Ltmp2949-.Lfunc_begin110      # >> Call Site 1 <<
	.uleb128 .Ltmp2950-.Ltmp2949            #   Call between .Ltmp2949 and .Ltmp2950
	.uleb128 .Ltmp2951-.Lfunc_begin110      #     jumps to .Ltmp2951
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2961-.Lfunc_begin110      # >> Call Site 2 <<
	.uleb128 .Ltmp2964-.Ltmp2961            #   Call between .Ltmp2961 and .Ltmp2964
	.uleb128 .Ltmp2965-.Lfunc_begin110      #     jumps to .Ltmp2965
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2966-.Lfunc_begin110      # >> Call Site 3 <<
	.uleb128 .Ltmp2967-.Ltmp2966            #   Call between .Ltmp2966 and .Ltmp2967
	.uleb128 .Ltmp2968-.Lfunc_begin110      #     jumps to .Ltmp2968
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2952-.Lfunc_begin110      # >> Call Site 4 <<
	.uleb128 .Ltmp2953-.Ltmp2952            #   Call between .Ltmp2952 and .Ltmp2953
	.uleb128 .Ltmp2954-.Lfunc_begin110      #     jumps to .Ltmp2954
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2955-.Lfunc_begin110      # >> Call Site 5 <<
	.uleb128 .Ltmp2956-.Ltmp2955            #   Call between .Ltmp2955 and .Ltmp2956
	.uleb128 .Ltmp2957-.Lfunc_begin110      #     jumps to .Ltmp2957
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2958-.Lfunc_begin110      # >> Call Site 6 <<
	.uleb128 .Ltmp2959-.Ltmp2958            #   Call between .Ltmp2958 and .Ltmp2959
	.uleb128 .Ltmp2960-.Lfunc_begin110      #     jumps to .Ltmp2960
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2969-.Lfunc_begin110      # >> Call Site 7 <<
	.uleb128 .Ltmp2970-.Ltmp2969            #   Call between .Ltmp2969 and .Ltmp2970
	.uleb128 .Ltmp2971-.Lfunc_begin110      #     jumps to .Ltmp2971
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2972-.Lfunc_begin110      # >> Call Site 8 <<
	.uleb128 .Ltmp2973-.Ltmp2972            #   Call between .Ltmp2972 and .Ltmp2973
	.uleb128 .Ltmp2974-.Lfunc_begin110      #     jumps to .Ltmp2974
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2975-.Lfunc_begin110      # >> Call Site 9 <<
	.uleb128 .Ltmp2976-.Ltmp2975            #   Call between .Ltmp2975 and .Ltmp2976
	.uleb128 .Ltmp2977-.Lfunc_begin110      #     jumps to .Ltmp2977
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2976-.Lfunc_begin110      # >> Call Site 10 <<
	.uleb128 .Lfunc_end203-.Ltmp2976        #   Call between .Ltmp2976 and .Lfunc_end203
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end110:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase80:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_SF_EEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSG_
	.type	_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_SF_EEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSG_,@function
_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_SF_EEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSG_: # @_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_SF_EEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSG_
.Lfunc_begin111:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception111
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$400, %rsp                      # imm = 0x190
	.cfi_def_cfa_offset 416
	.cfi_offset %rbx, -16
	movq	16(%rdi), %rax
	movq	%rax, 40(%rsp)
	movq	$0, 16(%rdi)
	movq	8(%rdi), %rcx
	movq	%rcx, 32(%rsp)
	movq	$0, 8(%rdi)
	movq	(%rdi), %rcx
	movq	%rcx, 24(%rsp)
	movq	$0, (%rdi)
	movq	%rax, 16(%rsp)
.Ltmp2978:
	.cfi_escape 0x2e, 0x00
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2979:
# %bb.1:                                # %.noexc.i
.Ltmp2980:
	.cfi_escape 0x2e, 0x00
	leaq	112(%rsp), %rdi
	leaq	16(%rsp), %rsi
	callq	_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE@PLT
.Ltmp2981:
# %bb.2:
	movq	32(%rsp), %rax
	movq	%rax, 8(%rsp)
.Ltmp2982:
	.cfi_escape 0x2e, 0x00
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2983:
# %bb.3:                                # %_ZN8pybind116objectC2ERKS0_.exit.i.i
	leaq	160(%rsp), %rdi
.Ltmp2985:
	.cfi_escape 0x2e, 0x00
	leaq	8(%rsp), %rsi
	callq	_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE@PLT
.Ltmp2986:
# %bb.4:
	movq	24(%rsp), %rax
	movq	%rax, (%rsp)
.Ltmp2987:
	.cfi_escape 0x2e, 0x00
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp2988:
# %bb.5:                                # %_ZN8pybind116objectC2ERKS0_.exit20.i.i
	leaq	208(%rsp), %rdi
.Ltmp2990:
	.cfi_escape 0x2e, 0x00
	movq	%rsp, %rsi
	callq	_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE@PLT
.Ltmp2991:
# %bb.6:
.Ltmp3002:
	.cfi_escape 0x2e, 0x00
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3003:
# %bb.7:                                # %_ZN8pybind116objectD2Ev.exit.i.i
.Ltmp3005:
	.cfi_escape 0x2e, 0x00
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3006:
# %bb.8:                                # %_ZN8pybind116objectD2Ev.exit21.i.i
.Ltmp3008:
	.cfi_escape 0x2e, 0x00
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3009:
# %bb.9:                                # %_ZN8pybind116objectD2Ev.exit22.i.i
.Ltmp3011:
	.cfi_escape 0x2e, 0x00
	movq	_Z8micro_tk13micro_globals@GOTPCREL(%rip), %rdi
	movl	$8, %esi
	movl	$65536, %edx                    # imm = 0x10000
	callq	hipFuncSetAttribute@PLT
.Ltmp3012:
# %bb.10:                               # %.noexc7.i
.Ltmp3013:
	.cfi_escape 0x2e, 0x00
	movabsq	$4294968320, %rdi               # imm = 0x100000400
	movabsq	$4294967808, %rdx               # imm = 0x100000200
	movl	$65536, %r8d                    # imm = 0x10000
	movl	$1, %esi
	movl	$1, %ecx
	xorl	%r9d, %r9d
	callq	__hipPushCallConfiguration@PLT
.Ltmp3014:
# %bb.11:                               # %.noexc8.i
	testl	%eax, %eax
	jne	.LBB204_14
# %bb.12:
	movq	112(%rsp), %rax
	movq	%rax, 256(%rsp)
	movups	120(%rsp), %xmm0
	movups	%xmm0, 264(%rsp)
	movups	136(%rsp), %xmm0
	movups	%xmm0, 280(%rsp)
	movq	160(%rsp), %rax
	movq	%rax, 304(%rsp)
	movups	168(%rsp), %xmm0
	movups	%xmm0, 312(%rsp)
	movups	184(%rsp), %xmm0
	movups	%xmm0, 328(%rsp)
	movq	208(%rsp), %rax
	movq	%rax, 352(%rsp)
	movups	216(%rsp), %xmm0
	movups	%xmm0, 360(%rsp)
	movups	232(%rsp), %xmm0
	movups	%xmm0, 376(%rsp)
	leaq	256(%rsp), %rax
	movq	%rax, 48(%rsp)
.Ltmp3015:
	.cfi_escape 0x2e, 0x00
	leaq	96(%rsp), %rdi
	leaq	80(%rsp), %rsi
	leaq	72(%rsp), %rdx
	leaq	64(%rsp), %rcx
	callq	__hipPopCallConfiguration@PLT
.Ltmp3016:
# %bb.13:                               # %.noexc9.i
	movq	96(%rsp), %rsi
	movl	104(%rsp), %edx
	movq	80(%rsp), %rcx
	movl	88(%rsp), %r8d
.Ltmp3017:
	.cfi_escape 0x2e, 0x10
	movq	_Z8micro_tk13micro_globals@GOTPCREL(%rip), %rdi
	leaq	48(%rsp), %r9
	pushq	64(%rsp)
	.cfi_adjust_cfa_offset 8
	pushq	80(%rsp)
	.cfi_adjust_cfa_offset 8
	callq	hipLaunchKernel@PLT
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
.Ltmp3018:
.LBB204_14:
.Ltmp3029:
	.cfi_escape 0x2e, 0x00
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3030:
# %bb.15:                               # %_ZN8pybind116objectD2Ev.exit.i
.Ltmp3032:
	.cfi_escape 0x2e, 0x00
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3033:
# %bb.16:                               # %_ZN8pybind116objectD2Ev.exit11.i
.Ltmp3035:
	.cfi_escape 0x2e, 0x00
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3036:
# %bb.17:                               # %_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE9call_implIvRZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES8_NS_7module_EPKcJNS5_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESE_SE_EEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_JLm0ELm1ELm2EENS0_9void_typeEEET_OSH_St16integer_sequenceImJXspT1_EEEOSG_.exit
	addq	$400, %rsp                      # imm = 0x190
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB204_27:
	.cfi_def_cfa_offset 416
.Ltmp3037:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB204_26:
.Ltmp3034:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB204_25:
.Ltmp3031:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB204_35:
.Ltmp3010:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB204_34:
.Ltmp3007:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB204_33:
.Ltmp3004:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB204_18:
.Ltmp2992:
	movq	%rax, %rbx
.Ltmp2993:
	.cfi_escape 0x2e, 0x00
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2994:
	jmp	.LBB204_21
.LBB204_19:
.Ltmp2995:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB204_20:
.Ltmp2989:
	movq	%rax, %rbx
.LBB204_21:                             # %_ZN8pybind116objectD2Ev.exit23.i.i
.Ltmp2996:
	.cfi_escape 0x2e, 0x00
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp2997:
	jmp	.LBB204_24
.LBB204_22:
.Ltmp2998:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB204_23:
.Ltmp2984:
	movq	%rax, %rbx
.LBB204_24:                             # %_ZN8pybind116objectD2Ev.exit24.i.i
.Ltmp2999:
	.cfi_escape 0x2e, 0x00
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3000:
	jmp	.LBB204_29
.LBB204_36:
.Ltmp3001:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB204_28:
.Ltmp3019:
	movq	%rax, %rbx
.LBB204_29:                             # %.body.i
.Ltmp3020:
	.cfi_escape 0x2e, 0x00
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3021:
# %bb.30:                               # %_ZN8pybind116objectD2Ev.exit13.i
.Ltmp3023:
	.cfi_escape 0x2e, 0x00
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3024:
# %bb.31:                               # %_ZN8pybind116objectD2Ev.exit14.i
.Ltmp3026:
	.cfi_escape 0x2e, 0x00
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3027:
# %bb.32:                               # %_ZN8pybind116objectD2Ev.exit15.i
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB204_39:
.Ltmp3028:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB204_38:
.Ltmp3025:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB204_37:
.Ltmp3022:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end204:
	.size	_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_SF_EEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSG_, .Lfunc_end204-_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_SF_EEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSG_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table204:
.Lexception111:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase81-.Lttbaseref81
.Lttbaseref81:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end111-.Lcst_begin111
.Lcst_begin111:
	.uleb128 .Ltmp2978-.Lfunc_begin111      # >> Call Site 1 <<
	.uleb128 .Ltmp2979-.Ltmp2978            #   Call between .Ltmp2978 and .Ltmp2979
	.uleb128 .Ltmp3019-.Lfunc_begin111      #     jumps to .Ltmp3019
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2980-.Lfunc_begin111      # >> Call Site 2 <<
	.uleb128 .Ltmp2983-.Ltmp2980            #   Call between .Ltmp2980 and .Ltmp2983
	.uleb128 .Ltmp2984-.Lfunc_begin111      #     jumps to .Ltmp2984
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2985-.Lfunc_begin111      # >> Call Site 3 <<
	.uleb128 .Ltmp2988-.Ltmp2985            #   Call between .Ltmp2985 and .Ltmp2988
	.uleb128 .Ltmp2989-.Lfunc_begin111      #     jumps to .Ltmp2989
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp2990-.Lfunc_begin111      # >> Call Site 4 <<
	.uleb128 .Ltmp2991-.Ltmp2990            #   Call between .Ltmp2990 and .Ltmp2991
	.uleb128 .Ltmp2992-.Lfunc_begin111      #     jumps to .Ltmp2992
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3002-.Lfunc_begin111      # >> Call Site 5 <<
	.uleb128 .Ltmp3003-.Ltmp3002            #   Call between .Ltmp3002 and .Ltmp3003
	.uleb128 .Ltmp3004-.Lfunc_begin111      #     jumps to .Ltmp3004
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3005-.Lfunc_begin111      # >> Call Site 6 <<
	.uleb128 .Ltmp3006-.Ltmp3005            #   Call between .Ltmp3005 and .Ltmp3006
	.uleb128 .Ltmp3007-.Lfunc_begin111      #     jumps to .Ltmp3007
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3008-.Lfunc_begin111      # >> Call Site 7 <<
	.uleb128 .Ltmp3009-.Ltmp3008            #   Call between .Ltmp3008 and .Ltmp3009
	.uleb128 .Ltmp3010-.Lfunc_begin111      #     jumps to .Ltmp3010
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3011-.Lfunc_begin111      # >> Call Site 8 <<
	.uleb128 .Ltmp3018-.Ltmp3011            #   Call between .Ltmp3011 and .Ltmp3018
	.uleb128 .Ltmp3019-.Lfunc_begin111      #     jumps to .Ltmp3019
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3029-.Lfunc_begin111      # >> Call Site 9 <<
	.uleb128 .Ltmp3030-.Ltmp3029            #   Call between .Ltmp3029 and .Ltmp3030
	.uleb128 .Ltmp3031-.Lfunc_begin111      #     jumps to .Ltmp3031
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3032-.Lfunc_begin111      # >> Call Site 10 <<
	.uleb128 .Ltmp3033-.Ltmp3032            #   Call between .Ltmp3032 and .Ltmp3033
	.uleb128 .Ltmp3034-.Lfunc_begin111      #     jumps to .Ltmp3034
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3035-.Lfunc_begin111      # >> Call Site 11 <<
	.uleb128 .Ltmp3036-.Ltmp3035            #   Call between .Ltmp3035 and .Ltmp3036
	.uleb128 .Ltmp3037-.Lfunc_begin111      #     jumps to .Ltmp3037
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2993-.Lfunc_begin111      # >> Call Site 12 <<
	.uleb128 .Ltmp2994-.Ltmp2993            #   Call between .Ltmp2993 and .Ltmp2994
	.uleb128 .Ltmp2995-.Lfunc_begin111      #     jumps to .Ltmp2995
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2996-.Lfunc_begin111      # >> Call Site 13 <<
	.uleb128 .Ltmp2997-.Ltmp2996            #   Call between .Ltmp2996 and .Ltmp2997
	.uleb128 .Ltmp2998-.Lfunc_begin111      #     jumps to .Ltmp2998
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp2999-.Lfunc_begin111      # >> Call Site 14 <<
	.uleb128 .Ltmp3000-.Ltmp2999            #   Call between .Ltmp2999 and .Ltmp3000
	.uleb128 .Ltmp3001-.Lfunc_begin111      #     jumps to .Ltmp3001
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3020-.Lfunc_begin111      # >> Call Site 15 <<
	.uleb128 .Ltmp3021-.Ltmp3020            #   Call between .Ltmp3020 and .Ltmp3021
	.uleb128 .Ltmp3022-.Lfunc_begin111      #     jumps to .Ltmp3022
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3023-.Lfunc_begin111      # >> Call Site 16 <<
	.uleb128 .Ltmp3024-.Ltmp3023            #   Call between .Ltmp3023 and .Ltmp3024
	.uleb128 .Ltmp3025-.Lfunc_begin111      #     jumps to .Ltmp3025
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3026-.Lfunc_begin111      # >> Call Site 17 <<
	.uleb128 .Ltmp3027-.Ltmp3026            #   Call between .Ltmp3026 and .Ltmp3027
	.uleb128 .Ltmp3028-.Lfunc_begin111      #     jumps to .Ltmp3028
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3027-.Lfunc_begin111      # >> Call Site 18 <<
	.uleb128 .Lfunc_end204-.Ltmp3027        #   Call between .Ltmp3027 and .Lfunc_end204
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end111:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase81:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev,"axG",@progbits,_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev,comdat
	.hidden	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev # -- Begin function _ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev
	.weak	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev
	.p2align	4, 0x90
	.type	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev,@function
_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev: # @_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev
.Lfunc_begin112:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception112
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	addq	$16, %rdi
.Ltmp3038:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3039:
# %bb.1:                                # %_ZNSt10_Head_baseILm0EN8pybind116detail11type_casterINS0_6objectEvEELb0EED2Ev.exit.i
	leaq	8(%rbx), %rdi
.Ltmp3041:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3042:
# %bb.2:                                # %_ZNSt10_Head_baseILm1EN8pybind116detail11type_casterINS0_6objectEvEELb0EED2Ev.exit.i.i
.Ltmp3044:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3045:
# %bb.3:                                # %_ZNSt11_Tuple_implILm0EJN8pybind116detail11type_casterINS0_6objectEvEES4_S4_EED2Ev.exit
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB205_6:
	.cfi_def_cfa_offset 16
.Ltmp3046:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB205_5:
.Ltmp3043:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB205_4:
.Ltmp3040:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end205:
	.size	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev, .Lfunc_end205-_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev,"aG",@progbits,_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table205:
.Lexception112:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase82-.Lttbaseref82
.Lttbaseref82:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end112-.Lcst_begin112
.Lcst_begin112:
	.uleb128 .Ltmp3038-.Lfunc_begin112      # >> Call Site 1 <<
	.uleb128 .Ltmp3039-.Ltmp3038            #   Call between .Ltmp3038 and .Ltmp3039
	.uleb128 .Ltmp3040-.Lfunc_begin112      #     jumps to .Ltmp3040
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3041-.Lfunc_begin112      # >> Call Site 2 <<
	.uleb128 .Ltmp3042-.Ltmp3041            #   Call between .Ltmp3041 and .Ltmp3042
	.uleb128 .Ltmp3043-.Lfunc_begin112      #     jumps to .Ltmp3043
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3044-.Lfunc_begin112      # >> Call Site 3 <<
	.uleb128 .Ltmp3045-.Ltmp3044            #   Call between .Ltmp3044 and .Ltmp3045
	.uleb128 .Ltmp3046-.Lfunc_begin112      #     jumps to .Ltmp3046
	.byte	1                               #   On action: 1
.Lcst_end112:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase82:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE,"axG",@progbits,_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE,comdat
	.hidden	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE # -- Begin function _ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE
	.weak	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE,@function
_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE: # @_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE
.Lfunc_begin113:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception113
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$24, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	8(%rsi), %rax
	movq	(%rax), %rax
	testq	%rax, %rax
	je	.LBB206_15
# %bb.1:
	movq	%rsi, %r14
	movq	%rdi, %rbx
	leaq	16(%rdi), %r12
	movq	%rax, 8(%rsp)
	leaq	8(%rsp), %r15
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	cmpq	%r12, %r15
	je	.LBB206_3
# %bb.2:
	movq	(%r12), %rax
	movq	%rax, 16(%rsp)
	movq	8(%rsp), %rax
	movq	%rax, (%r12)
	movq	$0, 8(%rsp)
.Ltmp3047:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3048:
.LBB206_3:                              # %_ZN8pybind116objectaSEOS0_.exit.i
.Ltmp3050:
	leaq	8(%rsp), %r15
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3051:
# %bb.4:
	movq	8(%r14), %rax
	movq	8(%rax), %rax
	testq	%rax, %rax
	je	.LBB206_15
# %bb.5:
	leaq	8(%rbx), %r12
	movq	%rax, 8(%rsp)
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	cmpq	%r12, %r15
	je	.LBB206_7
# %bb.6:
	movq	(%r12), %rax
	movq	%rax, 16(%rsp)
	movq	8(%rsp), %rax
	movq	%rax, (%r12)
	movq	$0, 8(%rsp)
.Ltmp3053:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3054:
.LBB206_7:                              # %_ZN8pybind116objectaSEOS0_.exit.i13
.Ltmp3056:
	leaq	8(%rsp), %r15
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3057:
# %bb.8:
	movq	8(%r14), %rax
	movq	16(%rax), %rax
	testq	%rax, %rax
	je	.LBB206_15
# %bb.9:
	movq	%rax, 8(%rsp)
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
	cmpq	%rbx, %r15
	je	.LBB206_11
# %bb.10:
	movq	(%rbx), %rax
	movq	%rax, 16(%rsp)
	movq	8(%rsp), %rax
	movq	%rax, (%rbx)
	movq	$0, 8(%rsp)
.Ltmp3059:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3060:
.LBB206_11:                             # %_ZN8pybind116objectaSEOS0_.exit.i19
.Ltmp3062:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3063:
# %bb.12:                               # %_ZN8pybind116objectD2Ev.exit.i20
	movb	$1, %al
	jmp	.LBB206_16
.LBB206_15:
	xorl	%eax, %eax
.LBB206_16:                             # %_ZN8pybind116detail15pyobject_casterINS_6objectEE4loadIS2_TnNSt9enable_ifIXsr3std10is_base_ofIS2_T_EE5valueEiE4typeELi0EEEbNS_6handleEb.exit21
                                        # kill: def $al killed $al killed $eax
	addq	$24, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB206_17:
	.cfi_def_cfa_offset 64
.Ltmp3061:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB206_18:
.Ltmp3064:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB206_19:
.Ltmp3055:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB206_20:
.Ltmp3058:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB206_21:
.Ltmp3049:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB206_22:
.Ltmp3052:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end206:
	.size	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE, .Lfunc_end206-_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE,"aG",@progbits,_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE,comdat
	.p2align	2, 0x0
GCC_except_table206:
.Lexception113:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase83-.Lttbaseref83
.Lttbaseref83:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end113-.Lcst_begin113
.Lcst_begin113:
	.uleb128 .Lfunc_begin113-.Lfunc_begin113 # >> Call Site 1 <<
	.uleb128 .Ltmp3047-.Lfunc_begin113      #   Call between .Lfunc_begin113 and .Ltmp3047
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3047-.Lfunc_begin113      # >> Call Site 2 <<
	.uleb128 .Ltmp3048-.Ltmp3047            #   Call between .Ltmp3047 and .Ltmp3048
	.uleb128 .Ltmp3049-.Lfunc_begin113      #     jumps to .Ltmp3049
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3050-.Lfunc_begin113      # >> Call Site 3 <<
	.uleb128 .Ltmp3051-.Ltmp3050            #   Call between .Ltmp3050 and .Ltmp3051
	.uleb128 .Ltmp3052-.Lfunc_begin113      #     jumps to .Ltmp3052
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3051-.Lfunc_begin113      # >> Call Site 4 <<
	.uleb128 .Ltmp3053-.Ltmp3051            #   Call between .Ltmp3051 and .Ltmp3053
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3053-.Lfunc_begin113      # >> Call Site 5 <<
	.uleb128 .Ltmp3054-.Ltmp3053            #   Call between .Ltmp3053 and .Ltmp3054
	.uleb128 .Ltmp3055-.Lfunc_begin113      #     jumps to .Ltmp3055
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3056-.Lfunc_begin113      # >> Call Site 6 <<
	.uleb128 .Ltmp3057-.Ltmp3056            #   Call between .Ltmp3056 and .Ltmp3057
	.uleb128 .Ltmp3058-.Lfunc_begin113      #     jumps to .Ltmp3058
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3057-.Lfunc_begin113      # >> Call Site 7 <<
	.uleb128 .Ltmp3059-.Ltmp3057            #   Call between .Ltmp3057 and .Ltmp3059
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3059-.Lfunc_begin113      # >> Call Site 8 <<
	.uleb128 .Ltmp3060-.Ltmp3059            #   Call between .Ltmp3059 and .Ltmp3060
	.uleb128 .Ltmp3061-.Lfunc_begin113      #     jumps to .Ltmp3061
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3062-.Lfunc_begin113      # >> Call Site 9 <<
	.uleb128 .Ltmp3063-.Ltmp3062            #   Call between .Ltmp3062 and .Ltmp3063
	.uleb128 .Ltmp3064-.Lfunc_begin113      #     jumps to .Ltmp3064
	.byte	1                               #   On action: 1
.Lcst_end113:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase83:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE,"axG",@progbits,_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE,comdat
	.weak	_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE # -- Begin function _ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE
	.p2align	4, 0x90
	.type	_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE,@function
_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE: # @_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE
.Lfunc_begin114:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception114
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$168, %rsp
	.cfi_def_cfa_offset 224
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbp
	movq	%rdi, 160(%rsp)                 # 8-byte Spill
	movq	(%rsi), %rdi
	leaq	.L.str.187(%rip), %rbx
	movq	%rbx, %rsi
	callq	PyObject_HasAttrString@PLT
	cmpl	$1, %eax
	jne	.LBB207_112
# %bb.1:
	movq	(%rbp), %rax
	movq	%rax, 136(%rsp)
	movq	%rbx, 144(%rsp)
	leaq	152(%rsp), %r12
	movq	$0, 152(%rsp)
.Ltmp3065:
	leaq	128(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp3066:
# %bb.2:                                # %.noexc
	movq	(%rax), %rax
	movq	%rax, 8(%rsp)
.Ltmp3067:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp3068:
# %bb.3:                                # %.noexc62
	movq	8(%rsp), %rax
	movq	%rax, 56(%rsp)
	leaq	.L.str.94(%rip), %rax
	movq	%rax, 64(%rsp)
	movq	$0, 72(%rsp)
.Ltmp3070:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3071:
# %bb.4:
.Ltmp3073:
	leaq	72(%rsp), %r13
	leaq	48(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp3074:
# %bb.5:                                # %.noexc63
	leaq	24(%rsp), %r15
	movq	%r15, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp3076:
	leaq	8(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp3077:
# %bb.6:                                # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i.i
	leaq	96(%rsp), %rbx
	movq	%rbx, 80(%rsp)
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB207_7
# %bb.10:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i
	movq	%rdi, 80(%rsp)
	movq	16(%rsp), %r14
	movq	24(%rsp), %rax
	movq	%rax, 96(%rsp)
	movq	%rbp, 120(%rsp)                 # 8-byte Spill
	movq	%r14, 88(%rsp)
	cmpq	$6, %r14
	jne	.LBB207_12
.LBB207_13:
	movl	$1936614740, %eax               # imm = 0x736E6554
	xorl	(%rdi), %eax
	movzwl	4(%rdi), %ecx
	xorl	$29295, %ecx                    # imm = 0x726F
	orl	%eax, %ecx
	sete	%bpl
	cmpq	%rbx, %rdi
	jne	.LBB207_15
	jmp	.LBB207_16
.LBB207_7:
	movq	16(%rsp), %r14
	leaq	1(%r14), %rdx
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	memcpy@PLT
	movq	%rbx, %rdi
	movq	%rbp, 120(%rsp)                 # 8-byte Spill
	movq	%r14, 88(%rsp)
	cmpq	$6, %r14
	je	.LBB207_13
.LBB207_12:
	xorl	%ebp, %ebp
	cmpq	%rbx, %rdi
	je	.LBB207_16
.LBB207_15:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB207_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
.Ltmp3085:
	movq	%r13, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3086:
# %bb.17:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit
.Ltmp3088:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3089:
# %bb.18:                               # %.critedge60
	testb	%bpl, %bpl
	movq	120(%rsp), %r14                 # 8-byte Reload
	je	.LBB207_112
# %bb.19:
	movq	(%r14), %rax
	movq	%rax, 16(%rsp)
	leaq	.L.str.189(%rip), %rax
	movq	%rax, 24(%rsp)
	leaq	32(%rsp), %r12
	movq	$0, 32(%rsp)
.Ltmp3094:
	leaq	80(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_
.Ltmp3095:
# %bb.20:
	movq	80(%rsp), %rax
	cmpq	$2, (%rax)
	jl	.LBB207_23
# %bb.21:
.Ltmp3099:
	leaq	48(%rsp), %rdi
	leaq	80(%rsp), %rsi
	callq	_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
.Ltmp3100:
# %bb.22:                               # %.noexc66
	movzbl	48(%rsp), %ebx
	jmp	.LBB207_25
.LBB207_23:
.Ltmp3097:
	leaq	80(%rsp), %rdi
	callq	_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
.Ltmp3098:
# %bb.24:
	movl	%eax, %ebx
.LBB207_25:                             # %_ZNO8pybind116object4castIbEET_v.exit
.Ltmp3108:
	leaq	80(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3109:
# %bb.26:                               # %_ZN8pybind116objectD2Ev.exit
.Ltmp3111:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3112:
# %bb.27:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit68
	testb	$1, %bl
	je	.LBB207_28
# %bb.40:
	movq	(%r14), %rax
	movq	%rax, 136(%rsp)
	leaq	.L.str.191(%rip), %rax
	movq	%rax, 144(%rsp)
	leaq	152(%rsp), %r12
	movq	$0, 152(%rsp)
.Ltmp3117:
	leaq	128(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp3118:
# %bb.41:                               # %.noexc75
	movq	(%rax), %rax
	movq	%rax, 8(%rsp)
.Ltmp3119:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp3120:
# %bb.42:                               # %.noexc76
	movq	8(%rsp), %rax
	movq	%rax, 56(%rsp)
	leaq	.L.str.192(%rip), %rax
	movq	%rax, 64(%rsp)
	movq	$0, 72(%rsp)
.Ltmp3122:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3123:
# %bb.43:
.Ltmp3125:
	leaq	72(%rsp), %r13
	leaq	48(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp3126:
# %bb.44:                               # %.noexc84
	movq	%r15, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp3128:
	leaq	8(%rsp), %rdi
	movq	%rax, %rsi
	callq	_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvEERNS0_11type_casterIT_T0_EESC_RKNS_6handleE
.Ltmp3129:
# %bb.45:                               # %_ZN8pybind116detail9load_typeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS0_11type_casterINS0_14intrinsic_typeIT_E4typeEvEERKNS_6handleE.exit.i.i.i81
	leaq	96(%rsp), %rbx
	movq	%rbx, 80(%rsp)
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB207_46
# %bb.49:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i.i82
	movq	%rdi, 80(%rsp)
	movq	16(%rsp), %r14
	movq	24(%rsp), %rax
	movq	%rax, 96(%rsp)
	movq	%r14, 88(%rsp)
	cmpq	$3, %r14
	jne	.LBB207_51
.LBB207_52:
	movzwl	(%rdi), %eax
	xorl	$28771, %eax                    # imm = 0x7063
	movzbl	2(%rdi), %ecx
	xorl	$117, %ecx
	orw	%ax, %cx
	sete	%bpl
	cmpq	%rbx, %rdi
	jne	.LBB207_54
	jmp	.LBB207_55
.LBB207_46:
	movq	16(%rsp), %r14
	leaq	1(%r14), %rdx
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	memcpy@PLT
	movq	%rbx, %rdi
	movq	%r14, 88(%rsp)
	cmpq	$3, %r14
	je	.LBB207_52
.LBB207_51:
	xorl	%ebp, %ebp
	cmpq	%rbx, %rdi
	je	.LBB207_55
.LBB207_54:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i90
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
.LBB207_55:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit92
.Ltmp3137:
	movq	%r13, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3138:
# %bb.56:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit93
.Ltmp3140:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3141:
# %bb.57:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit94
	testb	%bpl, %bpl
	jne	.LBB207_58
# %bb.65:
	movups	.L__const._ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE.shape(%rip), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	120(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, 16(%rsp)
	leaq	.L.str.195(%rip), %rax
	movq	%rax, 24(%rsp)
	leaq	32(%rsp), %r15
	movq	$0, 32(%rsp)
.Ltmp3143:
	leaq	8(%rsp), %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp3144:
# %bb.66:                               # %.noexc98
	movq	(%rax), %rax
	movq	%rax, 48(%rsp)
.Ltmp3145:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp3146:
# %bb.67:                               # %.noexc99
.Ltmp3148:
	leaq	128(%rsp), %rdi
	leaq	48(%rsp), %rsi
	callq	_ZN8pybind115tupleC2EONS_6objectE
.Ltmp3149:
# %bb.68:
.Ltmp3157:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3158:
# %bb.69:
.Ltmp3160:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3161:
# %bb.70:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit102
	movq	128(%rsp), %rdi
.Ltmp3163:
	callq	PyTuple_Size@PLT
.Ltmp3164:
# %bb.71:                               # %_ZNK8pybind115tuple4sizeEv.exit
	movq	%rax, %r12
	cmpq	$4, %rax
	ja	.LBB207_83
# %bb.72:                               # %.preheader
	testq	%r12, %r12
	je	.LBB207_93
# %bb.73:                               # %.lr.ph
	leaq	32(%rsp), %r15
	leaq	(,%r12,4), %rax
	negq	%rax
	leaq	(%rsp,%rax), %r14
	addq	$96, %r14
	xorl	%ebx, %ebx
	leaq	8(%rsp), %r13
	leaq	48(%rsp), %rbp
	.p2align	4, 0x90
.LBB207_74:                             # =>This Inner Loop Header: Depth=1
	movq	128(%rsp), %rax
	movq	%rax, 16(%rsp)
	movq	%rbx, 24(%rsp)
	movq	$0, 32(%rsp)
.Ltmp3165:
	movq	%r13, %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEE9get_cacheEv
.Ltmp3166:
# %bb.75:                               # %.noexc107
                                        #   in Loop: Header=BB207_74 Depth=1
	movq	(%rax), %rax
	movq	%rax, 48(%rsp)
.Ltmp3167:
	movq	%rbp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp3168:
# %bb.76:                               # %_ZNK8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEEcvNS_6objectEEv.exit
                                        #   in Loop: Header=BB207_74 Depth=1
	movq	48(%rsp), %rax
	cmpq	$2, (%rax)
	jl	.LBB207_89
# %bb.77:                               #   in Loop: Header=BB207_74 Depth=1
.Ltmp3172:
	leaq	40(%rsp), %rdi
	movq	%rbp, %rsi
	callq	_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
.Ltmp3173:
# %bb.78:                               # %.noexc109
                                        #   in Loop: Header=BB207_74 Depth=1
	movl	40(%rsp), %eax
	jmp	.LBB207_90
	.p2align	4, 0x90
.LBB207_89:                             #   in Loop: Header=BB207_74 Depth=1
.Ltmp3170:
	movq	%rbp, %rdi
	callq	_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
.Ltmp3171:
.LBB207_90:                             # %_ZN8pybind114castIiEENSt9enable_ifIXaantsr6detail11is_pyobjectIT_EE5valuesr6detail20move_if_unreferencedIS2_EE5valueES2_E4typeEONS_6objectE.exit
                                        #   in Loop: Header=BB207_74 Depth=1
	movl	%eax, (%r14,%rbx,4)
.Ltmp3181:
	movq	%rbp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3182:
# %bb.91:                               # %_ZN8pybind116objectD2Ev.exit111
                                        #   in Loop: Header=BB207_74 Depth=1
.Ltmp3184:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3185:
# %bb.92:                               # %_ZN8pybind116detail8accessorINS0_17accessor_policies10tuple_itemEED2Ev.exit
                                        #   in Loop: Header=BB207_74 Depth=1
	incq	%rbx
	cmpq	%rbx, %r12
	jne	.LBB207_74
.LBB207_93:                             # %._crit_edge
	movq	120(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, 16(%rsp)
	leaq	.L.str.197(%rip), %rax
	movq	%rax, 24(%rsp)
	leaq	32(%rsp), %r14
	movq	$0, 32(%rsp)
.Ltmp3187:
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_
.Ltmp3188:
# %bb.94:
	movq	40(%rsp), %rax
	cmpq	$2, (%rax)
	jl	.LBB207_101
# %bb.95:
.Ltmp3192:
	leaq	48(%rsp), %rdi
	leaq	40(%rsp), %rsi
	callq	_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
.Ltmp3193:
# %bb.96:                               # %.noexc116
	movq	48(%rsp), %rbx
	jmp	.LBB207_103
.LBB207_101:
.Ltmp3190:
	leaq	40(%rsp), %rdi
	callq	_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
.Ltmp3191:
# %bb.102:
	movq	%rax, %rbx
.LBB207_103:                            # %_ZNO8pybind116object4castImEET_v.exit
.Ltmp3201:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3202:
# %bb.104:                              # %_ZN8pybind116objectD2Ev.exit118
.Ltmp3204:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3205:
# %bb.105:
	movq	160(%rsp), %rax                 # 8-byte Reload
	movq	%rbx, (%rax)
	movq	%rax, %rbx
	movdqa	80(%rsp), %xmm0
	pshufd	$238, %xmm0, %xmm1              # xmm1 = xmm0[2,3,2,3]
	pxor	%xmm2, %xmm2
	pxor	%xmm3, %xmm3
	pcmpgtd	%xmm1, %xmm3
	punpckldq	%xmm3, %xmm1            # xmm1 = xmm1[0],xmm3[0],xmm1[1],xmm3[1]
	pcmpgtd	%xmm0, %xmm2
	punpckldq	%xmm2, %xmm0            # xmm0 = xmm0[0],xmm2[0],xmm0[1],xmm2[1]
	movdqu	%xmm0, 8(%rax)
	movdqu	%xmm1, 24(%rax)
.Ltmp3207:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3208:
# %bb.106:                              # %_ZN8pybind116objectD2Ev.exit120
	movq	%rbx, %rax
	addq	$168, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB207_112:                            # %.critedge60.thread
	.cfi_def_cfa_offset 224
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp3091:
	leaq	.L.str.198(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZNSt13runtime_errorC1EPKc@PLT
.Ltmp3092:
	jmp	.LBB207_29
.LBB207_28:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp3114:
	leaq	.L.str.190(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZNSt13runtime_errorC1EPKc@PLT
.Ltmp3115:
	jmp	.LBB207_29
.LBB207_58:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp3219:
	leaq	.L.str.194(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZNSt13runtime_errorC1EPKc@PLT
.Ltmp3220:
.LBB207_29:
	movq	_ZTISt13runtime_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt13runtime_errorD1Ev@GOTPCREL(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.LBB207_83:
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp3210:
	leaq	.L.str.196(%rip), %rsi
	movq	%rax, %rdi
	callq	_ZNSt13runtime_errorC1EPKc@PLT
.Ltmp3211:
# %bb.84:
.Ltmp3213:
	movq	_ZTISt13runtime_error@GOTPCREL(%rip), %rsi
	movq	_ZNSt13runtime_errorD1Ev@GOTPCREL(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp3214:
# %bb.116:
.LBB207_88:
.Ltmp3212:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB207_111
.LBB207_64:
.Ltmp3221:
	jmp	.LBB207_114
.LBB207_39:
.Ltmp3116:
	jmp	.LBB207_114
.LBB207_134:
.Ltmp3209:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_133:
.Ltmp3206:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_132:
.Ltmp3203:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_107:
.Ltmp3194:
	movq	%rax, %rbx
.Ltmp3195:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3196:
	jmp	.LBB207_110
.LBB207_108:
.Ltmp3197:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_109:
.Ltmp3189:
	movq	%rax, %rbx
.LBB207_110:                            # %_ZN8pybind116objectD2Ev.exit121
.Ltmp3198:
	movq	%r14, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3199:
	jmp	.LBB207_111
.LBB207_135:
.Ltmp3200:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_82:
.Ltmp3162:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_79:
.Ltmp3159:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_81:
.Ltmp3150:
	movq	%rax, %rbx
.Ltmp3151:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3152:
	jmp	.LBB207_86
.LBB207_80:
.Ltmp3153:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_126:
.Ltmp3142:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_125:
.Ltmp3139:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_47:
.Ltmp3130:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB207_60
# %bb.48:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i.i.i78
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB207_60
.LBB207_59:
.Ltmp3127:
	movq	%rax, %rbx
.LBB207_60:                             # %.body85
.Ltmp3131:
	movq	%r13, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3132:
	jmp	.LBB207_63
.LBB207_61:
.Ltmp3133:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_124:
.Ltmp3124:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_121:
.Ltmp3113:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_120:
.Ltmp3110:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_35:
.Ltmp3101:
	movq	%rax, %rbx
.Ltmp3102:
	leaq	80(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3103:
	jmp	.LBB207_38
.LBB207_36:
.Ltmp3104:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_37:
.Ltmp3096:
	movq	%rax, %rbx
.LBB207_38:                             # %_ZN8pybind116objectD2Ev.exit71
.Ltmp3105:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3106:
	jmp	.LBB207_115
.LBB207_123:
.Ltmp3107:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_119:
.Ltmp3090:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_118:
.Ltmp3087:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_8:
.Ltmp3078:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB207_31
# %bb.9:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i.i5.i.i.i
	movq	24(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB207_31
.LBB207_113:
.Ltmp3093:
.LBB207_114:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB207_30:
.Ltmp3075:
	movq	%rax, %rbx
.LBB207_31:                             # %.body
.Ltmp3079:
	movq	%r13, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3080:
	jmp	.LBB207_34
.LBB207_32:
.Ltmp3081:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_117:
.Ltmp3072:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_87:
.Ltmp3215:
	movq	%rax, %rbx
	jmp	.LBB207_111
.LBB207_85:
.Ltmp3147:
	movq	%rax, %rbx
.LBB207_86:                             # %.body100
.Ltmp3154:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3155:
	jmp	.LBB207_115
.LBB207_128:
.Ltmp3156:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_62:
.Ltmp3121:
	movq	%rax, %rbx
.LBB207_63:                             # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit95
.Ltmp3134:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3135:
	jmp	.LBB207_115
.LBB207_127:
.Ltmp3136:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_33:
.Ltmp3069:
	movq	%rax, %rbx
.LBB207_34:                             # %_ZN8pybind116detail8accessorINS0_17accessor_policies8str_attrEED2Ev.exit69
.Ltmp3082:
	movq	%r12, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3083:
	jmp	.LBB207_115
.LBB207_122:
.Ltmp3084:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_97:
.Ltmp3174:
	movq	%rax, %rbx
.Ltmp3175:
	leaq	48(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3176:
	jmp	.LBB207_100
.LBB207_98:
.Ltmp3177:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_129:
.Ltmp3183:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_130:
.Ltmp3186:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_99:
.Ltmp3169:
	movq	%rax, %rbx
.LBB207_100:                            # %_ZN8pybind116objectD2Ev.exit112
.Ltmp3178:
	movq	%r15, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3179:
.LBB207_111:
.Ltmp3216:
	leaq	128(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3217:
.LBB207_115:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB207_136:
.Ltmp3218:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB207_131:
.Ltmp3180:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end207:
	.size	_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE, .Lfunc_end207-_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE,"aG",@progbits,_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE,comdat
	.p2align	2, 0x0
GCC_except_table207:
.Lexception114:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase84-.Lttbaseref84
.Lttbaseref84:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end114-.Lcst_begin114
.Lcst_begin114:
	.uleb128 .Lfunc_begin114-.Lfunc_begin114 # >> Call Site 1 <<
	.uleb128 .Ltmp3065-.Lfunc_begin114      #   Call between .Lfunc_begin114 and .Ltmp3065
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3065-.Lfunc_begin114      # >> Call Site 2 <<
	.uleb128 .Ltmp3068-.Ltmp3065            #   Call between .Ltmp3065 and .Ltmp3068
	.uleb128 .Ltmp3069-.Lfunc_begin114      #     jumps to .Ltmp3069
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3070-.Lfunc_begin114      # >> Call Site 3 <<
	.uleb128 .Ltmp3071-.Ltmp3070            #   Call between .Ltmp3070 and .Ltmp3071
	.uleb128 .Ltmp3072-.Lfunc_begin114      #     jumps to .Ltmp3072
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3073-.Lfunc_begin114      # >> Call Site 4 <<
	.uleb128 .Ltmp3074-.Ltmp3073            #   Call between .Ltmp3073 and .Ltmp3074
	.uleb128 .Ltmp3075-.Lfunc_begin114      #     jumps to .Ltmp3075
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3076-.Lfunc_begin114      # >> Call Site 5 <<
	.uleb128 .Ltmp3077-.Ltmp3076            #   Call between .Ltmp3076 and .Ltmp3077
	.uleb128 .Ltmp3078-.Lfunc_begin114      #     jumps to .Ltmp3078
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3077-.Lfunc_begin114      # >> Call Site 6 <<
	.uleb128 .Ltmp3085-.Ltmp3077            #   Call between .Ltmp3077 and .Ltmp3085
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3085-.Lfunc_begin114      # >> Call Site 7 <<
	.uleb128 .Ltmp3086-.Ltmp3085            #   Call between .Ltmp3085 and .Ltmp3086
	.uleb128 .Ltmp3087-.Lfunc_begin114      #     jumps to .Ltmp3087
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3088-.Lfunc_begin114      # >> Call Site 8 <<
	.uleb128 .Ltmp3089-.Ltmp3088            #   Call between .Ltmp3088 and .Ltmp3089
	.uleb128 .Ltmp3090-.Lfunc_begin114      #     jumps to .Ltmp3090
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3094-.Lfunc_begin114      # >> Call Site 9 <<
	.uleb128 .Ltmp3095-.Ltmp3094            #   Call between .Ltmp3094 and .Ltmp3095
	.uleb128 .Ltmp3096-.Lfunc_begin114      #     jumps to .Ltmp3096
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3099-.Lfunc_begin114      # >> Call Site 10 <<
	.uleb128 .Ltmp3098-.Ltmp3099            #   Call between .Ltmp3099 and .Ltmp3098
	.uleb128 .Ltmp3101-.Lfunc_begin114      #     jumps to .Ltmp3101
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3108-.Lfunc_begin114      # >> Call Site 11 <<
	.uleb128 .Ltmp3109-.Ltmp3108            #   Call between .Ltmp3108 and .Ltmp3109
	.uleb128 .Ltmp3110-.Lfunc_begin114      #     jumps to .Ltmp3110
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3111-.Lfunc_begin114      # >> Call Site 12 <<
	.uleb128 .Ltmp3112-.Ltmp3111            #   Call between .Ltmp3111 and .Ltmp3112
	.uleb128 .Ltmp3113-.Lfunc_begin114      #     jumps to .Ltmp3113
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3117-.Lfunc_begin114      # >> Call Site 13 <<
	.uleb128 .Ltmp3120-.Ltmp3117            #   Call between .Ltmp3117 and .Ltmp3120
	.uleb128 .Ltmp3121-.Lfunc_begin114      #     jumps to .Ltmp3121
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3122-.Lfunc_begin114      # >> Call Site 14 <<
	.uleb128 .Ltmp3123-.Ltmp3122            #   Call between .Ltmp3122 and .Ltmp3123
	.uleb128 .Ltmp3124-.Lfunc_begin114      #     jumps to .Ltmp3124
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3125-.Lfunc_begin114      # >> Call Site 15 <<
	.uleb128 .Ltmp3126-.Ltmp3125            #   Call between .Ltmp3125 and .Ltmp3126
	.uleb128 .Ltmp3127-.Lfunc_begin114      #     jumps to .Ltmp3127
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3128-.Lfunc_begin114      # >> Call Site 16 <<
	.uleb128 .Ltmp3129-.Ltmp3128            #   Call between .Ltmp3128 and .Ltmp3129
	.uleb128 .Ltmp3130-.Lfunc_begin114      #     jumps to .Ltmp3130
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3129-.Lfunc_begin114      # >> Call Site 17 <<
	.uleb128 .Ltmp3137-.Ltmp3129            #   Call between .Ltmp3129 and .Ltmp3137
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3137-.Lfunc_begin114      # >> Call Site 18 <<
	.uleb128 .Ltmp3138-.Ltmp3137            #   Call between .Ltmp3137 and .Ltmp3138
	.uleb128 .Ltmp3139-.Lfunc_begin114      #     jumps to .Ltmp3139
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3140-.Lfunc_begin114      # >> Call Site 19 <<
	.uleb128 .Ltmp3141-.Ltmp3140            #   Call between .Ltmp3140 and .Ltmp3141
	.uleb128 .Ltmp3142-.Lfunc_begin114      #     jumps to .Ltmp3142
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3143-.Lfunc_begin114      # >> Call Site 20 <<
	.uleb128 .Ltmp3146-.Ltmp3143            #   Call between .Ltmp3143 and .Ltmp3146
	.uleb128 .Ltmp3147-.Lfunc_begin114      #     jumps to .Ltmp3147
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3148-.Lfunc_begin114      # >> Call Site 21 <<
	.uleb128 .Ltmp3149-.Ltmp3148            #   Call between .Ltmp3148 and .Ltmp3149
	.uleb128 .Ltmp3150-.Lfunc_begin114      #     jumps to .Ltmp3150
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3157-.Lfunc_begin114      # >> Call Site 22 <<
	.uleb128 .Ltmp3158-.Ltmp3157            #   Call between .Ltmp3157 and .Ltmp3158
	.uleb128 .Ltmp3159-.Lfunc_begin114      #     jumps to .Ltmp3159
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3160-.Lfunc_begin114      # >> Call Site 23 <<
	.uleb128 .Ltmp3161-.Ltmp3160            #   Call between .Ltmp3160 and .Ltmp3161
	.uleb128 .Ltmp3162-.Lfunc_begin114      #     jumps to .Ltmp3162
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3163-.Lfunc_begin114      # >> Call Site 24 <<
	.uleb128 .Ltmp3164-.Ltmp3163            #   Call between .Ltmp3163 and .Ltmp3164
	.uleb128 .Ltmp3215-.Lfunc_begin114      #     jumps to .Ltmp3215
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3165-.Lfunc_begin114      # >> Call Site 25 <<
	.uleb128 .Ltmp3168-.Ltmp3165            #   Call between .Ltmp3165 and .Ltmp3168
	.uleb128 .Ltmp3169-.Lfunc_begin114      #     jumps to .Ltmp3169
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3172-.Lfunc_begin114      # >> Call Site 26 <<
	.uleb128 .Ltmp3171-.Ltmp3172            #   Call between .Ltmp3172 and .Ltmp3171
	.uleb128 .Ltmp3174-.Lfunc_begin114      #     jumps to .Ltmp3174
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3181-.Lfunc_begin114      # >> Call Site 27 <<
	.uleb128 .Ltmp3182-.Ltmp3181            #   Call between .Ltmp3181 and .Ltmp3182
	.uleb128 .Ltmp3183-.Lfunc_begin114      #     jumps to .Ltmp3183
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3184-.Lfunc_begin114      # >> Call Site 28 <<
	.uleb128 .Ltmp3185-.Ltmp3184            #   Call between .Ltmp3184 and .Ltmp3185
	.uleb128 .Ltmp3186-.Lfunc_begin114      #     jumps to .Ltmp3186
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3187-.Lfunc_begin114      # >> Call Site 29 <<
	.uleb128 .Ltmp3188-.Ltmp3187            #   Call between .Ltmp3187 and .Ltmp3188
	.uleb128 .Ltmp3189-.Lfunc_begin114      #     jumps to .Ltmp3189
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3192-.Lfunc_begin114      # >> Call Site 30 <<
	.uleb128 .Ltmp3191-.Ltmp3192            #   Call between .Ltmp3192 and .Ltmp3191
	.uleb128 .Ltmp3194-.Lfunc_begin114      #     jumps to .Ltmp3194
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3201-.Lfunc_begin114      # >> Call Site 31 <<
	.uleb128 .Ltmp3202-.Ltmp3201            #   Call between .Ltmp3201 and .Ltmp3202
	.uleb128 .Ltmp3203-.Lfunc_begin114      #     jumps to .Ltmp3203
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3204-.Lfunc_begin114      # >> Call Site 32 <<
	.uleb128 .Ltmp3205-.Ltmp3204            #   Call between .Ltmp3204 and .Ltmp3205
	.uleb128 .Ltmp3206-.Lfunc_begin114      #     jumps to .Ltmp3206
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3207-.Lfunc_begin114      # >> Call Site 33 <<
	.uleb128 .Ltmp3208-.Ltmp3207            #   Call between .Ltmp3207 and .Ltmp3208
	.uleb128 .Ltmp3209-.Lfunc_begin114      #     jumps to .Ltmp3209
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3208-.Lfunc_begin114      # >> Call Site 34 <<
	.uleb128 .Ltmp3091-.Ltmp3208            #   Call between .Ltmp3208 and .Ltmp3091
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3091-.Lfunc_begin114      # >> Call Site 35 <<
	.uleb128 .Ltmp3092-.Ltmp3091            #   Call between .Ltmp3091 and .Ltmp3092
	.uleb128 .Ltmp3093-.Lfunc_begin114      #     jumps to .Ltmp3093
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3092-.Lfunc_begin114      # >> Call Site 36 <<
	.uleb128 .Ltmp3114-.Ltmp3092            #   Call between .Ltmp3092 and .Ltmp3114
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3114-.Lfunc_begin114      # >> Call Site 37 <<
	.uleb128 .Ltmp3115-.Ltmp3114            #   Call between .Ltmp3114 and .Ltmp3115
	.uleb128 .Ltmp3116-.Lfunc_begin114      #     jumps to .Ltmp3116
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3115-.Lfunc_begin114      # >> Call Site 38 <<
	.uleb128 .Ltmp3219-.Ltmp3115            #   Call between .Ltmp3115 and .Ltmp3219
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3219-.Lfunc_begin114      # >> Call Site 39 <<
	.uleb128 .Ltmp3220-.Ltmp3219            #   Call between .Ltmp3219 and .Ltmp3220
	.uleb128 .Ltmp3221-.Lfunc_begin114      #     jumps to .Ltmp3221
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3220-.Lfunc_begin114      # >> Call Site 40 <<
	.uleb128 .Ltmp3210-.Ltmp3220            #   Call between .Ltmp3220 and .Ltmp3210
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3210-.Lfunc_begin114      # >> Call Site 41 <<
	.uleb128 .Ltmp3211-.Ltmp3210            #   Call between .Ltmp3210 and .Ltmp3211
	.uleb128 .Ltmp3212-.Lfunc_begin114      #     jumps to .Ltmp3212
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3213-.Lfunc_begin114      # >> Call Site 42 <<
	.uleb128 .Ltmp3214-.Ltmp3213            #   Call between .Ltmp3213 and .Ltmp3214
	.uleb128 .Ltmp3215-.Lfunc_begin114      #     jumps to .Ltmp3215
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3214-.Lfunc_begin114      # >> Call Site 43 <<
	.uleb128 .Ltmp3195-.Ltmp3214            #   Call between .Ltmp3214 and .Ltmp3195
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3195-.Lfunc_begin114      # >> Call Site 44 <<
	.uleb128 .Ltmp3196-.Ltmp3195            #   Call between .Ltmp3195 and .Ltmp3196
	.uleb128 .Ltmp3197-.Lfunc_begin114      #     jumps to .Ltmp3197
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3198-.Lfunc_begin114      # >> Call Site 45 <<
	.uleb128 .Ltmp3199-.Ltmp3198            #   Call between .Ltmp3198 and .Ltmp3199
	.uleb128 .Ltmp3200-.Lfunc_begin114      #     jumps to .Ltmp3200
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3151-.Lfunc_begin114      # >> Call Site 46 <<
	.uleb128 .Ltmp3152-.Ltmp3151            #   Call between .Ltmp3151 and .Ltmp3152
	.uleb128 .Ltmp3153-.Lfunc_begin114      #     jumps to .Ltmp3153
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3131-.Lfunc_begin114      # >> Call Site 47 <<
	.uleb128 .Ltmp3132-.Ltmp3131            #   Call between .Ltmp3131 and .Ltmp3132
	.uleb128 .Ltmp3133-.Lfunc_begin114      #     jumps to .Ltmp3133
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3102-.Lfunc_begin114      # >> Call Site 48 <<
	.uleb128 .Ltmp3103-.Ltmp3102            #   Call between .Ltmp3102 and .Ltmp3103
	.uleb128 .Ltmp3104-.Lfunc_begin114      #     jumps to .Ltmp3104
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3105-.Lfunc_begin114      # >> Call Site 49 <<
	.uleb128 .Ltmp3106-.Ltmp3105            #   Call between .Ltmp3105 and .Ltmp3106
	.uleb128 .Ltmp3107-.Lfunc_begin114      #     jumps to .Ltmp3107
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3106-.Lfunc_begin114      # >> Call Site 50 <<
	.uleb128 .Ltmp3079-.Ltmp3106            #   Call between .Ltmp3106 and .Ltmp3079
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3079-.Lfunc_begin114      # >> Call Site 51 <<
	.uleb128 .Ltmp3080-.Ltmp3079            #   Call between .Ltmp3079 and .Ltmp3080
	.uleb128 .Ltmp3081-.Lfunc_begin114      #     jumps to .Ltmp3081
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3154-.Lfunc_begin114      # >> Call Site 52 <<
	.uleb128 .Ltmp3155-.Ltmp3154            #   Call between .Ltmp3154 and .Ltmp3155
	.uleb128 .Ltmp3156-.Lfunc_begin114      #     jumps to .Ltmp3156
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3134-.Lfunc_begin114      # >> Call Site 53 <<
	.uleb128 .Ltmp3135-.Ltmp3134            #   Call between .Ltmp3134 and .Ltmp3135
	.uleb128 .Ltmp3136-.Lfunc_begin114      #     jumps to .Ltmp3136
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3082-.Lfunc_begin114      # >> Call Site 54 <<
	.uleb128 .Ltmp3083-.Ltmp3082            #   Call between .Ltmp3082 and .Ltmp3083
	.uleb128 .Ltmp3084-.Lfunc_begin114      #     jumps to .Ltmp3084
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3175-.Lfunc_begin114      # >> Call Site 55 <<
	.uleb128 .Ltmp3176-.Ltmp3175            #   Call between .Ltmp3175 and .Ltmp3176
	.uleb128 .Ltmp3177-.Lfunc_begin114      #     jumps to .Ltmp3177
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3178-.Lfunc_begin114      # >> Call Site 56 <<
	.uleb128 .Ltmp3179-.Ltmp3178            #   Call between .Ltmp3178 and .Ltmp3179
	.uleb128 .Ltmp3180-.Lfunc_begin114      #     jumps to .Ltmp3180
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3216-.Lfunc_begin114      # >> Call Site 57 <<
	.uleb128 .Ltmp3217-.Ltmp3216            #   Call between .Ltmp3216 and .Ltmp3217
	.uleb128 .Ltmp3218-.Lfunc_begin114      #     jumps to .Ltmp3218
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3217-.Lfunc_begin114      # >> Call Site 58 <<
	.uleb128 .Lfunc_end207-.Ltmp3217        #   Call between .Ltmp3217 and .Lfunc_end207
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end114:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase84:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_,"axG",@progbits,_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_,comdat
	.hidden	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_ # -- Begin function _ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_
	.weak	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_
	.p2align	4, 0x90
	.type	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_,@function
_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_: # @_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_
.Lfunc_begin115:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception115
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	callq	PyGILState_Check@PLT
	testl	%eax, %eax
	je	.LBB208_18
# %bb.1:
	xorl	%edi, %edi
	callq	PyTuple_New@PLT
	movq	%rax, (%rsp)
	testq	%rax, %rax
	je	.LBB208_2
# %bb.6:                                # %_ZN8pybind116detail17collect_argumentsILNS_19return_value_policyE1EJEvEENS0_16simple_collectorIXT_EEEDpOT0_.exit
.Ltmp3222:
	movq	%r14, %rdi
	callq	_ZNK8pybind116detail8accessorINS0_17accessor_policies8str_attrEE9get_cacheEv
.Ltmp3223:
# %bb.7:
	movq	(%rax), %rdi
	movq	(%rsp), %rsi
.Ltmp3224:
	callq	PyObject_CallObject@PLT
.Ltmp3225:
# %bb.8:                                # %.noexc
	testq	%rax, %rax
	je	.LBB208_9
# %bb.14:
	movq	%rax, (%rbx)
.Ltmp3226:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3227:
# %bb.15:                               # %_ZN8pybind116detail16simple_collectorILNS_19return_value_policyE1EED2Ev.exit
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB208_18:
	.cfi_def_cfa_offset 32
	leaq	.L.str.166(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.LBB208_2:
.Ltmp3238:
	leaq	.L.str.130(%rip), %rdi
	callq	_ZN8pybind1113pybind11_failEPKc
.Ltmp3239:
# %bb.3:
.LBB208_9:
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r14
.Ltmp3229:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp3230:
# %bb.10:
.Ltmp3232:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r14, %rdi
	callq	__cxa_throw@PLT
.Ltmp3233:
# %bb.11:                               # %.noexc2
.LBB208_12:
.Ltmp3231:
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception@PLT
	jmp	.LBB208_17
.LBB208_13:
.Ltmp3228:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB208_4:
.Ltmp3240:
	movq	%rax, %rbx
.Ltmp3241:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3242:
	jmp	.LBB208_5
.LBB208_19:
.Ltmp3243:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB208_16:
.Ltmp3234:
	movq	%rax, %rbx
.LBB208_17:                             # %.body
.Ltmp3235:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3236:
.LBB208_5:                              # %common.resume
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB208_20:
.Ltmp3237:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end208:
	.size	_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_, .Lfunc_end208-_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_
	.cfi_endproc
	.section	.gcc_except_table._ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_,"aG",@progbits,_ZNK8pybind116detail10object_apiINS0_8accessorINS0_17accessor_policies8str_attrEEEEclILNS_19return_value_policyE1EJEEENS_6objectEDpOT0_,comdat
	.p2align	2, 0x0
GCC_except_table208:
.Lexception115:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase85-.Lttbaseref85
.Lttbaseref85:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end115-.Lcst_begin115
.Lcst_begin115:
	.uleb128 .Lfunc_begin115-.Lfunc_begin115 # >> Call Site 1 <<
	.uleb128 .Ltmp3222-.Lfunc_begin115      #   Call between .Lfunc_begin115 and .Ltmp3222
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3222-.Lfunc_begin115      # >> Call Site 2 <<
	.uleb128 .Ltmp3225-.Ltmp3222            #   Call between .Ltmp3222 and .Ltmp3225
	.uleb128 .Ltmp3234-.Lfunc_begin115      #     jumps to .Ltmp3234
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3226-.Lfunc_begin115      # >> Call Site 3 <<
	.uleb128 .Ltmp3227-.Ltmp3226            #   Call between .Ltmp3226 and .Ltmp3227
	.uleb128 .Ltmp3228-.Lfunc_begin115      #     jumps to .Ltmp3228
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3227-.Lfunc_begin115      # >> Call Site 4 <<
	.uleb128 .Ltmp3238-.Ltmp3227            #   Call between .Ltmp3227 and .Ltmp3238
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3238-.Lfunc_begin115      # >> Call Site 5 <<
	.uleb128 .Ltmp3239-.Ltmp3238            #   Call between .Ltmp3238 and .Ltmp3239
	.uleb128 .Ltmp3240-.Lfunc_begin115      #     jumps to .Ltmp3240
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3239-.Lfunc_begin115      # >> Call Site 6 <<
	.uleb128 .Ltmp3229-.Ltmp3239            #   Call between .Ltmp3239 and .Ltmp3229
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3229-.Lfunc_begin115      # >> Call Site 7 <<
	.uleb128 .Ltmp3230-.Ltmp3229            #   Call between .Ltmp3229 and .Ltmp3230
	.uleb128 .Ltmp3231-.Lfunc_begin115      #     jumps to .Ltmp3231
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3232-.Lfunc_begin115      # >> Call Site 8 <<
	.uleb128 .Ltmp3233-.Ltmp3232            #   Call between .Ltmp3232 and .Ltmp3233
	.uleb128 .Ltmp3234-.Lfunc_begin115      #     jumps to .Ltmp3234
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3233-.Lfunc_begin115      # >> Call Site 9 <<
	.uleb128 .Ltmp3241-.Ltmp3233            #   Call between .Ltmp3233 and .Ltmp3241
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3241-.Lfunc_begin115      # >> Call Site 10 <<
	.uleb128 .Ltmp3242-.Ltmp3241            #   Call between .Ltmp3241 and .Ltmp3242
	.uleb128 .Ltmp3243-.Lfunc_begin115      #     jumps to .Ltmp3243
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3235-.Lfunc_begin115      # >> Call Site 11 <<
	.uleb128 .Ltmp3236-.Ltmp3235            #   Call between .Ltmp3235 and .Ltmp3236
	.uleb128 .Ltmp3237-.Lfunc_begin115      #     jumps to .Ltmp3237
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3236-.Lfunc_begin115      # >> Call Site 12 <<
	.uleb128 .Lfunc_end208-.Ltmp3236        #   Call between .Ltmp3236 and .Lfunc_end208
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end115:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase85:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,"axG",@progbits,_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,comdat
	.hidden	_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE # -- Begin function _ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
	.weak	_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
	.p2align	4, 0x90
	.type	_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,@function
_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE: # @_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
.Lfunc_begin116:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception116
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$208, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	(%rdi), %rax
	cmpq	$2, (%rax)
	jge	.LBB209_1
# %bb.35:
	leaq	16(%rsp), %rdi
	movq	%r14, %rsi
	callq	_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	movzbl	16(%rsp), %eax
	andb	$1, %al
	addq	$208, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB209_1:
	.cfi_def_cfa_offset 240
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
	movq	(%r14), %rax
	movq	8(%rax), %rsi
.Ltmp3244:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2ENS_6handleE
.Ltmp3245:
# %bb.2:
.Ltmp3247:
	leaq	80(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
.Ltmp3248:
# %bb.3:
.Ltmp3250:
	leaq	.L.str.47(%rip), %rsi
	leaq	112(%rsp), %rdi
	leaq	80(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp3251:
# %bb.4:
.Ltmp3253:
	leaq	.L.str.48(%rip), %rdx
	leaq	144(%rsp), %rdi
	leaq	112(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3254:
# %bb.5:
	movq	_ZTIb@GOTPCREL(%rip), %rax
	movq	8(%rax), %rax
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
.Ltmp3256:
	leaq	48(%rsp), %rdi
	callq	_ZN8pybind116detail13clean_type_idB5cxx11EPKc
.Ltmp3257:
# %bb.6:                                # %_ZN8pybind11L7type_idIbEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv.exit
.Ltmp3259:
	leaq	176(%rsp), %rdi
	leaq	144(%rsp), %rsi
	leaq	48(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp3260:
# %bb.7:
.Ltmp3262:
	leaq	.L.str.49(%rip), %rdx
	leaq	16(%rsp), %rdi
	leaq	176(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3263:
# %bb.8:
	movb	$1, %bpl
.Ltmp3265:
	leaq	16(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp3266:
# %bb.9:
	leaq	_ZTVN8pybind1110cast_errorE+16(%rip), %rax
	movq	%rax, (%rbx)
	xorl	%ebp, %ebp
.Ltmp3267:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp3268:
# %bb.33:
.LBB209_17:
.Ltmp3269:
	movq	%rax, %r14
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB209_18
# %bb.19:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB209_20
.LBB209_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit31
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB209_22
.LBB209_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit34
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB209_24
.LBB209_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB209_26
.LBB209_27:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB209_28
	jmp	.LBB209_29
.LBB209_18:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB209_21
	jmp	.LBB209_20
.LBB209_16:
.Ltmp3264:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB209_21
.LBB209_20:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i29
	movq	192(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB209_23
	jmp	.LBB209_22
.LBB209_15:
.Ltmp3261:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB209_23
.LBB209_22:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i32
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB209_25
	jmp	.LBB209_24
.LBB209_14:
.Ltmp3258:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB209_25
.LBB209_24:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	movq	160(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB209_27
	jmp	.LBB209_26
.LBB209_13:
.Ltmp3255:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB209_27
.LBB209_26:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	movq	128(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB209_28
	jmp	.LBB209_29
.LBB209_12:
.Ltmp3252:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB209_29
.LBB209_28:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i41
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB209_29
.LBB209_11:
.Ltmp3249:
	movq	%rax, %r14
	movb	$1, %bpl
.LBB209_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit43
.Ltmp3270:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3271:
# %bb.30:                               # %_ZN8pybind116objectD2Ev.exit
	testb	%bpl, %bpl
	jne	.LBB209_31
	jmp	.LBB209_32
.LBB209_34:
.Ltmp3272:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB209_10:                             # %_ZN8pybind116objectD2Ev.exit.thread
.Ltmp3246:
	movq	%rax, %r14
.LBB209_31:
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
.LBB209_32:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end209:
	.size	_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE, .Lfunc_end209-_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,"aG",@progbits,_ZN8pybind114moveIbEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,comdat
	.p2align	2, 0x0
GCC_except_table209:
.Lexception116:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase86-.Lttbaseref86
.Lttbaseref86:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end116-.Lcst_begin116
.Lcst_begin116:
	.uleb128 .Lfunc_begin116-.Lfunc_begin116 # >> Call Site 1 <<
	.uleb128 .Ltmp3244-.Lfunc_begin116      #   Call between .Lfunc_begin116 and .Ltmp3244
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3244-.Lfunc_begin116      # >> Call Site 2 <<
	.uleb128 .Ltmp3245-.Ltmp3244            #   Call between .Ltmp3244 and .Ltmp3245
	.uleb128 .Ltmp3246-.Lfunc_begin116      #     jumps to .Ltmp3246
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3247-.Lfunc_begin116      # >> Call Site 3 <<
	.uleb128 .Ltmp3248-.Ltmp3247            #   Call between .Ltmp3247 and .Ltmp3248
	.uleb128 .Ltmp3249-.Lfunc_begin116      #     jumps to .Ltmp3249
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3250-.Lfunc_begin116      # >> Call Site 4 <<
	.uleb128 .Ltmp3251-.Ltmp3250            #   Call between .Ltmp3250 and .Ltmp3251
	.uleb128 .Ltmp3252-.Lfunc_begin116      #     jumps to .Ltmp3252
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3253-.Lfunc_begin116      # >> Call Site 5 <<
	.uleb128 .Ltmp3254-.Ltmp3253            #   Call between .Ltmp3253 and .Ltmp3254
	.uleb128 .Ltmp3255-.Lfunc_begin116      #     jumps to .Ltmp3255
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3256-.Lfunc_begin116      # >> Call Site 6 <<
	.uleb128 .Ltmp3257-.Ltmp3256            #   Call between .Ltmp3256 and .Ltmp3257
	.uleb128 .Ltmp3258-.Lfunc_begin116      #     jumps to .Ltmp3258
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3259-.Lfunc_begin116      # >> Call Site 7 <<
	.uleb128 .Ltmp3260-.Ltmp3259            #   Call between .Ltmp3259 and .Ltmp3260
	.uleb128 .Ltmp3261-.Lfunc_begin116      #     jumps to .Ltmp3261
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3262-.Lfunc_begin116      # >> Call Site 8 <<
	.uleb128 .Ltmp3263-.Ltmp3262            #   Call between .Ltmp3262 and .Ltmp3263
	.uleb128 .Ltmp3264-.Lfunc_begin116      #     jumps to .Ltmp3264
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3265-.Lfunc_begin116      # >> Call Site 9 <<
	.uleb128 .Ltmp3268-.Ltmp3265            #   Call between .Ltmp3265 and .Ltmp3268
	.uleb128 .Ltmp3269-.Lfunc_begin116      #     jumps to .Ltmp3269
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3270-.Lfunc_begin116      # >> Call Site 10 <<
	.uleb128 .Ltmp3271-.Ltmp3270            #   Call between .Ltmp3270 and .Ltmp3271
	.uleb128 .Ltmp3272-.Lfunc_begin116      #     jumps to .Ltmp3272
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3271-.Lfunc_begin116      # >> Call Site 11 <<
	.uleb128 .Lfunc_end209-.Ltmp3271        #   Call between .Ltmp3271 and .Lfunc_end209
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end116:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase86:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,"axG",@progbits,_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,comdat
	.hidden	_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE # -- Begin function _ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	.weak	_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,@function
_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE: # @_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
.Lfunc_begin117:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception117
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$208, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	(%rsi), %rax
	testq	%rax, %rax
	je	.LBB210_10
# %bb.1:
	cmpq	_Py_TrueStruct@GOTPCREL(%rip), %rax
	je	.LBB210_2
# %bb.4:
	cmpq	_Py_FalseStruct@GOTPCREL(%rip), %rax
	sete	%cl
	cmpq	_Py_NoneStruct@GOTPCREL(%rip), %rax
	sete	%dl
	orb	%cl, %dl
	je	.LBB210_6
# %bb.5:
	xorl	%eax, %eax
	jmp	.LBB210_3
.LBB210_2:
	movb	$1, %al
	jmp	.LBB210_3
.LBB210_6:
	movq	%rsi, %rbx
	movq	8(%rax), %rcx
	movq	96(%rcx), %rcx
	testq	%rcx, %rcx
	je	.LBB210_9
# %bb.7:
	movq	72(%rcx), %rcx
	testq	%rcx, %rcx
	je	.LBB210_9
# %bb.8:
	movq	%rdi, %r14
	movq	%rax, %rdi
	callq	*%rcx
	movq	%r14, %rdi
	cmpl	$2, %eax
	jae	.LBB210_9
.LBB210_3:                              # %.thread25.i
	movb	%al, (%rdi)
	movq	%rdi, %rax
	addq	$208, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB210_9:                              # %.thread30.i
	.cfi_def_cfa_offset 240
	callq	PyErr_Clear@PLT
	movq	%rbx, %rsi
.LBB210_10:
	movl	$16, %edi
	movq	%rsi, %r14
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
	movq	(%r14), %rax
	movq	8(%rax), %rsi
.Ltmp3273:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2ENS_6handleE
.Ltmp3274:
# %bb.11:
.Ltmp3276:
	leaq	48(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
.Ltmp3277:
# %bb.12:
.Ltmp3279:
	leaq	.L.str.41(%rip), %rsi
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp3280:
# %bb.13:
.Ltmp3282:
	leaq	.L.str.42(%rip), %rdx
	leaq	112(%rsp), %rdi
	leaq	80(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3283:
# %bb.14:
	movq	_ZTIb@GOTPCREL(%rip), %rax
	movq	8(%rax), %rax
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
.Ltmp3285:
	leaq	16(%rsp), %rdi
	callq	_ZN8pybind116detail13clean_type_idB5cxx11EPKc
.Ltmp3286:
# %bb.15:                               # %_ZN8pybind11L7type_idIbEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv.exit
.Ltmp3288:
	leaq	144(%rsp), %rdi
	leaq	112(%rsp), %rsi
	leaq	16(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp3289:
# %bb.16:
.Ltmp3291:
	leaq	.L.str.43(%rip), %rdx
	leaq	176(%rsp), %rdi
	leaq	144(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3292:
# %bb.17:
	movb	$1, %bpl
.Ltmp3294:
	leaq	176(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp3295:
# %bb.18:
	leaq	_ZTVN8pybind1110cast_errorE+16(%rip), %rax
	movq	%rax, (%rbx)
	xorl	%ebp, %ebp
.Ltmp3296:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp3297:
# %bb.42:
.LBB210_26:
.Ltmp3298:
	movq	%rax, %r14
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB210_27
# %bb.28:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB210_29
.LBB210_30:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit32
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB210_31
.LBB210_32:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit35
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB210_33
.LBB210_34:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB210_35
.LBB210_36:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit41
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB210_37
	jmp	.LBB210_38
.LBB210_27:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	192(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB210_30
	jmp	.LBB210_29
.LBB210_25:
.Ltmp3293:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB210_30
.LBB210_29:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i30
	movq	160(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB210_32
	jmp	.LBB210_31
.LBB210_24:
.Ltmp3290:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB210_32
.LBB210_31:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i33
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB210_34
	jmp	.LBB210_33
.LBB210_23:
.Ltmp3287:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB210_34
.LBB210_33:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i36
	movq	128(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB210_36
	jmp	.LBB210_35
.LBB210_22:
.Ltmp3284:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB210_36
.LBB210_35:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i39
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB210_37
	jmp	.LBB210_38
.LBB210_21:
.Ltmp3281:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB210_38
.LBB210_37:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i42
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB210_38
.LBB210_20:
.Ltmp3278:
	movq	%rax, %r14
	movb	$1, %bpl
.LBB210_38:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit44
.Ltmp3299:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3300:
# %bb.39:                               # %_ZN8pybind116objectD2Ev.exit
	testb	%bpl, %bpl
	jne	.LBB210_40
	jmp	.LBB210_41
.LBB210_43:
.Ltmp3301:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB210_19:                             # %_ZN8pybind116objectD2Ev.exit.thread
.Ltmp3275:
	movq	%rax, %r14
.LBB210_40:
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
.LBB210_41:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end210:
	.size	_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE, .Lfunc_end210-_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,"aG",@progbits,_ZN8pybind116detail9load_typeIbvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,comdat
	.p2align	2, 0x0
GCC_except_table210:
.Lexception117:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase87-.Lttbaseref87
.Lttbaseref87:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end117-.Lcst_begin117
.Lcst_begin117:
	.uleb128 .Lfunc_begin117-.Lfunc_begin117 # >> Call Site 1 <<
	.uleb128 .Ltmp3273-.Lfunc_begin117      #   Call between .Lfunc_begin117 and .Ltmp3273
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3273-.Lfunc_begin117      # >> Call Site 2 <<
	.uleb128 .Ltmp3274-.Ltmp3273            #   Call between .Ltmp3273 and .Ltmp3274
	.uleb128 .Ltmp3275-.Lfunc_begin117      #     jumps to .Ltmp3275
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3276-.Lfunc_begin117      # >> Call Site 3 <<
	.uleb128 .Ltmp3277-.Ltmp3276            #   Call between .Ltmp3276 and .Ltmp3277
	.uleb128 .Ltmp3278-.Lfunc_begin117      #     jumps to .Ltmp3278
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3279-.Lfunc_begin117      # >> Call Site 4 <<
	.uleb128 .Ltmp3280-.Ltmp3279            #   Call between .Ltmp3279 and .Ltmp3280
	.uleb128 .Ltmp3281-.Lfunc_begin117      #     jumps to .Ltmp3281
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3282-.Lfunc_begin117      # >> Call Site 5 <<
	.uleb128 .Ltmp3283-.Ltmp3282            #   Call between .Ltmp3282 and .Ltmp3283
	.uleb128 .Ltmp3284-.Lfunc_begin117      #     jumps to .Ltmp3284
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3285-.Lfunc_begin117      # >> Call Site 6 <<
	.uleb128 .Ltmp3286-.Ltmp3285            #   Call between .Ltmp3285 and .Ltmp3286
	.uleb128 .Ltmp3287-.Lfunc_begin117      #     jumps to .Ltmp3287
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3288-.Lfunc_begin117      # >> Call Site 7 <<
	.uleb128 .Ltmp3289-.Ltmp3288            #   Call between .Ltmp3288 and .Ltmp3289
	.uleb128 .Ltmp3290-.Lfunc_begin117      #     jumps to .Ltmp3290
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3291-.Lfunc_begin117      # >> Call Site 8 <<
	.uleb128 .Ltmp3292-.Ltmp3291            #   Call between .Ltmp3291 and .Ltmp3292
	.uleb128 .Ltmp3293-.Lfunc_begin117      #     jumps to .Ltmp3293
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3294-.Lfunc_begin117      # >> Call Site 9 <<
	.uleb128 .Ltmp3297-.Ltmp3294            #   Call between .Ltmp3294 and .Ltmp3297
	.uleb128 .Ltmp3298-.Lfunc_begin117      #     jumps to .Ltmp3298
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3299-.Lfunc_begin117      # >> Call Site 10 <<
	.uleb128 .Ltmp3300-.Ltmp3299            #   Call between .Ltmp3299 and .Ltmp3300
	.uleb128 .Ltmp3301-.Lfunc_begin117      #     jumps to .Ltmp3301
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3300-.Lfunc_begin117      # >> Call Site 11 <<
	.uleb128 .Lfunc_end210-.Ltmp3300        #   Call between .Ltmp3300 and .Lfunc_end210
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end117:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase87:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind115tupleC2EONS_6objectE,"axG",@progbits,_ZN8pybind115tupleC2EONS_6objectE,comdat
	.hidden	_ZN8pybind115tupleC2EONS_6objectE # -- Begin function _ZN8pybind115tupleC2EONS_6objectE
	.weak	_ZN8pybind115tupleC2EONS_6objectE
	.p2align	4, 0x90
	.type	_ZN8pybind115tupleC2EONS_6objectE,@function
_ZN8pybind115tupleC2EONS_6objectE:      # @_ZN8pybind115tupleC2EONS_6objectE
.Lfunc_begin118:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception118
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	(%rsi), %rdi
	testq	%rdi, %rdi
	je	.LBB211_4
# %bb.1:                                # %_ZN8pybind115tuple6check_ENS_6handleE.exit
	movq	8(%rdi), %rax
	testb	$4, 171(%rax)
	jne	.LBB211_2
.LBB211_4:                              # %_ZN8pybind115tuple6check_ENS_6handleE.exit.thread
	callq	PySequence_Tuple@PLT
	movq	%rax, (%rbx)
	testq	%rax, %rax
	je	.LBB211_5
# %bb.3:
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB211_2:                              # %.thread
	.cfi_def_cfa_offset 32
	movq	$0, (%rsi)
	movq	%rdi, (%rbx)
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB211_5:
	.cfi_def_cfa_offset 32
	movl	$24, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %r15
.Ltmp3302:
	movq	%rax, %rdi
	callq	_ZN8pybind1117error_already_setC2Ev
.Ltmp3303:
# %bb.6:
.Ltmp3305:
	leaq	_ZTIN8pybind1117error_already_setE(%rip), %rsi
	leaq	_ZN8pybind1117error_already_setD2Ev(%rip), %rdx
	movq	%r15, %rdi
	callq	__cxa_throw@PLT
.Ltmp3306:
# %bb.11:
.LBB211_7:
.Ltmp3307:
	movq	%rax, %r14
	jmp	.LBB211_9
.LBB211_8:
.Ltmp3304:
	movq	%rax, %r14
	movq	%r15, %rdi
	callq	__cxa_free_exception@PLT
.LBB211_9:
.Ltmp3308:
	movq	%rbx, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3309:
# %bb.10:                               # %_ZN8pybind116objectD2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB211_12:
.Ltmp3310:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end211:
	.size	_ZN8pybind115tupleC2EONS_6objectE, .Lfunc_end211-_ZN8pybind115tupleC2EONS_6objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind115tupleC2EONS_6objectE,"aG",@progbits,_ZN8pybind115tupleC2EONS_6objectE,comdat
	.p2align	2, 0x0
GCC_except_table211:
.Lexception118:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase88-.Lttbaseref88
.Lttbaseref88:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end118-.Lcst_begin118
.Lcst_begin118:
	.uleb128 .Lfunc_begin118-.Lfunc_begin118 # >> Call Site 1 <<
	.uleb128 .Ltmp3302-.Lfunc_begin118      #   Call between .Lfunc_begin118 and .Ltmp3302
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3302-.Lfunc_begin118      # >> Call Site 2 <<
	.uleb128 .Ltmp3303-.Ltmp3302            #   Call between .Ltmp3302 and .Ltmp3303
	.uleb128 .Ltmp3304-.Lfunc_begin118      #     jumps to .Ltmp3304
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3305-.Lfunc_begin118      # >> Call Site 3 <<
	.uleb128 .Ltmp3306-.Ltmp3305            #   Call between .Ltmp3305 and .Ltmp3306
	.uleb128 .Ltmp3307-.Lfunc_begin118      #     jumps to .Ltmp3307
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3306-.Lfunc_begin118      # >> Call Site 4 <<
	.uleb128 .Ltmp3308-.Ltmp3306            #   Call between .Ltmp3306 and .Ltmp3308
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3308-.Lfunc_begin118      # >> Call Site 5 <<
	.uleb128 .Ltmp3309-.Ltmp3308            #   Call between .Ltmp3308 and .Ltmp3309
	.uleb128 .Ltmp3310-.Lfunc_begin118      #     jumps to .Ltmp3310
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3309-.Lfunc_begin118      # >> Call Site 6 <<
	.uleb128 .Lfunc_end211-.Ltmp3309        #   Call between .Ltmp3309 and .Lfunc_end211
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end118:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase88:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,"axG",@progbits,_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,comdat
	.hidden	_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE # -- Begin function _ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
	.weak	_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
	.p2align	4, 0x90
	.type	_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,@function
_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE: # @_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
.Lfunc_begin119:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception119
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$208, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	(%rdi), %rax
	cmpq	$2, (%rax)
	jge	.LBB212_1
# %bb.35:
	leaq	16(%rsp), %rdi
	movq	%r14, %rsi
	callq	_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	movl	16(%rsp), %eax
	addq	$208, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB212_1:
	.cfi_def_cfa_offset 240
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
	movq	(%r14), %rax
	movq	8(%rax), %rsi
.Ltmp3311:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2ENS_6handleE
.Ltmp3312:
# %bb.2:
.Ltmp3314:
	leaq	80(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
.Ltmp3315:
# %bb.3:
.Ltmp3317:
	leaq	.L.str.47(%rip), %rsi
	leaq	112(%rsp), %rdi
	leaq	80(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp3318:
# %bb.4:
.Ltmp3320:
	leaq	.L.str.48(%rip), %rdx
	leaq	144(%rsp), %rdi
	leaq	112(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3321:
# %bb.5:
	movq	_ZTIi@GOTPCREL(%rip), %rax
	movq	8(%rax), %rax
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
.Ltmp3323:
	leaq	48(%rsp), %rdi
	callq	_ZN8pybind116detail13clean_type_idB5cxx11EPKc
.Ltmp3324:
# %bb.6:                                # %_ZN8pybind11L7type_idIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv.exit
.Ltmp3326:
	leaq	176(%rsp), %rdi
	leaq	144(%rsp), %rsi
	leaq	48(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp3327:
# %bb.7:
.Ltmp3329:
	leaq	.L.str.49(%rip), %rdx
	leaq	16(%rsp), %rdi
	leaq	176(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3330:
# %bb.8:
	movb	$1, %bpl
.Ltmp3332:
	leaq	16(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp3333:
# %bb.9:
	leaq	_ZTVN8pybind1110cast_errorE+16(%rip), %rax
	movq	%rax, (%rbx)
	xorl	%ebp, %ebp
.Ltmp3334:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp3335:
# %bb.33:
.LBB212_17:
.Ltmp3336:
	movq	%rax, %r14
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB212_18
# %bb.19:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB212_20
.LBB212_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit31
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB212_22
.LBB212_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit34
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB212_24
.LBB212_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB212_26
.LBB212_27:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB212_28
	jmp	.LBB212_29
.LBB212_18:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB212_21
	jmp	.LBB212_20
.LBB212_16:
.Ltmp3331:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB212_21
.LBB212_20:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i29
	movq	192(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB212_23
	jmp	.LBB212_22
.LBB212_15:
.Ltmp3328:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB212_23
.LBB212_22:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i32
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB212_25
	jmp	.LBB212_24
.LBB212_14:
.Ltmp3325:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB212_25
.LBB212_24:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	movq	160(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB212_27
	jmp	.LBB212_26
.LBB212_13:
.Ltmp3322:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB212_27
.LBB212_26:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	movq	128(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB212_28
	jmp	.LBB212_29
.LBB212_12:
.Ltmp3319:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB212_29
.LBB212_28:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i41
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB212_29
.LBB212_11:
.Ltmp3316:
	movq	%rax, %r14
	movb	$1, %bpl
.LBB212_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit43
.Ltmp3337:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3338:
# %bb.30:                               # %_ZN8pybind116objectD2Ev.exit
	testb	%bpl, %bpl
	jne	.LBB212_31
	jmp	.LBB212_32
.LBB212_34:
.Ltmp3339:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB212_10:                             # %_ZN8pybind116objectD2Ev.exit.thread
.Ltmp3313:
	movq	%rax, %r14
.LBB212_31:
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
.LBB212_32:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end212:
	.size	_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE, .Lfunc_end212-_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,"aG",@progbits,_ZN8pybind114moveIiEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,comdat
	.p2align	2, 0x0
GCC_except_table212:
.Lexception119:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase89-.Lttbaseref89
.Lttbaseref89:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end119-.Lcst_begin119
.Lcst_begin119:
	.uleb128 .Lfunc_begin119-.Lfunc_begin119 # >> Call Site 1 <<
	.uleb128 .Ltmp3311-.Lfunc_begin119      #   Call between .Lfunc_begin119 and .Ltmp3311
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3311-.Lfunc_begin119      # >> Call Site 2 <<
	.uleb128 .Ltmp3312-.Ltmp3311            #   Call between .Ltmp3311 and .Ltmp3312
	.uleb128 .Ltmp3313-.Lfunc_begin119      #     jumps to .Ltmp3313
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3314-.Lfunc_begin119      # >> Call Site 3 <<
	.uleb128 .Ltmp3315-.Ltmp3314            #   Call between .Ltmp3314 and .Ltmp3315
	.uleb128 .Ltmp3316-.Lfunc_begin119      #     jumps to .Ltmp3316
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3317-.Lfunc_begin119      # >> Call Site 4 <<
	.uleb128 .Ltmp3318-.Ltmp3317            #   Call between .Ltmp3317 and .Ltmp3318
	.uleb128 .Ltmp3319-.Lfunc_begin119      #     jumps to .Ltmp3319
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3320-.Lfunc_begin119      # >> Call Site 5 <<
	.uleb128 .Ltmp3321-.Ltmp3320            #   Call between .Ltmp3320 and .Ltmp3321
	.uleb128 .Ltmp3322-.Lfunc_begin119      #     jumps to .Ltmp3322
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3323-.Lfunc_begin119      # >> Call Site 6 <<
	.uleb128 .Ltmp3324-.Ltmp3323            #   Call between .Ltmp3323 and .Ltmp3324
	.uleb128 .Ltmp3325-.Lfunc_begin119      #     jumps to .Ltmp3325
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3326-.Lfunc_begin119      # >> Call Site 7 <<
	.uleb128 .Ltmp3327-.Ltmp3326            #   Call between .Ltmp3326 and .Ltmp3327
	.uleb128 .Ltmp3328-.Lfunc_begin119      #     jumps to .Ltmp3328
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3329-.Lfunc_begin119      # >> Call Site 8 <<
	.uleb128 .Ltmp3330-.Ltmp3329            #   Call between .Ltmp3329 and .Ltmp3330
	.uleb128 .Ltmp3331-.Lfunc_begin119      #     jumps to .Ltmp3331
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3332-.Lfunc_begin119      # >> Call Site 9 <<
	.uleb128 .Ltmp3335-.Ltmp3332            #   Call between .Ltmp3332 and .Ltmp3335
	.uleb128 .Ltmp3336-.Lfunc_begin119      #     jumps to .Ltmp3336
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3337-.Lfunc_begin119      # >> Call Site 10 <<
	.uleb128 .Ltmp3338-.Ltmp3337            #   Call between .Ltmp3337 and .Ltmp3338
	.uleb128 .Ltmp3339-.Lfunc_begin119      #     jumps to .Ltmp3339
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3338-.Lfunc_begin119      # >> Call Site 11 <<
	.uleb128 .Lfunc_end212-.Ltmp3338        #   Call between .Ltmp3338 and .Lfunc_end212
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end119:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase89:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,"axG",@progbits,_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,comdat
	.hidden	_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE # -- Begin function _ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	.weak	_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,@function
_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE: # @_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
.Lfunc_begin120:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception120
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$208, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	(%rsi), %rsi
	movl	$1, %edx
	callq	_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb
	testb	%al, %al
	je	.LBB213_1
# %bb.35:
	movq	%rbx, %rax
	addq	$208, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB213_1:
	.cfi_def_cfa_offset 240
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
	movq	(%r14), %rax
	movq	8(%rax), %rsi
.Ltmp3340:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2ENS_6handleE
.Ltmp3341:
# %bb.2:
.Ltmp3343:
	leaq	48(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
.Ltmp3344:
# %bb.3:
.Ltmp3346:
	leaq	.L.str.41(%rip), %rsi
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp3347:
# %bb.4:
.Ltmp3349:
	leaq	.L.str.42(%rip), %rdx
	leaq	112(%rsp), %rdi
	leaq	80(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3350:
# %bb.5:
	movq	_ZTIi@GOTPCREL(%rip), %rax
	movq	8(%rax), %rax
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
.Ltmp3352:
	leaq	16(%rsp), %rdi
	callq	_ZN8pybind116detail13clean_type_idB5cxx11EPKc
.Ltmp3353:
# %bb.6:                                # %_ZN8pybind11L7type_idIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv.exit
.Ltmp3355:
	leaq	144(%rsp), %rdi
	leaq	112(%rsp), %rsi
	leaq	16(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp3356:
# %bb.7:
.Ltmp3358:
	leaq	.L.str.43(%rip), %rdx
	leaq	176(%rsp), %rdi
	leaq	144(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3359:
# %bb.8:
	movb	$1, %bpl
.Ltmp3361:
	leaq	176(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp3362:
# %bb.9:
	leaq	_ZTVN8pybind1110cast_errorE+16(%rip), %rax
	movq	%rax, (%rbx)
	xorl	%ebp, %ebp
.Ltmp3363:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp3364:
# %bb.33:
.LBB213_17:
.Ltmp3365:
	movq	%rax, %r14
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB213_18
# %bb.19:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB213_20
.LBB213_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit31
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB213_22
.LBB213_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit34
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB213_24
.LBB213_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB213_26
.LBB213_27:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB213_28
	jmp	.LBB213_29
.LBB213_18:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	192(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB213_21
	jmp	.LBB213_20
.LBB213_16:
.Ltmp3360:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB213_21
.LBB213_20:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i29
	movq	160(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB213_23
	jmp	.LBB213_22
.LBB213_15:
.Ltmp3357:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB213_23
.LBB213_22:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i32
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB213_25
	jmp	.LBB213_24
.LBB213_14:
.Ltmp3354:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB213_25
.LBB213_24:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	movq	128(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB213_27
	jmp	.LBB213_26
.LBB213_13:
.Ltmp3351:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB213_27
.LBB213_26:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB213_28
	jmp	.LBB213_29
.LBB213_12:
.Ltmp3348:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB213_29
.LBB213_28:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i41
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB213_29
.LBB213_11:
.Ltmp3345:
	movq	%rax, %r14
	movb	$1, %bpl
.LBB213_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit43
.Ltmp3366:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3367:
# %bb.30:                               # %_ZN8pybind116objectD2Ev.exit
	testb	%bpl, %bpl
	jne	.LBB213_31
	jmp	.LBB213_32
.LBB213_34:
.Ltmp3368:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB213_10:                             # %_ZN8pybind116objectD2Ev.exit.thread
.Ltmp3342:
	movq	%rax, %r14
.LBB213_31:
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
.LBB213_32:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end213:
	.size	_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE, .Lfunc_end213-_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,"aG",@progbits,_ZN8pybind116detail9load_typeIivEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,comdat
	.p2align	2, 0x0
GCC_except_table213:
.Lexception120:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase90-.Lttbaseref90
.Lttbaseref90:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end120-.Lcst_begin120
.Lcst_begin120:
	.uleb128 .Lfunc_begin120-.Lfunc_begin120 # >> Call Site 1 <<
	.uleb128 .Ltmp3340-.Lfunc_begin120      #   Call between .Lfunc_begin120 and .Ltmp3340
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3340-.Lfunc_begin120      # >> Call Site 2 <<
	.uleb128 .Ltmp3341-.Ltmp3340            #   Call between .Ltmp3340 and .Ltmp3341
	.uleb128 .Ltmp3342-.Lfunc_begin120      #     jumps to .Ltmp3342
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3343-.Lfunc_begin120      # >> Call Site 3 <<
	.uleb128 .Ltmp3344-.Ltmp3343            #   Call between .Ltmp3343 and .Ltmp3344
	.uleb128 .Ltmp3345-.Lfunc_begin120      #     jumps to .Ltmp3345
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3346-.Lfunc_begin120      # >> Call Site 4 <<
	.uleb128 .Ltmp3347-.Ltmp3346            #   Call between .Ltmp3346 and .Ltmp3347
	.uleb128 .Ltmp3348-.Lfunc_begin120      #     jumps to .Ltmp3348
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3349-.Lfunc_begin120      # >> Call Site 5 <<
	.uleb128 .Ltmp3350-.Ltmp3349            #   Call between .Ltmp3349 and .Ltmp3350
	.uleb128 .Ltmp3351-.Lfunc_begin120      #     jumps to .Ltmp3351
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3352-.Lfunc_begin120      # >> Call Site 6 <<
	.uleb128 .Ltmp3353-.Ltmp3352            #   Call between .Ltmp3352 and .Ltmp3353
	.uleb128 .Ltmp3354-.Lfunc_begin120      #     jumps to .Ltmp3354
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3355-.Lfunc_begin120      # >> Call Site 7 <<
	.uleb128 .Ltmp3356-.Ltmp3355            #   Call between .Ltmp3355 and .Ltmp3356
	.uleb128 .Ltmp3357-.Lfunc_begin120      #     jumps to .Ltmp3357
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3358-.Lfunc_begin120      # >> Call Site 8 <<
	.uleb128 .Ltmp3359-.Ltmp3358            #   Call between .Ltmp3358 and .Ltmp3359
	.uleb128 .Ltmp3360-.Lfunc_begin120      #     jumps to .Ltmp3360
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3361-.Lfunc_begin120      # >> Call Site 9 <<
	.uleb128 .Ltmp3364-.Ltmp3361            #   Call between .Ltmp3361 and .Ltmp3364
	.uleb128 .Ltmp3365-.Lfunc_begin120      #     jumps to .Ltmp3365
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3366-.Lfunc_begin120      # >> Call Site 10 <<
	.uleb128 .Ltmp3367-.Ltmp3366            #   Call between .Ltmp3366 and .Ltmp3367
	.uleb128 .Ltmp3368-.Lfunc_begin120      #     jumps to .Ltmp3368
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3367-.Lfunc_begin120      # >> Call Site 11 <<
	.uleb128 .Lfunc_end213-.Ltmp3367        #   Call between .Ltmp3367 and .Lfunc_end213
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end120:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase90:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail11type_casterIivE4loadENS_6handleEb,"axG",@progbits,_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb,comdat
	.hidden	_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb # -- Begin function _ZN8pybind116detail11type_casterIivE4loadENS_6handleEb
	.weak	_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb
	.p2align	4, 0x90
	.type	_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb,@function
_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb: # @_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb
.Lfunc_begin121:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception121
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	testq	%rsi, %rsi
	je	.LBB214_20
# %bb.1:
	movq	%rsi, %r14
	movq	8(%rsi), %rax
	cmpq	PyFloat_Type@GOTPCREL(%rip), %rax
	je	.LBB214_20
# %bb.2:                                # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit
	movl	%edx, %ebp
	movq	%rdi, %rbx
	movq	PyFloat_Type@GOTPCREL(%rip), %rsi
	movq	%rax, %rdi
	callq	PyType_IsSubtype@PLT
	testl	%eax, %eax
	je	.LBB214_6
.LBB214_20:
	xorl	%ebx, %ebx
.LBB214_21:                             # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.thread
	movl	%ebx, %eax
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB214_6:
	.cfi_def_cfa_offset 64
	testb	%bpl, %bpl
	jne	.LBB214_9
# %bb.7:
	movq	8(%r14), %rax
	testb	$1, 171(%rax)
	jne	.LBB214_9
# %bb.8:
	movq	%r14, %rdi
	callq	PyIndex_Check@PLT
	testl	%eax, %eax
	je	.LBB214_20
.LBB214_9:
	movq	%r14, %rdi
	callq	PyLong_AsLong@PLT
	movq	%rax, %r15
	movb	$1, %r12b
	cmpq	$-1, %rax
	jne	.LBB214_11
# %bb.10:
	callq	PyErr_Occurred@PLT
	testq	%rax, %rax
	sete	%r12b
.LBB214_11:
	movslq	%r15d, %rax
	cmpq	%r15, %rax
	sete	%al
	testb	%r12b, %al
	je	.LBB214_13
# %bb.12:
	movl	%r15d, (%rbx)
	movb	$1, %bl
	jmp	.LBB214_21
.LBB214_13:
	callq	PyErr_Clear@PLT
	xorb	$1, %bpl
	orb	%bpl, %r12b
	jne	.LBB214_20
# %bb.15:
	movq	%r14, %rdi
	callq	PyNumber_Check@PLT
	testl	%eax, %eax
	je	.LBB214_20
# %bb.16:
	movq	%r14, %rdi
	callq	PyNumber_Long@PLT
	movq	%rax, %r14
	movq	%rax, 8(%rsp)
.Ltmp3369:
	callq	PyErr_Clear@PLT
.Ltmp3370:
# %bb.17:
.Ltmp3371:
	movq	%rbx, %rdi
	movq	%r14, %rsi
	xorl	%edx, %edx
	callq	_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb
.Ltmp3372:
# %bb.18:
.Ltmp3377:
	movl	%eax, %ebx
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3378:
	jmp	.LBB214_21
.LBB214_22:
.Ltmp3379:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB214_23:
.Ltmp3373:
	movq	%rax, %rbx
.Ltmp3374:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3375:
# %bb.24:                               # %_ZN8pybind116objectD2Ev.exit20
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB214_25:
.Ltmp3376:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end214:
	.size	_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb, .Lfunc_end214-_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail11type_casterIivE4loadENS_6handleEb,"aG",@progbits,_ZN8pybind116detail11type_casterIivE4loadENS_6handleEb,comdat
	.p2align	2, 0x0
GCC_except_table214:
.Lexception121:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase91-.Lttbaseref91
.Lttbaseref91:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end121-.Lcst_begin121
.Lcst_begin121:
	.uleb128 .Lfunc_begin121-.Lfunc_begin121 # >> Call Site 1 <<
	.uleb128 .Ltmp3369-.Lfunc_begin121      #   Call between .Lfunc_begin121 and .Ltmp3369
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3369-.Lfunc_begin121      # >> Call Site 2 <<
	.uleb128 .Ltmp3372-.Ltmp3369            #   Call between .Ltmp3369 and .Ltmp3372
	.uleb128 .Ltmp3373-.Lfunc_begin121      #     jumps to .Ltmp3373
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3377-.Lfunc_begin121      # >> Call Site 3 <<
	.uleb128 .Ltmp3378-.Ltmp3377            #   Call between .Ltmp3377 and .Ltmp3378
	.uleb128 .Ltmp3379-.Lfunc_begin121      #     jumps to .Ltmp3379
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3374-.Lfunc_begin121      # >> Call Site 4 <<
	.uleb128 .Ltmp3375-.Ltmp3374            #   Call between .Ltmp3374 and .Ltmp3375
	.uleb128 .Ltmp3376-.Lfunc_begin121      #     jumps to .Ltmp3376
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3375-.Lfunc_begin121      # >> Call Site 5 <<
	.uleb128 .Lfunc_end214-.Ltmp3375        #   Call between .Ltmp3375 and .Lfunc_end214
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end121:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase91:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,"axG",@progbits,_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,comdat
	.hidden	_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE # -- Begin function _ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
	.weak	_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
	.p2align	4, 0x90
	.type	_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,@function
_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE: # @_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
.Lfunc_begin122:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception122
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$208, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r14
	movq	(%rdi), %rax
	cmpq	$2, (%rax)
	jge	.LBB215_1
# %bb.35:
	leaq	16(%rsp), %rdi
	movq	%r14, %rsi
	callq	_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	movq	16(%rsp), %rax
	addq	$208, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB215_1:
	.cfi_def_cfa_offset 240
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
	movq	(%r14), %rax
	movq	8(%rax), %rsi
.Ltmp3380:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2ENS_6handleE
.Ltmp3381:
# %bb.2:
.Ltmp3383:
	leaq	80(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
.Ltmp3384:
# %bb.3:
.Ltmp3386:
	leaq	.L.str.47(%rip), %rsi
	leaq	112(%rsp), %rdi
	leaq	80(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp3387:
# %bb.4:
.Ltmp3389:
	leaq	.L.str.48(%rip), %rdx
	leaq	144(%rsp), %rdi
	leaq	112(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3390:
# %bb.5:
	movq	_ZTIm@GOTPCREL(%rip), %rax
	movq	8(%rax), %rax
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
.Ltmp3392:
	leaq	48(%rsp), %rdi
	callq	_ZN8pybind116detail13clean_type_idB5cxx11EPKc
.Ltmp3393:
# %bb.6:                                # %_ZN8pybind11L7type_idImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv.exit
.Ltmp3395:
	leaq	176(%rsp), %rdi
	leaq	144(%rsp), %rsi
	leaq	48(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp3396:
# %bb.7:
.Ltmp3398:
	leaq	.L.str.49(%rip), %rdx
	leaq	16(%rsp), %rdi
	leaq	176(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3399:
# %bb.8:
	movb	$1, %bpl
.Ltmp3401:
	leaq	16(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp3402:
# %bb.9:
	leaq	_ZTVN8pybind1110cast_errorE+16(%rip), %rax
	movq	%rax, (%rbx)
	xorl	%ebp, %ebp
.Ltmp3403:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp3404:
# %bb.33:
.LBB215_17:
.Ltmp3405:
	movq	%rax, %r14
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB215_18
# %bb.19:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB215_20
.LBB215_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit31
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB215_22
.LBB215_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit34
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB215_24
.LBB215_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB215_26
.LBB215_27:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB215_28
	jmp	.LBB215_29
.LBB215_18:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB215_21
	jmp	.LBB215_20
.LBB215_16:
.Ltmp3400:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB215_21
.LBB215_20:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i29
	movq	192(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB215_23
	jmp	.LBB215_22
.LBB215_15:
.Ltmp3397:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB215_23
.LBB215_22:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i32
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB215_25
	jmp	.LBB215_24
.LBB215_14:
.Ltmp3394:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB215_25
.LBB215_24:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	movq	160(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB215_27
	jmp	.LBB215_26
.LBB215_13:
.Ltmp3391:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB215_27
.LBB215_26:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	movq	128(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB215_28
	jmp	.LBB215_29
.LBB215_12:
.Ltmp3388:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB215_29
.LBB215_28:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i41
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB215_29
.LBB215_11:
.Ltmp3385:
	movq	%rax, %r14
	movb	$1, %bpl
.LBB215_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit43
.Ltmp3406:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3407:
# %bb.30:                               # %_ZN8pybind116objectD2Ev.exit
	testb	%bpl, %bpl
	jne	.LBB215_31
	jmp	.LBB215_32
.LBB215_34:
.Ltmp3408:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB215_10:                             # %_ZN8pybind116objectD2Ev.exit.thread
.Ltmp3382:
	movq	%rax, %r14
.LBB215_31:
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
.LBB215_32:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end215:
	.size	_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE, .Lfunc_end215-_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,"aG",@progbits,_ZN8pybind114moveImEENSt9enable_ifIXntsr6detail10move_neverIT_EE5valueES2_E4typeEONS_6objectE,comdat
	.p2align	2, 0x0
GCC_except_table215:
.Lexception122:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase92-.Lttbaseref92
.Lttbaseref92:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end122-.Lcst_begin122
.Lcst_begin122:
	.uleb128 .Lfunc_begin122-.Lfunc_begin122 # >> Call Site 1 <<
	.uleb128 .Ltmp3380-.Lfunc_begin122      #   Call between .Lfunc_begin122 and .Ltmp3380
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3380-.Lfunc_begin122      # >> Call Site 2 <<
	.uleb128 .Ltmp3381-.Ltmp3380            #   Call between .Ltmp3380 and .Ltmp3381
	.uleb128 .Ltmp3382-.Lfunc_begin122      #     jumps to .Ltmp3382
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3383-.Lfunc_begin122      # >> Call Site 3 <<
	.uleb128 .Ltmp3384-.Ltmp3383            #   Call between .Ltmp3383 and .Ltmp3384
	.uleb128 .Ltmp3385-.Lfunc_begin122      #     jumps to .Ltmp3385
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3386-.Lfunc_begin122      # >> Call Site 4 <<
	.uleb128 .Ltmp3387-.Ltmp3386            #   Call between .Ltmp3386 and .Ltmp3387
	.uleb128 .Ltmp3388-.Lfunc_begin122      #     jumps to .Ltmp3388
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3389-.Lfunc_begin122      # >> Call Site 5 <<
	.uleb128 .Ltmp3390-.Ltmp3389            #   Call between .Ltmp3389 and .Ltmp3390
	.uleb128 .Ltmp3391-.Lfunc_begin122      #     jumps to .Ltmp3391
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3392-.Lfunc_begin122      # >> Call Site 6 <<
	.uleb128 .Ltmp3393-.Ltmp3392            #   Call between .Ltmp3392 and .Ltmp3393
	.uleb128 .Ltmp3394-.Lfunc_begin122      #     jumps to .Ltmp3394
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3395-.Lfunc_begin122      # >> Call Site 7 <<
	.uleb128 .Ltmp3396-.Ltmp3395            #   Call between .Ltmp3395 and .Ltmp3396
	.uleb128 .Ltmp3397-.Lfunc_begin122      #     jumps to .Ltmp3397
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3398-.Lfunc_begin122      # >> Call Site 8 <<
	.uleb128 .Ltmp3399-.Ltmp3398            #   Call between .Ltmp3398 and .Ltmp3399
	.uleb128 .Ltmp3400-.Lfunc_begin122      #     jumps to .Ltmp3400
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3401-.Lfunc_begin122      # >> Call Site 9 <<
	.uleb128 .Ltmp3404-.Ltmp3401            #   Call between .Ltmp3401 and .Ltmp3404
	.uleb128 .Ltmp3405-.Lfunc_begin122      #     jumps to .Ltmp3405
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3406-.Lfunc_begin122      # >> Call Site 10 <<
	.uleb128 .Ltmp3407-.Ltmp3406            #   Call between .Ltmp3406 and .Ltmp3407
	.uleb128 .Ltmp3408-.Lfunc_begin122      #     jumps to .Ltmp3408
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3407-.Lfunc_begin122      # >> Call Site 11 <<
	.uleb128 .Lfunc_end215-.Ltmp3407        #   Call between .Ltmp3407 and .Lfunc_end215
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end122:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase92:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,"axG",@progbits,_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,comdat
	.hidden	_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE # -- Begin function _ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	.weak	_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	.p2align	4, 0x90
	.type	_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,@function
_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE: # @_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
.Lfunc_begin123:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception123
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$208, %rsp
	.cfi_def_cfa_offset 240
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	(%rsi), %rsi
	movl	$1, %edx
	callq	_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb
	testb	%al, %al
	je	.LBB216_1
# %bb.35:
	movq	%rbx, %rax
	addq	$208, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB216_1:
	.cfi_def_cfa_offset 240
	movl	$16, %edi
	callq	__cxa_allocate_exception@PLT
	movq	%rax, %rbx
	movq	(%r14), %rax
	movq	8(%rax), %rsi
.Ltmp3409:
	leaq	8(%rsp), %rdi
	callq	_ZN8pybind113strC2ENS_6handleE
.Ltmp3410:
# %bb.2:
.Ltmp3412:
	leaq	48(%rsp), %rdi
	leaq	8(%rsp), %rsi
	callq	_ZNO8pybind116object4castINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET_v
.Ltmp3413:
# %bb.3:
.Ltmp3415:
	leaq	.L.str.41(%rip), %rsi
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_@PLT
.Ltmp3416:
# %bb.4:
.Ltmp3418:
	leaq	.L.str.42(%rip), %rdx
	leaq	112(%rsp), %rdi
	leaq	80(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3419:
# %bb.5:
	movq	_ZTIm@GOTPCREL(%rip), %rax
	movq	8(%rax), %rax
	xorl	%esi, %esi
	cmpb	$42, (%rax)
	sete	%sil
	addq	%rax, %rsi
.Ltmp3421:
	leaq	16(%rsp), %rdi
	callq	_ZN8pybind116detail13clean_type_idB5cxx11EPKc
.Ltmp3422:
# %bb.6:                                # %_ZN8pybind11L7type_idImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv.exit
.Ltmp3424:
	leaq	144(%rsp), %rdi
	leaq	112(%rsp), %rsi
	leaq	16(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_@PLT
.Ltmp3425:
# %bb.7:
.Ltmp3427:
	leaq	.L.str.43(%rip), %rdx
	leaq	176(%rsp), %rdi
	leaq	144(%rsp), %rsi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@PLT
.Ltmp3428:
# %bb.8:
	movb	$1, %bpl
.Ltmp3430:
	leaq	176(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@PLT
.Ltmp3431:
# %bb.9:
	leaq	_ZTVN8pybind1110cast_errorE+16(%rip), %rax
	movq	%rax, (%rbx)
	xorl	%ebp, %ebp
.Ltmp3432:
	leaq	_ZTIN8pybind1110cast_errorE(%rip), %rsi
	movq	_ZNSt13runtime_errorD2Ev@GOTPCREL(%rip), %rdx
	movq	%rbx, %rdi
	callq	__cxa_throw@PLT
.Ltmp3433:
# %bb.33:
.LBB216_17:
.Ltmp3434:
	movq	%rax, %r14
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB216_18
# %bb.19:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB216_20
.LBB216_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit31
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB216_22
.LBB216_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit34
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB216_24
.LBB216_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB216_26
.LBB216_27:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB216_28
	jmp	.LBB216_29
.LBB216_18:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i
	movq	192(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB216_21
	jmp	.LBB216_20
.LBB216_16:
.Ltmp3429:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB216_21
.LBB216_20:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i29
	movq	160(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB216_23
	jmp	.LBB216_22
.LBB216_15:
.Ltmp3426:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB216_23
.LBB216_22:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i32
	movq	32(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB216_25
	jmp	.LBB216_24
.LBB216_14:
.Ltmp3423:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB216_25
.LBB216_24:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i35
	movq	128(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB216_27
	jmp	.LBB216_26
.LBB216_13:
.Ltmp3420:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB216_27
.LBB216_26:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i38
	movq	96(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB216_28
	jmp	.LBB216_29
.LBB216_12:
.Ltmp3417:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB216_29
.LBB216_28:                             # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv.exit.i.i41
	movq	64(%rsp), %rsi
	incq	%rsi
	callq	_ZdlPvm@PLT
	jmp	.LBB216_29
.LBB216_11:
.Ltmp3414:
	movq	%rax, %r14
	movb	$1, %bpl
.LBB216_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit43
.Ltmp3435:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3436:
# %bb.30:                               # %_ZN8pybind116objectD2Ev.exit
	testb	%bpl, %bpl
	jne	.LBB216_31
	jmp	.LBB216_32
.LBB216_34:
.Ltmp3437:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB216_10:                             # %_ZN8pybind116objectD2Ev.exit.thread
.Ltmp3411:
	movq	%rax, %r14
.LBB216_31:
	movq	%rbx, %rdi
	callq	__cxa_free_exception@PLT
.LBB216_32:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end216:
	.size	_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE, .Lfunc_end216-_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,"aG",@progbits,_ZN8pybind116detail9load_typeImvEERNS0_11type_casterIT_T0_EES6_RKNS_6handleE,comdat
	.p2align	2, 0x0
GCC_except_table216:
.Lexception123:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase93-.Lttbaseref93
.Lttbaseref93:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end123-.Lcst_begin123
.Lcst_begin123:
	.uleb128 .Lfunc_begin123-.Lfunc_begin123 # >> Call Site 1 <<
	.uleb128 .Ltmp3409-.Lfunc_begin123      #   Call between .Lfunc_begin123 and .Ltmp3409
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3409-.Lfunc_begin123      # >> Call Site 2 <<
	.uleb128 .Ltmp3410-.Ltmp3409            #   Call between .Ltmp3409 and .Ltmp3410
	.uleb128 .Ltmp3411-.Lfunc_begin123      #     jumps to .Ltmp3411
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3412-.Lfunc_begin123      # >> Call Site 3 <<
	.uleb128 .Ltmp3413-.Ltmp3412            #   Call between .Ltmp3412 and .Ltmp3413
	.uleb128 .Ltmp3414-.Lfunc_begin123      #     jumps to .Ltmp3414
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3415-.Lfunc_begin123      # >> Call Site 4 <<
	.uleb128 .Ltmp3416-.Ltmp3415            #   Call between .Ltmp3415 and .Ltmp3416
	.uleb128 .Ltmp3417-.Lfunc_begin123      #     jumps to .Ltmp3417
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3418-.Lfunc_begin123      # >> Call Site 5 <<
	.uleb128 .Ltmp3419-.Ltmp3418            #   Call between .Ltmp3418 and .Ltmp3419
	.uleb128 .Ltmp3420-.Lfunc_begin123      #     jumps to .Ltmp3420
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3421-.Lfunc_begin123      # >> Call Site 6 <<
	.uleb128 .Ltmp3422-.Ltmp3421            #   Call between .Ltmp3421 and .Ltmp3422
	.uleb128 .Ltmp3423-.Lfunc_begin123      #     jumps to .Ltmp3423
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3424-.Lfunc_begin123      # >> Call Site 7 <<
	.uleb128 .Ltmp3425-.Ltmp3424            #   Call between .Ltmp3424 and .Ltmp3425
	.uleb128 .Ltmp3426-.Lfunc_begin123      #     jumps to .Ltmp3426
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3427-.Lfunc_begin123      # >> Call Site 8 <<
	.uleb128 .Ltmp3428-.Ltmp3427            #   Call between .Ltmp3427 and .Ltmp3428
	.uleb128 .Ltmp3429-.Lfunc_begin123      #     jumps to .Ltmp3429
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3430-.Lfunc_begin123      # >> Call Site 9 <<
	.uleb128 .Ltmp3433-.Ltmp3430            #   Call between .Ltmp3430 and .Ltmp3433
	.uleb128 .Ltmp3434-.Lfunc_begin123      #     jumps to .Ltmp3434
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3435-.Lfunc_begin123      # >> Call Site 10 <<
	.uleb128 .Ltmp3436-.Ltmp3435            #   Call between .Ltmp3435 and .Ltmp3436
	.uleb128 .Ltmp3437-.Lfunc_begin123      #     jumps to .Ltmp3437
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3436-.Lfunc_begin123      # >> Call Site 11 <<
	.uleb128 .Lfunc_end216-.Ltmp3436        #   Call between .Ltmp3436 and .Lfunc_end216
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end123:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase93:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8pybind116detail11type_casterImvE4loadENS_6handleEb,"axG",@progbits,_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb,comdat
	.hidden	_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb # -- Begin function _ZN8pybind116detail11type_casterImvE4loadENS_6handleEb
	.weak	_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb
	.p2align	4, 0x90
	.type	_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb,@function
_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb: # @_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb
.Lfunc_begin124:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception124
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	testq	%rsi, %rsi
	je	.LBB217_4
# %bb.1:
	movq	%rsi, %r14
	movq	8(%rsi), %rax
	cmpq	PyFloat_Type@GOTPCREL(%rip), %rax
	je	.LBB217_4
# %bb.2:                                # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit
	movl	%edx, %ebp
	movq	%rdi, %rbx
	movq	PyFloat_Type@GOTPCREL(%rip), %rsi
	movq	%rax, %rdi
	callq	PyType_IsSubtype@PLT
	testl	%eax, %eax
	je	.LBB217_6
.LBB217_4:
	xorl	%ebx, %ebx
.LBB217_11:                             # %_ZL18PyObject_TypeCheckP7_objectP11_typeobject.exit.thread
	movl	%ebx, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB217_6:
	.cfi_def_cfa_offset 48
	testb	%bpl, %bpl
	jne	.LBB217_9
# %bb.7:
	movq	8(%r14), %rax
	testb	$1, 171(%rax)
	jne	.LBB217_9
# %bb.8:
	movq	%r14, %rdi
	callq	PyIndex_Check@PLT
	testl	%eax, %eax
	je	.LBB217_4
.LBB217_9:
	movq	%r14, %rdi
	callq	PyLong_AsUnsignedLong@PLT
	movq	%rax, %r15
	cmpq	$-1, %rax
	je	.LBB217_12
.LBB217_10:                             # %.critedge
	movq	%r15, (%rbx)
	movb	$1, %bl
	jmp	.LBB217_11
.LBB217_12:
	callq	PyErr_Occurred@PLT
	callq	PyErr_Occurred@PLT
	testq	%rax, %rax
	je	.LBB217_10
# %bb.13:
	callq	PyErr_Clear@PLT
	testb	%bpl, %bpl
	je	.LBB217_4
# %bb.14:
	movq	%r14, %rdi
	callq	PyNumber_Check@PLT
	testl	%eax, %eax
	je	.LBB217_4
# %bb.15:
	movq	%r14, %rdi
	callq	PyNumber_Long@PLT
	movq	%rax, %r14
	movq	%rax, (%rsp)
.Ltmp3438:
	callq	PyErr_Clear@PLT
.Ltmp3439:
# %bb.16:
.Ltmp3440:
	movq	%rbx, %rdi
	movq	%r14, %rsi
	xorl	%edx, %edx
	callq	_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb
.Ltmp3441:
# %bb.17:
.Ltmp3446:
	movl	%eax, %ebx
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3447:
	jmp	.LBB217_11
.LBB217_21:
.Ltmp3448:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB217_22:
.Ltmp3442:
	movq	%rax, %rbx
.Ltmp3443:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3444:
# %bb.23:                               # %_ZN8pybind116objectD2Ev.exit15
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB217_24:
.Ltmp3445:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end217:
	.size	_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb, .Lfunc_end217-_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb
	.cfi_endproc
	.section	.gcc_except_table._ZN8pybind116detail11type_casterImvE4loadENS_6handleEb,"aG",@progbits,_ZN8pybind116detail11type_casterImvE4loadENS_6handleEb,comdat
	.p2align	2, 0x0
GCC_except_table217:
.Lexception124:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase94-.Lttbaseref94
.Lttbaseref94:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end124-.Lcst_begin124
.Lcst_begin124:
	.uleb128 .Lfunc_begin124-.Lfunc_begin124 # >> Call Site 1 <<
	.uleb128 .Ltmp3438-.Lfunc_begin124      #   Call between .Lfunc_begin124 and .Ltmp3438
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3438-.Lfunc_begin124      # >> Call Site 2 <<
	.uleb128 .Ltmp3441-.Ltmp3438            #   Call between .Ltmp3438 and .Ltmp3441
	.uleb128 .Ltmp3442-.Lfunc_begin124      #     jumps to .Ltmp3442
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3446-.Lfunc_begin124      # >> Call Site 3 <<
	.uleb128 .Ltmp3447-.Ltmp3446            #   Call between .Ltmp3446 and .Ltmp3447
	.uleb128 .Ltmp3448-.Lfunc_begin124      #     jumps to .Ltmp3448
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3443-.Lfunc_begin124      # >> Call Site 4 <<
	.uleb128 .Ltmp3444-.Ltmp3443            #   Call between .Ltmp3443 and .Ltmp3444
	.uleb128 .Ltmp3445-.Lfunc_begin124      #     jumps to .Ltmp3445
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3444-.Lfunc_begin124      # >> Call Site 5 <<
	.uleb128 .Lfunc_end217-.Ltmp3444        #   Call between .Ltmp3444 and .Lfunc_end217
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end124:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase94:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeESZ_
	.type	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeESZ_,@function
_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeESZ_: # @_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeESZ_
.Lfunc_begin125:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception125
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$40, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rdi, %r14
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 16(%rsp)
	movq	$0, 32(%rsp)
.Ltmp3449:
	leaq	16(%rsp), %rdi
	movq	%r14, %rsi
	callq	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE18load_impl_sequenceIJLm0ELm1ELm2EEEEbRNS0_13function_callESt16integer_sequenceImJXspT_EEE
.Ltmp3450:
# %bb.1:                                # %_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE9load_argsERNS0_13function_callE.exit.i
	movl	$1, %ebx
	testb	%al, %al
	je	.LBB218_11
# %bb.2:
	movq	(%r14), %rax
	testb	$32, 89(%rax)
	jne	.LBB218_3
# %bb.8:
.Ltmp3461:
	leaq	16(%rsp), %rdi
	callq	_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_SF_EEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSG_
.Ltmp3462:
# %bb.9:
	movq	_Py_NoneStruct@GOTPCREL(%rip), %rax
	movq	%rax, 8(%rsp)
.Ltmp3463:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp3464:
# %bb.10:                               # %.noexc.i
	movq	8(%rsp), %rbx
	movq	$0, 8(%rsp)
.Ltmp3466:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3467:
	jmp	.LBB218_11
.LBB218_3:
.Ltmp3452:
	leaq	16(%rsp), %rdi
	callq	_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_SF_EEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSG_
.Ltmp3453:
# %bb.4:
	movq	_Py_NoneStruct@GOTPCREL(%rip), %rax
	movq	%rax, 8(%rsp)
.Ltmp3455:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp3456:
# %bb.5:
	movq	8(%rsp), %rbx
	movq	$0, 8(%rsp)
.Ltmp3458:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3459:
.LBB218_11:
	leaq	32(%rsp), %rdi
.Ltmp3469:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3470:
# %bb.12:                               # %_ZNSt10_Head_baseILm0EN8pybind116detail11type_casterINS0_6objectEvEELb0EED2Ev.exit.i.i.i
	leaq	24(%rsp), %rdi
.Ltmp3472:
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3473:
# %bb.13:                               # %_ZNSt10_Head_baseILm1EN8pybind116detail11type_casterINS0_6objectEvEELb0EED2Ev.exit.i.i.i.i
.Ltmp3475:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3476:
# %bb.14:                               # %_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_ENKUlRNS_6detail13function_callEE_clESZ_.exit
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB218_18:
	.cfi_def_cfa_offset 64
.Ltmp3460:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB218_19:
.Ltmp3468:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB218_7:
.Ltmp3457:
	jmp	.LBB218_17
.LBB218_6:
.Ltmp3454:
	jmp	.LBB218_17
.LBB218_20:
.Ltmp3465:
	jmp	.LBB218_17
.LBB218_15:
.Ltmp3477:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB218_22:
.Ltmp3474:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB218_21:
.Ltmp3471:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB218_16:
.Ltmp3451:
.LBB218_17:
	movq	%rax, %rbx
	leaq	16(%rsp), %rdi
	callq	_ZN8pybind116detail15argument_loaderIJNS_6objectES2_S2_EED2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end218:
	.size	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeESZ_, .Lfunc_end218-_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeESZ_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table218:
.Lexception125:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase95-.Lttbaseref95
.Lttbaseref95:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end125-.Lcst_begin125
.Lcst_begin125:
	.uleb128 .Ltmp3449-.Lfunc_begin125      # >> Call Site 1 <<
	.uleb128 .Ltmp3450-.Ltmp3449            #   Call between .Ltmp3449 and .Ltmp3450
	.uleb128 .Ltmp3451-.Lfunc_begin125      #     jumps to .Ltmp3451
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3461-.Lfunc_begin125      # >> Call Site 2 <<
	.uleb128 .Ltmp3464-.Ltmp3461            #   Call between .Ltmp3461 and .Ltmp3464
	.uleb128 .Ltmp3465-.Lfunc_begin125      #     jumps to .Ltmp3465
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3466-.Lfunc_begin125      # >> Call Site 3 <<
	.uleb128 .Ltmp3467-.Ltmp3466            #   Call between .Ltmp3466 and .Ltmp3467
	.uleb128 .Ltmp3468-.Lfunc_begin125      #     jumps to .Ltmp3468
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3452-.Lfunc_begin125      # >> Call Site 4 <<
	.uleb128 .Ltmp3453-.Ltmp3452            #   Call between .Ltmp3452 and .Ltmp3453
	.uleb128 .Ltmp3454-.Lfunc_begin125      #     jumps to .Ltmp3454
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3455-.Lfunc_begin125      # >> Call Site 5 <<
	.uleb128 .Ltmp3456-.Ltmp3455            #   Call between .Ltmp3455 and .Ltmp3456
	.uleb128 .Ltmp3457-.Lfunc_begin125      #     jumps to .Ltmp3457
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3458-.Lfunc_begin125      # >> Call Site 6 <<
	.uleb128 .Ltmp3459-.Ltmp3458            #   Call between .Ltmp3458 and .Ltmp3459
	.uleb128 .Ltmp3460-.Lfunc_begin125      #     jumps to .Ltmp3460
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3469-.Lfunc_begin125      # >> Call Site 7 <<
	.uleb128 .Ltmp3470-.Ltmp3469            #   Call between .Ltmp3469 and .Ltmp3470
	.uleb128 .Ltmp3471-.Lfunc_begin125      #     jumps to .Ltmp3471
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3472-.Lfunc_begin125      # >> Call Site 8 <<
	.uleb128 .Ltmp3473-.Ltmp3472            #   Call between .Ltmp3472 and .Ltmp3473
	.uleb128 .Ltmp3474-.Lfunc_begin125      #     jumps to .Ltmp3474
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3475-.Lfunc_begin125      # >> Call Site 9 <<
	.uleb128 .Ltmp3476-.Ltmp3475            #   Call between .Ltmp3475 and .Ltmp3476
	.uleb128 .Ltmp3477-.Lfunc_begin125      #     jumps to .Ltmp3477
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3476-.Lfunc_begin125      # >> Call Site 10 <<
	.uleb128 .Lfunc_end218-.Ltmp3476        #   Call between .Ltmp3476 and .Lfunc_end218
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end125:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase95:
	.p2align	2, 0x0
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function _ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_SF_EEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSG_
	.type	_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_SF_EEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSG_,@function
_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_SF_EEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSG_: # @_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_SF_EEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSG_
.Lfunc_begin126:
	.cfi_startproc
	.cfi_personality 155, DW.ref.__gxx_personality_v0
	.cfi_lsda 27, .Lexception126
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$336, %rsp                      # imm = 0x150
	.cfi_def_cfa_offset 352
	.cfi_offset %rbx, -16
	movq	16(%rdi), %rax
	movq	%rax, 40(%rsp)
	movq	$0, 16(%rdi)
	movq	8(%rdi), %rcx
	movq	%rcx, 32(%rsp)
	movq	$0, 8(%rdi)
	movq	(%rdi), %rcx
	movq	%rcx, 24(%rsp)
	movq	$0, (%rdi)
	movq	%rax, 16(%rsp)
.Ltmp3478:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp3479:
# %bb.1:                                # %.noexc.i
.Ltmp3480:
	leaq	48(%rsp), %rdi
	leaq	16(%rsp), %rsi
	callq	_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE@PLT
.Ltmp3481:
# %bb.2:
	movq	32(%rsp), %rax
	movq	%rax, 8(%rsp)
.Ltmp3482:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp3483:
# %bb.3:                                # %_ZN8pybind116objectC2ERKS0_.exit.i.i
	leaq	96(%rsp), %rdi
.Ltmp3485:
	leaq	8(%rsp), %rsi
	callq	_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE@PLT
.Ltmp3486:
# %bb.4:
	movq	24(%rsp), %rax
	movq	%rax, (%rsp)
.Ltmp3487:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7inc_refEv
.Ltmp3488:
# %bb.5:                                # %_ZN8pybind116objectC2ERKS0_.exit6.i.i
	leaq	144(%rsp), %rdi
.Ltmp3490:
	movq	%rsp, %rsi
	callq	_ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE@PLT
.Ltmp3491:
# %bb.6:
.Ltmp3502:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3503:
# %bb.7:                                # %_ZN8pybind116objectD2Ev.exit.i.i
.Ltmp3505:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3506:
# %bb.8:                                # %_ZN8pybind116objectD2Ev.exit7.i.i
.Ltmp3508:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3509:
# %bb.9:                                # %_ZN8pybind116objectD2Ev.exit8.i.i
	movq	48(%rsp), %rax
	movq	%rax, 192(%rsp)
	movups	56(%rsp), %xmm0
	movups	%xmm0, 200(%rsp)
	movups	72(%rsp), %xmm0
	movups	%xmm0, 216(%rsp)
	movq	96(%rsp), %rax
	movq	%rax, 240(%rsp)
	movups	104(%rsp), %xmm0
	movups	%xmm0, 248(%rsp)
	movups	120(%rsp), %xmm0
	movups	%xmm0, 264(%rsp)
	movq	144(%rsp), %rax
	movq	%rax, 288(%rsp)
	movups	152(%rsp), %xmm0
	movups	%xmm0, 296(%rsp)
	movups	168(%rsp), %xmm0
	movups	%xmm0, 312(%rsp)
.Ltmp3511:
	leaq	192(%rsp), %rdi
	callq	_Z14dispatch_micro13micro_globals@PLT
.Ltmp3512:
# %bb.10:
.Ltmp3523:
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3524:
# %bb.11:                               # %_ZN8pybind116objectD2Ev.exit.i
.Ltmp3526:
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3527:
# %bb.12:                               # %_ZN8pybind116objectD2Ev.exit8.i
.Ltmp3529:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3530:
# %bb.13:                               # %_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE9call_implIvRZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES8_NS_7module_EPKcJNS5_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESE_SE_EEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_JLm0ELm1ELm2EENS0_9void_typeEEET_OSH_St16integer_sequenceImJXspT1_EEEOSG_.exit
	addq	$336, %rsp                      # imm = 0x150
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB219_23:
	.cfi_def_cfa_offset 352
.Ltmp3531:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB219_22:
.Ltmp3528:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB219_21:
.Ltmp3525:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB219_31:
.Ltmp3510:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB219_30:
.Ltmp3507:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB219_29:
.Ltmp3504:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB219_14:
.Ltmp3492:
	movq	%rax, %rbx
.Ltmp3493:
	movq	%rsp, %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3494:
	jmp	.LBB219_17
.LBB219_15:
.Ltmp3495:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB219_24:
.Ltmp3513:
	movq	%rax, %rbx
	jmp	.LBB219_25
.LBB219_16:
.Ltmp3489:
	movq	%rax, %rbx
.LBB219_17:                             # %_ZN8pybind116objectD2Ev.exit9.i.i
.Ltmp3496:
	leaq	8(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3497:
	jmp	.LBB219_20
.LBB219_18:
.Ltmp3498:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB219_19:
.Ltmp3484:
	movq	%rax, %rbx
.LBB219_20:                             # %_ZN8pybind116objectD2Ev.exit10.i.i
.Ltmp3499:
	leaq	16(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3500:
.LBB219_25:                             # %.body.i
.Ltmp3514:
	leaq	24(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3515:
# %bb.26:                               # %_ZN8pybind116objectD2Ev.exit10.i
.Ltmp3517:
	leaq	32(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3518:
# %bb.27:                               # %_ZN8pybind116objectD2Ev.exit11.i
.Ltmp3520:
	leaq	40(%rsp), %rdi
	callq	_ZNKR8pybind116handle7dec_refEv
.Ltmp3521:
# %bb.28:                               # %_ZN8pybind116objectD2Ev.exit12.i
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB219_35:
.Ltmp3522:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB219_34:
.Ltmp3519:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB219_32:
.Ltmp3501:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB219_33:
.Ltmp3516:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end219:
	.size	_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_SF_EEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSG_, .Lfunc_end219-_ZNO8pybind116detail15argument_loaderIJNS_6objectES2_S2_EE4callIvNS0_9void_typeERZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES9_NS_7module_EPKcJNS6_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESF_SF_EEEvT1_T2_DpMT0_T3_EUlS2_S2_S2_E_EENSt9enable_ifIXsr3std7is_voidIT_EE5valueES5_E4typeEOSG_
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table219:
.Lexception126:
	.byte	255                             # @LPStart Encoding = omit
	.byte	155                             # @TType Encoding = indirect pcrel sdata4
	.uleb128 .Lttbase96-.Lttbaseref96
.Lttbaseref96:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end126-.Lcst_begin126
.Lcst_begin126:
	.uleb128 .Ltmp3478-.Lfunc_begin126      # >> Call Site 1 <<
	.uleb128 .Ltmp3479-.Ltmp3478            #   Call between .Ltmp3478 and .Ltmp3479
	.uleb128 .Ltmp3513-.Lfunc_begin126      #     jumps to .Ltmp3513
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3480-.Lfunc_begin126      # >> Call Site 2 <<
	.uleb128 .Ltmp3483-.Ltmp3480            #   Call between .Ltmp3480 and .Ltmp3483
	.uleb128 .Ltmp3484-.Lfunc_begin126      #     jumps to .Ltmp3484
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3485-.Lfunc_begin126      # >> Call Site 3 <<
	.uleb128 .Ltmp3488-.Ltmp3485            #   Call between .Ltmp3485 and .Ltmp3488
	.uleb128 .Ltmp3489-.Lfunc_begin126      #     jumps to .Ltmp3489
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3490-.Lfunc_begin126      # >> Call Site 4 <<
	.uleb128 .Ltmp3491-.Ltmp3490            #   Call between .Ltmp3490 and .Ltmp3491
	.uleb128 .Ltmp3492-.Lfunc_begin126      #     jumps to .Ltmp3492
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3502-.Lfunc_begin126      # >> Call Site 5 <<
	.uleb128 .Ltmp3503-.Ltmp3502            #   Call between .Ltmp3502 and .Ltmp3503
	.uleb128 .Ltmp3504-.Lfunc_begin126      #     jumps to .Ltmp3504
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3505-.Lfunc_begin126      # >> Call Site 6 <<
	.uleb128 .Ltmp3506-.Ltmp3505            #   Call between .Ltmp3505 and .Ltmp3506
	.uleb128 .Ltmp3507-.Lfunc_begin126      #     jumps to .Ltmp3507
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3508-.Lfunc_begin126      # >> Call Site 7 <<
	.uleb128 .Ltmp3509-.Ltmp3508            #   Call between .Ltmp3508 and .Ltmp3509
	.uleb128 .Ltmp3510-.Lfunc_begin126      #     jumps to .Ltmp3510
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3511-.Lfunc_begin126      # >> Call Site 8 <<
	.uleb128 .Ltmp3512-.Ltmp3511            #   Call between .Ltmp3511 and .Ltmp3512
	.uleb128 .Ltmp3513-.Lfunc_begin126      #     jumps to .Ltmp3513
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3523-.Lfunc_begin126      # >> Call Site 9 <<
	.uleb128 .Ltmp3524-.Ltmp3523            #   Call between .Ltmp3523 and .Ltmp3524
	.uleb128 .Ltmp3525-.Lfunc_begin126      #     jumps to .Ltmp3525
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3526-.Lfunc_begin126      # >> Call Site 10 <<
	.uleb128 .Ltmp3527-.Ltmp3526            #   Call between .Ltmp3526 and .Ltmp3527
	.uleb128 .Ltmp3528-.Lfunc_begin126      #     jumps to .Ltmp3528
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3529-.Lfunc_begin126      # >> Call Site 11 <<
	.uleb128 .Ltmp3530-.Ltmp3529            #   Call between .Ltmp3529 and .Ltmp3530
	.uleb128 .Ltmp3531-.Lfunc_begin126      #     jumps to .Ltmp3531
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3493-.Lfunc_begin126      # >> Call Site 12 <<
	.uleb128 .Ltmp3494-.Ltmp3493            #   Call between .Ltmp3493 and .Ltmp3494
	.uleb128 .Ltmp3495-.Lfunc_begin126      #     jumps to .Ltmp3495
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3496-.Lfunc_begin126      # >> Call Site 13 <<
	.uleb128 .Ltmp3497-.Ltmp3496            #   Call between .Ltmp3496 and .Ltmp3497
	.uleb128 .Ltmp3498-.Lfunc_begin126      #     jumps to .Ltmp3498
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3499-.Lfunc_begin126      # >> Call Site 14 <<
	.uleb128 .Ltmp3500-.Ltmp3499            #   Call between .Ltmp3499 and .Ltmp3500
	.uleb128 .Ltmp3501-.Lfunc_begin126      #     jumps to .Ltmp3501
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3514-.Lfunc_begin126      # >> Call Site 15 <<
	.uleb128 .Ltmp3515-.Ltmp3514            #   Call between .Ltmp3514 and .Ltmp3515
	.uleb128 .Ltmp3516-.Lfunc_begin126      #     jumps to .Ltmp3516
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3517-.Lfunc_begin126      # >> Call Site 16 <<
	.uleb128 .Ltmp3518-.Ltmp3517            #   Call between .Ltmp3517 and .Ltmp3518
	.uleb128 .Ltmp3519-.Lfunc_begin126      #     jumps to .Ltmp3519
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3520-.Lfunc_begin126      # >> Call Site 17 <<
	.uleb128 .Ltmp3521-.Ltmp3520            #   Call between .Ltmp3520 and .Ltmp3521
	.uleb128 .Ltmp3522-.Lfunc_begin126      #     jumps to .Ltmp3522
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp3521-.Lfunc_begin126      # >> Call Site 18 <<
	.uleb128 .Lfunc_end219-.Ltmp3521        #   Call between .Ltmp3521 and .Lfunc_end219
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end126:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase96:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv,"axG",@progbits,_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv,comdat
	.weak	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv # -- Begin function _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv
	.p2align	4, 0x90
	.type	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv,@function
_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv: # @_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	(%rdi), %rax
	callq	*16(%rax)
	movq	__libc_single_threaded@GOTPCREL(%rip), %rax
	cmpb	$0, (%rax)
	je	.LBB220_2
# %bb.1:
	movl	12(%rbx), %eax
	leal	-1(%rax), %ecx
	movl	%ecx, 12(%rbx)
	cmpl	$1, %eax
	jne	.LBB220_4
.LBB220_5:
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmpq	*24(%rax)                       # TAILCALL
.LBB220_2:
	.cfi_def_cfa_offset 16
	movl	$-1, %eax
	lock		xaddl	%eax, 12(%rbx)
	cmpl	$1, %eax
	je	.LBB220_5
.LBB220_4:                              # %_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv.exit
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end220:
	.size	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, .Lfunc_end220-_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv
	.cfi_endproc
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function __hip_module_ctor
	.type	__hip_module_ctor,@function
__hip_module_ctor:                      # @__hip_module_ctor
	.cfi_startproc
# %bb.0:
	subq	$40, %rsp
	.cfi_def_cfa_offset 48
	movq	__hip_gpubin_handle_a387003902ba631b(%rip), %rdi
	testq	%rdi, %rdi
	jne	.LBB221_2
# %bb.1:
	leaq	__hip_fatbin_wrapper(%rip), %rdi
	callq	__hipRegisterFatBinary@PLT
	movq	%rax, %rdi
	movq	%rax, __hip_gpubin_handle_a387003902ba631b(%rip)
.LBB221_2:
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rsp)
	movups	%xmm0, (%rsp)
	movq	_Z8micro_tk13micro_globals@GOTPCREL(%rip), %rsi
	leaq	.L__unnamed_1(%rip), %rcx
	movq	%rcx, %rdx
	movl	$-1, %r8d
	xorl	%r9d, %r9d
	callq	__hipRegisterFunction@PLT
	leaq	__hip_module_dtor(%rip), %rdi
	addq	$40, %rsp
	.cfi_def_cfa_offset 8
	jmp	atexit@PLT                      # TAILCALL
.Lfunc_end221:
	.size	__hip_module_ctor, .Lfunc_end221-__hip_module_ctor
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function __hip_module_dtor
	.type	__hip_module_dtor,@function
__hip_module_dtor:                      # @__hip_module_dtor
	.cfi_startproc
# %bb.0:
	movq	__hip_gpubin_handle_a387003902ba631b(%rip), %rdi
	testq	%rdi, %rdi
	je	.LBB222_2
# %bb.1:
	pushq	%rax
	.cfi_def_cfa_offset 16
	callq	__hipUnregisterFatBinary@PLT
	movq	$0, __hip_gpubin_handle_a387003902ba631b(%rip)
	addq	$8, %rsp
	.cfi_def_cfa_offset 8
.LBB222_2:
	retq
.Lfunc_end222:
	.size	__hip_module_dtor, .Lfunc_end222-__hip_module_dtor
	.cfi_endproc
                                        # -- End function
	.type	_Z8micro_tk13micro_globals,@object # @_Z8micro_tk13micro_globals
	.section	.data.rel.ro,"aw",@progbits
	.globl	_Z8micro_tk13micro_globals
	.p2align	3, 0x0
_Z8micro_tk13micro_globals:
	.quad	_Z23__device_stub__micro_tk13micro_globals
	.size	_Z8micro_tk13micro_globals, 8

	.type	.L.str,@object                  # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"3.12"
	.size	.L.str, 5

	.type	.L.str.1,@object                # @.str.1
.L.str.1:
	.asciz	"Python version mismatch: module was compiled for Python %s, but the interpreter version is incompatible: %s."
	.size	.L.str.1, 109

	.type	_ZZ16PyInit_tk_kernelE5slots,@object # @_ZZ16PyInit_tk_kernelE5slots
	.local	_ZZ16PyInit_tk_kernelE5slots
	.comm	_ZZ16PyInit_tk_kernelE5slots,64,8
	.type	_ZGVZ16PyInit_tk_kernelE5slots,@object # @_ZGVZ16PyInit_tk_kernelE5slots
	.local	_ZGVZ16PyInit_tk_kernelE5slots
	.comm	_ZGVZ16PyInit_tk_kernelE5slots,8,8
	.type	_ZZ16PyInit_tk_kernelE3def,@object # @_ZZ16PyInit_tk_kernelE3def
	.data
	.p2align	3, 0x0
_ZZ16PyInit_tk_kernelE3def:
	.quad	1                               # 0x1
	.quad	0
	.quad	0
	.quad	0                               # 0x0
	.quad	0
	.quad	.L.str.2
	.quad	0
	.quad	0                               # 0x0
	.quad	0
	.quad	_ZZ16PyInit_tk_kernelE5slots
	.quad	0
	.quad	0
	.quad	0
	.size	_ZZ16PyInit_tk_kernelE3def, 104

	.type	.L.str.2,@object                # @.str.2
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.2:
	.asciz	"tk_kernel"
	.size	.L.str.2, 10

	.hidden	_ZTVN8pybind1117error_already_setE # @_ZTVN8pybind1117error_already_setE
	.type	_ZTVN8pybind1117error_already_setE,@object
	.section	.data.rel.ro._ZTVN8pybind1117error_already_setE,"awG",@progbits,_ZTVN8pybind1117error_already_setE,comdat
	.weak	_ZTVN8pybind1117error_already_setE
	.p2align	3, 0x0
_ZTVN8pybind1117error_already_setE:
	.quad	0
	.quad	_ZTIN8pybind1117error_already_setE
	.quad	_ZN8pybind1117error_already_setD2Ev
	.quad	_ZN8pybind1117error_already_setD0Ev
	.quad	_ZNK8pybind1117error_already_set4whatEv
	.size	_ZTVN8pybind1117error_already_setE, 40

	.hidden	_ZTSN8pybind1117error_already_setE # @_ZTSN8pybind1117error_already_setE
	.type	_ZTSN8pybind1117error_already_setE,@object
	.section	.rodata._ZTSN8pybind1117error_already_setE,"aG",@progbits,_ZTSN8pybind1117error_already_setE,comdat
	.weak	_ZTSN8pybind1117error_already_setE
_ZTSN8pybind1117error_already_setE:
	.asciz	"N8pybind1117error_already_setE"
	.size	_ZTSN8pybind1117error_already_setE, 31

	.hidden	_ZTIN8pybind1117error_already_setE # @_ZTIN8pybind1117error_already_setE
	.type	_ZTIN8pybind1117error_already_setE,@object
	.section	.data.rel.ro._ZTIN8pybind1117error_already_setE,"awG",@progbits,_ZTIN8pybind1117error_already_setE,comdat
	.weak	_ZTIN8pybind1117error_already_setE
	.p2align	3, 0x0
_ZTIN8pybind1117error_already_setE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN8pybind1117error_already_setE
	.quad	_ZTISt9exception
	.size	_ZTIN8pybind1117error_already_setE, 24

	.type	.L.str.3,@object                # @.str.3
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.3:
	.asciz	"scoped_acquire: could not create thread state!"
	.size	.L.str.3, 47

	.type	.L.str.4,@object                # @.str.4
.L.str.4:
	.asciz	"!PyErr_Occurred()"
	.size	.L.str.4, 18

	.type	.L.str.5,@object                # @.str.5
.L.str.5:
	.asciz	"/opt/conda/envs/py_3.12/lib/python3.12/site-packages/pybind11/include/pybind11/detail/common.h"
	.size	.L.str.5, 95

	.type	.L__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failEPKc,@object # @__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failEPKc
.L__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failEPKc:
	.asciz	"void pybind11::pybind11_fail(const char *)"
	.size	.L__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failEPKc, 43

	.type	.L.str.6,@object                # @.str.6
.L.str.6:
	.asciz	": "
	.size	.L.str.6, 3

	.type	.L.str.8,@object                # @.str.8
.L.str.8:
	.asciz	"basic_string::_M_replace"
	.size	.L.str.8, 25

	.type	.L.str.9,@object                # @.str.9
.L.str.9:
	.asciz	"basic_string::_M_create"
	.size	.L.str.9, 24

	.type	.L.str.10,@object               # @.str.10
.L.str.10:
	.asciz	"%s: __pos (which is %zu) > this->size() (which is %zu)"
	.size	.L.str.10, 55

	.type	.L.str.11,@object               # @.str.11
.L.str.11:
	.asciz	"<MESSAGE UNAVAILABLE DUE TO ANOTHER EXCEPTION>"
	.size	.L.str.11, 47

	.type	.L.str.12,@object               # @.str.12
.L.str.12:
	.asciz	"utf-8"
	.size	.L.str.12, 6

	.type	.L.str.13,@object               # @.str.13
.L.str.13:
	.asciz	"backslashreplace"
	.size	.L.str.13, 17

	.type	.L.str.14,@object               # @.str.14
.L.str.14:
	.asciz	"__notes__"
	.size	.L.str.14, 10

	.type	.L.str.15,@object               # @.str.15
.L.str.15:
	.asciz	"\nFAILURE obtaining len(__notes__): "
	.size	.L.str.15, 36

	.type	.L.str.16,@object               # @.str.16
.L.str.16:
	.asciz	"\n__notes__ (len="
	.size	.L.str.16, 17

	.type	.L.str.17,@object               # @.str.17
.L.str.17:
	.asciz	"):"
	.size	.L.str.17, 3

	.type	.L.str.18,@object               # @.str.18
.L.str.18:
	.asciz	"PyList_Check(notes.ptr())"
	.size	.L.str.18, 26

	.type	.L.str.19,@object               # @.str.19
.L.str.19:
	.asciz	"/opt/conda/envs/py_3.12/lib/python3.12/site-packages/pybind11/include/pybind11/detail/../pytypes.h"
	.size	.L.str.19, 99

	.type	.L__PRETTY_FUNCTION__._ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev,@object # @__PRETTY_FUNCTION__._ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev
.L__PRETTY_FUNCTION__._ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev:
	.asciz	"std::string pybind11::detail::error_fetch_and_normalize::format_value_and_trace() const"
	.size	.L__PRETTY_FUNCTION__._ZNK8pybind116detail25error_fetch_and_normalize22format_value_and_traceB5cxx11Ev, 88

	.type	.L.str.20,@object               # @.str.20
.L.str.20:
	.asciz	"\nFAILURE obtaining __notes__["
	.size	.L.str.20, 30

	.type	.L.str.21,@object               # @.str.21
.L.str.21:
	.asciz	"]: "
	.size	.L.str.21, 4

	.type	.L.str.22,@object               # @.str.22
.L.str.22:
	.asciz	"\nFAILURE formatting __notes__["
	.size	.L.str.22, 31

	.type	.L.str.23,@object               # @.str.23
.L.str.23:
	.asciz	"<MESSAGE UNAVAILABLE>"
	.size	.L.str.23, 22

	.type	.L.str.24,@object               # @.str.24
.L.str.24:
	.asciz	"<EMPTY MESSAGE>"
	.size	.L.str.24, 16

	.type	.L.str.25,@object               # @.str.25
.L.str.25:
	.asciz	"\n\nAt:\n"
	.size	.L.str.25, 7

	.type	.L.str.26,@object               # @.str.26
.L.str.26:
	.asciz	"  "
	.size	.L.str.26, 3

	.type	.L.str.27,@object               # @.str.27
.L.str.27:
	.asciz	"): "
	.size	.L.str.27, 4

	.type	.L.str.28,@object               # @.str.28
.L.str.28:
	.asciz	"\nMESSAGE UNAVAILABLE DUE TO EXCEPTION: "
	.size	.L.str.28, 40

	.type	.L.str.29,@object               # @.str.29
.L.str.29:
	.asciz	"pybind11::detail::error_string"
	.size	.L.str.29, 31

	.type	.L.str.30,@object               # @.str.30
.L.str.30:
	.asciz	"Internal error: "
	.size	.L.str.30, 17

	.type	.L.str.31,@object               # @.str.31
.L.str.31:
	.asciz	" called while Python error indicator not set."
	.size	.L.str.31, 46

	.type	.L.str.32,@object               # @.str.32
.L.str.32:
	.asciz	" failed to obtain the name of the original active exception type."
	.size	.L.str.32, 66

	.type	.L.str.33,@object               # @.str.33
.L.str.33:
	.asciz	"[WITH __notes__]"
	.size	.L.str.33, 17

	.type	.L__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@object # @__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.L__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
	.asciz	"void pybind11::pybind11_fail(const std::string &)"
	.size	.L__PRETTY_FUNCTION__._ZN8pybind1113pybind11_failERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, 50

	.type	.L.str.34,@object               # @.str.34
.L.str.34:
	.asciz	"basic_string: construction from null is not valid"
	.size	.L.str.34, 50

	.type	.L.str.35,@object               # @.str.35
.L.str.35:
	.asciz	"pybind11::handle::dec_ref()"
	.size	.L.str.35, 28

	.type	.L.str.36,@object               # @.str.36
.L.str.36:
	.asciz	"%s is being called while the GIL is either not held or invalid. Please see https://pybind11.readthedocs.io/en/stable/advanced/misc.html#common-sources-of-global-interpreter-lock-errors for debugging advice.\nIf you are convinced there is no bug in your code, you can #define PYBIND11_NO_ASSERT_GIL_HELD_INCREF_DECREF to disable this check. In that case you have to ensure this #define is consistently used for all translation units linked into a given pybind11 extension, otherwise there will be ODR violations."
	.size	.L.str.36, 511

	.type	.L.str.37,@object               # @.str.37
.L.str.37:
	.asciz	" The failing %s call was triggered on a %s object."
	.size	.L.str.37, 51

	.type	.L.str.39,@object               # @.str.39
.L.str.39:
	.asciz	" PyGILState_Check() failure."
	.size	.L.str.39, 29

	.type	.L.str.40,@object               # @.str.40
.L.str.40:
	.asciz	"basic_string::append"
	.size	.L.str.40, 21

	.type	.L.str.41,@object               # @.str.41
.L.str.41:
	.asciz	"Unable to cast Python instance of type "
	.size	.L.str.41, 40

	.type	.L.str.42,@object               # @.str.42
.L.str.42:
	.asciz	" to C++ type '"
	.size	.L.str.42, 15

	.type	.L.str.43,@object               # @.str.43
.L.str.43:
	.asciz	"'"
	.size	.L.str.43, 2

	.hidden	_ZTSN8pybind1110cast_errorE     # @_ZTSN8pybind1110cast_errorE
	.type	_ZTSN8pybind1110cast_errorE,@object
	.section	.rodata._ZTSN8pybind1110cast_errorE,"aG",@progbits,_ZTSN8pybind1110cast_errorE,comdat
	.weak	_ZTSN8pybind1110cast_errorE
_ZTSN8pybind1110cast_errorE:
	.asciz	"N8pybind1110cast_errorE"
	.size	_ZTSN8pybind1110cast_errorE, 24

	.hidden	_ZTSN8pybind1117builtin_exceptionE # @_ZTSN8pybind1117builtin_exceptionE
	.type	_ZTSN8pybind1117builtin_exceptionE,@object
	.section	.rodata._ZTSN8pybind1117builtin_exceptionE,"aG",@progbits,_ZTSN8pybind1117builtin_exceptionE,comdat
	.weak	_ZTSN8pybind1117builtin_exceptionE
_ZTSN8pybind1117builtin_exceptionE:
	.asciz	"N8pybind1117builtin_exceptionE"
	.size	_ZTSN8pybind1117builtin_exceptionE, 31

	.hidden	_ZTIN8pybind1117builtin_exceptionE # @_ZTIN8pybind1117builtin_exceptionE
	.type	_ZTIN8pybind1117builtin_exceptionE,@object
	.section	.data.rel.ro._ZTIN8pybind1117builtin_exceptionE,"awG",@progbits,_ZTIN8pybind1117builtin_exceptionE,comdat
	.weak	_ZTIN8pybind1117builtin_exceptionE
	.p2align	3, 0x0
_ZTIN8pybind1117builtin_exceptionE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN8pybind1117builtin_exceptionE
	.quad	_ZTISt13runtime_error
	.size	_ZTIN8pybind1117builtin_exceptionE, 24

	.hidden	_ZTIN8pybind1110cast_errorE     # @_ZTIN8pybind1110cast_errorE
	.type	_ZTIN8pybind1110cast_errorE,@object
	.section	.data.rel.ro._ZTIN8pybind1110cast_errorE,"awG",@progbits,_ZTIN8pybind1110cast_errorE,comdat
	.weak	_ZTIN8pybind1110cast_errorE
	.p2align	3, 0x0
_ZTIN8pybind1110cast_errorE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN8pybind1110cast_errorE
	.quad	_ZTIN8pybind1117builtin_exceptionE
	.size	_ZTIN8pybind1110cast_errorE, 24

	.type	.L.str.44,@object               # @.str.44
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.44:
	.asciz	"Unexpected PYBIND11_BYTES_AS_STRING() failure."
	.size	.L.str.44, 47

	.type	.L.str.45,@object               # @.str.45
.L.str.45:
	.asciz	"Unexpected PyByteArray_AsString() failure."
	.size	.L.str.45, 43

	.type	.L.str.46,@object               # @.str.46
.L.str.46:
	.asciz	"pybind11::error_already_set"
	.size	.L.str.46, 28

	.hidden	_ZTVSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE # @_ZTVSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.type	_ZTVSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE,@object
	.section	.data.rel.ro._ZTVSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE,"awG",@progbits,_ZTVSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTVSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3, 0x0
_ZTVSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	0
	.quad	_ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EED2Ev
	.quad	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev
	.quad	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
	.quad	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
	.quad	_ZNSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
	.size	_ZTVSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE, 56

	.hidden	_ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE # @_ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.type	_ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE,@object
	.section	.rodata._ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE, 113

	.type	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE, 52

	.type	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.rodata._ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,"aG",@progbits,_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.asciz	"St11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE"
	.size	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE, 47

	.type	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.data.rel.ro._ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,"awG",@progbits,_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3, 0x0
_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE, 16

	.type	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,@object # @_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.section	.data.rel.ro._ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,"awG",@progbits,_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3, 0x0
_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE, 24

	.hidden	_ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE # @_ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.type	_ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE,@object
	.section	.data.rel.ro._ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE,"awG",@progbits,_ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE,comdat
	.weak	_ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.p2align	3, 0x0
_ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.quad	_ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.size	_ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE, 24

	.hidden	_ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE # @_ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE
	.type	_ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE,@object
	.section	.rodata._ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE,"aG",@progbits,_ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE,comdat
	.weak	_ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE
_ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE:
	.asciz	"PFvPN8pybind116detail25error_fetch_and_normalizeEE"
	.size	_ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE, 51

	.type	.L.str.47,@object               # @.str.47
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.47:
	.asciz	"Unable to move from Python "
	.size	.L.str.47, 28

	.type	.L.str.48,@object               # @.str.48
.L.str.48:
	.asciz	" instance to C++ "
	.size	.L.str.48, 18

	.type	.L.str.49,@object               # @.str.49
.L.str.49:
	.asciz	" instance: instance has multiple references"
	.size	.L.str.49, 44

	.type	_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@object # @_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.section	.rodata._ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.weak	_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
	.asciz	"NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"
	.size	_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, 53

	.type	.L.str.50,@object               # @.str.50
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.50:
	.asciz	"pybind11::"
	.size	.L.str.50, 11

	.type	.L.str.51,@object               # @.str.51
.L.str.51:
	.asciz	"basic_string::erase"
	.size	.L.str.51, 20

	.hidden	_ZTVN8pybind1110cast_errorE     # @_ZTVN8pybind1110cast_errorE
	.type	_ZTVN8pybind1110cast_errorE,@object
	.section	.data.rel.ro._ZTVN8pybind1110cast_errorE,"awG",@progbits,_ZTVN8pybind1110cast_errorE,comdat
	.weak	_ZTVN8pybind1110cast_errorE
	.p2align	3, 0x0
_ZTVN8pybind1110cast_errorE:
	.quad	0
	.quad	_ZTIN8pybind1110cast_errorE
	.quad	_ZNSt13runtime_errorD2Ev
	.quad	_ZN8pybind1110cast_errorD0Ev
	.quad	_ZNKSt13runtime_error4whatEv
	.quad	_ZNK8pybind1110cast_error9set_errorEv
	.size	_ZTVN8pybind1110cast_errorE, 48

	.type	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits,@object # @__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits
	.section	.rodata.str1.16,"aMS",@progbits,1
	.p2align	4, 0x0
.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits:
	.asciz	"00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"
	.size	.L__const._ZNSt8__detail18__to_chars_10_implIjEEvPcjT_.__digits, 201

	.type	.L.str.52,@object               # @.str.52
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.52:
	.asciz	"scoped_acquire::dec_ref(): thread state must be current!"
	.size	.L.str.52, 57

	.type	.L.str.53,@object               # @.str.53
.L.str.53:
	.asciz	"scoped_acquire::dec_ref(): reference count underflow!"
	.size	.L.str.53, 54

	.type	.L.str.54,@object               # @.str.54
.L.str.54:
	.asciz	"scoped_acquire::dec_ref(): internal error!"
	.size	.L.str.54, 43

	.hidden	_ZZN8pybind116detail25get_num_interpreters_seenEvE7counter # @_ZZN8pybind116detail25get_num_interpreters_seenEvE7counter
	.type	_ZZN8pybind116detail25get_num_interpreters_seenEvE7counter,@object
	.section	.bss._ZZN8pybind116detail25get_num_interpreters_seenEvE7counter,"awG",@nobits,_ZZN8pybind116detail25get_num_interpreters_seenEvE7counter,comdat
	.weak	_ZZN8pybind116detail25get_num_interpreters_seenEvE7counter
	.p2align	2, 0x0
_ZZN8pybind116detail25get_num_interpreters_seenEvE7counter:
	.zero	4
	.size	_ZZN8pybind116detail25get_num_interpreters_seenEvE7counter, 4

	.hidden	_ZZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager # @_ZZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager
	.type	_ZZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager,@object
	.section	.bss._ZZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager,"awG",@nobits,_ZZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager,comdat
	.weak	_ZZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager
	.p2align	3, 0x0
_ZZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager:
	.zero	40
	.size	_ZZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager, 40

	.hidden	_ZGVZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager # @_ZGVZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager
	.type	_ZGVZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager,@object
	.section	.bss._ZGVZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager,"awG",@nobits,_ZGVZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager,comdat
	.weak	_ZGVZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager
	.p2align	3, 0x0
_ZGVZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager:
	.quad	0                               # 0x0
	.size	_ZGVZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager, 8

	.type	.L.str.55,@object               # @.str.55
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.55:
	.asciz	"__pybind11_internals_v11_system_libstdcpp_gxx_abi_1xxx_use_cxx11_abi_1__"
	.size	.L.str.55, 73

	.hidden	__dso_handle
	.type	.L.str.56,@object               # @.str.56
.L.str.56:
	.asciz	"thread_specific_storage constructor: could not initialize the TSS key!"
	.size	.L.str.56, 71

	.type	.L.str.57,@object               # @.str.57
.L.str.57:
	.asciz	"pybind11::detail::internals_pp_manager::get_pp_from_dict() FAILED"
	.size	.L.str.57, 66

	.type	.L.str.58,@object               # @.str.58
.L.str.58:
	.asciz	"pybind11::detail::get_python_state_dict() FAILED"
	.size	.L.str.58, 49

	.type	.L.str.59,@object               # @.str.59
.L.str.59:
	.asciz	"pybind11::handle::inc_ref()"
	.size	.L.str.59, 28

	.hidden	_ZZN8pybind116handle15inc_ref_counterEmE7counter # @_ZZN8pybind116handle15inc_ref_counterEmE7counter
	.type	_ZZN8pybind116handle15inc_ref_counterEmE7counter,@object
	.section	.tbss._ZZN8pybind116handle15inc_ref_counterEmE7counter,"awTG",@nobits,_ZZN8pybind116handle15inc_ref_counterEmE7counter,comdat
	.weak	_ZZN8pybind116handle15inc_ref_counterEmE7counter
	.p2align	3, 0x0
_ZZN8pybind116handle15inc_ref_counterEmE7counter:
	.quad	0                               # 0x0
	.size	_ZZN8pybind116handle15inc_ref_counterEmE7counter, 8

	.type	.L.str.60,@object               # @.str.60
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.60:
	.asciz	"PyErr_Occurred()"
	.size	.L.str.60, 17

	.type	.L__PRETTY_FUNCTION__._ZN8pybind1110raise_fromEP7_objectPKc,@object # @__PRETTY_FUNCTION__._ZN8pybind1110raise_fromEP7_objectPKc
.L__PRETTY_FUNCTION__._ZN8pybind1110raise_fromEP7_objectPKc:
	.asciz	"void pybind11::raise_from(PyObject *, const char *)"
	.size	.L__PRETTY_FUNCTION__._ZN8pybind1110raise_fromEP7_objectPKc, 52

	.type	.L.str.61,@object               # @.str.61
.L.str.61:
	.asciz	"Could not allocate string object!"
	.size	.L.str.61, 34

	.type	.L.str.62,@object               # @.str.62
.L.str.62:
	.asciz	"pybind11_static_property"
	.size	.L.str.62, 25

	.type	.L.str.63,@object               # @.str.63
.L.str.63:
	.asciz	"make_static_property_type(): error allocating type!"
	.size	.L.str.63, 52

	.type	.L.str.64,@object               # @.str.64
.L.str.64:
	.asciz	"make_static_property_type(): failure in PyType_Ready()!"
	.size	.L.str.64, 56

	.type	.L.str.65,@object               # @.str.65
.L.str.65:
	.asciz	"__module__"
	.size	.L.str.65, 11

	.type	.L.str.66,@object               # @.str.66
.L.str.66:
	.asciz	"pybind11_builtins"
	.size	.L.str.66, 18

	.hidden	_ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset # @_ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset
	.type	_ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset,@object
	.section	.data._ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset,"awG",@progbits,_ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset,comdat
	.weak	_ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset
	.p2align	4, 0x0
_ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset:
	.quad	.L.str.67
	.quad	PyObject_GenericGetDict
	.quad	PyObject_GenericSetDict
	.quad	0
	.quad	0
	.zero	40
	.size	_ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset, 80

	.type	.L.str.67,@object               # @.str.67
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.67:
	.asciz	"__dict__"
	.size	.L.str.67, 9

	.type	.L.str.68,@object               # @.str.68
.L.str.68:
	.asciz	"pybind11_type"
	.size	.L.str.68, 14

	.type	.L.str.69,@object               # @.str.69
.L.str.69:
	.asciz	"make_default_metaclass(): error allocating metaclass!"
	.size	.L.str.69, 54

	.type	.L.str.70,@object               # @.str.70
.L.str.70:
	.asciz	"make_default_metaclass(): failure in PyType_Ready()!"
	.size	.L.str.70, 53

	.type	.L.str.71,@object               # @.str.71
.L.str.71:
	.asciz	"%.200s.__init__() must be called when overriding __init__"
	.size	.L.str.71, 58

	.type	.L.str.72,@object               # @.str.72
.L.str.72:
	.asciz	"bases.empty()"
	.size	.L.str.72, 14

	.type	.L.str.73,@object               # @.str.73
.L.str.73:
	.asciz	"/opt/conda/envs/py_3.12/lib/python3.12/site-packages/pybind11/include/pybind11/detail/type_caster_base.h"
	.size	.L.str.73, 105

	.type	.L__PRETTY_FUNCTION__._ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE,@object # @__PRETTY_FUNCTION__._ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE
.L__PRETTY_FUNCTION__._ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE:
	.asciz	"void pybind11::detail::all_type_info_populate(PyTypeObject *, std::vector<type_info *> &)"
	.size	.L__PRETTY_FUNCTION__._ZN8pybind116detail22all_type_info_populateEP11_typeobjectRSt6vectorIPNS0_9type_infoESaIS5_EE, 90

	.type	.L.str.74,@object               # @.str.74
.L.str.74:
	.asciz	"PyTuple_Check(op)"
	.size	.L.str.74, 18

	.type	.L.str.75,@object               # @.str.75
.L.str.75:
	.asciz	"/opt/conda/envs/py_3.12/include/python3.12/cpython/tupleobject.h"
	.size	.L.str.75, 65

	.type	.L__PRETTY_FUNCTION__._ZL16PyTuple_GET_SIZEP7_object,@object # @__PRETTY_FUNCTION__._ZL16PyTuple_GET_SIZEP7_object
.L__PRETTY_FUNCTION__._ZL16PyTuple_GET_SIZEP7_object:
	.asciz	"Py_ssize_t PyTuple_GET_SIZE(PyObject *)"
	.size	.L__PRETTY_FUNCTION__._ZL16PyTuple_GET_SIZEP7_object, 40

	.type	.L.str.76,@object               # @.str.76
.L.str.76:
	.asciz	"ob->ob_type != &PyLong_Type"
	.size	.L.str.76, 28

	.type	.L.str.77,@object               # @.str.77
.L.str.77:
	.asciz	"/opt/conda/envs/py_3.12/include/python3.12/object.h"
	.size	.L.str.77, 52

	.type	.L__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object,@object # @__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object
.L__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object:
	.asciz	"Py_ssize_t Py_SIZE(PyObject *)"
	.size	.L__PRETTY_FUNCTION__._ZL7Py_SIZEP7_object, 31

	.type	.L.str.78,@object               # @.str.78
.L.str.78:
	.asciz	"ob->ob_type != &PyBool_Type"
	.size	.L.str.78, 28

	.type	.L.str.79,@object               # @.str.79
.L.str.79:
	.asciz	"vector::_M_realloc_insert"
	.size	.L.str.79, 26

	.hidden	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature # @_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature
	.type	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature,@object
	.section	.rodata._ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature,"aG",@progbits,_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature,comdat
	.weak	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature
_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature:
	.asciz	"({object}) -> None"
	.size	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature, 19

	.hidden	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types # @_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types
	.type	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types,@object
	.section	.rodata._ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types,"aG",@progbits,_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types,comdat
	.weak	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types
	.p2align	3, 0x0
_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types:
	.zero	8
	.size	_ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types, 8

	.type	.L.str.80,@object               # @.str.80
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.80:
	.zero	1
	.size	.L.str.80, 1

	.type	.L.str.81,@object               # @.str.81
.L.str.81:
	.asciz	"__init__"
	.size	.L.str.81, 9

	.type	.L.str.82,@object               # @.str.82
.L.str.82:
	.asciz	"__setstate__"
	.size	.L.str.82, 13

	.type	.L.str.83,@object               # @.str.83
.L.str.83:
	.asciz	"pybind11-bound class '"
	.size	.L.str.83, 23

	.type	.L.str.84,@object               # @.str.84
.L.str.84:
	.asciz	"' is using an old-style placement-new '"
	.size	.L.str.84, 40

	.type	.L.str.85,@object               # @.str.85
.L.str.85:
	.asciz	"' which has been deprecated. See the upgrade guide in pybind11's docs. This message is only visible when compiled in debug mode."
	.size	.L.str.85, 129

	.type	.L.str.86,@object               # @.str.86
.L.str.86:
	.asciz	"Internal error while parsing type signature (2)"
	.size	.L.str.86, 48

	.type	.L.str.87,@object               # @.str.87
.L.str.87:
	.asciz	"Cannot overload existing non-function object \""
	.size	.L.str.87, 47

	.type	.L.str.88,@object               # @.str.88
.L.str.88:
	.asciz	"\" with a function of the same name"
	.size	.L.str.88, 35

	.type	.L.str.89,@object               # @.str.89
.L.str.89:
	.asciz	"cpp_function::cpp_function(): Could not allocate function object"
	.size	.L.str.89, 65

	.type	.L.str.90,@object               # @.str.90
.L.str.90:
	.asciz	"overloading a method with both static and instance methods is not supported; error while attempting to bind "
	.size	.L.str.90, 109

	.type	.L.str.91,@object               # @.str.91
.L.str.91:
	.asciz	"instance"
	.size	.L.str.91, 9

	.type	.L.str.92,@object               # @.str.92
.L.str.92:
	.asciz	"static"
	.size	.L.str.92, 7

	.type	.L.str.93,@object               # @.str.93
.L.str.93:
	.asciz	" method "
	.size	.L.str.93, 9

	.type	.L.str.94,@object               # @.str.94
.L.str.94:
	.asciz	"__name__"
	.size	.L.str.94, 9

	.type	.L.str.95,@object               # @.str.95
.L.str.95:
	.asciz	"."
	.size	.L.str.95, 2

	.type	.L.str.96,@object               # @.str.96
.L.str.96:
	.asciz	"_pybind11_conduit_v1_"
	.size	.L.str.96, 22

	.type	.L.str.97,@object               # @.str.97
.L.str.97:
	.asciz	"(*args, **kwargs)\n"
	.size	.L.str.97, 19

	.type	.L.str.98,@object               # @.str.98
.L.str.98:
	.asciz	"Overloaded function.\n\n"
	.size	.L.str.98, 23

	.type	.L.str.99,@object               # @.str.99
.L.str.99:
	.asciz	". "
	.size	.L.str.99, 3

	.type	.L.str.100,@object              # @.str.100
.L.str.100:
	.asciz	"cpp_function::cpp_function(): Could not allocate instance method object"
	.size	.L.str.100, 72

	.type	.L.str.101,@object              # @.str.101
.L.str.101:
	.asciz	"!@%{}-"
	.size	.L.str.101, 7

	.type	.L.str.102,@object              # @.str.102
.L.str.102:
	.asciz	"*, "
	.size	.L.str.102, 4

	.type	.L.str.103,@object              # @.str.103
.L.str.103:
	.asciz	"self"
	.size	.L.str.103, 5

	.type	.L.str.104,@object              # @.str.104
.L.str.104:
	.asciz	"arg"
	.size	.L.str.104, 4

	.type	.L.str.105,@object              # @.str.105
.L.str.105:
	.asciz	" = "
	.size	.L.str.105, 4

	.type	.L.str.106,@object              # @.str.106
.L.str.106:
	.asciz	", /"
	.size	.L.str.106, 4

	.type	.L.str.107,@object              # @.str.107
.L.str.107:
	.asciz	"Internal error while parsing type signature (1)"
	.size	.L.str.107, 48

	.type	.L.str.108,@object              # @.str.108
.L.str.108:
	.asciz	"__qualname__"
	.size	.L.str.108, 13

	.type	.L.str.109,@object              # @.str.109
.L.str.109:
	.asciz	"cannot create std::deque larger than max_size()"
	.size	.L.str.109, 48

	.type	.L.str.111,@object              # @.str.111
.L.str.111:
	.asciz	"basic_string::substr"
	.size	.L.str.111, 21

	.type	.L.str.113,@object              # @.str.113
.L.str.113:
	.asciz	"pybind11::detail::get_type_info: unable to find type info for \""
	.size	.L.str.113, 64

	.hidden	_ZZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11 # @_ZZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11
	.type	_ZZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11,@object
	.section	.bss._ZZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11,"awG",@nobits,_ZZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11,comdat
	.weak	_ZZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11
	.p2align	3, 0x0
_ZZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11:
	.zero	32
	.size	_ZZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11, 32

	.hidden	_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11 # @_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11
	.type	_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11,@object
	.section	.bss._ZGVZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11,"awG",@nobits,_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11,comdat
	.weak	_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11
	.p2align	3, 0x0
_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11:
	.quad	0                               # 0x0
	.size	_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11, 8

	.type	.L.str.114,@object              # @.str.114
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.114:
	.asciz	"__pybind11_module_local_v11_system_libstdcpp_gxx_abi_1xxx_use_cxx11_abi_1__"
	.size	.L.str.114, 76

	.hidden	_ZZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager # @_ZZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager
	.type	_ZZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager,@object
	.section	.bss._ZZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager,"awG",@nobits,_ZZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager,comdat
	.weak	_ZZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager
	.p2align	3, 0x0
_ZZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager:
	.zero	40
	.size	_ZZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager, 40

	.hidden	_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager # @_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager
	.type	_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager,@object
	.section	.bss._ZGVZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager,"awG",@nobits,_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager,comdat
	.weak	_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager
	.p2align	3, 0x0
_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager:
	.quad	0                               # 0x0
	.size	_ZGVZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager, 8

	.type	.L.str.115,@object              # @.str.115
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.115:
	.asciz	"basic_string::_M_replace_aux"
	.size	.L.str.115, 29

	.type	.L.str.116,@object              # @.str.116
.L.str.116:
	.asciz	"cannot create std::vector larger than max_size()"
	.size	.L.str.116, 49

	.type	.L.str.119,@object              # @.str.119
.L.str.119:
	.asciz	"PyCFunction_Check(func_obj)"
	.size	.L.str.119, 28

	.type	.L.str.120,@object              # @.str.120
.L.str.120:
	.asciz	"/opt/conda/envs/py_3.12/include/python3.12/cpython/methodobject.h"
	.size	.L.str.120, 66

	.type	.L__PRETTY_FUNCTION__._ZL20PyCFunction_GET_SELFP7_object,@object # @__PRETTY_FUNCTION__._ZL20PyCFunction_GET_SELFP7_object
.L__PRETTY_FUNCTION__._ZL20PyCFunction_GET_SELFP7_object:
	.asciz	"PyObject *PyCFunction_GET_SELF(PyObject *)"
	.size	.L__PRETTY_FUNCTION__._ZL20PyCFunction_GET_SELFP7_object, 43

	.type	_ZN8pybind116detailL28function_record_PyTypeObjectE,@object # @_ZN8pybind116detailL28function_record_PyTypeObjectE
	.data
	.p2align	3, 0x0
_ZN8pybind116detailL28function_record_PyTypeObjectE:
	.quad	1                               # 0x1
	.quad	0
	.quad	0                               # 0x0
	.quad	_ZN8pybind116detail36function_record_PyTypeObject_methodsL12tp_name_implE
	.quad	24                              # 0x18
	.quad	0                               # 0x0
	.quad	_ZN8pybind116detail36function_record_PyTypeObject_methods15tp_dealloc_implEP7_object
	.quad	0                               # 0x0
	.quad	0
	.quad	0
	.quad	0
	.quad	0
	.quad	0
	.quad	0
	.quad	0
	.quad	0
	.quad	0
	.quad	0
	.quad	0
	.quad	0
	.quad	0
	.quad	0                               # 0x0
	.quad	0
	.quad	0
	.quad	0
	.quad	0
	.quad	0                               # 0x0
	.quad	0
	.quad	0
	.quad	_ZN8pybind116detail36function_record_PyTypeObject_methodsL15tp_methods_implE
	.quad	0
	.quad	0
	.quad	0
	.quad	0
	.quad	0
	.quad	0
	.quad	0                               # 0x0
	.quad	_ZN8pybind116detail36function_record_PyTypeObject_methods12tp_init_implEP7_objectS3_S3_
	.quad	_ZN8pybind116detail36function_record_PyTypeObject_methods13tp_alloc_implEP11_typeobjectl
	.quad	_ZN8pybind116detail36function_record_PyTypeObject_methods11tp_new_implEP11_typeobjectP7_objectS5_
	.quad	_ZN8pybind116detail36function_record_PyTypeObject_methods12tp_free_implEPv
	.quad	0
	.quad	0
	.quad	0
	.quad	0
	.quad	0
	.quad	0
	.quad	0
	.long	0                               # 0x0
	.zero	4
	.quad	0
	.quad	0
	.byte	0                               # 0x0
	.zero	7
	.size	_ZN8pybind116detailL28function_record_PyTypeObjectE, 416

	.type	_ZN8pybind116detail36function_record_PyTypeObject_methodsL12tp_name_implE,@object # @_ZN8pybind116detail36function_record_PyTypeObject_methodsL12tp_name_implE
	.section	.rodata,"a",@progbits
	.p2align	4, 0x0
_ZN8pybind116detail36function_record_PyTypeObject_methodsL12tp_name_implE:
	.asciz	"pybind11_detail_function_record_v1_system_libstdcpp_gxx_abi_1xxx_use_cxx11_abi_1"
	.size	_ZN8pybind116detail36function_record_PyTypeObject_methodsL12tp_name_implE, 81

	.type	_ZN8pybind116detail36function_record_PyTypeObject_methodsL15tp_methods_implE,@object # @_ZN8pybind116detail36function_record_PyTypeObject_methodsL15tp_methods_implE
	.data
	.p2align	4, 0x0
_ZN8pybind116detail36function_record_PyTypeObject_methodsL15tp_methods_implE:
	.quad	.L.str.121
	.quad	_ZN8pybind116detail36function_record_PyTypeObject_methodsL14reduce_ex_implEP7_objectS3_S3_
	.long	3                               # 0x3
	.zero	4
	.quad	0
	.zero	32
	.size	_ZN8pybind116detail36function_record_PyTypeObject_methodsL15tp_methods_implE, 64

	.type	.L.str.121,@object              # @.str.121
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.121:
	.asciz	"__reduce_ex__"
	.size	.L.str.121, 14

	.type	.L.str.122,@object              # @.str.122
.L.str.122:
	.asciz	"FATAL: function_record_PyTypeObject reduce_ex_impl(): cannot obtain cpp_func_rec."
	.size	.L.str.122, 82

	.type	.L.str.123,@object              # @.str.123
.L.str.123:
	.asciz	"eval"
	.size	.L.str.123, 5

	.type	.L.str.124,@object              # @.str.124
.L.str.124:
	.asciz	"__import__('importlib').import_module('"
	.size	.L.str.124, 40

	.type	.L.str.125,@object              # @.str.125
.L.str.125:
	.asciz	"')"
	.size	.L.str.125, 3

	.type	.L.str.126,@object              # @.str.126
.L.str.126:
	.asciz	" is not pickleable."
	.size	.L.str.126, 20

	.hidden	_ZTSN8pybind116objectE          # @_ZTSN8pybind116objectE
	.type	_ZTSN8pybind116objectE,@object
	.section	.rodata._ZTSN8pybind116objectE,"aG",@progbits,_ZTSN8pybind116objectE,comdat
	.weak	_ZTSN8pybind116objectE
_ZTSN8pybind116objectE:
	.asciz	"N8pybind116objectE"
	.size	_ZTSN8pybind116objectE, 19

	.hidden	_ZTSN8pybind116handleE          # @_ZTSN8pybind116handleE
	.type	_ZTSN8pybind116handleE,@object
	.section	.rodata._ZTSN8pybind116handleE,"aG",@progbits,_ZTSN8pybind116handleE,comdat
	.weak	_ZTSN8pybind116handleE
_ZTSN8pybind116handleE:
	.asciz	"N8pybind116handleE"
	.size	_ZTSN8pybind116handleE, 19

	.type	.L.str.127,@object              # @.str.127
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.127:
	.asciz	"Unable to convert call argument '"
	.size	.L.str.127, 34

	.type	.L.str.128,@object              # @.str.128
.L.str.128:
	.asciz	"' of type '"
	.size	.L.str.128, 12

	.type	.L.str.129,@object              # @.str.129
.L.str.129:
	.asciz	"' to Python object"
	.size	.L.str.129, 19

	.type	.L.str.130,@object              # @.str.130
.L.str.130:
	.asciz	"Could not allocate tuple object!"
	.size	.L.str.130, 33

	.type	.L__PRETTY_FUNCTION__._ZL16PyTuple_SET_ITEMP7_objectlS0_,@object # @__PRETTY_FUNCTION__._ZL16PyTuple_SET_ITEMP7_objectlS0_
.L__PRETTY_FUNCTION__._ZL16PyTuple_SET_ITEMP7_objectlS0_:
	.asciz	"void PyTuple_SET_ITEM(PyObject *, Py_ssize_t, PyObject *)"
	.size	.L__PRETTY_FUNCTION__._ZL16PyTuple_SET_ITEMP7_objectlS0_, 58

	.hidden	_ZTSN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEEE # @_ZTSN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEEE
	.type	_ZTSN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEEE,@object
	.section	.rodata._ZTSN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEEE,"aG",@progbits,_ZTSN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEEE,comdat
	.weak	_ZTSN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEEE
_ZTSN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEEE:
	.asciz	"N8pybind116detail8accessorINS0_17accessor_policies12generic_itemEEE"
	.size	_ZTSN8pybind116detail8accessorINS0_17accessor_policies12generic_itemEEE, 68

	.hidden	_ZTSN8pybind115tupleE           # @_ZTSN8pybind115tupleE
	.type	_ZTSN8pybind115tupleE,@object
	.section	.rodata._ZTSN8pybind115tupleE,"aG",@progbits,_ZTSN8pybind115tupleE,comdat
	.weak	_ZTSN8pybind115tupleE
_ZTSN8pybind115tupleE:
	.asciz	"N8pybind115tupleE"
	.size	_ZTSN8pybind115tupleE, 18

	.type	.L.str.131,@object              # @.str.131
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.131:
	.asciz	"UNEXPECTED CALL OF function_record_PyTypeObject_methods::tp_init_impl"
	.size	.L.str.131, 70

	.type	.L.str.132,@object              # @.str.132
.L.str.132:
	.asciz	"UNEXPECTED CALL OF function_record_PyTypeObject_methods::tp_alloc_impl"
	.size	.L.str.132, 71

	.type	.L.str.133,@object              # @.str.133
.L.str.133:
	.asciz	"UNEXPECTED CALL OF function_record_PyTypeObject_methods::tp_new_impl"
	.size	.L.str.133, 69

	.type	.L.str.134,@object              # @.str.134
.L.str.134:
	.asciz	"UNEXPECTED CALL OF function_record_PyTypeObject_methods::tp_free_impl"
	.size	.L.str.134, 70

	.type	.L.str.135,@object              # @.str.135
.L.str.135:
	.asciz	"overloads != nullptr"
	.size	.L.str.135, 21

	.type	.L.str.136,@object              # @.str.136
.L.str.136:
	.asciz	"/opt/conda/envs/py_3.12/lib/python3.12/site-packages/pybind11/include/pybind11/pybind11.h"
	.size	.L.str.136, 90

	.type	.L__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_,@object # @__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_
.L__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_:
	.asciz	"static PyObject *pybind11::cpp_function::dispatcher(PyObject *, PyObject *, PyObject *)"
	.size	.L__PRETTY_FUNCTION__._ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_, 88

	.type	.L.str.137,@object              # @.str.137
.L.str.137:
	.asciz	"PyTuple_Check(args_in)"
	.size	.L.str.137, 23

	.type	.L.str.138,@object              # @.str.138
.L.str.138:
	.asciz	"__init__(self, ...) called with invalid or missing `self` argument"
	.size	.L.str.138, 67

	.type	.L.str.139,@object              # @.str.139
.L.str.139:
	.asciz	"Internal error: function call dispatcher inserted wrong number of arguments!"
	.size	.L.str.139, 77

	.hidden	_ZTSN8pybind1120reference_cast_errorE # @_ZTSN8pybind1120reference_cast_errorE
	.type	_ZTSN8pybind1120reference_cast_errorE,@object
	.section	.rodata._ZTSN8pybind1120reference_cast_errorE,"aG",@progbits,_ZTSN8pybind1120reference_cast_errorE,comdat
	.weak	_ZTSN8pybind1120reference_cast_errorE
_ZTSN8pybind1120reference_cast_errorE:
	.asciz	"N8pybind1120reference_cast_errorE"
	.size	_ZTSN8pybind1120reference_cast_errorE, 34

	.hidden	_ZTIN8pybind1120reference_cast_errorE # @_ZTIN8pybind1120reference_cast_errorE
	.type	_ZTIN8pybind1120reference_cast_errorE,@object
	.section	.data.rel.ro._ZTIN8pybind1120reference_cast_errorE,"awG",@progbits,_ZTIN8pybind1120reference_cast_errorE,comdat
	.weak	_ZTIN8pybind1120reference_cast_errorE
	.p2align	3, 0x0
_ZTIN8pybind1120reference_cast_errorE:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSN8pybind1120reference_cast_errorE
	.quad	_ZTIN8pybind1117builtin_exceptionE
	.size	_ZTIN8pybind1120reference_cast_errorE, 24

	.type	.L.str.140,@object              # @.str.140
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.140:
	.asciz	"(): incompatible "
	.size	.L.str.140, 18

	.type	.L.str.141,@object              # @.str.141
.L.str.141:
	.asciz	"constructor"
	.size	.L.str.141, 12

	.type	.L.str.142,@object              # @.str.142
.L.str.142:
	.asciz	"function"
	.size	.L.str.142, 9

	.type	.L.str.143,@object              # @.str.143
.L.str.143:
	.asciz	" arguments. The following argument types are supported:\n"
	.size	.L.str.143, 57

	.type	.L.str.144,@object              # @.str.144
.L.str.144:
	.asciz	"    "
	.size	.L.str.144, 5

	.type	.L.str.145,@object              # @.str.145
.L.str.145:
	.asciz	", "
	.size	.L.str.145, 3

	.type	.L.str.146,@object              # @.str.146
.L.str.146:
	.asciz	" -> "
	.size	.L.str.146, 5

	.type	.L.str.147,@object              # @.str.147
.L.str.147:
	.asciz	"\nInvoked with: "
	.size	.L.str.147, 16

	.type	.L.str.148,@object              # @.str.148
.L.str.148:
	.asciz	"<repr raised Error>"
	.size	.L.str.148, 20

	.type	.L.str.149,@object              # @.str.149
.L.str.149:
	.asciz	"; "
	.size	.L.str.149, 3

	.type	.L.str.150,@object              # @.str.150
.L.str.150:
	.asciz	"kwargs: "
	.size	.L.str.150, 9

	.type	.L.str.151,@object              # @.str.151
.L.str.151:
	.asciz	"{}="
	.size	.L.str.151, 4

	.type	.L.str.152,@object              # @.str.152
.L.str.152:
	.asciz	"Unable to convert function return value to a Python type! The signature was\n\t"
	.size	.L.str.152, 78

	.type	.L.str.153,@object              # @.str.153
.L.str.153:
	.asciz	"current_overload != nullptr"
	.size	.L.str.153, 28

	.type	.L.str.154,@object              # @.str.154
.L.str.154:
	.asciz	"pybind11::detail::get_type_info: type has multiple pybind11-registered bases"
	.size	.L.str.154, 77

	.type	.L.str.155,@object              # @.str.155
.L.str.155:
	.asciz	"pybind11::detail::instance::get_value_and_holder: `"
	.size	.L.str.155, 52

	.type	.L.str.156,@object              # @.str.156
.L.str.156:
	.asciz	"' is not a pybind11 base of the given `"
	.size	.L.str.156, 40

	.type	.L.str.157,@object              # @.str.157
.L.str.157:
	.asciz	"' instance"
	.size	.L.str.157, 11

	.type	.L.str.159,@object              # @.str.159
.L.str.159:
	.asciz	"vector<bool>::_M_insert_aux"
	.size	.L.str.159, 28

	.type	.L.str.160,@object              # @.str.160
.L.str.160:
	.asciz	"Could not allocate dict object!"
	.size	.L.str.160, 32

	.type	.L.str.161,@object              # @.str.161
.L.str.161:
	.asciz	"vector<bool>::_M_fill_insert"
	.size	.L.str.161, 29

	.type	.L.str.162,@object              # @.str.162
.L.str.162:
	.asciz	"loader_life_support: internal error"
	.size	.L.str.162, 36

	.type	.L.str.163,@object              # @.str.163
.L.str.163:
	.asciz	"Exception escaped from default exception translator!"
	.size	.L.str.163, 53

	.type	.L.str.164,@object              # @.str.164
.L.str.164:
	.asciz	"Internal error: pybind11::detail::error_fetch_and_normalize::restore() called a second time. ORIGINAL ERROR: "
	.size	.L.str.164, 110

	.type	.L.str.165,@object              # @.str.165
.L.str.165:
	.asciz	"format"
	.size	.L.str.165, 7

	.type	.L.str.166,@object              # @.str.166
.L.str.166:
	.asciz	"pybind11::object_api<>::operator() PyGILState_Check() failure."
	.size	.L.str.166, 63

	.type	.L.str.167,@object              # @.str.167
.L.str.167:
	.asciz	"std::"
	.size	.L.str.167, 6

	.type	.L.str.168,@object              # @.str.168
.L.str.168:
	.asciz	"\n\nDid you forget to `#include <pybind11/stl.h>`? Or <pybind11/complex.h>,\n<pybind11/functional.h>, <pybind11/chrono.h>, etc. Some automatic\nconversions are optional and require extra headers to be included\nwhen compiling your pybind11 module."
	.size	.L.str.168, 243

	.type	_ZN8pybind116detailL52function_record_PyTypeObject_PyType_Ready_first_callE,@object # @_ZN8pybind116detailL52function_record_PyTypeObject_PyType_Ready_first_callE
	.local	_ZN8pybind116detailL52function_record_PyTypeObject_PyType_Ready_first_callE
	.comm	_ZN8pybind116detailL52function_record_PyTypeObject_PyType_Ready_first_callE,1,1
	.hidden	_ZZN8pybind117options12global_stateEvE8instance # @_ZZN8pybind117options12global_stateEvE8instance
	.type	_ZZN8pybind117options12global_stateEvE8instance,@object
	.section	.data._ZZN8pybind117options12global_stateEvE8instance,"awG",@progbits,_ZZN8pybind117options12global_stateEvE8instance,comdat
	.weak	_ZZN8pybind117options12global_stateEvE8instance
_ZZN8pybind117options12global_stateEvE8instance:
	.byte	1                               # 0x1
	.byte	1                               # 0x1
	.byte	1                               # 0x1
	.size	_ZZN8pybind117options12global_stateEvE8instance, 3

	.type	.L.str.169,@object              # @.str.169
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.169:
	.asciz	"Could not allocate weak reference!"
	.size	.L.str.169, 35

	.type	.L.str.170,@object              # @.str.170
.L.str.170:
	.asciz	"!types->empty()"
	.size	.L.str.170, 16

	.type	.L__PRETTY_FUNCTION__._ZN8pybind116detail18values_and_holders8iteratorC2EPNS0_8instanceEPKSt6vectorIPNS0_9type_infoESaIS7_EE,@object # @__PRETTY_FUNCTION__._ZN8pybind116detail18values_and_holders8iteratorC2EPNS0_8instanceEPKSt6vectorIPNS0_9type_infoESaIS7_EE
.L__PRETTY_FUNCTION__._ZN8pybind116detail18values_and_holders8iteratorC2EPNS0_8instanceEPKSt6vectorIPNS0_9type_infoESaIS7_EE:
	.asciz	"pybind11::detail::values_and_holders::iterator::iterator(instance *, const type_vec *)"
	.size	.L__PRETTY_FUNCTION__._ZN8pybind116detail18values_and_holders8iteratorC2EPNS0_8instanceEPKSt6vectorIPNS0_9type_infoESaIS7_EE, 87

	.type	.L.str.171,@object              # @.str.171
.L.str.171:
	.asciz	"Caught an unknown exception!"
	.size	.L.str.171, 29

	.type	.L.str.172,@object              # @.str.172
.L.str.172:
	.asciz	"Caught an unknown nested exception!"
	.size	.L.str.172, 36

	.type	.L.str.173,@object              # @.str.173
.L.str.173:
	.asciz	"pybind11_object"
	.size	.L.str.173, 16

	.type	.L.str.174,@object              # @.str.174
.L.str.174:
	.asciz	"make_object_base_type(): error allocating type!"
	.size	.L.str.174, 48

	.type	.L.str.175,@object              # @.str.175
.L.str.175:
	.asciz	"PyType_Ready failed in make_object_base_type(): "
	.size	.L.str.175, 49

	.type	.L.str.176,@object              # @.str.176
.L.str.176:
	.asciz	"!PyType_HasFeature(type, Py_TPFLAGS_HAVE_GC)"
	.size	.L.str.176, 45

	.type	.L.str.177,@object              # @.str.177
.L.str.177:
	.asciz	"/opt/conda/envs/py_3.12/lib/python3.12/site-packages/pybind11/include/pybind11/detail/class.h"
	.size	.L.str.177, 94

	.type	.L__PRETTY_FUNCTION__._ZN8pybind116detail21make_object_base_typeEP11_typeobject,@object # @__PRETTY_FUNCTION__._ZN8pybind116detail21make_object_base_typeEP11_typeobject
.L__PRETTY_FUNCTION__._ZN8pybind116detail21make_object_base_typeEP11_typeobject:
	.asciz	"PyObject *pybind11::detail::make_object_base_type(PyTypeObject *)"
	.size	.L__PRETTY_FUNCTION__._ZN8pybind116detail21make_object_base_typeEP11_typeobject, 66

	.type	.L.str.178,@object              # @.str.178
.L.str.178:
	.asciz	"instance allocation failed: new instance has no pybind11-registered base types"
	.size	.L.str.178, 79

	.type	.L.str.179,@object              # @.str.179
.L.str.179:
	.asciz	": No constructor defined!"
	.size	.L.str.179, 26

	.type	.L.str.180,@object              # @.str.180
.L.str.180:
	.asciz	"pybind11_object_dealloc(): Tried to deallocate unregistered instance!"
	.size	.L.str.180, 70

	.type	.L.str.181,@object              # @.str.181
.L.str.181:
	.asciz	"FATAL: Internal consistency check failed: Invalid clear_patients() call."
	.size	.L.str.181, 73

	.type	.L.str.182,@object              # @.str.182
.L.str.182:
	.asciz	"initialization failed"
	.size	.L.str.182, 22

	.type	.L.str.183,@object              # @.str.183
.L.str.183:
	.asciz	"tk_kernel python module"
	.size	.L.str.183, 24

	.type	.L.str.184,@object              # @.str.184
.L.str.184:
	.asciz	"micro_tk"
	.size	.L.str.184, 9

	.type	.L.str.185,@object              # @.str.185
.L.str.185:
	.asciz	"dispatch_micro"
	.size	.L.str.185, 15

	.type	.L.str.186,@object              # @.str.186
.L.str.186:
	.asciz	"__doc__"
	.size	.L.str.186, 8

	.type	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E9signature,@object # @_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E9signature
	.section	.rodata,"a",@progbits
_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E9signature:
	.asciz	"({object}, {object}, {object}) -> None"
	.size	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E9signature, 39

	.type	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E5types,@object # @_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E5types
	.p2align	3, 0x0
_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E5types:
	.zero	8
	.size	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E5types, 8

	.type	.L.str.187,@object              # @.str.187
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.187:
	.asciz	"__class__"
	.size	.L.str.187, 10

	.type	.L.str.188,@object              # @.str.188
.L.str.188:
	.asciz	"Tensor"
	.size	.L.str.188, 7

	.type	.L.str.189,@object              # @.str.189
.L.str.189:
	.asciz	"is_contiguous"
	.size	.L.str.189, 14

	.type	.L.str.190,@object              # @.str.190
.L.str.190:
	.asciz	"Tensor must be contiguous"
	.size	.L.str.190, 26

	.type	.L.str.191,@object              # @.str.191
.L.str.191:
	.asciz	"device"
	.size	.L.str.191, 7

	.type	.L.str.192,@object              # @.str.192
.L.str.192:
	.asciz	"type"
	.size	.L.str.192, 5

	.type	.L.str.193,@object              # @.str.193
.L.str.193:
	.asciz	"cpu"
	.size	.L.str.193, 4

	.type	.L.str.194,@object              # @.str.194
.L.str.194:
	.asciz	"Tensor must be on CUDA device"
	.size	.L.str.194, 30

	.type	.L__const._ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE.shape,@object # @__const._ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE.shape
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	2, 0x0
.L__const._ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE.shape:
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.long	1                               # 0x1
	.size	.L__const._ZN7kittens2py11from_objectINS_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEEE4makeEN8pybind116objectE.shape, 16

	.type	.L.str.195,@object              # @.str.195
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.195:
	.asciz	"shape"
	.size	.L.str.195, 6

	.type	.L.str.196,@object              # @.str.196
.L.str.196:
	.asciz	"Expected Tensor.ndim <= 4"
	.size	.L.str.196, 26

	.type	.L.str.197,@object              # @.str.197
.L.str.197:
	.asciz	"data_ptr"
	.size	.L.str.197, 9

	.type	.L.str.198,@object              # @.str.198
.L.str.198:
	.asciz	"Expected a torch.Tensor"
	.size	.L.str.198, 24

	.type	.L.str.201,@object              # @.str.201
.L.str.201:
	.asciz	"Error during initialization: multiple incompatible definitions with name \""
	.size	.L.str.201, 75

	.type	.L.str.202,@object              # @.str.202
.L.str.202:
	.asciz	"\""
	.size	.L.str.202, 2

	.type	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E9signature,@object # @_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E9signature
	.section	.rodata,"a",@progbits
_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E9signature:
	.asciz	"({object}, {object}, {object}) -> None"
	.size	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E9signature, 39

	.type	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E5types,@object # @_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E5types
	.p2align	3, 0x0
_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E5types:
	.zero	8
	.size	_ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E5types, 8

	.type	.L__unnamed_1,@object           # @0
	.section	.rodata.str1.1,"aMS",@progbits,1
.L__unnamed_1:
	.asciz	"_Z8micro_tk13micro_globals"
	.size	.L__unnamed_1, 27

	.type	.L__unnamed_2,@object           # @1
	.section	.hip_fatbin,"a",@progbits
	.p2align	12, 0x0
.L__unnamed_2:
	.asciz	"__CLANG_OFFLOAD_BUNDLE__\002\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\000\000\000\000\000\000\000host-x86_64-unknown-linux-gnu-\000\020\000\000\000\000\000\000P1\000\000\000\000\000\000\037\000\000\000\000\000\000\000hipv4-amdgcn-amd-amdhsa--gfxt\000@\000\020\000\016\000\006\000\000\000\004\000\000\000@\000\000\000\000\000\000\000@\000\000\000\000\000\000\000@\000\000\000\000\000\000\000\370\001\000\000\000\000\000\000\370\001\000\000\000\000\000\000\b\000\000\000\000\000\000\000\001\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\b\000\000\000\000\000\000\200\b\000\000\000\000\000\000\000\020\000\000\000\000\000\000\001\000\000\000\005\000\000\000\000\t\000\000\000\000\000\000\000\031\000\000\000\000\000\000\000\031\000\000\000\000\000\000@!\000\000\000\000\000\000@!\000\000\000\000\000\000\000\020\000\000\000\000\000\000\001\000\000\000\006\000\000\000@*\000\000\000\000\000\000@J\000\000\000\000\000\000@J\000\000\000\000\000\000p\000\000\000\000\000\000\000\300\005\000\000\000\000\000\000\000\020\000\000\000\000\000\000\001\000\000\000\006\000\000\000\260*\000\000\000\000\000\000\260Z\000\000\000\000\000\000\260Z\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\002\000\000\000\006\000\000\000@*\000\000\000\000\000\000@J\000\000\000\000\000\000@J\000\000\000\000\000\000p\000\000\000\000\000\000\000p\000\000\000\000\000\000\000\b\000\000\000\000\000\000\000R\345td\004\000\000\000@*\000\000\000\000\000\000@J\000\000\000\000\000\000@J\000\000\000\000\000\000p\000\000\000\000\000\000\000\300\005\000\000\000\000\000\000\001\000\000\000\000\000\000\000Q\345td\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\000\000\004\000\000\0008\002\000\000\000\000\000\0008\002\000\000\000\000\000\0008\002\000\000\000\000\000\000\334\004\000\000\000\000\000\000\334\004\000\000\000\000\000\000\004\000\000\000\000\000\000\000\007\000\000\000\305\004\000\000 \000\000\000AMDGPU\000\000\203\256amdhsa.kernels\221\336\000\022\253.agpr_count\000\245.args\237\203\247.offset\000\245.size\314\220\253.value_kind\250by_value\203\247.offset\314\220\245.size\004\253.value_kind\264hidden_block_count_x\203\247.offset\314\224\245.size\004\253.value_kind\264hidden_block_count_y\203\247.offset\314\230\245.size\004\253.value_kind\264hidden_block_count_z\203\247.offset\314\234\245.size\002\253.value_kind\263hidden_group_size_x\203\247.offset\314\236\245.size\002\253.value_kind\263hidden_group_size_y\203\247.offset\314\240\245.size\002\253.value_kind\263hidden_group_size_z\203\247.offset\314\242\245.size\002\253.value_kind\262hidden_remainder_x\203\247.offset\314\244\245.size\002\253.value_kind\262hidden_remainder_y\203\247.offset\314\246\245.size\002\253.value_kind\262hidden_remainder_z\203\247.offset\314\270\245.size\b\253.value_kind\266hidden_global_offset_x\203\247.offset\314\300\245.size\b\253.value_kind\266hidden_global_offset_y\203\247.offset\314\310\245.size\b\253.value_kind\266hidden_global_offset_z\203\247.offset\314\320\245.size\002\253.value_kind\260hidden_grid_dims\203\247.offset\315\001\b\245.size\004\253.value_kind\267hidden_dynamic_lds_size\271.group_segment_fixed_size\000\266.kernarg_segment_align\b\265.kernarg_segment_size\315\001\220\251.language\250OpenCL C\261.language_version\222\002\000\270.max_flat_workgroup_size\315\002\000\245.name\272_Z8micro_tk13micro_globals\273.private_segment_fixed_size\000\253.sgpr_count \261.sgpr_spill_count\000\247.symbol\275_Z8micro_tk13micro_globals.kd\270.uniform_work_group_size\001\263.uses_dynamic_stack\302\253.vgpr_count\314\372\261.vgpr_spill_count\000\257.wavefront_size@\255amdhsa.target\271amdgcn-amd-amdhsa--gfx942\256amdhsa.version\222\001\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\022\003\007\000\000\031\000\000\000\000\000\000(\035\000\000\000\000\000\000\034\000\000\000\021\003\006\000@\b\000\000\000\000\000\000@\000\000\000\000\000\000\000:\000\000\000\021\000\n\000\260Z\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\032\000\000\000\002\000\201\000\000\220\020\000\001\000\000\000n\226\363@\354\205\221\322\227lM\005\004\000\000\000\004\000\000\000\002\000\000\000\000\000\000\000\003\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000_Z8micro_tk13micro_globals\000_Z8micro_tk13micro_globals.kd\000__hip_cuid_a387003902ba631b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\001\000\000\000\000\000\000\300\020\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\000\000\000\337\000\257\000\204\001\000\000\b`f\002~\200\024\227\201\003\377\003\206\200\377\377\377\002\003\202\201\001G\002~\0020\226\276\025\377\000\201\000\200\000\000\000\320\001\206\377\002\002\n\376\377\177O\001\017\002~\002\023\003\210\000\217\020\206\001\220\001\201\001\0050~\027\030\027\222\030\027\027\226\030\027\030\201\026\030\027\226\027\024\030\222\026\030\226\201\003\237\003\220\027\201\030\201\026\024\231\201\026\024\t\277\030\027\027\205\031\026\026\205\027\201\030\201\026\024\t\277\030\027\024\205\024\003\024\210\024\003\224\201\024\023\003\222\002\003\202\201\022\002\022\201\022\210\023\216\023\237\022\220\006\022\002\222\006\023\003\226\003\002\002\201\007\023\003\222\002\003\003\201\006\023\002\222\002\201\202\216\f\002\f\200\r\003\r\202\024\210\024\216\024\237\002\220\004\002\002\222\004\024\003\226\003\002\002\201\005\024\003\222\002\003\003\201\004\024\002\222\002\201\202\216\203\000\002$\016\002\016\200\270\002@&\203\000\002 \017\003\017\202\002\002\350\321\001\r\200\004\237\004\006\"\004\000\b\322\002\0031\000\300\0028(\000\200\\\334\004\000\177\n\004\002\350\321\034\r\200\004\237\b\n\"\006\000\b\322\004\0031\000\000\200\\\334\006\000\177\016\006\000\375\321\006\016\t\004\204\000&$\201@H$\237\f\016\"\377&\006&\200\037\000\000\025H:h\b\000\b\322\006\0031\000\377\002B(\300\000\000\000\035\007\nh\000\200\\\334\b\000\177\024\b\002\350\321!\r\200\004\204\n\016 \237\020\022\"\210HJ(\377\016\016&x\000\000\000\030\000\b\322\b\0031\000\025J<h\007\013\n*\000\200\\\334\030\000\177\030p\017\214\277\000\000\232\330\005\n\000\000\036\007\nh\204\n\016 \377\016\016&x\000\000\000\007\013\n*\000\000\232\330\005\f\000\000\377\006\n(\000 \000\000\035\013\016h\204\016\022 \377\022\022&x\000\000\000\t\017\016*\000\000\232\330\007\016\000\000\036\013\016h\204\016\022 \377\022\022&x\000\000\000\t\017\016*\000\000\232\330\007\020\000\000\377\006\016(\000@\000\000\035\017\022h\204\022\024 \377\024\024&x\000\000\000\n\023\022*\000\000\232\330\t\024\000\000\036\017\022h\204\022\024 \377\024\024&x\000\000\000\n\023\022*\000\000\232\330\t\026\000\000\377\006\022(\000`\000\000\035\023\024h\204\024\026 \377\026\026&x\000\000\000\013\025\024*\000\000\232\330\n\030\000\000\036\023\024h\204\024\026 \377\026\026&x\000\000\000\013\025\024*\000\000\232\330\n\032\000\000\n\002\350\321\001\t\200\004\237\024\026\"\f\000\b\322\n\0039\000\177\300\214\277\000\200\\\334\f\000\177\024\f\002\350\321\034\t\200\004\237\030\032\"\016\000\b\322\f\0039\000\000\200\\\334\016\000\177\030\016\000\375\321\004\016)\004\237\034\036\"\020\000\b\322\016\0039\000\020\200\022\277\000\200\\\334\020\000\177\034\020\002\350\321!\t\200\004\000\001\003\205\000\000\200\277\003H\002h\001\007\032h\204\032\036 \237 \"\"\377\036\036&x\000\000\000 \000\b\322\020\0039\000\003J\026h\017\033\032*\000\200\\\334 \000\177 p\017\214\277\000\000\232\330\r\024\000\000\013\007\032h\204\032\036 \377\036\036&x\000\000\000\017\033\032*\000\000\232\330\r\026\000\000\001\013\032h\204\032\036 \377\036\036&x\000\000\000\017\033\032*\000\000\232\330\r\030\000\000\013\013\032h\204\032\036 \377\036\036&x\000\000\000\017\033\032*\000\000\232\330\r\032\000\000\001\017\032h\204\032\036 \377\036\036&x\000\000\000\017\033\032*\000\000\232\330\r\034\000\000\013\017\032h\204\032\036 \377\036\036&x\000\000\000\017\033\032*\001\023\002h\000\000\232\330\r\036\000\000\204\002\032 \377\032\032&x\000\000\000\r\003\002*\000\000\232\330\001 \000\000\013\023\002h\204\002\026 \377\026\026&x\000\000\000\013\003\002*\000\000\232\330\001\"\000\000\210\000$ \201$\224}\177\300\214\277\000\000\212\277j \200\276\001\000\210\277\000\000\212\277~\000\376\207\217\000\004'\203\000\310\321\000\r\t\002\201\004\034%\202\000\002 \207\004\005$\201\b\036%\214\002\002&\004\000\000\322\203\033\t\004\201\f %\201\002\f$\003\b\bh\201\020\"%\004\r\020h\204\020\026 \002\000\000\322\022\033\t\004\377\026\026&x\000\000\000\025\004\004h\013\021$+\002\r\020h\204\020\026 \377\026\026&x\000\000\000\206$\b%\013\021&+\204\005\021(\b\000\375\321\b\017U\000\377\020\020h\000@\000\000\b\r\026h\204\026\032 \377\032\032&x\000\000\000\r\027(+\240\f\026(\004\027\032h\204\032\036 \377\036\036&x\000\000\000\017\033\032+\002\027\032h\204\032\036 \377\036\036&x\000\000\000\b\027\026h\017\033\030+\204\026\032 \377\032\032&x\000\000\000\r\027\026+\300\f\026(\004\027\032h\377\f\f(`\000\000\000\204\032\036 \004\r\bh\377\036\036&x\000\000\000\201\024*%\204\b\024 \017\033\016+\002\027\032h\377\024\024&x\000\000\000\002\r\004h\n\t\024+\204\004\b \377\b\b&x\000\000\000\004\005\022+\b\r\004h\204\004\b \204\032\036 \377\b\b&x\000\000\000\377\036\036&x\000\000\000\b\027\026h\004\005\020+\377&\004&p\000\000\000\017\033\f+\204\026\032 \025\004\bh\377\032\032&x\000\000\000\004\007\024h\r\027\n+\210\004\f(\204\024\026 \025\f\020h\377\026\026&x\000\000\000\013\0252+\b\007\024h\204\024\026 \377\026\026&x\000\000\000\013\0254+\004\013\024h\204\024\026 \377\026\026&x\000\000\000\013\0256+\b\013\024h\204\024\026 \377\026\026&x\000\000\000\013\0258+\004\017\024h\204\024\026 \377\026\026&x\000\000\000\013\025:+\b\017\024h\204\024\026 \377\026\026&x\000\000\000\004\023\bh\013\025<+\204\b\024 \377\024\024&x\000\000\000\n\t>+\b\023\bh\204\b\020 \377\020\020&x\000\000\000\003\004\004h\b\t@+\003\f\bh\002\007\fh\204\f\020 \377\020\020&x\000\000\000\004\007\006h\b\rB+\204\006\f \377\f\f&x\000\000\000\006\007D+\002\013\006h\204\006\f \377\f\f&x\000\000\000\006\007F+\004\013\006h\204\006\n \377\n\n&x\000\000\000\005\007H+\002\017\006h\204\006\n \377\n\n&x\000\000\000\005\007J+\004\017\006h\204\006\n \377\n\n&x\000\000\000\002\023\004h\005\007L+\204\004\006 \377\006\006&x\000\000\000\003\005N+\004\023\004h\204\004\006 \377\006\006&x\000\000\000\003\005P+\200\002\004~\006\211\002\216\004\211\006\216\201\030,%\201\034.%\201 0%\377\001\220\276\200\000\000\000\377\000\203\276\000\000\021\000\002\003\006~\002\003\b~\002\003\n~\002\003\f~\002\003\016~\002\003\020~\002\003\022~\002\003\024~\002\003\026~\002\003\030~\002\003\032~\002\003\034~\002\003\036~\002\003 ~\002\003\"~\002\003$~\002\003&~\002\003(~\002\003*~\002\003,~\002\003.~\002\0030~\002\0032~\002\0034~\002\0036~\002\0038~\002\003:~\002\003<~\002\003>~\002\003@~\002\003B~\002\003D~\002\003F~\002\003H~\002\003J~\002\003L~\002\003N~\002\003P~\002\003R~\002\003T~\002\003V~\002\003X~\002\003Z~\002\003\\~\002\003^~\002\003`~\002\003b~\002\003d~\002\003f~\002\003h~\002\003j~\002\003l~\002\003n~\002\003p~\002\003r~\002\003t~\002\003v~\002\003x~\002\003z~\002\003|~\002\003~~\002\003\200~\002\003\202~\002\003\204~\002\003\206~\002\003\210~\002\003\212~\002\003\214~\002\003\216~\002\003\220~\002\003\222~\002\003\224~\002\003\226~\002\003\230~\002\003\232~\002\003\234~\002\003\236~\002\003\240~\002\003\242~\002\003\244~\002\003\246~\002\003\250~\002\003\252~\002\003\254~\002\003\256~\002\003\260~\002\003\262~\002\003\264~\002\003\266~\002\003\270~\002\003\272~\002\003\274~\002\003\276~\002\003\300~\002\003\302~\002\003\304~\002\003\306~\002\003\310~\002\003\312~\002\003\314~\002\003\316~\002\003\320~\002\003\322~\002\003\324~\002\003\326~\002\003\330~\002\003\332~\002\003\334~\002\003\336~\002\003\340~\002\003\342~\002\003\344~\002\003\346~\002\003\350~\002\003\352~\002\003\354~\002\003\356~\002\003\360~\002\003\362~\002\003\364~\002\003\366~\002\003\370~\002\003\372~\002\003\374~\002\003\376~\002\003\000\177\002\003\002\177\f\020\000\200\r\021\001\202\177\300\214\277\000\020\\\340\216\252\000\200\000\020\\\340\217\256\000\200\000\020\\\340\220\262\000\200\000\020\\\340\221\266\000\200\000\000\354\330\222\000\000\272\000\b\354\330\222\000\000\274\000\020\354\330\222\000\000\276\000\030\354\330\222\000\000\300\000\000\354\330\223\000\000\302\000\b\354\330\223\000\000\304\000\020\354\330\223\000\000\306\000\030\354\330\223\000\000\310\000\000\354\330\224\000\000\312\000\b\354\330\224\000\000\314\000\020\354\330\224\000\000\316\000\030\354\330\224\000\000\320\177\300\214\277\000\000\212\277\177\300\214\277\001\000\217\277~\000\341\323\302u\373\005z\000\341\323\302y\353\005v\000\341\323\302}\333\005r\000\341\323\302\201\313\005n\000\341\323\304u\273\005j\000\341\323\304y\253\005f\000\341\323\304}\233\005b\000\341\323\304\201\213\005^\000\341\323\306u{\005Z\000\341\323\306yk\005V\000\341\323\306}[\005R\000\341\323\306\201K\005N\000\341\323\310u;\005J\000\341\323\310y+\005F\000\341\323\310}\033\005B\000\341\323\310\201\013\005>\000\341\323\312u\373\004:\000\341\323\312y\353\0046\000\341\323\312}\333\0042\000\341\323\312\201\313\004.\000\341\323\314u\273\004*\000\341\323\314y\253\004&\000\341\323\314}\233\004\"\000\341\323\314\201\213\004\036\000\341\323\316u{\004\032\000\341\323\316yk\004\026\000\341\323\316}[\004\022\000\341\323\316\201K\004\016\000\341\323\320u;\004\n\000\341\323\320y+\004\006\000\341\323\320}\033\004\002\000\341\323\320\201\013\004\000\000\217\277\000\000\212\277\177\300\214\277\000\000\354\330\215\000\000\272\000\b\354\330\215\000\000\274\000\020\354\330\215\000\000\276\000\030\354\330\215\000\000\300\000\000\354\330\214\000\000\302\000\b\354\330\214\000\000\304\000\020\354\330\214\000\000\306\000\030\354\330\214\000\000\310\000\000\354\330\213\000\000\312\000\b\354\330\213\000\000\314\000\020\354\330\213\000\000\316\000\030\354\330\213\000\000\320\000\000\354\330\207\000\000\322\000\b\354\330\207\000\000\324\000\020\354\330\207\000\000\326\000\030\354\330\207\000\000\330\000\000\354\330\206\000\000\332\000\b\354\330\206\000\000\334\000\020\354\330\206\000\000\336\000\030\354\330\206\000\000\340\000\000\354\330\205\000\000\342\000\b\354\330\205\000\000\344\000\020\354\330\205\000\000\346\000\030\354\330\205\000\000\350\177\300\214\277\000\000\212\277\177\300\214\277\001\000\217\277~\000\341\323\302u\373\005z\000\341\323\302y\353\005v\000\341\323\302}\333\005r\000\341\323\302\201\313\005n\000\341\323\304u\273\005j\000\341\323\304y\253\005f\000\341\323\304}\233\005b\000\341\323\304\201\213\005^\000\341\323\306u{\005Z\000\341\323\306yk\005V\000\341\323\306}[\005R\000\341\323\306\201K\005N\000\341\323\310u;\005J\000\341\323\310y+\005F\000\341\323\310}\033\005B\000\341\323\310\201\013\005>\000\341\323\312u\373\004:\000\341\323\312y\353\0046\000\341\323\312}\333\0042\000\341\323\312\201\313\004.\000\341\323\314u\273\004*\000\341\323\314y\253\004&\000\341\323\314}\233\004\"\000\341\323\314\201\213\004\036\000\341\323\316u{\004\032\000\341\323\316yk\004\026\000\341\323\316}[\004\022\000\341\323\316\201K\004\016\000\341\323\320u;\004\n\000\341\323\320y+\004\006\000\341\323\320}\033\004\002\000\341\323\320\201\013\004\000\000\217\277\000\000\212\277\016\020\004\200\017\021\005\202\003\000\207\276\177\300\214\277\000\020\\\340\225\272\001\200\000\020\\\340\226\276\001\200\000\020\\\340\227\302\001\200\000\020\\\340\230\306\001\200\000\000\354\330\212\000\000\312\000\b\354\330\212\000\000\314\000\020\354\330\212\000\000\316\000\030\354\330\212\000\000\320\000\000\354\330\211\000\000\352\000\b\354\330\211\000\000\354\000\020\354\330\211\000\000\356\000\030\354\330\211\000\000\360\000\000\354\330\210\000\000\362\000\b\354\330\210\000\000\364\000\020\354\330\210\000\000\366\000\030\354\330\210\000\000\370\177\300\214\277\000\000\212\277\177\300\214\277\001\000\217\277~\000\341\323\332\245\373\005z\000\341\323\332\251\353\005v\000\341\323\332\255\333\005r\000\341\323\332\261\313\005n\000\341\323\334\245\273\005j\000\341\323\334\251\253\005f\000\341\323\334\255\233\005b\000\341\323\334\261\213\005^\000\341\323\336\245{\005Z\000\341\323\336\251k\005V\000\341\323\336\255[\005R\000\341\323\336\261K\005N\000\341\323\340\245;\005J\000\341\323\340\251+\005F\000\341\323\340\255\033\005B\000\341\323\340\261\013\005>\000\341\323\342\245\373\004:\000\341\323\342\251\353\0046\000\341\323\342\255\333\0042\000\341\323\342\261\313\004.\000\341\323\344\245\273\004*\000\341\323\344\251\253\004&\000\341\323\344\255\233\004\"\000\341\323\344\261\213\004\036\000\341\323\346\245{\004\032\000\341\323\346\251k\004\026\000\341\323\346\255[\004\022\000\341\323\346\261K\004\016\000\341\323\350\245;\004\n\000\341\323\350\251+\004\006\000\341\323\350\255\033\004\002\000\341\323\350\261\013\004\000\000\217\277\000\000\212\277\177\300\214\277w\017\214\277\000\000\232\330\231\252\000\000\000\000\232\330\232\254\000\000v\017\214\277\000\000\232\330\233\256\000\000\000\000\232\330\234\260\000\000u\017\214\277\000\000\232\330\235\262\000\000\000\000\232\330\236\264\000\000t\017\214\277\000\000\232\330\237\266\000\000\000\000\232\330\240\270\000\000s\017\214\277\000\000\232\330\241\272\000\000\000\000\232\330\242\274\000\000r\017\214\277\000\000\232\330\243\276\000\000\000\000\232\330\244\300\000\000q\017\214\277\000\000\232\330\245\302\000\000\000\000\232\330\246\304\000\000p\017\214\277\000\000\232\330\247\306\000\000\000\000\232\330\250\310\000\000\177\300\214\277\000\000\212\277\177\300\214\277\001\000\217\277~\000\341\323\352\225\373\005z\000\341\323\352\231\353\005v\000\341\323\352\235\333\005r\000\341\323\352\241\313\005n\000\341\323\354\225\273\005j\000\341\323\354\231\253\005f\000\341\323\354\235\233\005b\000\341\323\354\241\213\005^\000\341\323\356\225{\005Z\000\341\323\356\231k\005V\000\341\323\356\235[\005R\000\341\323\356\241K\005N\000\341\323\360\225;\005J\000\341\323\360\231+\005F\000\341\323\360\235\033\005B\000\341\323\360\241\013\005>\000\341\323\362\225\373\004:\000\341\323\362\231\353\0046\000\341\323\362\235\333\0042\000\341\323\362\241\313\004.\000\341\323\364\225\273\004*\000\341\323\364\231\253\004&\000\341\323\364\235\233\004\"\000\341\323\364\241\213\004\036\000\341\323\366\225{\004\032\000\341\323\366\231k\004\026\000\341\323\366\235[\004\022\000\341\323\366\241K\004\016\000\341\323\370\225;\004\n\000\341\323\370\231+\004\006\000\341\323\370\235\033\004\002\000\341\323\370\241\013\004\000\000\217\277\000\000\212\277\020\377\020\200\200\000\000\000\021\200\021\202\000@\020\261B\376\204\277\000\000\354\330\222\000\000\216\000\b\354\330\222\000\000\220\000\020\354\330\222\000\000\226\000\030\354\330\222\000\000\230\000\000\354\330\223\000\000\232\000\b\354\330\223\000\000\234\000\020\354\330\223\000\000\236\000\030\354\330\223\000\000\222\000\000\354\330\224\000\000\240\000\b\354\330\224\000\000\242\000\020\354\330\224\000\000\244\000\030\354\330\224\000\000\224\177\300\214\277\000\000\212\277\001\000\217\277~\000\341\323\232\035\373\005z\000\341\323\232!\353\005v\000\341\323\232-\333\005r\000\341\323\2321\313\005n\000\341\323\234\035\273\005j\000\341\323\234!\253\005f\000\341\323\234-\233\005b\000\341\323\2341\213\005^\000\341\323\236\035{\005Z\000\341\323\236!k\005V\000\341\323\236-[\005R\000\341\323\2361K\005N\000\341\323\222\035;\005J\000\341\323\222!+\005F\000\341\323\222-\033\005B\000\341\323\2221\013\005>\000\341\323\240\035\373\004:\000\341\323\240!\353\0046\000\341\323\240-\333\0042\000\341\323\2401\313\004.\000\341\323\242\035\273\004*\000\341\323\242!\253\004&\000\341\323\242-\233\004\"\000\341\323\2421\213\004\036\000\341\323\244\035{\004\032\000\341\323\244!k\004\026\000\341\323\244-[\004\022\000\341\323\2441K\004\016\000\341\323\224\035;\004\n\000\341\323\224!+\004\006\000\341\323\224-\033\004\002\000\341\323\2241\013\004\000\000\217\277\000\000\212\277\000\000\354\330\215\000\000\216\000\b\354\330\215\000\000\220\000\020\354\330\215\000\000\222\000\030\354\330\215\000\000\224\000\000\354\330\214\000\000\226\000\b\354\330\214\000\000\230\000\020\354\330\214\000\000\232\000\030\354\330\214\000\000\214\000\000\354\330\213\000\000\234\000\b\354\330\213\000\000\236\000\020\354\330\213\000\000\240\000\030\354\330\213\000\000\242\177\300\214\277\000\000\212\277\001\000\217\277~\000\341\323\226\035\373\005z\000\341\323\226!\353\005v\000\341\323\226%\333\005r\000\341\323\226)\313\005n\000\341\323\230\035\273\005j\000\341\323\230!\253\005f\000\341\323\230%\233\005b\000\341\323\230)\213\005^\000\341\323\232\035{\005Z\000\341\323\232!k\005V\000\341\323\232%[\005R\000\341\323\232)K\005N\000\341\323\214\035;\005J\000\341\323\214!+\005F\000\341\323\214%\033\005B\000\341\323\214)\013\005>\000\341\323\234\035\373\004:\000\341\323\234!\353\0046\000\341\323\234%\333\0042\000\341\323\234)\313\004.\000\341\323\236\035\273\004*\000\341\323\236!\253\004&\000\341\323\236%\233\004\"\000\341\323\236)\213\004\036\000\341\323\240\035{\004\032\000\341\323\240!k\004\026\000\341\323\240%[\004\022\000\341\323\240)K\004\016\000\341\323\242\035;\004\n\000\341\323\242!+\004\006\000\341\323\242%\033\004\002\000\341\323\242)\013\004\000\000\217\277\000\000\212\277\000\000\354\330\207\000\000\214\000\b\354\330\207\000\000\216\000\020\354\330\207\000\000\220\000\030\354\330\207\000\000\222\000\000\354\330\206\000\000\224\000\b\354\330\206\000\000\226\000\020\354\330\206\000\000\230\000\030\354\330\206\000\000\206\000\000\354\330\205\000\000\232\000\b\354\330\205\000\000\234\000\020\354\330\205\000\000\236\000\030\354\330\205\000\000\240\000\000\354\330\212\000\000\242\000\b\354\330\212\000\000\244\000\020\354\330\212\000\000\246\000\030\354\330\212\000\000\212\000\000\354\330\211\000\000\250\000\b\354\330\211\000\000\252\000\020\354\330\211\000\000\254\000\030\354\330\211\000\000\256\000\000\354\330\210\000\000\260\000\b\354\330\210\000\000\262\000\020\354\330\210\000\000\264\000\030\354\330\210\000\000\210\177\300\214\277\000\000\212\277\001\000\217\277~\000\341\323\224\031\373\005z\000\341\323\224\035\353\005v\000\341\323\224!\333\005r\000\341\323\224%\313\005n\000\341\323\226\031\273\005j\000\341\323\226\035\253\005f\000\341\323\226!\233\005b\000\341\323\226%\213\005^\000\341\323\230\031{\005Z\000\341\323\230\035k\005V\000\341\323\230![\005R\000\341\323\230%K\005N\000\341\323\206\031;\005J\000\341\323\206\035+\005F\000\341\323\206!\033\005B\000\341\323\206%\013\005>\000\341\323\232\031\373\004:\000\341\323\232\035\353\0046\000\341\323\232!\333\0042\000\341\323\232%\313\004.\000\341\323\234\031\273\004*\000\341\323\234\035\253\004&\000\341\323\234!\233\004\"\000\341\323\234%\213\004\036\000\341\323\236\031{\004\032\000\341\323\236\035k\004\026\000\341\323\236![\004\022\000\341\323\236%K\004\016\000\341\323\240\031;\004\n\000\341\323\240\035+\004\006\000\341\323\240!\033\004\002\000\341\323\240%\013\004\000\000\217\277\000\000\212\277\001\000\217\277~\000\341\323\250E\373\005z\000\341\323\250I\353\005v\000\341\323\250M\333\005r\000\341\323\250\025\313\005n\000\341\323\252E\273\005j\000\341\323\252I\253\005f\000\341\323\252M\233\005b\000\341\323\252\025\213\005^\000\341\323\254E{\005Z\000\341\323\254Ik\005V\000\341\323\254M[\005R\000\341\323\254\025K\005N\000\341\323\256E;\005J\000\341\323\256I+\005F\000\341\323\256M\033\005B\000\341\323\256\025\013\005>\000\341\323\260E\373\004:\000\341\323\260I\353\0046\000\341\323\260M\333\0042\000\341\323\260\025\313\004.\000\341\323\262E\273\004*\000\341\323\262I\253\004&\000\341\323\262M\233\004\"\000\341\323\262\025\213\004\036\000\341\323\264E{\004\032\000\341\323\264Ik\004\026\000\341\323\264M[\004\022\000\341\323\264\025K\004\016\000\341\323\210E;\004\n\000\341\323\210I+\004\006\000\341\323\210M\033\004\002\000\341\323\210\025\013\004\000\000\217\277\000\000\212\277\000\001\000\260\000\000\230}j \200\276\001\000\210\277\000\000\212\277~\000\376\207\023\b-)\204\000\000\322\203\rQ\000\000\000\205\322\013,\003\000\n\022\002\222\206\000\350\321\n,\003\002\210\000\350\321\001\025\b\006\207\000\377\321\207\005\000\004\237\b\013#\237\020\023#\206\000\b\322\206\003!\000\204\000\217\322\201\b\003\000\212\000\217\322\201\020\003\000\n\020\021i\206\000\b\322\206\001\021\006\237\020\023#\214\000\b\322\206\001)\006\216\000\217\322\201\020\003\000\000\200l\334\214~\177\000\220\000\b\322\206\0019\006\n\020\375h\000\200l\334\220\177\177\000\237\374\376\"\210\000\217\322\201\374\002\000\n\374\374h\237\374\376\"~\000\217\322\201\374\002\000\222\000\b\322\206\001!\006\224\000\b\322\206\001\371\005\220\002\000(\000\200l\334\222\200\177\000\000\200l\334\224\201\177\000 \200l\334\214z\177\000 \200l\334\220{\177\000 \200l\334\222|\177\000 \200l\334\224}\177\000@\200l\334\214v\177\000@\200l\334\220w\177\000@\200l\334\222x\177\000@\200l\334\224y\177\000`\200l\334\214r\177\000`\200l\334\220s\177\000`\200l\334\222t\177\000`\200l\334\224u\177\000r\000\350\321\000\025\b\006\237\344\346\"t\000\217\322\201\344\002\000\n\344\344h\237\344\346\"v\000\b\322\206\001\321\005x\000\217\322\201\344\002\000\000\200l\334vn\177\000z\000\b\322\206\001\341\005\n\344\334h\000\200l\334zo\177\000\237\334\336\"r\000\217\322\201\334\002\000\n\334\334h\237\334\336\"n\000\217\322\201\334\002\000|\000\b\322\206\001\311\005\200\000\b\322\206\001\271\005\240\002\000(\000\200l\334|p\177\000\000\200l\334\200q\177\000 \200l\334vj\177\000 \200l\334zk\177\000 \200l\334|l\177\000 \200l\334\200m\177\000@\200l\334vf\177\000@\200l\334zg\177\000@\200l\334|h\177\000@\200l\334\200i\177\000`\200l\334vb\177\000`\200l\334zc\177\000`\200l\334|d\177\000`\200l\334\200e\177\000b\000\350\321\000\025\b\006\237\304\306\"d\000\217\322\201\304\002\000\n\304\304h\237\304\306\"f\000\b\322\206\001\221\005h\000\217\322\201\304\002\000\000\200l\334f^\177\000j\000\b\322\206\001\241\005\n\304\274h\000\200l\334j_\177\000\237\274\276\"b\000\217\322\201\274\002\000\n\274\274h\237\274\276\"\260\002\000(^\000\217\322\201\274\002\000\000\000\350\321\000\025\b\006l\000\b\322\206\001\211\005p\000\b\322\206\001y\005\237\000\002\"\000\200l\334l`\177\000\000\200l\334pa\177\000 \200l\334fZ\177\000 \200l\334j[\177\000 \200l\334l\\\177\000 \200l\334p]\177\000@\200l\334fV\177\000@\200l\334jW\177\000@\200l\334lX\177\000@\200l\334pY\177\000`\200l\334fR\177\000`\200l\334jS\177\000`\200l\334lT\177\000`\200l\334pU\177\000R\000\217\322\201\000\002\000\n\000\000h\237\000\002\"V\000\217\322\201\000\002\000\n\000\000hT\000\b\322\206\001I\005X\000\b\322\206\001Y\005\237\000\002\"\000\200l\334TN\177\000\000\200l\334XO\177\000N\000\217\322\201\000\002\000\n\000\000h\237\000\002\"\000\000\217\322\201\000\002\000Z\000\b\322\206\0019\005\\\000\b\322\206\001\001\004\000\200l\334ZP\177\000\000\200l\334\\Q\177\000 \200l\334TJ\177\000 \200l\334XK\177\000 \200l\334ZL\177\000 \200l\334\\M\177\000@\200l\334TF\177\000@\200l\334XG\177\000@\200l\334ZH\177\000@\200l\334\\I\177\000`\200l\334TB\177\000`\200l\334XC\177\000`\200l\334ZD\177\000`\200l\334\\E\177\000\377,\205h\200\000\000\000\237\204\206\"D\000\205\322\n\206\002\000E\000\205\322\013\204\002\000B\000\350\321\n\204\002\002C\000\377\321C\211\026\005B\000\b\322B\003!\000B\000\b\322B\001\021\006D\000\b\322B\001)\006F\000\b\322B\0019\006\000\200l\334D>\177\000\000\200l\334F?\177\000>\000\b\322B\001!\006H\000\b\322B\001\371\005\000\200l\334>@\177\000\000\200l\334HA\177\000 \200l\334D:\177\000 \200l\334F;\177\000 \200l\334><\177\000 \200l\334H=\177\000@\200l\334D6\177\000@\200l\334F7\177\000@\200l\334>8\177\000@\200l\334H9\177\000`\200l\334D2\177\000`\200l\334F3\177\000`\200l\334>4\177\000`\200l\334H5\177\0002\000\b\322B\001\321\0054\000\b\322B\001\341\005\000\200l\3342.\177\000\000\200l\3344/\177\000.\000\b\322B\001\311\0056\000\b\322B\001\271\005\000\200l\334.0\177\000\000\200l\33461\177\000 \200l\3342*\177\000 \200l\3344+\177\000 \200l\334.,\177\000 \200l\3346-\177\000@\200l\3342&\177\000@\200l\3344'\177\000@\200l\334.(\177\000@\200l\3346)\177\000`\200l\3342\"\177\000`\200l\3344#\177\000`\200l\334.$\177\000`\200l\3346%\177\000\"\000\b\322B\001\221\005$\000\b\322B\001\241\005\000\200l\334\"\036\177\000\000\200l\334$\037\177\000\036\000\b\322B\001\211\005&\000\b\322B\001y\005\000\200l\334\036 \177\000\000\200l\334&!\177\000 \200l\334\"\032\177\000 \200l\334$\033\177\000 \200l\334\036\034\177\000 \200l\334&\035\177\000@\200l\334\"\026\177\000@\200l\334$\027\177\000@\200l\334\036\030\177\000@\200l\334&\031\177\000`\200l\334\"\022\177\000`\200l\334$\023\177\000`\200l\334\036\024\177\000`\200l\334&\025\177\000\022\000\b\322B\001I\005\024\000\b\322B\001Y\005\000\200l\334\022\016\177\000\000\200l\334\024\017\177\000\016\000\b\322B\0019\005\000\000\b\322B\001\001\004\000\200l\334\016\020\177\000\000\200l\334\000\021\177\000 \200l\334\022\n\177\000 \200l\334\024\013\177\000 \200l\334\016\f\177\000 \200l\334\000\r\177\000@\200l\334\022\006\177\000@\200l\334\024\007\177\000@\200l\334\016\b\177\000@\200l\334\000\t\177\000`\200l\334\022\002\177\000`\200l\334\024\003\177\000`\200l\334\016\004\177\000`\200ln\000\000\000\000\000\000\000V\000\000\000\000\000\000\000\365\376\377o\000\000\000\000x\007\000\000\000\000\000\000\004\000\000\000\000\000\000\000\240\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000Linker: AMD LLD 19.0.0 (/longer_pathname_so_that_rpms_can_support_packaging_the_debug_info_for_all_os_profiles/src/llvm-project/llvm c87081df219c42dc27c5b6d86c0525bc7d01f727)\000AMD clang version 19.0.0git (https://github.com/RadeonOpenCompute/llvm-project roc-6.4.1 25184 c87081df219c42dc27c5b6d86c0525bc7d01f727)\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\000\000\000\000\002\b\000@J\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\022\003\007\000\000\031\000\000\000\000\000\000(\035\000\000\000\000\000\000\034\000\000\000\021\003\006\000@\b\000\000\000\000\000\000@\000\000\000\000\000\000\000:\000\000\000\021\000\n\000\260Z\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000.note\000.dynsym\000.gnu.hash\000.hash\000.dynstr\000.rodata\000.text\000.dynamic\000.relro_padding\000.bss\000.AMDGPU.csdata\000.comment\000.symtab\000.shstrtab\000.strtab\000\000_Z8micro_tk13micro_globals\000_Z8micro_tk13micro_globals.kd\000__hip_cuid_a387003902ba631b`\000\000\000\000\000\000\000\005\000\000\000\001\000\000\000\b\000\000\000\000\000\000\000\030\000\000\000\000\000\000\000\017\000\000\000\366\377\377o\002\000\000\000\000\000\000\000x\007\000\000\000\000\000\000x\007\000\000\000\000\000\000(\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\bb\000\000\000\000\000\000@\b\000\000\000\000\000\000@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\000\000\000\001\000\000\000\006\000\000\000\000\000\000\000\000\031\000\000\000\000\000\000\000\t\000\000\000\000\000\000@!\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\000\000\000\006\000\000\000\003\000\000\000\000\000\000\000@J\000\000\000\000\000\000@*\000\000\000\000\000\000p\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\b\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000>\000\000\000\b\000\000\000\003\000\000\000\000\000\000\000\260J\000\000\000\000\000\000\260*\000\000\000\000\000\000P\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\000\000\000\b\000\000\000\003\000\000\000\000\000\000\000\260Z\000\000\000\000\000\000\260*\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260*\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\000\000\000\001\000\000\0000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260*\000\000\000\000\000\0009\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000j\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360+\000\000\000\000\000\000x\000\000\000\000\000\000\000\017\000\000\000\002\000\000\000\b\000\000\000\000\000\000\000\030\000\000\000\000\000\000\000r\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000h,\000\000\000\000\000\000\204\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354,\000\000\000\000\000\000_\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
	.size	.L__unnamed_2, 16720

	.type	__hip_fatbin_wrapper,@object    # @__hip_fatbin_wrapper
	.section	.hipFatBinSegment,"aw",@progbits
	.p2align	3, 0x0
__hip_fatbin_wrapper:
	.long	1212764230                      # 0x48495046
	.long	1                               # 0x1
	.quad	.L__unnamed_2
	.quad	0
	.size	__hip_fatbin_wrapper, 24

	.type	__hip_gpubin_handle_a387003902ba631b,@object # @__hip_gpubin_handle_a387003902ba631b
	.local	__hip_gpubin_handle_a387003902ba631b
	.comm	__hip_gpubin_handle_a387003902ba631b,8,8
	.section	.init_array,"aw",@init_array
	.p2align	3, 0x0
	.quad	__hip_module_ctor
	.type	__hip_cuid_a387003902ba631b,@object # @__hip_cuid_a387003902ba631b
	.bss
	.globl	__hip_cuid_a387003902ba631b
__hip_cuid_a387003902ba631b:
	.byte	0                               # 0x0
	.size	__hip_cuid_a387003902ba631b, 1

	.section	".linker-options","e",@llvm_linker_options
	.data
	.p2align	3, 0x0
.L_ZTIN10__cxxabiv115__forced_unwindE.DW.stub:
	.quad	_ZTIN10__cxxabiv115__forced_unwindE
.L_ZTIN8pybind1117builtin_exceptionE.DW.stub:
	.quad	_ZTIN8pybind1117builtin_exceptionE
.L_ZTIN8pybind1117error_already_setE.DW.stub:
	.quad	_ZTIN8pybind1117error_already_setE
.L_ZTIN8pybind1120reference_cast_errorE.DW.stub:
	.quad	_ZTIN8pybind1120reference_cast_errorE
.L_ZTISt11range_error.DW.stub:
	.quad	_ZTISt11range_error
.L_ZTISt12domain_error.DW.stub:
	.quad	_ZTISt12domain_error
.L_ZTISt12length_error.DW.stub:
	.quad	_ZTISt12length_error
.L_ZTISt12out_of_range.DW.stub:
	.quad	_ZTISt12out_of_range
.L_ZTISt14overflow_error.DW.stub:
	.quad	_ZTISt14overflow_error
.L_ZTISt16invalid_argument.DW.stub:
	.quad	_ZTISt16invalid_argument
.L_ZTISt16nested_exception.DW.stub:
	.quad	_ZTISt16nested_exception
.L_ZTISt9bad_alloc.DW.stub:
	.quad	_ZTISt9bad_alloc
.L_ZTISt9exception.DW.stub:
	.quad	_ZTISt9exception
	.hidden	DW.ref.__gxx_personality_v0
	.weak	DW.ref.__gxx_personality_v0
	.section	.data.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,comdat
	.p2align	3, 0x0
	.type	DW.ref.__gxx_personality_v0,@object
	.size	DW.ref.__gxx_personality_v0, 8
DW.ref.__gxx_personality_v0:
	.quad	__gxx_personality_v0
	.ident	"AMD clang version 19.0.0git (https://github.com/RadeonOpenCompute/llvm-project roc-6.4.1 25184 c87081df219c42dc27c5b6d86c0525bc7d01f727)"
	.section	".note.GNU-stack","",@progbits
	.addrsig
	.addrsig_sym __gxx_personality_v0
	.addrsig_sym _Z23__device_stub__micro_tk13micro_globals
	.addrsig_sym _ZL23pybind11_exec_tk_kernelP7_object
	.addrsig_sym _ZN8pybind1117error_already_set23m_fetched_error_deleterEPNS_6detail25error_fetch_and_normalizeE
	.addrsig_sym _ZN8pybind116detail19translate_exceptionENSt15__exception_ptr13exception_ptrE
	.addrsig_sym pybind11_static_get
	.addrsig_sym pybind11_static_set
	.addrsig_sym pybind11_traverse
	.addrsig_sym pybind11_clear
	.addrsig_sym PyObject_GenericGetDict
	.addrsig_sym PyObject_GenericSetDict
	.addrsig_sym pybind11_meta_call
	.addrsig_sym pybind11_meta_setattro
	.addrsig_sym pybind11_meta_getattro
	.addrsig_sym pybind11_meta_dealloc
	.addrsig_sym _ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS2_13function_callEE_8__invokeESJ_
	.addrsig_sym _ZN8pybind1112cpp_function10dispatcherEP7_objectS2_S2_
	.addrsig_sym _ZN8pybind116detail36function_record_PyTypeObject_methods15tp_dealloc_implEP7_object
	.addrsig_sym _ZN8pybind116detail36function_record_PyTypeObject_methods12tp_init_implEP7_objectS3_S3_
	.addrsig_sym _ZN8pybind116detail36function_record_PyTypeObject_methods13tp_alloc_implEP11_typeobjectl
	.addrsig_sym _ZN8pybind116detail36function_record_PyTypeObject_methods11tp_new_implEP11_typeobjectP7_objectS5_
	.addrsig_sym _ZN8pybind116detail36function_record_PyTypeObject_methods12tp_free_implEPv
	.addrsig_sym _ZN8pybind116detail36function_record_PyTypeObject_methodsL14reduce_ex_implEP7_objectS3_S3_
	.addrsig_sym pybind11_object_new
	.addrsig_sym pybind11_object_init
	.addrsig_sym pybind11_object_dealloc
	.addrsig_sym _ZN8pybind116detail24deregister_instance_implEPvPNS0_8instanceE
	.addrsig_sym _ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeESZ_
	.addrsig_sym _ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE_8__invokeESZ_
	.addrsig_sym __hip_module_ctor
	.addrsig_sym __hip_module_dtor
	.addrsig_sym _Unwind_Resume
	.addrsig_sym _Z8micro_tk13micro_globals
	.addrsig_sym _ZZ16PyInit_tk_kernelE5slots
	.addrsig_sym _ZGVZ16PyInit_tk_kernelE5slots
	.addrsig_sym _ZZ16PyInit_tk_kernelE3def
	.addrsig_sym _ZTVN10__cxxabiv120__si_class_type_infoE
	.addrsig_sym _ZTSN8pybind1117error_already_setE
	.addrsig_sym _ZTISt9exception
	.addrsig_sym _ZTIN8pybind1117error_already_setE
	.addrsig_sym _ZTISt13runtime_error
	.addrsig_sym _ZTSN8pybind1110cast_errorE
	.addrsig_sym _ZTSN8pybind1117builtin_exceptionE
	.addrsig_sym _ZTIN8pybind1117builtin_exceptionE
	.addrsig_sym _ZTIN8pybind1110cast_errorE
	.addrsig_sym PyByteArray_Type
	.addrsig_sym _ZTSSt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTVN10__cxxabiv117__class_type_infoE
	.addrsig_sym _ZTSSt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTISt19_Sp_counted_deleterIPN8pybind116detail25error_fetch_and_normalizeEPFvS3_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
	.addrsig_sym _ZTSPFvPN8pybind116detail25error_fetch_and_normalizeEE
	.addrsig_sym _ZZN8pybind116detail25get_num_interpreters_seenEvE7counter
	.addrsig_sym _ZZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager
	.addrsig_sym _ZGVZN8pybind116detail24get_internals_pp_managerEvE20internals_pp_manager
	.addrsig_sym __dso_handle
	.addrsig_sym PyDict_Type
	.addrsig_sym PyType_Type
	.addrsig_sym PyProperty_Type
	.addrsig_sym _ZZN8pybind116detail25enable_dynamic_attributesEP15_heaptypeobjectE6getset
	.addrsig_sym PyLong_Type
	.addrsig_sym PyBool_Type
	.addrsig_sym _ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E9signature
	.addrsig_sym _ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_E5types
	.addrsig_sym _Py_NoneStruct
	.addrsig_sym PyInstanceMethod_Type
	.addrsig_sym PyCFunction_Type
	.addrsig_sym _ZZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11
	.addrsig_sym _ZGVZN8pybind116detail30get_local_internals_pp_managerEvE17this_module_idstrB5cxx11
	.addrsig_sym _ZZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager
	.addrsig_sym _ZGVZN8pybind116detail30get_local_internals_pp_managerEvE26local_internals_pp_manager
	.addrsig_sym _ZN8pybind116detailL28function_record_PyTypeObjectE
	.addrsig_sym _ZN8pybind116detail36function_record_PyTypeObject_methodsL12tp_name_implE
	.addrsig_sym _ZN8pybind116detail36function_record_PyTypeObject_methodsL15tp_methods_implE
	.addrsig_sym PyModule_Type
	.addrsig_sym _ZTIN10__cxxabiv115__forced_unwindE
	.addrsig_sym _ZTSN8pybind1120reference_cast_errorE
	.addrsig_sym _ZTIN8pybind1120reference_cast_errorE
	.addrsig_sym _Py_NotImplementedStruct
	.addrsig_sym _ZTISt9bad_alloc
	.addrsig_sym _ZTISt12domain_error
	.addrsig_sym _ZTISt16invalid_argument
	.addrsig_sym _ZTISt12length_error
	.addrsig_sym _ZTISt12out_of_range
	.addrsig_sym _ZTISt11range_error
	.addrsig_sym _ZTISt14overflow_error
	.addrsig_sym _ZTISt16nested_exception
	.addrsig_sym PyBaseObject_Type
	.addrsig_sym _ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E9signature
	.addrsig_sym _ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL11bind_kernelITnDaXadL_Z8micro_tk13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E5types
	.addrsig_sym _Py_TrueStruct
	.addrsig_sym _Py_FalseStruct
	.addrsig_sym PyFloat_Type
	.addrsig_sym _ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E9signature
	.addrsig_sym _ZZN8pybind1112cpp_function10initializeIZN7kittens2pyL13bind_functionITnDaXadL_Z14dispatch_micro13micro_globalsEES5_NS_7module_EPKcJNS2_2glI14__hip_bfloat16Lin1ELin1ELin1ELin1EJEEESB_SB_EEEvT1_T2_DpMT0_T3_EUlNS_6objectESI_SI_E_vJSI_SI_SI_EJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFSE_DpT1_EDpRKT2_E5types
	.addrsig_sym .L__unnamed_2
	.addrsig_sym __hip_fatbin_wrapper
	.addrsig_sym __hip_cuid_a387003902ba631b
